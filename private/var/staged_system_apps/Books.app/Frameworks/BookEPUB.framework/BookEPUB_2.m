void (*sub_10A880(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 224, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v1 + 224);
  return sub_10A8E8;
}

void sub_10A8E8(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v3 = *a1;
  swift_weakAssign((*a1)[4] + 224, (*a1)[3]);
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess(v3);
  }
  else
  {
    v4 = v3[4] + 224;
    swift_endAccess(v3);
    swift_release();
    Strong = swift_weakLoadStrong(v4);
    if (Strong)
    {
      v6 = v3[4];
      *v3 = Strong;
      v7 = swift_allocObject(&unk_381F08, 24);
      swift_weakInit(v7 + 16, v6);
      v8 = sub_319AC(&qword_3BC918);
      v9 = sub_3DCC0(&qword_3BC920, &qword_3BC918, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Publisher<>.sink(receiveValue:)(sub_112428, v7, v8, v9);
      swift_release();
      swift_release();
      v6 += 208;
      v10 = swift_beginAccess(v6, v3, 33, 0);
      AnyCancellable.store(in:)(v6, v10);
      swift_endAccess(v3);
      swift_release();
    }
  }
  free(v3);
}

uint64_t sub_10AA28(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    *(_BYTE *)(result + 216) = v2 == 1;
    return swift_release(result);
  }
  return result;
}

uint64_t sub_10AA80()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 232, v2, 0, 0);
  return swift_weakLoadStrong(v0 + 232);
}

double sub_10AAC0(uint64_t a1)
{
  double result;

  sub_112440(a1);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void (*sub_10AAE4(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 232, v3, 33, 0);
  v3[3] = swift_weakLoadStrong(v1 + 232);
  return sub_10AB4C;
}

void sub_10AB4C(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v3 = *a1;
  swift_weakAssign((*a1)[4] + 232, (*a1)[3]);
  if ((a2 & 1) != 0)
  {
    swift_release();
    swift_endAccess(v3);
  }
  else
  {
    v4 = v3[4] + 232;
    swift_endAccess(v3);
    swift_release();
    Strong = swift_weakLoadStrong(v4);
    if (Strong)
    {
      v6 = v3[4];
      *v3 = Strong;
      v7 = swift_allocObject(&unk_381F08, 24);
      swift_weakInit(v7 + 16, v6);
      v8 = sub_319AC(&qword_3BC918);
      v9 = sub_3DCC0(&qword_3BC920, &qword_3BC918, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Publisher<>.sink(receiveValue:)(sub_112428, v7, v8, v9);
      swift_release();
      swift_release();
      v6 += 208;
      v10 = swift_beginAccess(v6, v3, 33, 0);
      AnyCancellable.store(in:)(v6, v10);
      swift_endAccess(v3);
      swift_release();
    }
  }
  free(v3);
}

double sub_10AC8C()
{
  uint64_t v0;
  char *v1;
  uint64_t Strong;
  double result;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  __int128 v8;
  char v9;
  __int128 v10;

  v1 = (char *)(v0 + 288);
  if (*(_BYTE *)(v0 + 290) == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + 176);
    if (Strong)
    {
      v4 = (void *)Strong;
      v5 = swift_unknownObjectWeakLoadStrong(v0 + 168);
      if (v5)
      {
        v6 = (void *)v5;
        objc_msgSend(v4, "removeFromSuperview");
        v7 = objc_msgSend(v6, "layer");
        objc_msgSend(v7, "setMask:", 0);

        v4 = v7;
      }

    }
    if ((*(_BYTE *)(v0 + 128) & 1) == 0)
    {
      v8 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 256) = v8;
      *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 112);
      *v1 = 0;
      result = 0.0;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
      *(_OWORD *)(v0 + 80) = 0u;
      *(_BYTE *)(v0 + 128) = 1;
    }
  }
  else
  {
    if (*(_BYTE *)(v0 + 216) == 1)
    {
      *(_BYTE *)(v0 + 289) = 1;
      v9 = *v1;
      v10 = *(_OWORD *)(v0 + 256);
      *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 240);
      *(_OWORD *)(v0 + 96) = v10;
      *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 272);
      *(_BYTE *)(v0 + 128) = v9;
    }
    return sub_10D358();
  }
  return result;
}

double sub_10AD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _QWORD v16[3];

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 296);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v0 + 304);
    sub_10C078();
    ObjectType = swift_getObjectType(v4);
    v16[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(ObjectType, v5);
    v7 = swift_allocObject(&unk_381F08, 24, 7);
    swift_weakInit(v7 + 16, v0);
    v8 = sub_319AC((uint64_t *)&unk_3BCEC0);
    v9 = sub_3DCC0((unint64_t *)&unk_3BE700, (uint64_t *)&unk_3BCEC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v10 = Publisher<>.sink(receiveValue:)(sub_1127A0, v7, v8, v9);
    swift_release(v7);
    swift_release(v16[0]);
    v11 = swift_beginAccess(v1 + 208, v16, 33, 0);
    AnyCancellable.store(in:)(v1 + 208, v11);
    swift_endAccess(v16);
    v12 = swift_release(v10);
    v16[0] = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v5 + 152))(ObjectType, v5, v12);
    v13 = swift_allocObject(&unk_381F08, 24, 7);
    swift_weakInit(v13 + 16, v1);
    v14 = Publisher<>.sink(receiveValue:)(sub_1127A8, v13, v8, v9);
    swift_release(v13);
    swift_release(v16[0]);
    v15 = swift_beginAccess(v1 + 208, v16, 33, 0);
    AnyCancellable.store(in:)(v1 + 208, v15);
    swift_endAccess(v16);
    swift_unknownObjectRelease(v4);
    *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  }
  return result;
}

void sub_10AF70(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + 344);
    if (v6)
    {
      v7 = (_BYTE *)v6;
      v8 = swift_weakLoadStrong(v5 + 312);
      if (v8)
      {
        v9 = v8;
        sub_1C2EC4(v2);
        swift_release(v9);
      }
      if (v2)
      {
        v7[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling] = 0;
        sub_10D358();
      }
      else
      {
        sub_10D5BC();
      }
      swift_release(v5);

    }
    else
    {
      swift_release(v5);
    }
  }
}

double sub_10B034(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    if (v2)
    {
      if (*(_BYTE *)(Strong + 336) == 1)
        sub_10C204();
    }
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_10B0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[24];
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  char v66[24];

  v1 = v0;
  v2 = sub_319AC((uint64_t *)&unk_3BCED0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 344);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = (_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
    swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v66, 0, 0);
    v10 = swift_weakAssign(v1 + 312, *v9);
    v11 = swift_weakLoadStrong(v10);
    if (v11)
    {
      v12 = v11;
      v13 = (uint64_t)&v8[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity];
      swift_beginAccess(&v8[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity], v62, 0, 0);
      sub_1127B0(v13, (uint64_t)v63);
      v14 = v64;
      v60 = v3;
      v61 = v2;
      if (v64)
      {
        v15 = v65;
        sub_472D0(v63, v64);
        v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 136))(v14, v15);
        sub_34488(v63);
        if ((v16 & 1) != 0)
        {
          v17 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6C61636974726576, 0xE800000000000000, 0x746E6F7A69726F68, 0xEA00000000006C61, 0);
          swift_bridgeObjectRelease(0xE800000000000000);
        }
        else
        {
          swift_bridgeObjectRelease(0xEA00000000006C61);
          v17 = 1;
        }
      }
      else
      {
        sub_52128((uint64_t)v63, &qword_3B7018);
        v17 = 0;
      }
      sub_10A368(v17 & 1);
      v18 = *(_QWORD *)(v12 + 24);
      ObjectType = swift_getObjectType(*(_QWORD *)(v12 + 16));
      v63[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 152))(ObjectType, v18);
      v20 = swift_allocObject(&unk_381F08, 24, 7);
      swift_weakInit(v20 + 16, v1);
      v21 = sub_319AC(&qword_3BCEE0);
      v22 = sub_3DCC0(&qword_3BCEE8, &qword_3BCEE0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v23 = Publisher<>.sink(receiveValue:)(sub_1127F8, v20, v21, v22);
      swift_release(v20);
      swift_release(v63[0]);
      v24 = v1 + 208;
      v25 = swift_beginAccess(v1 + 208, v63, 33, 0);
      AnyCancellable.store(in:)(v1 + 208, v25);
      swift_endAccess(v63);
      swift_release(v23);
      v26 = *(_QWORD *)(v12 + 24);
      v27 = swift_getObjectType(*(_QWORD *)(v12 + 16));
      v63[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 136))(v27, v26);
      v28 = swift_allocObject(&unk_381F08, 24, 7);
      swift_weakInit(v28 + 16, v1);
      v29 = sub_319AC(&qword_3B8EB0);
      v30 = sub_3DCC0(&qword_3B8EB8, &qword_3B8EB0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v31 = Publisher<>.sink(receiveValue:)(sub_1127F8, v28, v29, v30);
      swift_release(v28);
      swift_release(v63[0]);
      v32 = swift_beginAccess(v1 + 208, v63, 33, 0);
      AnyCancellable.store(in:)(v1 + 208, v32);
      swift_endAccess(v63);
      swift_release(v31);
      v33 = *(_QWORD *)(v12 + 24);
      v34 = swift_getObjectType(*(_QWORD *)(v12 + 16));
      v63[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 144))(v34, v33);
      v35 = swift_allocObject(&unk_381F08, 24, 7);
      swift_weakInit(v35 + 16, v1);
      v36 = Publisher<>.sink(receiveValue:)(sub_112800, v35, v29, v30);
      swift_release(v35);
      swift_release(v63[0]);
      v37 = swift_beginAccess(v1 + 208, v63, 33, 0);
      AnyCancellable.store(in:)(v1 + 208, v37);
      swift_endAccess(v63);
      swift_release(v36);
      v38 = *(_QWORD *)(v12 + 24);
      v39 = swift_getObjectType(*(_QWORD *)(v12 + 16));
      v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 96))(v39, v38);
      v63[0] = v40;
      v41 = swift_allocObject(&unk_382058, 88, 7);
      *(_QWORD *)(v41 + 16) = "/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookEPUB/Source/BookContentModule/V"
                              "iews/ReadingLoupe/ReadingLoupeStateController.swift";
      *(_QWORD *)(v41 + 24) = 141;
      *(_BYTE *)(v41 + 32) = 2;
      *(_QWORD *)(v41 + 40) = "bookContentViewController";
      *(_QWORD *)(v41 + 48) = 25;
      *(_BYTE *)(v41 + 56) = 2;
      *(_QWORD *)(v41 + 72) = 0;
      *(_QWORD *)(v41 + 80) = 0;
      *(_QWORD *)(v41 + 64) = 194;
      v42 = sub_319AC(&qword_3BCEF0);
      v43 = sub_319AC(&qword_3BCEF8);
      v44 = sub_3DCC0(&qword_3BCF00, &qword_3BCEF0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      Publisher.map<A>(_:)(sub_11282C, v41, v42, v43, v44);
      swift_release(v40);
      swift_release(v41);
      v45 = swift_allocObject(&unk_381F08, 24, 7);
      swift_weakInit(v45 + 16, v1);
      v46 = swift_allocObject(&unk_382080, 32, 7);
      *(_QWORD *)(v46 + 16) = sub_112878;
      *(_QWORD *)(v46 + 24) = v45;
      v47 = sub_3DCC0(&qword_3BCF08, (uint64_t *)&unk_3BCED0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
      v48 = v61;
      v49 = Publisher<>.sink(receiveValue:)(sub_1128A4, v46, v61, v47);
      v50 = swift_release(v46);
      (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v5, v48, v50);
      v51 = swift_beginAccess(v1 + 208, v63, 33, 0);
      AnyCancellable.store(in:)(v1 + 208, v51);
      swift_endAccess(v63);
      swift_release(v49);
      v63[0] = *(_QWORD *)(v12 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_layoutStateSubject);
      v52 = sub_319AC(&qword_3BCF10);
      v53 = sub_3DCC0(&qword_3BCF18, &qword_3BCF10, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
      v63[0] = Publisher.eraseToAnyPublisher()(v52, v53);
      v54 = swift_allocObject(&unk_381F08, 24, 7);
      swift_weakInit(v54 + 16, v1);
      v55 = sub_319AC(&qword_3BCF20);
      v56 = sub_3DCC0((unint64_t *)&unk_3BCF28, &qword_3BCF20, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v57 = Publisher<>.sink(receiveValue:)(sub_1128C8, v54, v55, v56);
      swift_release(v54);
      swift_release(v63[0]);
      v58 = swift_beginAccess(v24, v63, 33, 0);
      AnyCancellable.store(in:)(v24, v58);
      swift_endAccess(v63);

      swift_release(v12);
      *(_QWORD *)&result = swift_release(v57).n128_u64[0];
    }
    else
    {

    }
  }
  return result;
}

void sub_10B748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + 344);
    if (!v5)
    {
LABEL_6:
      swift_release(v4);
      return;
    }
    v6 = (void *)v5;
    v7 = v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider;
    swift_beginAccess(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider, &v12, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType(v8);
      LOBYTE(v10) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(ObjectType, v10);
      swift_unknownObjectRelease(v9);

      if ((v10 & 1) != 0)
        *(_BYTE *)(v4 + 32) = 0;
      goto LABEL_6;
    }
    swift_release(v4);

  }
}

void sub_10B820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  _BYTE v13[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = swift_unknownObjectWeakLoadStrong(Strong + 344);
    if (!v5)
    {
LABEL_6:
      swift_release(v4);
      return;
    }
    v6 = (void *)v5;
    v7 = v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider;
    swift_beginAccess(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider, &v12, 0, 0);
    v8 = swift_unknownObjectWeakLoadStrong(v7);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType(v8);
      LOBYTE(v10) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(ObjectType, v10);
      swift_unknownObjectRelease(v9);

      if ((v10 & 1) != 0)
        *(_BYTE *)(v4 + 32) = 1;
      goto LABEL_6;
    }
    swift_release(v4);

  }
}

double sub_10B8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    *(_BYTE *)(Strong + 336) = 1;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + 344);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider;
      swift_beginAccess(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider, &v15, 0, 0);
      v9 = swift_unknownObjectWeakLoadStrong(v8);
      if (v9)
      {
        v10 = v9;
        if ((*(_BYTE *)(v5 + 360) & 1) != 0
          || (v11 = *(_QWORD *)(v8 + 8),
              v12 = *(_QWORD *)(v5 + 352),
              ObjectType = swift_getObjectType(v9),
              v14 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 64),
              (v14(ObjectType, v11) & 1) == 0))
        {

          swift_unknownObjectRelease(v10);
        }
        else
        {
          if ((v14(ObjectType, v11) & 1) != 0)
          {
            if ((v12 & 0xFFFFFFFFFFFFFFFELL) == 2)
            {
              if (*(_BYTE *)(v5 + 129) == 1)
              {
                *(_BYTE *)(v5 + 129) = 0;
              }
              else if (v12 == 3 || v12 == 2)
              {
                goto LABEL_18;
              }
            }
            sub_10D358();
LABEL_18:
            swift_release(v5);

            *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
            return result;
          }

          swift_unknownObjectRelease(v10);
          *(_BYTE *)(v5 + 16) = 0;
        }
      }
      else
      {

      }
    }
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_10BA70(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  id v29;
  id v30;
  id v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  __n128 v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  const void *v47;
  void *v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD aBlock[5];
  _QWORD *v65;
  char v66[32];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v50 - v16;
  v18 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v66, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v20 = Strong;
    v21 = swift_unknownObjectWeakLoadStrong(Strong + 344);
    if (v21)
    {
      v22 = (void *)v21;
      v23 = swift_unknownObjectWeakLoadStrong(v20 + 176);
      if (!v23)
      {
        swift_release(v20);

        return;
      }
      v24 = (void *)v23;
      v25 = swift_unknownObjectWeakLoadStrong(v20 + 296);
      if (!v25)
      {
        swift_release(v20);

        return;
      }
      v57 = v24;
      v58 = v22;
      v26 = *(_QWORD *)(v20 + 304);
      v27 = v25;
      ObjectType = swift_getObjectType(v25);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 64))(ObjectType, v26) & 1) == 0)
      {
        swift_release(v20);

        swift_unknownObjectRelease(v27);
        return;
      }
      v56 = v27;
      v30 = v57;
      v29 = v58;
      if ((v18 - 1) < 2)
      {
        v31 = objc_msgSend(v57, "layer");
        LODWORD(v32) = 0;
        objc_msgSend(v31, "setOpacity:", v32);

LABEL_14:
        swift_release(v20);
        swift_unknownObjectRelease(v56);

        return;
      }
      if (!v18)
        goto LABEL_14;
      v55 = objc_msgSend(v58, "view");
      if (!v55)
      {
        __break(1u);
        return;
      }
      objc_msgSend(v30, "frame");
      v35 = v34;
      v37 = v36;
      sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
      v53 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)(v14, 0.25);
      v54 = *(void (**)(char *, uint64_t))(v12 + 8);
      v54(v14, v11);
      v38 = swift_allocObject(&unk_381F08, 24, 7);
      swift_weakInit(v38 + 16, v20);
      v39 = (_QWORD *)swift_allocObject(&unk_3820A8, 48, 7);
      v52 = v38;
      v40 = v55;
      v39[2] = v38;
      v39[3] = v40;
      v39[4] = v35;
      v39[5] = v37;
      aBlock[4] = sub_1128D4;
      v65 = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_525B8;
      aBlock[3] = &unk_3820C0;
      v51 = _Block_copy(aBlock);
      swift_retain(v38);
      v55 = v40;
      static DispatchQoS.unspecified.getter(v41);
      v63 = _swiftEmptyArrayStorage;
      v42 = v30;
      v43 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v44 = sub_319AC(&qword_3B96F0);
      v45 = sub_3DCC0((unint64_t *)&qword_3B8510, &qword_3B96F0, (uint64_t)&protocol conformance descriptor for [A]);
      v46 = v62;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v63, v44, v45, v62, v43);
      v47 = v51;
      v48 = (void *)v53;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v6, v51);
      _Block_release(v47);

      swift_release(v20);
      swift_unknownObjectRelease(v56);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v6, v46);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v60);
      v54(v17, v11);
      v49 = v65;
      swift_release(v52);
      v33 = (uint64_t)v49;
    }
    else
    {
      v33 = v20;
    }
    swift_release(v33);
  }
}

void sub_10BF14(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  void *v10;
  double v11;
  id v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[3];
  _BYTE v23[24];
  _BYTE v24[24];
  CGPoint v25;
  CGRect v26;

  v7 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    v10 = (void *)swift_unknownObjectWeakLoadStrong(Strong + 344);
    *(_QWORD *)&v11 = swift_release(v9).n128_u64[0];
    if (v10)
    {
      v12 = objc_msgSend(v10, "view", v11);
      if (!v12)
      {
        __break(1u);
        return;
      }
      v13 = v12;
      swift_unknownObjectRetain(v12);
      objc_msgSend(a2, "convertPoint:toCoordinateSpace:", v13, a3, a4);
      v15 = v14;
      v17 = v16;
      objc_msgSend(v13, "bounds");
      v25.x = v15;
      v25.y = v17;
      v18 = CGRectContainsPoint(v26, v25);

      if (v18)
      {
        swift_beginAccess(v7, v23, 0, 0);
        v19 = swift_weakLoadStrong(v7);
        if (v19)
        {
          v20 = v19;
          v22[0] = (uint64_t)a2;
          *(double *)&v22[1] = a3;
          *(double *)&v22[2] = a4;
          sub_10EC78(v22);
LABEL_9:
          swift_release(v20);
        }
      }
      else
      {
        swift_beginAccess(v7, v23, 0, 0);
        v21 = swift_weakLoadStrong(v7);
        if (v21)
        {
          v20 = v21;
          sub_10D6B8();
          goto LABEL_9;
        }
      }

    }
  }
}

double sub_10C078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t ObjectType;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for BooksFeatureFlag(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 296);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v1 + 304);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for BooksFeatureFlag.readingLoupe(_:), v2);
    v10 = sub_34284(&qword_3BCE80, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
    v11 = sub_3DCC0(&qword_3BCE88, &qword_3BCE90, (uint64_t)&protocol conformance descriptor for StaticFeatureFlagsKey<A>);
    LOBYTE(v10) = RawRepresentable<>.isEnabled.getter(v2, v10, v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((v10 & 1) != 0)
      v12 = *(_BYTE *)(v1 + 17) ^ 1;
    else
      v12 = 0;
    ObjectType = swift_getObjectType(v8);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 + 136))(v12 & 1, ObjectType, v9);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(ObjectType, v9) & 1) != 0 && *(_BYTE *)(v1 + 17) == 1)
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v9 + 72))(0, ObjectType, v9);
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

void sub_10C1F0()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 336) == 1)
    sub_10C204();
}

void sub_10C204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  int64_t v42;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *Strong;
  uint64_t v55[7];
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  unint64_t v59;
  char v60[32];

  v1 = v0;
  Strong = (_QWORD *)swift_weakLoadStrong(v0 + 312);
  if (!Strong)
    return;
  v2 = swift_unknownObjectWeakLoadStrong(v0 + 296);
  if (!v2)
  {
    swift_release(Strong);
    return;
  }
  v3 = v2;
  v4 = *(_QWORD *)(v1 + 304);
  ObjectType = swift_getObjectType(v2);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 64))(ObjectType, v4) & 1) == 0 || *(_BYTE *)(v1 + 336) != 1)
  {
    swift_release(Strong);
    swift_unknownObjectRelease(v3);
    return;
  }
  v53 = v3;
  v6 = Strong[2];
  v7 = Strong[3];
  v8 = swift_getObjectType(v6);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 88);
  v10 = swift_unknownObjectRetain(v6);
  v11 = v9(v8, v7, v10);
  swift_unknownObjectRelease(v6);
  swift_beginAccess(Strong + 14, v60, 0, 0);
  v12 = Strong[14];
  v13 = Strong[15];
  v14 = swift_getObjectType(v12);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 24);
  v16 = swift_unknownObjectRetain(v12);
  v17 = v15(v14, v13, v16);
  swift_unknownObjectRelease(v12);
  v18 = sub_10C694((v17 & 0xFFFFFFFFFFFFFFFELL) == 2, v11, (uint64_t)Strong, v1);
  swift_bridgeObjectRelease(v11);
  v19 = sub_3D104(_swiftEmptyArrayStorage);
  v59 = v19;
  v20 = *(_QWORD *)(v18 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain(v18);
    v21 = 0;
    do
    {
      v22 = *(_QWORD *)(v18 + v21 + 120);
      v23 = *(_QWORD *)(v18 + v21 + 72);
      v24 = *(_QWORD *)(v18 + v21 + 80);
      v25 = *(_QWORD *)(v18 + v21 + 56);
      v26 = *(_QWORD *)(v18 + v21 + 64);
      v27 = *(_QWORD *)(v18 + v21 + 40);
      v28 = *(_QWORD *)(v18 + v21 + 48);
      LOBYTE(v55[0]) = *(_BYTE *)(v18 + v21 + 32);
      v55[1] = v27;
      v55[2] = v28;
      v55[3] = v25;
      v55[4] = v26;
      v55[5] = v23;
      v55[6] = v24;
      v29 = *(_OWORD *)(v18 + v21 + 104);
      v56 = *(_OWORD *)(v18 + v21 + 88);
      v57 = v29;
      v58 = v22;
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRetain(v26);
      swift_bridgeObjectRetain(v24);
      swift_bridgeObjectRetain(v22);
      sub_10C9E0((uint64_t)&v59, v55, v53, v4);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v28);
      v21 += 96;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease_n(v18, 2);
    v30 = v59;
  }
  else
  {
    v30 = v19;
    swift_bridgeObjectRelease(v18);
  }
  v31 = swift_bridgeObjectRetain(v30);
  v32 = sub_F4990(v31);
  swift_bridgeObjectRelease(v30);
  v55[0] = (uint64_t)v32;
  sub_10A260(v55);
  swift_bridgeObjectRelease(v30);
  v33 = v55[0];
  v34 = sub_10A09C(v55[0]);
  swift_release(v33);
  v35 = v34[2];
  if (!v35)
  {
    v37 = _swiftEmptyArrayStorage;
LABEL_36:
    swift_bridgeObjectRelease(v34);
    v51 = *(_QWORD *)(v1 + 72);
    *(_QWORD *)(v1 + 72) = v37;
    swift_bridgeObjectRelease(v51);
    sub_10CF90();
    swift_unknownObjectRelease(v53);
    swift_release(Strong);
    *(_BYTE *)(v1 + 336) = 0;
    return;
  }
  swift_bridgeObjectRetain(v34);
  v36 = 0;
  v37 = _swiftEmptyArrayStorage;
  while (1)
  {
    v38 = &v34[v36];
    v39 = v38[4];
    v40 = *(_QWORD *)(v39 + 16);
    v41 = v37[2];
    v42 = v41 + v40;
    if (__OFADD__(v41, v40))
      break;
    swift_bridgeObjectRetain(v38[4]);
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(v37);
    if ((_DWORD)isUniquelyReferenced_nonNull_native && v42 <= v37[3] >> 1)
    {
      if (*(_QWORD *)(v39 + 16))
        goto LABEL_25;
    }
    else
    {
      if (v41 <= v42)
        v44 = v41 + v40;
      else
        v44 = v41;
      v37 = sub_42864(isUniquelyReferenced_nonNull_native, v44, 1, v37);
      if (*(_QWORD *)(v39 + 16))
      {
LABEL_25:
        v45 = v37[2];
        if ((v37[3] >> 1) - v45 < v40)
          goto LABEL_40;
        v46 = &v37[6 * v45 + 4];
        if (v39 + 32 < (unint64_t)&v46[6 * v40] && (unint64_t)v46 < v39 + 32 + 48 * v40)
          goto LABEL_42;
        memcpy(v46, (const void *)(v39 + 32), 48 * v40);
        if (v40)
        {
          v48 = v37[2];
          v49 = __OFADD__(v48, v40);
          v50 = v48 + v40;
          if (v49)
            goto LABEL_41;
          v37[2] = v50;
        }
        goto LABEL_15;
      }
    }
    if (v40)
      goto LABEL_39;
LABEL_15:
    ++v36;
    swift_bridgeObjectRelease(v39);
    if (v35 == v36)
    {
      swift_bridgeObjectRelease(v34);
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  v52 = v59;
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(48);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v52);
  __break(1u);
LABEL_42:
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  swift_release(v55[0]);
  __break(1u);
}

uint64_t sub_10C694(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  char v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t Strong;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _QWORD *v57;

  if ((a1 & 1) != 0)
  {
    CurrentValueSubject.value.getter(&v51);
    v5 = v51;
    v6 = *((_QWORD *)&v52 + 1);
    swift_unknownObjectRelease(*((_QWORD *)&v51 + 1));
    swift_unknownObjectRelease(v6);
    v7 = *(_QWORD *)(v5 + 16);
    if (v7)
    {
      v57 = _swiftEmptyArrayStorage;
      sub_F51A8(0, v7, 0);
      v8 = v57;
      v9 = (uint64_t *)(v5 + 40);
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        ObjectType = swift_getObjectType(v10);
        v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 24);
        v14 = swift_unknownObjectRetain(v10);
        v15 = v13(ObjectType, v11, v14);
        v17 = v16;
        swift_unknownObjectRelease(v10);
        v57 = v8;
        v19 = v8[2];
        v18 = v8[3];
        if (v19 >= v18 >> 1)
        {
          sub_F51A8(v18 > 1, v19 + 1, 1);
          v8 = v57;
        }
        v8[2] = v19 + 1;
        v20 = &v8[2 * v19];
        v20[4] = v15;
        *((_BYTE *)v20 + 40) = v17 & 1;
        v9 += 2;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease(v5);
    }
    else
    {
      swift_bridgeObjectRelease(v5);
      v8 = _swiftEmptyArrayStorage;
    }
    *(_QWORD *)&v51 = v8;
    v22 = sub_319AC(&qword_3BCF38);
    v23 = sub_3DCC0(&qword_3BCF40, &qword_3BCF38, (uint64_t)&protocol conformance descriptor for [A]);
    v24 = Sequence.compact<A>()(v22, &type metadata for Int, v23);
    swift_bridgeObjectRelease(v8);
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v57 = _swiftEmptyArrayStorage;
      swift_retain(a4);
      sub_F518C(0, v25, 0);
      v26 = 0;
      v27 = v57;
      do
      {
        v28 = *(_QWORD *)(v24 + 8 * v26 + 32);
        Strong = swift_unknownObjectWeakLoadStrong(a4 + 320);
        if (Strong)
        {
          v30 = Strong;
          v31 = *(_QWORD *)(a4 + 328);
          v32 = swift_getObjectType(Strong);
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v31 + 8))(&v51, v28, v32, v31);
          swift_unknownObjectRelease(v30);
          v33 = v51;
          v34 = v52;
          v35 = v53;
          v36 = v54;
          v37 = v55;
          v38 = v56;
        }
        else
        {
          v55 = 0u;
          v56 = 0u;
          v33 = 0uLL;
          v34 = 0uLL;
          v53 = 0u;
          v54 = 0u;
          v35 = 0uLL;
          v36 = 0uLL;
          v37 = 0uLL;
          v38 = 0uLL;
          v51 = 0u;
          v52 = 0u;
        }
        v57 = v27;
        v40 = v27[2];
        v39 = v27[3];
        if (v40 >= v39 >> 1)
        {
          v49 = v34;
          v50 = v33;
          v47 = v36;
          v48 = v35;
          v45 = v38;
          v46 = v37;
          sub_F518C(v39 > 1, v40 + 1, 1);
          v38 = v45;
          v37 = v46;
          v36 = v47;
          v35 = v48;
          v34 = v49;
          v33 = v50;
          v27 = v57;
        }
        ++v26;
        v27[2] = v40 + 1;
        v41 = &v27[12 * v40];
        v41[2] = v33;
        v41[3] = v34;
        v41[4] = v35;
        v41[5] = v36;
        v41[6] = v37;
        v41[7] = v38;
      }
      while (v25 != v26);
      swift_bridgeObjectRelease(v24);
      swift_release(a4);
    }
    else
    {
      swift_bridgeObjectRelease(v24);
      v27 = _swiftEmptyArrayStorage;
    }
    *(_QWORD *)&v51 = v27;
    v42 = sub_319AC(&qword_3BCF48);
    v43 = sub_3DCC0(&qword_3BCF50, &qword_3BCF48, (uint64_t)&protocol conformance descriptor for [A]);
    v21 = Sequence.compact<A>()(v42, &type metadata for ContentMessage.CFIUpdate, v43);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v21 = a2;
    swift_bridgeObjectRetain(a2);
  }
  return v21;
}

void sub_10C9E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  Swift::String v21;
  uint64_t v22;
  double v23;
  void *v24;
  _QWORD *v25;
  Class isa;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  double v61;
  unint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v6 = a2[2];
  v7 = a2[4];
  v8 = a2[6];
  v9 = a2[11];
  v10 = String.cfiSpineIndex.getter(a2[1], v6);
  if ((v11 & 1) != 0 || !*(_QWORD *)(v9 + 16))
    return;
  v64 = v10;
  ObjectType = swift_getObjectType(a3);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 16))(&v65, ObjectType, a4);
  v63 = v65;
  v59 = BYTE2(v65);
  v60 = BYTE1(v65);
  v13 = v66;
  v62 = v67;
  v57 = v69;
  v58 = v68;
  v61 = v70;
  v55 = v72;
  v56 = v71;
  if (qword_3B5788 != -1)
    swift_once(&qword_3B5788, sub_10A2C8);
  v14 = type metadata accessor for Logger(0);
  sub_555F0(v14, (uint64_t)qword_3BC900);
  swift_bridgeObjectRetain_n(v13, 2);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v15 = swift_bridgeObjectRetain(v9);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v54 = swift_slowAlloc(32, -1);
    v73 = v54;
    *(_DWORD *)v18 = 134218242;
    v65 = *(_QWORD *)(v9 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v18 + 4);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v6);
    *(_WORD *)(v18 + 12) = 2080;
    v19 = v63;
    LOBYTE(v65) = v63;
    BYTE1(v65) = v60;
    BYTE2(v65) = v59;
    v20 = v62;
    v66 = v13;
    v67 = v62;
    v68 = v58;
    v69 = v57;
    v70 = v61;
    v71 = v56;
    v72 = v55;
    v21 = BookThemeEntity.description()();
    v65 = sub_33524(v21._countAndFlagsBits, (unint64_t)v21._object, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v18 + 14);
    swift_bridgeObjectRelease_n(v13, 2);
    swift_bridgeObjectRelease(v21._object);
    _os_log_impl(&dword_0, v16, v17, "%ld rects provided for current theme. %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v54, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v13, 2);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v6);
    v19 = v63;
    v20 = v62;
  }
  v22 = (v20 >> 8) & 1;
  if (!v13)
    LODWORD(v22) = v19 != 0;
  if ((_DWORD)v22 == 1 && v13)
  {
    swift_bridgeObjectRelease(v13);
    v23 = 0.0;
    if (v61 != 0.0)
      v23 = fabs(v61) / 0.02;
  }
  else
  {
    swift_bridgeObjectRelease(v13);
    v23 = 0.0;
  }
  v24 = (void *)objc_opt_self(BEJavascriptUtilities);
  v25 = sub_160A80(v9);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v25);
  v27 = objc_msgSend(v24, "collapsedLineRectsFromArrayOfRects:isVerticalDocument:needsFiltering:wordSpacingMultiplier:", isa, 0, 1, v23);

  v28 = sub_34450(0, (unint64_t *)&unk_3B8468, NSValue_ptr);
  v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0)
      v46 = v29;
    else
      v46 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v29);
    v30 = _CocoaArrayWrapper.endIndex.getter(v46);
    if (v30)
      goto LABEL_17;
  }
  else
  {
    v30 = *(_QWORD *)((char *)&dword_10 + (v29 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v29);
    if (v30)
    {
LABEL_17:
      if (v30 < 1)
      {
        __break(1u);
        return;
      }
      v31 = 0;
      v32 = _swiftEmptyArrayStorage;
      do
      {
        if ((v29 & 0xC000000000000001) != 0)
          v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v29);
        else
          v33 = *(id *)(v29 + 8 * v31 + 32);
        v34 = v33;
        objc_msgSend(v33, "CGRectValue");
        v36 = v35;
        v38 = v37;
        v40 = v39;
        v42 = v41;

        if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
          v32 = sub_432C0(0, v32[2] + 1, 1, v32);
        v44 = v32[2];
        v43 = v32[3];
        if (v44 >= v43 >> 1)
          v32 = sub_432C0((_QWORD *)(v43 > 1), v44 + 1, 1, v32);
        ++v31;
        v32[2] = v44 + 1;
        v45 = &v32[4 * v44];
        v45[4] = v36;
        v45[5] = v38;
        v45[6] = v40;
        v45[7] = v42;
      }
      while (v30 != v31);
      goto LABEL_33;
    }
  }
  v32 = _swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease_n(v29, 2);
  v47 = BookContentLayoutController.contentLoader(ordinal:)(v64);
  if (v47)
  {
    v49 = v47;
    v50 = v48;
    v51 = swift_getObjectType(v47);
    v52 = (double *)sub_1B86F4((uint64_t)v32, 0, v51, v50);
    swift_unknownObjectRelease(v49);
  }
  else
  {
    v52 = (double *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v32);
  v53 = sub_10FFB4(v52);
  swift_bridgeObjectRelease(v52);
  if (v53)
    sub_109FBC((uint64_t)v53, v64);
}

double sub_10CF90()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned __int8 *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  char v45[24];

  v1 = type metadata accessor for BooksFeatureFlag(0);
  v40 = *(_QWORD *)(v1 - 8);
  v41 = v1;
  __chkstk_darwin(v1);
  v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 72);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v42 = v0;
      v43 = v0 + 344;
      v38 = v0 + 296;
      HIDWORD(v36) = enum case for BooksFeatureFlag.readingLoupe(_:);
      swift_bridgeObjectRetain(v4);
      for (i = 32; ; i += 48)
      {
        v8 = *(_QWORD *)(v4 + i);
        Strong = swift_unknownObjectWeakLoadStrong(v43);
        if (Strong)
        {
          v10 = (void *)Strong;
          v11 = (_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService);
          swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService, v45, 0, 0);
          v12 = *v11;
          v13 = v11[1];
          ObjectType = swift_getObjectType(*v11);
          v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 8);
          v16 = swift_unknownObjectRetain(v12);
          v17 = v15(ObjectType, v13, v16);
          swift_unknownObjectRelease(v12);
          v18 = *(_QWORD *)(v17 + 104);
          if (*(_QWORD *)(v18 + 16) && (v19 = sub_3B7F8(v8), (v20 & 1) != 0))
          {
            v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
            swift_retain(v21);
            swift_release(v17);
            v22 = v42;
            v23 = *(unsigned __int8 *)(v42 + 17);
            v24 = (unsigned __int8 *)(v21 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_isVerticalDocument);
            swift_beginAccess(v21 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_isVerticalDocument, v44, 0, 0);
            v25 = *v24;
            if (v23 != v25)
            {
              *(_BYTE *)(v22 + 17) = v25;
              v26 = swift_unknownObjectWeakLoadStrong(v38);
              if (v26)
              {
                v27 = v26;
                v37 = *(_QWORD *)(v22 + 304);
                v28 = v39;
                v29 = v40;
                v30 = v41;
                (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, HIDWORD(v36), v41);
                v31 = sub_34284(&qword_3BCE80, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
                v32 = sub_3DCC0(&qword_3BCE88, &qword_3BCE90, (uint64_t)&protocol conformance descriptor for StaticFeatureFlagsKey<A>);
                LOBYTE(v31) = RawRepresentable<>.isEnabled.getter(v30, v31, v32);
                (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
                if ((v31 & 1) != 0)
                  v33 = *(_BYTE *)(v42 + 17) ^ 1;
                else
                  v33 = 0;
                v34 = v37;
                v35 = swift_getObjectType(v27);
                (*(void (**)(_QWORD, uint64_t, uint64_t))(v34 + 136))(v33 & 1, v35, v34);
                if (((*(uint64_t (**)(uint64_t, uint64_t))(v34 + 64))(v35, v34) & 1) != 0
                  && (*(_BYTE *)(v42 + 17) & 1) != 0)
                {
                  (*(void (**)(_QWORD, uint64_t, uint64_t))(v34 + 72))(0, v35, v34);
                }

                swift_release(v21);
                swift_unknownObjectRelease(v27);
                goto LABEL_6;
              }
            }

            v7 = v21;
          }
          else
          {

            v7 = v17;
          }
          swift_release(v7);
        }
LABEL_6:
        if (!--v5)
        {
          *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
          return result;
        }
      }
    }
  }
  return result;
}

double sub_10D278(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  double result;
  uint64_t v7;
  _BYTE v8[24];
  _BYTE v9[24];
  _BYTE v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    *(_QWORD *)(Strong + 352) = v2;
    *(_BYTE *)(Strong + 360) = 0;
    swift_release(Strong);
  }
  swift_beginAccess(v3, v9, 0, 0);
  v5 = swift_weakLoadStrong(v3);
  if (v5)
  {
    v7 = v5;
    if (*(uint64_t *)(v5 + 24) >= 1)
      *(_QWORD *)(v5 + 24) = 0;
    *(_OWORD *)(v5 + 40) = 0u;
    *(_OWORD *)(v5 + 56) = 0u;
    *(_OWORD *)(v5 + 80) = 0u;
    *(_OWORD *)(v5 + 96) = 0u;
    *(_OWORD *)(v5 + 112) = 0u;
    *(_BYTE *)(v5 + 128) = 1;
    swift_beginAccess(v5 + 184, v8, 1, 0);
    swift_unknownObjectWeakAssign(v7 + 184, 0);
    sub_10A54C();
    *(_BYTE *)(v7 + 129) = 1;
    *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  }
  return result;
}

double sub_10D358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  _BYTE v25[24];

  v1 = v0;
  v2 = type metadata accessor for BooksFeatureFlag(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v3 + 104))(v6, enum case for BooksFeatureFlag.readingLoupe(_:), v2, v4);
  v7 = sub_34284(&qword_3BCE80, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
  v8 = sub_3DCC0(&qword_3BCE88, &qword_3BCE90, (uint64_t)&protocol conformance descriptor for StaticFeatureFlagsKey<A>);
  LOBYTE(v7) = RawRepresentable<>.isEnabled.getter(v2, v7, v8);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  if ((v7 & 1) == 0)
    goto LABEL_13;
  if ((*(_BYTE *)(v1 + 17) & 1) != 0)
    goto LABEL_13;
  if ((*(_BYTE *)(v1 + 290) & 1) != 0)
    goto LABEL_13;
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    goto LABEL_13;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 296);
  if (!Strong)
    goto LABEL_13;
  v11 = Strong;
  v12 = *(_QWORD *)(v1 + 304);
  ObjectType = swift_getObjectType(Strong);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 128))(ObjectType, v12) & 1) == 0)
  {
    *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
LABEL_13:
    *(_BYTE *)(v1 + 16) = 0;
    return result;
  }
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 64))(ObjectType, v12) & 1) == 0)
  {
    sub_10D5BC();
LABEL_24:
    *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
    return result;
  }
  sub_11128C();
  swift_beginAccess(v1 + 184, v25, 0, 0);
  v14 = swift_unknownObjectWeakLoadStrong(v1 + 184);
  if (!v14)
  {
    if ((*(_BYTE *)(v1 + 128) & 1) == 0)
    {
      v18 = *(_QWORD *)(v1 + 80);
      v19 = swift_unknownObjectWeakLoadStrong(v1 + 344);
      if (v19)
      {
        v20 = (void *)v19;
        v21 = (void *)sub_111174(v18);
        if (v21)
        {
          v23 = v21;
          if (*(_BYTE *)(v1 + 289) == 1)
          {
            sub_160FDC(v21, v22, floor(*(double *)(v1 + 40)), floor(*(double *)(v1 + 48)), ceil(*(double *)(v1 + 56)), ceil(*(double *)(v1 + 64)));
            swift_unknownObjectRelease(v11);

            *(_BYTE *)(v1 + 289) = 0;
            return result;
          }

          v20 = v23;
        }

      }
    }
    sub_10D6B8();
    goto LABEL_24;
  }
  v15 = (void *)v14;
  v16 = swift_unknownObjectWeakLoadStrong(v1 + 344);
  if (v16)
  {
    v17 = (void *)v16;
    BookContentViewController.readingLoupeSelectLine(with:)((UIGestureRecognizer)v15);

  }
  swift_unknownObjectRelease(v11);

  return result;
}

void sub_10D5BC()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  if ((*(_BYTE *)(v0 + 290) & 1) != 0)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 176);
    if (Strong)
    {
      v2 = Strong;
      objc_msgSend(Strong, "removeFromSuperview");

    }
    v3 = (void *)swift_unknownObjectWeakLoadStrong(v0 + 168);
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "removeFromSuperview");

    }
    *(_BYTE *)(v0 + 192) = 0;
    v5 = v0 + 184;
    swift_beginAccess(v0 + 184, v6, 1, 0);
  }
  else
  {
    if (*(uint64_t *)(v0 + 24) >= 1)
      *(_QWORD *)(v0 + 24) = 0;
    *(_OWORD *)(v0 + 40) = 0u;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    *(_BYTE *)(v0 + 128) = 1;
    v5 = v0 + 184;
    swift_beginAccess(v0 + 184, v6, 1, 0);
    swift_unknownObjectWeakAssign(v0 + 184, 0);
    sub_10A54C();
    *(_BYTE *)(v0 + 129) = 1;
    sub_10FA98();
    *(_BYTE *)(v0 + 192) = 0;
  }
  swift_unknownObjectWeakAssign(v5, 0);
  sub_10A54C();
}

void sub_10D6B8()
{
  uint64_t v0;
  uint64_t v1;
  char *Strong;
  uint64_t v3;
  void **v4;
  void *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  UIView *v21;
  uint64_t v22;
  UIView *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  id v47;
  void **aBlock;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  void *v51;
  void (*v52)();
  uint64_t v53;
  _QWORD v54[5];
  _BYTE v55[24];

  v1 = v0;
  sub_10C204();
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v0 + 344);
  if (Strong)
  {
    v3 = *(_QWORD *)(v0 + 72);
    if (!v3)
    {

      return;
    }
    v4 = (void **)&Strong[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler];
    v47 = Strong;
    swift_beginAccess(&Strong[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler], v55, 0, 0);
    v5 = *v4;
    v6 = object_getClass(v5) != (Class)_TtC8BookEPUB20BookContentPresenter || v5 == 0;
    if (v6 || *(_BYTE *)(v1 + 360) == 1 || (v7 = *(_QWORD *)(v3 + 16)) == 0)
    {

    }
    else
    {
      if ((*(_QWORD *)(v1 + 352) & 0xFFFFFFFFFFFFFFFELL) == 2)
      {
        swift_unknownObjectRetain(v5);
        sub_1612BC();
        goto LABEL_30;
      }
      v8 = v7 - 1;
      if (*(_BYTE *)(v1 + 32))
        v9 = v8;
      else
        v9 = 0;
      v10 = (_QWORD *)(v3 + 48 * v9);
      v11 = v10[4];
      v12 = v10[5];
      v13 = v10[6];
      v14 = v10[7];
      v15 = v10[8];
      v16 = v10[9];
      v54[0] = v12;
      v54[1] = v13;
      v54[2] = v14;
      v54[3] = v15;
      v54[4] = v16;
      swift_unknownObjectRetain(v5);
      sub_1C37FC((uint64_t)v54, (uint64_t)&aBlock);
      if (aBlock)
      {
        v18 = *(double *)&v51;
        v17 = *(double *)&v52;
        v20 = *(double *)&v49;
        v19 = *(double *)&v50;
        swift_unknownObjectRelease(aBlock);
        v21 = (UIView *)sub_111174(v11);
        if (v21)
        {
          v23 = v21;
          v24 = v22;
          sub_10FEB0(v21, v22, v20, v19, v18, v17);
          v26 = floor(v25);
          v28 = floor(v27);
          *(double *)(v1 + 40) = v26;
          *(double *)(v1 + 48) = v28;
          v30 = ceil(v29);
          v32 = ceil(v31);
          *(double *)(v1 + 56) = v30;
          *(double *)(v1 + 64) = v32;
          *(_QWORD *)(v1 + 80) = v11;
          *(_QWORD *)(v1 + 88) = v12;
          *(_QWORD *)(v1 + 96) = v13;
          *(_QWORD *)(v1 + 104) = v14;
          *(_QWORD *)(v1 + 112) = v15;
          *(_QWORD *)(v1 + 120) = v16;
          *(_BYTE *)(v1 + 128) = 0;
          v33 = swift_unknownObjectWeakLoadStrong(v1 + 176);
          if (v33)
          {
            v34 = (void *)v33;
            v35 = swift_unknownObjectWeakLoadStrong(v1 + 168);
            if (v35)
            {
              v36 = (void *)v35;
              objc_msgSend(v34, "removeFromSuperview");
              v37 = objc_msgSend(v36, "layer");
              objc_msgSend(v37, "setMask:", 0);

              v34 = v37;
            }

          }
          sub_160FDC(v23, v24, v26, v28, v30, v32);
          *(_QWORD *)(v1 + 24) = v9;
          v38 = (void *)swift_unknownObjectWeakLoadStrong(v1 + 176);
          if (v38)
          {
            v39 = v38;
            objc_msgSend(v38, "setAlpha:", 0.0);

          }
          v40 = (void *)objc_opt_self(UIView);
          v52 = sub_112790;
          v53 = v1;
          aBlock = _NSConcreteStackBlock;
          v49 = 1107296256;
          v50 = sub_525B8;
          v51 = &unk_382020;
          v41 = _Block_copy(&aBlock);
          v42 = v53;
          swift_retain(v1);
          swift_release(v42);
          objc_msgSend(v40, "animateWithDuration:animations:", v41, 0.25);
          _Block_release(v41);

          goto LABEL_30;
        }
      }
      v43 = swift_unknownObjectWeakLoadStrong(v1 + 296);
      if (!v43)
      {
LABEL_30:

        swift_unknownObjectRelease(v5);
        return;
      }
      v44 = v43;
      v45 = *(_QWORD *)(v1 + 304);
      ObjectType = swift_getObjectType(v43);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v45 + 64))(ObjectType, v45) & 1) != 0)
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v45 + 72))(0, ObjectType, v45);

      swift_unknownObjectRelease(v5);
      swift_unknownObjectRelease(v44);
    }
  }
}

void sub_10DA5C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  void **v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t (*v21)(uint64_t, uint64_t, __n128);
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25[24];
  char v26[32];

  v2 = v1;
  sub_10C204();
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 344);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(_QWORD *)(v1 + 72);
    if (v6)
    {
      v7 = (void **)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
      swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, v26, 0, 0);
      v8 = *v7;
      if (object_getClass(v8) == (Class)_TtC8BookEPUB20BookContentPresenter
        && v8 != 0
        && *(_BYTE *)(v1 + 360) != 1)
      {
        v10 = *(_QWORD *)(v1 + 352);
        if (swift_unknownObjectWeakLoadStrong(v2 + 176))
        {
          if ((v10 & 0xFFFFFFFFFFFFFFFELL) == 2)
          {
            swift_bridgeObjectRetain(v6);
            swift_unknownObjectRetain(v8);
            sub_10FDC0(a1 & 1);
            goto LABEL_23;
          }
          v15 = *(_QWORD *)(v2 + 24);
          if ((a1 & 1) != 0)
          {
            if (!__OFADD__(v15++, 1))
            {
LABEL_22:
              swift_bridgeObjectRetain(v6);
              swift_unknownObjectRetain(v8);
LABEL_23:
              v17 = &v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService];
              swift_beginAccess(&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService], v25, 0, 0);
              v19 = *(_QWORD *)v17;
              v18 = *((_QWORD *)v17 + 1);
              ObjectType = swift_getObjectType(*(_QWORD *)v17);
              v21 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 8);
              v22 = swift_unknownObjectRetain(v19);
              v23 = v21(ObjectType, v18, v22);
              swift_unknownObjectRelease(v19);
              v24 = *(unsigned __int8 *)(v23 + 96);
              swift_release(v23);
              __asm { BR              X9 }
            }
            __break(1u);
          }
          if (__OFSUB__(v15, 1))
          {
            __break(1u);
            JUMPOUT(0x10E3A0);
          }
          goto LABEL_22;
        }
      }
    }

  }
  v11 = swift_unknownObjectWeakLoadStrong(v2 + 296);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)(v2 + 304);
    v14 = swift_getObjectType(v11);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 64))(v14, v13) & 1) != 0)
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 72))(0, v14, v13);
    swift_unknownObjectRelease(v12);
  }
}

void sub_10E3C0(double *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id *v12;
  id v13;
  BOOL v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, __n128);
  __n128 v43;
  uint64_t v44;
  char v45;
  __n128 v46;
  double v47;
  double v48;
  void *v49;
  _QWORD *v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, __n128);
  id v55;
  void *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  __n128 v62;
  void *v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  CGFloat v70;
  double MinX;
  double v72;
  CGFloat v73;
  double v74;
  id v75;
  void *v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  CGFloat v89;
  CGFloat v90;
  CGFloat v91;
  uint64_t v92;
  uint64_t v93;
  UIView *v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  double v105;
  CGFloat v106;
  double v107;
  CGFloat v108;
  CGFloat v109;
  CGFloat v110;
  uint64_t v111;
  uint64_t v112;
  double v113;
  double v114;
  double v115;
  CGFloat v116;
  double v117;
  CGFloat v118;
  double v119;
  double v120;
  CGFloat v121;
  double v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  void *v126;
  unint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  void *v133;
  id v134;
  void *rect;
  CGFloat recta;
  __int128 rectb;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  double v146;
  double v147;
  double v148;
  double v149;
  char v150[32];
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;

  v3 = v2;
  v5 = *a1;
  v7 = *((_QWORD *)a1 + 1);
  v6 = a1[2];
  sub_10C204();
  v8 = *(_QWORD *)(v2 + 72);
  if (!v8 || (v9 = swift_unknownObjectWeakLoadStrong(v2 + 344)) == 0)
  {
LABEL_10:
    Strong = swift_unknownObjectWeakLoadStrong(v3 + 296);
    if (Strong)
    {
      v16 = Strong;
      v17 = *(_QWORD *)(v3 + 304);
      ObjectType = swift_getObjectType(Strong);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 64))(ObjectType, v17) & 1) != 0)
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 72))(0, ObjectType, v17);
      v19 = v16;
LABEL_14:
      swift_unknownObjectRelease(v19);
    }
    return;
  }
  v10 = (void *)v9;
  if (*(_BYTE *)(v2 + 360) == 1
    || ((v11 = *(_QWORD *)(v2 + 352),
         v12 = (id *)(v9 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler),
         swift_beginAccess(v9 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, v150, 0, 0), v13 = *v12, object_getClass(*v12) == (Class)_TtC8BookEPUB20BookContentPresenter)? (v14 = v13 == 0): (v14 = 1), v14))
  {

    goto LABEL_10;
  }
  v20 = *(_QWORD *)(v8 + 16);
  if (!v20)
  {

    return;
  }
  v128 = *(_QWORD *)&v5;
  v21 = v3 + 312;
  v22 = v8 + 32;
  v124 = a2 & ((v11 & 0xFFFFFFFFFFFFFFFELL) != 2);
  swift_bridgeObjectRetain_n(v8, 2);
  swift_unknownObjectRetain(v13);
  v23 = 0;
  v125 = 0;
  v24 = 0;
  v25 = 0;
  v133 = v10;
  v134 = v13;
  v127 = v20;
  v130 = v8 + 32;
  while (1)
  {
    rect = v23;
    if (v25 >= *(_QWORD *)(v8 + 16))
    {
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    v138 = v25;
    v26 = (uint64_t *)(v22 + 48 * v25);
    v27 = *v26;
    v28 = v26[1];
    v29 = v26[2];
    v30 = v26[3];
    v31 = v26[4];
    v32 = v26[5];
    v33 = swift_weakLoadStrong(v21);
    if (!v33)
    {
      v35 = v8;
      goto LABEL_52;
    }
    v34 = v33;
    v131 = v24;
    v132 = v28;
    v141 = v27;
    CurrentValueSubject.value.getter(&v145);
    swift_release(v34);
    v35 = v145;
    v36 = v148;
    swift_unknownObjectRelease(*(_QWORD *)&v146);
    swift_unknownObjectRelease(*(_QWORD *)&v36);
    v37 = *(_QWORD *)(v35 + 16);
    if (!v37)
    {
LABEL_51:
      swift_bridgeObjectRelease(v8);
      v10 = v133;
      v13 = v134;
LABEL_52:
      swift_bridgeObjectRelease(v35);

      goto LABEL_53;
    }
    v139 = v138 + 1;
    v38 = (uint64_t *)(v35 + 40);
    while (1)
    {
      v39 = *(v38 - 1);
      v40 = *v38;
      v41 = swift_getObjectType(v39);
      v42 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v40 + 24);
      v43 = swift_unknownObjectRetain(v39);
      v44 = v42(v41, v40, v43);
      if ((v45 & 1) == 0 && v141 == v44)
        break;
      swift_unknownObjectRelease(v39);
      v38 += 2;
      if (!--v37)
        goto LABEL_51;
    }
    v46 = swift_bridgeObjectRelease(v35);
    v142 = v128;
    *(_QWORD *)&v143 = v7;
    *((double *)&v143 + 1) = v6;
    (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, __n128))(v40 + 272))(&v145, &v142, v41, v40, v46);
    v11 = v132;
    if ((LOBYTE(v148) & 1) != 0)
    {
      swift_bridgeObjectRelease_n(v8, 2);
      swift_unknownObjectRelease(v39);

      swift_unknownObjectRelease(v134);
      return;
    }
    v48 = v146;
    v47 = v147;
    v49 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 48))(v41, v40);
    v10 = v133;
    if (v49)
      break;
    swift_unknownObjectRelease(v39);
    v13 = v134;
    v23 = rect;
    v24 = v131;
LABEL_36:
    v21 = v3 + 312;
    v25 = v139;
LABEL_48:
    v22 = v8 + 32;
    if (v25 == v127)
    {
      swift_bridgeObjectRelease(v8);
      if (v23)
      {
        v55 = v23;
        v140 = 0;
        v141 = 0;
        v93 = 0;
        v92 = 0;
        v11 = 0;
        v132 = 0;
        v90 = 0.0;
        v91 = 0.0;
        v89 = 0.0;
        v129 = 1;
        v123 = v125;
        v70 = 0.0;
        goto LABEL_58;
      }
LABEL_53:

      swift_bridgeObjectRelease(v8);
      v19 = (uint64_t)v13;
      goto LABEL_14;
    }
  }
  v51 = v50;
  v117 = v48;
  v126 = v49;
  v52 = v49;

  v53 = swift_getObjectType(v52);
  v54 = (uint64_t (*)(uint64_t, uint64_t, __n128))v51[1];
  v55 = v52;
  v56 = (void *)((uint64_t (*)(uint64_t, _QWORD *))v54)(v53, v51);
  objc_msgSend(v56, "contentOffset");
  v115 = v57;
  v59 = v58;

  v142 = v132;
  *(_QWORD *)&v143 = v29;
  *((_QWORD *)&v143 + 1) = v30;
  *(_QWORD *)&v144 = v31;
  *((_QWORD *)&v144 + 1) = v32;
  sub_1C37FC((uint64_t)&v142, (uint64_t)&v145);
  v11 = (uint64_t)v51;
  v24 = v131;
  v123 = v11;
  if (!v145)
  {

    swift_unknownObjectRelease(v39);
    v13 = v134;
LABEL_46:
    v21 = v3 + 312;
    v24 = v131 + 1;
    v25 = v139;
    if (__OFADD__(v131, 1))
      goto LABEL_70;
    v23 = v126;
    v125 = v123;
    goto LABEL_48;
  }
  v119 = v59;
  v120 = v47;
  v111 = v30;
  v112 = v29;
  recta = v149;
  v60 = v147;
  v121 = v148;
  v61 = v146;
  v62 = swift_unknownObjectRelease(v145);
  v63 = (void *)v54(v53, v11, v62);

  objc_msgSend(v63, "contentOffset");
  v65 = v64;
  v67 = v66;

  v113 = v61;
  v114 = v60;
  v68 = v61 - v65;
  v69 = v60 - v67;
  v70 = v121;
  v13 = v134;
  v11 = (uint64_t)v55;
  if ((v124 & 1) != 0)
  {
    v151.origin.x = v68;
    v151.origin.y = v69;
    v151.size.width = v121;
    v151.size.height = recta;
    MinX = CGRectGetMinX(v151);
    objc_msgSend(v55, "frame");
    v73 = MinX + v72;
    objc_msgSend(v55, "frame");
    if (v73 < CGRectGetMidX(v152))
    {
      v153.origin.x = v68;
      v153.origin.y = v69;
      v153.size.width = v121;
      v153.size.height = recta;
      if (CGRectGetMaxX(v153) < v117 - v115)
      {
        objc_msgSend(v55, "frame");
        v74 = CGRectGetMinX(v154);
        v75 = objc_msgSend(v133, "view");
        if (!v75)
          goto LABEL_76;
        v76 = v75;
        objc_msgSend(v75, "frame");
        v116 = v78;
        v118 = v77;
        v109 = v80;
        v110 = v79;

        v155.origin.y = v116;
        v155.origin.x = v118;
        v155.size.height = v109;
        v155.size.width = v110;
        if (v74 < CGRectGetMidX(v155))
        {
          swift_unknownObjectRelease(v39);

          v24 = v131 + 1;
          if (__OFADD__(v131, 1))
            goto LABEL_73;
          v23 = v126;
          v125 = v123;
          goto LABEL_36;
        }
      }
    }
  }
  v81 = v120 - v119;
  if (v69 > v120 - v119
    || (v156.origin.x = v68,
        v156.origin.y = v69,
        v156.size.width = v121,
        v156.size.height = recta,
        v81 > v69 + CGRectGetHeight(v156)))
  {
    if (v81 >= v69)
    {
      swift_unknownObjectRelease(v39);

    }
    else
    {
      if ((v131 & 0x8000000000000000) != 0)
        goto LABEL_71;
      if (v131 >= *(_QWORD *)(v8 + 16))
        goto LABEL_72;
      v82 = (uint64_t *)(v130 + 48 * v131);
      v11 = *v82;
      v83 = v82[1];
      v85 = v82[2];
      v84 = v82[3];
      v87 = v82[4];
      v86 = v82[5];
      v142 = v83;
      *(_QWORD *)&v143 = v85;
      *((_QWORD *)&v143 + 1) = v84;
      *(_QWORD *)&v144 = v87;
      *((_QWORD *)&v144 + 1) = v86;
      sub_1C37FC((uint64_t)&v142, (uint64_t)&v145);
      swift_unknownObjectRelease(v39);

      v88 = v145;
      if (v145)
      {
        v132 = v83;
        v141 = v11;
        v89 = v149;
        v122 = v148;
        v91 = v146;
        v90 = v147;
        swift_bridgeObjectRelease(v8);
        swift_unknownObjectRelease(v88);
        v129 = 0;
        v11 = v85;
        v92 = v84;
        v93 = v87;
        v70 = v122;
        v140 = v86;
        v24 = v131 - 1;
        goto LABEL_58;
      }
    }
    goto LABEL_46;
  }
  swift_unknownObjectRelease(v39);

  swift_bridgeObjectRelease(v8);
  v129 = 0;
  v140 = v32;
  v93 = v31;
  v92 = v111;
  v11 = v112;
  v89 = recta;
  v91 = v113;
  v90 = v114;
LABEL_58:
  v94 = (UIView *)v55;
  v157.origin.x = v91;
  v157.origin.y = v90;
  v157.size.width = v70;
  v157.size.height = v89;
  if (!CGRectIsEmpty(v157))
  {
    swift_bridgeObjectRelease(v8);
    goto LABEL_68;
  }
  -[UIView frame](v94, "frame");
  if (CGRectGetMaxY(v158) > v6)
    goto LABEL_64;
  if (v127 > *(_QWORD *)(v8 + 16))
  {
LABEL_75:
    __break(1u);
LABEL_76:

    __break(1u);
    return;
  }
  v95 = v130 + 48 * v127;
  v142 = *(_QWORD *)(v95 - 40);
  v96 = *(_OWORD *)(v95 - 16);
  v143 = *(_OWORD *)(v95 - 32);
  v144 = v96;
  sub_1C37FC((uint64_t)&v142, (uint64_t)&v145);
  v97 = v145;
  if (v145)
  {
    v70 = v148;
    v89 = v149;
    v91 = v146;
    v90 = v147;
    swift_bridgeObjectRelease(v8);
    swift_unknownObjectRelease(v97);
    goto LABEL_68;
  }
LABEL_64:
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v98 = *(_QWORD *)(v8 + 40);
  rectb = *(_OWORD *)(v8 + 48);
  v99 = *(_QWORD *)(v8 + 64);
  v100 = *(_QWORD *)(v8 + 72);
  swift_bridgeObjectRelease(v8);
  v142 = v98;
  v143 = rectb;
  *(_QWORD *)&v144 = v99;
  *((_QWORD *)&v144 + 1) = v100;
  sub_1C37FC((uint64_t)&v142, (uint64_t)&v145);
  if (v145)
  {
    v70 = v148;
    v89 = v149;
    v91 = v146;
    v90 = v147;
    swift_unknownObjectRelease(v145);
  }
  v10 = v133;
LABEL_68:
  sub_10FEB0(v94, v123, v91, v90, v70, v89);
  v102 = floor(v101);
  v104 = floor(v103);
  v106 = ceil(v105);
  v108 = ceil(v107);
  sub_160FDC(v94, v123, v102, v104, v106, v108);

  swift_unknownObjectRelease(v134);
  *(CGFloat *)(v3 + 40) = v102;
  *(CGFloat *)(v3 + 48) = v104;
  *(CGFloat *)(v3 + 56) = v106;
  *(CGFloat *)(v3 + 64) = v108;
  *(_QWORD *)(v3 + 80) = v141;
  *(_QWORD *)(v3 + 88) = v132;
  *(_QWORD *)(v3 + 96) = v11;
  *(_QWORD *)(v3 + 104) = v92;
  *(_QWORD *)(v3 + 112) = v93;
  *(_QWORD *)(v3 + 120) = v140;
  *(_BYTE *)(v3 + 128) = v129;
  *(_QWORD *)(v3 + 24) = v24;
  *(_BYTE *)(v3 + 129) = 0;
}

void sub_10EC78(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD aBlock[5];
  _QWORD *v37;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v30 - v16;
  v18 = *a1;
  v19 = a1[1];
  v20 = a1[2];
  sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
  v30 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)(v14, 0.25);
  v31 = *(void (**)(char *, uint64_t))(v12 + 8);
  v31(v14, v11);
  v21 = swift_allocObject(&unk_381F08, 24, 7);
  swift_weakInit(v21 + 16, v2);
  v22 = (_QWORD *)swift_allocObject(&unk_3820F8, 48, 7);
  v22[2] = v21;
  v22[3] = v18;
  v22[4] = v19;
  v22[5] = v20;
  aBlock[4] = sub_112C30;
  v37 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_525B8;
  aBlock[3] = &unk_382110;
  v23 = _Block_copy(aBlock);
  swift_retain(v21);
  v24 = swift_unknownObjectRetain(v18);
  static DispatchQoS.unspecified.getter(v24);
  v35 = _swiftEmptyArrayStorage;
  v25 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_319AC(&qword_3B96F0);
  v27 = sub_3DCC0((unint64_t *)&qword_3B8510, &qword_3B96F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v26, v27, v4, v25);
  v28 = (void *)v30;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v6, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
  v31(v17, v11);
  v29 = v37;
  swift_release(v21);
  swift_release(v29);
}

void sub_10EF68(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char **v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  double v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  __int128 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t ObjectType;
  __n128 v44;
  uint64_t v45;
  char v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  double v53;
  double v54;
  double v55;
  BOOL v56;
  uint64_t *v57;
  double v58;
  _BOOL8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  double v64;
  void *v65;
  void *v66;
  double v67;
  double v68;
  double v69;
  double v70;
  void *v71;
  double v72;
  double v73;
  double v74;
  void *v75;
  void *v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  void *v83;
  double v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  double Height;
  double v89;
  CGFloat v90;
  CGFloat v91;
  CGFloat v92;
  CGFloat v93;
  double v94;
  double v95;
  double v96;
  CGFloat rect;
  CGFloat v98;
  double v99;
  double v100;
  _QWORD *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  __int128 *v110;
  double v111;
  __int128 *v112;
  double v113;
  CGFloat v114;
  uint64_t v115;
  double v116;
  CGFloat v117;
  uint64_t v118;
  CGFloat v119;
  double v120;
  CGFloat v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t *v126;
  double v127;
  double v128;
  double v129;
  double v130;
  char v131[24];
  char v132[24];
  char v133[32];
  CGRect v134;
  CGRect v135;
  CGRect v136;

  v14 = a1 + 16;
  swift_beginAccess(a1 + 16, v133, 0, 0);
  Strong = swift_weakLoadStrong(v14);
  if (Strong)
  {
    v16 = Strong;
    sub_10C204();
    swift_release(v16);
  }
  swift_beginAccess(v14, v132, 0, 0);
  v17 = swift_weakLoadStrong(v14);
  if (!v17)
    goto LABEL_13;
  v18 = v17;
  v19 = *(_QWORD *)(v17 + 72);
  if (!v19)
    goto LABEL_12;
  v20 = swift_unknownObjectWeakLoadStrong(v17 + 344);
  if (!v20)
    goto LABEL_12;
  v21 = (void *)v20;
  v22 = (char **)(v20 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
  swift_beginAccess(v20 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, v131, 0, 0);
  v23 = *v22;
  swift_bridgeObjectRetain(v19);
  swift_unknownObjectRetain(v23);

  if (object_getClass(v23) != (Class)_TtC8BookEPUB20BookContentPresenter || v23 == 0)
  {
    swift_unknownObjectRelease(v23);
    swift_bridgeObjectRelease(v19);
LABEL_12:
    swift_release(v18);
    goto LABEL_13;
  }
  if (!*(_QWORD *)(v18 + 144) || *(_BYTE *)(v18 + 360) == 1 || (*(_QWORD *)(v18 + 352) & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
    swift_release(v18);
    swift_bridgeObjectRelease(v19);
    swift_unknownObjectRelease(v23);
LABEL_13:
    swift_beginAccess(v14, &v126, 0, 0);
    v25 = swift_weakLoadStrong(v14);
    if (v25)
    {
      v26 = v25;
      v27 = *(_QWORD *)(v25 + 144);
      *(_QWORD *)(v25 + 144) = a2;
      *(double *)(v25 + 152) = a3;
      *(double *)(v25 + 160) = a4;
      swift_unknownObjectRetain(a2);
      swift_release(v26);
      swift_unknownObjectRelease(v27);
    }
    return;
  }
  v101 = (_QWORD *)(v18 + 144);
  v102 = v18;
  v103 = v23;
  v104 = v18 + 344;
  v28 = *(_QWORD *)(v19 + 16);
  if (!v28)
  {
    swift_bridgeObjectRelease(v19);
    v30 = 0;
    v58 = 0.0;
    goto LABEL_48;
  }
  v115 = v19 + 32;
  v118 = v18 + 312;
  swift_bridgeObjectRetain(v19);
  v30 = 0;
  v105 = a2;
  v106 = v28;
  v107 = v19;
  while (1)
  {
    if (v30 >= *(_QWORD *)(v19 + 16))
    {
      __break(1u);
      goto LABEL_51;
    }
    v31 = (_QWORD *)(v115 + 48 * v30);
    v122 = *v31;
    v32 = v31;
    v7 = v31[3];
    v33 = v31;
    v6 = v31[5];
    v35 = v31[1];
    v34 = v31 + 1;
    v18 = v35;
    v37 = v32[2];
    v36 = (__int128 *)(v32 + 2);
    v5 = v37;
    v38 = v33[4];
    v23 = (char *)(v33 + 4);
    v8 = v38;
    v39 = swift_weakLoadStrong(v118);
    if (v39)
      break;
LABEL_23:
    if (++v30 == v28)
    {
      swift_bridgeObjectRelease_n(v19, 2);
      v58 = 0.0;
      v30 = v28;
      goto LABEL_48;
    }
  }
  v14 = v39;
  v110 = (__int128 *)v23;
  v112 = v36;
  CurrentValueSubject.value.getter(&v126);
  swift_release(v14);
  v4 = v126;
  v40 = v129;
  swift_unknownObjectRelease(*(_QWORD *)&v127);
  swift_unknownObjectRelease(*(_QWORD *)&v40);
  v23 = (char *)v4[2];
  if (!v23)
  {
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v4).n128_u64[0];
    goto LABEL_23;
  }
  v109 = v18;
  v41 = v4 + 5;
  while (1)
  {
    v14 = *(v41 - 1);
    v42 = *v41;
    ObjectType = swift_getObjectType(v14);
    v18 = *(_QWORD *)(v42 + 24);
    v44 = swift_unknownObjectRetain(v14);
    v45 = ((uint64_t (*)(uint64_t, uint64_t, __n128))v18)(ObjectType, v42, v44);
    if ((v46 & 1) == 0 && v122 == v45)
      break;
    swift_unknownObjectRelease(v14);
    v41 += 2;
    if (!--v23)
    {
      *(_QWORD *)&v29 = swift_bridgeObjectRelease(v4).n128_u64[0];
LABEL_44:
      v28 = v106;
      v19 = v107;
      goto LABEL_23;
    }
  }
  v47 = swift_bridgeObjectRelease(v4);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v42 + 48))(ObjectType, v42, v47);
  if (!v48)
  {
    *(_QWORD *)&v29 = swift_unknownObjectRelease(v14).n128_u64[0];
    goto LABEL_44;
  }
  v4 = (uint64_t *)v48;
  v23 = v49;
  v123 = v105;
  *(double *)&v124 = a3;
  *((double *)&v124 + 1) = a4;
  (*(void (**)(uint64_t **__return_ptr, uint64_t *, uint64_t, uint64_t))(v42 + 272))(&v126, &v123, ObjectType, v42);
  if ((LOBYTE(v129) & 1) != 0
    || (v10 = v128,
        v123 = v109,
        *(_QWORD *)&v124 = v5,
        *((_QWORD *)&v124 + 1) = v7,
        *(_QWORD *)&v125 = v8,
        *((_QWORD *)&v125 + 1) = v6,
        (*(void (**)(uint64_t **__return_ptr, uint64_t *, uint64_t, uint64_t))(v42 + 296))(&v126, &v123, ObjectType, v42), !v126))
  {
    swift_unknownObjectRelease(v14);

    goto LABEL_44;
  }
  rect = v129;
  v98 = v130;
  v9 = v127;
  v100 = v128;
  swift_unknownObjectRelease(v126);
  v50 = swift_unknownObjectWeakLoadStrong(v104);
  v28 = v106;
  v19 = v107;
  if (!v50)
  {
    swift_unknownObjectRelease(v14);

    goto LABEL_23;
  }
  v18 = v50;
  v95 = v9;
  v51 = swift_getObjectType(v4);
  v52 = (void *)(*((uint64_t (**)(uint64_t, char *))v23 + 1))(v51, v23);
  objc_msgSend(v52, "contentOffset");
  v99 = v53;
  v55 = v54;

  v29 = v10 - v55;
  v94 = v55;
  v9 = v100 - v55;
  v96 = v29;
  if (v9 <= v29)
  {
    v134.size.height = v98;
    v10 = v95 - v99;
    v134.origin.x = v95 - v99;
    v134.origin.y = v9;
    v134.size.width = rect;
    v56 = v96 > v9 + CGRectGetHeight(v134);
    v29 = v96;
    if (!v56)
    {
LABEL_51:
      v64 = v29;
      swift_bridgeObjectRelease_n(v19, 2);
      v119 = v9;
      v58 = v9 - v64;
      v65 = (void *)swift_unknownObjectWeakLoadStrong(v102 + 176);
      if (v65)
      {
        v66 = v65;
        objc_msgSend(v65, "frame");
        v113 = v68;
        v116 = v67;
        v70 = v69;

        v71 = (void *)swift_unknownObjectWeakLoadStrong(v102 + 176);
        if (v71)
        {

          v72 = 1.0;
        }
        else
        {
          v72 = 2.0;
        }
        v135.origin.x = v10;
        v135.origin.y = v119;
        v135.size.width = rect;
        v135.size.height = v98;
        v121 = floor(v116);
        v85 = floor(v70 + v72);
        v86 = ceil(v113);
        v87 = ceil(CGRectGetHeight(v135));
        sub_160FDC(v4, (uint64_t)v23, v121, v85, v86, v87);
        swift_unknownObjectRelease(v14);

        *(CGFloat *)(v102 + 40) = v121;
        *(CGFloat *)(v102 + 48) = v85;
        *(CGFloat *)(v102 + 56) = v86;
        *(CGFloat *)(v102 + 64) = v87;
        *(_QWORD *)(v102 + 80) = v122;
        *(_QWORD *)(v102 + 88) = v109;
        *(_QWORD *)(v102 + 96) = v5;
        *(_QWORD *)(v102 + 104) = v7;
        *(_QWORD *)(v102 + 112) = v8;
        *(_QWORD *)(v102 + 120) = v6;
        *(_BYTE *)(v102 + 128) = 0;
      }
      else
      {
        swift_unknownObjectRelease(v14);

      }
      goto LABEL_48;
    }
  }
  v10 = v99;
  if (v29 >= v9
    || (v123 = *v34, v124 = *v112, v125 = *v110, sub_1C37FC((uint64_t)&v123, (uint64_t)&v126), (v57 = v126) == 0))
  {
    swift_unknownObjectRelease(v14);

    goto LABEL_23;
  }
  v117 = v130;
  v120 = v9;
  v73 = v128;
  v114 = v129;
  v74 = v127;
  swift_bridgeObjectRelease_n(v107, 2);
  swift_unknownObjectRelease(v57);
  v75 = (void *)swift_unknownObjectWeakLoadStrong(v102 + 176);
  if (v75)
  {
    v76 = v75;
    v77 = v74 - v99;
    v111 = v73 - v94;
    objc_msgSend(v75, "frame");
    v108 = v78;
    v80 = v79;
    v82 = v81;

    v83 = (void *)swift_unknownObjectWeakLoadStrong(v102 + 176);
    if (v83)
    {

      v84 = 1.0;
    }
    else
    {
      v84 = 2.0;
    }
    v136.origin.x = v77;
    v136.origin.y = v111;
    v136.size.width = v114;
    v136.size.height = v117;
    Height = CGRectGetHeight(v136);
    v89 = v80 + v84;
    v90 = floor(v108);
    v91 = floor(v89);
    v92 = ceil(v82);
    v93 = ceil(Height);
    sub_160FDC(v4, (uint64_t)v23, v90, v91, v92, v93);
    swift_unknownObjectRelease(v14);

    *(CGFloat *)(v102 + 40) = v90;
    *(CGFloat *)(v102 + 48) = v91;
    *(CGFloat *)(v102 + 56) = v92;
    *(CGFloat *)(v102 + 64) = v93;
    *(_QWORD *)(v102 + 80) = v122;
    *(_QWORD *)(v102 + 88) = v109;
    *(_QWORD *)(v102 + 96) = v5;
    *(_QWORD *)(v102 + 104) = v7;
    *(_QWORD *)(v102 + 112) = v8;
    *(_QWORD *)(v102 + 120) = v6;
    *(_BYTE *)(v102 + 128) = 0;
  }
  else
  {
    swift_unknownObjectRelease(v14);

  }
  v58 = v120 - v96;
  if (v30)
    --v30;
  else
    v30 = 0;
LABEL_48:
  *(_QWORD *)(v102 + 24) = v30;
  v59 = !UIAccessibilityIsReduceMotionEnabled();
  v60 = *((_QWORD *)v103 + 5);
  v61 = swift_getObjectType(*((_QWORD *)v103 + 4));
  (*(void (**)(_BOOL8, uint64_t, uint64_t, double, double))(v60 + 96))(v59, v61, v60, 0.0, ceil(v58));
  v62 = *(_QWORD *)(v102 + 144);
  *v101 = 0;
  v101[1] = 0;
  v101[2] = 0;
  swift_unknownObjectRelease(v62);
  v63 = (_BYTE *)swift_unknownObjectWeakLoadStrong(v104);
  swift_release(v102);
  swift_unknownObjectRelease(v103);
  if (v63)
  {
    v63[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling] = 0;

  }
}

uint64_t sub_10F72C()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  char v17[24];

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 176);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = swift_unknownObjectWeakLoadStrong(v0 + 344);
    if (v3)
    {
      v4 = (char *)v3;
      if ((*(_BYTE *)(v0 + 128) & 1) != 0
        || (v5 = *(_QWORD *)(v0 + 80), (v6 = swift_unknownObjectWeakLoadStrong(v0 + 296)) == 0))
      {

      }
      else
      {
        v7 = v6;
        if (sub_111174(v5))
        {
          v8 = &v4[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService];
          swift_beginAccess(&v4[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService], v17, 0, 0);
          v9 = *(_QWORD *)v8;
          v10 = *((_QWORD *)v8 + 1);
          ObjectType = swift_getObjectType(*(_QWORD *)v8);
          v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 8);
          v13 = swift_unknownObjectRetain(v9);
          v14 = v12(ObjectType, v10, v13);
          swift_unknownObjectRelease(v9);
          v15 = *(unsigned __int8 *)(v14 + 96);
          swift_release();
          __asm { BR              X9 }
        }

        swift_unknownObjectRelease(v7);
      }
    }
    else
    {

    }
  }
  return 0;
}

void sub_10F8D8()
{
  JUMPOUT(0x10F8F4);
}

void sub_10FA98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void **v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_381F08, 24, 7);
  swift_weakInit(v2 + 16, v0);
  v10 = sub_112768;
  v11 = v2;
  v6 = _NSConcreteStackBlock;
  v7 = 1107296256;
  v8 = sub_525B8;
  v9 = &unk_381FD0;
  v3 = _Block_copy(&v6);
  swift_release(v11);
  v4 = swift_allocObject(&unk_381F08, 24, 7);
  swift_weakInit(v4 + 16, v0);
  v10 = sub_112788;
  v11 = v4;
  v6 = _NSConcreteStackBlock;
  v7 = 1107296256;
  v8 = sub_525E4;
  v9 = &unk_381FF8;
  v5 = _Block_copy(&v6);
  swift_release(v11);
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v3, v5, 0.3);
  _Block_release(v5);
  _Block_release(v3);
}

void sub_10FBE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  double v9;
  id v10;
  double v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = (void *)swift_unknownObjectWeakLoadStrong(Strong + 168);
    swift_release(v3);
    if (v4)
    {
      swift_beginAccess(v1, &v12, 0, 0);
      v5 = swift_weakLoadStrong(v1);
      if (v5)
      {
        v6 = v5;
        v7 = (void *)swift_unknownObjectWeakLoadStrong(v5 + 176);
        swift_release(v6);
        if (v7)
        {
          v8 = objc_msgSend(v4, "layer");
          LODWORD(v9) = 0;
          objc_msgSend(v8, "setOpacity:", v9);

          v10 = objc_msgSend(v7, "layer");
          LODWORD(v11) = 0;
          objc_msgSend(v10, "setOpacity:", v11);

          v4 = v10;
        }
      }

    }
  }
}

void sub_10FCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _BYTE v10[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = (void *)swift_unknownObjectWeakLoadStrong(Strong + 176);
    swift_release(v4);
    if (v5)
    {
      objc_msgSend(v5, "removeFromSuperview");

    }
  }
  swift_beginAccess(v2, &v9, 0, 0);
  v6 = swift_weakLoadStrong(v2);
  if (v6)
  {
    v7 = v6;
    v8 = (void *)swift_unknownObjectWeakLoadStrong(v6 + 168);
    swift_release(v7);
    if (v8)
    {
      objc_msgSend(v8, "removeFromSuperview");

    }
  }
}

uint64_t sub_10FDC0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  uint64_t v12;
  uint64_t v13;
  CGRect v15;

  v2 = *(_QWORD *)(v1 + 72);
  if (!v2 || (*(_BYTE *)(v1 + 128) & 1) != 0)
    return -1;
  v5 = *(_QWORD *)(v2 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v1 + 80);
    v7 = *(_QWORD *)(v1 + 88);
    v8 = *(double *)(v1 + 96);
    v9 = *(double *)(v1 + 104);
    v10 = *(double *)(v1 + 112);
    v11 = *(double *)(v1 + 120);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 72));
    v12 = 0;
    v13 = v2 + 72;
    while (1)
    {
      if (*(_QWORD *)(v13 - 40) == v6 && *(_QWORD *)(v13 - 32) == v7)
      {
        v15.origin.x = v8;
        v15.origin.y = v9;
        v15.size.width = v10;
        v15.size.height = v11;
        if (CGRectEqualToRect(*(CGRect *)(v13 - 24), v15))
          break;
      }
      ++v12;
      v13 += 48;
      if (v5 == v12)
      {
        v12 = v5;
        break;
      }
    }
    swift_bridgeObjectRelease(v2);
    if ((a1 & 1) != 0)
      return v12 + 1;
  }
  else
  {
    v12 = 0;
    if ((a1 & 1) != 0)
      return v12 + 1;
  }
  result = v12 - 1;
  if (__OFSUB__(v12, 1))
    __break(1u);
  return result;
}

void sub_10FEB0(UIView *a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v15;
  uint64_t Strong;
  void *v17;
  void *v18;
  id v19;
  CGRect v20;

  v7 = v6;
  ObjectType = swift_getObjectType(a1);
  v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
  objc_msgSend(v15, "contentOffset");

  if ((*(_BYTE *)(v7 + 360) & 1) == 0 && (*(_QWORD *)(v7 + 352) & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v7 + 344);
    if (Strong)
    {
      v17 = (void *)Strong;
      v18 = *(void **)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
      if (v18)
      {
        v19 = v18;

        v20.origin.x = a3;
        v20.origin.y = a4;
        v20.size.width = a5;
        v20.size.height = a6;
        UIAccessibilityConvertFrameToScreenCoordinates(v20, a1);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

_QWORD *sub_10FFB4(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  CGFloat *v11;
  double *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  CGFloat *v16;
  CGFloat v17;
  CGFloat y;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t width_low;
  char v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double Height;
  CGFloat v29;
  double v30;
  double MinY;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  double MaxY;
  double v39;
  CGFloat x;
  double v41;
  CGFloat v42;
  double MidY;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  double *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  CGFloat v56;
  CGFloat v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  BOOL v75;
  CGFloat v76;
  CGFloat v77;
  uint64_t v78;
  CGRect *v79;
  uint64_t v80;
  uint64_t v81;
  CGFloat width;
  double v83;
  uint64_t v84;
  double *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t, __n128);
  __n128 v91;
  uint64_t v92;
  char v93;
  __n128 v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  CGFloat v99;
  CGFloat v100;
  double v101;
  double v102;
  uint64_t v103;
  void *v104;
  double v105;
  double v106;
  double v107;
  double v108;
  double MinX;
  unint64_t v110;
  unint64_t v111;
  CGFloat *v112;
  uint64_t v113;
  char *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  double (*v120)(uint64_t, uint64_t, __n128);
  __n128 v121;
  double v122;
  double v123;
  double v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, __n128);
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  double (*v136)(uint64_t, uint64_t, __n128);
  __n128 v137;
  double v138;
  double v139;
  double v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(uint64_t, uint64_t, __n128);
  __n128 v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t (*v152)(uint64_t, uint64_t, __n128);
  __n128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  double v160;
  double v161;
  double v162;
  double v163;
  uint64_t v164;
  double *v165;
  double v166;
  CGFloat r2_8;
  CGFloat r2_16;
  _QWORD *r2_16a;
  CGFloat r2_24;
  CGFloat v171;
  CGRect recta;
  double v173;
  double v174;
  double v175;
  char v176[24];
  _QWORD v177[5];
  char v178[24];
  char v179[24];
  char v180[24];
  char v181[24];
  double *v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;
  CGRect v186;
  CGRect v187;
  CGRect v188;
  CGRect v189;
  CGRect v190;
  CGRect v191;
  CGRect v192;
  CGRect v193;
  CGRect v194;
  CGRect v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;
  CGRect v205;
  CGRect v206;
  CGRect v207;
  CGRect v208;

  v2 = v1;
  if (a1 && *((_QWORD *)a1 + 2))
  {
    v182 = a1;
    v3 = a1[4];
    v5 = a1[5];
    v4 = a1[6];
    v6 = a1[7];
    v7 = a1[8];
    swift_bridgeObjectRetain(a1);
    sub_86720(0, 1);
    v8 = sub_42500(0, 1, 1, _swiftEmptyArrayStorage);
    v10 = v8[2];
    v9 = v8[3];
    if (v10 >= v9 >> 1)
      v8 = sub_42500((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
    v8[2] = v10 + 1;
    v11 = (CGFloat *)&v8[5 * v10];
    v11[4] = v3;
    v11[5] = v5;
    v11[6] = v4;
    v11[7] = v6;
    v11[8] = v7;
    v12 = v182;
    v13 = *((_QWORD *)v182 + 2);
    if (v13)
    {
      v14 = 0;
      v15 = v1 + 296;
      v164 = v1 + 312;
      v165 = v182 + 4;
      v157 = *((_QWORD *)v182 + 2);
      v158 = v1;
      v159 = v1 + 296;
      do
      {
        if (v14 >= *((_QWORD *)v12 + 2))
        {
          __break(1u);
          JUMPOUT(0x11101CLL);
        }
        r2_8 = v7;
        r2_16 = v6;
        v16 = &v165[5 * v14];
        recta.origin.y = *v16;
        v17 = v16[1];
        y = v16[2];
        r2_24 = v16[4];
        v171 = v16[3];
        Strong = swift_unknownObjectWeakLoadStrong(v15);
        recta.origin.x = v17;
        v166 = y;
        if (!Strong)
          goto LABEL_40;
        v20 = Strong;
        v21 = *(_QWORD *)(v2 + 304);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(CGFloat *__return_ptr, uint64_t, uint64_t))(v21 + 16))(&recta.size.width, ObjectType, v21);
        width_low = LOBYTE(recta.size.width);
        v24 = LOBYTE(recta.size.width) != 0;
        if (*(_QWORD *)&recta.size.height)
          v24 = BYTE1(v173);
        if ((v24 & 1) != 0)
        {
          if (!*(_QWORD *)&recta.size.height)
          {
            swift_bridgeObjectRelease(0);
            __asm { BR              X8 }
          }
          v25 = v5;
          v26 = v174;
          swift_bridgeObjectRelease(*(_QWORD *)&recta.size.height);
          if (v26 != 0.0)
            goto LABEL_19;
        }
        else
        {
          v25 = v5;
          swift_bridgeObjectRelease(*(_QWORD *)&recta.size.height);
        }
        v26 = 1.0;
LABEL_19:
        v162 = v26;
        v183.origin.x = v17;
        v27 = y;
        v183.origin.y = y;
        v183.size.width = v171;
        v183.size.height = r2_24;
        Height = CGRectGetHeight(v183);
        v184.origin.x = v25;
        v29 = v4;
        v184.origin.y = v4;
        v184.size.width = r2_16;
        v184.size.height = r2_8;
        v30 = CGRectGetHeight(v184);
        if (v30 >= Height)
          v30 = Height;
        v160 = v30;
        v185.origin.x = v17;
        v185.origin.y = y;
        v185.size.width = v171;
        v185.size.height = r2_24;
        MinY = CGRectGetMinY(v185);
        v186.origin.x = v25;
        v186.origin.y = v4;
        v186.size.width = r2_16;
        v186.size.height = r2_8;
        v32 = CGRectGetMinY(v186);
        v33 = v171;
        if (MinY > v32)
          v34 = MinY;
        else
          v34 = v32;
        v35 = v17;
        v36 = v27;
        v37 = r2_24;
        MaxY = CGRectGetMaxY(*(CGRect *)(&v33 - 2));
        v187.origin.x = v25;
        v187.origin.y = v4;
        v187.size.width = r2_16;
        v187.size.height = r2_8;
        v39 = CGRectGetMaxY(v187);
        if (v39 >= MaxY)
          v39 = MaxY;
        if (v34 >= v39)
        {
          swift_unknownObjectRelease(v20);
          y = v166;
          v5 = v25;
          goto LABEL_40;
        }
        v188.size.width = v171;
        x = v17;
        v188.origin.x = v17;
        v188.origin.y = v166;
        v188.size.height = r2_24;
        v41 = CGRectGetMaxY(v188);
        v189.origin.x = v25;
        v189.size.height = r2_8;
        v189.origin.y = v29;
        v189.size.width = r2_16;
        if (vabdd_f64(v41, CGRectGetMaxY(v189)) >= 7.0)
        {
          v190.size.width = v171;
          v190.origin.x = v17;
          v42 = v166;
          v190.origin.y = v166;
          v190.size.height = r2_24;
          MidY = CGRectGetMidY(v190);
          v5 = v25;
          v191.size.height = r2_8;
          v191.origin.x = v25;
          v191.origin.y = v29;
          v191.size.width = r2_16;
          v44 = CGRectGetMidY(v191);
          swift_unknownObjectRelease(v20);
          v45 = vabdd_f64(MidY, v44);
          x = recta.origin.x;
          if (v45 >= v162 * (v160 * 0.5))
          {
            y = v166;
LABEL_39:
            v4 = v29;
            goto LABEL_40;
          }
        }
        else
        {
          v42 = v166;
          swift_unknownObjectRelease(v20);
          v5 = v25;
        }
        v192.origin.x = x;
        y = v42;
        v192.origin.y = v42;
        v192.size.width = v171;
        v192.size.height = r2_24;
        v46 = CGRectGetMaxY(v192);
        v193.origin.x = v5;
        v193.origin.y = v29;
        v193.size.width = r2_16;
        v193.size.height = r2_8;
        if (v46 >= CGRectGetMaxY(v193))
        {
          v4 = v29;
          goto LABEL_40;
        }
        v194.origin.x = v5;
        v194.origin.y = v29;
        v194.size.width = r2_16;
        v194.size.height = r2_8;
        v47 = CGRectGetHeight(v194);
        v195.origin.x = x;
        v195.origin.y = v42;
        v195.size.width = v171;
        v195.size.height = r2_24;
        if (CGRectGetHeight(v195) * 1.5 >= v47)
          goto LABEL_39;
        v48 = v8[2];
        if (!v48)
          goto LABEL_39;
        v8[2] = v48 - 1;
        v4 = v29;
        if (v48 != 1)
        {
          v49 = (double *)&v8[5 * v48];
          v3 = *(v49 - 6);
          v5 = *(v49 - 5);
          v4 = *(v49 - 4);
          r2_8 = *(v49 - 2);
          r2_16 = *(v49 - 3);
        }
LABEL_40:
        v50 = swift_unknownObjectWeakLoadStrong(v15);
        if (!v50)
          goto LABEL_65;
        v51 = v50;
        v52 = *(_QWORD *)(v2 + 304);
        v53 = swift_getObjectType(v50);
        (*(void (**)(CGFloat *__return_ptr, uint64_t, uint64_t))(v52 + 16))(&recta.size.width, v53, v52);
        v54 = LOBYTE(recta.size.width);
        v55 = LOBYTE(recta.size.width) != 0;
        if (*(_QWORD *)&recta.size.height)
          v55 = BYTE1(v173);
        if ((v55 & 1) == 0)
        {
          v57 = v5;
          swift_bridgeObjectRelease(*(_QWORD *)&recta.size.height);
          v56 = recta.origin.x;
LABEL_48:
          v58 = 1.0;
          goto LABEL_49;
        }
        v56 = recta.origin.x;
        if (!*(_QWORD *)&recta.size.height)
        {
          swift_bridgeObjectRelease(0);
          __asm { BR              X8 }
        }
        v57 = v5;
        v58 = v174;
        swift_bridgeObjectRelease(*(_QWORD *)&recta.size.height);
        if (v58 == 0.0)
          goto LABEL_48;
LABEL_49:
        v163 = v58;
        v196.origin.x = v56;
        v196.origin.y = y;
        v196.size.width = v171;
        v196.size.height = r2_24;
        v59 = CGRectGetHeight(v196);
        v197.origin.x = v57;
        v197.origin.y = v4;
        v197.size.width = r2_16;
        v197.size.height = r2_8;
        v60 = CGRectGetHeight(v197);
        if (v60 >= v59)
          v60 = v59;
        v161 = v60;
        v198.origin.x = v56;
        v198.origin.y = y;
        v198.size.width = v171;
        v198.size.height = r2_24;
        v61 = CGRectGetMinY(v198);
        v199.origin.x = v57;
        v199.origin.y = v4;
        v199.size.width = r2_16;
        v199.size.height = r2_8;
        v62 = CGRectGetMinY(v199);
        v63 = y;
        if (v61 > v62)
          v64 = v61;
        else
          v64 = v62;
        v65 = recta.origin.x;
        v66 = v171;
        v67 = r2_24;
        v68 = CGRectGetMaxY(*(CGRect *)(&v63 - 1));
        v200.origin.x = v57;
        v200.origin.y = v4;
        v200.size.width = r2_16;
        v200.size.height = r2_8;
        v69 = CGRectGetMaxY(v200);
        if (v69 >= v68)
          v69 = v68;
        if (v64 >= v69)
        {
          swift_unknownObjectRelease(v51);
          y = v166;
LABEL_65:
          v80 = swift_weakLoadStrong(v164);
          if (v80)
          {
            v81 = v80;
            CurrentValueSubject.value.getter(&recta.size.width);
            swift_release(v81);
            width = recta.size.width;
            v83 = v174;
            swift_unknownObjectRelease(*(_QWORD *)&recta.size.height);
            swift_unknownObjectRelease(*(_QWORD *)&v83);
            v84 = *(_QWORD *)(*(_QWORD *)&width + 16);
            v6 = v171;
            v5 = recta.origin.x;
            v7 = r2_24;
            if (v84)
            {
              v85 = v12;
              r2_16a = v8;
              v86 = (uint64_t *)(*(_QWORD *)&width + 40);
              while (1)
              {
                v87 = *(v86 - 1);
                v88 = *v86;
                v89 = swift_getObjectType(v87);
                v90 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v88 + 24);
                v91 = swift_unknownObjectRetain(v87);
                v92 = v90(v89, v88, v91);
                if ((v93 & 1) == 0 && *(_QWORD *)&recta.origin.y == v92)
                  break;
                swift_unknownObjectRelease(v87);
                v86 += 2;
                if (!--v84)
                {
                  swift_bridgeObjectRelease(*(_QWORD *)&width);
                  v8 = r2_16a;
                  v2 = v158;
                  v12 = v85;
LABEL_82:
                  v13 = v157;
                  v15 = v159;
                  goto LABEL_8;
                }
              }
              v94 = swift_bridgeObjectRelease(*(_QWORD *)&width);
              v95 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v88 + 48))(v89, v88, v94);
              v12 = v85;
              if (!v95)
              {
                swift_unknownObjectRelease(v87);
                v8 = r2_16a;
                v2 = v158;
                goto LABEL_82;
              }
              v97 = (void *)v95;
              v98 = v96;
              v177[0] = *(_QWORD *)&recta.origin.y;
              v177[1] = *(_QWORD *)&recta.origin.x;
              *(CGFloat *)&v177[2] = y;
              *(CGFloat *)&v177[3] = v171;
              *(CGFloat *)&v177[4] = r2_24;
              (*(void (**)(CGFloat *__return_ptr, _QWORD *, uint64_t, uint64_t))(v88 + 296))(&recta.size.width, v177, v89, v88);
              v13 = v157;
              if (*(_QWORD *)&recta.size.width)
              {
                v100 = v174;
                v99 = v175;
                v102 = recta.size.height;
                v101 = v173;
                swift_unknownObjectRelease(*(_QWORD *)&recta.size.width);
                v103 = swift_getObjectType(v97);
                v104 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8))(v103, v98);
                objc_msgSend(v104, "contentOffset");
                v106 = v105;
                v108 = v107;

                v206.origin.x = v102 - v106;
                v206.origin.y = v101 - v108;
                v206.size.width = v100;
                v206.size.height = v99;
                MinX = CGRectGetMinX(v206);
                objc_msgSend(v97, "frame");
                v8 = r2_16a;
                v2 = v158;
                if (MinX >= CGRectGetMaxX(v207))
                {
                  swift_unknownObjectRelease(v87);

                  v15 = v159;
                  v6 = v171;
                  v5 = recta.origin.x;
                }
                else
                {
                  v111 = r2_16a[2];
                  v110 = r2_16a[3];
                  if (v111 >= v110 >> 1)
                    v8 = sub_42500((_QWORD *)(v110 > 1), v111 + 1, 1, r2_16a);
                  v6 = v171;
                  v5 = recta.origin.x;
                  v8[2] = v111 + 1;
                  v112 = (CGFloat *)&v8[5 * v111];
                  v112[4] = recta.origin.y;
                  v112[5] = recta.origin.x;
                  v112[6] = y;
                  v112[7] = v171;
                  v112[8] = r2_24;
                  swift_unknownObjectRelease(v87);

                  v15 = v159;
                }
              }
              else
              {
                swift_unknownObjectRelease(v87);

                v8 = r2_16a;
                v2 = v158;
                v15 = v159;
              }
            }
            else
            {
              swift_bridgeObjectRelease(*(_QWORD *)&width);
              v15 = v159;
            }
          }
          else
          {
            v6 = v171;
            v5 = recta.origin.x;
            v7 = r2_24;
          }
          goto LABEL_8;
        }
        v201.origin.x = recta.origin.x;
        v201.origin.y = v166;
        v201.size.width = v171;
        v201.size.height = r2_24;
        v70 = CGRectGetMaxY(v201);
        v202.origin.x = v57;
        v202.origin.y = v4;
        v202.size.width = r2_16;
        v202.size.height = r2_8;
        if (vabdd_f64(v70, CGRectGetMaxY(v202)) >= 7.0)
        {
          v203.origin.x = recta.origin.x;
          v203.origin.y = v166;
          v203.size.width = v171;
          v203.size.height = r2_24;
          v73 = CGRectGetMidY(v203);
          v204.origin.x = v57;
          v204.origin.y = v4;
          v204.size.width = r2_16;
          v204.size.height = r2_8;
          v74 = CGRectGetMidY(v204);
          swift_unknownObjectRelease(v51);
          v75 = vabdd_f64(v73, v74) < v163 * (v161 * 0.5);
          y = v166;
          v71 = v57;
          v72 = v4;
          if (!v75)
            goto LABEL_65;
        }
        else
        {
          swift_unknownObjectRelease(v51);
          y = v166;
          v71 = v57;
          v72 = v4;
        }
        if (*(_QWORD *)&recta.origin.y == *(_QWORD *)&v3)
        {
          v77 = r2_8;
          v76 = r2_16;
          v208.size.width = v171;
          v208.origin.x = recta.origin.x;
          v208.origin.y = y;
          v208.size.height = r2_24;
          v205 = CGRectUnion(*(CGRect *)&v71, v208);
          v5 = v205.origin.x;
          y = v205.origin.y;
          v6 = v205.size.width;
          v7 = v205.size.height;
          v78 = v8[2];
          if (v78)
          {
            v79 = (CGRect *)&v8[5 * v78];
            v79[-1].size.height = recta.origin.y;
            *v79 = v205;
          }
          else
          {
            if (v8[3] <= 1uLL)
              v8 = sub_42500(0, 1, 1, v8);
            v8[2] = 1;
            v8[4] = *(_QWORD *)&recta.origin.y;
            *((CGFloat *)v8 + 5) = v5;
            *((CGFloat *)v8 + 6) = y;
            *((CGFloat *)v8 + 7) = v6;
            *((CGFloat *)v8 + 8) = v7;
          }
        }
        else
        {
          recta.origin.y = v3;
          v5 = v71;
          y = v72;
          v7 = r2_8;
          v6 = r2_16;
        }
LABEL_8:
        ++v14;
        v3 = recta.origin.y;
        v4 = y;
      }
      while (v14 != v13);
    }
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
  }
  v113 = swift_unknownObjectWeakLoadStrong(v2 + 344);
  if (v113)
  {
    v114 = (char *)v113;
    v115 = (uint64_t *)(v113 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
    swift_beginAccess(v113 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, &v182, 0, 0);
    v116 = *v115;
    swift_beginAccess(*v115 + 112, v181, 0, 0);
    v117 = *(_QWORD *)(v116 + 112);
    v118 = *(_QWORD *)(v116 + 120);
    v119 = swift_getObjectType(v117);
    v120 = *(double (**)(uint64_t, uint64_t, __n128))(v118 + 80);
    v121 = swift_unknownObjectRetain(v117);
    v122 = v120(v119, v118, v121);
    v124 = v123;
    swift_unknownObjectRelease(v117);
    if (v122 < v124)
    {
      v125 = *v115;
      swift_beginAccess(*v115 + 112, v176, 0, 0);
      v126 = *(_QWORD *)(v125 + 112);
      v127 = *(_QWORD *)(v125 + 120);
      v128 = swift_getObjectType(v126);
      v129 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v127 + 120);
      v130 = swift_unknownObjectRetain(v126);
      v131 = v129(v128, v127, v130);
      swift_unknownObjectRelease(v126);
      if (v131 > 1)
        goto LABEL_95;
    }
    v132 = *v115;
    swift_beginAccess(*v115 + 112, v180, 0, 0);
    v133 = *(_QWORD *)(v132 + 112);
    v134 = *(_QWORD *)(v132 + 120);
    v135 = swift_getObjectType(v133);
    v136 = *(double (**)(uint64_t, uint64_t, __n128))(v134 + 80);
    v137 = swift_unknownObjectRetain(v133);
    v138 = v136(v135, v134, v137);
    v140 = v139;
    swift_unknownObjectRelease(v133);
    if (v138 >= v140)
    {
      v141 = *v115;
      swift_beginAccess(*v115 + 112, v179, 0, 0);
      v142 = *(_QWORD *)(v141 + 112);
      v143 = *(_QWORD *)(v141 + 120);
      v144 = swift_getObjectType(v142);
      v145 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v143 + 120);
      v146 = swift_unknownObjectRetain(v142);
      v147 = v145(v144, v143, v146);
      swift_unknownObjectRelease(v142);
      if (v147 > 1)
      {
LABEL_95:
        v148 = &v114[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService];
        swift_beginAccess(&v114[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService], v178, 0, 0);
        v149 = *(_QWORD *)v148;
        v150 = *((_QWORD *)v148 + 1);
        v151 = swift_getObjectType(*(_QWORD *)v148);
        v152 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v150 + 8);
        v153 = swift_unknownObjectRetain(v149);
        v154 = v152(v151, v150, v153);
        swift_unknownObjectRelease(v149);
        v155 = *(unsigned __int8 *)(v154 + 96);
        swift_release(v154);
        __asm { BR              X9 }
      }
    }

  }
  return v8;
}

uint64_t sub_111084(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  char v15;
  _QWORD v17[5];

  Strong = swift_weakLoadStrong(v1 + 312);
  if (!Strong)
    return 0;
  v4 = Strong;
  CurrentValueSubject.value.getter(v17);
  swift_release(v4);
  v5 = v17[0];
  v6 = v17[3];
  swift_unknownObjectRelease(v17[1]);
  swift_unknownObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v8 = (uint64_t *)(v5 + 40);
  while (1)
  {
    v9 = *(v8 - 1);
    v10 = *v8;
    ObjectType = swift_getObjectType(v9);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 24);
    v13 = swift_unknownObjectRetain(v9);
    v14 = v12(ObjectType, v10, v13);
    if ((v15 & 1) == 0 && v14 == a1)
      break;
    swift_unknownObjectRelease(v9);
    v8 += 2;
    if (!--v7)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease(v5);
  return v9;
}

uint64_t sub_111174(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD v17[5];

  Strong = swift_weakLoadStrong(v1 + 312);
  if (!Strong)
    return 0;
  CurrentValueSubject.value.getter(v17);
  swift_release(Strong);
  v4 = v17[0];
  v5 = v17[3];
  swift_unknownObjectRelease(v17[1]);
  swift_unknownObjectRelease(v5);
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = (uint64_t *)(v4 + 40);
    while (1)
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      ObjectType = swift_getObjectType(v8);
      v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 24);
      v12 = swift_unknownObjectRetain(v8);
      v13 = v11(ObjectType, v9, v12);
      if ((v14 & 1) == 0 && v13 == a1)
        break;
      swift_unknownObjectRelease(v8);
      v7 += 2;
      if (!--v6)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease(v4);
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 48))(ObjectType, v9);
    swift_unknownObjectRelease(v8);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  return v15;
}

uint64_t sub_11128C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  _QWORD v12[5];

  result = swift_weakLoadStrong(v0 + 312);
  if (result)
  {
    v2 = result;
    CurrentValueSubject.value.getter(v12);
    swift_release(v2);
    v3 = v12[0];
    v4 = v12[3];
    swift_unknownObjectRelease(v12[1]);
    swift_unknownObjectRelease(v4);
    v5 = *(_QWORD *)(v3 + 16);
    if (v5)
    {
      v6 = (uint64_t *)(v3 + 40);
      do
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        ObjectType = swift_getObjectType(v7);
        v10 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 256);
        v11 = swift_unknownObjectRetain(v7);
        v10(ObjectType, v8, v11);
        swift_unknownObjectRelease(v7);
        v6 += 2;
        --v5;
      }
      while (v5);
    }
    return swift_bridgeObjectRelease(v3);
  }
  return result;
}

void sub_11134C(uint64_t a1)
{
  void *Strong;
  void *v3;
  void *v4;
  id v5;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + 176);
  if (Strong)
  {
    v3 = Strong;
    objc_msgSend(Strong, "setAlpha:", 1.0);

  }
  v4 = (void *)swift_unknownObjectWeakLoadStrong(a1 + 168);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setAlpha:", 1.0);

  }
}

void sub_1113D0(char a1, void *a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;

  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_3821E8, 32, 7);
  *(_BYTE *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v9[4] = sub_112C6C;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_525B8;
  v9[3] = &unk_382200;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = a2;
  swift_release(v7);
  objc_msgSend(v4, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v6, 0, 0.5, 0.0);
  _Block_release(v6);
}

void sub_1114AC(char a1, void *a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  void *v16;
  id (*v17)();
  uint64_t v18;

  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_382238, 32, 7);
  *(_BYTE *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v17 = sub_112C78;
  v18 = v5;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_525B8;
  v16 = &unk_382250;
  v6 = _Block_copy(&v13);
  v7 = v18;
  v8 = a2;
  swift_release(v7);
  objc_msgSend(v4, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v6, 0.0, 0.25);
  _Block_release(v6);
  v9 = swift_allocObject(&unk_382288, 32, 7);
  *(_BYTE *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = v8;
  v17 = sub_112CD0;
  v18 = v9;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_525B8;
  v16 = &unk_3822A0;
  v10 = _Block_copy(&v13);
  v11 = v18;
  v12 = v8;
  swift_release(v11);
  objc_msgSend(v4, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v10, 0.25, 0.25);
  _Block_release(v10);
}

uint64_t ReadingLoupeStateController.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 144));
  swift_unknownObjectWeakDestroy(v0 + 168);
  swift_unknownObjectWeakDestroy(v0 + 176);
  swift_unknownObjectWeakDestroy(v0 + 184);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  swift_weakDestroy(v0 + 224);
  swift_weakDestroy(v0 + 232);
  sub_47418(v0 + 296);
  swift_weakDestroy(v0 + 312);
  sub_47418(v0 + 320);
  swift_unknownObjectWeakDestroy(v0 + 344);
  sub_47418(v0 + 368);
  return v0;
}

uint64_t ReadingLoupeStateController.__deallocating_deinit()
{
  uint64_t v0;

  ReadingLoupeStateController.deinit();
  return swift_deallocClassInstance(v0, 384, 7);
}

uint64_t sub_1116B8()
{
  uint64_t v0;

  *(_WORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_QWORD *)(v0 + 120) = 0;
  *(_WORD *)(v0 + 128) = 257;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_OWORD *)(v0 + 152) = 0u;
  swift_unknownObjectWeakInit(v0 + 168, 0);
  swift_unknownObjectWeakInit(v0 + 176, 0);
  swift_unknownObjectWeakInit(v0 + 184, 0);
  *(_WORD *)(v0 + 192) = 0;
  *(_QWORD *)(v0 + 200) = 0;
  *(_QWORD *)(v0 + 208) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v0 + 216) = 0;
  swift_weakInit(v0 + 224, 0);
  swift_weakInit(v0 + 232, 0);
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_BYTE *)(v0 + 288) = 1;
  *(_WORD *)(v0 + 289) = 0;
  *(_QWORD *)(v0 + 304) = 0;
  swift_unknownObjectWeakInit(v0 + 296, 0);
  swift_weakInit(v0 + 312, 0);
  *(_QWORD *)(v0 + 328) = 0;
  swift_unknownObjectWeakInit(v0 + 320, 0);
  *(_BYTE *)(v0 + 336) = 0;
  swift_unknownObjectWeakInit(v0 + 344, 0);
  *(_QWORD *)(v0 + 352) = 0;
  *(_BYTE *)(v0 + 360) = 1;
  *(_QWORD *)(v0 + 376) = 0;
  swift_unknownObjectWeakInit(v0 + 368, 0);
  return v0;
}

void sub_1117CC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  Swift::Int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD *v104;
  Swift::Int v105;
  Swift::Int v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return;
      v88 = 0;
      v89 = *a1;
      v90 = 1;
      while (1)
      {
        v91 = *(_QWORD *)(v89 + 16 * v90);
        v92 = v88;
        do
        {
          if (v91 >= *(_QWORD *)(v89 + v92))
            break;
          if (!v89)
            goto LABEL_142;
          v93 = (_QWORD *)(v89 + v92);
          v94 = *(_QWORD *)(v89 + v92 + 24);
          *(_OWORD *)(v89 + v92 + 16) = *(_OWORD *)(v89 + v92);
          *v93 = v91;
          v93[1] = v94;
          v92 -= 16;
        }
        while (v92 != -16);
        ++v90;
        v88 += 16;
        if (v90 == v3)
          return;
      }
    }
    goto LABEL_138;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_147:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v6 = v4;
  v102 = a1;
  if (v3 < 2)
  {
    v10 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
      v13 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_104;
    }
    v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_319AC(&qword_3BBF90);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(v9 + 16) = v7;
    v104 = (_QWORD *)v9;
    __dst = (char *)(v9 + 32);
  }
  v11 = 0;
  v12 = *a1;
  v103 = *a1 + 32;
  v101 = *a1 - 16;
  v13 = (char *)_swiftEmptyArrayStorage;
  v105 = v6;
  v106 = v3;
  v107 = v12;
  while (1)
  {
    v15 = v11++;
    if (v11 < v3)
    {
      v16 = *(_QWORD *)(v12 + 16 * v11);
      v17 = 16 * v15;
      v18 = *(_QWORD *)(v12 + 16 * v15);
      v11 = v15 + 2;
      if (v15 + 2 < v3)
      {
        v19 = (uint64_t *)(v103 + 16 * v15);
        v20 = v16;
        while (1)
        {
          v22 = *v19;
          v19 += 2;
          v21 = v22;
          if (v16 < v18 == v22 >= v20)
            break;
          ++v11;
          v20 = v21;
          if (v3 == v11)
          {
            v11 = v3;
            break;
          }
        }
      }
      if (v16 < v18)
      {
        if (v11 < v15)
          goto LABEL_139;
        if (v15 < v11)
        {
          v23 = 16 * v11;
          v24 = v11;
          v25 = v15;
          do
          {
            if (v25 != --v24)
            {
              if (!v12)
                goto LABEL_145;
              v26 = v12 + v23;
              v27 = *(_QWORD *)(v12 + v17);
              v28 = *(_QWORD *)(v12 + v17 + 8);
              *(_OWORD *)(v12 + v17) = *(_OWORD *)(v12 + v23 - 16);
              *(_QWORD *)(v26 - 16) = v27;
              *(_QWORD *)(v26 - 8) = v28;
            }
            ++v25;
            v23 -= 16;
            v17 += 16;
          }
          while (v25 < v24);
        }
      }
    }
    if (v11 < v3)
    {
      if (__OFSUB__(v11, v15))
        goto LABEL_137;
      if (v11 - v15 < v6)
      {
        v29 = v15 + v6;
        if (__OFADD__(v15, v6))
          goto LABEL_140;
        if (v29 >= v3)
          v29 = v3;
        if (v29 < v15)
          goto LABEL_141;
        if (v11 != v29)
        {
          v30 = v101 + 16 * v11;
          do
          {
            v31 = *(_QWORD *)(v12 + 16 * v11);
            v32 = v15;
            v33 = v30;
            do
            {
              if (v31 >= *(_QWORD *)v33)
                break;
              if (!v12)
                goto LABEL_143;
              v34 = *(_QWORD *)(v33 + 24);
              *(_OWORD *)(v33 + 16) = *(_OWORD *)v33;
              *(_QWORD *)v33 = v31;
              *(_QWORD *)(v33 + 8) = v34;
              v33 -= 16;
              ++v32;
            }
            while (v11 != v32);
            ++v11;
            v30 += 16;
          }
          while (v11 != v29);
          v11 = v29;
        }
      }
    }
    if (v11 < v15)
    {
LABEL_132:
      __break(1u);
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      v13 = sub_1D3038(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v36 = *((_QWORD *)v13 + 2);
    v35 = *((_QWORD *)v13 + 3);
    v14 = v36 + 1;
    v12 = v107;
    if (v36 >= v35 >> 1)
    {
      v85 = sub_1D3038((char *)(v35 > 1), v36 + 1, 1, v13);
      v12 = v107;
      v13 = v85;
    }
    *((_QWORD *)v13 + 2) = v14;
    v37 = v13 + 32;
    v38 = &v13[16 * v36 + 32];
    *(_QWORD *)v38 = v15;
    *((_QWORD *)v38 + 1) = v11;
    if (v36)
      break;
    v14 = 1;
LABEL_15:
    v6 = v105;
    v3 = v106;
    if (v11 >= v106)
    {
      v10 = v104;
LABEL_104:
      v87 = v13;
      v104 = v10;
      if (v14 < 2)
        goto LABEL_95;
      v95 = *v102;
      while (1)
      {
        v96 = v14 - 2;
        if (v14 < 2)
          break;
        if (!v95)
          goto LABEL_146;
        v86 = v87;
        v97 = *(_QWORD *)&v87[16 * v96 + 32];
        v98 = *(_QWORD *)&v87[16 * v14 + 24];
        sub_111E9C((char *)(v95 + 16 * v97), (char *)(v95 + 16 * *(_QWORD *)&v87[16 * v14 + 16]), v95 + 16 * v98, __dst);
        if (v1)
          goto LABEL_94;
        if (v98 < v97)
          goto LABEL_134;
        if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
          v86 = sub_1D34BC((uint64_t)v86);
        if (v96 >= *((_QWORD *)v86 + 2))
          goto LABEL_135;
        v99 = &v86[16 * v96 + 32];
        *(_QWORD *)v99 = v97;
        *((_QWORD *)v99 + 1) = v98;
        v100 = *((_QWORD *)v86 + 2);
        if (v14 > v100)
          goto LABEL_136;
        memmove(&v86[16 * v14 + 16], &v86[16 * v14 + 32], 16 * (v100 - v14));
        v87 = v86;
        *((_QWORD *)v86 + 2) = v100 - 1;
        v14 = v100 - 1;
        if (v100 <= 2)
          goto LABEL_95;
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
  }
  while (1)
  {
    v39 = v14 - 1;
    if (v14 >= 4)
    {
      v44 = &v37[16 * v14];
      v45 = *((_QWORD *)v44 - 8);
      v46 = *((_QWORD *)v44 - 7);
      v50 = __OFSUB__(v46, v45);
      v47 = v46 - v45;
      if (v50)
        goto LABEL_121;
      v49 = *((_QWORD *)v44 - 6);
      v48 = *((_QWORD *)v44 - 5);
      v50 = __OFSUB__(v48, v49);
      v42 = v48 - v49;
      v43 = v50;
      if (v50)
        goto LABEL_122;
      v51 = v14 - 2;
      v52 = &v37[16 * v14 - 32];
      v54 = *(_QWORD *)v52;
      v53 = *((_QWORD *)v52 + 1);
      v50 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      if (v50)
        goto LABEL_124;
      v50 = __OFADD__(v42, v55);
      v56 = v42 + v55;
      if (v50)
        goto LABEL_127;
      if (v56 >= v47)
      {
        v74 = &v37[16 * v39];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v50 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v50)
          goto LABEL_131;
        v67 = v42 < v77;
        goto LABEL_83;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v68 = *((_QWORD *)v13 + 4);
        v69 = *((_QWORD *)v13 + 5);
        v50 = __OFSUB__(v69, v68);
        v61 = v69 - v68;
        v62 = v50;
        goto LABEL_77;
      }
      v41 = *((_QWORD *)v13 + 4);
      v40 = *((_QWORD *)v13 + 5);
      v50 = __OFSUB__(v40, v41);
      v42 = v40 - v41;
      v43 = v50;
    }
    if ((v43 & 1) != 0)
      goto LABEL_123;
    v51 = v14 - 2;
    v57 = &v37[16 * v14 - 32];
    v59 = *(_QWORD *)v57;
    v58 = *((_QWORD *)v57 + 1);
    v60 = __OFSUB__(v58, v59);
    v61 = v58 - v59;
    v62 = v60;
    if (v60)
      goto LABEL_126;
    v63 = &v37[16 * v39];
    v65 = *(_QWORD *)v63;
    v64 = *((_QWORD *)v63 + 1);
    v50 = __OFSUB__(v64, v65);
    v66 = v64 - v65;
    if (v50)
      goto LABEL_129;
    if (__OFADD__(v61, v66))
      goto LABEL_130;
    if (v61 + v66 >= v42)
    {
      v67 = v42 < v66;
LABEL_83:
      if (v67)
        v39 = v51;
      goto LABEL_85;
    }
LABEL_77:
    if ((v62 & 1) != 0)
      goto LABEL_125;
    v70 = &v37[16 * v39];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v50 = __OFSUB__(v71, v72);
    v73 = v71 - v72;
    if (v50)
      goto LABEL_128;
    if (v73 < v61)
      goto LABEL_15;
LABEL_85:
    v78 = v39 - 1;
    if (v39 - 1 >= v14)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!v12)
      goto LABEL_144;
    v79 = v13;
    v80 = &v37[16 * v78];
    v81 = *(_QWORD *)v80;
    v82 = &v37[16 * v39];
    v83 = *((_QWORD *)v82 + 1);
    sub_111E9C((char *)(v12 + 16 * *(_QWORD *)v80), (char *)(v12 + 16 * *(_QWORD *)v82), v12 + 16 * v83, __dst);
    if (v1)
      break;
    if (v83 < v81)
      goto LABEL_118;
    if (v39 > *((_QWORD *)v79 + 2))
      goto LABEL_119;
    *(_QWORD *)v80 = v81;
    *(_QWORD *)&v37[16 * v78 + 8] = v83;
    v84 = *((_QWORD *)v79 + 2);
    if (v39 >= v84)
      goto LABEL_120;
    v13 = v79;
    v14 = v84 - 1;
    memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
    *((_QWORD *)v79 + 2) = v84 - 1;
    v12 = v107;
    if (v84 <= 2)
      goto LABEL_15;
  }
  v86 = v79;
LABEL_94:
  v87 = v86;
LABEL_95:
  swift_bridgeObjectRelease(v87);
  v104[2] = 0;
  swift_bridgeObjectRelease(v104);
}

uint64_t sub_111E9C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (char *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *((_QWORD *)v18 - 2);
          v18 -= 16;
          if (*((_QWORD *)v16 - 2) >= v20)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1D3294((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

double sub_112114(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  _QWORD v27[3];

  v3 = v2;
  v6 = sub_319AC(&qword_3BCE98);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v27[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + 376) = a2;
  v10 = swift_unknownObjectWeakAssign(v3 + 368, a1);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v3 + 376);
    ObjectType = swift_getObjectType(Strong);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(ObjectType, v14);
    v27[0] = v16;
    v17 = sub_319AC((uint64_t *)&unk_3BCEA0);
    v18 = sub_3DCC0(&qword_3B9B38, (uint64_t *)&unk_3BCEA0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v19 = sub_34284(&qword_3BCEB0, (uint64_t (*)(uint64_t))type metadata accessor for BookLayoutMode, (uint64_t)&unk_2E4E88);
    Publisher<>.removeDuplicates()(v17, v18, v19);
    swift_release(v16);
    v20 = swift_allocObject(&unk_381F08, 24, 7);
    swift_weakInit(v20 + 16, v3);
    v21 = sub_3DCC0(&qword_3BCEB8, &qword_3BCE98, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v22 = Publisher<>.sink(receiveValue:)(sub_112798, v20, v6, v21);
    v23 = swift_release(v20);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v23);
    v24 = v3 + 208;
    v25 = swift_beginAccess(v24, v27, 33, 0);
    AnyCancellable.store(in:)(v24, v25);
    swift_endAccess(v27);
    swift_unknownObjectRelease(v13);
    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

double sub_1122F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD v12[3];
  _BYTE v13[24];

  v2 = v1;
  swift_beginAccess(v2 + 224, v13, 1, 0);
  v4 = swift_weakAssign(v2 + 224, a1);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v12[0] = Strong;
    v7 = swift_allocObject(&unk_381F08, 24);
    swift_weakInit(v7 + 16, v2);
    v8 = sub_319AC(&qword_3BC918);
    v9 = sub_3DCC0(&qword_3BC920, &qword_3BC918, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Publisher<>.sink(receiveValue:)(sub_112428, v7, v8, v9);
    swift_release();
    swift_release();
    v10 = v2 + 208;
    v11 = swift_beginAccess(v10, v12, 33, 0);
    AnyCancellable.store(in:)(v10, v11);
    swift_endAccess(v12);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_112404()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_112428(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_10AA28(a1, v1);
}

double sub_112440(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  _QWORD v12[3];
  _BYTE v13[24];

  v2 = v1;
  swift_beginAccess(v2 + 232, v13, 1, 0);
  v4 = swift_weakAssign(v2 + 232, a1);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v12[0] = Strong;
    v7 = swift_allocObject(&unk_381F08, 24);
    swift_weakInit(v7 + 16, v2);
    v8 = sub_319AC(&qword_3BC918);
    v9 = sub_3DCC0(&qword_3BC920, &qword_3BC918, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Publisher<>.sink(receiveValue:)(sub_112428, v7, v8, v9);
    swift_release();
    swift_release();
    v10 = v2 + 208;
    v11 = swift_beginAccess(v10, v12, 33, 0);
    AnyCancellable.store(in:)(v10, v11);
    swift_endAccess(v12);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_112550@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 184;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_1125A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 224;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_weakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_1125EC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_112650(a1, a2, a3, a4, (void (*)(uint64_t))sub_1122F4);
}

uint64_t sub_1125F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 232;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_weakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_112644(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_112650(a1, a2, a3, a4, (void (*)(uint64_t))sub_112440);
}

uint64_t sub_112650(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = swift_retain(*a1);
  a5(v7);
  return swift_release(v6);
}

uint64_t type metadata accessor for ReadingLoupeStateController()
{
  return objc_opt_self(_TtC8BookEPUB27ReadingLoupeStateController);
}

uint64_t method lookup function for ReadingLoupeStateController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingLoupeStateController);
}

uint64_t dispatch thunk of ReadingLoupeStateController.readingLoupeGesture.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of ReadingLoupeStateController.curlCompletedPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of ReadingLoupeStateController.curlCompletedPublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of ReadingLoupeStateController.curlCompletedPublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of ReadingLoupeStateController.slideCompletedPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of ReadingLoupeStateController.updateIfNecessary()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1000))();
}

uint64_t getEnumTagSinglePayload for LineRectElement(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LineRectElement(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LineRectElement()
{
  return &type metadata for LineRectElement;
}

void sub_112768()
{
  uint64_t v0;

  sub_10FBE4(v0);
}

uint64_t sub_112770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_112780(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_112788(uint64_t a1)
{
  uint64_t v1;

  sub_10FCF4(a1, v1);
}

void sub_112790()
{
  uint64_t v0;

  sub_11134C(v0);
}

double sub_112798(uint64_t *a1)
{
  uint64_t v1;

  return sub_10D278(a1, v1);
}

void sub_1127A0(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10AF70(a1, v1);
}

double sub_1127A8(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_10B034(a1, v1);
}

uint64_t sub_1127B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3B7018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1127F8(uint64_t a1)
{
  uint64_t v1;

  sub_10B748(a1, v1);
}

void sub_112800(uint64_t a1)
{
  uint64_t v1;

  sub_10B820(a1, v1);
}

uint64_t sub_112808()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_11282C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = sub_1128E0(*a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
  *a2 = v4;
  return swift_bridgeObjectRetain(v4);
}

double sub_112878(uint64_t a1)
{
  uint64_t v1;

  return sub_10B8FC(a1, v1);
}

uint64_t sub_112880()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1128A4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

void sub_1128C8(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10BA70(a1, v1);
}

void sub_1128D4()
{
  uint64_t v0;

  sub_10BF14(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1128E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  Swift::String v18;
  void *object;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  Swift::String v23;
  Swift::String v24;
  void *v25;
  Swift::String v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37[2];

  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) == 0)
  {
    v37[0] = 0;
    v37[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(100);
    v18._countAndFlagsBits = StaticString.description.getter(a2, a3, a4);
    object = v18._object;
    String.append(_:)(v18);
    swift_bridgeObjectRelease(object);
    v20._countAndFlagsBits = 32;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    v21._countAndFlagsBits = StaticString.description.getter(a5, a6, a7);
    v22 = v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(v22);
    v23._countAndFlagsBits = 32;
    v23._object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    v36 = a8;
    v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
    v25 = v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(v25);
    v26._object = (void *)0x80000000002CC0F0;
    v26._countAndFlagsBits = 0xD00000000000005CLL;
    String.append(_:)(v26);
    v27 = 0xE000000000000000;
    if (a10)
    {
      swift_bridgeObjectRetain(a10);
      swift_bridgeObjectRelease(0xE000000000000000);
      v27 = a10;
      if (!BEIsInternalInstall())
        goto LABEL_4;
    }
    else
    {
      a9 = v37[0];
      if (!BEIsInternalInstall())
      {
LABEL_4:
        if (qword_3B5908 == -1)
          goto LABEL_5;
        goto LABEL_11;
      }
    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, a9, v27, "BookEPUB/Publisher+Additions.swift", 34, 2, 50, 0);
    __break(1u);
LABEL_11:
    swift_once(&qword_3B5908, sub_1B0C90);
LABEL_5:
    v29 = type metadata accessor for Logger(0);
    sub_555F0(v29, (uint64_t)qword_3C09B8);
    v30 = swift_bridgeObjectRetain(v27);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      v37[0] = v34;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain(v27);
      v36 = sub_33524(a9, v27, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v33 + 4);
      swift_bridgeObjectRelease_n(v27, 3);
      _os_log_impl(&dword_0, v31, v32, "%s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v27, 2);
    }
  }
  return a1;
}

uint64_t sub_112C04()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

void sub_112C30()
{
  uint64_t v0;

  sub_10EF68(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_112C3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_112C60()
{
  uint64_t v0;

  sub_1113D0(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_112C6C()
{
  uint64_t v0;

  sub_1114AC(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_112C78()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  objc_msgSend(v1, "center");
  return objc_msgSend(v1, "setCenter:");
}

id sub_112CD0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  objc_msgSend(v1, "center");
  return objc_msgSend(v1, "setCenter:");
}

uint64_t sub_112D84()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3CF0C0);
  sub_555F0(v0, (uint64_t)qword_3CF0C0);
  return Logger.init(subsystem:category:)(0xD000000000000019, 0x80000000002CBCD0, 0xD000000000000020, 0x80000000002CC1C0, v1);
}

void sub_112E00(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];

  v3 = v2;
  v6 = *v2;
  v35[0] = a1;
  v35[1] = a2;
  v7 = sub_5C170();
  v8 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(35, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v7);
  v9 = v8;
  v10 = v8[2];
  if (v10 > 2)
  {
    swift_bridgeObjectRelease(v8);
    if (qword_3B5790 != -1)
      swift_once(&qword_3B5790, sub_112D84);
    v11 = type metadata accessor for Logger(0);
    sub_555F0(v11, (uint64_t)qword_3CF0C0);
    swift_bridgeObjectRetain(a2);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v35[0] = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain(a2);
      v34 = sub_33524(a1, a2, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v15 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      v17 = "Invalid amount of components in href '%s'";
LABEL_14:
      _os_log_impl(&dword_0, v13, v14, v17, v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

LABEL_16:
      swift_deallocPartialClassInstance(v3, v6, 48, 7);
      return;
    }
    goto LABEL_15;
  }
  if (!v10)
  {
    swift_bridgeObjectRelease(v8);
    if (qword_3B5790 != -1)
      swift_once(&qword_3B5790, sub_112D84);
    v32 = type metadata accessor for Logger(0);
    sub_555F0(v32, (uint64_t)qword_3CF0C0);
    swift_bridgeObjectRetain(a2);
    v13 = Logger.logObject.getter(v33);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v35[0] = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain(a2);
      v34 = sub_33524(a1, a2, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35, v15 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      v17 = "No document href in href '%s'";
      goto LABEL_14;
    }
LABEL_15:

    swift_bridgeObjectRelease_n(a2, 2);
    goto LABEL_16;
  }
  v18 = v8[4];
  v19 = v8[5];
  v20 = v8[6];
  v21 = v8[7];
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(a2);
  v22 = static String._fromSubstring(_:)(v18, v19, v20, v21);
  v24 = v23;
  swift_bridgeObjectRelease(v21);
  v3[2] = v22;
  v3[3] = v24;
  if (v10 == 2)
  {
    if (v9[2] < 2uLL)
    {
      __break(1u);
    }
    else
    {
      v25 = v9[8];
      v26 = v9[9];
      v27 = v9[10];
      v28 = v9[11];
      swift_bridgeObjectRetain(v28);
      swift_bridgeObjectRelease(v9);
      v29 = static String._fromSubstring(_:)(v25, v26, v27, v28);
      v31 = v30;
      swift_bridgeObjectRelease(v28);
      v3[4] = v29;
      v3[5] = v31;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v9);
    v3[4] = 0;
    v3[5] = 0;
  }
}

uint64_t sub_1131B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for DocumentAnchor()
{
  return objc_opt_self(_TtC8BookEPUB14DocumentAnchor);
}

uint64_t static UIAccessibility.be_accessibilityNavigationServicesEnabled.getter()
{
  uint64_t result;

  if (UIAccessibilityIsVoiceOverRunning()
    || UIAccessibilityIsSwitchControlRunning()
    || _AXSCommandAndControlEnabled())
  {
    return 1;
  }
  result = _AXSFullKeyboardAccessEnabled();
  if ((_DWORD)result)
    return BEIsHardwareKeyboardAttached();
  return result;
}

uint64_t static UIAccessibility.FKAEnabledWithKeyboardAttached.getter()
{
  uint64_t result;

  result = _AXSFullKeyboardAccessEnabled();
  if ((_DWORD)result)
    return BEIsHardwareKeyboardAttached();
  return result;
}

BOOL static UIAccessibility.be_accessibilityVoiceCommandEnabled.getter()
{
  return _AXSCommandAndControlEnabled() != 0;
}

BOOL static UIAccessibility.be_fullKeyboardAccessEnabled.getter()
{
  return _AXSFullKeyboardAccessEnabled() != 0;
}

BookEPUB::BookThemeVariant_optional __swiftcall BookThemeVariant.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  BookEPUB::BookThemeVariant_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_379758, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = BookEPUB_BookThemeVariant_dark;
  else
    v4.value = BookEPUB_BookThemeVariant_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

_UNKNOWN **static BookThemeVariant.allCases.getter()
{
  return &off_3797A8;
}

uint64_t BookThemeVariant.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 1802658148;
  else
    return 0x746867696CLL;
}

uint64_t sub_113320(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE400000000000000;
  if (*a2)
    v5 = 1802658148;
  else
    v5 = 0x746867696CLL;
  if (*a2)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

Swift::Int sub_1133BC()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 1802658148;
  else
    v2 = 0x746867696CLL;
  if (v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_113430(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 1802658148;
  else
    v2 = 0x746867696CLL;
  if (*v1)
    v3 = 0xE400000000000000;
  else
    v3 = 0xE500000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_113480(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1134F0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_379758, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_11354C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1802658148;
  if (!*v1)
    v2 = 0x746867696CLL;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_113580(_QWORD *a1@<X8>)
{
  *a1 = &off_3797D0;
}

uint64_t BookThemeVariant.userInterfaceStyle.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 2;
  else
    return 1;
}

unint64_t sub_1135A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3BD008;
  if (!qword_3BD008)
  {
    v1 = sub_31A38(qword_3BD010);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3BD008);
  }
  return result;
}

uint64_t sub_1135F4()
{
  _BYTE *v0;

  if (*v0)
    return 1802658148;
  else
    return 0x746867696CLL;
}

uint64_t storeEnumTagSinglePayload for BookThemeVariant(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_113670 + 4 * byte_2ED085[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1136A4 + 4 * asc_2ED080[v4]))();
}

uint64_t sub_1136A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1136AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1136B4);
  return result;
}

uint64_t sub_1136C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1136C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1136CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1136D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookThemeVariant()
{
  return &type metadata for BookThemeVariant;
}

double sub_1136F0(__int128 *a1, _QWORD *a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  double result;

  v2 = *(_QWORD *)(*a2 + OBJC_IVAR____TtC8BookEPUB21ThemeOptionsViewModel_contentLayoutProvider);
  v3 = *a1;
  *(_OWORD *)(*a2 + OBJC_IVAR____TtC8BookEPUB21ThemeOptionsViewModel_contentLayoutProvider) = *a1;
  v4 = v3;
  swift_unknownObjectRetain_n(v3, 2);
  swift_unknownObjectRelease(v2);
  sub_DC47C();
  *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_11374C()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3CF0D8);
  sub_555F0(v0, (uint64_t)qword_3CF0D8);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEF736B6F6F422E65, 0x74704F656D656854, 0xEC000000736E6F69, v1);
}

uint64_t ThemeOptionsModule.view.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

BOOL ThemeOptionsModule.isDirty.getter()
{
  return ThemeOptionsViewModel.isDirty.getter();
}

_QWORD *ThemeOptionsModuleFactory.__allocating_init(bookProvider:themeDatabaseManager:styleManager:stylesheetProvider:themeAppearanceManager:settingsManager:contentSizeManager:contentLayoutProviderProviding:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  _QWORD *v20;

  swift_allocObject(v12, 144);
  v20 = sub_115090(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  swift_release();
  return v20;
}

_QWORD *ThemeOptionsModuleFactory.init(bookProvider:themeDatabaseManager:styleManager:stylesheetProvider:themeAppearanceManager:settingsManager:contentSizeManager:contentLayoutProviderProviding:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;

  v12 = sub_115090(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  swift_release();
  return v12;
}

uint64_t ThemeOptionsModuleFactory.create<A>(router:theme:layoutMode:representativePageText:representativePageTextIsVertical:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X7>, char **a7@<X8>)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  objc_class *v32;
  char *v33;
  id v34;
  objc_class *v35;
  char *v36;
  char *v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t Strong;
  uint64_t v49;
  void (*v50)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (**v72)(_QWORD);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char **v78;
  uint64_t v79;
  objc_super v80;
  objc_super v81;
  _OWORD v82[4];
  _QWORD v83[2];
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v8 = v7;
  v74 = a6;
  v69 = a5;
  v67 = a4;
  v70 = a3;
  v68 = a2;
  v73 = a1;
  v78 = a7;
  v75 = *v7;
  v77 = *(_QWORD *)(v75 + 80);
  v79 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(a1);
  v76 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = *((_QWORD *)v10 + 1);
  v62 = *((_OWORD *)v10 + 1);
  v61 = *((_OWORD *)v10 + 2);
  v15 = *((_QWORD *)v10 + 6);
  v60 = *((_QWORD *)v10 + 7);
  v16 = v7[3];
  ObjectType = swift_getObjectType(v7[2]);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 8))(&v88, ObjectType, v16);
  v18 = v89;
  v65 = v90;
  v66 = sub_472D0(&v88, v89);
  v19 = v7[11];
  v71 = v7[10];
  v20 = swift_getObjectType(v71);
  v72 = (uint64_t (**)(_QWORD))v19;
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
  v63 = v22;
  v23 = swift_getObjectType(v21);
  v64 = type metadata accessor for ThemeOptionsViewModel(0);
  LOBYTE(v83[0]) = v11;
  BYTE1(v83[0]) = v12;
  BYTE2(v83[0]) = v13;
  v83[1] = v14;
  v84 = v62;
  v85 = v61;
  v86 = v15;
  v87 = v60;
  swift_bridgeObjectRetain(v14);
  LODWORD(v14) = BEIsInternalInstall();
  v24 = v7[15];
  v25 = swift_getObjectType(v7[14]);
  v26 = (*(double (**)(uint64_t))(*(_QWORD *)(v24 + 8) + 32))(v25);
  v27 = v7[17];
  v28 = swift_getObjectType(v7[16]);
  v29 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v27 + 8) + 8))(v28);
  v82[0] = xmmword_2ED1B0;
  memset(&v82[1], 0, 48);
  v30 = v67;
  swift_bridgeObjectRetain(v67);
  v31 = (char *)sub_DE340((unsigned __int8 *)v83, v14, v29, (uint64_t)v66, v69, v68, v21, v70, v26, v30, (unint64_t *)v82, v18, v23, v65, v63);
  sub_49F1C((uint64_t)(v8 + 4), (uint64_t)v83);
  v32 = (objc_class *)type metadata accessor for ThemeOptionsDataManager();
  v33 = (char *)objc_allocWithZone(v32);
  *(_QWORD *)&v33[OBJC_IVAR____TtC8BookEPUB23ThemeOptionsDataManager_subscribers] = _swiftEmptyArrayStorage;
  sub_49F1C((uint64_t)v83, (uint64_t)&v33[OBJC_IVAR____TtC8BookEPUB23ThemeOptionsDataManager_themeDatabaseManager]);
  v81.receiver = v33;
  v81.super_class = v32;
  v34 = objc_msgSendSuper2(&v81, "init");
  sub_34488(v83);
  v35 = (objc_class *)type metadata accessor for ThemeOptionsInteractor();
  v36 = (char *)objc_allocWithZone(v35);
  v37 = &v36[OBJC_IVAR____TtC8BookEPUB22ThemeOptionsInteractor_dataManager];
  *(_QWORD *)v37 = v34;
  *((_QWORD *)v37 + 1) = &off_386C00;
  v80.receiver = v36;
  v80.super_class = v35;
  v38 = v34;
  v39 = objc_msgSendSuper2(&v80, "init");
  v40 = v8[9];
  v41 = v8[13];
  v42 = type metadata accessor for ThemeOptionsPresenter();
  v43 = (_QWORD *)swift_allocObject(v42, 112);
  swift_retain();
  v44 = v39;
  swift_unknownObjectRetain(v40);
  v45 = v71;
  swift_unknownObjectRetain(v71);
  swift_retain();
  swift_unknownObjectRetain(v73);
  v47 = sub_113E70(v46, v74, v31, v44, v40, v45, v72, v41, v43);
  *((_QWORD *)&v84 + 1) = v42;
  *(_QWORD *)&v85 = &off_37E1C0;
  v83[0] = v47;
  Strong = swift_weakLoadStrong(v8 + 12);
  v49 = *(_QWORD *)(v75 + 88);
  v50 = *(void (**)(_QWORD *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8);
  swift_retain();
  swift_unknownObjectRetain(v40);
  swift_retain();
  v51 = sub_319AC((uint64_t *)&unk_3B9350);
  v52 = v76;
  v53 = Strong;
  v54 = v77;
  v50(v83, v31, v40, v53, v51, v77, v49);
  swift_release();

  v55 = v78;
  *v78 = v31;
  v57 = type metadata accessor for ThemeOptionsModule(0, v54, v49, v56);
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))((char *)v55 + *(int *)(v57 + 36), v52, v54);
  return sub_34488(&v88);
}

_QWORD *ThemeOptionsModuleFactory.deinit()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  sub_34488(v0 + 4);
  swift_unknownObjectRelease(v0[9]);
  swift_unknownObjectRelease(v0[10]);
  swift_weakDestroy(v0 + 12);
  swift_release();
  swift_unknownObjectRelease(v0[14]);
  swift_unknownObjectRelease(v0[16]);
  return v0;
}

uint64_t ThemeOptionsModuleFactory.__deallocating_deinit()
{
  uint64_t v0;

  ThemeOptionsModuleFactory.deinit();
  return swift_deallocClassInstance(v0, 144, 7);
}

void *sub_113E70(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t (**a7)(_QWORD), uint64_t a8, _QWORD *a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t (**v32)(_QWORD);
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t ObjectType;
  uint64_t KeyPath;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  __n128 v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  unint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  char *v85;
  void (*v86)(char *, uint64_t, __n128);
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  __n128 v95;
  _QWORD *v96;
  __n128 v97;
  unint64_t v98;
  void *v99;
  void *v100;
  void *v101;
  __n128 v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  __n128 v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t (**v172)(_QWORD);
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  _QWORD *v182;
  _QWORD *v183;
  id aBlock[6];
  id v185;

  v175 = a8;
  v172 = a7;
  v179 = a6;
  v147 = a5;
  v180 = a3;
  v178 = a2;
  v146 = a1;
  v165 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v164 = *(_QWORD *)(v165 - 8);
  __chkstk_darwin(v165);
  v162 = (char *)&v136 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_319AC(&qword_3BD118);
  v153 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v148 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_319AC(&qword_3BD120);
  v155 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v149 = (char *)&v136 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_319AC(&qword_3BD128);
  v158 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v150 = (char *)&v136 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_319AC(&qword_3BD130);
  v160 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v151 = (char *)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_319AC(&qword_3BD138);
  v163 = *(_QWORD *)(v161 - 8);
  __chkstk_darwin(v161);
  v157 = (char *)&v136 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = type metadata accessor for DispatchWorkItemFlags(0);
  v144 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v142 = (char *)&v136 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v168 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v136 = (char *)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_319AC(&qword_3BC510);
  v139 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v137 = (char *)&v136 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_319AC((uint64_t *)&unk_3B80B0);
  __chkstk_darwin(v21);
  v181 = (char *)&v136 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_319AC((uint64_t *)&unk_3BD140);
  v177 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v169 = (char *)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = (void (*)(char *, uint64_t, uint64_t, uint64_t))type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v170 = *((_QWORD *)v176 - 1);
  __chkstk_darwin(v176);
  v25 = (char *)&v136 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v26);
  v28 = (char *)&v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for DispatchQoS(0);
  v140 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v30 = (char *)&v136 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  a9[3] = 0;
  swift_unknownObjectWeakInit(a9 + 2, 0);
  swift_unknownObjectWeakInit(a9 + 8, 0);
  a9[10] = 0;
  a9[13] = _swiftEmptyArrayStorage;
  v183 = a9 + 13;
  a9[3] = v178;
  swift_unknownObjectWeakAssign(a9 + 2, a1);
  a9[4] = v180;
  a9[5] = a4;
  a9[6] = &off_3815E8;
  swift_unknownObjectWeakAssign(a9 + 8, a5);
  a9[7] = v175;
  v31 = v179;
  v32 = v172;
  a9[11] = v179;
  a9[12] = v32;
  v33 = type metadata accessor for NWPathMonitor(0);
  swift_allocObject(v33, *(unsigned int *)(v33 + 48));
  swift_retain();
  v145 = a4;
  swift_retain();
  v34 = swift_unknownObjectRetain(v31);
  a9[9] = NWPathMonitor.init()(v34);
  v35 = swift_allocObject(&unk_382528, 24);
  v182 = a9;
  swift_weakInit(v35 + 16, a9);
  swift_retain();
  swift_retain();
  sub_899C8((uint64_t)sub_1155E4, v35);
  NWPathMonitor.pathUpdateHandler.setter(sub_1155E4, v35);
  swift_release();
  swift_release_n(v35);
  v36 = sub_5B5E4();
  swift_retain();
  v37 = v30;
  v138 = v30;
  static DispatchQoS.unspecified.getter(v38);
  aBlock[0] = _swiftEmptyArrayStorage;
  v39 = sub_34284((unint64_t *)&qword_3B5960, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v40 = sub_319AC((uint64_t *)&unk_3BC520);
  v41 = sub_3DCC0((unint64_t *)&qword_3B5970, (uint64_t *)&unk_3BC520, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v41, v26, v39);
  (*(void (**)(char *, _QWORD, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v170 + 104))(v25, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v176);
  v42 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002ALL, 0x80000000002CC1F0, v37, v28, v25, 0);
  NWPathMonitor.start(queue:)(v42);
  swift_release();

  aBlock[0] = (id)ThemeAppearanceManager.themeVariantPublisher.getter();
  v185 = (id)static OS_dispatch_queue.main.getter(v43);
  v44 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v176 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56);
  v45 = (uint64_t)v181;
  v170 = v44;
  v176(v181, 1, 1, v44);
  v46 = sub_319AC((uint64_t *)&unk_3BC530);
  v47 = sub_3DCC0((unint64_t *)&unk_3BD150, (uint64_t *)&unk_3BC530, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v178 = sub_34284((unint64_t *)&qword_3B8E80, (uint64_t (*)(uint64_t))sub_5B5E4, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v48 = v169;
  Publisher.receive<A>(on:options:)(&v185, v45, v46, v36, v47, v178);
  sub_4A000(v45);

  swift_release();
  v49 = swift_allocObject(&unk_382528, 24);
  swift_weakInit(v49 + 16, v182);
  v50 = sub_3DCC0((unint64_t *)&unk_3BD160, (uint64_t *)&unk_3BD140, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v51 = v171;
  Publisher<>.sink(receiveValue:)(sub_1155EC, v49, v171, v50);
  v52 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v177 + 8))(v48, v51, v52);
  v53 = v183;
  swift_beginAccess(v183, aBlock, 33, 0);
  v54 = sub_319AC(&qword_3B8390);
  v55 = sub_3DCC0((unint64_t *)&unk_3BD170, &qword_3B8390, (uint64_t)&protocol conformance descriptor for [A]);
  v56 = v53;
  v57 = v53;
  v177 = v54;
  v58 = v55;
  AnyCancellable.store<A>(in:)(v56, v54, v55);
  swift_endAccess(aBlock);
  swift_release();
  ObjectType = swift_getObjectType(v179);
  aBlock[0] = (id)v172[2](ObjectType);
  KeyPath = swift_getKeyPath(&unk_2ED340);
  v185 = v180;
  v61 = sub_319AC((uint64_t *)&unk_3BE710);
  v62 = sub_3DCC0((unint64_t *)&unk_3BD180, (uint64_t *)&unk_3BE710, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.assign<A>(to:on:)(KeyPath, &v185, v61, v62);
  swift_release();
  swift_release();
  swift_beginAccess(v57, aBlock, 33, 0);
  v171 = v58;
  AnyCancellable.store<A>(in:)(v57, v54, v58);
  swift_endAccess(aBlock);
  swift_release();
  v172 = (uint64_t (**)(_QWORD))objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v63 = v136;
  NSNotificationCenter.publisher(for:object:)(BEFontStateChangedNotification[0], 0);
  v64 = v36;
  v166 = v36;
  aBlock[0] = (id)static OS_dispatch_queue.main.getter(v65);
  v66 = v45;
  v67 = v176;
  v176((char *)v45, 1, 1, v44);
  v169 = (char *)sub_34284((unint64_t *)&qword_3B6B28, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v68 = v137;
  v69 = v173;
  v70 = v178;
  Publisher.receive<A>(on:options:)(aBlock, v66, v173, v64, v169, v178);
  sub_4A000(v66);

  v168 = *(_QWORD *)(v168 + 8);
  ((void (*)(char *, uint64_t))v168)(v63, v69);
  v71 = swift_allocObject(&unk_382528, 24);
  swift_weakInit(v71 + 16, v182);
  v167 = sub_3DCC0((unint64_t *)&unk_3BC560, &qword_3BC510, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v72 = v174;
  Publisher<>.sink(receiveValue:)(sub_115618, v71, v174, v167);
  v73 = swift_release();
  v139 = *(_QWORD *)(v139 + 8);
  ((void (*)(char *, uint64_t, __n128))v139)(v68, v72, v73);
  v74 = v183;
  swift_beginAccess(v183, aBlock, 33, 0);
  v75 = v177;
  AnyCancellable.store<A>(in:)(v74, v177, v58);
  swift_endAccess(aBlock);
  swift_release();
  v76 = v63;
  NSNotificationCenter.publisher(for:object:)(BEFontDownloadFailedNotification[0], 0);
  v77 = v166;
  aBlock[0] = (id)static OS_dispatch_queue.main.getter(v78);
  v79 = (uint64_t)v181;
  v80 = v170;
  v67(v181, 1, 1, v170);
  v81 = v173;
  Publisher.receive<A>(on:options:)(aBlock, v79, v173, v77, v169, v70);
  sub_4A000(v79);

  ((void (*)(char *, uint64_t))v168)(v63, v81);
  v82 = swift_allocObject(&unk_382528, 24);
  swift_weakInit(v82 + 16, v182);
  v83 = v174;
  Publisher<>.sink(receiveValue:)(sub_115620, v82, v174, v167);
  v84 = swift_release();
  v85 = v68;
  v86 = (void (*)(char *, uint64_t, __n128))v139;
  ((void (*)(char *, uint64_t, __n128))v139)(v68, v83, v84);
  v87 = v183;
  swift_beginAccess(v183, aBlock, 33, 0);
  v88 = v75;
  v89 = v171;
  AnyCancellable.store<A>(in:)(v87, v88, v171);
  swift_endAccess(aBlock);
  swift_release();
  NSNotificationCenter.publisher(for:object:)(BEFontDownloadProgressChangedNotification[0], 0);
  v90 = v166;
  aBlock[0] = (id)static OS_dispatch_queue.main.getter(v91);
  v92 = (uint64_t)v181;
  v176(v181, 1, 1, v80);
  Publisher.receive<A>(on:options:)(aBlock, v92, v81, v90, v169, v178);
  sub_4A000(v92);

  ((void (*)(char *, uint64_t))v168)(v76, v81);
  v93 = swift_allocObject(&unk_382528, 24);
  v94 = v182;
  swift_weakInit(v93 + 16, v182);
  Publisher<>.sink(receiveValue:)(sub_115628, v93, v83, v167);
  v95 = swift_release();
  v86(v85, v83, v95);
  v96 = v183;
  swift_beginAccess(v183, aBlock, 33, 0);
  AnyCancellable.store<A>(in:)(v96, v177, v89);
  swift_endAccess(aBlock);
  v97 = swift_release();
  v98 = v90;
  v99 = (void *)static OS_dispatch_queue.main.getter(v97);
  aBlock[4] = sub_115630;
  aBlock[5] = v94;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_525B8;
  aBlock[3] = &unk_382540;
  v100 = _Block_copy(aBlock);
  v101 = v94;
  swift_retain();
  v102 = swift_release();
  v103 = v138;
  static DispatchQoS.unspecified.getter(v102);
  aBlock[0] = _swiftEmptyArrayStorage;
  v104 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v105 = sub_319AC(&qword_3B96F0);
  v106 = sub_3DCC0((unint64_t *)&qword_3B8510, &qword_3B96F0, (uint64_t)&protocol conformance descriptor for [A]);
  v107 = v142;
  v108 = v105;
  v109 = v143;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v108, v106, v143, v104);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v103, v107, v100);
  _Block_release(v100);

  (*(void (**)(char *, uint64_t))(v144 + 8))(v107, v109);
  (*(void (**)(char *, uint64_t))(v140 + 8))(v103, v141);
  swift_beginAccess(&v180[OBJC_IVAR____TtC8BookEPUB21ThemeOptionsViewModel__themeAndCleanupOptions], aBlock, 33, 0);
  v110 = sub_319AC(&qword_3BD190);
  v111 = v148;
  Published.projectedValue.getter(v110);
  swift_endAccess(aBlock);
  v112 = swift_getKeyPath(&unk_2ED368);
  v113 = sub_3DCC0(&qword_3BD198, &qword_3BD118, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v114 = v149;
  v115 = v152;
  Publisher.map<A>(_:)(v112, v152, v113);
  v116 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v153 + 8))(v111, v115, v116);
  v117 = sub_3DCC0(&qword_3BD1A0, &qword_3BD120, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v118 = v150;
  v119 = v154;
  Publisher.dropFirst(_:)(1, v154, v117);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v114, v119);
  v120 = sub_3DCC0(&qword_3BD1A8, &qword_3BD128, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v121 = sub_B6DC0();
  v122 = v151;
  v123 = v156;
  Publisher<>.removeDuplicates()(v156, v120, v121);
  v124 = (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v118, v123);
  v125 = v162;
  v126.n128_f64[0] = OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)(v124, 0.1);
  v127 = v98;
  aBlock[0] = (id)static OS_dispatch_queue.main.getter(v126);
  v128 = (uint64_t)v181;
  v176(v181, 1, 1, v170);
  v129 = sub_3DCC0(&qword_3BD1B8, &qword_3BD130, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v130 = v157;
  v131 = v159;
  Publisher.debounce<A>(for:scheduler:options:)(v125, aBlock, v128, v159, v127, v129, v178);
  sub_4A000(v128);

  (*(void (**)(char *, uint64_t))(v164 + 8))(v125, v165);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v122, v131);
  v132 = sub_3DCC0((unint64_t *)&unk_3BD1C0, &qword_3BD138, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v133 = v161;
  Publisher<>.sink(receiveValue:)(sub_9F000, 0, v161, v132);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v130, v133);
  v134 = v183;
  swift_beginAccess(v183, aBlock, 33, 0);
  AnyCancellable.store<A>(in:)(v134, v177, v171);
  swift_endAccess(aBlock);

  swift_release();
  swift_unknownObjectRelease(v146);
  swift_release();

  swift_unknownObjectRelease(v147);
  swift_unknownObjectRelease(v179);
  swift_release();
  return v101;
}

_QWORD *sub_115090(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;

  swift_weakInit(v12 + 12, 0);
  v12[2] = a1;
  v12[3] = a2;
  sub_3F1CC(a3, (uint64_t)(v12 + 4));
  v12[9] = a4;
  swift_weakAssign(v12 + 12, a5);
  v12[13] = a6;
  v12[14] = a7;
  v12[15] = a8;
  v12[16] = a9;
  v12[17] = a10;
  v12[10] = a11;
  v12[11] = a12;
  return v12;
}

uint64_t dispatch thunk of PaginationCacheProviding.paginationData(forDocumentOrdinal:forKey:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_115158(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 2, v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t sub_1151D4(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1152A8 + 4 * byte_2ED1C0[(v9 - 1)]))();
}

void sub_115318(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = &dword_4;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = &dword_0 + 1;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for ThemeOptionsModule(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3F27C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ThemeOptionsModule);
}

uint64_t sub_115518(uint64_t a1)
{
  _QWORD v2[8];

  v2[0] = &unk_2ED2E0;
  v2[1] = &unk_2ED2F8;
  v2[2] = &unk_2ED310;
  v2[3] = &unk_2ED2E0;
  v2[4] = &unk_2ED328;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = &unk_2ED2E0;
  v2[7] = &unk_2ED2E0;
  return swift_initClassMetadata2(a1, 0, 8, v2, a1 + 96);
}

uint64_t type metadata accessor for ThemeOptionsModuleFactory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3F27C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ThemeOptionsModuleFactory);
}

uint64_t method lookup function for ThemeOptionsModuleFactory(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ThemeOptionsModuleFactory);
}

uint64_t dispatch thunk of ThemeOptionsModuleFactory.__allocating_init(bookProvider:themeDatabaseManager:styleManager:stylesheetProvider:themeAppearanceManager:settingsManager:contentSizeManager:contentLayoutProviderProviding:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1155C0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1155E4(uint64_t a1)
{
  uint64_t v1;

  return sub_9E438(a1, v1);
}

double sub_1155EC(uint64_t a1)
{
  uint64_t v1;

  return sub_9E784(a1, v1);
}

double sub_1155F4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v2;
  double result;

  v2 = *(_OWORD *)(*a1 + OBJC_IVAR____TtC8BookEPUB21ThemeOptionsViewModel_contentLayoutProvider);
  *a2 = v2;
  *(_QWORD *)&result = swift_unknownObjectRetain(v2).n128_u64[0];
  return result;
}

double sub_115618(uint64_t a1)
{
  uint64_t v1;

  return sub_9E7D8(a1, v1);
}

double sub_115620(uint64_t a1)
{
  uint64_t v1;

  return sub_9EA68(a1, v1);
}

double sub_115628(uint64_t a1)
{
  uint64_t v1;

  return sub_9ED50(a1, v1);
}

void sub_115630()
{
  sub_9EFE0();
}

uint64_t sub_115638(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_115648(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_115650(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void ContentMessageMediator.remove(from:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  if (a1)
  {
    v2 = objc_opt_self(WKWebView);
    v3 = swift_dynamicCastObjCClass(a1, v2);
    if (v3)
    {
      v4 = (void *)v3;
      v5 = a1;
      v6 = objc_msgSend(v4, "be_uiHandler");
      if (v6)
      {
        v7 = v6;
        objc_msgSend(v6, "setDelegate:", 0);

      }
      v8 = objc_msgSend(v4, "configuration");
      v9 = objc_msgSend(v8, "userContentController");

      sub_1191BC();
    }
  }
}

uint64_t ContentMessageMediator.install(on:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v3 = objc_opt_self(WKWebView);
  result = swift_dynamicCastObjCClass(a1, v3);
  if (result)
  {
    v5 = (void *)result;
    a1;
    v6 = objc_msgSend(v5, "be_uiHandler");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "setDelegate:", v1);

    }
    v8 = objc_msgSend(v5, "configuration");
    objc_msgSend(v8, "userContentController");

    JUMPOUT(0x115888);
  }
  return result;
}

uint64_t ContentMessageMediator.handleInternalLoadRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  char v8;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    return v8 & 1;
  }
  return result;
}

double ContentMessageMediator.handleInternalLoadRequestForNewWindow(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, ObjectType, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

double ContentMessageMediator.handleExternalLoadRequest(externalURL:likelyUserInitiated:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v5 = v2 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 24))(a1, a2 & 1, ObjectType, v9);
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

void ContentMessageMediator.handleUserRequestForFrameToLoadExternalURL(externalURL:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  v7 = v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t))(v10 + 32))(a1, a2, a3, ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    a2();
  }
}

double ContentMessageMediator.failedToLoadWithError(error:retryAction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;

  v7 = v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v10 = Strong;
    v11 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v3, a1, a2, a3, ObjectType, v11);
    *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall ContentMessageMediator.handleTextInteractionDidSetIgnorePageTurn(_:)(Swift::Bool a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, Swift::Bool, uint64_t, uint64_t))(v6 + 48))(v1, a1, ObjectType, v6);
    swift_unknownObjectRelease(v5);
  }
}

void ContentMessageMediator.handleTextInteractionDidUpdate(with:point:webView:)(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;

  v9 = v4 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v11 = Strong;
    v12 = *(_QWORD *)(v9 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v12 + 40))(v4, a1, a2, ObjectType, v12, a3, a4);
    swift_unknownObjectRelease(v11);
  }
}

Swift::Void __swiftcall ContentMessageMediator.handleTextInteractionDidEnd(with:)(Swift::Int with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v6 + 24))(v1, with, ObjectType, v6);
    swift_unknownObjectRelease(v5);
  }
}

Swift::Void __swiftcall ContentMessageMediator.handleTextInteractionDidFailOrCancel(with:)(Swift::Int with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v6 + 32))(v1, with, ObjectType, v6);
    swift_unknownObjectRelease(v5);
  }
}

Swift::Bool __swiftcall ContentMessageMediator.handleTextInteractionGestureRecognizer(_:shouldReceive:webView:)(UIGestureRecognizer _, UITouch shouldReceive, WKWebView webView)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  char v12;

  v7 = v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (!Strong)
    return 1;
  v9 = Strong;
  v10 = *(_QWORD *)(v7 + 8);
  ObjectType = swift_getObjectType(Strong);
  v12 = (*(uint64_t (**)(uint64_t, Class, Class, Class, uint64_t, uint64_t))(v10 + 16))(v3, _.super.isa, shouldReceive.super.isa, webView.super.super.super.isa, ObjectType, v10);
  swift_unknownObjectRelease(v9);
  return v12 & 1;
}

id ContentMessageMediator.init()()
{
  void *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  objc_super v9;

  sub_34450(0, (unint64_t *)&qword_3B80A0, OS_os_log_ptr);
  v1 = v0;
  v2 = OS_os_log.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEF736B6F6F422E65, 0xD000000000000025, 0x80000000002CC290);
  Logger.init(_:)(v2);
  v3 = &v1[OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_webMessageHandler];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v4 = &v1[OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4, 0);
  v5 = &v1[OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5, 0);
  v6 = &v1[OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_citationHandler];
  *((_QWORD *)v6 + 1) = 0;
  swift_unknownObjectWeakInit(v6, 0);
  v7 = &v1[OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_alertHandler];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for ContentMessageMediator(0);
  return objc_msgSendSuper2(&v9, "init");
}

id ContentMessageMediator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentMessageMediator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

double ContentMessageMediator.handler(_:present:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;

  v8 = v4 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_alertHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_alertHandler);
  if (Strong)
  {
    v11 = Strong;
    v12 = *(_QWORD *)(v8 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v4, a2, a3, a4, ObjectType, v12);
    *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
  }
  return result;
}

void ContentMessageMediator.handler(_:webView:didNotHandleTapAsClickAt:)(double a1, double a2, uint64_t a3, void *a4)
{
  sub_1193FC(a4, a1, a2);
}

Swift::String __swiftcall ContentMessageMediator.handler(_:citationForText:webView:)(BEUIHandler _, Swift::String citationForText, WKWebView webView)
{
  uint64_t v3;
  void *v4;
  Swift::String result;

  v3 = sub_1194A0((uint64_t)_._delegate, (unint64_t)_._alertThrottler, (void *)citationForText._countAndFlagsBits);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

_QWORD *ContentMessageMediator.adjustedItemProviders(withCitation:withExcerptString:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_citationHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_citationHandler);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, a3, ObjectType, v10);
    swift_unknownObjectRelease(v9);
    return (_QWORD *)v12;
  }
  else
  {
    v14 = swift_bridgeObjectRetain_n(a3, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v20 = v18;
      *(_DWORD *)v17 = 136315138;
      swift_bridgeObjectRetain(a3);
      v19 = sub_33524(a2, a3, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v17 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl(&dword_0, v15, v16, "No CitationHandler -- unable to determine itemProviders with excerpt string %s", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a3, 2);
    }

    return _swiftEmptyArrayStorage;
  }
}

double ContentMessageMediator.buildMenu(with:in:at:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 64))(v1, a1, ObjectType, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

Swift::Void __swiftcall ContentMessageMediator.webViewDidEnterFullscreen(_:)(WKWebView a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v2 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 72))(v1, ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
}

Swift::Void __swiftcall ContentMessageMediator.webViewFullscreenMayReturn(toInline:)(WKWebView toInline)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v2 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 80))(v1, ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
}

Swift::Void __swiftcall ContentMessageMediator.webViewDidExitFullscreen(_:)(WKWebView a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v2 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 88))(v1, ObjectType, v5);
    swift_unknownObjectRelease(v4);
  }
}

Swift::Int sub_116B4C()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

void sub_116B8C()
{
  Hasher._combine(_:)(0);
}

Swift::Int sub_116BB0(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  Hasher._combine(_:)(0);
  return Hasher._finalize()();
}

Swift::Void __swiftcall ContentMessageMediator.userContentController(_:didReceive:)(WKUserContentController _, WKScriptMessage didReceive)
{
  sub_119820(didReceive.super.isa);
}

void sub_116BF4(char a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for ContentMessage.Footnote(0);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for ContentMessage.ExpandedContent(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

void sub_116CA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  uint64_t v6;

  sub_1176A8(v2, v3 - 160);
  if (!v0)
  {
    v4 = *(_BYTE *)(v3 - 136);
    v5 = *(_OWORD *)(v3 - 152);
    *(_BYTE *)v1 = *(_BYTE *)(v3 - 160);
    *(_OWORD *)(v1 + 8) = v5;
    *(_BYTE *)(v1 + 24) = v4;
    v6 = type metadata accessor for ContentMessage(0);
    swift_storeEnumTagMultiPayload(v1, v6, 0);
  }
}

uint64_t sub_117010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  unint64_t v17;
  __n128 v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _UNKNOWN **v28;
  unint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _UNKNOWN **v36;
  void *v37;
  uint64_t v38;
  void *v39;
  unint64_t v40;
  double v41;
  char v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  unint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  _UNKNOWN **v55;
  uint64_t v56;
  _UNKNOWN **v57;
  unint64_t v58;
  char v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  _UNKNOWN **v65;
  unint64_t v66;
  char v67;
  void *v68;
  uint64_t v69;
  id v70;
  unint64_t v71;
  char v72;
  id v73;
  unint64_t v74;
  char v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  _UNKNOWN **v79;
  void *v80;
  void *v81;
  _QWORD *v82;
  int *v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  id v94;
  _UNKNOWN **v95;
  uint64_t v96;
  _UNKNOWN **v97;
  uint64_t v98;
  uint64_t v99;
  _UNKNOWN **v100;
  uint64_t v101;
  uint64_t v102;
  _UNKNOWN **v103;
  uint64_t v104;

  v5 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v5);
  v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v93 - v9;
  sub_344A8(a1, (uint64_t)&v103);
  v11 = sub_319AC(&qword_3BD320);
  if (!swift_dynamicCast(&v102, &v103, (char *)&type metadata for Any + 8, v11, 6))
  {
    v17 = sub_119F08();
    swift_allocError(&type metadata for ContentMessageError, v17, 0, 0);
    return swift_willThrow(v18);
  }
  v12 = v102;
  if (*(_QWORD *)(v102 + 16) && (v13 = sub_3B8A0(7107189, 0xE300000000000000), (v14 & 1) != 0))
  {
    v15 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v13);
    v16 = v15;
  }
  else
  {
    v15 = 0;
  }
  URL.init(object:)(v15);
  if (!*(_QWORD *)(v12 + 16))
  {
    v95 = 0;
    v96 = 0;
    v27 = 0;
    v28 = 0;
    goto LABEL_23;
  }
  v20 = sub_3B8A0(0x72756F537A647375, 0xEA00000000006563);
  if ((v21 & 1) != 0
    && (v22 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v20),
        v23 = objc_opt_self(NSString),
        (v24 = swift_dynamicCastObjCClass(v22, v23)) != 0))
  {
    v25 = v24;
    v103 = 0;
    v104 = 0;
    v26 = v22;
    static String._conditionallyBridgeFromObjectiveC(_:result:)(v25, &v103);

    v27 = v104;
    if (v104)
      v28 = v103;
    else
      v28 = 0;
    if (!*(_QWORD *)(v12 + 16))
      goto LABEL_14;
  }
  else
  {
    v28 = 0;
    v27 = 0;
    if (!*(_QWORD *)(v12 + 16))
    {
LABEL_14:
      v95 = 0;
      v96 = 0;
LABEL_23:
      v99 = 0;
      v100 = 0;
      goto LABEL_24;
    }
  }
  v29 = sub_3B8A0(6517363, 0xE300000000000000);
  if ((v30 & 1) != 0
    && (v31 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v29),
        v32 = objc_opt_self(NSString),
        (v33 = swift_dynamicCastObjCClass(v31, v32)) != 0))
  {
    v34 = v33;
    v103 = 0;
    v104 = 0;
    v35 = v31;
    static String._conditionallyBridgeFromObjectiveC(_:result:)(v34, &v103);

    v36 = v103;
    if (!v104)
      v36 = 0;
    v99 = v104;
    v100 = v36;
    if (!*(_QWORD *)(v12 + 16))
      goto LABEL_21;
  }
  else
  {
    v99 = 0;
    v100 = 0;
    if (!*(_QWORD *)(v12 + 16))
    {
LABEL_21:
      v95 = 0;
      v96 = 0;
LABEL_24:
      v37 = 0;
      goto LABEL_25;
    }
  }
  v58 = sub_3B8A0(1819112552, 0xE400000000000000);
  if ((v59 & 1) != 0
    && (v60 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v58),
        v61 = objc_opt_self(NSString),
        (v62 = swift_dynamicCastObjCClass(v60, v61)) != 0))
  {
    v63 = v62;
    v103 = 0;
    v104 = 0;
    v64 = v60;
    static String._conditionallyBridgeFromObjectiveC(_:result:)(v63, &v103);

    v65 = v103;
    if (!v104)
      v65 = 0;
    v95 = v65;
    v96 = v104;
  }
  else
  {
    v95 = 0;
    v96 = 0;
  }
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_24;
  v71 = sub_3B8A0(0x746E656D75636F64, 0xEB000000004C5255);
  if ((v72 & 1) == 0)
    goto LABEL_24;
  v37 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v71);
  v73 = v37;
LABEL_25:
  URL.init(object:)(v37);
  v38 = *(_QWORD *)(v12 + 16);
  v39 = 0;
  v101 = v2;
  if (!v38)
  {
    v56 = 0;
    v57 = 0;
    v97 = 0;
    v98 = 0;
    v41 = 0.0;
    goto LABEL_66;
  }
  v40 = sub_3B8A0(0x6C6163536D6F6F7ALL, 0xE900000000000065);
  v41 = 0.0;
  if ((v42 & 1) != 0)
  {
    v43 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v40);
    v44 = objc_opt_self(NSNumber);
    v45 = swift_dynamicCastObjCClass(v43, v44);
    if (v45)
    {
      v46 = v45;
      v103 = 0;
      LOBYTE(v104) = 1;
      v47 = v43;
      static Double._conditionallyBridgeFromObjectiveC(_:result:)(v46, &v103);

      if ((_BYTE)v104)
        v41 = 0.0;
      else
        v41 = *(double *)&v103;
    }
  }
  if (!*(_QWORD *)(v12 + 16))
  {
    v56 = 0;
    v57 = 0;
    v97 = 0;
    v98 = 0;
    goto LABEL_66;
  }
  v48 = sub_3B8A0(0x656C746974, 0xE500000000000000);
  if ((v49 & 1) != 0
    && (v50 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v48),
        v51 = objc_opt_self(NSString),
        (v52 = swift_dynamicCastObjCClass(v50, v51)) != 0))
  {
    v53 = v52;
    v103 = 0;
    v104 = 0;
    v54 = v50;
    static String._conditionallyBridgeFromObjectiveC(_:result:)(v53, &v103);

    v55 = v103;
    if (!v104)
      v55 = 0;
    v97 = v55;
    v98 = v104;
    if (!*(_QWORD *)(v12 + 16))
      goto LABEL_37;
  }
  else
  {
    v97 = 0;
    v98 = 0;
    if (!*(_QWORD *)(v12 + 16))
    {
LABEL_37:
      v56 = 0;
      v57 = 0;
      goto LABEL_66;
    }
  }
  v66 = sub_3B8A0(0x6E6F697461636F6CLL, 0xE800000000000000);
  if ((v67 & 1) != 0)
  {
    v68 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v66);
    v69 = objc_opt_self(NSString);
    v56 = swift_dynamicCastObjCClass(v68, v69);
    if (v56)
    {
      v103 = 0;
      v104 = 0;
      v70 = v68;
      static String._conditionallyBridgeFromObjectiveC(_:result:)(v56, &v103);

      v56 = v104;
      if (v104)
        v57 = v103;
      else
        v57 = 0;
      if (!*(_QWORD *)(v12 + 16))
        goto LABEL_66;
    }
    else
    {
      v57 = 0;
      if (!*(_QWORD *)(v12 + 16))
        goto LABEL_66;
    }
  }
  else
  {
    v57 = 0;
    v56 = 0;
    if (!*(_QWORD *)(v12 + 16))
      goto LABEL_66;
  }
  v74 = sub_3B8A0(1702521203, 0xE400000000000000);
  if ((v75 & 1) != 0)
  {
    v76 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v74);
    v77 = objc_opt_self(NSArray);
    v94 = v76;
    v78 = swift_dynamicCastObjCClass(v76, v77);
    v79 = &off_3797F8;
    if (v78)
    {
      v103 = 0;
      v93 = v78;
      v94 = v94;
      static Array._conditionallyBridgeFromObjectiveC(_:result:)(v93, &v103, &type metadata for Double);

      if (v103)
        v79 = v103;
    }
    goto LABEL_67;
  }
LABEL_66:
  v79 = &off_3797F8;
LABEL_67:
  v80 = v79[2];
  v81 = 0;
  if (v80)
  {
    v81 = v79[4];
    v39 = v79[(_QWORD)v80 + 3];
  }
  swift_bridgeObjectRelease(v79);
  v82 = sub_118FD8(v12);
  swift_bridgeObjectRelease(v12);
  sub_5B70C((uint64_t)v10, a2, (uint64_t *)&unk_3B8C50);
  v83 = (int *)type metadata accessor for ContentMessage.ExpandedContent(0);
  v84 = (_QWORD *)(a2 + v83[5]);
  *v84 = v28;
  v84[1] = v27;
  v85 = (_QWORD *)(a2 + v83[6]);
  v86 = v99;
  *v85 = v100;
  v85[1] = v86;
  v87 = (_QWORD *)(a2 + v83[7]);
  v88 = v96;
  *v87 = v95;
  v87[1] = v88;
  result = sub_5B70C((uint64_t)v7, a2 + v83[8], (uint64_t *)&unk_3B8C50);
  v89 = (_QWORD *)(a2 + v83[9]);
  *v89 = v81;
  v89[1] = v39;
  *(double *)(a2 + v83[10]) = v41;
  v90 = (_QWORD *)(a2 + v83[11]);
  v91 = v98;
  *v90 = v97;
  v90[1] = v91;
  v92 = (_QWORD *)(a2 + v83[12]);
  *v92 = v57;
  v92[1] = v56;
  *(_QWORD *)(a2 + v83[13]) = v82;
  return result;
}

void sub_1176A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *object;
  unint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t countAndFlagsBits;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  __n128 v28;
  unint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  Swift::String string;
  uint64_t v46;
  uint64_t v47;

  sub_344A8(a1, (uint64_t)&string);
  v3 = sub_319AC(&qword_3BD320);
  if ((swift_dynamicCast(&v46, &string, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
  {
    v4 = v46;
    if (!*(_QWORD *)(v46 + 16))
      goto LABEL_15;
    v5 = sub_3B8A0(0x746E657665, 0xE500000000000000);
    if ((v6 & 1) == 0)
      goto LABEL_15;
    v7 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v5);
    v8 = objc_opt_self(NSString);
    v9 = swift_dynamicCastObjCClass(v7, v8);
    if (!v9)
      goto LABEL_15;
    v10 = v9;
    string._countAndFlagsBits = 0;
    string._object = 0;
    v11 = v7;
    static String._conditionallyBridgeFromObjectiveC(_:result:)(v10, &string);

    object = string._object;
    if (!string._object)
      goto LABEL_15;
    v13 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_379408, string);
    swift_bridgeObjectRelease(object);
    if (v13 < 3 && *(_QWORD *)(v4 + 16) && (v14 = sub_3B8A0(1635017060, 0xE400000000000000), (v15 & 1) != 0))
    {
      v16 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v14);
      swift_bridgeObjectRelease(v4);
      v17 = objc_opt_self(NSDictionary);
      v18 = swift_dynamicCastObjCClass(v16, v17);
      if (v18)
      {
        v19 = v18;
        string._countAndFlagsBits = 0;
        v20 = sub_34450(0, (unint64_t *)&qword_3B5C30, NSObject_ptr);
        static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v19, &string, &type metadata for String, v20, &protocol witness table for String);

        countAndFlagsBits = string._countAndFlagsBits;
        if (string._countAndFlagsBits)
        {
          if (v13 - 1 > 1)
          {
            if (*(_QWORD *)(string._countAndFlagsBits + 16))
            {
              v29 = sub_3B8A0(0x6F735F616964656DLL, 0xEC00000065637275);
              if ((v30 & 1) != 0)
              {
                v31 = *(void **)(*(_QWORD *)(countAndFlagsBits + 56) + 8 * v29);
                v32 = objc_opt_self(NSString);
                v33 = swift_dynamicCastObjCClass(v31, v32);
                if (v33)
                {
                  v34 = v33;
                  string._countAndFlagsBits = 0;
                  string._object = 0;
                  v35 = v31;
                  static String._conditionallyBridgeFromObjectiveC(_:result:)(v34, &string);

                  v26 = string._object;
                  if (string._object)
                  {
                    v25 = string._countAndFlagsBits;
                    swift_bridgeObjectRelease(countAndFlagsBits);
                    goto LABEL_14;
                  }
                }
              }
            }
            swift_bridgeObjectRetain(countAndFlagsBits);
            v37 = Logger.logObject.getter(v36);
            v38 = static os_log_type_t.error.getter(v37);
            if (os_log_type_enabled(v37, v38))
            {
              v39 = swift_slowAlloc(22, -1);
              v44 = swift_slowAlloc(64, -1);
              string._countAndFlagsBits = v44;
              *(_DWORD *)v39 = 136315394;
              v46 = sub_33524(0xD000000000000011, 0x80000000002C5A20, &string._countAndFlagsBits);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v39 + 4);
              *(_WORD *)(v39 + 12) = 2080;
              swift_bridgeObjectRetain(countAndFlagsBits);
              v41 = Dictionary.description.getter(v40, &type metadata for String, v20, &protocol witness table for String);
              v43 = v42;
              swift_bridgeObjectRelease(countAndFlagsBits);
              v46 = sub_33524(v41, v43, &string._countAndFlagsBits);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v39 + 14);
              swift_bridgeObjectRelease_n(countAndFlagsBits, 2);
              swift_bridgeObjectRelease(v43);
              _os_log_impl(&dword_0, v37, v38, "Malformed payload for %s! %s", (uint8_t *)v39, 0x16u);
              swift_arrayDestroy(v44, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v44, -1, -1);
              swift_slowDealloc(v39, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n(countAndFlagsBits, 2);
            }

          }
          else
          {
            sub_148774(string._countAndFlagsBits);
            v23 = v22;
            swift_bridgeObjectRelease(countAndFlagsBits);
            if (v23)
            {
              sub_1916FC(v23);
              v25 = v24;
              swift_bridgeObjectRelease(v23);
              v26 = 0;
LABEL_14:
              *(_BYTE *)a2 = v13;
              *(_QWORD *)(a2 + 8) = v25;
              *(_QWORD *)(a2 + 16) = v26;
              *(_BYTE *)(a2 + 24) = v13 - 1 < 2;
              return;
            }
          }
        }
      }
      else
      {

      }
    }
    else
    {
LABEL_15:
      swift_bridgeObjectRelease(v4);
    }
  }
  v27 = sub_119F08();
  swift_allocError(&type metadata for ContentMessageError, v27, 0, 0);
  swift_willThrow(v28);
}

void sub_117B18(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  char v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char v46;
  unint64_t v47;
  char v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  __n128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[5];
  _BYTE v77[48];
  uint64_t v78;

  sub_344A8(a1, (uint64_t)&v74);
  v3 = sub_319AC(&qword_3BD320);
  if ((swift_dynamicCast(&v78, &v74, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    goto LABEL_30;
  v4 = v78;
  if (!*(_QWORD *)(v78 + 16))
    goto LABEL_28;
  v5 = sub_3B8A0(0x6F697463656C6573, 0xED0000747865546ELL);
  if ((v6 & 1) == 0)
    goto LABEL_28;
  v7 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v5);
  v8 = objc_opt_self(NSString);
  v9 = swift_dynamicCastObjCClass(v7, v8);
  if (!v9
    || (v10 = v9,
        v74 = 0,
        v75 = 0,
        v11 = v7,
        static String._conditionallyBridgeFromObjectiveC(_:result:)(v10, &v74),
        v11,
        (v12 = v75) == 0))
  {
LABEL_28:
    v53 = v4;
LABEL_29:
    swift_bridgeObjectRelease(v53);
LABEL_30:
    v54 = sub_119F08();
    swift_allocError(&type metadata for ContentMessageError, v54, 0, 0);
    swift_willThrow(v55);
    return;
  }
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_31;
  v13 = v74;
  v14 = sub_3B8A0(0x54747865746E6F63, 0xEB00000000747865);
  if ((v15 & 1) == 0)
    goto LABEL_31;
  v16 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v14);
  v17 = objc_opt_self(NSString);
  v18 = swift_dynamicCastObjCClass(v16, v17);
  if (!v18
    || (v19 = v18,
        v74 = 0,
        v75 = 0,
        v20 = v16,
        static String._conditionallyBridgeFromObjectiveC(_:result:)(v19, &v74),
        v20,
        (v21 = v75) == 0))
  {
LABEL_31:
    swift_bridgeObjectRelease(v4);
    v53 = v12;
    goto LABEL_29;
  }
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_33;
  v22 = v74;
  v23 = sub_3B8A0(0x7374636572, 0xE500000000000000);
  if ((v24 & 1) == 0)
    goto LABEL_33;
  v73 = v22;
  v25 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v23);
  v26 = objc_opt_self(NSArray);
  v27 = swift_dynamicCastObjCClass(v25, v26);
  if (!v27)
    goto LABEL_33;
  v28 = v27;
  v74 = 0;
  v29 = v25;
  v30 = sub_319AC(&qword_3BD328);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v28, &v74, v30);

  v31 = v74;
  if (!v74)
    goto LABEL_33;
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_32;
  v32 = sub_3B8A0(6907491, 0xE300000000000000);
  if ((v33 & 1) == 0)
    goto LABEL_32;
  v34 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v32);
  v35 = objc_opt_self(NSString);
  v36 = swift_dynamicCastObjCClass(v34, v35);
  if (!v36
    || (v37 = v36,
        v74 = 0,
        v75 = 0,
        v38 = v34,
        static String._conditionallyBridgeFromObjectiveC(_:result:)(v37, &v74),
        v38,
        !v75))
  {
LABEL_32:
    swift_bridgeObjectRelease(v31);
LABEL_33:
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v12);
    v53 = v21;
    goto LABEL_29;
  }
  v72 = v75;
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_34;
  v71 = v74;
  v39 = sub_3B8A0(0x736E6961746E6F63, 0xEE00726F68636E41);
  if ((v40 & 1) == 0)
    goto LABEL_34;
  v41 = *(void **)(*(_QWORD *)(v4 + 56) + 8 * v39);
  v42 = objc_opt_self(NSNumber);
  v43 = swift_dynamicCastObjCClass(v41, v42);
  if (!v43
    || (v44 = v43,
        LOBYTE(v74) = 2,
        v45 = v41,
        static Bool._conditionallyBridgeFromObjectiveC(_:result:)(v44, &v74),
        v45,
        v46 = v74,
        v74 == 2)
    || !*(_QWORD *)(v4 + 16)
    || (v47 = sub_3B8A0(0x6C616E6964726FLL, 0xE700000000000000), (v48 & 1) == 0))
  {
LABEL_34:
    swift_bridgeObjectRelease(v31);
    v56 = v4;
LABEL_35:
    swift_bridgeObjectRelease(v56);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v21);
    v53 = v72;
    goto LABEL_29;
  }
  v49 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v47);
  swift_bridgeObjectRelease(v4);
  v50 = objc_opt_self(NSNumber);
  v51 = swift_dynamicCastObjCClass(v49, v50);
  if (!v51)
  {

    goto LABEL_44;
  }
  v74 = 0;
  LOBYTE(v75) = 1;
  static Int._conditionallyBridgeFromObjectiveC(_:result:)(v51, &v74);

  if (v75 == 1)
  {
LABEL_44:
    v56 = v31;
    goto LABEL_35;
  }
  v68 = v46 & 1;
  v67 = v74;
  v69 = *(_QWORD *)(v31 + 16);
  if (v69)
  {
    swift_bridgeObjectRetain(v31);
    v52 = 0;
    v70 = _swiftEmptyArrayStorage;
    do
    {
      v58 = *(_QWORD *)(v31 + 8 * v52 + 32);
      swift_bridgeObjectRetain(v58);
      v60 = sub_191350(v59);
      sub_1C1260(v60, (uint64_t)v76);
      v61 = v76[0];
      v62 = v76[1];
      v63 = v76[2];
      v64 = v76[3];
      swift_bridgeObjectRelease(v58);
      swift_bridgeObjectRelease(v60);
      sub_5B70C((uint64_t)v76, (uint64_t)v77, &qword_3BD330);
      if ((v77[32] & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v70) & 1) == 0)
          v70 = sub_432C0(0, v70[2] + 1, 1, v70);
        v66 = v70[2];
        v65 = v70[3];
        if (v66 >= v65 >> 1)
          v70 = sub_432C0((_QWORD *)(v65 > 1), v66 + 1, 1, v70);
        v70[2] = v66 + 1;
        v57 = &v70[4 * v66];
        v57[4] = v61;
        v57[5] = v62;
        v57[6] = v63;
        v57[7] = v64;
      }
      ++v52;
    }
    while (v69 != v52);
    swift_bridgeObjectRelease(v31);
  }
  else
  {
    v70 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v31);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v73;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v70;
  *(_QWORD *)(a2 + 40) = v71;
  *(_QWORD *)(a2 + 48) = v72;
  *(_BYTE *)(a2 + 56) = v68;
  *(_QWORD *)(a2 + 64) = v67;
}

int *sub_118090@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  void *v13;
  id v14;
  unint64_t v15;
  __n128 v16;
  int *result;
  unint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  double v68;
  double v69;
  double v70;
  double v71;
  void *v72;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  CGFloat v82;
  double v83;
  CGFloat v84;
  id v85;
  unint64_t v86;
  char v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  CGFloat *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[5];
  _BYTE v112[48];
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  CGRect v116;
  CGRect v117;

  v6 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v6);
  v8 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_344A8(a1, (uint64_t)&v109);
  v9 = sub_319AC(&qword_3BD320);
  if (!swift_dynamicCast(&v113, &v109, (char *)&type metadata for Any + 8, v9, 6))
  {
    v15 = sub_119F08();
    swift_allocError(&type metadata for ContentMessageError, v15, 0, 0);
    return (int *)swift_willThrow(v16);
  }
  v10 = v113;
  if (*(_QWORD *)(v113 + 16) && (v11 = sub_3B8A0(0x746E656D75636F64, 0xEB000000004C5255), (v12 & 1) != 0))
  {
    v13 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v11);
    v14 = v13;
  }
  else
  {
    v13 = 0;
  }
  URL.init(object:)(v13);
  if (!*(_QWORD *)(v10 + 16))
  {
    v107 = 0;
    v106 = 0;
    v22 = 0;
    v24 = 0;
    goto LABEL_16;
  }
  v18 = sub_3B8A0(1819112552, 0xE400000000000000);
  if ((v19 & 1) == 0)
  {
    v24 = 0;
    v22 = 0;
    if (*(_QWORD *)(v10 + 16))
      goto LABEL_24;
    goto LABEL_14;
  }
  v20 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v18);
  v21 = objc_opt_self(NSString);
  v22 = swift_dynamicCastObjCClass(v20, v21);
  if (!v22)
  {
    v24 = 0;
    if (*(_QWORD *)(v10 + 16))
      goto LABEL_24;
LABEL_14:
    v107 = 0;
    v106 = 0;
LABEL_16:
    v25 = 0;
    v26 = &v115;
LABEL_17:
    *(v26 - 32) = 0;
    goto LABEL_18;
  }
  v110 = 0;
  v109 = 0;
  v23 = v20;
  static String._conditionallyBridgeFromObjectiveC(_:result:)(v22, &v109);

  v22 = v110;
  if (v110)
    v24 = v109;
  else
    v24 = 0;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_14;
LABEL_24:
  v38 = sub_3B8A0(0x656C746974, 0xE500000000000000);
  if ((v39 & 1) == 0)
  {
    v25 = 0;
    v108 = 0;
    if (*(_QWORD *)(v10 + 16))
      goto LABEL_31;
    goto LABEL_29;
  }
  v40 = v24;
  v41 = v22;
  v42 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v38);
  v43 = objc_opt_self(NSString);
  v44 = swift_dynamicCastObjCClass(v42, v43);
  if (!v44)
  {
    v108 = 0;
    v24 = v40;
    v25 = 0;
    if (*(_QWORD *)(v10 + 16))
      goto LABEL_31;
LABEL_29:
    v107 = 0;
    v26 = &v114;
    goto LABEL_17;
  }
  v45 = v44;
  v110 = 0;
  v109 = 0;
  v46 = v42;
  static String._conditionallyBridgeFromObjectiveC(_:result:)(v45, &v109);

  v47 = v109;
  v108 = v110;
  if (!v110)
    v47 = 0;
  v22 = v41;
  v24 = v40;
  v25 = v47;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_29;
LABEL_31:
  v48 = sub_3B8A0(0x6E6F697461636F6CLL, 0xE800000000000000);
  if ((v49 & 1) != 0)
  {
    v103 = v25;
    v50 = v24;
    v51 = v22;
    v52 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v48);
    v53 = objc_opt_self(NSString);
    v54 = swift_dynamicCastObjCClass(v52, v53);
    if (v54)
    {
      v55 = v54;
      v110 = 0;
      v109 = 0;
      v56 = v52;
      static String._conditionallyBridgeFromObjectiveC(_:result:)(v55, &v109);

      v57 = v109;
      v107 = v110;
      if (!v110)
        v57 = 0;
      v106 = v57;
    }
    else
    {
      v106 = 0;
      v107 = 0;
    }
    v22 = v51;
    v24 = v50;
    v25 = v103;
    if (!*(_QWORD *)(v10 + 16))
      goto LABEL_18;
  }
  else
  {
    v106 = 0;
    v107 = 0;
    if (!*(_QWORD *)(v10 + 16))
      goto LABEL_18;
  }
  v58 = sub_3B8A0(0x54746E65746E6F63, 0xEB00000000657079);
  if ((v59 & 1) != 0)
  {
    v103 = v25;
    v60 = v24;
    v61 = v22;
    v62 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v58);
    v63 = objc_opt_self(NSString);
    v64 = swift_dynamicCastObjCClass(v62, v63);
    if (v64)
    {
      v65 = v64;
      v110 = 0;
      v109 = 0;
      v66 = v62;
      static String._conditionallyBridgeFromObjectiveC(_:result:)(v65, &v109);

      v67 = v109;
      v104 = v110;
      if (!v110)
        v67 = 0;
      v105 = v67;
    }
    else
    {
      v105 = 0;
      v104 = 0;
    }
    v22 = v61;
    v24 = v60;
    v25 = v103;
    if (!*(_QWORD *)(v10 + 16))
      goto LABEL_53;
    goto LABEL_19;
  }
LABEL_18:
  v105 = 0;
  v104 = 0;
  if (!*(_QWORD *)(v10 + 16))
  {
LABEL_53:
    v37 = 0;
    goto LABEL_54;
  }
LABEL_19:
  v27 = sub_3B8A0(1952671090, 0xE400000000000000);
  if ((v28 & 1) == 0)
    goto LABEL_53;
  v103 = v25;
  v29 = v24;
  v30 = v22;
  v31 = *(void **)(*(_QWORD *)(v10 + 56) + 8 * v27);
  v32 = objc_opt_self(NSDictionary);
  v33 = swift_dynamicCastObjCClass(v31, v32);
  if (v33
    && (v34 = v33,
        v109 = 0,
        v35 = v31,
        static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v34, &v109, &type metadata for String, &type metadata for Double, &protocol witness table for String), v35, (v36 = v109) != 0))
  {
    v37 = sub_191350(v109);
    swift_bridgeObjectRelease(v36);
  }
  else
  {
    v37 = 0;
  }
  v22 = v30;
  v24 = v29;
  v25 = v103;
LABEL_54:
  sub_1C1260(v37, (uint64_t)v111);
  v68 = *(double *)v111;
  v69 = *(double *)&v111[1];
  v70 = *(double *)&v111[2];
  v71 = *(double *)&v111[3];
  swift_bridgeObjectRelease(v37);
  sub_5B70C((uint64_t)v111, (uint64_t)v112, &qword_3BD330);
  v72 = 0;
  x = 0.0;
  y = 0.0;
  width = 0.0;
  height = 0.0;
  if ((v112[32] & 1) == 0 && a2)
  {
    objc_msgSend(a2, "be_convertPointFromContentsToView:", v68, v69);
    v78 = v77;
    v80 = v79;
    objc_msgSend(a2, "be_convertPointFromContentsToView:", v68 + v70, v69 + v71);
    v82 = v81 - v78;
    v84 = v83 - v80;
    v85 = a2;
    v116.origin.x = v78;
    v116.origin.y = v80;
    v116.size.width = v82;
    v116.size.height = v84;
    v117 = CGRectStandardize(v116);
    x = v117.origin.x;
    y = v117.origin.y;
    width = v117.size.width;
    height = v117.size.height;
    v72 = a2;
  }
  if (*(_QWORD *)(v10 + 16) && (v86 = sub_3B8A0(0x6C6163536D6F6F7ALL, 0xE900000000000065), (v87 & 1) != 0))
  {
    v88 = *(id *)(*(_QWORD *)(v10 + 56) + 8 * v86);
    swift_bridgeObjectRelease(v10);
    v89 = objc_opt_self(NSNumber);
    v90 = swift_dynamicCastObjCClass(v88, v89);
    if (v90)
    {
      v109 = 0;
      LOBYTE(v110) = 1;
      static Double._conditionallyBridgeFromObjectiveC(_:result:)(v90, &v109);

      v91 = v110;
      if ((_BYTE)v110)
        v92 = 0;
      else
        v92 = v109;
      goto LABEL_65;
    }

  }
  else
  {
    swift_bridgeObjectRelease(v10);
  }
  v92 = 0;
  v91 = 1;
LABEL_65:
  sub_5B70C((uint64_t)v8, a3, (uint64_t *)&unk_3B8C50);
  result = (int *)type metadata accessor for ContentMessage.Footnote(0);
  v93 = (uint64_t *)(a3 + result[5]);
  *v93 = v24;
  v93[1] = v22;
  v94 = (uint64_t *)(a3 + result[6]);
  v95 = v107;
  *v94 = v106;
  v94[1] = v95;
  v96 = (uint64_t *)(a3 + result[7]);
  v97 = v108;
  *v96 = v25;
  v96[1] = v97;
  v98 = (uint64_t *)(a3 + result[8]);
  v99 = v104;
  *v98 = v105;
  v98[1] = v99;
  v100 = a3 + result[9];
  *(_QWORD *)v100 = v92;
  *(_BYTE *)(v100 + 8) = v91;
  v101 = (CGFloat *)(a3 + result[10]);
  *(_QWORD *)v101 = v72;
  v101[1] = x;
  v101[2] = y;
  v101[3] = width;
  v101[4] = height;
  return result;
}

unsigned __int8 sub_11883C@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *object;
  uint64_t countAndFlagsBits;
  unsigned __int8 result;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  Swift::String rawValue;

  sub_344A8(a1, (uint64_t)&rawValue);
  v3 = sub_319AC(&qword_3BD320);
  if ((swift_dynamicCast(&v15, &rawValue, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
  {
    v4 = v15;
    if (*(_QWORD *)(v15 + 16) && (v5 = sub_3B8A0(0x6F69746365726964, 0xE90000000000006ELL), (v6 & 1) != 0))
    {
      v7 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v5);
      swift_bridgeObjectRelease(v4);
      v8 = objc_opt_self(NSString);
      v9 = swift_dynamicCastObjCClass(v7, v8);
      if (v9)
      {
        rawValue._countAndFlagsBits = 0;
        rawValue._object = 0;
        static String._conditionallyBridgeFromObjectiveC(_:result:)(v9, &rawValue);

        object = rawValue._object;
        if (rawValue._object)
        {
          countAndFlagsBits = rawValue._countAndFlagsBits;
          result = ContentMessage.Direction.init(rawValue:)(*(Swift::String *)(&object - 1)).value;
          if (LOBYTE(rawValue._countAndFlagsBits) != 4)
          {
            *a2 = rawValue._countAndFlagsBits;
            return result;
          }
        }
      }
      else
      {

      }
    }
    else
    {
      swift_bridgeObjectRelease(v4);
    }
  }
  v13 = sub_119F08();
  swift_allocError(&type metadata for ContentMessageError, v13, 0, 0);
  return swift_willThrow(v14);
}

void sub_11897C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t countAndFlagsBits;
  unint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *object;
  Swift::Int v13;
  char v14;
  unint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __n128 v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Swift::String string;
  __int128 v62;
  _BYTE v63[40];
  _QWORD v64[5];
  _BYTE v65[40];
  _OWORD v66[2];
  char v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;

  sub_344A8(a1, (uint64_t)&string);
  v3 = sub_319AC(&qword_3BD320);
  if ((swift_dynamicCast(&v59, &string, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
    goto LABEL_33;
  countAndFlagsBits = v59;
  if (!*(_QWORD *)(v59 + 16))
    goto LABEL_31;
  v5 = sub_3B8A0(0x746E657665, 0xE500000000000000);
  if ((v6 & 1) == 0)
    goto LABEL_31;
  v7 = *(void **)(*(_QWORD *)(countAndFlagsBits + 56) + 8 * v5);
  v8 = objc_opt_self(NSString);
  v9 = swift_dynamicCastObjCClass(v7, v8);
  if (!v9)
    goto LABEL_31;
  v10 = v9;
  string = (Swift::String)0;
  v11 = v7;
  static String._conditionallyBridgeFromObjectiveC(_:result:)(v10, &string);

  object = string._object;
  if (!string._object)
    goto LABEL_31;
  v13 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_379828, string);
  swift_bridgeObjectRelease(object);
  if (v13)
  {
    if (v13 != 1)
    {
LABEL_31:
      v35 = countAndFlagsBits;
LABEL_32:
      swift_bridgeObjectRelease(v35);
      goto LABEL_33;
    }
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  if (!*(_QWORD *)(countAndFlagsBits + 16))
    goto LABEL_31;
  v15 = sub_3B8A0(0x43656C6269736976, 0xEB00000000734946);
  if ((v16 & 1) == 0)
    goto LABEL_31;
  v17 = *(id *)(*(_QWORD *)(countAndFlagsBits + 56) + 8 * v15);
  swift_bridgeObjectRelease(countAndFlagsBits);
  v18 = objc_opt_self(NSDictionary);
  v19 = swift_dynamicCastObjCClass(v17, v18);
  if (!v19)
  {

    goto LABEL_33;
  }
  string._countAndFlagsBits = 0;
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v19, &string, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  countAndFlagsBits = string._countAndFlagsBits;
  if (!string._countAndFlagsBits)
  {
LABEL_33:
    v36 = sub_119F08();
    swift_allocError(&type metadata for ContentMessageError, v36, 0, 0);
    swift_willThrow(v37);
    return;
  }
  if (!*(_QWORD *)(string._countAndFlagsBits + 16))
    goto LABEL_31;
  v20 = sub_3B8A0(0x7472617473, 0xE500000000000000);
  if ((v21 & 1) == 0)
    goto LABEL_31;
  sub_344A8(*(_QWORD *)(countAndFlagsBits + 56) + 32 * v20, (uint64_t)&string);
  if ((swift_dynamicCast(&v59, &string, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_31;
  v22 = v60;
  if (!*(_QWORD *)(countAndFlagsBits + 16))
    goto LABEL_30;
  v23 = v59;
  v24 = sub_3B8A0(6581861, 0xE300000000000000);
  if ((v25 & 1) == 0)
    goto LABEL_30;
  sub_344A8(*(_QWORD *)(countAndFlagsBits + 56) + 32 * v24, (uint64_t)&string);
  if ((swift_dynamicCast(&v59, &string, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_30;
  v26 = v60;
  if (!*(_QWORD *)(countAndFlagsBits + 16)
    || (v70 = v59, v27 = sub_3B8A0(0x74786554706572, 0xE700000000000000), (v28 & 1) == 0))
  {
    swift_bridgeObjectRelease(v26);
LABEL_30:
    swift_bridgeObjectRelease(v22);
    goto LABEL_31;
  }
  v29 = countAndFlagsBits;
  sub_344A8(*(_QWORD *)(countAndFlagsBits + 56) + 32 * v27, (uint64_t)&string);
  if ((swift_dynamicCast(&v59, &string, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
LABEL_37:
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v22);
    v35 = countAndFlagsBits;
    goto LABEL_32;
  }
  v58 = v60;
  if (!*(_QWORD *)(countAndFlagsBits + 16)
    || (v55 = v59, v30 = sub_3B8A0(0x74636552696663, 0xE700000000000000), (v31 & 1) == 0))
  {
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v22);
    v34 = countAndFlagsBits;
    goto LABEL_35;
  }
  sub_344A8(*(_QWORD *)(countAndFlagsBits + 56) + 32 * v30, (uint64_t)&string);
  v32 = sub_319AC(&qword_3BD328);
  if ((swift_dynamicCast(&v59, &string, (char *)&type metadata for Any + 8, v32, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v58);
    goto LABEL_37;
  }
  v33 = v59;
  v56 = sub_191350(v59);
  swift_bridgeObjectRelease(v33);
  sub_1C1260(v56, (uint64_t)v63);
  swift_bridgeObjectRelease(v56);
  sub_5B70C((uint64_t)v63, (uint64_t)v66, &qword_3BD330);
  if (v67 == 1)
  {
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v22);
    v34 = v26;
LABEL_35:
    swift_bridgeObjectRelease(v34);
    v35 = v58;
    goto LABEL_32;
  }
  v68 = v66[0];
  v69 = v66[1];
  if (*(_QWORD *)(v29 + 16) && (v38 = sub_3B8A0(0x52656E694C696663, 0xEC00000073746365), (v39 & 1) != 0))
  {
    sub_344A8(*(_QWORD *)(v29 + 56) + 32 * v38, (uint64_t)&string);
  }
  else
  {
    string = (Swift::String)0;
    v62 = 0u;
  }
  swift_bridgeObjectRelease(v29);
  if (!*((_QWORD *)&v62 + 1))
  {
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v22);
    sub_4E27C((uint64_t)&string);
    goto LABEL_33;
  }
  v40 = sub_319AC((uint64_t *)&unk_3BD338);
  if ((swift_dynamicCast(&v59, &string, (char *)&type metadata for Any + 8, v40, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v26);
    v35 = v22;
    goto LABEL_32;
  }
  v54 = v59;
  v53 = *(_QWORD *)(v59 + 16);
  if (v53)
  {
    swift_bridgeObjectRetain(v59);
    v41 = 0;
    v57 = _swiftEmptyArrayStorage;
    do
    {
      v43 = *(_QWORD *)(v54 + 8 * v41 + 32);
      swift_bridgeObjectRetain(v43);
      v45 = sub_191350(v44);
      sub_1C1260(v45, (uint64_t)v64);
      v46 = v64[0];
      v47 = v64[1];
      v48 = v64[2];
      v49 = v64[3];
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v45);
      sub_5B70C((uint64_t)v64, (uint64_t)v65, &qword_3BD330);
      if ((v65[32] & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
          v57 = sub_432C0(0, v57[2] + 1, 1, v57);
        v51 = v57[2];
        v50 = v57[3];
        if (v51 >= v50 >> 1)
          v57 = sub_432C0((_QWORD *)(v50 > 1), v51 + 1, 1, v57);
        v57[2] = v51 + 1;
        v42 = &v57[4 * v51];
        v42[4] = v46;
        v42[5] = v47;
        v42[6] = v48;
        v42[7] = v49;
      }
      ++v41;
    }
    while (v53 != v41);
    swift_bridgeObjectRelease(v54);
  }
  else
  {
    v57 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v54);
  *(_BYTE *)a2 = v14;
  *(_QWORD *)(a2 + 8) = v23;
  *(_QWORD *)(a2 + 16) = v22;
  *(_QWORD *)(a2 + 24) = v70;
  *(_QWORD *)(a2 + 32) = v26;
  *(_QWORD *)(a2 + 40) = v55;
  *(_QWORD *)(a2 + 48) = v58;
  v52 = v69;
  *(_OWORD *)(a2 + 56) = v68;
  *(_OWORD *)(a2 + 72) = v52;
  *(_QWORD *)(a2 + 88) = v57;
}

_QWORD *sub_118FD8(uint64_t a1)
{
  unint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[5];
  _QWORD v26[4];
  char v27;

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v2 = sub_3B8A0(0x7374636572, 0xE500000000000000);
  if ((v3 & 1) == 0)
    return 0;
  v4 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v2);
  v5 = objc_opt_self(NSArray);
  v6 = swift_dynamicCastObjCClass(v4, v5);
  if (!v6)
    return 0;
  v7 = v6;
  v26[0] = 0;
  v8 = v4;
  v9 = sub_319AC(&qword_3BD328);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v7, v26, v9);

  v10 = v26[0];
  if (!v26[0])
    return 0;
  v11 = *(_QWORD *)(v26[0] + 16);
  if (v11)
  {
    swift_bridgeObjectRetain(v26[0]);
    v12 = 0;
    v13 = _swiftEmptyArrayStorage;
    do
    {
      v15 = *(_QWORD *)(v10 + 8 * v12 + 32);
      swift_bridgeObjectRetain(v15);
      v17 = sub_191350(v16);
      sub_1C1260(v17, (uint64_t)v25);
      v18 = v25[0];
      v19 = v25[1];
      v20 = v25[2];
      v21 = v25[3];
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v17);
      sub_5B70C((uint64_t)v25, (uint64_t)v26, &qword_3BD330);
      if ((v27 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
          v13 = sub_432C0(0, v13[2] + 1, 1, v13);
        v23 = v13[2];
        v22 = v13[3];
        if (v23 >= v22 >> 1)
          v13 = sub_432C0((_QWORD *)(v22 > 1), v23 + 1, 1, v13);
        v13[2] = v23 + 1;
        v14 = &v13[4 * v23];
        v14[4] = v18;
        v14[5] = v19;
        v14[6] = v20;
        v14[7] = v21;
      }
      ++v12;
    }
    while (v11 != v12);
    swift_bridgeObjectRelease_n(v10, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v26[0]);
    return _swiftEmptyArrayStorage;
  }
  return v13;
}

void sub_1191BC()
{
  __asm { BR              X9; loc_119260 }
}

uint64_t type metadata accessor for ContentMessageMediator(uint64_t a1)
{
  uint64_t result;

  result = qword_3BD230;
  if (!qword_3BD230)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContentMessageMediator);
  return result;
}

void sub_1193FC(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t, _QWORD *, uint64_t, uint64_t);
  id v13;
  _QWORD v14[3];

  v7 = v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    v14[0] = a1;
    *(double *)&v14[1] = a2;
    *(double *)&v14[2] = a3;
    v12 = *(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v10 + 8);
    v13 = a1;
    v12(v3, v14, ObjectType, v10);

    swift_unknownObjectRelease(v9);
  }
}

uint64_t sub_1194A0(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v7 = v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_citationHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_citationHandler);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 8))(v3, a1, a2, ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    swift_bridgeObjectRetain_n(a2, 2);
    v13 = a3;
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(22, -1);
      v17 = (_QWORD *)swift_slowAlloc(8, -1);
      v18 = swift_slowAlloc(32, -1);
      v23 = v18;
      *(_DWORD *)v16 = 136315394;
      swift_bridgeObjectRetain(a2);
      v22 = sub_33524(a1, a2, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v16 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v16 + 12) = 2112;
      v22 = (uint64_t)v13;
      v19 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v16 + 14);
      *v17 = v13;

      _os_log_impl(&dword_0, v14, v15, "No CitationHandler -- unable to determine citationForText %s in webView %@", (uint8_t *)v16, 0x16u);
      v20 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v17, 1, v20);
      swift_slowDealloc(v17, -1, -1);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }

    return 0;
  }
  return v12;
}

uint64_t sub_119700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_344A8(a1, (uint64_t)&v11);
  v1 = sub_319AC(&qword_3BD320);
  if ((swift_dynamicCast(&v13, &v11, (char *)&type metadata for Any + 8, v1, 6) & 1) != 0)
  {
    v2 = v13;
    if (*(_QWORD *)(v13 + 16) && (v3 = sub_3B8A0(0x726F7463656C6573, 0xE800000000000000), (v4 & 1) != 0))
    {
      v5 = *(id *)(*(_QWORD *)(v2 + 56) + 8 * v3);
      swift_bridgeObjectRelease(v2);
      v6 = objc_opt_self(NSString);
      v7 = swift_dynamicCastObjCClass(v5, v6);
      if (v7)
      {
        v11 = 0;
        v12 = 0;
        static String._conditionallyBridgeFromObjectiveC(_:result:)(v7, &v11);

        if (v12)
          return v11;
      }
      else
      {

      }
    }
    else
    {
      swift_bridgeObjectRelease(v2);
    }
  }
  v9 = sub_119F08();
  swift_allocError(&type metadata for ContentMessageError, v9, 0, 0);
  return swift_willThrow(v10);
}

void sub_119820(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  id v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  NSObject *v28;
  uint64_t v29[4];
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;

  v3 = type metadata accessor for ContentMessage(0);
  *(_QWORD *)&v4 = __chkstk_darwin(v3).n128_u64[0];
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v7 = objc_msgSend(a1, "name", v4);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v10 = v9;

  v32._countAndFlagsBits = v8;
  v32._object = v10;
  v11 = sub_BDFEC(v32);
  if (v11 == 12)
  {
    v12 = a1;
    v28 = Logger.logObject.getter(v12);
    v13 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      v29[0] = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = objc_msgSend(v12, "name");
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      v19 = v18;

      v30 = sub_33524(v17, v19, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v14 + 4);

      swift_bridgeObjectRelease(v19);
      _os_log_impl(&dword_0, v28, v13, "Unknown message name: %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }
    else
    {

    }
  }
  else
  {
    v20 = v11;
    v21 = objc_msgSend(a1, "body");
    _bridgeAnyObjectToAny(_:)(v29);
    v22 = objc_msgSend(a1, "webView", swift_unknownObjectRelease(v21).n128_f64[0]);
    sub_116BF4(v20);
    sub_34488(v29);

    v23 = v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_webMessageHandler;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_webMessageHandler);
    if (Strong)
    {
      v25 = Strong;
      v26 = *(_QWORD *)(v23 + 8);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v26 + 8))(v1, v6, ObjectType, v26);
      swift_unknownObjectRelease(v25);
    }
    sub_119ECC((uint64_t)v6);
  }
}

uint64_t dispatch thunk of PaginationCacheProviding.save(document:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ContentAlertHandler.content(_:present:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_119E0C()
{
  return type metadata accessor for ContentMessageMediator(0);
}

uint64_t sub_119E14(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_2ED4A8;
    v4[2] = &unk_2ED4A8;
    v4[3] = &unk_2ED4A8;
    v4[4] = &unk_2ED4A8;
    v4[5] = &unk_2ED4A8;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ContentMessageMediator(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ContentMessageMediator);
}

uint64_t sub_119E9C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_119EC0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_119ECC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContentMessage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_119F08()
{
  unint64_t result;

  result = qword_3BD310;
  if (!qword_3BD310)
  {
    result = swift_getWitnessTable(&unk_2ED53C, &type metadata for ContentMessageError);
    atomic_store(result, (unint64_t *)&qword_3BD310);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContentMessageError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ContentMessageError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_119FE0 + 4 * byte_2ED408[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_11A000 + 4 * byte_2ED40D[v4]))();
}

_BYTE *sub_119FE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_11A000(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_11A008(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_11A010(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_11A018(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_11A020(_DWORD *result)
{
  *result = 0;
  return result;
}

Swift::Bool __swiftcall BookContentViewController.accessibilityScroll(_:)(UIAccessibilityScrollDirection a1)
{
  return 0;
}

ValueMetadata *type metadata accessor for ContentMessageError()
{
  return &type metadata for ContentMessageError;
}

unint64_t sub_11A048()
{
  unint64_t result;

  result = qword_3BD348;
  if (!qword_3BD348)
  {
    result = swift_getWitnessTable(&unk_2ED514, &type metadata for ContentMessageError);
    atomic_store(result, (unint64_t *)&qword_3BD348);
  }
  return result;
}

void sub_11A08C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[2];

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v6)
      goto LABEL_23;
    v15 = *(_QWORD *)(v2 + 8 * v14);
    ++v7;
    if (!v15)
    {
      v7 = v14 + 1;
      if (v14 + 1 >= v6)
        goto LABEL_23;
      v15 = *(_QWORD *)(v2 + 8 * v7);
      if (!v15)
      {
        v7 = v14 + 2;
        if (v14 + 2 >= v6)
          goto LABEL_23;
        v15 = *(_QWORD *)(v2 + 8 * v7);
        if (!v15)
        {
          v7 = v14 + 3;
          if (v14 + 3 >= v6)
            goto LABEL_23;
          v15 = *(_QWORD *)(v2 + 8 * v7);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v15 - 1) & v15;
    v9 = __clz(__rbit64(v15)) + (v7 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain_n(v12, 2);
    sub_130310(v17, v11, v12);
    v13 = v17[1];
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v13);
  }
  v16 = v14 + 4;
  if (v16 >= v6)
  {
LABEL_23:
    swift_release();
    return;
  }
  v15 = *(_QWORD *)(v2 + 8 * v16);
  if (v15)
  {
    v7 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v6)
      goto LABEL_23;
    v15 = *(_QWORD *)(v2 + 8 * v7);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_11A224(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v6)
      goto LABEL_23;
    v16 = *(_QWORD *)(v2 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v6)
        goto LABEL_23;
      v16 = *(_QWORD *)(v2 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v6)
          goto LABEL_23;
        v16 = *(_QWORD *)(v2 + 8 * v7);
        if (!v16)
        {
          v7 = v15 + 3;
          if (v15 + 3 >= v6)
            goto LABEL_23;
          v16 = *(_QWORD *)(v2 + 8 * v7);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v16 - 1) & v16;
    v9 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain(v12);
    sub_1B4510(v11, v12);
    v14 = v13;
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v14);
  }
  v17 = v15 + 4;
  if (v17 >= v6)
  {
LABEL_23:
    swift_release();
    return;
  }
  v16 = *(_QWORD *)(v2 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v6)
      goto LABEL_23;
    v16 = *(_QWORD *)(v2 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

_QWORD *sub_11A3AC(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  __int128 v11;
  __int128 v12;
  _QWORD *v13;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_F5254(0, v2, 0);
    result = _swiftEmptyArrayStorage;
    v4 = (_OWORD *)(a1 + 56);
    do
    {
      v5 = *((_QWORD *)v4 - 3);
      v6 = *(v4 - 1);
      v7 = *v4;
      v13 = result;
      v9 = result[2];
      v8 = result[3];
      if (v9 >= v8 >> 1)
      {
        v11 = *v4;
        v12 = *(v4 - 1);
        sub_F5254(v8 > 1, v9 + 1, 1);
        v7 = v11;
        v6 = v12;
        result = v13;
      }
      result[2] = v9 + 1;
      v10 = &result[5 * v9];
      v10[4] = v5;
      *(_OWORD *)(v10 + 5) = v6;
      *(_OWORD *)(v10 + 7) = v7;
      v4 = (_OWORD *)((char *)v4 + 72);
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_11A48C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD v22[7];
  _OWORD v23[3];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_139860();
  v4 = Set.init(minimumCapacity:)(v2, &type metadata for SearchPassage, v3);
  v5 = 0;
  v7 = a1 + 64;
  v6 = *(_QWORD *)(a1 + 64);
  v22[6] = v4;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v6;
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_5;
    }
    v19 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v11)
      goto LABEL_23;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v5;
    if (!v20)
    {
      v5 = v19 + 1;
      if (v19 + 1 >= v11)
        goto LABEL_23;
      v20 = *(_QWORD *)(v7 + 8 * v5);
      if (!v20)
      {
        v5 = v19 + 2;
        if (v19 + 2 >= v11)
          goto LABEL_23;
        v20 = *(_QWORD *)(v7 + 8 * v5);
        if (!v20)
        {
          v5 = v19 + 3;
          if (v19 + 3 >= v11)
            goto LABEL_23;
          v20 = *(_QWORD *)(v7 + 8 * v5);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v13 = __clz(__rbit64(v20)) + (v5 << 6);
LABEL_5:
    v14 = (_OWORD *)(*(_QWORD *)(a1 + 48) + 48 * v13);
    v16 = v14[1];
    v15 = v14[2];
    v23[0] = *v14;
    v23[1] = v16;
    v23[2] = v15;
    sub_1398A4(v23);
    sub_130078(v22, v23);
    v17 = v22[1];
    v18 = v22[3];
    swift_bridgeObjectRelease(v22[5]);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v17);
  }
  v21 = v19 + 4;
  if (v21 >= v11)
  {
LABEL_23:
    swift_release();
    return;
  }
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v5 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v5 >= v11)
      goto LABEL_23;
    v20 = *(_QWORD *)(v7 + 8 * v5);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_11A648(unint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, _QWORD *, __n128), NSObject *a6)
{
  sub_11A6B8(a1, a2, a3, a4, a5, a6, &qword_3B90A0, type metadata accessor for HighlightPaginationEntity, (uint64_t (*)(_QWORD))type metadata accessor for HighlightPaginationEntityReference);
}

void sub_11A680(unint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, _QWORD *, __n128), NSObject *a6)
{
  sub_11A6B8(a1, a2, a3, a4, a5, a6, &qword_3B90B0, type metadata accessor for BookmarkPaginationEntity, (uint64_t (*)(_QWORD))type metadata accessor for BookmarkPaginationEntityReference);
}

void sub_11A6B8(unint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, _QWORD *, __n128), NSObject *a6, unint64_t *a7, uint64_t (*a8)(uint64_t), uint64_t (*a9)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t isa;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  Class v24;
  unint64_t v25;
  BOOL v26;
  CGFloat y;
  CGFloat x;
  CGFloat width;
  CGFloat height;
  NSObject *v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t inited;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v64;
  unint64_t v65;
  NSObject *v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE v80[24];
  uint64_t v81;
  char v82[64];
  char v83[32];
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;

  v11 = a2;
  v62 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v16 = a2;
    else
      v16 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    v74 = v11;
    if (!v12)
      goto LABEL_13;
  }
  else
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a2);
    v74 = v11;
    if (!v12)
      goto LABEL_13;
  }
  if (v12 < 1)
  {
    __break(1u);
LABEL_77:
    swift_bridgeObjectRelease(a4);
LABEL_78:
    __break(1u);
    return;
  }
  v13 = 0;
  v14 = v11 & 0xC000000000000001;
  do
  {
    if (v14)
    {
      v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v11);
    }
    else
    {
      v15 = *(_QWORD *)(v11 + 8 * v13 + 32);
      swift_retain();
    }
    ++v13;
    a3(v15);
    swift_release();
    v11 = v74;
  }
  while (v12 != v13);
LABEL_13:
  swift_bridgeObjectRelease(v11);
  a4 = a1;
  if (a1 >> 62)
    goto LABEL_71;
  v17 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  if (v17)
  {
LABEL_15:
    v18 = 0;
    v65 = a4 & 0xC000000000000001;
    v60 = (a4 + 32);
    v61 = a4 & 0xFFFFFFFFFFFFFF8;
    v19 = v11 & 0xFFFFFFFFFFFFFF8;
    v77 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v11 < 0)
      v19 = v11;
    v59 = v19;
    v75 = v11 + 32;
    v76 = v11 & 0xC000000000000001;
    v64 = v17;
    while (1)
    {
      if (v65)
      {
        isa = specialized _ArrayBuffer._getElementSlowPath(_:)(v18, a1);
        v21 = __OFADD__(v18, 1);
        v22 = v18 + 1;
        if (v21)
          goto LABEL_68;
      }
      else
      {
        if (v18 >= *(_QWORD *)(v61 + 16))
          goto LABEL_70;
        isa = (uint64_t)v60[v18].isa;
        swift_retain();
        v21 = __OFADD__(v18, 1);
        v22 = v18 + 1;
        if (v21)
          goto LABEL_68;
      }
      v73 = isa + 40;
      swift_beginAccess(isa + 40, v83, 1, 0);
      v23 = *(_QWORD *)(isa + 40);
      *(_QWORD *)(isa + 40) = &_swiftEmptySetSingleton;
      swift_retain();
      swift_bridgeObjectRelease(v23);
      v79 = isa;
      a4 = *(_QWORD *)(isa + 32);
      v24 = *(Class *)(a4 + 16);
      v25 = v24 != 0;
      v26 = v24 == 0;
      v68 = v22;
      if (!v24)
        goto LABEL_78;
      x = *(double *)(a4 + 40);
      y = *(double *)(a4 + 48);
      width = *(double *)(a4 + 56);
      height = *(double *)(a4 + 64);
      if (v24 == (Class)v25)
        goto LABEL_42;
      v11 = *(_QWORD *)(a4 + 32);
      if ((unint64_t)v24 <= v25)
        goto LABEL_69;
      v31 = (a4 + 32);
      swift_bridgeObjectRetain(a4);
      while (v26)
      {
        v32 = x;
LABEL_32:
        ++v25;
        v26 = 1;
        x = v32;
        if ((Class)v25 == v24)
          goto LABEL_77;
      }
      v32 = 0.0;
      if (v31[5 * v25].isa != (Class)v11)
        goto LABEL_40;
      v84.origin.x = x;
      v84.origin.y = y;
      v84.size.width = width;
      v84.size.height = height;
      v85 = CGRectUnion(v84, *(CGRect *)&v31[5 * v25 + 1].isa);
      x = v85.origin.x;
      y = v85.origin.y;
      width = v85.size.width;
      height = v85.size.height;
      if ((Class)(v25 + 1) != v24)
        break;
LABEL_41:
      swift_bridgeObjectRelease(a4);
      v11 = v74;
LABEL_42:
      v34 = v79;
      swift_release();
      v35 = sub_319AC(&qword_3B6838);
      inited = swift_initStackObject(v35, v82);
      *(_OWORD *)(inited + 16) = xmmword_2E5F80;
      *(CGFloat *)(inited + 32) = x;
      *(CGFloat *)(inited + 40) = y;
      *(CGFloat *)(inited + 48) = width;
      *(CGFloat *)(inited + 56) = height;
      a4 = (uint64_t)v66;
      v37 = sub_AD248(inited);
      swift_setDeallocating(inited);
      v78 = v37[2];
      v67 = v37;
      if (v78)
      {
        if (v62)
        {
          swift_bridgeObjectRetain(v11);
          v38 = _CocoaArrayWrapper.endIndex.getter(v59);
          swift_bridgeObjectRelease(v11);
        }
        else
        {
          v38 = *(_QWORD *)(v77 + 16);
        }
        v39 = 0;
        v40 = v37 + 4;
        while (1)
        {
          v43 = v39 + 1;
          if (__OFADD__(v39, 1))
            break;
          v44 = v40[v39];
          if (v44 >= v38 || v44 < 0)
          {
            if (qword_3B5740 != -1)
              swift_once(&qword_3B5740, sub_AABBC);
            v54 = type metadata accessor for Logger(0);
            sub_555F0(v54, (uint64_t)qword_3B9D18);
            swift_bridgeObjectRetain(v11);
            a4 = Logger.logObject.getter(v55);
            v56 = static os_log_type_t.error.getter();
            if (os_log_type_enabled((os_log_t)a4, v56))
            {
              v41 = swift_slowAlloc(22, -1);
              *(_DWORD *)v41 = 134218240;
              *(_QWORD *)(v41 + 4) = v44;
              *(_WORD *)(v41 + 12) = 2048;
              *(_QWORD *)(v41 + 14) = v38;
              swift_bridgeObjectRelease(v11);
              _os_log_impl(&dword_0, (os_log_t)a4, v56, "Aborting reference updating due to index %ld beyond pageCount %ld", (uint8_t *)v41, 0x16u);
              v42 = v41;
              v34 = v79;
              swift_slowDealloc(v42, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease(v11);
            }
          }
          else
          {
            if (v76)
            {
              v45 = specialized _ArrayBuffer._getElementSlowPath(_:)(v40[v39], v11);
            }
            else
            {
              if ((unint64_t)v44 >= *(_QWORD *)(v77 + 16))
                goto LABEL_67;
              v45 = *(_QWORD *)(v75 + 8 * v44);
              swift_retain();
            }
            v46 = *(_QWORD *)(v34 + 32);
            swift_retain();
            swift_bridgeObjectRetain(v46);
            a4 = sub_134514(v47, v45);
            swift_bridgeObjectRelease(v46);
            swift_release();
            if (*(_QWORD *)(a4 + 16))
            {
              v48 = *(_QWORD *)(v45 + 16);
              v49 = sub_34284(a7, a8, (uint64_t)&protocol conformance descriptor for ElementPaginationEntity<A>);
              v50 = a9(0);
              v51 = (_QWORD *)swift_allocObject(v50, 48);
              v51[2] = a4;
              v51[3] = v48;
              v51[4] = v79;
              v51[5] = v49;
              swift_beginAccess(v73, v80, 33, 0);
              swift_retain_n(v79, 2);
              v52 = v48;
              v34 = v79;
              sub_12FF80(&v81, v52);
              swift_endAccess(v80);
              v53 = swift_release();
              a4 = (uint64_t)a6;
              a5(v45, v51, v53);
              swift_release();
              v11 = v74;
              swift_release();
            }
            else
            {
              swift_bridgeObjectRelease(a4);
              if (qword_3B5740 != -1)
                swift_once(&qword_3B5740, sub_AABBC);
              v57 = type metadata accessor for Logger(0);
              sub_555F0(v57, (uint64_t)qword_3B9D18);
              swift_release();
            }
          }
          ++v39;
          if (v43 == v78)
            goto LABEL_18;
        }
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        if (a4 < 0)
          v58 = a4;
        else
          v58 = a4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a4);
        v17 = _CocoaArrayWrapper.endIndex.getter(v58);
        if (!v17)
          goto LABEL_75;
        goto LABEL_15;
      }
LABEL_18:
      swift_release();
      swift_bridgeObjectRelease(v67);
      v18 = v68;
      if (v68 == v64)
      {
        swift_bridgeObjectRelease(a1);
        return;
      }
    }
    v33 = a4 + 104 + 40 * v25++;
    while (*(_QWORD *)(v33 - 32) == v11)
    {
      v86.origin.x = x;
      v86.origin.y = y;
      v86.size.width = width;
      v86.size.height = height;
      v87 = CGRectUnion(v86, *(CGRect *)(v33 - 24));
      x = v87.origin.x;
      y = v87.origin.y;
      width = v87.size.width;
      height = v87.size.height;
      ++v25;
      v33 += 40;
      if (v24 == (Class)v25)
        goto LABEL_41;
    }
LABEL_40:
    v11 = 0;
    y = 0.0;
    width = 0.0;
    height = 0.0;
    goto LABEL_32;
  }
LABEL_75:
  swift_bridgeObjectRelease(a4);
}

void sub_11ADEC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), NSObject *a4, void (*a5)(uint64_t, _QWORD *, __n128), NSObject *a6)
{
  sub_11AECC(a1, a2, a3, a4, a5, a6, &qword_3B9090, type metadata accessor for HistoryPaginationEntity, (uint64_t (*)(_QWORD))type metadata accessor for HistoryPaginationEntityReference);
}

void sub_11AE24(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), NSObject *a4, void (*a5)(uint64_t, _QWORD *, __n128), NSObject *a6)
{
  sub_11AECC(a1, a2, a3, a4, a5, a6, &qword_3B90B8, type metadata accessor for AnchorPaginationEntity, (uint64_t (*)(_QWORD))type metadata accessor for AnchorPaginationEntityReference);
}

void sub_11AE5C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), NSObject *a4, void (*a5)(uint64_t, _QWORD *, __n128), NSObject *a6)
{
  sub_11AECC(a1, a2, a3, a4, a5, a6, &qword_3B9098, type metadata accessor for MediaElementPaginationEntity, (uint64_t (*)(_QWORD))type metadata accessor for MediaElementPaginationEntityReference);
}

void sub_11AE94(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), NSObject *a4, void (*a5)(uint64_t, _QWORD *, __n128), NSObject *a6)
{
  sub_11AECC(a1, a2, a3, a4, a5, a6, &qword_3B90A8, type metadata accessor for ExpandableContentPaginationEntity, (uint64_t (*)(_QWORD))type metadata accessor for ExpandableContentPaginationEntityReference);
}

void sub_11AECC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), NSObject *a4, void (*a5)(uint64_t, _QWORD *, __n128), NSObject *a6, unint64_t *a7, uint64_t (*a8)(uint64_t), uint64_t (*a9)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t i;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class isa;
  unint64_t v31;
  BOOL v32;
  CGFloat y;
  CGFloat x;
  CGFloat width;
  CGFloat height;
  Class v37;
  NSObject *v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t inited;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  int64_t v67;
  NSObject *v68;
  _QWORD *v70;
  unint64_t v71;
  int64_t v72;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[24];
  uint64_t v85;
  char v86[64];
  char v87[32];
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;

  v11 = a2;
  v66 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v16 = a2;
    else
      v16 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v12 = _CocoaArrayWrapper.endIndex.getter(v16);
    v78 = v11;
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a2);
    v78 = v11;
    if (v12)
    {
LABEL_3:
      if (v12 < 1)
        goto LABEL_86;
      v13 = v11;
      v14 = 0;
      v81 = v13 & 0xC000000000000001;
      do
      {
        if (v81)
        {
          v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v78);
        }
        else
        {
          v15 = *(_QWORD *)(v78 + 8 * v14 + 32);
          swift_retain();
        }
        ++v14;
        a3(v15);
        swift_release();
      }
      while (v12 != v14);
      v11 = v78;
      swift_bridgeObjectRelease(v78);
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease(v11);
  v81 = v11 & 0xC000000000000001;
LABEL_15:
  v65 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(a1 + 64);
  v67 = (unint64_t)(v17 + 63) >> 6;
  v20 = v11 & 0xFFFFFFFFFFFFFF8;
  v80 = v11 & 0xFFFFFFFFFFFFFF8;
  if (v11 < 0)
    v20 = v11;
  v64 = v20;
  v79 = v11 + 32;
  swift_bridgeObjectRetain(a1);
  for (i = 0; ; i = v72)
  {
    if (v19)
    {
      v22 = __clz(__rbit64(v19));
      v23 = (v19 - 1) & v19;
      v24 = v22 | (i << 6);
    }
    else
    {
      if (__OFADD__(i++, 1))
        goto LABEL_84;
      if (i >= v67)
      {
LABEL_80:
        swift_release();
        return;
      }
      v26 = *(_QWORD *)(v65 + 8 * i);
      if (!v26)
      {
        v27 = i + 1;
        if (i + 1 >= v67)
          goto LABEL_80;
        v26 = *(_QWORD *)(v65 + 8 * v27);
        if (!v26)
        {
          v27 = i + 2;
          if (i + 2 >= v67)
            goto LABEL_80;
          v26 = *(_QWORD *)(v65 + 8 * v27);
          if (!v26)
          {
            v27 = i + 3;
            if (i + 3 >= v67)
              goto LABEL_80;
            v26 = *(_QWORD *)(v65 + 8 * v27);
            if (!v26)
            {
              v27 = i + 4;
              if (i + 4 >= v67)
                goto LABEL_80;
              v26 = *(_QWORD *)(v65 + 8 * v27);
              if (!v26)
              {
                while (1)
                {
                  i = v27 + 1;
                  if (__OFADD__(v27, 1))
                    goto LABEL_85;
                  if (i >= v67)
                    goto LABEL_80;
                  v26 = *(_QWORD *)(v65 + 8 * i);
                  ++v27;
                  if (v26)
                    goto LABEL_35;
                }
              }
            }
          }
        }
        i = v27;
      }
LABEL_35:
      v23 = (v26 - 1) & v26;
      v24 = __clz(__rbit64(v26)) + (i << 6);
    }
    v28 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v24);
    v77 = v28 + 40;
    swift_beginAccess(v28 + 40, v87, 1, 0);
    v29 = *(_QWORD *)(v28 + 40);
    *(_QWORD *)(v28 + 40) = &_swiftEmptySetSingleton;
    swift_retain_n(v28, 2);
    swift_bridgeObjectRelease(v29);
    a4 = *(NSObject **)(v28 + 32);
    isa = a4[2].isa;
    v31 = isa != 0;
    v32 = isa == 0;
    v71 = v23;
    v72 = i;
    if (!isa)
      goto LABEL_88;
    x = *(double *)&a4[5].isa;
    y = *(double *)&a4[6].isa;
    width = *(double *)&a4[7].isa;
    height = *(double *)&a4[8].isa;
    if (isa == (Class)v31)
      goto LABEL_53;
    v37 = a4[4].isa;
    if ((unint64_t)isa <= v31)
      break;
    v38 = a4 + 4;
    swift_bridgeObjectRetain(a4);
    while (v32)
    {
      v39 = x;
LABEL_43:
      ++v31;
      v32 = 1;
      x = v39;
      if ((Class)v31 == isa)
        goto LABEL_87;
    }
    v39 = 0.0;
    if (v38[5 * v31].isa != v37)
      goto LABEL_51;
    v88.origin.x = x;
    v88.origin.y = y;
    v88.size.width = width;
    v88.size.height = height;
    v89 = CGRectUnion(v88, *(CGRect *)&v38[5 * v31 + 1].isa);
    x = v89.origin.x;
    y = v89.origin.y;
    width = v89.size.width;
    height = v89.size.height;
    if ((Class)(v31 + 1) != isa)
    {
      v40 = (uint64_t)&a4[5 * v31++ + 13];
      while (*(Class *)(v40 - 32) == v37)
      {
        v90.origin.x = x;
        v90.origin.y = y;
        v90.size.width = width;
        v90.size.height = height;
        v91 = CGRectUnion(v90, *(CGRect *)(v40 - 24));
        x = v91.origin.x;
        y = v91.origin.y;
        width = v91.size.width;
        height = v91.size.height;
        ++v31;
        v40 += 40;
        if (isa == (Class)v31)
          goto LABEL_52;
      }
LABEL_51:
      v37 = 0;
      y = 0.0;
      width = 0.0;
      height = 0.0;
      goto LABEL_43;
    }
LABEL_52:
    swift_bridgeObjectRelease(a4);
LABEL_53:
    swift_release();
    v41 = sub_319AC(&qword_3B6838);
    inited = swift_initStackObject(v41, v86);
    *(_OWORD *)(inited + 16) = xmmword_2E5F80;
    *(CGFloat *)(inited + 32) = x;
    *(CGFloat *)(inited + 40) = y;
    *(CGFloat *)(inited + 48) = width;
    *(CGFloat *)(inited + 56) = height;
    a4 = v68;
    v43 = sub_AD248(inited);
    swift_setDeallocating(inited);
    v44 = v78;
    v83 = v43[2];
    v70 = v43;
    if (v83)
    {
      if (v66)
      {
        swift_bridgeObjectRetain(v78);
        v45 = _CocoaArrayWrapper.endIndex.getter(v64);
        swift_bridgeObjectRelease(v78);
      }
      else
      {
        v45 = *(_QWORD *)(v80 + 16);
      }
      v46 = 0;
      v47 = v43 + 4;
      v82 = v28;
      while (1)
      {
        v50 = v46 + 1;
        if (__OFADD__(v46, 1))
          break;
        v51 = v47[v46];
        if (v51 >= v45 || v51 < 0)
        {
          if (qword_3B5740 != -1)
            swift_once(&qword_3B5740, sub_AABBC);
          v60 = type metadata accessor for Logger(0);
          sub_555F0(v60, (uint64_t)qword_3B9D18);
          swift_bridgeObjectRetain(v44);
          a4 = Logger.logObject.getter(v61);
          v62 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(a4, v62))
          {
            v48 = swift_slowAlloc(22, -1);
            *(_DWORD *)v48 = 134218240;
            *(_QWORD *)(v48 + 4) = v51;
            *(_WORD *)(v48 + 12) = 2048;
            *(_QWORD *)(v48 + 14) = v45;
            swift_bridgeObjectRelease(v44);
            _os_log_impl(&dword_0, a4, v62, "Aborting reference updating due to index %ld beyond pageCount %ld", (uint8_t *)v48, 0x16u);
            v49 = v48;
            v28 = v82;
            swift_slowDealloc(v49, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease(v44);
          }
        }
        else
        {
          if (v81)
          {
            v52 = specialized _ArrayBuffer._getElementSlowPath(_:)(v47[v46], v44);
          }
          else
          {
            if ((unint64_t)v51 >= *(_QWORD *)(v80 + 16))
              goto LABEL_82;
            v52 = *(_QWORD *)(v79 + 8 * v51);
            swift_retain();
          }
          v53 = *(_QWORD *)(v28 + 32);
          swift_retain();
          swift_bridgeObjectRetain(v53);
          a4 = sub_134514(v54, v52);
          swift_bridgeObjectRelease(v53);
          swift_release();
          if (a4[2].isa)
          {
            v55 = *(_QWORD *)(v52 + 16);
            v56 = sub_34284(a7, a8, (uint64_t)&protocol conformance descriptor for ElementPaginationEntity<A>);
            v57 = a9(0);
            v58 = (_QWORD *)swift_allocObject(v57, 48);
            v58[2] = a4;
            v58[3] = v55;
            v58[4] = v82;
            v58[5] = v56;
            v28 = v82;
            swift_beginAccess(v77, v84, 33, 0);
            swift_retain_n(v82, 2);
            sub_12FF80(&v85, v55);
            swift_endAccess(v84);
            v59 = swift_release();
            a4 = a6;
            a5(v52, v58, v59);
            swift_release();
            v44 = v78;
            swift_release();
          }
          else
          {
            swift_bridgeObjectRelease(a4);
            if (qword_3B5740 != -1)
              swift_once(&qword_3B5740, sub_AABBC);
            v63 = type metadata accessor for Logger(0);
            sub_555F0(v63, (uint64_t)qword_3B9D18);
            swift_release();
          }
        }
        ++v46;
        if (v50 == v83)
          goto LABEL_20;
      }
      __break(1u);
LABEL_82:
      __break(1u);
      break;
    }
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease(v70);
    v19 = v71;
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  swift_bridgeObjectRelease(a4);
LABEL_88:
  __break(1u);
}

void sub_11B670(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, "be_fontFamiliesHavingFailedRegistration");
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *a2 = v4;
}

void sub_11B6C8(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_1D34D0(v3);
  sub_132874(a1);
  *v1 = v3;
}

uint64_t sub_11B748(uint64_t *a1)
{
  uint64_t v2;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
  *a1 = v2;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v2 < 0 || (v2 & 0x4000000000000000) != 0)
  {
    v2 = sub_E3A24(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  v7[0] = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  v7[1] = v4;
  sub_F83EC(v7);
  return specialized Array._endMutation()(v5);
}

void sub_11B7CC(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_E3A3C(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_132F64(v4);
  *a1 = v2;
}

uint64_t sub_11B838()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3BD350);
  sub_555F0(v0, (uint64_t)qword_3BD350);
  if (qword_3B56B8 != -1)
    swift_once(&qword_3B56B8, sub_5EFF4);
  return Logger.init(_:)((id)qword_3CEEF8);
}

uint64_t sub_11B8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

double sub_11B904(__int128 *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  double result;
  _BYTE v7[24];

  v3 = *a2;
  swift_beginAccess(*a2 + 32, v7, 1, 0);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *a1;
  *(_OWORD *)(v3 + 32) = *a1;
  swift_unknownObjectRetain(v5);
  *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_11B964@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  v5 = swift_getKeyPath(&unk_2ED608);
  static Published.subscript.getter(&v7, v3, KeyPath);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_11B9E0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  v5 = swift_getKeyPath(&unk_2ED608);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_11BA50()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  v2 = swift_getKeyPath(&unk_2ED608);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_11BAC8(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  v4 = swift_getKeyPath(&unk_2ED608);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*sub_11BB34(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2ED608);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_3A1B8;
}

uint64_t sub_11BBAC(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__isPaginationComplete, v3, 33, 0);
  v1 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_11BC10(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v4 = sub_319AC(&qword_3B8E20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v17[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12(&v17[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__isPaginationComplete, v17, 33, 0);
  v14 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.setter(v7, v14);
  swift_endAccess(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t sub_11BD20()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__isPaginationComplete, v3, 33, 0);
  v1 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_11BD80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = sub_319AC(&qword_3B8E20);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__isPaginationComplete, v11, 33, 0);
  v8 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_11BE54(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3B8E20);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__isPaginationComplete;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC((uint64_t *)&unk_3B8E70);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_3A5BC;
}

uint64_t sub_11BF1C()
{
  return sub_11BF54((uint64_t)&OBJC_IVAR____TtC8BookEPUB17PaginatingService_highlightsChangedSubject, &qword_3BD380, &qword_3BD388);
}

uint64_t sub_11BF38()
{
  return sub_11BF54((uint64_t)&OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookmarksChangedSubject, (uint64_t *)&unk_3B8EA0, (unint64_t *)&qword_3B8A10);
}

uint64_t sub_11BF54(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_319AC(a2);
  v6 = sub_3DCC0(a3, a2, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v5, v6);
}

uint64_t sub_11BFC0()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity);
  if (result)
    return swift_retain(result);
  __break(1u);
  return result;
}

uint64_t sub_11BFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtC8BookEPUB17PaginatingService____lazy_storage___bookPaginationEntitySubject;
  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService____lazy_storage___bookPaginationEntitySubject);
  if (result)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService____lazy_storage___bookPaginationEntitySubject);
LABEL_5:
    swift_retain();
    return v3;
  }
  v4 = v0;
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity);
  if (v5)
  {
    v7 = v5;
    v6 = sub_319AC(&qword_3BD3A0);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48));
    swift_retain();
    v3 = CurrentValueSubject.init(_:)(&v7);
    *(_QWORD *)(v4 + v1) = v3;
    swift_retain();
    swift_release();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_11C08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_11BFD8();
  v0 = sub_319AC(&qword_3BD3A0);
  v1 = sub_3DCC0(&qword_3BD3A8, &qword_3BD3A0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v2 = Publisher.eraseToAnyPublisher()(v0, v1);
  swift_release();
  return v2;
}

double sub_11C10C(void **a1, uint64_t a2, uint64_t a3)
{
  Swift::OpaquePointer v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  WKWebView v8;
  Class isa;
  uint64_t v10;
  _BYTE v11[24];

  v4._rawValue = *a1;
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0, 0);
  if (swift_weakLoadStrong(v5))
  {
    v7 = a3 + 16;
    swift_beginAccess(v7, &v10, 0, 0);
    v8.super.super.super.isa = (Class)swift_unknownObjectWeakLoadStrong(v7);
    if (v8.super.super.super.isa)
    {
      isa = v8.super.super.super.isa;
      PaginatingService.fontFamiliesFailedToRegister(_:forWebView:)(v4, v8);
      swift_release();

    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

Swift::Void __swiftcall PaginatingService.fontFamiliesFailedToRegister(_:forWebView:)(Swift::OpaquePointer _, WKWebView forWebView)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20[24];
  void *v21;

  v3 = v2;
  swift_bridgeObjectRetain(_._rawValue);
  v7 = sub_1351E8(v6);
  v8 = -[objc_class be_identifier](forWebView.super.super.super.isa, "be_identifier", swift_bridgeObjectRelease(_._rawValue).n128_f64[0]);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_fontsFailedPerWebView);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_fontsFailedPerWebView, v20, 0, 0);
  v13 = *v12;
  if (*(_QWORD *)(*v12 + 16))
  {
    swift_bridgeObjectRetain(*v12);
    v14 = sub_3B8A0(v9, v11);
    if ((v15 & 1) != 0)
    {
      v16 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v14);
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v13);
      goto LABEL_7;
    }
    swift_bridgeObjectRelease(v11);
    v17 = v13;
  }
  else
  {
    v17 = v11;
  }
  swift_bridgeObjectRelease(v17);
  v16 = &_swiftEmptySetSingleton;
LABEL_7:
  v21 = v16;
  swift_bridgeObjectRetain(v16);
  sub_13541C(v7, (uint64_t)v16);
  v19 = v18;
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v7);
  __asm { BR              X10 }
}

void sub_11C2F4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[56];
  uint64_t v15;

  swift_bridgeObjectRetain(v3);
  sub_11A08C(v5);
  sub_135540(v3, v0, 0);
  sub_135540(v3, v0, 0);
  v6 = objc_msgSend(v2, *(SEL *)(v4 + 3280));
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10 = v15;
  swift_beginAccess(v1, v14, 33, 0);
  swift_bridgeObjectRetain(v10);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v13 = *v1;
  *v1 = 0x8000000000000000;
  sub_17E2FC(v10, v7, v9, isUniquelyReferenced_nonNull_native);
  v12 = *v1;
  *v1 = v13;
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease(v12);
  swift_endAccess(v14);
  sub_129E5C();
  swift_bridgeObjectRelease(v15);
}

uint64_t sub_11C480()
{
  uint64_t v0;

  sub_52128(v0 + 16, (uint64_t *)&unk_3B8E28);
  sub_52128(v0 + 56, (uint64_t *)&unk_3B8E28);
  sub_52128(v0 + 96, (uint64_t *)&unk_3B8E28);
  return swift_deallocClassInstance(v0, 136, 7);
}

_QWORD *PaginatingService.__allocating_init(bookProvider:annotationProviderService:contentHostEnvironmentProvider:contentLayout:stylesheetProvider:historyProvider:paginationCache:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, _UNKNOWN **a12)
{
  uint64_t v12;
  _QWORD *v18;

  swift_allocObject(v12, *(unsigned int *)(v12 + 48));
  v18 = sub_135588(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  swift_release();
  swift_unknownObjectRelease(a7);
  swift_unknownObjectRelease(a5);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a11);
  return v18;
}

_QWORD *PaginatingService.init(bookProvider:annotationProviderService:contentHostEnvironmentProvider:contentLayout:stylesheetProvider:historyProvider:paginationCache:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, _UNKNOWN **a12)
{
  _QWORD *v16;

  v16 = sub_135588(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a5);
  swift_unknownObjectRelease(a7);
  swift_release();
  swift_unknownObjectRelease(a11);
  return v16;
}

uint64_t sub_11C63C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, __n128);
  __n128 v53;
  uint64_t v54;
  void *v55;
  void *v56;
  Swift::String v57;
  uint64_t result;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  char v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _BYTE v78[24];
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;

  v2 = v1;
  v60 = *a1;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  v5 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v3 + 8);
  ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v5)(v79, ObjectType, v3);
  swift_beginAccess(v1 + 32, v78, 0, 0);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  v62 = v81;
  v63 = v80;
  sub_472D0(v79, v80);
  v8 = swift_getObjectType(v6);
  v9 = *(double (**)(uint64_t, uint64_t, __n128))(v7 + 48);
  v10 = swift_unknownObjectRetain(v6);
  v11 = v9(v8, v7, v10);
  v13 = v12;
  v14 = (*(double (**)(uint64_t, uint64_t))(v7 + 176))(v8, v7);
  v15 = (*(double (**)(uint64_t, uint64_t))(v7 + 64))(v8, v7);
  v64 = v8;
  v65 = v6;
  v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 120))(v8, v7);
  v16 = *(_QWORD *)(v2 + 32);
  v17 = *(_QWORD *)(v2 + 40);
  v18 = swift_getObjectType(v16);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v17 + 24);
  v20 = swift_unknownObjectRetain(v16);
  v21 = v19(v18, v17, v20);
  v22 = swift_unknownObjectRelease(v16);
  v5(&v73, ObjectType, v3, v22);
  v23 = v75;
  sub_472D0(&v73, v75);
  v24 = (*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v23 + 1) + 128))(v23, *((_QWORD *)&v23 + 1));
  sub_FD230(v21, v24 & 1, (char *)&v67);
  sub_34488(&v73);
  v25 = *(_QWORD *)(v2 + 32);
  v26 = *(_QWORD *)(v2 + 40);
  v27 = swift_getObjectType(v25);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 24);
  v29 = swift_unknownObjectRetain(v25);
  v30 = v28(v27, v26, v29);
  swift_unknownObjectRelease(v25);
  if ((unint64_t)(v30 - 2) < 2)
  {
    v31 = 0;
LABEL_5:
    v32 = v65;
    goto LABEL_12;
  }
  if (v30 == 1)
  {
    v31 = 1;
    goto LABEL_5;
  }
  v32 = v65;
  if (v30)
  {
    type metadata accessor for BookLayoutMode(0);
    v73 = v30;
    result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v59, &v73, v59, &type metadata for UInt);
    __break(1u);
    return result;
  }
  if (qword_3B56F0 != -1)
    swift_once(&qword_3B56F0, sub_8A4D8);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_555F0(v33, (uint64_t)qword_3CEFD0);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.error.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    swift_slowDealloc(v37, -1, -1);
  }

  v31 = 1;
LABEL_12:
  LOBYTE(v73) = v31;
  v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 184))(v64, v7);
  v40 = v39;
  sub_1D60CC(v61, (unsigned __int8 *)&v67, (unsigned __int8 *)&v73, v38, v39, v63, v62, v11, v13, ceil(v14 + v15));
  v42 = v41;
  swift_bridgeObjectRelease(v40);
  v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFonts);
  v44 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v7 + 160);
  v45 = swift_bridgeObjectRetain(v43);
  v44(&v73, v64, v7, v45);
  v67 = v73;
  v68 = BYTE2(v73);
  v66 = v74;
  v69 = v74;
  v70 = v75;
  v71 = v76;
  v72 = v77;
  v46 = BookThemeEntity.fontFamily.getter();
  v48 = v47;
  swift_bridgeObjectRelease(v66);
  LOBYTE(v46) = sub_1B2050(v46, v48, v43);
  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v48);
  if ((v46 & 1) != 0)
  {
    v49 = *(_QWORD *)(v2 + 32);
    v50 = *(_QWORD *)(v2 + 40);
    v51 = swift_getObjectType(v49);
    v52 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v50 + 184);
    v53 = swift_unknownObjectRetain(v49);
    v54 = v52(v51, v50, v53);
    v56 = v55;
    swift_unknownObjectRelease(v49);
    v57._countAndFlagsBits = v54;
    v57._object = v56;
    PaginatingService.invalidateCacheResults(forKey:)(v57);
    swift_bridgeObjectRelease(v56);
  }
  else
  {
    PaginatingService.markValidCacheResultsForCurrentKey()();
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_started) == 1)
  {
    LOBYTE(v73) = v60;
    sub_123240((char *)&v73);
  }
  sub_E7364();
  swift_unknownObjectRelease(v32);
  sub_34488(v79);
  return v42;
}

void sub_11CAC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE v26[32];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v1 = v0;
  v2 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity);
  if (!v3)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  swift_beginAccess(v3 + 16, v30, 0, 0);
  if (*(_BYTE *)(v3 + 16) == 1)
  {
    KeyPath = swift_getKeyPath(&unk_2ED5E0);
    swift_getKeyPath(&unk_2ED608);
    static Published.subscript.getter(v27, v1, KeyPath);
    swift_release();
    swift_release();
    if ((v27[0] & 1) == 0)
    {
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v5 = type metadata accessor for Logger(0);
      v6 = sub_555F0(v5, (uint64_t)qword_3BD350);
      v7 = Logger.logObject.getter(v6);
      v8 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_0, v7, v8, "Pagination completed.  Updating is pagination complete.", v9, 2u);
        swift_slowDealloc(v9, -1, -1);
      }

      v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
      ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 8))(v27, ObjectType, v10);
      v12 = v28;
      v13 = v29;
      sub_472D0(v27, v28);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 264))(v12, v13);
      sub_34488(v27);
      swift_retain();
      sub_134F80(v14, v1);
      v16 = v15;
      swift_release();
      swift_bridgeObjectRelease(v14);
      v17 = *(_QWORD *)(v1 + v2);
      if (v17)
      {
        swift_beginAccess(v17 + 48, v27, 1, 0);
        v18 = *(_QWORD *)(v17 + 48);
        *(_QWORD *)(v17 + 48) = v16;
        swift_retain();
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRelease(v18);
        swift_beginAccess(v17 + 48, v26, 33, 0);
        sub_11B748((uint64_t *)(v17 + 48));
        swift_endAccess(v26);
        swift_release();
        swift_bridgeObjectRelease(v16);
        v19 = swift_getKeyPath(&unk_2ED5E0);
        v20 = swift_getKeyPath(&unk_2ED608);
        v26[0] = 1;
        swift_retain();
        static Published.subscript.setter(v26, v1, v19, v20);
        return;
      }
      goto LABEL_17;
    }
  }
  else
  {
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_555F0(v21, (uint64_t)qword_3BD350);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "Pagination currently not complete.", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

  }
}

uint64_t PaginatingService.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationQueue;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationQueue), "cancelAllOperations");
  v3 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
  if (v4)
    objc_msgSend(v4, "removeFromSuperview");
  v5 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostViewFrameObservation;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostViewFrameObservation);
  if (v6)
  {
    v7 = v6;
    dispatch thunk of NSKeyValueObservation.invalidate()();

  }
  sub_47418(v1 + 16);
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 32));
  v8 = v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__isPaginationComplete;
  v9 = sub_319AC((uint64_t *)&unk_3B8E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_unknownObjectWeakDestroy(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostView);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_52128(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFontsObservationToken, (uint64_t *)&unk_3B8E28);

  swift_bridgeObjectRelease(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginatingWebViewCreationCompletions));

  swift_unknownObjectRelease(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  swift_unknownObjectRelease(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache));
  swift_release();
  sub_34488((_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_historyProvider));
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFonts));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_fontsFailedPerWebView));
  return v1;
}

uint64_t PaginatingService.__deallocating_deinit()
{
  uint64_t v0;

  PaginatingService.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

double sub_11D010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  __n128 v50;
  double result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[24];
  id v59[5];
  __int128 v60;
  __int128 v61;
  void *v62;

  v1 = v0;
  v2 = sub_319AC(&qword_3BAEF0);
  v56 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v55 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_319AC((uint64_t *)&unk_3B80B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_319AC(&qword_3BD930);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_subscriptions;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_subscriptions);
  v57 = v0 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v14 = Strong;
    v54 = v2;
    v15 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong);
    v53 = v11;
    v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 32);
    swift_retain();
    v18 = v17(ObjectType, v15);
    swift_unknownObjectRelease(v14);
    *(_QWORD *)&v60 = v18;
    v19 = sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
    v59[0] = (id)static OS_dispatch_queue.main.getter(v20);
    v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
    v22 = sub_319AC(&qword_3BD938);
    v23 = sub_3DCC0(&qword_3BD940, &qword_3BD938, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v24 = sub_49FA8();
    v25 = v22;
    v26 = v23;
    v11 = v53;
    v2 = v54;
    Publisher.receive<A>(on:options:)(v59, v6, v25, v19, v26, v24);
    sub_52128((uint64_t)v6, (uint64_t *)&unk_3B80B0);

    swift_release();
    v27 = swift_allocObject(&unk_3826B0, 24);
    swift_weakInit(v27 + 16, v1);
    v28 = sub_3DCC0(&qword_3BD948, &qword_3BD930, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v29 = Publisher<>.sink(receiveValue:)(sub_139784, v27, v7, v28);
    v30 = swift_release();
    v31.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v30);
    *((_QWORD *)&v61 + 1) = type metadata accessor for AnyCancellable(0, v31);
    v62 = &protocol witness table for AnyCancellable;
    *(_QWORD *)&v60 = v29;
  }
  else
  {
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
    swift_retain();
  }
  sub_13973C((uint64_t)&v60, (uint64_t)v59);
  swift_beginAccess(v12 + 16, v58, 33, 0);
  sub_9390C((uint64_t)v59, v12 + 16);
  swift_endAccess(v58);
  swift_release();
  v32 = *(_QWORD *)(v1 + v11);
  v33 = swift_unknownObjectWeakLoadStrong(v57);
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)(v1 + 24);
    v36 = swift_getObjectType(v33);
    v37 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 40);
    swift_retain();
    v38 = v37(v36, v35);
    swift_unknownObjectRelease(v34);
    *(_QWORD *)&v60 = v38;
    v39 = sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
    v59[0] = (id)static OS_dispatch_queue.main.getter(v40);
    v41 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v6, 1, 1, v41);
    v42 = sub_319AC(&qword_3BAEF8);
    v43 = sub_3DCC0(&qword_3BAF00, &qword_3BAEF8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v44 = sub_49FA8();
    v45 = v55;
    Publisher.receive<A>(on:options:)(v59, v6, v42, v39, v43, v44);
    sub_52128((uint64_t)v6, (uint64_t *)&unk_3B80B0);

    swift_release();
    v46 = swift_allocObject(&unk_3826B0, 24);
    swift_weakInit(v46 + 16, v1);
    v47 = sub_3DCC0(&qword_3BAF08, &qword_3BAEF0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v48 = Publisher<>.sink(receiveValue:)(sub_13978C, v46, v2, v47);
    v49 = swift_release();
    v50.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v56 + 8))(v45, v2, v49);
    *((_QWORD *)&v61 + 1) = type metadata accessor for AnyCancellable(0, v50);
    v62 = &protocol witness table for AnyCancellable;
    *(_QWORD *)&v60 = v48;
  }
  else
  {
    v62 = 0;
    v60 = 0u;
    v61 = 0u;
    swift_retain();
  }
  sub_13973C((uint64_t)&v60, (uint64_t)v59);
  swift_beginAccess(v32 + 56, v58, 33, 0);
  sub_9390C((uint64_t)v59, v32 + 56);
  swift_endAccess(v58);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_11D518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *(unsigned __int8 *)(a1 + 24);
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_11D5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *(unsigned __int8 *)(a1 + 24);
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
    __asm { BR              X9 }
  return result;
}

uint64_t sub_11D834(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  _BYTE v15[24];

  if ((result & 1) != 0)
  {
    v10 = a2 + 16;
    swift_beginAccess(a2 + 16, v15, 0, 0);
    result = swift_weakLoadStrong(v10);
    if (result)
    {
      v11 = result;
      v12 = *(_QWORD *)(result + OBJC_IVAR____TtC8BookEPUB17PaginatingService_highlightsChangedSubject);
      swift_retain(v12);
      swift_release(v11);
      v13[0] = a3;
      v13[1] = a4;
      v13[2] = a5;
      v14 = a6;
      PassthroughSubject.send(_:)(v13);
      return swift_release(v12);
    }
  }
  return result;
}

double sub_11D8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  __n128 v20;
  double result;
  _BYTE v23[24];
  _BYTE v24[40];
  _QWORD v25[5];

  v3 = v2;
  v6 = sub_319AC(&qword_3BD910);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_subscriptions);
  ObjectType = swift_getObjectType(a1);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 112);
  swift_retain();
  v25[0] = v12(ObjectType, a2);
  v13 = sub_319AC((uint64_t *)&unk_3BE7D0);
  v14 = sub_3DCC0(&qword_3BD918, (uint64_t *)&unk_3BE7D0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v15 = sub_1396F0();
  Publisher<>.removeDuplicates()(v13, v14, v15);
  swift_release();
  v16 = swift_allocObject(&unk_3826B0, 24);
  swift_weakInit(v16 + 16, v3);
  v17 = sub_3DCC0(&qword_3BD928, &qword_3BD910, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v18 = Publisher<>.sink(receiveValue:)(sub_139734, v16, v6, v17);
  v19 = swift_release();
  v20.n128_f64[0] = (*(double (**)(_BYTE *, uint64_t, __n128))(v7 + 8))(v9, v6, v19);
  v25[3] = type metadata accessor for AnyCancellable(0, v20);
  v25[4] = &protocol witness table for AnyCancellable;
  v25[0] = v18;
  sub_13973C((uint64_t)v25, (uint64_t)v24);
  swift_beginAccess(v10 + 96, v23, 33, 0);
  sub_9390C((uint64_t)v24, v10 + 96);
  swift_endAccess(v23);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_11DAC0(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE v15[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = *(void **)(Strong + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
    if (v6 && v2 == 1)
    {
      v7 = v6;
      if (objc_msgSend(v7, "be_requiresReload"))
      {
        v8 = objc_msgSend(v7, "be_navigationHandler");
        if (v8)
        {
          v9 = v8;
          if (qword_3B57A0 != -1)
            swift_once(&qword_3B57A0, sub_11B838);
          v10 = type metadata accessor for Logger(0);
          v11 = sub_555F0(v10, (uint64_t)qword_3BD350);
          v12 = Logger.logObject.getter(v11);
          v13 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v12, v13))
          {
            v14 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v14 = 0;
            _os_log_impl(&dword_0, v12, v13, "Paginating service resume from background and webView requires reload.  Attempting reload.", v14, 2u);
            swift_slowDealloc(v14, -1, -1);
          }

          objc_msgSend(v9, "attemptReload");
        }
      }
      swift_release();

    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_11DC44(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  id v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t (**v16)(_QWORD, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
  if (!v2)
    return;
  v3 = v1;
  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  swift_getKeyPath(&unk_2ED608);
  v6 = v2;
  static Published.subscript.getter(&v31, v3, KeyPath);
  swift_release();
  swift_release();
  if (v31 == 1)
  {
    v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 8))(&v27, ObjectType, v7);
    v9 = v29;
    v10 = v30;
    sub_472D0(&v27, v29);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v10 + 336))(&v25, a1, v9, v10);
    if (v26)
    {
      sub_3F1CC(&v25, (uint64_t)&v31);
      sub_34488(&v27);
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v11 = type metadata accessor for Logger(0);
      v12 = sub_555F0(v11, (uint64_t)qword_3BD350);
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v15 = 134217984;
        v27 = a1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v15 + 4);
        _os_log_impl(&dword_0, v13, v14, "Bookmark Added. Attempting repagination for document ordinal:%ld.", v15, 0xCu);
        swift_slowDealloc(v15, -1, -1);
      }

      swift_beginAccess(v3 + 32, &v27, 0, 0);
      v17 = *(_QWORD *)(v3 + 32);
      v16 = *(uint64_t (***)(_QWORD, _QWORD))(v3 + 40);
      v18 = swift_allocObject(&unk_3826B0, 24);
      swift_weakInit(v18 + 16, v3);
      v19 = swift_allocObject(&unk_382960, 32);
      *(_QWORD *)(v19 + 16) = a1;
      *(_QWORD *)(v19 + 24) = v18;
      swift_unknownObjectRetain(v17);
      swift_retain();
      sub_11E168(&v31, v6, v17, v16, 0, 0, (uint64_t)sub_13707C, v19);
      swift_release();
      swift_unknownObjectRelease(v17);

      sub_34488(&v31);
      swift_release();
      return;
    }
    sub_52128((uint64_t)&v25, &qword_3BD428);
    sub_34488(&v27);
  }
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_555F0(v20, (uint64_t)qword_3BD350);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v24 = 134217984;
    v31 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v24 + 4);
    _os_log_impl(&dword_0, v22, v23, "Bookmark not added. Pagination not complete or document missing at ordinal: %ld", v24, 0xCu);
    swift_slowDealloc(v24, -1, -1);
  }

}

double sub_11DFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a3 + 16;
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_555F0(v5, (uint64_t)qword_3BD350);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v13 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v9 + 4);
    _os_log_impl(&dword_0, v7, v8, "Bookmark Added. Repaginated document ordinal:%ld.", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  swift_beginAccess(v4, &v13, 0, 0);
  if (swift_weakLoadStrong(v4))
  {
    swift_retain();
    swift_release();
    v11 = sub_319AC((uint64_t *)&unk_3B8EA0);
    v12 = sub_3DCC0((unint64_t *)&unk_3B8CC0, (uint64_t *)&unk_3B8EA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v11, v12);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_11E168(_QWORD *a1, void *a2, uint64_t a3, uint64_t (**a4)(_QWORD, _QWORD), int a5, NSObject *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  id ObjectType;
  uint64_t (**v19)(_QWORD, _QWORD);
  uint64_t (*v20)(id, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint8_t *v33;
  uint64_t (*v34)(id, _QWORD);
  uint64_t v35;
  void *v36;
  double (*v37)();
  uint64_t (*v38)(void *, double (*)());
  void *v39;
  double (*v40)();
  uint64_t v41;
  uint8_t *v42;
  uint64_t (*v43)(id, uint64_t (**)(_QWORD, _QWORD), __n128);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, __n128);
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t (**v63)(_QWORD, _QWORD);
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  char *v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  int v72;
  uint64_t v73;
  double (*v74)();
  void *v75;
  uint64_t (*v76)(void *, double (*)());
  uint64_t v77;
  double v78;
  id v79;
  uint64_t v80;
  void *v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  void *v98;
  double (*v99)();
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint64_t (*v106)(id, uint64_t (**)(_QWORD, _QWORD), __n128);
  uint64_t v107;
  uint64_t v108;
  void *v109;
  double (*v110)();
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t KeyPath;
  uint64_t v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  id v121;
  double (*v122)();
  void *v123;
  uint64_t (*v124)(void *, double (*)());
  void *v125;
  double (*v126)();
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (**v137)(_QWORD, _QWORD);
  uint64_t v138;
  uint64_t v139;
  void *v140;
  char *v141;
  id v142;
  char *v143;
  _BYTE v144[16];
  uint64_t v145;
  uint64_t v146;
  uint8_t *v147;
  uint64_t v148;
  int v149;
  os_log_t v150;
  void *v151;
  id v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (**v160)(_QWORD, _QWORD);
  __int128 aBlock;
  uint64_t (*v162)(uint64_t);
  void *v163;
  double (*v164)();
  uint64_t v165;
  uint64_t v166[3];
  uint64_t v167;
  uint64_t v168;
  char v169[24];
  char v170[32];

  v155 = a8;
  v154 = a7;
  v150 = a6;
  v149 = a5;
  if (a3)
  {
    v160 = a4;
    v12 = a3;
  }
  else
  {
    swift_beginAccess(v8 + 32, v170, 0, 0);
    v12 = *(_QWORD *)(v8 + 32);
    v160 = *(uint64_t (***)(_QWORD, _QWORD))(v8 + 40);
    swift_unknownObjectRetain(v12);
  }
  v151 = a2;
  v159 = v8;
  v157 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  if (!*(_QWORD *)(v8 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
  {
    __break(1u);
    goto LABEL_47;
  }
  v13 = a1[3];
  v14 = a1[4];
  sub_472D0(a1, v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 16);
  swift_unknownObjectRetain(a3);
  swift_retain();
  v16 = v15(v13, v14);
  v17 = BookPaginationEntity.document(for:)(v16);
  swift_release();
  ObjectType = (id)swift_getObjectType(v12);
  v19 = v160;
  v20 = (uint64_t (*)(id, _QWORD))v160[23];
  v21 = v20(ObjectType, v160);
  v156 = v17;
  v23 = v159;
  v153 = v22;
  v148 = v21;
  v152 = ObjectType;
  if (v17)
  {
    v24 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_configurationKey);
    v25 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_configurationKey + 8);
    v26 = v21 == v24 && v22 == v25;
    if (!v26 && (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v24, v25, 0) & 1) == 0)
    {
      v27 = qword_3B57A0;
      swift_retain();
      if (v27 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v28 = type metadata accessor for Logger(0);
      sub_555F0(v28, (uint64_t)qword_3BD350);
      v29 = sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.error.getter(v30);
      v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        LODWORD(v158) = v32;
        v33 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v33 = 134349056;
        v147 = v33 + 4;
        v34 = v20;
        v35 = v12;
        v36 = v163;
        v37 = v164;
        sub_472D0(&aBlock, (uint64_t)v163);
        v38 = (uint64_t (*)(void *, double (*)()))*((_QWORD *)v37 + 2);
        v39 = v36;
        v23 = v159;
        v19 = v160;
        v40 = v37;
        v12 = v35;
        v20 = v34;
        v41 = v38(v39, v40);
        sub_34488(&aBlock);
        *(_QWORD *)&aBlock = v41;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v33 + 4);
        _os_log_impl(&dword_0, v30, (os_log_type_t)v158, "Mismatch in existing #staleCache pagination document for ordinal %{public}ld", v33, 0xCu);
        v42 = v33;
        ObjectType = v152;
        swift_slowDealloc(v42, -1, -1);

        swift_release();
      }
      else
      {
        sub_34488(&aBlock);
        swift_release();

      }
    }
  }
  v158 = v12;
  v43 = (uint64_t (*)(id, uint64_t (**)(_QWORD, _QWORD), __n128))v20;
  v44 = v20(ObjectType, v19);
  v46 = v45;
  swift_beginAccess(v23 + 32, v169, 0, 0);
  v48 = *(_QWORD *)(v23 + 32);
  v47 = *(_QWORD *)(v23 + 40);
  v49 = swift_getObjectType(v48);
  v50 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v47 + 184);
  v51 = swift_unknownObjectRetain(v48);
  v52 = v50(v49, v47, v51);
  v54 = v53;
  swift_unknownObjectRelease(v48);
  if (v44 == v52 && v46 == v54)
  {
    swift_bridgeObjectRelease_n(v46, 2);
  }
  else
  {
    v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, v52, v54, 0);
    swift_bridgeObjectRelease(v54);
    swift_bridgeObjectRelease(v46);
    if ((v55 & 1) == 0)
    {
      swift_bridgeObjectRelease(v153);
      v101 = v158;
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v102 = type metadata accessor for Logger(0);
      sub_555F0(v102, (uint64_t)qword_3BD350);
      sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
      v103 = swift_unknownObjectRetain_n(v158, 2);
      v104 = Logger.logObject.getter(v103);
      v105 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v104, v105))
      {
        v106 = v43;
        v107 = swift_slowAlloc(22, -1);
        v108 = swift_slowAlloc(32, -1);
        v166[0] = v108;
        *(_DWORD *)v107 = 134218242;
        v109 = v163;
        v110 = v164;
        sub_472D0(&aBlock, (uint64_t)v163);
        v111 = (*((uint64_t (**)(void *, double (*)()))v110 + 2))(v109, v110);
        sub_34488(&aBlock);
        v167 = v111;
        v112 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v107 + 4);
        *(_WORD *)(v107 + 12) = 2080;
        v113 = v106(v152, v160, v112);
        v115 = v114;
        v167 = sub_33524(v113, v114, v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v107 + 14);
        swift_bridgeObjectRelease(v115);
        swift_unknownObjectRelease_n(v101, 2);
        _os_log_impl(&dword_0, v104, v105, "Skipping pagination request for ordinal: %ld because of stale #contentConfig: %s", (uint8_t *)v107, 0x16u);
        swift_arrayDestroy(v108, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v108, -1, -1);
        swift_slowDealloc(v107, -1, -1);
      }
      else
      {
        sub_34488(&aBlock);
        swift_unknownObjectRelease_n(v158, 2);
      }

      v129 = type metadata accessor for MainActor(0);
      __chkstk_darwin(v129);
      v145 = v154;
      v146 = v155;
      sub_12A8FC((void (*)(uint64_t *__return_ptr))sub_137084, (uint64_t)v144, (uint64_t)"BookEPUB/PaginatingService.swift", 32, 2, 996);
      swift_unknownObjectRelease(v101);
      goto LABEL_42;
    }
  }
  v56 = v158;
  v57 = v159;
  if (!*(_QWORD *)(v159 + v157))
  {
LABEL_47:
    __break(1u);
    return;
  }
  v58 = a1[3];
  v59 = a1[4];
  sub_472D0(a1, v58);
  v60 = *(uint64_t (**)(uint64_t, uint64_t))(v59 + 16);
  swift_retain();
  v61 = v60(v58, v59);
  v62 = BookPaginationEntity.document(for:)(v61);
  swift_release();
  v157 = v62;
  if (!v62)
  {
    swift_bridgeObjectRelease(v153);
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v93 = type metadata accessor for Logger(0);
    sub_555F0(v93, (uint64_t)qword_3BD350);
    v94 = sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
    v95 = Logger.logObject.getter(v94);
    v96 = static os_log_type_t.error.getter(v95);
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v97 = 134217984;
      v98 = v163;
      v99 = v164;
      sub_472D0(&aBlock, (uint64_t)v163);
      v100 = (*((uint64_t (**)(void *, double (*)()))v99 + 2))(v98, v99);
      sub_34488(&aBlock);
      *(_QWORD *)&aBlock = v100;
      v56 = v158;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v97 + 4);
      _os_log_impl(&dword_0, v95, v96, "Failed to get corresponding pagination document for document (%ld -- skipping pagination", v97, 0xCu);
      swift_slowDealloc(v97, -1, -1);
    }
    else
    {
      sub_34488(&aBlock);
    }

    v128 = type metadata accessor for MainActor(0);
    __chkstk_darwin(v128);
    v145 = v154;
    v146 = v155;
    sub_12A8FC((void (*)(uint64_t *__return_ptr))sub_137084, (uint64_t)v144, (uint64_t)"BookEPUB/PaginatingService.swift", 32, 2, 1002);
    swift_unknownObjectRelease(v56);
LABEL_42:
    swift_release();
    return;
  }
  v63 = v160;
  v152 = sub_9A8B8(v158, (uint64_t)v152, (uint64_t)v160);
  objc_msgSend(v152, "applyVariableStylesheetsToWebView:", v151);
  v64 = (void *)sub_126A44(v151, v158, v160, a1, v149 & 1, 0, (uint64_t)v150);
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v65 = type metadata accessor for Logger(0);
  sub_555F0(v65, (uint64_t)qword_3BD350);
  sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
  v66 = v64;
  v67 = v151;
  v68 = (char *)v66;
  v69 = v67;
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.debug.getter();
  v72 = v71;
  if (os_log_type_enabled(v70, v71))
  {
    v73 = swift_slowAlloc(42, -1);
    v151 = (void *)swift_slowAlloc(96, -1);
    v166[0] = (uint64_t)v151;
    *(_DWORD *)v73 = 134218754;
    v150 = v70;
    v75 = v163;
    v74 = v164;
    sub_472D0(&aBlock, (uint64_t)v163);
    v76 = (uint64_t (*)(void *, double (*)()))*((_QWORD *)v74 + 2);
    v149 = v72;
    v77 = v76(v75, v74);
    sub_34488(&aBlock);
    v167 = v77;
    *(_QWORD *)&v78 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v73 + 4).n128_u64[0];
    *(_WORD *)(v73 + 12) = 2080;
    v79 = objc_msgSend(v69, "be_identifier", v78);
    v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
    v81 = v69;
    v83 = v82;

    v167 = sub_33524(v80, v83, v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v73 + 14);
    v84 = v83;
    v69 = v81;
    swift_bridgeObjectRelease(v84);

    *(_WORD *)(v73 + 22) = 2080;
    v85 = *(_QWORD *)&v68[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 200];
    v86 = *(_QWORD *)&v68[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 208];
    swift_bridgeObjectRetain(v86);
    v167 = sub_33524(v85, v86, v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v73 + 24);
    swift_bridgeObjectRelease(v86);

    *(_WORD *)(v73 + 32) = 2080;
    v87 = type metadata accessor for UUID(0);
    v88 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v89 = v87;
    v63 = v160;
    v90 = dispatch thunk of CustomStringConvertible.description.getter(v89, v88);
    v92 = v91;
    v167 = sub_33524(v90, v91, v166);
    v57 = v159;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v167, &v168, v73 + 34);
    swift_bridgeObjectRelease(v92);

    v70 = v150;
    _os_log_impl(&dword_0, v150, (os_log_type_t)v149, "Paginate: %ld using webView:%s #contentConfig:%s op:%s", (uint8_t *)v73, 0x2Au);
    swift_arrayDestroy(v151, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v151, -1, -1);
    swift_slowDealloc(v73, -1, -1);
  }
  else
  {
    sub_34488(&aBlock);

  }
  v160 = v63;
  KeyPath = swift_getKeyPath(&unk_2ED6E8);
  swift_getKeyPath(&unk_2ED710);
  static Published.subscript.getter(&aBlock, v157, KeyPath);
  swift_release();
  swift_release();
  if (aBlock == 1)
  {
    v117 = sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
    v118 = Logger.logObject.getter(v117);
    v119 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v118, v119))
    {
      v120 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v120 = 134217984;
      v151 = v120 + 4;
      v121 = v69;
      v123 = v163;
      v122 = v164;
      sub_472D0(&aBlock, (uint64_t)v163);
      v124 = (uint64_t (*)(void *, double (*)()))*((_QWORD *)v122 + 2);
      v125 = v123;
      v57 = v159;
      v126 = v122;
      v69 = v121;
      v127 = v124(v125, v126);
      sub_34488(&aBlock);
      *(_QWORD *)&aBlock = v127;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v120 + 4);
      _os_log_impl(&dword_0, v118, v119, "Updating already paginated document (%ld)", v120, 0xCu);
      swift_slowDealloc(v120, -1, -1);
    }
    else
    {
      sub_34488(&aBlock);
    }

  }
  v130 = v157;
  v131 = (_BYTE *)(v157 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed);
  swift_beginAccess(v157 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed, v166, 1, 0);
  *v131 = 0;
  v132 = swift_allocObject(&unk_3826B0, 24);
  swift_weakInit(v132 + 16, v57);
  sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
  v133 = (_QWORD *)swift_allocObject(&unk_382988, 144);
  v134 = v154;
  v133[2] = v132;
  v133[3] = v134;
  v135 = v155;
  v133[4] = v155;
  v133[5] = v68;
  sub_3F1CC(&aBlock, (uint64_t)(v133 + 6));
  v133[11] = v130;
  v133[12] = v69;
  v136 = v158;
  v137 = v160;
  v133[13] = v158;
  v133[14] = v137;
  v138 = v148;
  v133[15] = v156;
  v133[16] = v138;
  v133[17] = v153;
  v139 = swift_allocObject(&unk_3829B0, 32);
  *(_QWORD *)(v139 + 16) = &unk_3BD8E0;
  *(_QWORD *)(v139 + 24) = v133;
  v164 = sub_137210;
  v165 = v139;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v162 = sub_525B8;
  v163 = &unk_3829C8;
  v140 = _Block_copy(&aBlock);
  swift_retain();
  v141 = v68;
  v142 = v69;
  v143 = v141;
  sub_899C8(v134, v135);
  swift_retain();
  swift_unknownObjectRetain(v136);
  swift_retain();
  sub_899C8((uint64_t)sub_137210, v139);
  objc_msgSend(v143, "setCompletionBlock:", v140, swift_release().n128_f64[0]);
  _Block_release(v140);
  swift_release();

  objc_msgSend(*(id *)(v159 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationQueue), "addOperation:", v143);
  swift_release();

  swift_release();
  swift_release();
  swift_unknownObjectRelease(v136);
}

void sub_11F088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t v42;

  v3 = v2;
  v4 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity);
  if (!v5)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  v6 = a2;
  v8 = *(_QWORD *)(v5 + 104);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v8);
  swift_retain();
  v9 = sub_FA954(v8, a1, v6);
  swift_release();
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v6);
  if (v9)
  {
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v10 = type metadata accessor for Logger(0);
    sub_555F0(v10, (uint64_t)qword_3BD350);
    v11 = swift_bridgeObjectRetain_n(v6, 2);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = v4;
      v40[0] = swift_slowAlloc(32, -1);
      v15 = v40[0];
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain(v6);
      v41 = sub_33524(a1, v6, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v14 + 4);
      swift_bridgeObjectRelease_n(v6, 3);
      _os_log_impl(&dword_0, v12, v13, "Bookmark Removed.  Attempting removal of pagination bookmark: %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      v16 = v15;
      v4 = v39;
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v6, 2);
    }
    v23 = (uint64_t *)(v9 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_bookmarkEntities);
    swift_beginAccess(v9 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_bookmarkEntities, v40, 33, 0);
    swift_bridgeObjectRetain(v6);
    v24 = sub_136D14(v23, a1, v6, sub_E3A24);
    swift_bridgeObjectRelease(v6);
    v25 = *v23;
    if ((unint64_t)*v23 >> 62)
    {
      if (v25 < 0)
        v38 = *v23;
      else
        v38 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v23);
      v6 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v25);
      if (v6 >= v24)
      {
LABEL_13:
        sub_88ACC(v24, v6);
        swift_endAccess(v40);
        v26 = *v23;
        v27 = (uint64_t *)(v9 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
        swift_beginAccess(v9 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages, v40, 0, 0);
        v28 = *v27;
        swift_bridgeObjectRetain(v26);
        swift_bridgeObjectRetain(v28);
        sub_11A6B8(v26, v28, (void (*)(uint64_t))sub_ACAC4, 0, (void (*)(uint64_t, _QWORD *, __n128))sub_ACB10, 0, &qword_3B90B0, type metadata accessor for BookmarkPaginationEntity, (uint64_t (*)(_QWORD))type metadata accessor for BookmarkPaginationEntityReference);
        swift_bridgeObjectRelease(v26);
        swift_bridgeObjectRelease(v28);
        v29 = *(_QWORD *)(v3 + v4);
        if (v29)
        {
          v30 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache + 8);
          ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache));
          v32 = *(_QWORD *)(v29 + 80);
          v33 = *(_QWORD *)(v29 + 88);
          v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v30 + 16);
          v35 = swift_bridgeObjectRetain(v33);
          v34(v9, v32, v33, ObjectType, v30, v35);
          swift_bridgeObjectRelease(v33);
          v36 = sub_319AC((uint64_t *)&unk_3B8EA0);
          v37 = sub_3DCC0((unint64_t *)&unk_3B8CC0, (uint64_t *)&unk_3B8EA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
          Subject<>.send()(v36, v37);
          swift_release();
          return;
        }
        goto LABEL_23;
      }
    }
    else
    {
      v6 = *(_QWORD *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFF8));
      if (v6 >= v24)
        goto LABEL_13;
    }
    __break(1u);
  }
  else if (qword_3B57A0 == -1)
  {
    goto LABEL_8;
  }
  swift_once(&qword_3B57A0, sub_11B838);
LABEL_8:
  v17 = type metadata accessor for Logger(0);
  sub_555F0(v17, (uint64_t)qword_3BD350);
  v18 = swift_bridgeObjectRetain_n(v6, 2);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.error.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v40[0] = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain(v6);
    v41 = sub_33524(a1, v6, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v21 + 4);
    swift_bridgeObjectRelease_n(v6, 3);
    _os_log_impl(&dword_0, v19, v20, "Unable to find a document containing bookmark: %s", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v6, 2);
  }
}

uint64_t sub_11F5F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;
  uint64_t v12;

  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_555F0(v5, (uint64_t)qword_3BD350);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v9 = 134217984;
    v11 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v9 + 4);
    _os_log_impl(&dword_0, v7, v8, "Highlight Added. Repaginated document ordinal:%ld.", v9, 0xCu);
    swift_slowDealloc(v9, -1, -1);
  }

  return a3(1);
}

void sub_11F718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];
  char v45;
  uint64_t v46;
  _BYTE v47[24];

  v4 = v3;
  v5 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity);
  if (!v6)
    goto LABEL_24;
  v10 = *(_QWORD *)(v6 + 104);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v10);
  swift_retain();
  v11 = sub_FAC80(v10, a1, a2);
  swift_release();
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(a2);
  if (v11)
  {
    if (*(_QWORD *)(v11 + 16) == a3)
    {
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v12 = type metadata accessor for Logger(0);
      sub_555F0(v12, (uint64_t)qword_3BD350);
      v13 = swift_bridgeObjectRetain_n(a2, 2);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.info.getter();
      v43 = a3;
      if (os_log_type_enabled(v14, v15))
      {
        v41 = v5;
        v16 = (uint8_t *)swift_slowAlloc(12, -1);
        v42 = a1;
        v17 = swift_slowAlloc(32, -1);
        v44[0] = v17;
        *(_DWORD *)v16 = 136315138;
        swift_bridgeObjectRetain(a2);
        v46 = sub_33524(v42, a2, v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v16 + 4);
        swift_bridgeObjectRelease_n(a2, 3);
        _os_log_impl(&dword_0, v14, v15, "Highlight Removed.  Attempting removal of pagination highlight: %s", v16, 0xCu);
        swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
        v18 = v17;
        a1 = v42;
        swift_slowDealloc(v18, -1, -1);
        v19 = v16;
        v5 = v41;
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(a2, 2);
      }
      v26 = (uint64_t *)(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_highlightEntities);
      swift_beginAccess(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_highlightEntities, v44, 33, 0);
      swift_bridgeObjectRetain(a2);
      v27 = sub_136D14(v26, a1, a2, sub_E3A24);
      swift_bridgeObjectRelease(a2);
      v28 = *v26;
      if ((unint64_t)*v26 >> 62)
      {
        if (v28 < 0)
          v40 = *v26;
        else
          v40 = v28 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v26);
        v29 = _CocoaArrayWrapper.endIndex.getter(v40);
        swift_bridgeObjectRelease(v28);
        if (v29 >= v27)
        {
LABEL_17:
          sub_88AD8(v27, v29);
          swift_endAccess(v44);
          v30 = *v26;
          v31 = (uint64_t *)(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
          swift_beginAccess(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages, &v46, 0, 0);
          v32 = *v31;
          swift_bridgeObjectRetain(v30);
          swift_bridgeObjectRetain(v32);
          sub_11A6B8(v30, v32, (void (*)(uint64_t))sub_AC9E0, 0, (void (*)(uint64_t, _QWORD *, __n128))sub_ACA2C, 0, &qword_3B90A0, type metadata accessor for HighlightPaginationEntity, (uint64_t (*)(_QWORD))type metadata accessor for HighlightPaginationEntityReference);
          swift_bridgeObjectRelease(v30);
          swift_bridgeObjectRelease(v32);
          v33 = *(_QWORD *)(v4 + v5);
          if (v33)
          {
            v34 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache + 8);
            ObjectType = swift_getObjectType(*(_QWORD *)(v4
                                                       + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache));
            v36 = *(_QWORD *)(v33 + 80);
            v37 = *(_QWORD *)(v33 + 88);
            v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v34 + 16);
            v39 = swift_bridgeObjectRetain(v37);
            v38(v11, v36, v37, ObjectType, v34, v39);
            swift_bridgeObjectRelease(v37);
            v44[0] = a1;
            v44[1] = a2;
            v44[2] = v43;
            v45 = 3;
            swift_bridgeObjectRetain(a2);
            PassthroughSubject.send(_:)(v44);
            swift_bridgeObjectRelease(a2);
            swift_release();
            return;
          }
          goto LABEL_25;
        }
      }
      else
      {
        v29 = *(_QWORD *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFF8));
        if (v29 >= v27)
          goto LABEL_17;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    swift_release();
  }
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v20 = type metadata accessor for Logger(0);
  sub_555F0(v20, (uint64_t)qword_3BD350);
  v21 = swift_bridgeObjectRetain_n(a2, 2);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v44[0] = v25;
    *(_DWORD *)v24 = 136315138;
    swift_bridgeObjectRetain(a2);
    v46 = sub_33524(a1, a2, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v24 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl(&dword_0, v22, v23, "Unable to find a document containing highlight: %s", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

uint64_t sub_11FC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;

  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (!Strong)
    return 0;
  v6 = Strong;
  v7 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType(Strong);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
  swift_unknownObjectRelease(v6);
  KeyPath = swift_getKeyPath(&unk_2ED628);
  swift_getKeyPath(&unk_2ED650);
  static Published.subscript.getter(&v23, v9, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v11 = v23;
  if (!*(_QWORD *)(v23 + 16) || (v12 = sub_3B7F8(a2), (v13 & 1) == 0))
  {
    swift_bridgeObjectRelease(v11);
    return 0;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
  swift_retain();
  swift_bridgeObjectRelease(v11);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = swift_getKeyPath(&unk_2ED670);
  swift_getKeyPath(&unk_2ED698);
  swift_retain();
  swift_bridgeObjectRetain(v16);
  static Published.subscript.getter(&v23, v14, v17);
  swift_release();
  swift_release();
  swift_release();
  v18 = v23;
  if (!*(_QWORD *)(v23 + 16) || (v19 = sub_3B8A0(v15, v16), (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v18);
    swift_release();
    return 0;
  }
  v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
  swift_retain();
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v18);
  swift_release();
  return v21;
}

uint64_t sub_11FE4C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  v2 = swift_getKeyPath(&unk_2ED608);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_11FEBC(uint64_t a1, uint64_t a2)
{
  return sub_11FEF4(a1, a2, (uint64_t)&OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookmarksChangedSubject, (uint64_t *)&unk_3B8EA0, (unint64_t *)&qword_3B8A10);
}

uint64_t sub_11FED8(uint64_t a1, uint64_t a2)
{
  return sub_11FEF4(a1, a2, (uint64_t)&OBJC_IVAR____TtC8BookEPUB17PaginatingService_highlightsChangedSubject, &qword_3BD380, &qword_3BD388);
}

uint64_t sub_11FEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;

  v7 = sub_319AC(a4);
  v8 = sub_3DCC0(a5, a4, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v7, v8);
}

void PaginatingService.update(contentLayout:withCacheStrategy:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v4 = v3;
  v7 = *a3;
  swift_beginAccess(v3 + 32, v30, 0, 0);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v4 + 40);
  ObjectType = swift_getObjectType(v8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 184);
  v12 = swift_unknownObjectRetain(v8);
  v13 = v11(ObjectType, v9, v12);
  v15 = v14;
  swift_unknownObjectRelease(v8);
  v16 = swift_getObjectType(a1);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(v16, a2);
  if (v13 == v17 && v15 == v18)
  {
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v20 = v18;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v18, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) == 0)
    {
      PaginationQueue.cancelOperationsNotFor(layout:)(a1, a2);
      LOBYTE(v29) = v7;
      sub_1233E0(a1, a2, (char *)&v29);
      return;
    }
  }
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_555F0(v22, (uint64_t)qword_3BD350);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v29 = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = sub_33524(0xD000000000000028, 0x80000000002CC3A0, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v26 + 4);
    _os_log_impl(&dword_0, v24, v25, "%s incoming contentLayout matches current -- nothing to do", v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }

}

Swift::Void __swiftcall PaginatingService.forceRepaginate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22[3];

  v1 = v0;
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v2 = type metadata accessor for Logger(0);
  sub_555F0(v2, (uint64_t)qword_3BD350);
  v3 = swift_retain_n(v0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v22[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v19 = v6 + 4;
    swift_beginAccess(v0 + 32, v21, 0, 0);
    v8 = *(_QWORD *)(v0 + 32);
    v9 = *(_QWORD *)(v1 + 40);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 32));
    v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 184);
    v12 = swift_unknownObjectRetain(v8);
    v13 = v11(ObjectType, v9, v12);
    v15 = v14;
    swift_unknownObjectRelease(v8);
    v20 = sub_33524(v13, v15, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v6 + 4);
    swift_release_n(v1);
    swift_bridgeObjectRelease(v15);
    _os_log_impl(&dword_0, v4, v5, "Forcing re-pagination with (%s)", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v0);
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationQueue), "cancelAllOperations", v19);
  swift_beginAccess(v1 + 32, v22, 0, 0);
  v17 = *(_QWORD *)(v1 + 32);
  v16 = *(_QWORD *)(v1 + 40);
  LOBYTE(v20) = 0;
  swift_unknownObjectRetain(v17);
  sub_1233E0(v18, v16, (char *)&v20);
  swift_unknownObjectRelease(v17);
}

Swift::Void __swiftcall PaginatingService.cancelAllOperations()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationQueue), "cancelAllOperations");
}

Swift::Void __swiftcall PaginatingService.cancelOperationsForWebView(webView:)(WKWebView webView)
{
  PaginationQueue.cancelOperationsForWebView(webView:)(webView);
}

Swift::Void __swiftcall PaginatingService.registerBackgroundHostView(backgroundHostView:)(UIView backgroundHostView)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  id v11;

  v2 = v1;
  v3 = v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostView;
  swift_unknownObjectWeakAssign(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostView, backgroundHostView.super.super.isa);
  KeyPath = swift_getKeyPath(&unk_2ED6C0);
  v5 = swift_allocObject(&unk_3826B0, 24);
  swift_weakInit(v5 + 16);
  v6 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(KeyPath, 0, sub_135A4C, v5, &protocol witness table for NSObject);
  swift_release();
  swift_release();
  v7 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostViewFrameObservation);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostViewFrameObservation) = v6;

  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v11, "setAccessibilityElementsHidden:", 1);
      objc_msgSend(v9, "addSubview:", v11);
      objc_msgSend(v9, "sendSubviewToBack:", v11);
      sub_1237FC();

      v9 = v11;
    }

  }
}

Swift::String __swiftcall PaginatingService.currentQueueDescription()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_31A9C();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::Void __swiftcall PaginatingService.paginate(documentOrdinals:)(Swift::OpaquePointer documentOrdinals)
{
  unsigned __int8 v1;

  v1 = 0;
  sub_123B34((uint64_t)documentOrdinals._rawValue, &v1);
}

uint64_t sub_1205EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, _BYTE *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v9 + 56) = a7;
  *(_QWORD *)(v9 + 64) = v8;
  *(_BYTE *)(v9 + 128) = a6;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 16) = a1;
  *(_BYTE *)(v9 + 129) = *a8;
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 72) = v10;
  *(_QWORD *)(v9 + 80) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  *(_QWORD *)(v9 + 88) = v11;
  *(_QWORD *)(v9 + 96) = v12;
  return swift_task_switch(sub_120678, v11, v12);
}

uint64_t sub_120678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_BYTE *)(v1 + 129);
  v5 = *(_QWORD *)(v1 + 48);
  v4 = *(_QWORD *)(v1 + 56);
  v6 = *(_BYTE *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 40);
  v12 = *(_OWORD *)(v1 + 24);
  v8 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 104) = v8;
  v9 = swift_task_alloc(80);
  *(_QWORD *)(v1 + 112) = v9;
  *(_QWORD *)(v9 + 16) = v2;
  *(_OWORD *)(v9 + 24) = v12;
  *(_QWORD *)(v9 + 40) = v7;
  *(_QWORD *)(v9 + 48) = v5;
  *(_BYTE *)(v9 + 56) = v6;
  *(_QWORD *)(v9 + 64) = v4;
  *(_BYTE *)(v9 + 72) = v3;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v1 + 120) = v10;
  *v10 = v1;
  v10[1] = sub_120774;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v1 + 16), v8, &protocol witness table for MainActor, 0xD000000000000045, 0x80000000002CC3D0, sub_135A54, v9, &type metadata for DocumentConfigurationState);
}

uint64_t sub_120774()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*v0 + 120));
  swift_release();
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1207DC, *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
}

uint64_t sub_1207DC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t PaginatingService.paginate(document:using:with:forDisplay:queuePriority:cacheStrategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, _BYTE *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v9 + 56) = a7;
  *(_QWORD *)(v9 + 64) = v8;
  *(_BYTE *)(v9 + 128) = a6;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 16) = a1;
  *(_BYTE *)(v9 + 129) = *a8;
  v10 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 72) = v10;
  *(_QWORD *)(v9 + 80) = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  *(_QWORD *)(v9 + 88) = v11;
  *(_QWORD *)(v9 + 96) = v12;
  return swift_task_switch(sub_120678, v11, v12);
}

void PaginatingService.reevaluatePaginationData(document:usingWebView:completion:)(_QWORD *a1, void *a2, void (*a3)(__int128 *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double *v20;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  double (*v27)();
  void *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  double (*v42)();
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(__int128 *);
  void *v51;
  double (*v52)();
  uint64_t (*v53)(void *, double (*)());
  double (*v54)();
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t ObjectType;
  uint64_t (*v70)(uint64_t, uint64_t, __n128);
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t (**v81)(_QWORD, _QWORD);
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  Swift::String v92;
  void *object;
  id v94;
  uint64_t v95;
  double v96;
  id v97;
  void *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  uint64_t type;
  uint64_t v113;
  void (*v114)(__int128 *);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int128 aBlock;
  uint64_t (*v121)(uint64_t);
  void *v122;
  double (*v123)();
  uint64_t v124;
  uint64_t v125[3];
  char v126[32];

  if (!*(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
  {
    __break(1u);
    return;
  }
  v9 = a1[3];
  v10 = a1[4];
  sub_472D0(a1, v9);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 16);
  swift_retain();
  v12 = v11(v9, v10);
  v13 = BookPaginationEntity.document(for:)(v12);
  *(_QWORD *)&v14 = swift_release().n128_u64[0];
  if (!v13)
  {
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v36 = type metadata accessor for Logger(0);
    sub_555F0(v36, (uint64_t)qword_3BD350);
    v37 = sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v40 = 134217984;
      v41 = v122;
      v42 = v123;
      sub_472D0(&aBlock, (uint64_t)v122);
      v43 = (*((uint64_t (**)(void *, double (*)()))v42 + 2))(v41, v42);
      sub_34488(&aBlock);
      *(_QWORD *)&aBlock = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v40 + 4);
      _os_log_impl(&dword_0, v38, v39, "Failed to get corresponding pagination document for document (%ld -- skipping pagination", v40, 0xCu);
      swift_slowDealloc(v40, -1, -1);

      if (!a3)
        return;
    }
    else
    {
      sub_34488(&aBlock);

      if (!a3)
        return;
    }
    LOWORD(aBlock) = 256;
    a3(&aBlock);
    return;
  }
  v15 = objc_msgSend(a2, "scrollView", v14);
  objc_msgSend(v15, "contentSize");
  v17 = v16;
  v19 = v18;

  v20 = (double *)(v13 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
  swift_beginAccess(v13 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize, v126, 0, 0);
  if (*v20 == v17 && v20[1] == v19)
  {
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v44 = type metadata accessor for Logger(0);
    sub_555F0(v44, (uint64_t)qword_3BD350);
    sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
    v45 = swift_retain_n(v13);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc(32, -1);
      v49 = swift_slowAlloc(64, -1);
      v125[0] = v49;
      *(_DWORD *)v48 = 134218498;
      v116 = v13;
      v50 = a3;
      v51 = v122;
      v52 = v123;
      sub_472D0(&aBlock, (uint64_t)v122);
      v53 = (uint64_t (*)(void *, double (*)()))*((_QWORD *)v52 + 2);
      v54 = v52;
      a3 = v50;
      v55 = v53(v51, v54);
      sub_34488(&aBlock);
      v119 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &aBlock, v48 + 4);
      *(_WORD *)(v48 + 12) = 2080;
      v56 = CGSize.debugDescription.getter(v17, v19);
      v58 = v57;
      v119 = sub_33524(v56, v57, v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &aBlock, v48 + 14);
      swift_bridgeObjectRelease(v58);
      *(_WORD *)(v48 + 22) = 2080;
      v59 = CGSize.debugDescription.getter(*v20, v20[1]);
      v61 = v60;
      v119 = sub_33524(v59, v60, v125);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &aBlock, v48 + 24);
      swift_release_n(v116);
      swift_bridgeObjectRelease(v61);
      _os_log_impl(&dword_0, v46, v47, "#reevaluatePaginationData Skipping: Asked to re-evaluate document ordinal %ld when our contentSize %s & cached size are the same %s", (uint8_t *)v48, 0x20u);
      swift_arrayDestroy(v49, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v48, -1, -1);

      if (!v50)
        goto LABEL_47;
    }
    else
    {
      sub_34488(&aBlock);

      swift_release_n(v13);
      if (!a3)
        goto LABEL_47;
    }
    LOWORD(aBlock) = 0;
LABEL_31:
    a3(&aBlock);
    goto LABEL_47;
  }
  v117 = a4;
  v114 = a3;
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v22 = type metadata accessor for Logger(0);
  sub_555F0(v22, (uint64_t)qword_3BD350);
  sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
  v23 = swift_retain_n(v13);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.info.getter();
  v115 = v13;
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(32, -1);
    type = swift_slowAlloc(64, -1);
    v125[0] = type;
    *(_DWORD *)v26 = 134218498;
    v28 = v122;
    v27 = v123;
    sub_472D0(&aBlock, (uint64_t)v122);
    v29 = (*((uint64_t (**)(void *, double (*)()))v27 + 2))(v28, v27);
    sub_34488(&aBlock);
    v119 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &aBlock, v26 + 4);
    *(_WORD *)(v26 + 12) = 2080;
    v30 = CGSize.debugDescription.getter(v17, v19);
    v32 = v31;
    v119 = sub_33524(v30, v31, v125);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &aBlock, v26 + 14);
    swift_bridgeObjectRelease(v32);
    *(_WORD *)(v26 + 22) = 2080;
    v33 = CGSize.debugDescription.getter(*v20, v20[1]);
    v35 = v34;
    v119 = sub_33524(v33, v34, v125);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v119, &aBlock, v26 + 24);
    swift_release_n(v115);
    swift_bridgeObjectRelease(v35);
    _os_log_impl(&dword_0, v24, v25, "#reevaluatePaginationData Processing: Asked to re-evaluate document ordinal %ld because our contentSize %s != cachedSize %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy(type, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(type, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {
    sub_34488(&aBlock);

    swift_release_n(v13);
  }
  a3 = v114;
  if (objc_msgSend(a2, "be_contentViewState", type) == 11)
  {
    v62 = objc_msgSend(a2, "be_configurationKey");
    if (v62)
    {
      v63 = v62;
      v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
      v66 = v65;

    }
    else
    {
      v64 = 0;
      v66 = 0;
    }
    swift_beginAccess(v118 + 32, v125, 0, 0);
    v67 = *(_QWORD *)(v118 + 32);
    v68 = *(_QWORD *)(v118 + 40);
    ObjectType = swift_getObjectType(v67);
    v70 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v68 + 184);
    v71 = swift_unknownObjectRetain(v67);
    v72 = v70(ObjectType, v68, v71);
    v74 = v73;
    swift_unknownObjectRelease(v67);
    if (v66)
    {
      if (v64 == v72 && v66 == v74)
      {
        swift_bridgeObjectRelease(v66);
        swift_bridgeObjectRelease(v74);
LABEL_43:
        v80 = *(_QWORD *)(v118 + 32);
        v81 = *(uint64_t (***)(_QWORD, _QWORD))(v118 + 40);
        swift_unknownObjectRetain(v80);
        v82 = (void *)sub_126A44(a2, v80, v81, a1, 1, 1, 8);
        swift_unknownObjectRelease(v80);
        v83 = v82;
        v84 = a2;
        v85 = v83;
        v86 = v84;
        v87 = Logger.logObject.getter(v86);
        v88 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v87, v88))
        {
          v89 = swift_slowAlloc(22, -1);
          v113 = swift_slowAlloc(64, -1);
          *(_DWORD *)v89 = 136315394;
          v119 = v113;
          strcpy((char *)&aBlock, "operationID: ");
          HIWORD(aBlock) = -4864;
          v90 = type metadata accessor for UUID(0);
          v91 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v92._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v90, v91);
          object = v92._object;
          v94 = v85;
          String.append(_:)(v92);
          swift_bridgeObjectRelease(object);
          v95 = *((_QWORD *)&aBlock + 1);
          *(_QWORD *)&aBlock = sub_33524(aBlock, *((unint64_t *)&aBlock + 1), &v119);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v89 + 4);

          *(_QWORD *)&v96 = swift_bridgeObjectRelease(v95).n128_u64[0];
          *(_WORD *)(v89 + 12) = 2080;
          v97 = objc_msgSend(v86, "be_identifier", v96);
          v98 = v86;
          v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v97);
          v101 = v100;

          v102 = v99;
          v86 = v98;
          *(_QWORD *)&aBlock = sub_33524(v102, v101, &v119);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v89 + 14);

          v103 = v101;
          v85 = v94;
          swift_bridgeObjectRelease(v103);
          _os_log_impl(&dword_0, v87, v88, "Made re-evaluation pagination operation: %s for webView:%s", (uint8_t *)v89, 0x16u);
          swift_arrayDestroy(v113, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v113, -1, -1);
          v104 = (uint64_t)v114;
          swift_slowDealloc(v89, -1, -1);

        }
        else
        {

          v104 = (uint64_t)v114;
        }
        v105 = swift_allocObject(&unk_3826B0, 24);
        swift_weakInit(v105 + 16);
        sub_49F1C((uint64_t)a1, (uint64_t)&aBlock);
        v106 = (_QWORD *)swift_allocObject(&unk_3826D8, 104);
        v106[2] = v105;
        v106[3] = v85;
        sub_3F1CC(&aBlock, (uint64_t)(v106 + 4));
        v106[9] = v86;
        v106[10] = v104;
        v106[11] = v117;
        v106[12] = v115;
        v107 = swift_allocObject(&unk_382700, 32);
        *(_QWORD *)(v107 + 16) = &unk_3BD408;
        *(_QWORD *)(v107 + 24) = v106;
        v123 = sub_135B34;
        v124 = v107;
        *(_QWORD *)&aBlock = _NSConcreteStackBlock;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        v121 = sub_525B8;
        v122 = &unk_382718;
        v108 = _Block_copy(&aBlock);
        v109 = v85;
        swift_retain();
        v110 = v109;
        v111 = v86;
        sub_899C8(v104, v117);
        swift_retain();
        sub_899C8((uint64_t)sub_135B34, v107);
        objc_msgSend(v110, "setCompletionBlock:", v108, swift_release().n128_f64[0]);
        _Block_release(v108);

        objc_msgSend(*(id *)(v118 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationQueue), "addOperation:", v110, swift_release().n128_f64[0]);
        swift_release();

        goto LABEL_47;
      }
      v76 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, v72, v74, 0);
      swift_bridgeObjectRelease(v66);
      swift_bridgeObjectRelease(v74);
      if ((v76 & 1) != 0)
        goto LABEL_43;
    }
    else
    {
      swift_bridgeObjectRelease(v74);
    }
    v77 = Logger.logObject.getter(v75);
    v78 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v79 = 0;
      _os_log_impl(&dword_0, v77, v78, "hmm", v79, 2u);
      swift_slowDealloc(v79, -1, -1);
    }

    goto LABEL_43;
  }
  if (v114)
  {
    LOWORD(aBlock) = 259;
    goto LABEL_31;
  }
LABEL_47:
  swift_release();
}

uint64_t PaginatingService.paginationJSOptions<A>(layoutProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_121518(a1, a2, a3, (unint64_t *)&qword_3BD410, off_3764D0, (uint64_t (*)(__n128))sub_1BE6C8);
}

uint64_t PaginatingService.cleanupJSOptions<A>(layoutProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_121518(a1, a2, a3, (unint64_t *)&qword_3B9698, off_3764C8, (uint64_t (*)(__n128))sub_964D8);
}

uint64_t sub_121518(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, _QWORD *a5, uint64_t (*a6)(__n128))
{
  uint64_t v6;
  uint64_t v11;
  uint64_t ObjectType;
  __n128 v13;
  uint64_t v14;
  _QWORD v16[4];

  v11 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 8))(v16, ObjectType, v11);
  sub_472D0(v16, v16[3]);
  sub_34450(0, a4, a5);
  v13 = swift_unknownObjectRetain(a1);
  v14 = a6(v13);
  swift_unknownObjectRelease(a1);
  sub_34488(v16);
  return v14;
}

uint64_t PaginatingService.cfiUtilityJSOptions<A>(documentEntity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8))(v15, ObjectType, v7);
  v9 = v16;
  v10 = v17;
  v11 = sub_472D0(v15, v16);
  sub_34450(0, &qword_3BD418, off_3764C0);
  sub_642E4((uint64_t)v11, a1, v9, a2, v10, a3);
  v13 = v12;
  sub_34488(v15);
  return v13;
}

void sub_1216C8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  PaginatingService.location(for:)(a1, a2, a3);
}

void PaginatingService.location(for:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[3];
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v4 = v3;
  v8 = type metadata accessor for DocumentAnchor();
  swift_allocObject(v8, 48);
  swift_bridgeObjectRetain(a2);
  sub_112E00(a1, a2);
  if (!v9)
  {
    v29 = sub_135B74();
    swift_allocError(&type metadata for PaginatingServiceError, v29, 0, 0);
    *(_QWORD *)v30 = a1;
    *(_QWORD *)(v30 + 8) = a2;
    *(_BYTE *)(v30 + 16) = 2;
    v31 = swift_bridgeObjectRetain(a2);
    swift_willThrow(v31);
    return;
  }
  v94 = a1;
  v95 = a3;
  v96 = v9;
  v11 = *(_QWORD *)(v9 + 16);
  v10 = *(_QWORD *)(v9 + 24);
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  v14 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(v12 + 8);
  v15 = swift_bridgeObjectRetain(v10);
  v14(v101, ObjectType, v12, v15);
  v16 = v102;
  v17 = v103;
  sub_472D0(v101, v102);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 64))(v16, v17);
  v19 = v18;
  v20 = *(_QWORD *)(v18 + 16);
  if (v20)
  {
    v93 = v3;
    v21 = v18 + 32;
    swift_bridgeObjectRetain(v18);
    while (1)
    {
      sub_49F1C(v21, (uint64_t)&v98);
      v22 = v99;
      v23 = v100;
      sub_472D0(&v98, v99);
      v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      if (v24 == v11 && v25 == v10)
      {
        swift_bridgeObjectRelease(v19);
        v32 = v10;
        goto LABEL_15;
      }
      v27 = v25;
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v11, v10, 0);
      swift_bridgeObjectRelease(v27);
      if ((v28 & 1) != 0)
        break;
      sub_34488(&v98);
      v21 += 40;
      if (!--v20)
      {
        swift_bridgeObjectRelease(v19);
        v4 = v93;
        goto LABEL_11;
      }
    }
    v32 = v19;
LABEL_15:
    v4 = v93;
    swift_bridgeObjectRelease(v32);
    sub_3F1CC(&v98, (uint64_t)&v104);
  }
  else
  {
LABEL_11:
    v106 = 0;
    v104 = 0u;
    v105 = 0u;
  }
  swift_bridgeObjectRelease(v19);
  sub_34488(v101);
  if (*((_QWORD *)&v105 + 1))
  {
    swift_bridgeObjectRelease(v10);
    sub_3F1CC(&v104, (uint64_t)&v107);
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
    {
      v33 = v109;
      v34 = v110;
      sub_472D0(&v107, v109);
      v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 16);
      swift_retain();
      v36 = v35(v33, v34);
      v37 = BookPaginationEntity.document(for:)(v36);
      swift_release();
      if (v37)
      {
        v38 = *(_QWORD *)(v37 + 16);
        v39 = *(_QWORD *)(v96 + 40);
        if (v39)
        {
          v40 = *(_QWORD *)(v96 + 32);
          v41 = v37 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName;
          swift_beginAccess(v37 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName, &v104, 0, 0);
          v42 = *(_QWORD *)v41;
          v43 = *(_QWORD *)(*(_QWORD *)v41 + 16);
          swift_bridgeObjectRetain(v39);
          if (v43)
          {
            swift_bridgeObjectRetain(v39);
            swift_bridgeObjectRetain(v42);
            v44 = sub_3B8A0(v40, v39);
            if ((v45 & 1) != 0)
            {
              v46 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v44);
              swift_retain();
              swift_bridgeObjectRelease(v39);
              swift_bridgeObjectRelease(v42);
              swift_beginAccess(v46 + 40, v101, 0, 0);
              v47 = *(_QWORD *)(v46 + 40);
              swift_bridgeObjectRetain(v47);
              v49 = sub_95C18(v48);
              v51 = v50;
              swift_bridgeObjectRelease(v47);
              if ((v51 & 1) == 0)
              {
                v52 = (uint64_t *)(v37 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
                swift_beginAccess(v37 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, &v98, 0, 0);
                if (v49 < *v52)
                {
                  swift_bridgeObjectRelease(v39);
                  swift_release();
                  swift_release();
                  swift_release();
LABEL_46:
                  LOBYTE(v111) = 1;
                  LOBYTE(v97) = 1;
                  *(_QWORD *)v95 = v38;
                  *(_QWORD *)(v95 + 8) = v49;
                  *(_OWORD *)(v95 + 16) = 0u;
                  *(_OWORD *)(v95 + 32) = 0u;
                  *(_OWORD *)(v95 + 48) = 0u;
                  *(_OWORD *)(v95 + 64) = 0u;
                  *(_QWORD *)(v95 + 80) = 0;
                  *(_BYTE *)(v95 + 88) = 1;
                  *(_OWORD *)(v95 + 96) = 0u;
                  *(_OWORD *)(v95 + 112) = 0u;
                  *(_QWORD *)(v95 + 128) = 0;
                  *(_WORD *)(v95 + 136) = 1;
                  sub_34488(&v107);
                  return;
                }
                if (qword_3B57A0 != -1)
                  swift_once(&qword_3B57A0, sub_11B838);
                v86 = type metadata accessor for Logger(0);
                sub_555F0(v86, (uint64_t)qword_3BD350);
                swift_bridgeObjectRetain(v39);
                v88 = Logger.logObject.getter(v87);
                v89 = static os_log_type_t.error.getter(v88);
                if (os_log_type_enabled(v88, v89))
                {
                  v90 = (uint8_t *)swift_slowAlloc(12, -1);
                  v91 = v40;
                  v92 = swift_slowAlloc(32, -1);
                  v111 = v92;
                  *(_DWORD *)v90 = 136315138;
                  swift_bridgeObjectRetain(v39);
                  v97 = sub_33524(v91, v39, &v111);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98, v90 + 4);
                  swift_bridgeObjectRelease_n(v39, 3);
                  _os_log_impl(&dword_0, v88, v89, "Fragment '%s' not found in document. Falling back to beginning of document", v90, 0xCu);
                  swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v92, -1, -1);
                  swift_slowDealloc(v90, -1, -1);
                  swift_release();
                  swift_release();

                }
                else
                {
                  swift_release();
                  swift_release();

                  swift_bridgeObjectRelease_n(v39, 2);
                }
                swift_release();
LABEL_45:
                v49 = 0;
                goto LABEL_46;
              }
              swift_release();
            }
            else
            {
              swift_bridgeObjectRelease(v39);
              swift_bridgeObjectRelease(v42);
            }
          }
          if (qword_3B57A0 != -1)
            swift_once(&qword_3B57A0, sub_11B838);
          v79 = type metadata accessor for Logger(0);
          sub_555F0(v79, (uint64_t)qword_3BD350);
          swift_bridgeObjectRetain(v39);
          v81 = Logger.logObject.getter(v80);
          v82 = static os_log_type_t.error.getter(v81);
          if (os_log_type_enabled(v81, v82))
          {
            v83 = (uint8_t *)swift_slowAlloc(12, -1);
            v84 = v40;
            v85 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v98 = v85;
            *(_DWORD *)v83 = 136315138;
            swift_bridgeObjectRetain(v39);
            v111 = sub_33524(v84, v39, (uint64_t *)&v98);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v111, &v112, v83 + 4);
            swift_bridgeObjectRelease_n(v39, 3);
            _os_log_impl(&dword_0, v81, v82, "Fragment '%s' not found in document. Falling back to beginning of document", v83, 0xCu);
            swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v85, -1, -1);
            swift_slowDealloc(v83, -1, -1);
            swift_release();
            swift_release();

          }
          else
          {
            swift_release();
            swift_release();

            swift_bridgeObjectRelease_n(v39, 2);
          }
          goto LABEL_45;
        }
        swift_release();
        swift_release();
        goto LABEL_45;
      }
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v62 = type metadata accessor for Logger(0);
      sub_555F0(v62, (uint64_t)qword_3BD350);
      v63 = sub_49F1C((uint64_t)&v107, (uint64_t)&v104);
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.error.getter(v64);
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v66 = 134217984;
        v67 = *((_QWORD *)&v105 + 1);
        v68 = v106;
        sub_472D0(&v104, *((uint64_t *)&v105 + 1));
        v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 16))(v67, v68);
        sub_34488(&v104);
        *(_QWORD *)&v104 = v69;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, (char *)&v104 + 8, v66 + 4);
        _os_log_impl(&dword_0, v64, v65, "No document pagination entity found for ordinal %ld", v66, 0xCu);
        swift_slowDealloc(v66, -1, -1);
      }
      else
      {
        sub_34488(&v104);
      }

      v73 = v109;
      v74 = v110;
      sub_472D0(&v107, v109);
      v75 = (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 16))(v73, v74);
      v76 = sub_135B74();
      swift_allocError(&type metadata for PaginatingServiceError, v76, 0, 0);
      *(_QWORD *)v77 = v75;
      *(_QWORD *)(v77 + 8) = 0;
      *(_BYTE *)(v77 + 16) = 1;
      swift_willThrow(v78);
      swift_release();
      sub_34488(&v107);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_52128((uint64_t)&v104, &qword_3BD428);
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v53 = type metadata accessor for Logger(0);
    sub_555F0(v53, (uint64_t)qword_3BD350);
    swift_bridgeObjectRetain(v10);
    v55 = Logger.logObject.getter(v54);
    v56 = static os_log_type_t.error.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(12, -1);
      v58 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v104 = v58;
      *(_DWORD *)v57 = 136315138;
      v107 = v11;
      v108 = v10;
      swift_bridgeObjectRetain(v10);
      v59 = String.init<A>(_:)(&v107, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
      v61 = v60;
      v107 = sub_33524(v59, v60, (uint64_t *)&v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v57 + 4);
      swift_bridgeObjectRelease_n(v10, 2);
      swift_bridgeObjectRelease(v61);
      _os_log_impl(&dword_0, v55, v56, "Document entity for href '%s' not found", v57, 0xCu);
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v10, 2);
    }
    v70 = sub_135B74();
    swift_allocError(&type metadata for PaginatingServiceError, v70, 0, 0);
    *(_QWORD *)v71 = v94;
    *(_QWORD *)(v71 + 8) = a2;
    *(_BYTE *)(v71 + 16) = 2;
    v72 = swift_bridgeObjectRetain(a2);
    swift_willThrow(v72);
    swift_release();
  }
}

uint64_t sub_122180(Swift::Int a1)
{
  return PaginatingService.chapterName(bookPageOffset:)(a1)._countAndFlagsBits;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PaginatingService.chapterName(bookPageOffset:)(Swift::Int bookPageOffset)
{
  uint8_t *v1;
  uint8_t *v2;
  Swift::Int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  unint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint8_t *v16;
  Swift::String result;
  Swift::Int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity])
  {
    __break(1u);
    goto LABEL_26;
  }
  v2 = v1;
  v3 = bookPageOffset;
  swift_retain();
  sub_E9164(v3, (uint64_t)&v18);
  if ((v20 & 1) != 0)
  {
    swift_release();
    v4 = (uint64_t)_swiftEmptyArrayStorage;
  }
  else
  {
    v20 = v18;
    v21 = v19;
    sub_EBDB4(&v18);
    v4 = v5;
    swift_release();
  }
  if (!((unint64_t)v4 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_7;
LABEL_15:
    swift_bridgeObjectRelease(v4);
    KeyPath = swift_getKeyPath(&unk_2ED5E0);
    swift_getKeyPath(&unk_2ED608);
    static Published.subscript.getter(&v18, v2, KeyPath);
    swift_release();
    swift_release();
    if (v18 != 1)
    {
LABEL_20:
      v13 = sub_135B74();
      swift_allocError(&type metadata for PaginatingServiceError, v13, 0, 0);
      *(_QWORD *)v14 = v3;
      *(_QWORD *)(v14 + 8) = 0;
      *(_BYTE *)(v14 + 16) = 0;
      swift_willThrow(v15);
      goto LABEL_21;
    }
    if (qword_3B57A0 == -1)
    {
LABEL_17:
      v10 = type metadata accessor for Logger(0);
      v11 = sub_555F0(v10, (uint64_t)qword_3BD350);
      KeyPath = Logger.logObject.getter(v11);
      v12 = static os_log_type_t.error.getter(KeyPath);
      if (os_log_type_enabled(KeyPath, v12))
      {
        v2 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v2 = 134217984;
        v18 = v3;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v2 + 4);
        _os_log_impl(&dword_0, KeyPath, v12, "Chapter entity for book page offset %ld not found", v2, 0xCu);
        swift_slowDealloc(v2, -1, -1);
      }

      goto LABEL_20;
    }
LABEL_24:
    swift_once(&qword_3B57A0, sub_11B838);
    goto LABEL_17;
  }
  if (v4 < 0)
    v8 = v4;
  else
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  v9 = _CocoaArrayWrapper.endIndex.getter(v8);
  swift_bridgeObjectRelease(v4);
  if (!v9)
    goto LABEL_15;
LABEL_7:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v4);
    goto LABEL_10;
  }
  if (!*(_QWORD *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8)))
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *(_QWORD *)(v4 + 32);
  swift_retain();
LABEL_10:
  swift_bridgeObjectRelease(v4);
  KeyPath = *(NSObject **)(v6 + 16);
  v2 = *(uint8_t **)(v6 + 24);
  swift_bridgeObjectRetain(v2);
  swift_release();
LABEL_21:
  bookPageOffset = (Swift::Int)KeyPath;
  v16 = v2;
LABEL_26:
  result._object = v16;
  result._countAndFlagsBits = bookPageOffset;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PaginatingService.chapterName(pageNumber:)(Swift::Int pageNumber)
{
  BOOL v1;
  Swift::Int countAndFlagsBits;
  void *object;
  Swift::String v4;
  Swift::String result;

  v1 = __OFSUB__(pageNumber, 1);
  countAndFlagsBits = pageNumber - 1;
  if (v1)
  {
    __break(1u);
  }
  else
  {
    v4 = PaginatingService.chapterName(bookPageOffset:)(countAndFlagsBits);
    object = v4._object;
    countAndFlagsBits = v4._countAndFlagsBits;
  }
  result._object = object;
  result._countAndFlagsBits = countAndFlagsBits;
  return result;
}

Swift::Int_optional __swiftcall PaginatingService.lastChapterIndex(forPageLocation:)(BookEPUB::PageLocation forPageLocation)
{
  uint64_t v1;
  Swift::Int v2;
  char v3;
  char v4;
  __int128 v5;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
  {
    v5 = *(_OWORD *)forPageLocation.documentOrdinal;
    swift_retain();
    v2 = sub_EC0B0((uint64_t *)&v5);
    v4 = v3;
    swift_release();
    LOBYTE(forPageLocation.pageOffset) = v4 & 1;
    forPageLocation.documentOrdinal = v2;
  }
  else
  {
    __break(1u);
  }
  return *(Swift::Int_optional *)&forPageLocation.documentOrdinal;
}

void PaginatingService.insert(_:at:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD v91[2];
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  _OWORD v100[3];

  v3 = v2;
  v82 = (_QWORD *)a1;
  v5 = type metadata accessor for HistoryEntity(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v78 - v9;
  v11 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v11);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2[6];
  v15 = a2[7];
  v16 = a2[4];
  v98 = a2[5];
  v99 = v14;
  v100[0] = v15;
  *(_OWORD *)((char *)v100 + 10) = *(__int128 *)((char *)a2 + 122);
  v17 = a2[3];
  v95 = a2[2];
  v96 = v17;
  v97 = v16;
  v18 = a2[1];
  v93 = *a2;
  v94 = v18;
  v19 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  if (!*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v81 = *((_QWORD *)&v93 + 1);
  v20 = BookPaginationEntity.document(for:)(v93);
  if (v20)
  {
    v21 = v20;
    v80 = v10;
    KeyPath = swift_getKeyPath(&unk_2ED6E8);
    swift_getKeyPath(&unk_2ED710);
    static Published.subscript.getter(&v84, v21, KeyPath);
    swift_release();
    swift_release();
    if (v84 == 1)
    {
      if (!*(_QWORD *)(v3 + v19))
      {
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      v90 = v99;
      v91[0] = v100[0];
      *(_OWORD *)((char *)v91 + 10) = *(_OWORD *)((char *)v100 + 10);
      v86 = v95;
      v87 = v96;
      v88 = v97;
      v89 = v98;
      v84 = v93;
      v85 = v94;
      swift_retain();
      v23 = BookPaginationEntity.pagePaginationEntity(for:)((uint64_t *)&v84);
      v24 = swift_release();
      if (v23)
      {
        v25 = (uint64_t)v82;
        v26 = UUID.uuidString.getter(v24);
        v27 = v23;
        v29 = v28;
        v30 = *(_QWORD *)(v21 + 16);
        v31 = *(_QWORD *)(v27 + 32);
        v32 = *(_QWORD *)(v27 + 40);
        v78 = v27;
        v79 = v26;
        v33 = sub_319AC(&qword_3B67E8);
        v34 = swift_allocObject(v33, 72);
        *(_OWORD *)(v34 + 16) = xmmword_2E5F80;
        *(_QWORD *)(v34 + 32) = v30;
        *(_QWORD *)(v34 + 40) = v31;
        *(_QWORD *)(v34 + 48) = v32;
        __asm { FMOV            V0.2D, #1.0 }
        *(_OWORD *)(v34 + 56) = _Q0;
        v40 = type metadata accessor for HistoryPaginationEntity(0);
        v41 = (_QWORD *)swift_allocObject(v40, 48);
        v41[2] = v79;
        v41[3] = v29;
        v41[4] = v34;
        v41[5] = &_swiftEmptySetSingleton;
        v42 = v25 + *(int *)(v5 + 24);
        v43 = type metadata accessor for Date(0);
        v44 = *(_QWORD *)(v43 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v13, v42, v43);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v13, 0, 1, v43);
        sub_AEA0C((uint64_t)v41, (uint64_t)v13, 1);
        sub_52128((uint64_t)v13, &qword_3BFBB0);
        v45 = *(_QWORD *)(v3 + v19);
        if (!v45)
        {
LABEL_23:
          __break(1u);
          return;
        }
        v46 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache));
        v48 = *(_QWORD *)(v45 + 80);
        v49 = *(_QWORD *)(v45 + 88);
        v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v46 + 16);
        v51 = swift_bridgeObjectRetain(v49);
        v50(v21, v48, v49, ObjectType, v46, v51);
        swift_bridgeObjectRelease(v49);
        if (qword_3B57A0 != -1)
          swift_once(&qword_3B57A0, sub_11B838);
        v52 = type metadata accessor for Logger(0);
        sub_555F0(v52, (uint64_t)qword_3BD350);
        v53 = (uint64_t)v80;
        sub_137328((uint64_t)v82, (uint64_t)v80, type metadata accessor for HistoryEntity);
        swift_retain();
        sub_49BD8((uint64_t)&v93);
        swift_retain();
        v54 = sub_49BD8((uint64_t)&v93);
        v55 = Logger.logObject.getter(v54);
        v56 = static os_log_type_t.debug.getter();
        if (!os_log_type_enabled(v55, v56))
        {
          swift_release();
          sub_49900((uint64_t)&v93);
          swift_release();
          sub_BA58C(v53, type metadata accessor for HistoryEntity);
          swift_release();
          sub_49900((uint64_t)&v93);

          swift_release();
          swift_release();
          return;
        }
        v82 = v41;
        v57 = swift_slowAlloc(22, -1);
        v58 = swift_slowAlloc(32, -1);
        v92 = v58;
        *(_DWORD *)v57 = 136315394;
        v59 = type metadata accessor for UUID(0);
        v60 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v61 = dispatch thunk of CustomStringConvertible.description.getter(v59, v60);
        v63 = v62;
        *(_QWORD *)&v84 = sub_33524(v61, v62, &v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, (char *)&v84 + 8, v57 + 4);
        swift_bridgeObjectRelease(v63);
        sub_BA58C(v53, type metadata accessor for HistoryEntity);
        *(_WORD *)(v57 + 12) = 2048;
        v64 = (uint64_t *)(v21 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
        swift_beginAccess(v21 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset, &v84, 0, 0);
        v65 = *v64;
        swift_release();
        sub_49900((uint64_t)&v93);
        if (!__OFADD__(v65, v81))
        {
          v83 = v65 + v81;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v57 + 14);
          swift_release();
          sub_49900((uint64_t)&v93);
          _os_log_impl(&dword_0, v55, v56, "Inserted history %s at offset %ld", (uint8_t *)v57, 0x16u);
          swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v58, -1, -1);
          swift_slowDealloc(v57, -1, -1);
          swift_release();
          swift_release();

          swift_release();
          return;
        }
        __break(1u);
        goto LABEL_21;
      }
    }
    swift_release();
  }
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v66 = type metadata accessor for Logger(0);
  sub_555F0(v66, (uint64_t)qword_3BD350);
  sub_137328((uint64_t)v82, (uint64_t)v7, type metadata accessor for HistoryEntity);
  sub_49BD8((uint64_t)&v93);
  v67 = sub_49BD8((uint64_t)&v93);
  v68 = Logger.logObject.getter(v67);
  v69 = static os_log_type_t.error.getter(v68);
  if (os_log_type_enabled(v68, v69))
  {
    v70 = swift_slowAlloc(22, -1);
    v71 = swift_slowAlloc(64, -1);
    v92 = v71;
    *(_DWORD *)v70 = 136315394;
    v72 = HistoryEntity.description.getter();
    v74 = v73;
    *(_QWORD *)&v84 = sub_33524(v72, v73, &v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, (char *)&v84 + 8, v70 + 4);
    swift_bridgeObjectRelease(v74);
    sub_BA58C((uint64_t)v7, type metadata accessor for HistoryEntity);
    *(_WORD *)(v70 + 12) = 2080;
    v90 = v99;
    v91[0] = v100[0];
    *(_OWORD *)((char *)v91 + 10) = *(_OWORD *)((char *)v100 + 10);
    v86 = v95;
    v87 = v96;
    v88 = v97;
    v89 = v98;
    v84 = v93;
    v85 = v94;
    v75 = Location.description.getter();
    v77 = v76;
    *(_QWORD *)&v84 = sub_33524(v75, v76, &v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, (char *)&v84 + 8, v70 + 14);
    swift_bridgeObjectRelease(v77);
    sub_49900((uint64_t)&v93);
    sub_49900((uint64_t)&v93);
    _os_log_impl(&dword_0, v68, v69, "Unable to insert history entity (%s) at location, %s, as it does not exist)", (uint8_t *)v70, 0x16u);
    swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v71, -1, -1);
    swift_slowDealloc(v70, -1, -1);
  }
  else
  {
    sub_BA58C((uint64_t)v7, type metadata accessor for HistoryEntity);
    sub_49900((uint64_t)&v93);
    sub_49900((uint64_t)&v93);
  }

}

Swift::Void __swiftcall PaginatingService.startIfNeeded()()
{
  uint64_t v0;
  char v1;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_started) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_started) = 1;
    v1 = 0;
    sub_123240(&v1);
  }
}

Swift::Void __swiftcall PaginatingService.forceRepagination(forAssetID:)(Swift::String forAssetID)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t ObjectType;
  char v7;

  v2 = v1;
  object = forAssetID._object;
  countAndFlagsBits = forAssetID._countAndFlagsBits;
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache));
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v5 + 24))(countAndFlagsBits, object, ObjectType, v5);
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_started) == 1)
  {
    v7 = 0;
    sub_123240(&v7);
  }
}

Swift::Void __swiftcall PaginatingService.invalidateCacheResults(forKey:)(Swift::String forKey)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD **v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19[3];
  _BYTE v20[24];

  object = forKey._object;
  countAndFlagsBits = forKey._countAndFlagsBits;
  v4 = (_QWORD **)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys, v20, 0, 0);
  if ((sub_6CBF8(countAndFlagsBits, (uint64_t)object, *v4) & 1) != 0)
  {
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v5 = type metadata accessor for Logger(0);
    sub_555F0(v5, (uint64_t)qword_3BD350);
    v6 = swift_bridgeObjectRetain_n(object, 2);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v19[0] = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain(object);
      v18 = sub_33524(countAndFlagsBits, (unint64_t)object, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, v19, v9 + 4);
      swift_bridgeObjectRelease_n(object, 3);
      _os_log_impl(&dword_0, v7, v8, "Key '(%s)' already marked invalid", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(object, 2);
    }
  }
  else
  {
    swift_beginAccess(v4, v19, 33, 0);
    v11 = *v4;
    swift_bridgeObjectRetain(object);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    *v4 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v11 = sub_42140(0, v11[2] + 1, 1, v11);
      *v4 = v11;
    }
    v14 = v11[2];
    v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      v11 = sub_42140((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      *v4 = v11;
    }
    v11[2] = v14 + 1;
    v15 = &v11[2 * v14];
    v15[4] = countAndFlagsBits;
    v15[5] = object;
    swift_endAccess(v19);
    v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache));
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 32))(countAndFlagsBits, object, ObjectType, v16);
  }
}

Swift::Void __swiftcall PaginatingService.invalidateCacheResultsForCurrentKey()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  _BYTE v11[24];

  v1 = v0;
  swift_beginAccess(v0 + 32, v11, 0, 0);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  ObjectType = swift_getObjectType(v2);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 184);
  v6 = swift_unknownObjectRetain(v2);
  v7 = v5(ObjectType, v3, v6);
  v9 = v8;
  swift_unknownObjectRelease(v2);
  v10._countAndFlagsBits = v7;
  v10._object = v9;
  PaginatingService.invalidateCacheResults(forKey:)(v10);
  swift_bridgeObjectRelease(v9);
}

Swift::Void __swiftcall PaginatingService.markValidCacheResults(forKey:)(Swift::String forKey)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  _BYTE v8[24];

  object = forKey._object;
  countAndFlagsBits = forKey._countAndFlagsBits;
  v4 = v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys;
  swift_beginAccess(v4, v8, 33, 0);
  swift_bridgeObjectRetain(object);
  sub_134894(v4, countAndFlagsBits, (uint64_t)object);
  v6 = v5;
  swift_bridgeObjectRelease(object);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < v6)
  {
    __break(1u);
  }
  else
  {
    sub_86464(v6, v7);
    swift_endAccess(v8);
  }
}

Swift::Void __swiftcall PaginatingService.markValidCacheResultsForCurrentKey()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];

  v1 = v0;
  swift_beginAccess(v0 + 32, v15, 0, 0);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  ObjectType = swift_getObjectType(v2);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 184);
  v6 = swift_unknownObjectRetain(v2);
  v7 = v5(ObjectType, v3, v6);
  v9 = v8;
  swift_unknownObjectRelease(v2);
  v10 = v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys, v14, 33, 0);
  swift_bridgeObjectRetain(v9);
  sub_134894(v10, v7, v9);
  v12 = v11;
  swift_bridgeObjectRelease(v9);
  v13 = *(_QWORD *)(*(_QWORD *)v10 + 16);
  if (v13 < v12)
  {
    __break(1u);
  }
  else
  {
    sub_86464(v12, v13);
    swift_endAccess(v14);
    swift_bridgeObjectRelease(v9);
  }
}

double sub_123240(char *a1)
{
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v2 = *a1;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_onlyPaginateLiveContent) & 1) != 0)
  {
    v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
    v6 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 8);
    v6(v15, ObjectType, v4);
    v7 = v16;
    v8 = v17;
    sub_472D0(v15, v16);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 64))(v7, v8);
    v10 = sub_A318C(v9);
    swift_bridgeObjectRelease(v9);
    sub_34488(v15);
    v6(v15, ObjectType, v4);
    v11 = v16;
    v12 = v17;
    sub_472D0(v15, v16);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 88))(v11, v12);
    *(_QWORD *)(swift_allocObject(&unk_382B90, 24) + 16) = v13;
    swift_bridgeObjectRetain(v10);
    sub_11B6C8((uint64_t (*)(uint64_t *, uint64_t *))sub_139A68);
    swift_release();
    swift_bridgeObjectRelease(v10);
    v3 = v10;
    sub_34488(v15);
  }
  LOBYTE(v15[0]) = v2;
  sub_123B34((uint64_t)v3, (unsigned __int8 *)v15);
  swift_bridgeObjectRelease(v3);
  return sub_11D010();
}

void sub_1233E0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  void *v11;
  uint64_t ObjectType;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  void *v42;
  void *v43;
  Swift::String v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _BYTE v55[32];

  v4 = v3;
  v7 = *a3;
  swift_beginAccess(v3 + 32, v55, 1, 0);
  v8 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v8);
  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  v10 = swift_getKeyPath(&unk_2ED608);
  LOBYTE(v50) = 0;
  swift_retain();
  static Published.subscript.setter(&v50, v4, KeyPath, v10);
  sub_1237FC();
  v11 = *(void **)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
  if (v11)
  {
    ObjectType = swift_getObjectType(a1);
    v13 = v11;
    v14 = sub_9A8B8(a1, ObjectType, a2);
    objc_msgSend(v14, "applyVariableStylesheetsToWebView:", v13);

  }
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v15 = type metadata accessor for Logger(0);
  sub_555F0(v15, (uint64_t)qword_3BD350);
  v16 = swift_unknownObjectRetain_n(a1, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v45 = v7;
    v20 = swift_slowAlloc(32, -1);
    v50 = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = swift_getObjectType(a1);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(v21, a2);
    v24 = v23;
    v47 = sub_33524(v22, v23, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v19 + 4);
    swift_unknownObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v24);
    _os_log_impl(&dword_0, v17, v18, "Paginating Service, adopted #contentConfig: %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v25 = v20;
    v7 = v45;
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n(a1, 2);
  }
  LOBYTE(v50) = v7;
  v26 = sub_11C63C((char *)&v50);
  v27 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity) = v26;
  swift_retain();
  swift_release();
  sub_11BFD8();
  v28 = *(_QWORD *)(v4 + v27);
  if (v28)
  {
    v50 = v28;
    swift_retain();
    CurrentValueSubject.send(_:)(&v50);
    swift_release();
    swift_release();
    swift_release();
    v29 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFonts);
    v30 = swift_getObjectType(a1);
    v31 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(a2 + 160);
    v32 = swift_bridgeObjectRetain(v29);
    v31(&v50, v30, a2, v32);
    LOWORD(v47) = v50;
    BYTE2(v47) = BYTE2(v50);
    v46 = v51;
    v48[0] = v51;
    v48[1] = v52;
    v48[2] = v53;
    v49 = v54;
    v33 = BookThemeEntity.fontFamily.getter();
    v35 = v34;
    swift_bridgeObjectRelease(v46);
    LOBYTE(v33) = sub_1B2050(v33, v35, v29);
    swift_bridgeObjectRelease(v35);
    swift_bridgeObjectRelease(v29);
    if ((v33 & 1) != 0)
    {
      v36 = *(_QWORD *)(v4 + 32);
      v37 = *(_QWORD *)(v4 + 40);
      v38 = swift_getObjectType(v36);
      v39 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v37 + 184);
      v40 = swift_unknownObjectRetain(v36);
      v41 = v39(v38, v37, v40);
      v43 = v42;
      swift_unknownObjectRelease(v36);
      v44._countAndFlagsBits = v41;
      v44._object = v43;
      PaginatingService.invalidateCacheResults(forKey:)(v44);
      swift_bridgeObjectRelease(v43);
    }
    sub_11CAC4();
  }
  else
  {
    __break(1u);
  }
}

void sub_1237FC()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  double (*v7)(uint64_t, uint64_t, __n128);
  id v8;
  __n128 v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  double v16;
  double v17;
  id v18;
  double MidX;
  id v20;
  _BYTE v21[24];
  CGRect v22;
  CGRect v23;

  v1 = v0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostView);
  if (Strong)
  {
    v3 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
    if (v3)
    {
      v20 = Strong;
      swift_beginAccess(v0 + 32, v21, 0, 0);
      v4 = *(_QWORD *)(v0 + 32);
      v5 = *(_QWORD *)(v1 + 40);
      ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 32));
      v7 = *(double (**)(uint64_t, uint64_t, __n128))(v5 + 48);
      v8 = v3;
      v9 = swift_unknownObjectRetain(v4);
      v10 = v7(ObjectType, v5, v9);
      swift_unknownObjectRelease(v4);
      v12 = *(_QWORD *)(v1 + 32);
      v11 = *(_QWORD *)(v1 + 40);
      v13 = swift_getObjectType(v12);
      v14 = *(void (**)(uint64_t, uint64_t, __n128))(v11 + 48);
      v15 = swift_unknownObjectRetain(v12);
      v14(v13, v11, v15);
      v17 = v16;
      swift_unknownObjectRelease(v12);
      objc_msgSend(v8, "setFrame:", 0.0, 0.0, v10, v17);

      v18 = v8;
      objc_msgSend(v20, "bounds");
      MidX = CGRectGetMidX(v22);
      objc_msgSend(v20, "bounds");
      objc_msgSend(v18, "setCenter:", MidX, CGRectGetMidY(v23));

    }
    else
    {

    }
  }
}

void sub_123980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  double (*v12)(uint64_t, uint64_t, __n128);
  id v13;
  __n128 v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  double v21;
  double v22;
  id v23;
  double MidX;
  uint64_t v25;
  _BYTE v26[24];
  CGRect v27;
  CGRect v28;

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v26, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostView);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = *(void **)(v5 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
      if (v8)
      {
        swift_beginAccess(v5 + 32, &v25, 0, 0);
        v9 = *(_QWORD *)(v5 + 32);
        v10 = *(_QWORD *)(v5 + 40);
        ObjectType = swift_getObjectType(v9);
        v12 = *(double (**)(uint64_t, uint64_t, __n128))(v10 + 48);
        v13 = v8;
        v14 = swift_unknownObjectRetain(v9);
        v15 = v12(ObjectType, v10, v14);
        swift_unknownObjectRelease(v9);
        v16 = *(_QWORD *)(v5 + 32);
        v17 = *(_QWORD *)(v5 + 40);
        v18 = swift_getObjectType(v16);
        v19 = *(void (**)(uint64_t, uint64_t, __n128))(v17 + 48);
        v20 = swift_unknownObjectRetain(v16);
        v19(v18, v17, v20);
        v22 = v21;
        swift_unknownObjectRelease(v16);
        objc_msgSend(v13, "setFrame:", 0.0, 0.0, v15, v22);

        v23 = v13;
        objc_msgSend(v7, "bounds");
        MidX = CGRectGetMidX(v27);
        objc_msgSend(v7, "bounds");
        objc_msgSend(v23, "setCenter:", MidX, CGRectGetMidY(v28));
        swift_release(v5);

      }
      else
      {
        swift_release(v5);

      }
    }
    else
    {
      swift_release(v5);
    }
  }
}

void sub_123B34(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _BYTE v21[24];

  v3 = v2;
  v5 = *a2;
  swift_beginAccess(v2 + 32, v21, 0, 0);
  v6 = *(_QWORD *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  ObjectType = swift_getObjectType(v6);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 184);
  v10 = swift_unknownObjectRetain(v6);
  v11 = v9(ObjectType, v7, v10);
  v13 = v12;
  swift_unknownObjectRelease(v6);
  v14 = swift_allocObject(&unk_3826B0, 24);
  swift_weakInit(v14 + 16, v3);
  if (*(_QWORD *)(a1 + 16))
  {
    v15 = swift_allocObject(&unk_3826B0, 24);
    swift_weakInit(v15 + 16, v3);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(a1);
    sub_134A44(v3, v15, v11, v13, a1, v5, (uint64_t)sub_139BEC, v14);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease_n(v13, 2);
    swift_release();
LABEL_7:
    swift_release();
    return;
  }
  swift_bridgeObjectRelease(v13);
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_555F0(v16, (uint64_t)qword_3BD350);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_0, v18, v19, "No additional ordinals to paginate in current config. We're done", v20, 2u);
    swift_slowDealloc(v20, -1, -1);

    goto LABEL_7;
  }
  swift_release();

}

void sub_123D3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD **__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _BYTE v34[16];
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v37, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
    {
      swift_retain();
      sub_E7364();
      swift_release();
      sub_11CAC4();
      v5 = *(_QWORD *)(v3 + v4);
      if (v5)
      {
        v6 = *(_QWORD *)(v5 + 40);
        v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
        ObjectType = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
        v9 = *(void (**)(_QWORD **__return_ptr, uint64_t, uint64_t, __n128))(v7 + 8);
        v10 = swift_bridgeObjectRetain(v6);
        v9(&v33, ObjectType, v7, v10);
        v11 = v35;
        v12 = v36;
        sub_472D0(&v33, v35);
        v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 72))(v11, v12);
        v14 = sub_A318C(v13);
        swift_bridgeObjectRelease(v13);
        sub_34488(&v33);
        v33 = v14;
        swift_bridgeObjectRetain(v14);
        sub_1C2E28((uint64_t *)&v33);
        swift_bridgeObjectRelease(v14);
        v15 = (uint64_t)v33;
        if ((unint64_t)v6 >> 62)
        {
          if (v6 < 0)
            v32 = v6;
          else
            v32 = v6 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v6);
          v16 = _CocoaArrayWrapper.endIndex.getter(v32);
          swift_bridgeObjectRelease(v6);
        }
        else
        {
          v16 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
        }
        v17 = *(_QWORD *)(v15 + 16);
        if (v16 == v17)
        {
          swift_bridgeObjectRelease(v6);
          swift_release();
          swift_release();
        }
        else
        {
          if (qword_3B57A0 != -1)
            swift_once(&qword_3B57A0, sub_11B838);
          v27 = type metadata accessor for Logger(0);
          sub_555F0(v27, (uint64_t)qword_3BD350);
          swift_bridgeObjectRetain(v6);
          v28 = swift_retain();
          v29 = Logger.logObject.getter(v28);
          v30 = static os_log_type_t.error.getter(v29);
          if (os_log_type_enabled(v29, v30))
          {
            v31 = swift_slowAlloc(22, -1);
            *(_DWORD *)v31 = 134218240;
            swift_bridgeObjectRelease(v6);
            v33 = (_QWORD *)v16;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34, v31 + 4);
            swift_bridgeObjectRelease(v6);
            *(_WORD *)(v31 + 12) = 2048;
            swift_release();
            v33 = (_QWORD *)v17;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, v34, v31 + 14);
            swift_release();
            _os_log_impl(&dword_0, v29, v30, "Mismatch paginated document count to ordinal count! paginatedDocuments %ld != linearDocumentOrdinals %ld", (uint8_t *)v31, 0x16u);
            swift_slowDealloc(v31, -1, -1);
          }
          else
          {
            swift_release_n(v15);
            swift_bridgeObjectRelease_n(v6, 2);
          }
          swift_release();

        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    swift_release();
    __break(1u);
    return;
  }
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_555F0(v18, (uint64_t)qword_3BD350);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.error.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    swift_slowDealloc(v22, -1, -1);
  }

  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.error.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_0, v24, v25, "No signals will be fired that we're done so pagination will never be 'done' and things will be messed up", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

}

double sub_124154(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t Strong;
  double result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  dispatch_group_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 v86;
  uint64_t v87;
  __n128 v88;
  void *v89;
  void *v90;
  char *v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  dispatch_group_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  dispatch_group_t v110;
  int v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t aBlock[3];
  void *v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[4];
  __int128 v121[2];
  char v122[8];
  char v123[8];

  v106 = a8;
  v105 = a7;
  v111 = a6;
  v115 = a5;
  v112 = a1;
  v11 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v11);
  v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v123, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v104 = v14;
    v109 = v13;
    v102 = v21;
    v103 = v19;
    v24 = Strong;
    swift_beginAccess(Strong + 32, v122, 0, 0);
    v26 = *(_QWORD *)(v24 + 32);
    v25 = *(_QWORD *)(v24 + 40);
    v113 = v24;
    ObjectType = swift_getObjectType(v26);
    v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v25 + 184);
    v29 = swift_unknownObjectRetain(v26);
    v30 = v28(ObjectType, v25, v29);
    v32 = v31;
    swift_unknownObjectRelease(v26);
    v33 = v30 == a3 && v32 == a4;
    v34 = a3;
    if (v33)
    {
      swift_bridgeObjectRelease(a4);
      v36 = v18;
    }
    else
    {
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v30, v32, a3, a4, 0);
      swift_bridgeObjectRelease(v32);
      v36 = v18;
      if ((v35 & 1) == 0)
      {
LABEL_35:
        *(_QWORD *)&result = swift_release().n128_u64[0];
        return result;
      }
    }
    v99 = v15;
    v37 = (_QWORD *)(v113 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider);
    v38 = *(_QWORD *)(v113 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
    v39 = swift_getObjectType(*(_QWORD *)(v113 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 8))(aBlock, v39, v38);
    v40 = v117;
    v41 = v118;
    sub_472D0(aBlock, (uint64_t)v117);
    v42 = (*(uint64_t (**)(void *, uint64_t))(v41 + 56))(v40, v41);
    if (v43)
    {
      v44 = v42;
      v45 = v43;
      sub_34488(aBlock);
      v46 = HIBYTE(v45) & 0xF;
      if ((v45 & 0x2000000000000000) == 0)
        v46 = v44 & 0xFFFFFFFFFFFFLL;
      v47 = v115;
      if (v46)
        sub_124AC8(v44, v45, v112);
      swift_bridgeObjectRelease(v45);
    }
    else
    {
      sub_34488(aBlock);
      v47 = v115;
    }
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v48 = type metadata accessor for Logger(0);
    sub_555F0(v48, (uint64_t)qword_3BD350);
    swift_bridgeObjectRetain_n(v47, 2);
    v49 = swift_bridgeObjectRetain_n(a4, 2);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.info.getter();
    v52 = os_log_type_enabled(v50, v51);
    v101 = v17;
    v100 = v36;
    if (v52)
    {
      v53 = swift_slowAlloc(22, -1);
      v54 = swift_slowAlloc(32, -1);
      aBlock[0] = v54;
      *(_DWORD *)v53 = 134218242;
      v55 = v34;
      v56 = *(_QWORD *)(v47 + 16);
      swift_bridgeObjectRelease(v47);
      *(_QWORD *)&v121[0] = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v121, (char *)v121 + 8, v53 + 4);
      swift_bridgeObjectRelease(v47);
      *(_WORD *)(v53 + 12) = 2080;
      swift_bridgeObjectRetain(a4);
      *(_QWORD *)&v121[0] = sub_33524(v55, a4, aBlock);
      v17 = v101;
      v36 = v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v121, (char *)v121 + 8, v53 + 14);
      swift_bridgeObjectRelease_n(a4, 3);
      _os_log_impl(&dword_0, v50, v51, "Adding %ld operations for key: %s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v47, 2);
      swift_bridgeObjectRelease_n(a4, 2);
    }

    v57 = v104;
    v110 = dispatch_group_create();
    v58 = v37[1];
    v59 = swift_getObjectType(*v37);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v58 + 8))(aBlock, v59, v58);
    v60 = v117;
    v61 = v118;
    sub_472D0(aBlock, (uint64_t)v117);
    v62 = (*(uint64_t (**)(void *, uint64_t))(v61 + 64))(v60, v61);
    swift_bridgeObjectRetain(v47);
    v63 = sub_134698(v62, v47);
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v62);
    sub_34488(aBlock);
    v64 = v63[2];
    if (!v64)
    {
      swift_bridgeObjectRelease(v63);
LABEL_34:
      sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
      v89 = (void *)static OS_dispatch_queue.main.getter(v88);
      v118 = v105;
      v119 = v106;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_525B8;
      v117 = &unk_382D38;
      v90 = _Block_copy(aBlock);
      swift_retain();
      v91 = v102;
      static DispatchQoS.unspecified.getter(v92);
      *(_QWORD *)&v121[0] = _swiftEmptyArrayStorage;
      v93 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v94 = sub_319AC(&qword_3B96F0);
      v95 = sub_3DCC0((unint64_t *)&qword_3B8510, &qword_3B96F0, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(v121, v94, v95, v57, v93);
      v96 = v110;
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v91, v17, v89, v90);
      _Block_release(v90);

      swift_release();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v17, v57);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v91, v36);
      goto LABEL_35;
    }
    v108 = type metadata accessor for MainActor(0);
    v98 = v63;
    v65 = (uint64_t)(v63 + 4);
    v107 = (char *)&type metadata for () + 8;
    v66 = (uint64_t)v109;
    while (1)
    {
      v115 = v64;
      sub_49F1C(v65, (uint64_t)aBlock);
      v68 = v110;
      dispatch_group_enter(v110);
      v69 = v113;
      v70 = *(_QWORD *)(v113 + 32);
      v114 = *(_QWORD *)(v113 + 40);
      v71 = swift_allocObject(&unk_382CD0, 24);
      *(_QWORD *)(v71 + 16) = v68;
      v72 = type metadata accessor for TaskPriority(0);
      v73 = *(_QWORD *)(v72 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v66, 1, 1, v72);
      sub_49F1C((uint64_t)aBlock, (uint64_t)v121);
      swift_unknownObjectRetain_n(v70, 2);
      v74 = v68;
      swift_retain();
      v75 = v112;
      v76 = swift_retain();
      v77 = static MainActor.shared.getter(v76);
      v78 = swift_allocObject(&unk_382CF8, 144);
      *(_QWORD *)(v78 + 16) = v77;
      *(_QWORD *)(v78 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v78 + 32) = v69;
      sub_3F1CC(v121, v78 + 40);
      *(_QWORD *)(v78 + 80) = v75;
      *(_QWORD *)(v78 + 88) = v70;
      *(_QWORD *)(v78 + 96) = v114;
      *(_BYTE *)(v78 + 104) = 0;
      *(_QWORD *)(v78 + 112) = 0;
      *(_BYTE *)(v78 + 120) = v111;
      *(_QWORD *)(v78 + 128) = sub_139CF0;
      *(_QWORD *)(v78 + 136) = v71;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v66, 1, v72) == 1)
      {
        sub_52128(v66, &qword_3B8450);
        v79 = 0;
        v80 = *(_QWORD *)(v78 + 16);
        if (!v80)
          goto LABEL_29;
      }
      else
      {
        v86 = TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v66, v72);
        v79 = v86;
        v80 = *(_QWORD *)(v78 + 16);
        if (!v80)
        {
LABEL_29:
          v83 = 0;
          v85 = 0;
          goto LABEL_30;
        }
      }
      v81 = *(_QWORD *)(v78 + 24);
      v82 = swift_getObjectType(v80);
      swift_unknownObjectRetain(v80);
      v83 = dispatch thunk of Actor.unownedExecutor.getter(v82, v81);
      v85 = v84;
      swift_unknownObjectRelease(v80);
LABEL_30:
      v87 = swift_allocObject(&unk_382D20, 32);
      *(_QWORD *)(v87 + 16) = &unk_3BD988;
      *(_QWORD *)(v87 + 24) = v78;
      if (v85 | v83)
      {
        v120[0] = 0;
        v120[1] = 0;
        v67 = v120;
        v120[2] = v83;
        v120[3] = v85;
      }
      else
      {
        v67 = 0;
      }
      swift_task_create(v79 | 0x1C00, v67, v107, &unk_3B8520, v87);
      swift_release();
      swift_unknownObjectRelease(v70);
      swift_release();
      sub_34488(aBlock);
      v65 += 40;
      v64 = v115 - 1;
      if (v115 == 1)
      {
        swift_bridgeObjectRelease(v98);
        v57 = v104;
        v17 = v101;
        v36 = v100;
        goto LABEL_34;
      }
    }
  }
  return result;
}

uint64_t sub_124AC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (**v13)(_QWORD, _QWORD);
  uint64_t ObjectType;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void ***__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double (*v37)(uint64_t, uint64_t, __n128);
  NSObject *v38;
  __n128 v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double (*v46)(uint64_t, uint64_t, __n128);
  __n128 v47;
  double v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  int *v54;
  unint64_t v55;
  int *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t Strong;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  NSObject *v68;
  id v69;
  NSObject *v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  uint64_t v75;
  void **v76;
  void **v77;
  id v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  unint64_t v85;
  NSObject *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  id v93;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  int v103;
  uint64_t (*v104)();
  _QWORD *v105;
  uint64_t v106;
  uint64_t (*v107)(uint64_t);
  uint64_t v108;
  int *v109;
  id v110;
  NSObject *v111;
  uint64_t v112;
  _BYTE v113[24];
  void **aBlock;
  uint64_t v115;
  uint64_t (*v116)(uint64_t);
  void *v117;
  uint64_t (*v118)();
  uint64_t v119;
  unsigned __int8 v120;
  uint64_t v121;
  unsigned __int8 v122;
  uint64_t v123;
  uint64_t v124;

  v4 = v3;
  v110 = a3;
  v109 = (int *)type metadata accessor for PaginationOperation.Parameters(0);
  __chkstk_darwin(v109);
  v108 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v95 - v9;
  v111 = type metadata accessor for DocumentEntity();
  v11 = swift_allocObject(v111, 89);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_OWORD *)(v11 + 32) = xmmword_2ED580;
  *(_QWORD *)(v11 + 48) = 6516596;
  *(_QWORD *)(v11 + 56) = 0xE300000000000000;
  *(_OWORD *)(v11 + 64) = xmmword_2ED590;
  *(_QWORD *)(v11 + 80) = 0x80000000002CC770;
  *(_BYTE *)(v11 + 88) = 1;
  swift_beginAccess(v4 + 32, v113, 0, 0);
  v12 = *(_QWORD *)(v4 + 32);
  v13 = *(uint64_t (***)(_QWORD, _QWORD))(v4 + 40);
  ObjectType = swift_getObjectType(v12);
  swift_bridgeObjectRetain(a2);
  swift_unknownObjectRetain(v12);
  sub_12A350(v15, ObjectType, v13, (uint64_t)&aBlock);
  swift_unknownObjectRelease(v12);
  v16 = aBlock;
  v17 = v115;
  v107 = v116;
  LODWORD(v106) = v117;
  LODWORD(v105) = BYTE1(v117);
  v104 = v118;
  v18 = v119;
  v103 = v120;
  v19 = v121;
  v102 = v122;
  v101 = v123;
  v100 = v124;
  v21 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider);
  v20 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  v22 = swift_getObjectType(v21);
  v23 = *(void (**)(void ***__return_ptr, uint64_t, uint64_t))(v20 + 8);
  v99 = v20;
  v23(&aBlock, v22, v20);
  v24 = (uint64_t)v117;
  v25 = (uint64_t)v118;
  v26 = sub_472D0(&aBlock, (uint64_t)v117);
  sub_34450(0, &qword_3BD418, off_3764C0);
  v112 = v11;
  sub_642E4((uint64_t)v26, (uint64_t)&v112, v24, (uint64_t)v111, v25, (uint64_t)&protocol witness table for DocumentEntity);
  v98 = v27;
  sub_34488(&aBlock);
  v29 = *(_QWORD *)(v4 + 32);
  v28 = *(_QWORD *)(v4 + 40);
  v30 = swift_getObjectType(v29);
  swift_unknownObjectRetain(v29);
  v97 = (id)PaginatingService.cleanupJSOptions<A>(layoutProvider:)(v31, v30, v28);
  v32 = swift_unknownObjectRelease(v29);
  ((void (*)(uint64_t, uint64_t, __n128))v23)(v22, v20, v32);
  v96 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_stylesheetProvider)
                  + OBJC_IVAR____TtC8BookEPUB18StylesheetProvider__styleManager);
  v33 = v96;
  v34 = *(_QWORD *)(v4 + 32);
  v35 = *(_QWORD *)(v4 + 40);
  v36 = swift_getObjectType(v34);
  v37 = *(double (**)(uint64_t, uint64_t, __n128))(v35 + 48);
  v38 = v110;
  swift_unknownObjectRetain(v33);
  v39 = swift_unknownObjectRetain(v34);
  v40 = v37(v36, v35, v39);
  v42 = v41;
  swift_unknownObjectRelease(v34);
  v43 = *(_QWORD *)(v4 + 32);
  v44 = *(_QWORD *)(v4 + 40);
  v45 = swift_getObjectType(v43);
  v46 = *(double (**)(uint64_t, uint64_t, __n128))(v44 + 56);
  v47 = swift_unknownObjectRetain(v43);
  v48 = v46(v45, v44, v47);
  v49 = v4;
  v50 = v48;
  v52 = v51;
  swift_unknownObjectRelease(v43);
  *((_QWORD *)v10 + 14) = v111;
  *((_QWORD *)v10 + 15) = &protocol witness table for DocumentEntity;
  *((_QWORD *)v10 + 11) = v11;
  v110 = (id)v11;
  swift_retain();
  v53 = (uint64_t (*)(uint64_t))v98;
  v54 = (int *)v97;
  v55 = sub_388B0((uint64_t)_swiftEmptyArrayStorage);
  *((_QWORD *)v10 + 31) = 0;
  v56 = v109;
  v57 = &v10[v109[22]];
  v58 = sub_319AC(&qword_3BE170);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
  v111 = v38;
  v59 = v96;
  *((_QWORD *)v10 + 5) = v38;
  *((_QWORD *)v10 + 6) = v59;
  *((double *)v10 + 7) = v40;
  *((_QWORD *)v10 + 8) = v42;
  *((double *)v10 + 9) = v50;
  *((_QWORD *)v10 + 10) = v52;
  *((_QWORD *)v10 + 16) = v16;
  *((_QWORD *)v10 + 17) = v17;
  *((_QWORD *)v10 + 18) = v107;
  v10[152] = v106;
  v10[153] = (char)v105;
  *((_QWORD *)v10 + 20) = v104;
  *((_QWORD *)v10 + 21) = v18;
  v10[176] = v103;
  *((_QWORD *)v10 + 23) = v19;
  v10[192] = v102;
  v60 = v100;
  *((_QWORD *)v10 + 25) = v101;
  *((_QWORD *)v10 + 26) = v60;
  *((_QWORD *)v10 + 27) = 501;
  *((_QWORD *)v10 + 28) = v53;
  v107 = v53;
  v61 = v56[23];
  v109 = v54;
  *(_QWORD *)&v10[v61] = v54;
  *((_WORD *)v10 + 116) = 0;
  v10[234] = 0;
  *((_QWORD *)v10 + 30) = 0;
  *((_QWORD *)v10 + 32) = 0;
  v10[264] = 0;
  *((_QWORD *)v10 + 34) = v55;
  *((_QWORD *)v10 + 35) = _swiftEmptyArrayStorage;
  v62 = v108;
  sub_137328((uint64_t)v10, v108, type metadata accessor for PaginationOperation.Parameters);
  Strong = swift_unknownObjectWeakLoadStrong(v49 + 16);
  v106 = v49;
  v64 = *(_QWORD *)(v49 + 24);
  objc_allocWithZone((Class)type metadata accessor for PaginationOperation(0));
  swift_unknownObjectRetain(v21);
  v65 = sub_156DF8(v62, Strong, v64, v21, v99, 0);
  swift_unknownObjectRelease(v21);
  swift_unknownObjectRelease(Strong);
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v66 = type metadata accessor for Logger(0);
  sub_555F0(v66, (uint64_t)qword_3BD350);
  v67 = v65;
  v68 = v111;
  v69 = v67;
  v70 = v68;
  v71 = v69;
  v72 = Logger.logObject.getter(v71);
  v73 = static os_log_type_t.debug.getter();
  v74 = v73;
  v111 = v72;
  if (os_log_type_enabled(v72, v73))
  {
    v75 = swift_slowAlloc(32, -1);
    v105 = (_QWORD *)swift_slowAlloc(8, -1);
    v76 = (void **)swift_slowAlloc(64, -1);
    LODWORD(v108) = v74;
    v77 = v76;
    aBlock = v76;
    *(_DWORD *)v75 = 136315650;
    v78 = -[NSObject be_identifier](v70, "be_identifier");
    v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
    v81 = v80;

    v112 = sub_33524(v79, v81, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113, v75 + 4);
    swift_bridgeObjectRelease(v81);

    *(_WORD *)(v75 + 12) = 2112;
    v112 = (uint64_t)v71;
    v82 = (char *)v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113, v75 + 14);
    v83 = v105;
    *v105 = v71;

    *(_WORD *)(v75 + 22) = 2080;
    v84 = *(_QWORD *)&v82[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 200];
    v85 = *(_QWORD *)&v82[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 208];
    swift_bridgeObjectRetain(v85);
    v112 = sub_33524(v84, v85, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, v113, v75 + 24);
    swift_bridgeObjectRelease(v85);

    v86 = v111;
    _os_log_impl(&dword_0, v111, (os_log_type_t)v108, "Paginate TOC using webView:%s op:%@  #contentConfig:%s", (uint8_t *)v75, 0x20u);
    v87 = sub_319AC(&qword_3B8A70);
    swift_arrayDestroy(v83, 1, v87);
    swift_slowDealloc(v83, -1, -1);
    swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v77, -1, -1);
    swift_slowDealloc(v75, -1, -1);

  }
  else
  {

  }
  v88 = swift_allocObject(&unk_3826B0, 24);
  v89 = v106;
  swift_weakInit(v88 + 16, v106);
  v90 = swift_allocObject(&unk_382D70, 32);
  *(_QWORD *)(v90 + 16) = v71;
  *(_QWORD *)(v90 + 24) = v88;
  v91 = swift_allocObject(&unk_382D98, 32);
  *(_QWORD *)(v91 + 16) = sub_139D7C;
  *(_QWORD *)(v91 + 24) = v90;
  v118 = sub_139D84;
  v119 = v91;
  aBlock = _NSConcreteStackBlock;
  v115 = 1107296256;
  v116 = sub_525B8;
  v117 = &unk_382DB0;
  v92 = _Block_copy(&aBlock);
  v93 = v71;
  swift_retain();
  sub_899C8((uint64_t)sub_139D84, v91);
  objc_msgSend(v93, "setCompletionBlock:", v92, swift_release().n128_f64[0]);
  _Block_release(v92);
  swift_release();

  objc_msgSend(*(id *)(v89 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationQueue), "addOperation:", v93);
  swift_release();

  swift_release();
  return sub_BA58C((uint64_t)v10, type metadata accessor for PaginationOperation.Parameters);
}

double PaginatingService.paginate(document:using:with:forDisplay:queuePriority:cacheStrategy:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, char *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double result;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __int128 v30[2];

  v10 = v9;
  v29 = a6;
  v28 = a5;
  v17 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a7;
  v21 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 1, 1, v21);
  sub_49F1C(a1, (uint64_t)v30);
  type metadata accessor for MainActor(0);
  swift_unknownObjectRetain(a3);
  swift_retain();
  v22 = a2;
  v23 = sub_899C8(a8, a9);
  v24 = static MainActor.shared.getter(v23);
  v25 = swift_allocObject(&unk_382750, 144);
  *(_QWORD *)(v25 + 16) = v24;
  *(_QWORD *)(v25 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v25 + 32) = v10;
  sub_3F1CC(v30, v25 + 40);
  *(_QWORD *)(v25 + 80) = v22;
  *(_QWORD *)(v25 + 88) = a3;
  *(_QWORD *)(v25 + 96) = a4;
  *(_BYTE *)(v25 + 104) = v28;
  *(_QWORD *)(v25 + 112) = v29;
  *(_BYTE *)(v25 + 120) = v20;
  *(_QWORD *)(v25 + 128) = a8;
  *(_QWORD *)(v25 + 136) = a9;
  sub_67B40((uint64_t)v19, (uint64_t)&unk_3BD440, v25);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1255E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v8 + 64) = v16;
  *(_QWORD *)(v8 + 72) = v17;
  *(_BYTE *)(v8 + 89) = v15;
  *(_BYTE *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 56) = v14;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a5;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 80) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_125678, v10, v11);
}

uint64_t sub_125678()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  unsigned __int8 v3;
  uint64_t (**v4)(_QWORD, _QWORD);
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  char v10;
  uint64_t v11;
  unsigned __int8 v12;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(NSObject **)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 64);
  v3 = *(_BYTE *)(v0 + 89);
  v10 = *(_BYTE *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(uint64_t (***)(_QWORD, _QWORD))(v0 + 48);
  v7 = *(_QWORD **)(v0 + 24);
  v6 = *(void **)(v0 + 32);
  swift_release();
  v8 = objc_autoreleasePoolPush();
  v12 = v3;
  sub_125724(v7, v6, v5, v4, v10, v2, &v12, v11, v1);
  objc_autoreleasePoolPop(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_125724(_QWORD *a1, void *a2, uint64_t a3, uint64_t (**a4)(_QWORD, _QWORD), char a5, NSObject *a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  int v12;
  uint64_t v13;
  uint64_t (**v14)(_QWORD, _QWORD);
  _QWORD **v15;
  _QWORD *v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, _QWORD);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD **v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t (**)(_QWORD, _QWORD), __n128);
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, _QWORD, void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  id v52;
  double result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t type;
  os_log_type_t typea[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[24];
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[24];
  _BYTE v74[32];

  v10 = v9;
  v12 = *a7;
  if (a3)
  {
    v13 = a3;
    v14 = a4;
  }
  else
  {
    swift_beginAccess(v9 + 32, v74, 0, 0);
    v13 = *(_QWORD *)(v9 + 32);
    v14 = *(uint64_t (***)(_QWORD, _QWORD))(v9 + 40);
    swift_unknownObjectRetain(v13);
  }
  if (v12 == 1)
  {
    swift_unknownObjectRetain(a3);
  }
  else
  {
    v15 = (_QWORD **)(v9 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys);
    swift_beginAccess(v10 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys, v73, 0, 0);
    v16 = *v15;
    ObjectType = swift_getObjectType(v13);
    v18 = v14[23];
    swift_unknownObjectRetain(a3);
    v19 = swift_bridgeObjectRetain(v16);
    v20 = ((uint64_t (*)(uint64_t, uint64_t (**)(_QWORD, _QWORD), __n128))v18)(ObjectType, v14, v19);
    v22 = v21;
    LOBYTE(ObjectType) = sub_6CBF8(v20, v21, v16);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v16);
    if ((ObjectType & 1) == 0)
    {
      v44 = swift_getObjectType(v13);
      v45 = v18(v44, v14);
      *(_QWORD *)typea = v46;
      v60 = v45;
      v54 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache + 8);
      v56 = swift_getObjectType(*(_QWORD *)(v10 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache));
      v47 = a1[3];
      v48 = a1[4];
      sub_472D0(a1, v47);
      v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
      v49 = swift_allocObject(&unk_3826B0, 24);
      swift_weakInit(v49 + 16);
      sub_49F1C((uint64_t)a1, (uint64_t)&v70);
      v50 = swift_allocObject(&unk_382B40, 145);
      *(_QWORD *)(v50 + 16) = v49;
      *(_QWORD *)(v50 + 24) = a8;
      *(_QWORD *)(v50 + 32) = a9;
      sub_3F1CC(&v70, v50 + 40);
      *(_QWORD *)(v50 + 80) = a2;
      *(_BYTE *)(v50 + 88) = 0;
      *(_QWORD *)(v50 + 96) = v13;
      *(_QWORD *)(v50 + 104) = v14;
      *(_QWORD *)(v50 + 112) = a3;
      *(_QWORD *)(v50 + 120) = a4;
      *(_BYTE *)(v50 + 128) = a5 & 1;
      *(_QWORD *)(v50 + 136) = a6;
      *(_BYTE *)(v50 + 144) = v12;
      v51 = *(void (**)(uint64_t, uint64_t, _QWORD, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v54 + 8);
      swift_unknownObjectRetain(a3);
      swift_unknownObjectRetain(v13);
      swift_retain();
      sub_899C8(a8, a9);
      v52 = a2;
      v51(v55, v60, *(_QWORD *)typea, sub_139988, v50, v56, v54);
      swift_bridgeObjectRelease(*(_QWORD *)typea);
      swift_unknownObjectRelease(v13);
      swift_release();
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    }
  }
  v23 = (_QWORD **)(v10 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys);
  swift_beginAccess(v10 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys, v69, 0, 0);
  v24 = *v23;
  v25 = swift_getObjectType(v13);
  v26 = (uint64_t (*)(uint64_t, uint64_t (**)(_QWORD, _QWORD), __n128))v14[23];
  v27 = swift_bridgeObjectRetain(v24);
  v28 = v26(v25, v14, v27);
  v30 = v29;
  v31 = sub_6CBF8(v28, v29, v24);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v24);
  if ((v31 & 1) != 0)
  {
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v32 = type metadata accessor for Logger(0);
    sub_555F0(v32, (uint64_t)qword_3BD350);
    sub_49F1C((uint64_t)a1, (uint64_t)&v70);
    v33 = swift_unknownObjectRetain_n(v13, 2);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc(22, -1);
      v59 = swift_slowAlloc(32, -1);
      v68 = v59;
      *(_DWORD *)v36 = 134349314;
      v38 = v71;
      v37 = v72;
      sub_472D0(&v70, v71);
      type = v35;
      v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 16))(v38, v37);
      sub_34488(&v70);
      v67 = v39;
      v40 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v36 + 4);
      *(_WORD *)(v36 + 12) = 2082;
      v41 = ((uint64_t (*)(uint64_t, uint64_t (**)(_QWORD, _QWORD), __n128))v14[24])(v25, v14, v40);
      v43 = v42;
      v67 = sub_33524(v41, v42, &v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v67, &v68, v36 + 14);
      swift_bridgeObjectRelease(v43);
      swift_unknownObjectRelease_n(v13, 2);
      _os_log_impl(&dword_0, v34, type, "Ignoring #staleCache results for ordinal:%{public}ld key:%{public}s ", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v36, -1, -1);
    }
    else
    {
      sub_34488(&v70);
      swift_unknownObjectRelease_n(v13, 2);
    }

  }
  sub_11E168(a1, a2, a3, a4, a5 & 1, a6, a8, a9);
  *(_QWORD *)&result = swift_unknownObjectRelease(v13).n128_u64[0];
  return result;
}

void sub_125C20(uint64_t a1, uint64_t a2, _QWORD *a3, void *a4, uint64_t a5, uint64_t (**a6)(_QWORD, _QWORD), int a7, NSObject *a8, unsigned __int8 a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)(_QWORD, _QWORD);
  int v21;
  NSObject *v22;
  unsigned __int8 v23;

  v22 = a8;
  v21 = a7;
  v19 = a5;
  v20 = a6;
  v12 = sub_319AC(&qword_3BD978);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = objc_autoreleasePoolPush();
  v23 = a9;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = swift_allocObject(&unk_382BE0, v16 + v14);
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  sub_125724(a3, a4, v19, v20, v21, v22, &v23, (uint64_t)sub_139B80, v17);
  swift_release();
  objc_autoreleasePoolPop(v15);
}

void sub_125D54(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4, _QWORD *a5, void *a6, int a7, uint64_t a8, uint64_t (**a9)(_QWORD, _QWORD), uint64_t a10, uint64_t (**a11)(_QWORD, _QWORD), unsigned __int8 a12, NSObject *a13, char a14)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t ObjectType;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void (*v81)(_QWORD, __n128);
  NSObject *v82;
  uint64_t (**v83)(_QWORD, _QWORD);
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t *);
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t KeyPath;
  uint64_t v91;
  uint64_t *v92;
  os_log_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (**v96)(_QWORD, _QWORD);
  NSObject *v97;
  int v98;
  uint64_t v99;
  void *v100;
  void (*v101)(_QWORD *, __n128);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;
  char v111[24];
  char v112[32];

  LODWORD(v104) = a7;
  v21 = type metadata accessor for Logger(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = *(_QWORD *)a1;
  v25 = *(_BYTE *)(a1 + 8);
  a2 += 16;
  swift_beginAccess(a2, v112, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v27 = Strong;
    v103 = a8;
    if ((v25 & 1) != 0)
    {
      if (a14 == 2)
      {
        if (a3)
        {
          LOBYTE(v108[0]) = 0;
          a3(v108);
        }
      }
      else
      {
        sub_11E168(a5, a6, a10, a11, a12 & 1, a13, (uint64_t)a3, a4);
      }
      goto LABEL_40;
    }
    v98 = a12;
    v99 = a10;
    v96 = a11;
    v97 = a13;
    v100 = a6;
    v101 = (void (*)(_QWORD *, __n128))a3;
    v102 = a4;
    v95 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
    if (*(_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
    {
      v32 = a5[3];
      v33 = a5[4];
      sub_472D0(a5, v32);
      v34 = *(uint64_t (**)(uint64_t, uint64_t))(v33 + 16);
      v35 = v105;
      sub_1399E4(v105, 0);
      sub_1399E4(v35, 0);
      swift_retain();
      v36 = v34(v32, v33);
      v37 = BookPaginationEntity.document(for:)(v36);
      v38 = swift_release();
      if (!v37)
      {
        if (a14 == 2)
        {
          v64 = v105;
          if (v101)
          {
            LOBYTE(v108[0]) = 0;
            v101(v108, v38);
          }
        }
        else
        {
          sub_11E168(a5, v100, v99, v96, v98 & 1, v97, (uint64_t)v101, v102);
          v64 = v105;
        }
        sub_1052DC(v64, 0);
        v80 = v64;
        goto LABEL_39;
      }
      sub_AECE0(v35);
      swift_retain();
      v39 = sub_319AC((uint64_t *)&unk_3B8EA0);
      v40 = sub_3DCC0((unint64_t *)&unk_3B8CC0, (uint64_t *)&unk_3B8EA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
      Subject<>.send()(v39, v40);
      swift_release();
      v41 = *(_QWORD *)(v37 + 16);
      v108[1] = 0;
      v108[2] = 0;
      v108[0] = v41;
      LOBYTE(v109) = 2;
      PassthroughSubject.send(_:)(v108);
      v42 = (double *)(v35 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
      swift_beginAccess(v35 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize, v111, 0, 0);
      v43 = v42[1];
      v44 = v102;
      v45 = v35;
      v46 = v100;
      if (*v42 != 0.0 || v43 != 0.0)
      {
        v47 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGSize:", *v42, v43);
        objc_msgSend(v46, "setBe_estimatedContentSizeValue:", v47);

      }
      if ((sub_126754(v45) & 1) != 0)
      {
        v48 = v103;
        if (qword_3B57A0 != -1)
          swift_once(&qword_3B57A0, sub_11B838);
        sub_555F0(v21, (uint64_t)qword_3BD350);
        sub_49F1C((uint64_t)a5, (uint64_t)v108);
        v49 = swift_unknownObjectRetain_n(v48, 2);
        v50 = Logger.logObject.getter(v49);
        v51 = static os_log_type_t.debug.getter();
        v52 = v51;
        if (os_log_type_enabled(v50, v51))
        {
          v53 = swift_slowAlloc(34, -1);
          LODWORD(v95) = v52;
          v54 = v53;
          v94 = swift_slowAlloc(32, -1);
          v107 = v94;
          *(_DWORD *)v54 = 134218754;
          v55 = v109;
          v56 = v110;
          sub_472D0(v108, v109);
          v57 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 16);
          v93 = v50;
          v58 = v57(v55, v56);
          sub_34488(v108);
          v106 = v58;
          v92 = &v107;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v54 + 4);
          *(_WORD *)(v54 + 12) = 1024;
          LOBYTE(v55) = v104;
          LODWORD(v106) = v104 & 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, (char *)&v106 + 4, v54 + 14);
          *(_WORD *)(v54 + 18) = 1024;
          LODWORD(v106) = (v55 & 1) == 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, (char *)&v106 + 4, v54 + 20);
          *(_WORD *)(v54 + 24) = 2080;
          ObjectType = swift_getObjectType(v48);
          v60 = a9[23](ObjectType, a9);
          v62 = v61;
          v106 = sub_33524(v60, v61, &v107);
          v44 = v102;
          v46 = v100;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v92, v54 + 26);
          swift_bridgeObjectRelease(v62);
          swift_unknownObjectRelease_n(v48, 2);
          v50 = v93;
          _os_log_impl(&dword_0, v93, (os_log_type_t)v95, "Found cache for %ld -- paginating because: ignoreCache:%{BOOL}d, hasUncachedData:%{BOOL}d pagination #contentConfig: %s", (uint8_t *)v54, 0x22u);
          v63 = v94;
          swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v63, -1, -1);
          swift_slowDealloc(v54, -1, -1);
        }
        else
        {
          sub_34488(v108);
          swift_unknownObjectRelease_n(v48, 2);
        }

        v81 = (void (*)(_QWORD, __n128))v101;
        v82 = v97;
        v83 = v96;
        v84 = swift_allocObject(&unk_382B68, 32);
        *(_QWORD *)(v84 + 16) = v81;
        *(_QWORD *)(v84 + 24) = v44;
        sub_899C8((uint64_t)v81, v44);
        sub_11E168(a5, v46, v99, v83, v98 & 1, v82, (uint64_t)sub_139A1C, v84);
        v85 = v105;
        sub_1052DC(v105, 0);
        swift_release();
        sub_1052DC(v85, 0);
        swift_release();
        goto LABEL_40;
      }
      v100 = a9;
      v104 = v37;
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      sub_555F0(v21, (uint64_t)qword_3BD350);
      sub_49F1C((uint64_t)a5, (uint64_t)v108);
      v65 = v103;
      v66 = swift_unknownObjectRetain_n(v103, 2);
      v67 = Logger.logObject.getter(v66);
      v68 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc(22, -1);
        v70 = swift_slowAlloc(32, -1);
        v107 = v70;
        *(_DWORD *)v69 = 134218242;
        v71 = v109;
        v72 = v110;
        sub_472D0(v108, v109);
        v73 = *(uint64_t (**)(uint64_t, uint64_t))(v72 + 16);
        v74 = v72;
        v45 = v105;
        v75 = v73(v71, v74);
        sub_34488(v108);
        v106 = v75;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v69 + 4);
        *(_WORD *)(v69 + 12) = 2080;
        v76 = swift_getObjectType(v65);
        v77 = (*((uint64_t (**)(uint64_t))v100 + 23))(v76);
        v79 = v78;
        v106 = sub_33524(v77, v78, &v107);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, &v107, v69 + 14);
        swift_bridgeObjectRelease(v79);
        swift_unknownObjectRelease_n(v65, 2);
        _os_log_impl(&dword_0, v67, v68, "Found cached data for %ld -- skipping pagination #contentConfig: %s", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v70, -1, -1);
        swift_slowDealloc(v69, -1, -1);
      }
      else
      {
        sub_34488(v108);
        swift_unknownObjectRelease_n(v65, 2);
      }

      v86 = (void (*)(uint64_t *))v101;
      v87 = v95;
      v88 = v104;
      v89 = (_BYTE *)(v104 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed);
      swift_beginAccess(v104 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed, v108, 1, 0);
      *v89 = 0;
      KeyPath = swift_getKeyPath(&unk_2ED6E8);
      v91 = swift_getKeyPath(&unk_2ED710);
      LOBYTE(v107) = 1;
      swift_retain();
      static Published.subscript.setter(&v107, v88, KeyPath, v91);
      if (*(_QWORD *)(v27 + v87))
      {
        swift_retain();
        sub_E7364();
        swift_release();
        sub_11CAC4();
        if (v86)
        {
          LOBYTE(v107) = 0;
          v86(&v107);
        }
        sub_1052DC(v45, 0);
        swift_release();
        v80 = v45;
LABEL_39:
        sub_1052DC(v80, 0);
LABEL_40:
        swift_release();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
  if (qword_3B56B8 != -1)
    swift_once(&qword_3B56B8, sub_5EFF4);
  v28 = Logger.init(_:)((id)qword_3CEEF8);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.error.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    swift_slowDealloc(v31, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (a3)
  {
    LOBYTE(v108[0]) = 0;
    a3(v108);
  }
}

uint64_t sub_126754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  void (*v30)(char *, uint64_t);
  char v31;
  uint64_t v32;
  __n128 v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  _BYTE v38[24];
  _BYTE v39[24];

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - v11;
  v13 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v36 - v17;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 16);
  if (Strong)
  {
    v20 = Strong;
    v36 = v1;
    v37 = v6;
    v21 = a1;
    v22 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(ObjectType, v22);
    swift_unknownObjectRelease(v20);
    v24 = v21;
    v25 = sub_3B140(*(_QWORD *)(v21 + 16));
    v26 = swift_release();
    if (v25)
    {
      sub_39120((uint64_t)v18, v26);
      swift_release();
      v27 = 0;
    }
    else
    {
      v27 = 1;
    }
    v6 = v37;
    a1 = v24;
  }
  else
  {
    v27 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v18, v27, 1, v3);
  sub_3F238((uint64_t)v18, (uint64_t)v15, &qword_3BFBB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v15, 1, v3) == 1)
  {
    sub_52128((uint64_t)v15, &qword_3BFBB0);
LABEL_11:
    sub_12D730(*(_QWORD *)(a1 + 16), (uint64_t)v6);
    v32 = a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_latestModifiedHistoryDate;
    v33 = swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_latestModifiedHistoryDate, v39, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v9, v32, v3, v33);
    v31 = static Date.< infix(_:_:)(v9, v6);
    v34 = *(void (**)(char *, uint64_t))(v4 + 8);
    v34(v9, v3);
    v34(v6, v3);
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v15, v3);
  v28 = a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_latestModifiedAnnotationDate;
  v29 = swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_latestModifiedAnnotationDate, v38, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v9, v28, v3, v29);
  LOBYTE(v28) = static Date.< infix(_:_:)(v9, v12);
  v30 = *(void (**)(char *, uint64_t))(v4 + 8);
  v30(v9, v3);
  v30(v12, v3);
  if ((v28 & 1) == 0)
    goto LABEL_11;
  v31 = 1;
LABEL_12:
  sub_52128((uint64_t)v18, &qword_3BFBB0);
  return v31 & 1;
}

uint64_t sub_126A44(void *a1, uint64_t a2, uint64_t (**a3)(_QWORD, _QWORD), _QWORD *a4, int a5, int a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  Swift::String v34;
  Swift::String v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  NSString v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t *v91;
  _QWORD *v92;
  uint64_t *v93;
  _QWORD *v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (**v104)(_QWORD, _QWORD);
  double (*v105)(uint64_t, uint64_t (**)(_QWORD, _QWORD), __n128);
  id v106;
  __n128 v107;
  uint64_t v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t Strong;
  uint64_t v124;
  id v125;
  uint64_t result;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  unsigned int v131;
  uint64_t v132;
  char *v133;
  id v134;
  id v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  int v141;
  uint64_t v142;
  int v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t (**v147)(_QWORD, _QWORD);
  uint64_t v148;
  int v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  unsigned __int8 v163;
  unsigned __int8 v164;
  uint64_t v165;
  uint64_t v166;
  unsigned __int8 v167;
  uint64_t v168;
  unsigned __int8 v169;
  uint64_t v170;
  uint64_t v171;

  v153 = a7;
  v150 = a6;
  v149 = a5;
  v137 = a1;
  v148 = type metadata accessor for PaginationOperation.Parameters(0);
  __chkstk_darwin(v148);
  v151 = (uint64_t)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v133 = (char *)&v127 - v13;
  v156 = type metadata accessor for NSScanner.NumberRepresentation(0);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType(a2);
  sub_12A350(a2, ObjectType, a3, (uint64_t)&v160);
  v16 = v160;
  v17 = v161;
  v145 = v162;
  v144 = v163;
  v143 = v164;
  v142 = v165;
  v18 = v166;
  v141 = v167;
  v19 = v168;
  v140 = v169;
  v139 = v170;
  v138 = v171;
  v20 = a4[3];
  v21 = a4[4];
  v22 = sub_472D0(a4, v20);
  v135 = (id)PaginatingService.cfiUtilityJSOptions<A>(documentEntity:)((uint64_t)v22, v20, v21);
  v146 = a2;
  v136 = ObjectType;
  v147 = a3;
  v134 = (id)PaginatingService.cleanupJSOptions<A>(layoutProvider:)(a2, ObjectType, (uint64_t)a3);
  v152 = v7;
  v23 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_historyProvider + 24);
  v24 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_historyProvider + 32);
  sub_472D0((_QWORD *)(v7 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_historyProvider), v23);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26)
  {
    v157 = &_swiftEmptyDictionarySingleton;
LABEL_37:
    swift_bridgeObjectRelease(v25);
    v98 = v152;
    v99 = *(_QWORD *)(v152 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider);
    v100 = *(_QWORD *)(v152 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
    v101 = swift_getObjectType(v99);
    v159 = v100;
    v102 = (uint64_t)v133;
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v101, v100);
    v103 = *(_QWORD *)(*(_QWORD *)(v98 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_stylesheetProvider)
                     + OBJC_IVAR____TtC8BookEPUB18StylesheetProvider__styleManager);
    v104 = v147;
    v105 = (double (*)(uint64_t, uint64_t (**)(_QWORD, _QWORD), __n128))v147[6];
    v106 = v137;
    v107 = swift_unknownObjectRetain(v103);
    v108 = v136;
    v109 = v105(v136, v104, v107);
    v111 = v110;
    v112 = ((double (*)(uint64_t, uint64_t (**)(_QWORD, _QWORD)))v104[7])(v108, v104);
    v114 = v113;
    sub_49F1C((uint64_t)a4, v102 + 88);
    v115 = v135;
    v116 = v134;
    v117 = sub_388B0((uint64_t)_swiftEmptyArrayStorage);
    *(_QWORD *)(v102 + 248) = 0;
    v118 = v148;
    v119 = v102 + *(int *)(v148 + 88);
    v120 = sub_319AC(&qword_3BE170);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v119, 1, 1, v120);
    *(_QWORD *)(v102 + 40) = v106;
    *(_QWORD *)(v102 + 48) = v103;
    *(double *)(v102 + 56) = v109;
    *(_QWORD *)(v102 + 64) = v111;
    *(double *)(v102 + 72) = v112;
    *(_QWORD *)(v102 + 80) = v114;
    *(_QWORD *)(v102 + 128) = v16;
    *(_QWORD *)(v102 + 136) = v17;
    *(_QWORD *)(v102 + 144) = v145;
    *(_BYTE *)(v102 + 152) = v144;
    *(_BYTE *)(v102 + 153) = v143;
    *(_QWORD *)(v102 + 160) = v142;
    *(_QWORD *)(v102 + 168) = v18;
    *(_BYTE *)(v102 + 176) = v141;
    *(_QWORD *)(v102 + 184) = v19;
    *(_BYTE *)(v102 + 192) = v140;
    v121 = v138;
    *(_QWORD *)(v102 + 200) = v139;
    *(_QWORD *)(v102 + 208) = v121;
    *(_QWORD *)(v102 + 216) = 501;
    *(_QWORD *)(v102 + 224) = v115;
    *(_QWORD *)(v102 + *(int *)(v118 + 92)) = v116;
    *(_BYTE *)(v102 + 232) = v149 & 1;
    *(_BYTE *)(v102 + 233) = 0;
    *(_BYTE *)(v102 + 234) = v150 & 1;
    *(_QWORD *)(v102 + 240) = 0;
    *(_QWORD *)(v102 + 256) = v157;
    *(_BYTE *)(v102 + 264) = 1;
    *(_QWORD *)(v102 + 272) = v117;
    *(_QWORD *)(v102 + 280) = _swiftEmptyArrayStorage;
    v122 = v151;
    sub_137328(v102, v151, type metadata accessor for PaginationOperation.Parameters);
    Strong = swift_unknownObjectWeakLoadStrong(v98 + 16);
    v124 = *(_QWORD *)(v98 + 24);
    objc_allocWithZone((Class)type metadata accessor for PaginationOperation(0));
    swift_unknownObjectRetain(v99);
    v125 = sub_156DF8(v122, Strong, v124, v99, v159, v153);

    swift_unknownObjectRelease(Strong);
    swift_unknownObjectRelease(v99);
    sub_BA58C(v102, type metadata accessor for PaginationOperation.Parameters);
    return (uint64_t)v125;
  }
  v130 = a4;
  v27 = type metadata accessor for HistoryEntity(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = v25 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v30 = *(_QWORD *)(v28 + 72);
  v131 = enum case for NSScanner.NumberRepresentation.decimal(_:);
  swift_bridgeObjectRetain(v25);
  v157 = &_swiftEmptyDictionarySingleton;
  v132 = v25;
  v158 = v30;
  v159 = v27;
  while (1)
  {
    v31 = v29 + *(int *)(v27 + 20);
    if ((*(_BYTE *)(v31 + 16) & 1) != 0)
      goto LABEL_4;
    v32 = *(_QWORD *)v31;
    v33 = *(_QWORD *)(v31 + 8);
    sub_1396D0(*(_QWORD *)v31, v33, 0);
    v34._countAndFlagsBits = 0x2869666362757065;
    v34._object = (void *)0xE800000000000000;
    if (!String.hasPrefix(_:)(v34)
      || (v35._countAndFlagsBits = 41, v35._object = (void *)0xE100000000000000, !String.hasSuffix(_:)(v35)))
    {
      sub_1396C0(v32, v33, 0);
      goto LABEL_4;
    }
    swift_bridgeObjectRetain(v33);
    v36 = sub_5C514(8uLL, v32, v33);
    v38 = v37;
    v40 = v39;
    v42 = v41;
    sub_1396C0(v32, v33, 0);
    v44 = Substring.index(_:offsetBy:limitedBy:)(v38, -1, v36, v36, v38, v40, v42, v43);
    v46 = (v45 & 1) != 0 ? v36 : v44;
    if (v46 >> 14 < v36 >> 14)
      break;
    v47 = Substring.subscript.getter(v36);
    v49 = v48;
    v51 = v50;
    v53 = v52;
    swift_bridgeObjectRelease(v42);
    v54 = static String._fromSubstring(_:)(v47, v49, v51, v53);
    v56 = v55;
    swift_bridgeObjectRelease(v53);
    v160 = (_QWORD *)v54;
    v161 = v56;
    v57 = sub_5C170();
    v58 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v57);
    swift_bridgeObjectRelease(v56);
    if (v58[2] <= 1uLL)
    {
      swift_bridgeObjectRelease(v58);
LABEL_14:
      sub_1396C0(v32, v33, 0);
LABEL_26:
      v30 = v158;
      v27 = v159;
      goto LABEL_4;
    }
    v59 = v58[8];
    v60 = v58[9];
    v61 = v58[10];
    v62 = v58[11];
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRelease(v58);
    static String._fromSubstring(_:)(v59, v60, v61, v62);
    v64 = v63;
    swift_bridgeObjectRelease(v62);
    v65 = objc_allocWithZone((Class)NSScanner);
    v66 = String._bridgeToObjectiveC()();
    v67 = objc_msgSend(v65, "initWithString:", v66, swift_bridgeObjectRelease(v64).n128_f64[0]);

    v68 = v155;
    v69 = v154;
    v70 = v156;
    (*(void (**)(char *, _QWORD, uint64_t))(v155 + 104))(v154, v131, v156);
    v71 = NSScanner.scanInt(representation:)(v69);
    LOBYTE(v65) = v72;

    (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
    if ((v65 & 1) != 0)
    {
      sub_1396C0(v32, v33, 0);
      v25 = v132;
      goto LABEL_26;
    }
    v25 = v132;
    if ((v71 & 1) != 0)
      goto LABEL_14;
    v73 = v71 >= 0 ? v71 : v71 + 1;
    v74 = (v73 >> 1) - 1;
    v75 = v130[3];
    v76 = v130[4];
    sub_472D0(v130, v75);
    if (v74 != (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 16))(v75, v76))
      goto LABEL_14;
    v77 = UUID.uuidString.getter();
    v79 = v78;
    v80 = v157;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v157);
    v160 = v80;
    v128 = v77;
    v129 = v79;
    v83 = sub_3B8A0(v77, v79);
    v84 = v80[2];
    v85 = (v82 & 1) == 0;
    v86 = v84 + v85;
    v27 = v159;
    if (__OFADD__(v84, v85))
      goto LABEL_39;
    v87 = v82;
    if (v80[3] >= v86)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_F37EC();
      v88 = v129;
    }
    else
    {
      sub_EFEEC(v86, isUniquelyReferenced_nonNull_native);
      v88 = v129;
      v89 = sub_3B8A0(v128, v129);
      if ((v87 & 1) != (v90 & 1))
        goto LABEL_41;
      v83 = v89;
    }
    v157 = v160;
    if ((v87 & 1) != 0)
    {
      v91 = (uint64_t *)(v160[7] + 16 * v83);
      swift_bridgeObjectRelease(v91[1]);
      *v91 = v32;
      v91[1] = v33;
    }
    else
    {
      v160[(v83 >> 6) + 8] |= 1 << v83;
      v92 = (_QWORD *)(v157[6] + 16 * v83);
      *v92 = v128;
      v92[1] = v88;
      v93 = (uint64_t *)(v157[7] + 16 * v83);
      v94 = v157;
      *v93 = v32;
      v93[1] = v33;
      v95 = v94[2];
      v96 = __OFADD__(v95, 1);
      v97 = v95 + 1;
      if (v96)
        goto LABEL_40;
      v94[2] = v97;
      swift_bridgeObjectRetain(v88);
    }
    v30 = v158;
    swift_bridgeObjectRelease(v88);
    swift_bridgeObjectRelease(0x8000000000000000);
LABEL_4:
    v29 += v30;
    if (!--v26)
    {
      swift_bridgeObjectRelease(v25);
      a4 = v130;
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_127448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[157] = a7;
  v7[156] = a6;
  v7[155] = a5;
  v7[154] = a4;
  v7[153] = a3;
  v7[152] = a2;
  v7[151] = a1;
  v8 = type metadata accessor for PaginationOperation.Parameters(0);
  v7[158] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v7[159] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[160] = v10;
  v7[161] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v7[162] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v7[163] = v12;
  v7[164] = v13;
  return swift_task_switch(sub_127518, v12, v13);
}

void sub_127518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  os_log_type_t v53;
  _BOOL4 v54;
  void *v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t ObjectType;
  double (*v76)(uint64_t, uint64_t, __n128);
  __n128 v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t, __n128);
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  double (*v104)(uint64_t, uint64_t, __n128);
  __n128 v105;
  double v106;
  double v107;
  double v108;
  _QWORD *v109;
  void *v110;
  NSObject *v111;
  os_log_type_t v112;
  _BOOL4 v113;
  void *v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  double (*v130)(uint64_t, uint64_t, __n128);
  __n128 v131;
  double v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(uint64_t, uint64_t, __n128);
  __n128 v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  id v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  double v161;
  id v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  void *v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  void (*v177)(uint64_t *);
  void *v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  void (*v191)(uint64_t *);
  uint64_t v192;
  _QWORD *v193;
  id v194;
  os_log_type_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  os_log_type_t v201;
  uint64_t type;
  os_log_type_t typea;
  os_log_t v204;
  NSObject *v205;
  os_log_type_t v206;
  os_log_t v207;
  NSObject *v208;
  os_log_t v209;
  os_log_t v210;
  os_log_t log;
  NSObject *loga;
  os_log_t logb;
  uint64_t v214;

  v1 = *(_QWORD *)(v0 + 1208) + 16;
  swift_beginAccess(v1, v0 + 952, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 1320) = Strong;
  if (!Strong)
    goto LABEL_58;
  v3 = Strong;
  v207 = (os_log_t)(v0 + 1120);
  log = (os_log_t)(v0 + 1128);
  v4 = (void *)(v0 + 1136);
  v204 = (os_log_t)(v0 + 1152);
  v5 = *(_QWORD *)(v0 + 1216) + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result;
  swift_beginAccess(v5, v0 + 1000, 0, 0);
  sub_3F238(v5, v0 + 400, &qword_3BD8F8);
  if (!*(_QWORD *)(v0 + 424))
  {
    v200 = v0 + 1112;
    v17 = *(void **)(v0 + 1216);
    swift_release();
    sub_52128(v0 + 400, &qword_3BD8F8);
    if ((objc_msgSend(v17, "isCancelled") & 1) != 0)
    {
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v18 = *(void **)(v0 + 1232);
      v19 = *(_QWORD *)(v0 + 1224);
      v20 = *(void **)(v0 + 1216);
      sub_555F0(*(_QWORD *)(v0 + 1272), (uint64_t)qword_3BD350);
      sub_49F1C(v19, v0 + 912);
      v21 = v18;
      v22 = v20;
      v23 = v21;
      v24 = Logger.logObject.getter(v22);
      v25 = static os_log_type_t.info.getter();
      v26 = os_log_type_enabled(v24, v25);
      v27 = *(void **)(v0 + 1232);
      v28 = *(void **)(v0 + 1216);
      if (!v26)
      {
        sub_34488((_QWORD *)(v0 + 912));

        goto LABEL_56;
      }
      v195 = v25;
      v208 = v24;
      v29 = swift_slowAlloc(32, -1);
      v193 = (_QWORD *)swift_slowAlloc(8, -1);
      v198 = swift_slowAlloc(32, -1);
      v214 = v198;
      *(_DWORD *)v29 = 134218498;
      v30 = *(_QWORD *)(v0 + 936);
      v31 = *(_QWORD *)(v0 + 944);
      sub_472D0((_QWORD *)(v0 + 912), v30);
      v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
      sub_34488((_QWORD *)(v0 + 912));
      *(_QWORD *)(v0 + 1144) = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1144, v204, v29 + 4);
      *(_WORD *)(v29 + 12) = 2112;
      *(_QWORD *)(v0 + 1128) = v28;
      v33 = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(log, v0 + 1136, v29 + 14);
      *v193 = v28;

      *(_WORD *)(v29 + 22) = 2080;
      v34 = objc_msgSend(v27, "be_configurationKey");
      if (v34)
      {
        v35 = v34;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v38 = v37;

      }
      else
      {
        v36 = 0;
        v38 = 0;
      }
      v178 = *(void **)(v0 + 1232);
      *(_QWORD *)(v0 + 1056) = v36;
      *(_QWORD *)(v0 + 1064) = v38;
      v179 = sub_319AC((uint64_t *)&unk_3BBB20);
      v180 = String.init<A>(describing:)(v0 + 1056, v179);
      v182 = v181;
      *(_QWORD *)(v0 + 1104) = sub_33524(v180, v181, &v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1104, v200, v29 + 24);
      swift_bridgeObjectRelease(v182);

      v24 = v208;
      _os_log_impl(&dword_0, v208, v195, "Operation canceled for ordinal: %ld operation %@ webViewKey:%s", (uint8_t *)v29, 0x20u);
      v183 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v193, 1, v183);
      swift_slowDealloc(v193, -1, -1);
      swift_arrayDestroy(v198, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v198, -1, -1);
      v184 = v29;
    }
    else
    {
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v47 = *(void **)(v0 + 1232);
      v48 = *(_QWORD *)(v0 + 1224);
      v49 = *(void **)(v0 + 1216);
      sub_555F0(*(_QWORD *)(v0 + 1272), (uint64_t)qword_3BD350);
      sub_49F1C(v48, v0 + 872);
      v50 = v47;
      v51 = v49;
      v52 = v50;
      v24 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.error.getter(v24);
      v54 = os_log_type_enabled(v24, v53);
      v55 = *(void **)(v0 + 1232);
      v56 = *(void **)(v0 + 1216);
      if (!v54)
      {
        sub_34488((_QWORD *)(v0 + 872));

        goto LABEL_56;
      }
      v201 = v53;
      v205 = v24;
      v194 = *(id *)(v0 + 1232);
      v57 = swift_slowAlloc(32, -1);
      v58 = (_QWORD *)swift_slowAlloc(8, -1);
      type = swift_slowAlloc(32, -1);
      v214 = type;
      *(_DWORD *)v57 = 134218498;
      v59 = *(_QWORD *)(v0 + 896);
      v60 = *(_QWORD *)(v0 + 904);
      sub_472D0((_QWORD *)(v0 + 872), v59);
      v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 16))(v59, v60);
      sub_34488((_QWORD *)(v0 + 872));
      *(_QWORD *)(v0 + 1112) = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v200, v207, v57 + 4);
      *(_WORD *)(v57 + 12) = 2112;
      *(_QWORD *)(v0 + 1176) = v56;
      v62 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1176, v0 + 1184, v57 + 14);
      *v58 = v56;

      *(_WORD *)(v57 + 22) = 2080;
      v63 = objc_msgSend(v194, "be_configurationKey");
      if (v63)
      {
        v64 = v63;
        v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
        v67 = v66;

      }
      else
      {
        v65 = 0;
        v67 = 0;
      }
      v185 = *(void **)(v0 + 1232);
      *(_QWORD *)(v0 + 1024) = v65;
      *(_QWORD *)(v0 + 1032) = v67;
      v186 = sub_319AC((uint64_t *)&unk_3BBB20);
      v187 = String.init<A>(describing:)(v0 + 1024, v186);
      v189 = v188;
      *(_QWORD *)(v0 + 1160) = sub_33524(v187, v188, &v214);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1160, v0 + 1168, v57 + 24);
      swift_bridgeObjectRelease(v189);

      v24 = v205;
      _os_log_impl(&dword_0, v205, v201, "Failed to get result ordinal: %ld operation %@ webViewKey:%s", (uint8_t *)v57, 0x20u);
      v190 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v58, 1, v190);
      swift_slowDealloc(v58, -1, -1);
      swift_arrayDestroy(type, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(type, -1, -1);
      v184 = v57;
    }
    swift_slowDealloc(v184, -1, -1);
LABEL_56:

    v191 = *(void (**)(uint64_t *))(v0 + 1240);
    if (v191)
    {
      LOWORD(v214) = 257;
      v191(&v214);
    }
    goto LABEL_58;
  }
  v6 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 256) = v6;
  v7 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 320) = v7;
  v8 = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 288) = v8;
  v9 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 384) = v9;
  v10 = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 352) = v10;
  v11 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 224) = v11;
  v12 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity);
  if (!v12)
  {
    __break(1u);
    goto LABEL_61;
  }
  v197 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  v199 = v0 + 1200;
  v13 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 256);
  v15 = *(_QWORD *)(v12 + 80);
  v16 = *(_QWORD *)(v12 + 88);
  if (v13 == v15 && v14 == v16)
  {
    sub_1372B8(v0 + 208, v0 + 16);
LABEL_15:
    v40 = *(_QWORD *)(v0 + 56);
    v41 = *(_QWORD *)(v0 + 64);
    v42 = objc_msgSend(*(id *)(v0 + 1232), "be_configurationKey", swift_bridgeObjectRetain(v41).n128_f64[0]);
    if (v42)
    {
      v43 = v42;
      v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
      v46 = v45;

      if (v40 == v44 && v41 == v46)
      {
        sub_1372F4((_QWORD *)(v0 + 16));
        swift_bridgeObjectRelease_n(v41, 2);
LABEL_27:
        objc_msgSend(*(id *)(v0 + 1232), "frame");
        v70 = v69;
        v72 = v71;
        swift_beginAccess(v3 + 32, v0 + 976, 0, 0);
        v73 = *(_QWORD *)(v3 + 32);
        v74 = *(_QWORD *)(v3 + 40);
        ObjectType = swift_getObjectType(v73);
        v76 = *(double (**)(uint64_t, uint64_t, __n128))(v74 + 48);
        v77 = swift_unknownObjectRetain(v73);
        v78 = v76(ObjectType, v74, v77);
        v80 = v79;
        swift_unknownObjectRelease(v73);
        if (v70 == v78 && v72 == v80)
        {
          v81 = *(_QWORD *)(v0 + 1264);
          v82 = *(_QWORD *)(v0 + 1216) + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters;
          v83 = *(_QWORD *)(v82 + 144);
          v84 = *(_BYTE *)(v82 + 152);
          v85 = *(_BYTE *)(v82 + 153);
          v86 = *(_QWORD *)(v82 + 160);
          v87 = *(_QWORD *)(v82 + 168);
          v88 = *(_BYTE *)(v82 + 176);
          v89 = *(_QWORD *)(v82 + 184);
          v90 = *(_BYTE *)(v82 + 192);
          v91 = *(_QWORD *)(v82 + 200);
          v92 = *(_QWORD *)(v82 + 208);
          *(_OWORD *)(v0 + 784) = *(_OWORD *)(v82 + 128);
          *(_QWORD *)(v0 + 800) = v83;
          *(_BYTE *)(v0 + 808) = v84;
          *(_BYTE *)(v0 + 809) = v85;
          *(_QWORD *)(v0 + 816) = v86;
          *(_QWORD *)(v0 + 824) = v87;
          *(_BYTE *)(v0 + 832) = v88;
          *(_QWORD *)(v0 + 840) = v89;
          *(_BYTE *)(v0 + 848) = v90;
          *(_QWORD *)(v0 + 856) = v91;
          *(_QWORD *)(v0 + 864) = v92;
          v93 = *(_QWORD *)(v3 + 32);
          v94 = *(_QWORD *)(v3 + 40);
          v95 = swift_getObjectType(v93);
          v96 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v94 + 184);
          swift_unknownObjectRetain(v93);
          v97 = swift_bridgeObjectRetain(v92);
          v98 = v96(v95, v94, v97);
          v100 = v99;
          swift_unknownObjectRelease(v93);
          *(_QWORD *)(v0 + 1328) = v100;
          sub_137328(v82, v81, type metadata accessor for PaginationOperation.Parameters);
          v101 = *(_QWORD *)(v3 + 32);
          v102 = *(_QWORD *)(v3 + 40);
          v103 = swift_getObjectType(v101);
          v104 = *(double (**)(uint64_t, uint64_t, __n128))(v102 + 48);
          v105 = swift_unknownObjectRetain(v101);
          v106 = v104(v103, v102, v105);
          v108 = v107;
          swift_unknownObjectRelease(v101);
          v109 = (_QWORD *)swift_task_alloc(dword_3BD904);
          *(_QWORD *)(v0 + 1336) = v109;
          *v109 = v0;
          v109[1] = sub_128638;
          sub_12873C(*(_QWORD *)(v0 + 1256), v0 + 784, v98, v100, *(_QWORD *)(v0 + 1264), 1, v0 + 208, v106, v108);
          return;
        }
        swift_release();
        if (qword_3B57A0 != -1)
          swift_once(&qword_3B57A0, sub_11B838);
        v110 = *(void **)(v0 + 1232);
        sub_555F0(*(_QWORD *)(v0 + 1272), (uint64_t)qword_3BD350);
        swift_retain_n(v3);
        v111 = Logger.logObject.getter(v110);
        v112 = static os_log_type_t.default.getter();
        v113 = os_log_type_enabled(v111, v112);
        v114 = *(void **)(v0 + 1232);
        if (v113)
        {
          v115 = swift_slowAlloc(42, -1);
          v209 = (os_log_t)swift_slowAlloc(128, -1);
          v214 = (uint64_t)v209;
          *(_DWORD *)v115 = 136315906;
          typea = v112;
          v116 = objc_msgSend(v114, "be_identifier");
          v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
          v119 = v118;

          *(_QWORD *)(v0 + 1152) = sub_33524(v117, v119, &v214);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v204, v0 + 1160, v115 + 4);
          swift_bridgeObjectRelease(v119);

          *(_WORD *)(v115 + 12) = 2080;
          objc_msgSend(v114, "frame");
          *(_QWORD *)(v0 + 1040) = v120;
          *(_QWORD *)(v0 + 1048) = v121;
          type metadata accessor for CGSize(0);
          v123 = v122;
          v124 = String.init<A>(describing:)(v0 + 1040, v122);
          v126 = v125;
          *(_QWORD *)(v0 + 1168) = sub_33524(v124, v125, &v214);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1168, v0 + 1176, v115 + 14);
          swift_bridgeObjectRelease(v126);

          *(_WORD *)(v115 + 22) = 2080;
          v127 = *(_QWORD *)(v3 + 32);
          v128 = *(_QWORD *)(v3 + 40);
          v129 = swift_getObjectType(v127);
          loga = v111;
          v130 = *(double (**)(uint64_t, uint64_t, __n128))(v128 + 48);
          v131 = swift_unknownObjectRetain(v127);
          v132 = v130(v129, v128, v131);
          v134 = v133;
          swift_unknownObjectRelease(v127);
          *(double *)(v0 + 1072) = v132;
          *(_QWORD *)(v0 + 1080) = v134;
          v135 = String.init<A>(describing:)(v0 + 1072, v123);
          v137 = v136;
          *(_QWORD *)(v0 + 1184) = sub_33524(v135, v136, &v214);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1184, v0 + 1192, v115 + 24);
          swift_bridgeObjectRelease(v137);
          swift_release_n(v3);
          *(_WORD *)(v115 + 32) = 2080;
          v138 = *(_QWORD *)(v3 + 32);
          v139 = *(_QWORD *)(v3 + 40);
          v140 = swift_getObjectType(v138);
          v141 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v139 + 184);
          v142 = swift_unknownObjectRetain(v138);
          v143 = v141(v140, v139, v142);
          v145 = v144;
          swift_unknownObjectRelease(v138);
          *(_QWORD *)(v0 + 1192) = sub_33524(v143, v145, &v214);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1192, v199, v115 + 34);
          swift_bridgeObjectRelease(v145);
          swift_release_n(v3);
          v111 = loga;
          _os_log_impl(&dword_0, loga, typea, "Pagination #sizeMismatch stale result.  Discarding. webView: %s size: %s contentLayout.contentSize: %s for:%s", (uint8_t *)v115, 0x2Au);
          swift_arrayDestroy(v209, 4, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v209, -1, -1);
          swift_slowDealloc(v115, -1, -1);
        }
        else
        {

          swift_release_n(v3);
        }

        v177 = *(void (**)(uint64_t *))(v0 + 1240);
        if (!v177)
          goto LABEL_50;
        goto LABEL_47;
      }
      v68 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, v44, v46, 0);
      swift_bridgeObjectRetain(v41);
      swift_bridgeObjectRelease(v46);
      sub_1372F4((_QWORD *)(v0 + 16));
      swift_bridgeObjectRelease_n(v41, 2);
      if ((v68 & 1) != 0)
        goto LABEL_27;
    }
    else
    {
      sub_1372F4((_QWORD *)(v0 + 16));
      swift_bridgeObjectRelease(v41);
    }
    swift_release();
    goto LABEL_37;
  }
  v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v14, v15, v16, 0);
  sub_1372B8(v0 + 208, v0 + 16);
  if ((v39 & 1) != 0)
    goto LABEL_15;
  swift_release();
  sub_1372F4((_QWORD *)(v0 + 16));
LABEL_37:
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v146 = *(_QWORD *)(v0 + 1288);
  v147 = *(_QWORD *)(v0 + 1280);
  v148 = *(_QWORD *)(v0 + 1272);
  v149 = *(void **)(v0 + 1232);
  v150 = sub_555F0(v148, (uint64_t)qword_3BD350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v146, v150, v148);
  sub_1372B8(v0 + 208, v0 + 592);
  v151 = v149;
  v152 = swift_retain();
  v153 = Logger.logObject.getter(v152);
  v154 = static os_log_type_t.error.getter(v153);
  if (!os_log_type_enabled(v153, v154))
  {
    v167 = *(_QWORD *)(v0 + 1288);
    v168 = *(_QWORD *)(v0 + 1280);
    v169 = *(_QWORD *)(v0 + 1272);
    v170 = *(void **)(v0 + 1232);
    sub_1372F4((_QWORD *)(v0 + 592));
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v167, v169);
    goto LABEL_46;
  }
  v206 = v154;
  v155 = swift_slowAlloc(32, -1);
  v196 = swift_slowAlloc(96, -1);
  v214 = v196;
  *(_DWORD *)v155 = 136315650;
  v156 = *(_QWORD *)(v0 + 632);
  v157 = *(_QWORD *)(v0 + 640);
  swift_bridgeObjectRetain(v157);
  *(_QWORD *)(v0 + 1200) = sub_33524(v156, v157, &v214);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v199, v0 + 1208, v155 + 4);
  swift_bridgeObjectRelease(v157);
  sub_1372F4((_QWORD *)(v0 + 592));
  *(_WORD *)(v155 + 12) = 2080;
  v158 = *(_QWORD *)(v3 + v197);
  v4 = *(void **)(v0 + 1232);
  if (v158)
  {
    v159 = *(_QWORD *)(v158 + 80);
    v160 = *(_QWORD *)(v158 + 88);
    swift_bridgeObjectRetain(v160);
    v207->isa = (Class)sub_33524(v159, v160, &v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v207, log, v155 + 14);
    swift_bridgeObjectRelease(v160);
    *(_QWORD *)&v161 = swift_release().n128_u64[0];
    *(_WORD *)(v155 + 22) = 2080;
    v162 = objc_msgSend(v4, "be_configurationKey", v161);
    if (v162)
    {
      v163 = v162;
      v164 = static String._unconditionallyBridgeFromObjectiveC(_:)(v162);
      v166 = v165;

    }
    else
    {
      v164 = 0;
      v166 = 0;
    }
    v171 = *(_QWORD *)(v0 + 1280);
    v210 = *(os_log_t *)(v0 + 1272);
    logb = *(os_log_t *)(v0 + 1288);
    v172 = *(void **)(v0 + 1232);
    *(_QWORD *)(v0 + 1088) = v164;
    *(_QWORD *)(v0 + 1096) = v166;
    v173 = sub_319AC((uint64_t *)&unk_3BBB20);
    v174 = String.init<A>(describing:)(v0 + 1088, v173);
    v176 = v175;
    *(_QWORD *)(v0 + 1136) = sub_33524(v174, v175, &v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1136, v0 + 1144, v155 + 24);
    swift_bridgeObjectRelease(v176);

    _os_log_impl(&dword_0, v153, v206, "Got a stale result! resultKey:%s currentKey:%s webViewKey:%s", (uint8_t *)v155, 0x20u);
    swift_arrayDestroy(v196, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v196, -1, -1);
    swift_slowDealloc(v155, -1, -1);

    (*(void (**)(os_log_t, os_log_t))(v171 + 8))(logb, v210);
LABEL_46:
    v177 = *(void (**)(uint64_t *))(v0 + 1240);
    if (!v177)
    {
LABEL_50:
      sub_1372F4((_QWORD *)(v0 + 208));
LABEL_58:
      swift_release();
      goto LABEL_59;
    }
LABEL_47:
    LOWORD(v214) = 258;
    v177(&v214);
    swift_release();
    sub_1372F4((_QWORD *)(v0 + 208));
LABEL_59:
    v192 = *(_QWORD *)(v0 + 1264);
    swift_task_dealloc(*(_QWORD *)(v0 + 1288));
    swift_task_dealloc(v192);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
LABEL_61:

  swift_release();
  __break(1u);
}

uint64_t sub_128638()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 1328);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 1264);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1336));
  swift_bridgeObjectRelease(v2);
  sub_BA58C(v3, type metadata accessor for PaginationOperation.Parameters);
  swift_bridgeObjectRelease(v1[108]);
  return swift_task_switch(sub_1286B8, v1[163], v1[164]);
}

uint64_t sub_1286B8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  void (*v3)(__int16 *, __n128);
  uint64_t v4;
  __int16 v6;

  v1 = *(_QWORD *)(v0 + 1240);
  v2 = swift_release();
  if (v1)
  {
    v3 = *(void (**)(__int16 *, __n128))(v0 + 1240);
    v6 = 0;
    v3(&v6, v2);
  }
  swift_release();
  sub_1372F4((_QWORD *)(v0 + 208));
  v4 = *(_QWORD *)(v0 + 1264);
  swift_task_dealloc(*(_QWORD *)(v0 + 1288));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_12873C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, double a8, double a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v10 + 752) = v9;
  *(_QWORD *)(v10 + 744) = a7;
  *(_BYTE *)(v10 + 921) = a6;
  *(double *)(v10 + 736) = a9;
  *(double *)(v10 + 728) = a8;
  *(_QWORD *)(v10 + 720) = a5;
  *(_QWORD *)(v10 + 712) = a4;
  *(_QWORD *)(v10 + 704) = a3;
  *(_QWORD *)(v10 + 696) = a1;
  v12 = sub_319AC(&qword_3BFBB0);
  *(_QWORD *)(v10 + 760) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Date(0);
  *(_QWORD *)(v10 + 768) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v10 + 776) = v14;
  v15 = (*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v10 + 784) = swift_task_alloc(v15);
  *(_QWORD *)(v10 + 792) = swift_task_alloc(v15);
  *(_OWORD *)(v10 + 800) = *(_OWORD *)a2;
  *(_QWORD *)(v10 + 816) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(v10 + 922) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(v10 + 923) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(v10 + 824) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v10 + 832) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(v10 + 924) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(v10 + 840) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(v10 + 925) = *(_BYTE *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(v10 + 848) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(v10 + 856) = v16;
  v17 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v10 + 864) = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  *(_QWORD *)(v10 + 872) = v18;
  *(_QWORD *)(v10 + 880) = v19;
  return swift_task_switch(sub_128880, v18, v19);
}

uint64_t sub_128880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  __objc2_meth_list **p_class_meths;
  void *v21;
  id v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  double *v112;
  double v113;
  double v114;
  uint64_t KeyPath;
  uint64_t *v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  __n128 v122;
  __n128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  _QWORD *v135;
  double *v136;
  double *v137;
  char v138;
  double v139;
  BOOL v140;
  void *v141;
  uint64_t v142;
  NSObject *v143;
  os_log_type_t v144;
  _BOOL4 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  id v163;
  uint64_t v164;
  _QWORD *v165;
  id v166;
  __n128 v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(unsigned __int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  double v180;
  double v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  os_log_type_t type;
  os_log_type_t typea[8];
  double *v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  void (*v213)(uint64_t, uint64_t, __n128);
  char v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  _QWORD *v218;
  char v219;
  void *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  __int128 v225;
  uint64_t v226;
  __int128 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  _BYTE v231[24];
  __int128 v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  char v236;
  uint64_t v237;
  uint64_t v238;

  v1 = v0 + 624;
  v195 = v0 + 656;
  v196 = v0 + 640;
  v191 = v0 + 680;
  v2 = *(_QWORD *)(v0 + 752);
  v3 = *(_QWORD *)(*(_QWORD *)(v0 + 696) + 16);
  v199 = v2 + 16;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  v6 = Strong;
  v192 = v2;
  if (Strong)
  {
    v7 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    swift_unknownObjectRelease(v6);
    v6 = sub_3B140(v3);
    *(_QWORD *)&v5 = swift_release().n128_u64[0];
  }
  v9 = (_QWORD *)(v0 + 208);
  v10 = (_BYTE *)(v0 + 728);
  v193 = (uint64_t *)(v0 + 648);
  v194 = (uint64_t *)(v0 + 632);
  v190 = (uint64_t *)(v0 + 672);
  v198 = (_QWORD *)(v0 + 696);
  v224 = v6;
  *(_QWORD *)(v0 + 888) = v6;
  v11 = *(_QWORD *)(v0 + 752);
  v12 = *(_QWORD *)(v0 + 744);
  v220 = *(void **)(*(_QWORD *)(v0 + 720) + 40);
  v13 = objc_msgSend(v220, "scrollView", v5);
  objc_msgSend(v13, "contentSize");
  v15 = v14;
  v17 = v16;

  v18 = *(double *)(v12 + 88);
  v19 = *(double *)(v12 + 96);
  p_class_meths = &OBJC_PROTOCOL___BEJavascriptProvider.class_meths;
  v221 = v3;
  if (*(_BYTE *)(v11 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_logContentSize) != 1)
    goto LABEL_15;
  v222 = v0 + 664;
  v21 = *(void **)(*(_QWORD *)(v0 + 752) + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
  if (!v21
    || (sub_34450(0, &qword_3BD908, WKWebView_ptr),
        v22 = v220,
        v23 = v21,
        v24 = static NSObject.== infix(_:_:)(v22, v23),
        v23,
        v22,
        (v24 & 1) == 0))
  {
    if (qword_3B57A0 != -1)
      goto LABEL_70;
    goto LABEL_11;
  }
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v25 = type metadata accessor for Logger(0);
  v26 = sub_555F0(v25, (uint64_t)qword_3BD350);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = swift_slowAlloc(32, -1);
    v30 = swift_slowAlloc(64, -1);
    *(_QWORD *)v231 = v30;
    *(_DWORD *)v29 = 134218498;
    *(_QWORD *)(v0 + 664) = v221;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v222, v190, v29 + 4);
    *(_WORD *)(v29 + 12) = 2080;
    *(double *)(v0 + 512) = v15;
    *(double *)(v0 + 520) = v17;
    type metadata accessor for CGSize(0);
    v32 = v31;
    v33 = String.init<A>(describing:)(v0 + 512, v31);
    v35 = v34;
    *(_QWORD *)(v0 + 680) = sub_33524(v33, v34, (uint64_t *)v231);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v191, v0 + 688, v29 + 14);
    v36 = v35;
    v10 = (_BYTE *)(v0 + 728);
    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v29 + 22) = 2080;
    *(double *)(v0 + 496) = v18;
    *(double *)(v0 + 504) = v19;
    v37 = String.init<A>(describing:)(v0 + 496, v32);
    v39 = v38;
    *(_QWORD *)(v0 + 688) = sub_33524(v37, v38, (uint64_t *)v231);
    v1 = v0 + 624;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 688, v198, v29 + 24);
    v40 = v39;
    p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___BEJavascriptProvider + 32);
    swift_bridgeObjectRelease(v40);
    _os_log_impl(&dword_0, v27, v28, "#sizeResults: Paginating Web View ordinal:%ld webView.scrollView.contentSize: %s documentContentSize: %s", (uint8_t *)v29, 0x20u);
    swift_arrayDestroy(v30, 2, (char *)&type metadata for Any + 8);
    v41 = v30;
    v3 = v221;
    swift_slowDealloc(v41, -1, -1);
    v42 = v29;
LABEL_13:
    swift_slowDealloc(v42, -1, -1);
    goto LABEL_14;
  }
  while (1)
  {
LABEL_14:

LABEL_15:
    v204 = v0 + 576;
    v223 = (uint64_t *)(v0 + 608);
    v57 = v18;
    v58 = v19;
    if (v10[193] == 1)
    {
      v59 = v15 < v18 || v17 < v19;
      v57 = v15;
      v58 = v17;
      if (v59)
      {
        if (p_class_meths[244] != (__objc2_meth_list *)-1)
          swift_once(&qword_3B57A0, sub_11B838);
        v60 = type metadata accessor for Logger(0);
        v61 = sub_555F0(v60, (uint64_t)qword_3BD350);
        v62 = Logger.logObject.getter(v61);
        v63 = static os_log_type_t.error.getter(v62);
        if (os_log_type_enabled(v62, v63))
        {
          v64 = swift_slowAlloc(22, -1);
          v217 = v1;
          v65 = swift_slowAlloc(64, -1);
          *(_QWORD *)v231 = v65;
          *(_DWORD *)v64 = 136315394;
          v66 = CGSize.debugDescription.getter(v18, v19);
          v68 = v67;
          *v223 = sub_33524(v66, v67, (uint64_t *)v231);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v223, v0 + 616, v64 + 4);
          swift_bridgeObjectRelease(v68);
          *(_WORD *)(v64 + 12) = 2080;
          v69 = CGSize.debugDescription.getter(v15, v17);
          v71 = v70;
          *(_QWORD *)(v0 + 616) = sub_33524(v69, v70, (uint64_t *)v231);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 616, v217, v64 + 14);
          v72 = v71;
          p_class_meths = &OBJC_PROTOCOL___BEJavascriptProvider.class_meths;
          swift_bridgeObjectRelease(v72);
          _os_log_impl(&dword_0, v62, v63, "#reevaluatePaginationData scrollView < JS. JSresultSize:%s scrollViewContent:%s", (uint8_t *)v64, 0x16u);
          swift_arrayDestroy(v65, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v65, -1, -1);
          swift_slowDealloc(v64, -1, -1);
        }

        v57 = v15;
        v58 = v17;
        v3 = v221;
      }
    }
    v73 = (_QWORD *)(*(_QWORD *)(v0 + 752) + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider);
    v75 = (_QWORD *)*v73;
    v74 = v73[1];
    v76 = swift_getObjectType(*v73);
    v77 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v215 = v74;
    v218 = v75;
    v77(v76, v74);
    v78 = *(_QWORD *)(v0 + 232);
    v79 = *(_QWORD *)(v0 + 240);
    sub_472D0(v9, v78);
    LOBYTE(v75) = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 384))(v78, v79);
    sub_34488(v9);
    v213 = (void (*)(uint64_t, uint64_t, __n128))v77;
    if ((v75 & 1) != 0)
    {
      v80 = 1;
      v81 = 1;
      if (*(_QWORD *)(*(_QWORD *)(v0 + 744) + 56) == 1)
        goto LABEL_36;
    }
    else
    {
      v82 = *(_QWORD *)(v0 + 856);
      v83 = *(_QWORD *)(v0 + 848);
      v84 = v10[197];
      v85 = *(_QWORD *)(v0 + 840);
      v86 = v10[196];
      v87 = *(_QWORD *)(v0 + 832);
      v88 = *(_QWORD *)(v0 + 824);
      v89 = v10[195];
      v90 = v10[194];
      v91 = *(_QWORD *)(v0 + 816);
      v92 = *(_QWORD *)(v0 + 744);
      *(_OWORD *)v231 = *(_OWORD *)(v0 + 800);
      *(_QWORD *)&v231[16] = v91;
      LOBYTE(v232) = v90;
      BYTE1(v232) = v89;
      *((_QWORD *)&v232 + 1) = v88;
      v233 = v87;
      v234 = v86;
      v235 = v85;
      v236 = v84;
      v237 = v83;
      v238 = v82;
      v81 = *(_QWORD *)(v92 + 56);
      v80 = _sSo9WKWebViewC8BookEPUBE18calcFinalPageCount19layoutConfiguration11contentSize04pageH0SiAC016PaginationLayoutJ0V_So6CGSizeVSitF_0((uint64_t)v231, v81, v57, v58);
      if (v80 == v81)
        goto LABEL_36;
    }
    if (p_class_meths[244] != (__objc2_meth_list *)-1)
      swift_once(&qword_3B57A0, sub_11B838);
    v93 = *(_QWORD *)(v0 + 744);
    v94 = type metadata accessor for Logger(0);
    sub_555F0(v94, (uint64_t)qword_3BD350);
    v95 = sub_1372B8(v93, v0 + 16);
    v96 = Logger.logObject.getter(v95);
    v97 = static os_log_type_t.error.getter(v96);
    if (os_log_type_enabled(v96, v97))
    {
      v98 = swift_slowAlloc(42, -1);
      v210 = swift_slowAlloc(64, -1);
      *(_QWORD *)v231 = v210;
      *(_DWORD *)v98 = 134218754;
      *(_QWORD *)(v0 + 576) = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v204, v0 + 584, v98 + 4);
      *(_WORD *)(v98 + 12) = 2080;
      v99 = CGSize.debugDescription.getter(v15, v17);
      type = v97;
      v100 = v76;
      v102 = v101;
      *(_QWORD *)(v0 + 584) = sub_33524(v99, v101, (uint64_t *)v231);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 584, v0 + 592, v98 + 14);
      swift_bridgeObjectRelease(v102);
      *(_WORD *)(v98 + 22) = 2048;
      v103 = *(_QWORD *)(v0 + 72);
      sub_1372F4((_QWORD *)(v0 + 16));
      *(_QWORD *)(v0 + 592) = v103;
      v76 = v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 592, v0 + 600, v98 + 24);
      *(_WORD *)(v98 + 32) = 2080;
      v104 = CGSize.debugDescription.getter(v18, v19);
      v106 = v105;
      *(_QWORD *)(v0 + 600) = sub_33524(v104, v105, (uint64_t *)v231);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 600, v223, v98 + 34);
      swift_bridgeObjectRelease(v106);
      _os_log_impl(&dword_0, v96, type, "#pageCountMismatch. finalPageCount:%ld webViewContentSize:%s result.pageCount:%ld result.contentSize:%s", (uint8_t *)v98, 0x2Au);
      swift_arrayDestroy(v210, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v210, -1, -1);
      v107 = v98;
      v3 = v221;
      swift_slowDealloc(v107, -1, -1);
    }
    else
    {
      sub_1372F4((_QWORD *)(v0 + 16));
    }

    v81 = v80;
    p_class_meths = &OBJC_PROTOCOL___BEJavascriptProvider.class_meths;
LABEL_36:
    v209 = v76;
    if (p_class_meths[244] != (__objc2_meth_list *)-1)
      swift_once(&qword_3B57A0, sub_11B838);
    v222 = v81;
    v108 = type metadata accessor for Logger(0);
    v197 = sub_555F0(v108, (uint64_t)qword_3BD350);
    v109 = Logger.logObject.getter(v197);
    v110 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v109, v110))
    {
      v111 = swift_slowAlloc(22, -1);
      *(_DWORD *)v111 = 134218240;
      *(_QWORD *)(v0 + 560) = v222;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568, v111 + 4);
      *(_WORD *)(v111 + 12) = 2048;
      *(_QWORD *)(v0 + 568) = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 568, v204, v111 + 14);
      _os_log_impl(&dword_0, v109, v110, "Capturing #pageCount:%ld for ordinal:%ld", (uint8_t *)v111, 0x16u);
      swift_slowDealloc(v111, -1, -1);
    }
    v112 = *(double **)(v0 + 696);

    v113 = v112[3];
    v114 = v112[4];
    v15 = v112[5];
    KeyPath = swift_getKeyPath(&unk_2ED6E8);
    swift_getKeyPath(&unk_2ED710);
    static Published.subscript.getter((_QWORD *)(v0 + 920), v112, KeyPath);
    swift_release();
    swift_release();
    v205 = *(_BYTE *)(v0 + 920);
    v116 = (uint64_t *)((char *)v112 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
    v117 = swift_beginAccess((char *)v112 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset, v0 + 424, 0, 0);
    v203 = *v116;
    LOBYTE(v230) = *((_BYTE *)v112 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationDirection);
    LOBYTE(v226) = *((_BYTE *)v112 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationMode);
    v118 = *(_QWORD *)(v0 + 776);
    v119 = *(_QWORD *)(v0 + 768);
    v120 = *(_QWORD *)(v0 + 760);
    if (v224)
    {
      swift_retain();
      sub_39120(v120, v121);
      v122 = swift_release();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, __n128))(v118 + 56))(v120, 0, 1, v119, v122);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v120, 1, v119) != 1)
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 776) + 32))(*(_QWORD *)(v0 + 792), *(_QWORD *)(v0 + 760), *(_QWORD *)(v0 + 768));
        goto LABEL_45;
      }
    }
    else
    {
      v123.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v118 + 56))(v120, 1, 1, v119, v117);
    }
    v124 = *(_QWORD *)(v0 + 760);
    static Date.distantPast.getter(v123);
    sub_52128(v124, &qword_3BFBB0);
LABEL_45:
    v125 = *(_QWORD *)(v0 + 784);
    v126 = *(_QWORD *)(v0 + 744);
    v127 = *(_QWORD *)(v0 + 712);
    v128 = *(_QWORD *)(v0 + 704);
    v201 = *(_QWORD *)(v0 + 792);
    v202 = *(_QWORD *)(v0 + 696);
    sub_12D730(v3, v125);
    v200 = sub_38184((uint64_t)_swiftEmptyArrayStorage);
    v129 = sub_38190((uint64_t)_swiftEmptyArrayStorage);
    v130 = sub_3819C((uint64_t)_swiftEmptyArrayStorage);
    v131 = sub_381A8((uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v126) = *(_BYTE *)(v126 + 65);
    v231[0] = 2;
    v132 = type metadata accessor for DocumentPaginationEntity(0);
    swift_allocObject(v132, *(unsigned int *)(v132 + 48));
    swift_bridgeObjectRetain(v127);
    v133 = DocumentPaginationEntity.init(ordinal:pageSize:pageWidthIncludingGutter:paginationComplete:pageCount:startingPageOffset:paginationDirection:contentSize:paginationMode:pages:highlightEntities:bookmarkEntities:latestModifiedAnnotationDate:latestModifiedHistoryDate:anchorEntitiesByName:mediaEntitiesByName:expandableEntitiesByName:historyEntitiesByName:isVerticalDocument:configurationKey:source:)(v221, v205, v222, v203, (char *)&v230, (char *)&v226, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v113, v114, v15, v57, v58, (uint64_t)_swiftEmptyArrayStorage, v201, v125, v200, v129, v130,
             v131,
             v126,
             v128,
             v127,
             v231);
    *(_QWORD *)(v0 + 896) = v133;
    v134 = (_QWORD *)(v202 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
    swift_beginAccess(v202 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v0 + 328, 0, 0);
    *(_QWORD *)(v0 + 904) = *v134;
    v135 = (_QWORD *)(v133 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
    swift_beginAccess(v133 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v0 + 352, 0, 0);
    *(_QWORD *)(v0 + 912) = *v135;
    v136 = (double *)(v202 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
    swift_beginAccess(v202 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize, v0 + 376, 0, 0);
    v19 = *v136;
    v18 = v136[1];
    v137 = (double *)(v133 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
    swift_beginAccess(v133 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize, v0 + 400, 0, 0);
    v138 = *(_BYTE *)(v0 + 921);
    v211 = v133;
    v208 = v137;
    if (v19 != *v137)
    {
      v9 = v218;
      v141 = v220;
      if (*(_BYTE *)(v0 + 921))
      {
LABEL_51:
        swift_retain_n(*v198);
        v142 = swift_retain_n(v133);
        v143 = Logger.logObject.getter(v142);
        v144 = static os_log_type_t.debug.getter();
        LODWORD(v220) = v144;
        v145 = os_log_type_enabled(v143, v144);
        v146 = *v198;
        if (v145)
        {
          v147 = swift_slowAlloc(32, -1);
          *(_QWORD *)typea = swift_slowAlloc(64, -1);
          *(_QWORD *)v231 = *(_QWORD *)typea;
          *(_DWORD *)v147 = 134218498;
          *v190 = v221;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v190, v191, v147 + 4);
          *(_WORD *)(v147 + 12) = 2080;
          v148 = CGSize.debugDescription.getter(*v136, v136[1]);
          v150 = v149;
          *v193 = sub_33524(v148, v149, (uint64_t *)v231);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v193, v195, v147 + 14);
          swift_bridgeObjectRelease(v150);
          swift_release_n(v146);
          *(_WORD *)(v147 + 22) = 2080;
          v151 = DocumentPaginationEntity.debugDescription.getter();
          v153 = v152;
          *v194 = sub_33524(v151, v152, (uint64_t *)v231);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v194, v196, v147 + 24);
          swift_bridgeObjectRelease(v153);
          v9 = v218;
          swift_release_n(v133);
          _os_log_impl(&dword_0, v143, (os_log_type_t)v220, "Updated content size of %ld from %s to %s", (uint8_t *)v147, 0x20u);
          swift_arrayDestroy(*(_QWORD *)typea, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(*(_QWORD *)typea, -1, -1);
          swift_slowDealloc(v147, -1, -1);
        }
        else
        {
          swift_release_n(*v198);
          swift_release_n(v133);
        }

      }
      v140 = 1;
      goto LABEL_56;
    }
    v139 = v137[1];
    v140 = v18 != v139;
    if (v18 == v139)
      v138 = 0;
    v9 = v218;
    v141 = v220;
    if ((v138 & 1) != 0)
      goto LABEL_51;
LABEL_56:
    *(_BYTE *)(v0 + 926) = v140;
    v154 = *(_QWORD *)(v0 + 744);
    v155 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGSize:", v57, v58);
    objc_msgSend(v141, "setBe_estimatedContentSizeValue:", v155);

    v156 = *(_QWORD *)(v154 + 160);
    v1 = v209;
    if (*(_QWORD *)(v156 + 16))
    {
      v157 = swift_unknownObjectWeakLoadStrong(v199);
      if (v157)
      {
        v158 = v157;
        v159 = *(_QWORD *)(v192 + 24);
        v160 = swift_getObjectType(v157);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v156, v160, v159);
        swift_unknownObjectRelease(v158);
      }
    }
    if (v224)
    {
      v161 = *(_QWORD *)(v0 + 752);
      v162 = *(_QWORD *)(v0 + 744);
      v163 = v141;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_13736C(v211, v162, v224, v161, v163, v211);
      swift_release();

      swift_release();
      swift_release();
    }
    v164 = *(_QWORD *)(v0 + 752);
    v165 = *(_QWORD **)(v0 + 744);
    v166 = v141;
    swift_retain();
    swift_retain();
    sub_138470(v211, v165, v164, v164, v166, v211);
    swift_release();

    v167 = swift_release();
    v213(v209, v215, v167);
    p_class_meths = *(__objc2_meth_list ***)(v0 + 312);
    v3 = *(_QWORD *)(v0 + 320);
    sub_472D0((_QWORD *)(v0 + 288), (uint64_t)p_class_meths);
    LODWORD(v164) = (*(unsigned __int8 (**)(__objc2_meth_list **, uint64_t))(v3 + 104))(p_class_meths, v3);
    sub_34488((_QWORD *)(v0 + 288));
    if ((_DWORD)v164)
    {
      ((void (*)(uint64_t, uint64_t))v213)(v209, v215);
      v168 = *(_QWORD *)(v0 + 272);
      v169 = *(_QWORD *)(v0 + 280);
      sub_472D0((_QWORD *)(v0 + 248), v168);
      v170 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v169 + 104))(v168, v169);
      sub_34488((_QWORD *)(v0 + 248));
      if (v170 == 1)
      {
        *(_QWORD *)v231 = *(_QWORD *)(v211 + 16);
        *(_OWORD *)&v231[8] = 0u;
        v232 = *(_OWORD *)(v0 + 728);
        v171 = type metadata accessor for PagePaginationEntity();
        swift_allocObject(v171, 144);
        v172 = PagePaginationEntity.init(pageOffset:pageRect:highlightPaginationEntityReferences:bookmarkEntityReferences:anchorEntityReferences:mediaEntityReferences:expandableEntityReferences:historyEntityReferences:firstPhysicalPageName:lastPhysicalPageName:)(0, (uint64_t *)v231, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, 0, 0, 0, 0);
        sub_AE764(v172);
        swift_release();
      }
      return swift_task_switch(sub_129CDC, 0, 0);
    }
    v10 = (_BYTE *)v222;
    if ((v222 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_70:
    swift_once(&qword_3B57A0, sub_11B838);
LABEL_11:
    v43 = type metadata accessor for Logger(0);
    v44 = sub_555F0(v43, (uint64_t)qword_3BD350);
    v27 = Logger.logObject.getter(v44);
    v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v45))
    {
      v46 = swift_slowAlloc(32, -1);
      v47 = swift_slowAlloc(64, -1);
      *(_QWORD *)v231 = v47;
      *(_DWORD *)v46 = 134218498;
      *(_QWORD *)(v0 + 624) = v221;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1, v194, v46 + 4);
      *(_WORD *)(v46 + 12) = 2080;
      *(double *)(v0 + 544) = v15;
      *(double *)(v0 + 552) = v17;
      type metadata accessor for CGSize(0);
      v49 = v48;
      v50 = String.init<A>(describing:)(v0 + 544, v48);
      v52 = v51;
      *(_QWORD *)(v0 + 640) = sub_33524(v50, v51, (uint64_t *)v231);
      v10 = (_BYTE *)(v0 + 728);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v196, v193, v46 + 14);
      swift_bridgeObjectRelease(v52);
      *(_WORD *)(v46 + 22) = 2080;
      *(double *)(v0 + 528) = v18;
      *(double *)(v0 + 536) = v19;
      v53 = String.init<A>(describing:)(v0 + 528, v49);
      v55 = v54;
      *(_QWORD *)(v0 + 656) = sub_33524(v53, v54, (uint64_t *)v231);
      p_class_meths = &OBJC_PROTOCOL___BEJavascriptProvider.class_meths;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v195, v222, v46 + 24);
      swift_bridgeObjectRelease(v55);
      _os_log_impl(&dword_0, v27, v45, "#sizeResults: Live Web View ordinal:%ld webView.scrollView.contentSize: %s documentContentSize: %s", (uint8_t *)v46, 0x20u);
      swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
      v56 = v47;
      v3 = v221;
      swift_slowDealloc(v56, -1, -1);
      v42 = v46;
      goto LABEL_13;
    }
  }
  if (v222)
  {
    v173 = 0;
    v219 = *(_BYTE *)(v0 + 925);
    v216 = *(_BYTE *)(v0 + 924);
    v214 = *(_BYTE *)(v0 + 923);
    v212 = *(_BYTE *)(v0 + 922);
    do
    {
      v174 = *(_QWORD *)(v0 + 856);
      v175 = *(_QWORD *)(v0 + 848);
      v176 = *(_QWORD *)(v0 + 840);
      v177 = *(_QWORD *)(v0 + 832);
      v178 = *(_QWORD *)(v0 + 824);
      v179 = *(_QWORD *)(v0 + 816);
      v180 = *(double *)(v0 + 736);
      v181 = *(double *)(v0 + 728);
      v230 = *(_QWORD *)(v211 + 16);
      *(_OWORD *)v231 = *(_OWORD *)(v0 + 800);
      *(_QWORD *)&v231[16] = v179;
      LOBYTE(v232) = v212;
      BYTE1(v232) = v214;
      *((_QWORD *)&v232 + 1) = v178;
      v233 = v177;
      v234 = v216;
      v235 = v176;
      v236 = v219;
      v237 = v175;
      v238 = v174;
      sub_12BFE8(&v230, v173, (uint64_t)v231, (uint64_t)v10, (uint64_t)&v226, v181, v180, *v208, v208[1]);
      v182 = v226;
      v225 = v227;
      v183 = v228;
      v184 = v229;
      v185 = type metadata accessor for PagePaginationEntity();
      v186 = swift_allocObject(v185, 144);
      *(_OWORD *)(v186 + 128) = 0u;
      *(_OWORD *)(v186 + 112) = 0u;
      *(_QWORD *)(v186 + 16) = v173;
      *(_QWORD *)(v186 + 24) = v182;
      v10 = (_BYTE *)v222;
      *(_OWORD *)(v186 + 32) = v225;
      *(_QWORD *)(v186 + 48) = v183;
      *(_QWORD *)(v186 + 56) = v184;
      *(_QWORD *)(v186 + 64) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v186 + 72) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v186 + 80) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v186 + 88) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v186 + 96) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v186 + 104) = _swiftEmptyArrayStorage;
      swift_beginAccess(v186 + 112, v0 + 472, 1, 0);
      v187 = *(_QWORD *)(v186 + 120);
      *(_QWORD *)(v186 + 112) = 0;
      *(_QWORD *)(v186 + 120) = 0;
      swift_bridgeObjectRelease(v187);
      swift_beginAccess(v186 + 128, v0 + 448, 1, 0);
      v188 = *(_QWORD *)(v186 + 136);
      *(_QWORD *)(v186 + 128) = 0;
      *(_QWORD *)(v186 + 136) = 0;
      swift_bridgeObjectRelease(v188);
      sub_AE764(v186);
      swift_release();
      v173 = (void (*)(unsigned __int128 *__return_ptr, uint64_t, uint64_t))((char *)v173 + 1);
    }
    while ((void (*)(unsigned __int128 *__return_ptr, uint64_t, uint64_t))v222 != v173);
  }
  return swift_task_switch(sub_129CDC, 0, 0);
}

uint64_t sub_129CDC()
{
  uint64_t v0;

  sub_AC3C0();
  return swift_task_switch(sub_129D18, *(_QWORD *)(v0 + 872), *(_QWORD *)(v0 + 880));
}

uint64_t sub_129D18()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_BYTE *)(v0 + 926);
  v2 = *(_QWORD *)(v0 + 912);
  v3 = *(_QWORD *)(v0 + 904);
  v4 = *(_QWORD *)(v0 + 896);
  v9 = *(_QWORD *)(v0 + 792);
  v10 = *(_QWORD *)(v0 + 784);
  v11 = *(_QWORD *)(v0 + 760);
  v5 = *(_BYTE *)(v0 + 921);
  v6 = *(_QWORD *)(v0 + 720);
  v7 = *(_QWORD *)(v0 + 696);
  swift_release();
  sub_12DE34(v4);
  sub_AECE0(v4);
  sub_12E7E8(v7, v5, v1 & 1 | (v3 != v2), v6);
  swift_release();
  swift_release();
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_129E08(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_6B4A4;
  return v7();
}

void sub_129E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  void *i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  char v20;
  char v21;
  char v22[24];
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFonts);
  v23 = v1;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_fontsFailedPerWebView);
  swift_beginAccess(v2, v22, 0, 0);
  v3 = *v2;
  v4 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain_n(v1, 2);
  swift_bridgeObjectRetain_n(v3, 2);
  v9 = 0;
  for (i = &_swiftEmptySetSingleton; ; i = v16)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v9 << 6);
    }
    else
    {
      v17 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v17 >= v8)
        goto LABEL_25;
      v18 = *(_QWORD *)(v4 + 8 * v17);
      ++v9;
      if (!v18)
      {
        v9 = v17 + 1;
        if (v17 + 1 >= v8)
          goto LABEL_25;
        v18 = *(_QWORD *)(v4 + 8 * v9);
        if (!v18)
        {
          v9 = v17 + 2;
          if (v17 + 2 >= v8)
            goto LABEL_25;
          v18 = *(_QWORD *)(v4 + 8 * v9);
          if (!v18)
          {
            v9 = v17 + 3;
            if (v17 + 3 >= v8)
              goto LABEL_25;
            v18 = *(_QWORD *)(v4 + 8 * v9);
            if (!v18)
            {
              v9 = v17 + 4;
              if (v17 + 4 >= v8)
                goto LABEL_25;
              v18 = *(_QWORD *)(v4 + 8 * v9);
              if (!v18)
              {
                v19 = v17 + 5;
                if (v19 >= v8)
                {
LABEL_25:
                  swift_release();
                  swift_bridgeObjectRelease(v3);
                  sub_13541C((uint64_t)i, v1);
                  v21 = v20;
                  swift_bridgeObjectRelease(i);
                  __asm { BR              X10 }
                }
                v18 = *(_QWORD *)(v4 + 8 * v19);
                if (!v18)
                {
                  while (1)
                  {
                    v9 = v19 + 1;
                    if (__OFADD__(v19, 1))
                      break;
                    if (v9 >= v8)
                      goto LABEL_25;
                    v18 = *(_QWORD *)(v4 + 8 * v9);
                    ++v19;
                    if (v18)
                      goto LABEL_24;
                  }
LABEL_27:
                  __break(1u);
                  JUMPOUT(0x12A340);
                }
                v9 = v19;
              }
            }
          }
        }
      }
LABEL_24:
      v7 = (v18 - 1) & v18;
      v12 = __clz(__rbit64(v18)) + (v9 << 6);
    }
    v13 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v12);
    swift_bridgeObjectRetain(i);
    swift_bridgeObjectRetain(v13);
    sub_192528(v14, (uint64_t)i);
    v16 = v15;
    swift_bridgeObjectRelease(i);
  }
}

uint64_t sub_12A350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)(_QWORD, _QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v21, ObjectType, v9);
  v11 = v22;
  v12 = v23;
  v13 = sub_472D0(v21, v22);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v21[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v17 + 16))(v16, v14);
  swift_unknownObjectRetain(a1);
  PaginationLayoutConfiguration.init<A, B>(layoutProvider:bookEntity:)(v18, (uint64_t)v16, a2, v11, a3, v12, a4);
  return sub_34488(v21);
}

void sub_12A43C(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  char **v16;
  char *v17;
  uint64_t v18;
  char v19[24];
  char v20[24];
  char v21[24];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[4];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;

  v4 = (uint64_t)&a1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result];
  swift_beginAccess(&a1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result], v21, 0, 0);
  sub_3F238(v4, (uint64_t)&v22, &qword_3BD8F8);
  if (*((_QWORD *)&v23 + 1))
  {
    v39 = v30;
    v40 = v31;
    v41 = v32;
    v42 = v33;
    v35 = v26;
    v36 = v27;
    v37 = v28;
    v38 = v29;
    v34[0] = v22;
    v34[1] = v23;
    v34[2] = v24;
    v34[3] = v25;
    swift_beginAccess(a2 + 16, &v22, 0, 0);
    Strong = swift_weakLoadStrong(a2 + 16);
    if (!Strong)
    {
LABEL_5:
      sub_1372F4(v34);
      return;
    }
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity);
    if (v6)
    {
      swift_retain();
      swift_release();
      v7 = BYTE1(v35);
      v9 = *((_QWORD *)&v35 + 1);
      v8 = v36;
      swift_beginAccess(v6 + 112, v20, 1, 0);
      *(_BYTE *)(v6 + 112) = v7;
      swift_beginAccess(v6 + 120, v19, 1, 0);
      v10 = *(_QWORD *)(v6 + 128);
      *(_QWORD *)(v6 + 120) = v9;
      *(_QWORD *)(v6 + 128) = v8;
      swift_bridgeObjectRetain(v8);
      swift_release();
      swift_bridgeObjectRelease(v10);
      goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
    sub_52128((uint64_t)&v22, &qword_3BD8F8);
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v11 = type metadata accessor for Logger(0);
    sub_555F0(v11, (uint64_t)qword_3BD350);
    v12 = a1;
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = (char **)swift_slowAlloc(8, -1);
      *(_DWORD *)v15 = 138412290;
      *(_QWORD *)&v34[0] = v12;
      v17 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, (char *)v34 + 8, v15 + 4);
      *v16 = v12;

      _os_log_impl(&dword_0, v13, v14, "Failed to get result from toc pagination operation %@", v15, 0xCu);
      v18 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v16, 1, v18);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_12A700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  void *v12;
  void *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_525B8;
  aBlock[3] = &unk_382DD8;
  v13 = _Block_copy(aBlock);
  swift_retain();
  v14 = swift_release();
  static DispatchQoS.unspecified.getter(v14);
  aBlock[0] = _swiftEmptyArrayStorage;
  v15 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_319AC(&qword_3B96F0);
  v17 = sub_3DCC0((unint64_t *)&qword_3B8510, &qword_3B96F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v4, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_12A8FC(void (*a1)(uint64_t *__return_ptr), uint64_t a2, uint64_t isEscapingClosureAtFileLocation, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t MainExecutor;
  uint64_t v18;
  uint64_t result;
  Swift::String v20;
  Swift::String v21;
  void *object;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;

  v8 = v6;
  v15 = static MainActor.shared.getter();
  v16 = swift_release(v15);
  MainExecutor = swift_task_getMainExecutor(v16);
  if ((swift_task_isCurrentExecutor(MainExecutor) & 1) != 0)
  {
    a4 = swift_allocObject(&unk_382A28, 32, 7);
    *(_QWORD *)(a4 + 16) = a1;
    *(_QWORD *)(a4 + 24) = a2;
    v18 = a2;
    a1(&v24);
    a5 = v7;
    if (v7)
    {
      swift_release(a4);
      return v18;
    }
    v18 = v24;
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(a4, "", 0, 0, 0, 0);
    swift_release(a4);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return v18;
    __break(1u);
  }
  v24 = 0;
  v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(66);
  v20._object = (void *)0x80000000002CC730;
  v20._countAndFlagsBits = 0xD00000000000003FLL;
  String.append(_:)(v20);
  v21._countAndFlagsBits = _typeName(_:qualified:)(v8, 0);
  object = v21._object;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(object);
  v23._countAndFlagsBits = 46;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v24, v25, isEscapingClosureAtFileLocation, a4, a5, a6, 0);
  __break(1u);
  return result;
}

uint64_t sub_12AA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 1336) = v18;
  *(_QWORD *)(v8 + 1328) = v17;
  *(_OWORD *)(v8 + 1312) = v16;
  *(_QWORD *)(v8 + 1304) = a8;
  *(_QWORD *)(v8 + 1296) = a7;
  *(_QWORD *)(v8 + 1288) = a6;
  *(_QWORD *)(v8 + 1280) = a5;
  *(_QWORD *)(v8 + 1272) = a4;
  *(_QWORD *)(v8 + 1264) = a3;
  *(_QWORD *)(v8 + 1256) = a2;
  *(_QWORD *)(v8 + 1248) = a1;
  v9 = type metadata accessor for PaginationOperation.Parameters(0);
  *(_QWORD *)(v8 + 1344) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  *(_QWORD *)(v8 + 1352) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 1360) = v11;
  *(_QWORD *)(v8 + 1368) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 1376) = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 1384) = v13;
  *(_QWORD *)(v8 + 1392) = v14;
  return swift_task_switch(sub_12AB78, v13, v14);
}

void sub_12AB78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  NSObject *v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t ObjectType;
  uint64_t (*v74)(uint64_t, uint64_t, __n128);
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  double v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t KeyPath;
  uint64_t v88;
  void (*v89)(uint64_t *);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  NSObject *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void (*v107)(uint64_t *);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  void *v113;
  NSObject **v114;
  NSObject *log;
  NSObject **type;
  os_log_type_t typea[8];
  uint64_t v118;
  os_log_t v119;
  NSObject *v120;
  os_log_t v121;
  uint64_t v122;
  os_log_type_t v123;
  os_log_type_t v124;
  uint64_t v125;
  os_log_t v126;
  uint64_t v127;

  v1 = *(_QWORD *)(v0 + 1248) + 16;
  swift_beginAccess(v1, v0 + 1008, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 1400) = Strong;
  if (!Strong)
    goto LABEL_42;
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 1272) + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result;
  swift_beginAccess(v4, v0 + 1080, 0, 0);
  sub_3F238(v4, v0 + 400, &qword_3BD8F8);
  if (!*(_QWORD *)(v0 + 424))
  {
    v17 = v0 + 1056;
    v18 = v0 + 977;
    v19 = *(void **)(v0 + 1272);
    swift_release();
    sub_52128(v0 + 400, &qword_3BD8F8);
    if ((objc_msgSend(v19, "isCancelled") & 1) != 0)
    {
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v20 = *(_QWORD *)(v0 + 1280);
      v21 = *(void **)(v0 + 1272);
      sub_555F0(*(_QWORD *)(v0 + 1352), (uint64_t)qword_3BD350);
      sub_49F1C(v20, v0 + 912);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.info.getter();
      v24 = os_log_type_enabled(v22, v23);
      v25 = *(NSObject **)(v0 + 1272);
      if (v24)
      {
        v26 = swift_slowAlloc(32, -1);
        v114 = (NSObject **)swift_slowAlloc(8, -1);
        v119 = (os_log_t)swift_slowAlloc(32, -1);
        v127 = (uint64_t)v119;
        *(_DWORD *)v26 = 134218498;
        v27 = *(_QWORD *)(v0 + 936);
        v28 = *(_QWORD *)(v0 + 944);
        sub_472D0((_QWORD *)(v0 + 912), v27);
        v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 16);
        log = v22;
        v30 = v28;
        v17 = v0 + 1056;
        v31 = v29(v27, v30);
        sub_34488((_QWORD *)(v0 + 912));
        *(_QWORD *)(v0 + 1168) = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1168, v0 + 1176, v26 + 4);
        *(_WORD *)(v26 + 12) = 2112;
        *(_QWORD *)(v0 + 1136) = v25;
        v32 = v25;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1136, v0 + 1144, v26 + 14);
        *v114 = v25;

        *(_WORD *)(v26 + 22) = 2080;
        v33 = *(uint64_t *)((char *)&v32[25].isa + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters);
        v34 = *(unint64_t *)((char *)&v32[26].isa + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters);
        swift_bridgeObjectRetain(v34);
        *(_QWORD *)(v0 + 1128) = sub_33524(v33, v34, &v127);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1128, v0 + 1136, v26 + 24);

        v35 = v34;
        v18 = v0 + 977;
        swift_bridgeObjectRelease(v35);
        v25 = log;
        _os_log_impl(&dword_0, log, v23, "Operation canceled for ordinal: %ld op:%@ operationKey:%s", (uint8_t *)v26, 0x20u);
        v36 = sub_319AC(&qword_3B8A70);
        swift_arrayDestroy(v114, 1, v36);
        swift_slowDealloc(v114, -1, -1);
        swift_arrayDestroy(v119, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v119, -1, -1);
        v37 = v26;
LABEL_22:
        swift_slowDealloc(v37, -1, -1);
        goto LABEL_30;
      }
      v83 = (_QWORD *)(v0 + 912);
    }
    else
    {
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v46 = *(_QWORD *)(v0 + 1280);
      v47 = *(void **)(v0 + 1272);
      sub_555F0(*(_QWORD *)(v0 + 1352), (uint64_t)qword_3BD350);
      sub_49F1C(v46, v0 + 872);
      v22 = Logger.logObject.getter(v47);
      v48 = static os_log_type_t.error.getter(v22);
      v49 = os_log_type_enabled(v22, v48);
      v25 = *(NSObject **)(v0 + 1272);
      if (v49)
      {
        v50 = swift_slowAlloc(32, -1);
        type = (NSObject **)swift_slowAlloc(8, -1);
        v125 = swift_slowAlloc(32, -1);
        v127 = v125;
        *(_DWORD *)v50 = 134218498;
        v124 = v48;
        v51 = *(_QWORD *)(v0 + 896);
        v52 = *(_QWORD *)(v0 + 904);
        sub_472D0((_QWORD *)(v0 + 872), v51);
        v120 = v22;
        v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(v51, v52);
        sub_34488((_QWORD *)(v0 + 872));
        *(_QWORD *)(v0 + 1208) = v53;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1208, v0 + 1216, v50 + 4);
        *(_WORD *)(v50 + 12) = 2112;
        *(_QWORD *)(v0 + 1200) = v25;
        v54 = v25;
        v17 = v0 + 1056;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1200, v0 + 1208, v50 + 14);
        *type = v25;

        *(_WORD *)(v50 + 22) = 2080;
        v55 = *(uint64_t *)((char *)&v54[25].isa + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters);
        v56 = *(unint64_t *)((char *)&v54[26].isa + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters);
        swift_bridgeObjectRetain(v56);
        *(_QWORD *)(v0 + 1176) = sub_33524(v55, v56, &v127);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1176, v0 + 1184, v50 + 24);

        swift_bridgeObjectRelease(v56);
        v25 = v120;
        _os_log_impl(&dword_0, v120, v124, "Failed to get result ordinal: %ld op:%@  operationKey:%s", (uint8_t *)v50, 0x20u);
        v57 = sub_319AC(&qword_3B8A70);
        swift_arrayDestroy(type, 1, v57);
        swift_slowDealloc(type, -1, -1);
        swift_arrayDestroy(v125, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v125, -1, -1);
        v37 = v50;
        v18 = v0 + 977;
        goto LABEL_22;
      }
      v83 = (_QWORD *)(v0 + 872);
    }
    sub_34488(v83);

LABEL_30:
    v84 = *(_QWORD *)(v0 + 1288);
    v85 = *(_QWORD *)(v0 + 1256);
    v86 = (_BYTE *)(v84 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed);
    swift_beginAccess(v84 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed, v17, 1, 0);
    *v86 = 1;
    KeyPath = swift_getKeyPath(&unk_2ED6E8);
    v88 = swift_getKeyPath(&unk_2ED710);
    *(_BYTE *)(v0 + 977) = 1;
    swift_retain();
    static Published.subscript.setter(v18, v84, KeyPath, v88);
    if (v85)
    {
      v89 = *(void (**)(uint64_t *))(v0 + 1256);
      LOBYTE(v127) = 1;
      v89(&v127);
    }
    goto LABEL_42;
  }
  v5 = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v0 + 256) = v5;
  v6 = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 320) = v6;
  v7 = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v0 + 288) = v7;
  v8 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 384) = v8;
  v9 = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v0 + 352) = v9;
  v10 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 224) = v10;
  v11 = *(_QWORD *)(v0 + 248);
  v12 = *(_QWORD *)(v0 + 256);
  v13 = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  *(_QWORD *)(v0 + 1408) = OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity;
  v14 = *(uint64_t *)((char *)&v3->isa + v13);
  if (!v14)
  {
    __break(1u);
    goto LABEL_44;
  }
  v15 = *(_QWORD *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 88);
  if (v11 == v15 && v12 == v16)
  {
    sub_1372B8(v0 + 208, v0 + 16);
LABEL_14:
    v126 = v3;
    v40 = *(_QWORD *)(v0 + 56);
    v39 = *(_QWORD *)(v0 + 64);
    v41 = objc_msgSend(*(id *)(v0 + 1296), "be_configurationKey", swift_bridgeObjectRetain(v39).n128_f64[0]);
    if (v41)
    {
      v42 = v41;
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
      v45 = v44;

      if (v40 == v43 && v39 == v45)
      {
        sub_1372F4((_QWORD *)(v0 + 16));
        swift_bridgeObjectRelease_n(v39, 2);
LABEL_26:
        v59 = *(_QWORD *)(v0 + 1344);
        v60 = *(_QWORD *)(v0 + 1312);
        v61 = *(_QWORD *)(v0 + 1304);
        v62 = *(_QWORD *)(v0 + 1272) + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters;
        v63 = *(_QWORD *)(v62 + 144);
        v64 = *(_BYTE *)(v62 + 152);
        v65 = *(_BYTE *)(v62 + 153);
        v66 = *(_QWORD *)(v62 + 160);
        v67 = *(_QWORD *)(v62 + 168);
        v68 = *(_BYTE *)(v62 + 176);
        v69 = *(_QWORD *)(v62 + 184);
        v70 = *(_BYTE *)(v62 + 192);
        v71 = *(_QWORD *)(v62 + 200);
        v72 = *(_QWORD *)(v62 + 208);
        *(_OWORD *)(v0 + 784) = *(_OWORD *)(v62 + 128);
        *(_QWORD *)(v0 + 800) = v63;
        *(_BYTE *)(v0 + 808) = v64;
        *(_BYTE *)(v0 + 809) = v65;
        *(_QWORD *)(v0 + 816) = v66;
        *(_QWORD *)(v0 + 824) = v67;
        *(_BYTE *)(v0 + 832) = v68;
        *(_QWORD *)(v0 + 840) = v69;
        *(_BYTE *)(v0 + 848) = v70;
        *(_QWORD *)(v0 + 856) = v71;
        *(_QWORD *)(v0 + 864) = v72;
        ObjectType = swift_getObjectType(v61);
        v74 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v60 + 184);
        v75 = swift_bridgeObjectRetain(v72);
        v76 = v74(ObjectType, v60, v75);
        v78 = v77;
        *(_QWORD *)(v0 + 1416) = v77;
        sub_137328(v62, v59, type metadata accessor for PaginationOperation.Parameters);
        v79 = (*(double (**)(uint64_t, uint64_t))(v60 + 48))(ObjectType, v60);
        v81 = v80;
        v82 = (_QWORD *)swift_task_alloc(dword_3BD904);
        *(_QWORD *)(v0 + 1424) = v82;
        *v82 = v0;
        v82[1] = sub_12B840;
        sub_12873C(*(_QWORD *)(v0 + 1288), v0 + 784, v76, v78, *(_QWORD *)(v0 + 1344), 0, v0 + 208, v79, v81);
        return;
      }
      v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v39, v43, v45, 0);
      swift_bridgeObjectRetain(v39);
      swift_bridgeObjectRelease(v45);
      sub_1372F4((_QWORD *)(v0 + 16));
      swift_bridgeObjectRelease_n(v39, 2);
      if ((v58 & 1) != 0)
        goto LABEL_26;
      swift_release();
    }
    else
    {
      sub_1372F4((_QWORD *)(v0 + 16));
      swift_release();
      swift_bridgeObjectRelease(v39);
    }
    v3 = v126;
    goto LABEL_34;
  }
  v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v15, v16, 0);
  sub_1372B8(v0 + 208, v0 + 16);
  if ((v38 & 1) != 0)
    goto LABEL_14;
  swift_release();
  sub_1372F4((_QWORD *)(v0 + 16));
LABEL_34:
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v90 = *(_QWORD *)(v0 + 1368);
  v91 = *(_QWORD *)(v0 + 1360);
  v92 = *(_QWORD *)(v0 + 1352);
  v93 = *(void **)(v0 + 1272);
  v94 = sub_555F0(v92, (uint64_t)qword_3BD350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16))(v90, v94, v92);
  sub_1372B8(v0 + 208, v0 + 592);
  swift_retain_n(v3);
  v95 = Logger.logObject.getter(v93);
  v96 = static os_log_type_t.error.getter(v95);
  if (!os_log_type_enabled(v95, v96))
  {
    v108 = *(_QWORD *)(v0 + 1368);
    v109 = *(_QWORD *)(v0 + 1360);
    v110 = *(_QWORD *)(v0 + 1352);
    v111 = *(void **)(v0 + 1272);
    swift_release_n(v3);

    sub_1372F4((_QWORD *)(v0 + 592));
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v110);
    sub_1372F4((_QWORD *)(v0 + 208));
    v107 = *(void (**)(uint64_t *))(v0 + 1256);
    if (!v107)
    {
LABEL_42:
      swift_release();
      v112 = *(_QWORD *)(v0 + 1344);
      swift_task_dealloc(*(_QWORD *)(v0 + 1368));
      swift_task_dealloc(v112);
      (*(void (**)(void))(v0 + 8))();
      return;
    }
LABEL_41:
    LOBYTE(v127) = 1;
    v107(&v127);
    goto LABEL_42;
  }
  v123 = v96;
  v97 = swift_slowAlloc(32, -1);
  v122 = swift_slowAlloc(96, -1);
  v127 = v122;
  *(_DWORD *)v97 = 136315650;
  v98 = v3;
  v99 = *(_QWORD *)(v0 + 632);
  v100 = *(_QWORD *)(v0 + 640);
  swift_bridgeObjectRetain(v100);
  *(_QWORD *)(v0 + 1144) = sub_33524(v99, v100, &v127);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1144, v0 + 1152, v97 + 4);
  swift_bridgeObjectRelease(v100);
  sub_1372F4((_QWORD *)(v0 + 592));
  *(_WORD *)(v97 + 12) = 2080;
  v101 = *(uint64_t *)((char *)&v98->isa + v13);
  if (v101)
  {
    *(_QWORD *)typea = *(_QWORD *)(v0 + 1368);
    v118 = *(_QWORD *)(v0 + 1360);
    v121 = *(os_log_t *)(v0 + 1352);
    v102 = *(char **)(v0 + 1272);
    v104 = *(_QWORD *)(v101 + 80);
    v103 = *(_QWORD *)(v101 + 88);
    swift_bridgeObjectRetain(v103);
    *(_QWORD *)(v0 + 1152) = sub_33524(v104, v103, &v127);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1152, v0 + 1160, v97 + 14);
    swift_release_n(v98);
    swift_bridgeObjectRelease(v103);
    *(_WORD *)(v97 + 22) = 2080;
    v105 = *(_QWORD *)&v102[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 200];
    v106 = *(_QWORD *)&v102[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 208];
    swift_bridgeObjectRetain(v106);
    *(_QWORD *)(v0 + 1160) = sub_33524(v105, v106, &v127);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1160, v0 + 1168, v97 + 24);

    swift_bridgeObjectRelease(v106);
    _os_log_impl(&dword_0, v95, v123, "Got a stale result! resultKey:%s currentKey:%s operationKey:%s", (uint8_t *)v97, 0x20u);
    swift_arrayDestroy(v122, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v122, -1, -1);
    swift_slowDealloc(v97, -1, -1);

    (*(void (**)(os_log_type_t *, os_log_t))(v118 + 8))(*(os_log_type_t **)typea, v121);
    sub_1372F4((_QWORD *)(v0 + 208));
    v107 = *(void (**)(uint64_t *))(v0 + 1256);
    if (!v107)
      goto LABEL_42;
    goto LABEL_41;
  }
LABEL_44:
  v113 = *(void **)(v0 + 1272);
  swift_release();

  __break(1u);
}

uint64_t sub_12B840()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 1416);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 1344);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 1424));
  swift_bridgeObjectRelease(v2);
  sub_BA58C(v3, type metadata accessor for PaginationOperation.Parameters);
  swift_bridgeObjectRelease(v1[108]);
  return swift_task_switch(sub_12B8C0, v1[173], v1[174]);
}

void sub_12B8C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t (*v31)(uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  void (*v40)(char *, __n128);
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;

  v1 = *(_QWORD *)(v0 + 1408);
  v2 = *(_QWORD *)(v0 + 1400);
  swift_release();
  if (*(_QWORD *)(v2 + v1))
  {
    v3 = *(_QWORD *)(v0 + 1320);
    v4 = *(_QWORD *)(v0 + 1288);
    swift_retain();
    sub_E7364();
    swift_release();
    sub_11CAC4();
    swift_retain();
    v5 = sub_319AC((uint64_t *)&unk_3B8EA0);
    v6 = sub_3DCC0((unint64_t *)&unk_3B8CC0, (uint64_t *)&unk_3B8EA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v5, v6);
    swift_release();
    *(_QWORD *)(v0 + 952) = *(_QWORD *)(v4 + 16);
    *(_OWORD *)(v0 + 960) = 0u;
    *(_BYTE *)(v0 + 976) = 2;
    PassthroughSubject.send(_:)(v0 + 952);
    if (!v3)
      goto LABEL_27;
    v7 = *(_QWORD *)(v0 + 1320);
    KeyPath = swift_getKeyPath(&unk_2ED6E8);
    swift_getKeyPath(&unk_2ED710);
    v9 = swift_retain();
    static Published.subscript.getter((_QWORD *)(v0 + 979), v9, KeyPath);
    swift_release();
    swift_release();
    if ((*(_BYTE *)(v0 + 979) & 1) == 0)
      goto LABEL_12;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 1400) + *(_QWORD *)(v0 + 1408)))
    {
      v10 = *(_QWORD **)(v0 + 1280);
      v11 = v10[3];
      v12 = v10[4];
      sub_472D0(v10, v11);
      v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
      swift_retain();
      v14 = v13(v11, v12);
      v15 = BookPaginationEntity.document(for:)(v14);
      swift_release();
      if (v15)
      {
        v16 = swift_getKeyPath(&unk_2ED6E8);
        swift_getKeyPath(&unk_2ED710);
        static Published.subscript.getter((_QWORD *)(v0 + 978), v15, v16);
        swift_release();
        swift_release();
        if ((*(_BYTE *)(v0 + 978) & 1) != 0)
        {
          v17 = (_QWORD *)(v7 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
          swift_beginAccess(v7 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v0 + 984, 0, 0);
          v18 = *v17;
          v19 = (uint64_t *)(v15 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
          swift_beginAccess(v15 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v0 + 1104, 0, 0);
          if (v18 == *v19)
          {
            if (qword_3B57A0 != -1)
              swift_once(&qword_3B57A0, sub_11B838);
            sub_555F0(*(_QWORD *)(v0 + 1352), (uint64_t)qword_3BD350);
            swift_retain_n(v15);
            v20 = swift_retain();
            v21 = Logger.logObject.getter(v20);
            v22 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v21, v22))
            {
              v23 = swift_slowAlloc(32, -1);
              *(_DWORD *)v23 = 134349568;
              *(_QWORD *)(v0 + 1216) = *(_QWORD *)(v15 + 16);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1216, v0 + 1224, v23 + 4);
              *(_WORD *)(v23 + 12) = 2050;
              *(_QWORD *)(v0 + 1192) = *v17;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1192, v0 + 1200, v23 + 14);
              swift_release();
              *(_WORD *)(v23 + 22) = 2050;
              v24 = *v19;
              swift_release();
              *(_QWORD *)(v0 + 1184) = v24;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1184, v0 + 1192, v23 + 24);
              swift_release();
              v25 = "Pagination Page Count Confirmation: ordinal:%{public}ld cachedPageCount: %{public}ld, resultDocument"
                    ".pageCount: %{public}ld";
LABEL_21:
              _os_log_impl(&dword_0, v21, v22, v25, (uint8_t *)v23, 0x20u);
              swift_slowDealloc(v23, -1, -1);
LABEL_26:
              swift_release();
              swift_release();

LABEL_27:
              sub_1372F4((_QWORD *)(v0 + 208));
              v40 = *(void (**)(char *, __n128))(v0 + 1256);
              if (!v40)
                goto LABEL_28;
              goto LABEL_24;
            }
            goto LABEL_25;
          }
          v42 = v19;
          v26 = *(_QWORD *)(v0 + 1400);
          v43 = *(_QWORD *)(v0 + 1336);
          v44 = v17;
          v27 = *(_QWORD *)(v0 + 1328);
          swift_beginAccess(v26 + 32, v0 + 1032, 0, 0);
          v29 = *(_QWORD *)(v26 + 32);
          v28 = *(_QWORD *)(v26 + 40);
          ObjectType = swift_getObjectType(v29);
          v31 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v28 + 184);
          v32 = swift_unknownObjectRetain(v29);
          v33 = v31(ObjectType, v28, v32);
          v35 = v34;
          swift_unknownObjectRelease(v29);
          if (v33 == v27 && v35 == v43)
          {
            swift_bridgeObjectRelease(*(_QWORD *)(v0 + 1336));
            goto LABEL_17;
          }
          v36 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)(v0 + 1328), *(_QWORD *)(v0 + 1336), v33, v35, 0);
          swift_bridgeObjectRelease(v35);
          if ((v36 & 1) != 0)
          {
LABEL_17:
            if (qword_3B57A0 != -1)
              swift_once(&qword_3B57A0, sub_11B838);
            sub_555F0(*(_QWORD *)(v0 + 1352), (uint64_t)qword_3BD350);
            swift_retain_n(v15);
            v37 = swift_retain();
            v21 = Logger.logObject.getter(v37);
            v22 = static os_log_type_t.error.getter(v21);
            if (os_log_type_enabled(v21, v22))
            {
              v23 = swift_slowAlloc(32, -1);
              *(_DWORD *)v23 = 134349568;
              *(_QWORD *)(v0 + 1224) = *(_QWORD *)(v15 + 16);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1224, v0 + 1232, v23 + 4);
              *(_WORD *)(v23 + 12) = 2050;
              *(_QWORD *)(v0 + 1232) = *v44;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1232, v0 + 1240, v23 + 14);
              swift_release();
              *(_WORD *)(v23 + 22) = 2050;
              v38 = *v42;
              swift_release();
              *(_QWORD *)(v0 + 1240) = v38;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1240, v0 + 1248, v23 + 24);
              swift_release();
              v25 = "Pagination Page Count Mismatch: #staleCache ordinal:%{public}ld cachedPageCount: %{public}ld, result"
                    "Document.pageCount: %{public}ld";
              goto LABEL_21;
            }
LABEL_25:
            swift_release_n(v7);
            swift_release();
            goto LABEL_26;
          }
        }
        sub_1372F4((_QWORD *)(v0 + 208));
        swift_release();
LABEL_23:
        v39 = swift_release();
        v40 = *(void (**)(char *, __n128))(v0 + 1256);
        if (!v40)
        {
LABEL_28:
          swift_release();
          v41 = *(_QWORD *)(v0 + 1344);
          swift_task_dealloc(*(_QWORD *)(v0 + 1368));
          swift_task_dealloc(v41);
          (*(void (**)(void))(v0 + 8))();
          return;
        }
LABEL_24:
        v45 = 1;
        v40(&v45, v39);
        goto LABEL_28;
      }
LABEL_12:
      sub_1372F4((_QWORD *)(v0 + 208));
      goto LABEL_23;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_12BF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double result;
  uint64_t v15;

  v8 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TaskPriority.userInitiated.getter(v11);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  v13 = (_QWORD *)swift_allocObject(a3, 48);
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  v13[5] = a2;
  swift_retain();
  sub_67B40((uint64_t)v10, a4, (uint64_t)v13);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_12BFE8(uint64_t *a1@<X0>, void (*a2)(unsigned __int128 *__return_ptr, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v9;
  uint64_t v10;
  double v16;
  unint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, __n128);
  __n128 v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, __n128);
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, __n128);
  __n128 v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  double v70;
  double v71;
  double v72;
  __int128 v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  double v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v111;
  _BYTE v112[24];
  uint64_t v113[3];
  char v114;
  double v115[3];
  unsigned __int128 v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[32];

  v10 = v9;
  v108 = *a1;
  v16 = *(double *)(a3 + 8);
  v17 = *(_QWORD *)(a3 + 32);
  v18 = *(double *)(a3 + 40);
  v19 = *(_QWORD *)(a3 + 80);
  swift_beginAccess(v9 + 32, v119, 0, 0);
  v20 = *(_QWORD *)(v9 + 32);
  v21 = *(_QWORD *)(v10 + 40);
  ObjectType = swift_getObjectType(v20);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 24);
  v24 = swift_unknownObjectRetain(v20);
  v25 = v23(ObjectType, v21, v24);
  swift_unknownObjectRelease(v20);
  v111 = v17;
  if (v17 == v25)
    goto LABEL_6;
  if (qword_3B57A0 != -1)
    goto LABEL_44;
  while (1)
  {
    v26 = type metadata accessor for Logger(0);
    v27 = sub_555F0(v26, (uint64_t)qword_3BD350);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_0, v28, v29, "Creating page rect with configuration that is not the current configuration", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

LABEL_6:
    v31 = *(_QWORD *)(v10 + 32);
    v32 = *(_QWORD *)(v10 + 40);
    v33 = swift_getObjectType(v31);
    v34 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v32 + 24);
    v35 = swift_unknownObjectRetain(v31);
    v36 = (_QWORD *)v34(v33, v32, v35);
    swift_unknownObjectRelease(v31);
    type metadata accessor for BookLayoutMode(0);
    v38 = v37;
    if ((unint64_t)v36 - 1 >= 3)
    {
      if (v36)
        goto LABEL_46;
      if (qword_3B56F0 != -1)
        swift_once(&qword_3B56F0, sub_8A4D8);
      v39 = type metadata accessor for Logger(0);
      v40 = sub_555F0(v39, (uint64_t)qword_3CEFD0);
      v41 = Logger.logObject.getter(v40);
      v42 = static os_log_type_t.error.getter(v41);
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v43 = 0;
        swift_slowDealloc(v43, -1, -1);
      }

    }
    v106 = v38;
    v107 = v19;
    v38 = (uint64_t)a2;
    v44 = *(_QWORD *)(v10 + 32);
    v45 = *(_QWORD *)(v10 + 40);
    v46 = swift_getObjectType(v44);
    v47 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v45 + 24);
    v48 = swift_unknownObjectRetain(v44);
    v19 = v47(v46, v45, v48);
    swift_unknownObjectRelease(v44);
    v49 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
    v50 = swift_getObjectType(*(_QWORD *)(v10 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
    a2 = *(void (**)(unsigned __int128 *__return_ptr, uint64_t, uint64_t))(v49 + 8);
    a2(&v116, v50, v49);
    v51 = v117;
    v52 = v118;
    v36 = sub_472D0(&v116, v117);
    v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 128))(v51, v52);
    sub_FD230(v19, v53 & 1, (char *)v113);
    v54 = sub_34488(&v116);
    if (v111 >= 2)
    {
      v16 = 0.0;
      if (v111 - 2 >= 2)
        goto LABEL_45;
    }
    v55 = CGFloat.ceiling.getter(v54, v18 + v16);
    v57 = CGFloat.ceiling.getter(v56, v55);
    if (!__OFSUB__(a4, 1))
      break;
    __break(1u);
LABEL_44:
    swift_once(&qword_3B57A0, sub_11B838);
  }
  v58 = v57;
  v59 = (double)v38;
  v115[0] = a6;
  v115[1] = a7;
  v60 = *(_QWORD *)(v10 + 32);
  v61 = *(_QWORD *)(v10 + 40);
  v62 = swift_getObjectType(v60);
  v63 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v61 + 24);
  v64 = swift_unknownObjectRetain(v60);
  v65 = v63(v62, v61, v64);
  v66 = swift_unknownObjectRelease(v60);
  ((void (*)(unsigned __int128 *__return_ptr, uint64_t, uint64_t, __n128))a2)(&v116, v50, v49, v66);
  v67 = v117;
  v68 = v118;
  v36 = sub_472D0(&v116, v117);
  v69 = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 128))(v67, v68);
  sub_FD230(v65, v69 & 1, &v114);
  sub_34488(&v116);
  if (!v114)
  {
    v71 = v58 * v59;
    goto LABEL_21;
  }
  v70 = (double)(a4 - 1);
  if (v114 == 1)
  {
    if (v111 < 2)
    {
      v71 = (v70 - v59) * v58;
      goto LABEL_21;
    }
    if (v111 - 2 < 2)
    {
      v90 = (double)a4 * a6 - a8;
      if (v90 < 0.0)
      {
        if (qword_3B57A0 != -1)
          swift_once(&qword_3B57A0, sub_11B838);
        v91 = type metadata accessor for Logger(0);
        v92 = sub_555F0(v91, (uint64_t)qword_3BD350);
        v93 = Logger.logObject.getter(v92);
        v94 = static os_log_type_t.error.getter(v93);
        if (os_log_type_enabled(v93, v94))
        {
          v95 = swift_slowAlloc(42, -1);
          v96 = swift_slowAlloc(64, -1);
          v113[0] = v96;
          *(_DWORD *)v95 = 136315906;
          *(double *)&v116 = a8;
          *((double *)&v116 + 1) = a9;
          type metadata accessor for CGSize(0);
          v98 = v97;
          v99 = String.init<A>(describing:)(&v116, v97);
          v101 = v100;
          *(_QWORD *)&v116 = sub_33524(v99, v100, v113);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v95 + 4);
          swift_bridgeObjectRelease(v101);
          *(_WORD *)(v95 + 12) = 2048;
          swift_beginAccess(v115, v112, 0, 0);
          v102 = *(_QWORD *)&v115[0];
          *(double *)&v116 = v115[0] * (double)a4;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v95 + 14);
          *(_WORD *)(v95 + 22) = 2080;
          v116 = __PAIR128__(*(unint64_t *)&v115[1], v102);
          v103 = String.init<A>(describing:)(&v116, v98);
          v105 = v104;
          *(_QWORD *)&v116 = sub_33524(v103, v104, v113);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v95 + 24);
          swift_bridgeObjectRelease(v105);
          *(_WORD *)(v95 + 32) = 2048;
          *(_QWORD *)&v116 = a4;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v95 + 34);
          _os_log_impl(&dword_0, v93, v94, "#ContentSize: %s is larger than calculated size: %f pageSize: %s pageCount:%ld", (uint8_t *)v95, 0x2Au);
          swift_arrayDestroy(v96, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v96, -1, -1);
          swift_slowDealloc(v95, -1, -1);
        }

      }
      if (v59 == v70)
      {
        swift_beginAccess(v115, v113, 1, 0);
        v115[0] = v115[0] - v90;
        v72 = 0.0;
        v71 = 0.0;
        goto LABEL_22;
      }
      v71 = (v70 - v59) * v58 - v90;
LABEL_21:
      v72 = 0.0;
LABEL_22:
      swift_beginAccess(v115, &v116, 0, 0);
      v73 = *(_OWORD *)v115;
      *(_QWORD *)a5 = v108;
      *(double *)(a5 + 8) = v71;
      *(double *)(a5 + 16) = v72;
      *(_OWORD *)(a5 + 24) = v73;
      return;
    }
  }
  else
  {
    v72 = v58 * v59;
    v71 = 0.0;
    if (v59 != v70 || v111 < 2)
      goto LABEL_22;
    if (v111 - 2 < 2)
    {
      v74 = (double)a4 * a7 - a9;
      if (v74 < 0.0)
      {
        if (qword_3B57A0 != -1)
          swift_once(&qword_3B57A0, sub_11B838);
        v75 = type metadata accessor for Logger(0);
        v76 = sub_555F0(v75, (uint64_t)qword_3BD350);
        v77 = Logger.logObject.getter(v76);
        v78 = static os_log_type_t.error.getter(v77);
        if (os_log_type_enabled(v77, v78))
        {
          v79 = swift_slowAlloc(42, -1);
          v80 = swift_slowAlloc(64, -1);
          v113[0] = v80;
          *(_DWORD *)v79 = 136315906;
          *(double *)&v116 = a8;
          *((double *)&v116 + 1) = a9;
          type metadata accessor for CGSize(0);
          v82 = v81;
          v83 = String.init<A>(describing:)(&v116, v81);
          v85 = v84;
          *(_QWORD *)&v116 = sub_33524(v83, v84, v113);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v79 + 4);
          swift_bridgeObjectRelease(v85);
          *(_WORD *)(v79 + 12) = 2048;
          swift_beginAccess(v115, v112, 0, 0);
          v86 = v115[1];
          *(double *)&v116 = v115[1] * (double)a4;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v79 + 14);
          *(_WORD *)(v79 + 22) = 2080;
          *(double *)&v116 = v115[0];
          *((double *)&v116 + 1) = v86;
          v87 = String.init<A>(describing:)(&v116, v82);
          v89 = v88;
          *(_QWORD *)&v116 = sub_33524(v87, v88, v113);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v79 + 24);
          swift_bridgeObjectRelease(v89);
          *(_WORD *)(v79 + 32) = 2048;
          *(_QWORD *)&v116 = a4;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v79 + 34);
          _os_log_impl(&dword_0, v77, v78, "#ContentSize: %s is larger than calculated size: %f pageSize: %s pageCount:%ld", (uint8_t *)v79, 0x2Au);
          swift_arrayDestroy(v80, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v80, -1, -1);
          swift_slowDealloc(v79, -1, -1);
        }

      }
      swift_beginAccess(v115, v113, 1, 0);
      v115[1] = v115[1] - v74;
      goto LABEL_22;
    }
  }
LABEL_45:
  *(_QWORD *)&v116 = v111;
  swift_bridgeObjectRetain(v107);
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v106, &v116, v106, &type metadata for UInt);
  __break(1u);
LABEL_46:
  *(_QWORD *)&v116 = v36;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v38, &v116, v38, &type metadata for UInt);
  __break(1u);
}

void sub_12C948(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t KeyPath;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, __n128);
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE v97[32];
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[3];
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v5 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = type metadata accessor for DocumentAnchor();
  swift_allocObject(v8, 48);
  swift_bridgeObjectRetain(v6);
  sub_112E00(v7, v6);
  v94 = a3;
  v95 = v9;
  v93 = v5;
  if (v9)
  {
    v7 = *(_QWORD *)(v9 + 16);
    v6 = *(_QWORD *)(v9 + 24);
  }
  swift_bridgeObjectRetain(v6);
  v90 = a2;
  v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  v12 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 8);
  v12(&v101, ObjectType, v10);
  v13 = v104;
  v14 = v105;
  sub_472D0(&v101, v104);
  (*(void (**)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 344))(&v98, v7, v6, v13, v14);
  if (v99)
  {
    swift_bridgeObjectRelease(v6);
    sub_3F1CC(&v98, (uint64_t)v106);
    sub_34488(&v101);
    v12(&v101, ObjectType, v10);
    v15 = v104;
    v16 = v105;
    sub_472D0(&v101, v104);
    v17 = v107;
    v18 = v108;
    sub_472D0(v106, v107);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
    LOBYTE(v15) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 360))(v19, v15, v16);
    sub_34488(&v101);
    if ((v15 & 1) == 0)
    {
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v37 = type metadata accessor for Logger(0);
      sub_555F0(v37, (uint64_t)qword_3BD350);
      v38 = sub_49F1C((uint64_t)v106, (uint64_t)&v101);
      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v41 = 134217984;
        v42 = v104;
        v43 = v105;
        sub_472D0(&v101, v104);
        v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
        sub_34488(&v101);
        v101 = v44;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v41 + 4);
        _os_log_impl(&dword_0, v39, v40, "Skipping Chapter update for ordinal %ld, not in linear documents", v41, 0xCu);
        swift_slowDealloc(v41, -1, -1);
      }
      else
      {
        sub_34488(&v101);
      }

      goto LABEL_31;
    }
    if (*(_QWORD *)(v90 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
    {
      v20 = v107;
      v21 = v108;
      sub_472D0(v106, v107);
      v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 16);
      swift_retain();
      v23 = v22(v20, v21);
      v24 = BookPaginationEntity.document(for:)(v23);
      swift_release();
      v25 = v93;
      if (!v24)
      {
        if (qword_3B57A0 != -1)
          swift_once(&qword_3B57A0, sub_11B838);
        v45 = type metadata accessor for Logger(0);
        sub_555F0(v45, (uint64_t)qword_3BD350);
        sub_49F1C((uint64_t)v106, (uint64_t)&v101);
        v46 = sub_49F1C((uint64_t)v106, (uint64_t)&v98);
        v47 = Logger.logObject.getter(v46);
        v48 = static os_log_type_t.error.getter(v47);
        if (os_log_type_enabled(v47, v48))
        {
          v49 = swift_slowAlloc(22, -1);
          v50 = swift_slowAlloc(32, -1);
          v109 = v50;
          *(_DWORD *)v49 = 136315394;
          sub_49F1C((uint64_t)&v101, (uint64_t)&v96);
          v51 = sub_319AC((uint64_t *)&unk_3BBDF0);
          v52 = String.init<A>(describing:)(&v96, v51);
          v54 = v53;
          v96 = sub_33524(v52, v53, &v109);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v49 + 4);
          swift_bridgeObjectRelease(v54);
          sub_34488(&v101);
          *(_WORD *)(v49 + 12) = 2048;
          v55 = v99;
          v56 = v100;
          sub_472D0(&v98, v99);
          v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56);
          sub_34488(&v98);
          v96 = v57;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v49 + 14);
          _os_log_impl(&dword_0, v47, v48, "Unable to find document for document entity %s (ordinal: %ld)", (uint8_t *)v49, 0x16u);
          swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v50, -1, -1);
          swift_slowDealloc(v49, -1, -1);
        }
        else
        {
          sub_34488(&v98);
          sub_34488(&v101);
        }

        goto LABEL_31;
      }
      KeyPath = swift_getKeyPath(&unk_2ED6E8);
      swift_getKeyPath(&unk_2ED710);
      static Published.subscript.getter(&v101, v24, KeyPath);
      swift_release();
      swift_release();
      if ((v101 & 1) == 0)
      {
        v59 = v93[4];
        v58 = v93[5];
        v60 = v107;
        v61 = v108;
        sub_472D0(v106, v107);
        v62 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v61 + 16);
        v63 = swift_bridgeObjectRetain(v58);
        v64 = v62(v60, v61, v63);
        v65 = v93[6];
        v25 = (_QWORD *)v93[7];
        v66 = type metadata accessor for ChapterPaginationEntity();
        v67 = (_QWORD *)swift_allocObject(v66, 64);
        v68 = NSNotFound.getter(v67);
        if (v64 == v68)
        {
          __break(1u);
        }
        else if (NSNotFound.getter(v68))
        {
          v67[2] = v59;
          v67[3] = v58;
          v67[4] = v64;
          v67[5] = 0;
          v67[6] = v65;
          v67[7] = v25;
          swift_release();
          swift_release();
          *v94 = v67;
LABEL_40:
          sub_34488(v106);
          return;
        }
        __break(1u);
LABEL_44:
        swift_once(&qword_3B57A0, sub_11B838);
LABEL_35:
        v69 = type metadata accessor for Logger(0);
        sub_555F0(v69, (uint64_t)qword_3BD350);
        swift_retain_n(v25, 2);
        v70 = swift_retain_n(v24, 2);
        v71 = Logger.logObject.getter(v70);
        v72 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v71, v72))
        {
          v73 = swift_slowAlloc(22, -1);
          v92 = swift_slowAlloc(64, -1);
          v101 = v92;
          *(_DWORD *)v73 = 136315394;
          swift_retain();
          v74 = sub_1428F8();
          v76 = v75;
          swift_release();
          *(_QWORD *)&v98 = sub_33524(v74, v76, &v101);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v73 + 4);
          swift_release_n(v25);
          swift_bridgeObjectRelease(v76);
          *(_WORD *)(v73 + 12) = 2080;
          v77 = DocumentPaginationEntity.description.getter();
          v79 = v78;
          *(_QWORD *)&v98 = sub_33524(v77, v78, &v101);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, (char *)&v98 + 8, v73 + 14);
          swift_release_n(v24);
          swift_bridgeObjectRelease(v79);
          _os_log_impl(&dword_0, v71, v72, "Unable to find location for chapter %s in document %s", (uint8_t *)v73, 0x16u);
          swift_arrayDestroy(v92, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v92, -1, -1);
          swift_slowDealloc(v73, -1, -1);
          swift_release();

        }
        else
        {

          swift_release_n(v25);
          swift_release_n(v24);
        }
LABEL_31:
        swift_release();
        *v94 = 0;
        sub_34488(v106);
        return;
      }
      if (v95)
      {
        v28 = *(_QWORD *)(v95 + 32);
        v27 = *(_QWORD *)(v95 + 40);
        swift_bridgeObjectRetain(v27);
      }
      else
      {
        v28 = 0;
        v27 = 0;
      }
      sub_12D404(v28, v27, v24, (uint64_t)&v101);
      swift_bridgeObjectRelease(v27);
      if (v103 == 1)
      {
        if (qword_3B57A0 == -1)
          goto LABEL_35;
        goto LABEL_44;
      }
      v80 = v101;
      v81 = v102;
      v83 = v93[4];
      v82 = v93[5];
      v84 = v93[6];
      v85 = v93[7];
      v86 = type metadata accessor for ChapterPaginationEntity();
      v87 = (_QWORD *)swift_allocObject(v86, 64);
      swift_bridgeObjectRetain(v82);
      v89 = NSNotFound.getter(v88);
      if (v80 == v89)
      {
        __break(1u);
      }
      else if (v81 != NSNotFound.getter(v89))
      {
        v87[2] = v83;
        v87[3] = v82;
        v87[4] = v80;
        v87[5] = v81;
        v87[6] = v84;
        v87[7] = v85;
        swift_release();
        swift_release();
        *v94 = v87;
        goto LABEL_40;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_52128((uint64_t)&v98, &qword_3BD428);
    sub_34488(&v101);
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v29 = type metadata accessor for Logger(0);
    sub_555F0(v29, (uint64_t)qword_3BD350);
    swift_retain_n(v93, 2);
    swift_bridgeObjectRetain(v6);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc(22, -1);
      v91 = swift_slowAlloc(64, -1);
      v106[0] = v91;
      *(_DWORD *)v33 = 136315394;
      swift_retain();
      v34 = sub_1428F8();
      v36 = v35;
      swift_release();
      v101 = sub_33524(v34, v36, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v33 + 4);
      swift_release_n(v93);
      swift_bridgeObjectRelease(v36);
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain(v6);
      v101 = sub_33524(v7, v6, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102, v33 + 14);
      swift_bridgeObjectRelease_n(v6, 3);
      _os_log_impl(&dword_0, v31, v32, "Unable to find document entity for chapter entity %s (href: %s)", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy(v91, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v6, 2);
      swift_release_n(v93);
    }
    swift_release();
    *v94 = 0;
  }
}

void sub_12D404(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];

  if (a2)
  {
    v8 = (uint64_t *)(a3 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName);
    swift_beginAccess(a3 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName, v34, 0, 0);
    v9 = *v8;
    v10 = *(_QWORD *)(v9 + 16);
    swift_bridgeObjectRetain(a2);
    if (v10)
    {
      swift_bridgeObjectRetain(v9);
      v11 = sub_3B8A0(a1, a2);
      if ((v12 & 1) != 0)
      {
        v13 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v11);
        swift_retain();
        swift_bridgeObjectRelease(v9);
        swift_beginAccess(v13 + 40, &v31, 0, 0);
        v14 = *(_QWORD *)(v13 + 40);
        swift_bridgeObjectRetain(v14);
        v16 = sub_95C18(v15);
        v18 = v17;
        swift_release();
        swift_bridgeObjectRelease(v14);
        if ((v18 & 1) == 0)
        {
          swift_bridgeObjectRelease(a2);
          *(_QWORD *)a4 = *(_QWORD *)(a3 + 16);
          *(_QWORD *)(a4 + 8) = v16;
          *(_BYTE *)(a4 + 16) = 0;
          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v9);
      }
    }
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v21 = type metadata accessor for Logger(0);
    sub_555F0(v21, (uint64_t)qword_3BD350);
    swift_retain_n(a3, 2);
    swift_bridgeObjectRetain(a2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc(22, -1);
      v26 = swift_slowAlloc(64, -1);
      v33 = v26;
      *(_DWORD *)v25 = 136315394;
      swift_bridgeObjectRetain(a2);
      v32 = sub_33524(a1, a2, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v25 + 4);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v25 + 12) = 2080;
      v27 = DocumentPaginationEntity.description.getter();
      v29 = v28;
      v32 = sub_33524(v27, v28, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v25 + 14);
      swift_release_n(a3);
      swift_bridgeObjectRelease(v29);
      _os_log_impl(&dword_0, v23, v24, "Failed to find %s in document:%s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

      swift_release_n(a3);
      swift_bridgeObjectRelease_n(a2, 2);
    }
    *(_QWORD *)a4 = 0;
    *(_QWORD *)(a4 + 8) = 0;
    v30 = 1;
  }
  else
  {
    v19 = (uint64_t *)(a3 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
    swift_beginAccess(a3 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v34, 0, 0);
    if (*v19 < 1)
      v20 = 0;
    else
      v20 = *(_QWORD *)(a3 + 16);
    v30 = *v19 < 1;
    *(_QWORD *)a4 = v20;
    *(_QWORD *)(a4 + 8) = 0;
  }
  *(_BYTE *)(a4 + 16) = v30;
}

void sub_12D730(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  Swift::String v23;
  Swift::String v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  NSString v55;
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v69 = a1;
  v4 = type metadata accessor for NSScanner.NumberRepresentation(0);
  v72 = *(_QWORD *)(v4 - 8);
  v73 = v4;
  __chkstk_darwin(v4);
  v71 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HistoryEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Date(0);
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_historyProvider + 24);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_historyProvider + 32);
  sub_472D0((_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_historyProvider), v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  v74 = v12;
  static Date.distantPast.getter(v16);
  v17 = *(_QWORD *)(v15 + 16);
  if (!v17)
  {
LABEL_22:
    (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(a2, v74, v76);
    swift_bridgeObjectRelease(v15);
    return;
  }
  v68 = a2;
  v18 = v15 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v19 = *(_QWORD *)(v7 + 72);
  v70 = enum case for NSScanner.NumberRepresentation.decimal(_:);
  v67 = v15;
  swift_bridgeObjectRetain(v15);
  v78 = v19;
  v79 = v6;
  while (1)
  {
    sub_137328(v18, (uint64_t)v9, type metadata accessor for HistoryEntity);
    v20 = &v9[*(int *)(v6 + 20)];
    if ((v20[16] & 1) != 0)
      goto LABEL_4;
    v21 = *(_QWORD *)v20;
    v22 = *((_QWORD *)v20 + 1);
    swift_bridgeObjectRetain(v22);
    v23._countAndFlagsBits = 0x2869666362757065;
    v23._object = (void *)0xE800000000000000;
    if (String.hasPrefix(_:)(v23))
    {
      v24._countAndFlagsBits = 41;
      v24._object = (void *)0xE100000000000000;
      if (String.hasSuffix(_:)(v24))
        break;
    }
    sub_1396C0(v21, v22, 0);
LABEL_4:
    sub_BA58C((uint64_t)v9, type metadata accessor for HistoryEntity);
    v18 += v19;
    if (!--v17)
    {
      v15 = v67;
      swift_bridgeObjectRelease(v67);
      a2 = v68;
      goto LABEL_22;
    }
  }
  sub_1396D0(v21, v22, 0);
  v25 = sub_5C514(8uLL, v21, v22);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_1396C0(v21, v22, 0);
  v33 = Substring.index(_:offsetBy:limitedBy:)(v27, -1, v25, v25, v27, v29, v31, v32);
  if ((v34 & 1) != 0)
    v35 = v25;
  else
    v35 = v33;
  if (v35 >> 14 >= v25 >> 14)
  {
    v36 = Substring.subscript.getter(v25);
    v38 = v37;
    v40 = v39;
    v42 = v41;
    swift_bridgeObjectRelease(v31);
    v43 = static String._fromSubstring(_:)(v36, v38, v40, v42);
    v45 = v44;
    swift_bridgeObjectRelease(v42);
    v80 = v43;
    v81 = v45;
    v46 = sub_5C170();
    v47 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v46);
    swift_bridgeObjectRelease(v45);
    if (v47[2] > 1uLL)
    {
      v48 = v47[8];
      v49 = v47[9];
      v50 = v47[10];
      v51 = v47[11];
      swift_bridgeObjectRetain(v51);
      swift_bridgeObjectRelease(v47);
      static String._fromSubstring(_:)(v48, v49, v50, v51);
      v53 = v52;
      swift_bridgeObjectRelease(v51);
      v54 = objc_allocWithZone((Class)NSScanner);
      v55 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend(v54, "initWithString:", v55, swift_bridgeObjectRelease(v53).n128_f64[0]);

      v57 = v71;
      v58 = v72;
      v59 = v73;
      (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v71, v70, v73);
      v60 = NSScanner.scanInt(representation:)(v57);
      v77 = v61;

      (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
      sub_1396C0(v21, v22, 0);
      v19 = v78;
      v6 = v79;
      if ((v77 & 1) == 0 && (v60 & 1) == 0)
      {
        if (v60 >= 0)
          v62 = v60;
        else
          v62 = v60 + 1;
        if ((v62 >> 1) - 1 == v69)
        {
          v64 = v74;
          v63 = v75;
          v65 = v76;
          (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v76);
          (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v64, &v9[*(int *)(v6 + 24)], v65);
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease(v47);
      sub_1396C0(v21, v22, 0);
      v19 = v78;
      v6 = v79;
    }
    goto LABEL_4;
  }
  __break(1u);
}

void sub_12DBDC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  id v23;
  double x;
  double y;
  double width;
  double height;
  id v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  double *v40;
  double v41;
  id v42;
  double v43;
  double v44;
  uint64_t v45;
  _BYTE v46[24];
  CGRect v47;
  CGRect v48;

  v14 = objc_msgSend(a1, "scrollView");
  objc_msgSend(a1, "be_convertPointFromContentsToView:", a4, a5);
  v16 = v15;
  v18 = v17;
  objc_msgSend(a1, "be_convertPointFromContentsToView:", a4 + a6, a5 + a7);
  v20 = v19 - v16;
  v22 = v21 - v18;
  v23 = a1;
  v47.origin.x = v16;
  v47.origin.y = v18;
  v47.size.width = v20;
  v47.size.height = v22;
  v48 = CGRectStandardize(v47);
  x = v48.origin.x;
  y = v48.origin.y;
  width = v48.size.width;
  height = v48.size.height;
  v28 = v14;
  objc_msgSend(v23, "convertRect:toCoordinateSpace:", v28, x, y, width, height);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationDirection))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationDirection) == 1)
    {
      swift_bridgeObjectRelease(0xEB00000000746665);
      goto LABEL_7;
    }
    v37 = 0xE800000000000000;
    v38 = 0x6C61636974726576;
  }
  else
  {
    v37 = 0xEB00000000746867;
    v38 = 0x69526F547466656CLL;
  }
  v39 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v37, 0x4C6F547468676972, 0xEB00000000746665, 0);
  swift_bridgeObjectRelease(v37);
  if ((v39 & 1) == 0)
  {

    goto LABEL_10;
  }
LABEL_7:
  v40 = (double *)(a2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize, v46, 0, 0);
  v41 = *v40;
  v42 = objc_msgSend(v23, "scrollView");
  objc_msgSend(v42, "contentSize");
  v44 = v43;

  if (v41 - v44 != 0.0)
    v30 = v30 + v41 - v44;
LABEL_10:
  v45 = *(_QWORD *)(a2 + 16);

  *(_QWORD *)a3 = v45;
  *(double *)(a3 + 8) = v30;
  *(_QWORD *)(a3 + 16) = v32;
  *(_QWORD *)(a3 + 24) = v34;
  *(_QWORD *)(a3 + 32) = v36;
}

void sub_12DE34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, __n128);
  __n128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  BOOL v38;
  BOOL v39;
  unint64_t v41;
  char v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int64_t v60;
  unint64_t v61;
  unint64_t v62;
  int64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  uint64_t v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  _QWORD *v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  uint64_t v103;
  int64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  char v109[24];
  char v110[24];
  _QWORD v111[2];
  char v112[24];
  char v113[24];
  char v114[24];
  __int128 v115;
  uint64_t v116;
  _QWORD v117[3];
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[3];
  uint64_t v121;
  uint64_t v122;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  v5 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 8);
  v5(v120, ObjectType, v3);
  v6 = v121;
  v7 = v122;
  sub_472D0(v120, v121);
  v8 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
  sub_34488(v120);
  if (v8)
    return;
  v5(v117, ObjectType, v3);
  v9 = v119;
  sub_472D0(v117, v118);
  v100 = *(_QWORD *)(a1 + 16);
  (*(void (**)(__int128 *__return_ptr))(v9 + 336))(&v115);
  if (v116)
  {
    sub_3F1CC(&v115, (uint64_t)v120);
    sub_34488(v117);
    v5(v117, ObjectType, v3);
    v10 = v118;
    v11 = v119;
    sub_472D0(v117, v118);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 304))(v10, v11);
    sub_34488(v117);
    v13 = v12;
    v99 = v12;
    if (v12 >> 62)
      goto LABEL_74;
    v14 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
    while (v14)
    {
      v15 = (uint64_t *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
      v97 = v14;
      v98 = v13 & 0xC000000000000001;
      v96 = (_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName);
      swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName, v114, 0, 0);
      v13 = v99;
      v16 = 0;
      v101 = v15;
      while (1)
      {
        if (v98)
        {
          v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v13);
          v19 = __OFADD__(v16, 1);
          v20 = v16 + 1;
          if (v19)
            goto LABEL_70;
        }
        else
        {
          if (v16 >= *(_QWORD *)((char *)&dword_10 + (v99 & 0xFFFFFFFFFFFFFF8)))
            goto LABEL_72;
          v18 = *(_QWORD *)(v99 + 32 + 8 * v16);
          swift_retain();
          v19 = __OFADD__(v16, 1);
          v20 = v16 + 1;
          if (v19)
          {
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
        }
        v102 = v20;
        v21 = *(_QWORD *)(v18 + 24);
        v117[0] = *(_QWORD *)(v18 + 16);
        v117[1] = v21;
        v22 = sub_5C170();
        swift_bridgeObjectRetain(v21);
        v23 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(35, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v22);
        swift_bridgeObjectRelease(v21);
        v24 = v23[2];
        sub_49F1C((uint64_t)v120, (uint64_t)v117);
        if (v24 != 2)
        {
          sub_34488(v117);
LABEL_7:
          swift_release();
          v17 = v23;
          goto LABEL_8;
        }
        v107 = v18;
        v25 = v23[4];
        v26 = v23[5];
        v28 = v23[6];
        v27 = v23[7];
        v30 = v118;
        v29 = v119;
        sub_472D0(v117, v118);
        v31 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v29 + 8);
        v32 = swift_bridgeObjectRetain(v27);
        v33 = v31(v30, v29, v32);
        v35 = (v34 & 0x2000000000000000) != 0 ? HIBYTE(v34) & 0xF : v33 & 0xFFFFFFFFFFFFLL;
        v36 = v25 >> 16;
        v37 = v26 >> 16;
        v38 = v28 == v33 && v27 == v34;
        v39 = v38 && v36 == 0;
        if (v39 && v37 == v35)
        {
          swift_bridgeObjectRelease_n(v27, 2);
          sub_34488(v117);
          v43 = v101;
        }
        else
        {
          v41 = v34;
          LOBYTE(v95) = 0;
          v42 = _stringCompareInternal(_:_:_:_:expecting:)(v28, v27, v36, v37, v33, v34, 0, v35, v95);
          swift_bridgeObjectRelease(v27);
          swift_bridgeObjectRelease(v41);
          sub_34488(v117);
          v43 = v101;
          if ((v42 & 1) == 0)
            goto LABEL_7;
        }
        if (v23[2] < 2uLL)
          goto LABEL_73;
        v44 = (_QWORD *)*v96;
        v45 = v23[8];
        v46 = v23[9];
        v47 = v23[10];
        v48 = v23[11];
        swift_bridgeObjectRetain(*v96);
        swift_bridgeObjectRetain(v48);
        swift_bridgeObjectRelease(v23);
        v49 = static String._fromSubstring(_:)(v45, v46, v47, v48);
        v51 = v50;
        swift_bridgeObjectRelease(v48);
        if (v44[2])
        {
          v52 = sub_3B8A0(v49, v51);
          v53 = v107;
          if ((v54 & 1) != 0)
            break;
        }
        swift_release();
        swift_bridgeObjectRelease(v51);
        v17 = v44;
LABEL_8:
        swift_bridgeObjectRelease(v17);
LABEL_9:
        v16 = v102;
        v13 = v99;
        if (v102 == v97)
          goto LABEL_78;
      }
      v55 = *(_QWORD *)(v44[7] + 8 * v52);
      swift_retain();
      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease(v44);
      swift_beginAccess(v55 + 40, v113, 0, 0);
      v56 = *(_QWORD *)(v55 + 40);
      v103 = v56 + 56;
      v57 = 1 << *(_BYTE *)(v56 + 32);
      if (v57 < 64)
        v58 = ~(-1 << v57);
      else
        v58 = -1;
      v59 = v58 & *(_QWORD *)(v56 + 56);
      v106 = v56;
      swift_bridgeObjectRetain(v56);
      swift_beginAccess(v43, v112, 0, 0);
      v60 = 0;
      v104 = (unint64_t)(v57 + 63) >> 6;
      while (v59)
      {
        v61 = __clz(__rbit64(v59));
        v59 &= v59 - 1;
        v62 = v61 | (v60 << 6);
LABEL_58:
        v65 = *(_QWORD *)(*(_QWORD *)(v106 + 48) + 8 * v62);
        v66 = *v43;
        v111[0] = v65;
        v111[1] = v66;
        v67 = sub_319AC(&qword_3B7058);
        v68 = sub_3DCC0((unint64_t *)&qword_3BBB80, &qword_3B7058, (uint64_t)&protocol conformance descriptor for [A]);
        Collection.subscript.getter(&v115, v111, v67, v68);
        v69 = (_QWORD *)v115;
        if ((_QWORD)v115)
        {
          v105 = v65;
          v70 = *(_QWORD *)(v53 + 32);
          v71 = *(_QWORD *)(v53 + 40);
          swift_beginAccess(v115 + 112, v110, 1, 0);
          if (v69[15])
          {
            swift_beginAccess(v69 + 16, v109, 1, 0);
            v72 = v69[17];
            v69[16] = v70;
            v69[17] = v71;
          }
          else
          {
            v72 = 0;
            v69[14] = v70;
            v69[15] = v71;
          }
          v108 = v60;
          swift_bridgeObjectRetain(v71);
          swift_bridgeObjectRelease(v72);
          if (qword_3B57A0 != -1)
            swift_once(&qword_3B57A0, sub_11B838);
          v73 = type metadata accessor for Logger(0);
          sub_555F0(v73, (uint64_t)qword_3BD350);
          swift_retain();
          v74 = swift_retain();
          v75 = Logger.logObject.getter(v74);
          v76 = v53;
          v77 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v75, v77))
          {
            v78 = swift_slowAlloc(32, -1);
            v79 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v115 = v79;
            *(_DWORD *)v78 = 136315650;
            v80 = a1;
            v82 = *(_QWORD *)(v76 + 32);
            v81 = *(_QWORD *)(v76 + 40);
            swift_bridgeObjectRetain(v81);
            v83 = v82;
            a1 = v80;
            v43 = v101;
            *(_QWORD *)(v78 + 4) = sub_33524(v83, v81, (uint64_t *)&v115);
            swift_release();
            swift_bridgeObjectRelease(v81);
            *(_WORD *)(v78 + 12) = 2048;
            *(_QWORD *)(v78 + 14) = v100;
            swift_release();
            *(_WORD *)(v78 + 22) = 2048;
            *(_QWORD *)(v78 + 24) = v105;
            _os_log_impl(&dword_0, v75, v77, "physical page '%s' tag added at location (%ld,%ld)", (uint8_t *)v78, 0x20u);
            swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v79, -1, -1);
            swift_slowDealloc(v78, -1, -1);

          }
          else
          {

            swift_release();
            swift_release();
          }
          swift_release();
          v53 = v76;
          v60 = v108;
        }
      }
      v63 = v60 + 1;
      if (__OFADD__(v60, 1))
      {
        __break(1u);
        goto LABEL_70;
      }
      if (v63 >= v104)
        goto LABEL_67;
      v13 = *(_QWORD *)(v103 + 8 * v63);
      ++v60;
      if (v13)
        goto LABEL_57;
      v60 = v63 + 1;
      if (v63 + 1 >= v104)
        goto LABEL_67;
      v13 = *(_QWORD *)(v103 + 8 * v60);
      if (v13)
        goto LABEL_57;
      v60 = v63 + 2;
      if (v63 + 2 >= v104)
        goto LABEL_67;
      v13 = *(_QWORD *)(v103 + 8 * v60);
      if (v13)
      {
LABEL_57:
        v59 = (v13 - 1) & v13;
        v62 = __clz(__rbit64(v13)) + (v60 << 6);
        goto LABEL_58;
      }
      v64 = v63 + 3;
      if (v64 >= v104)
      {
LABEL_67:
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_9;
      }
      v13 = *(_QWORD *)(v103 + 8 * v64);
      if (v13)
      {
        v60 = v64;
        goto LABEL_57;
      }
      while (1)
      {
        v60 = v64 + 1;
        if (__OFADD__(v64, 1))
          break;
        if (v60 >= v104)
          goto LABEL_67;
        v13 = *(_QWORD *)(v103 + 8 * v60);
        ++v64;
        if (v13)
          goto LABEL_57;
      }
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      if (v13 < 0)
        v85 = v13;
      else
        v85 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v13);
      v14 = _CocoaArrayWrapper.endIndex.getter(v85);
      swift_bridgeObjectRelease(v99);
      v13 = v99;
    }
LABEL_78:
    swift_bridgeObjectRelease(v13);
    v84 = v120;
  }
  else
  {
    sub_52128((uint64_t)&v115, &qword_3BD428);
    v84 = v117;
  }
  sub_34488(v84);
  v86 = (uint64_t *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages, v120, 0, 0);
  v87 = *v86;
  if ((unint64_t)v87 >> 62)
  {
    if (v87 < 0)
      v94 = v87;
    else
      v94 = v87 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v87);
    v88 = _CocoaArrayWrapper.endIndex.getter(v94);
    if (v88)
      goto LABEL_81;
LABEL_99:
    v90 = 0;
LABEL_100:
    swift_bridgeObjectRelease(v87);
    swift_bridgeObjectRelease(v90);
    return;
  }
  v88 = *(_QWORD *)((char *)&dword_10 + (v87 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v87);
  if (!v88)
    goto LABEL_99;
LABEL_81:
  if (v88 >= 1)
  {
    v89 = 0;
    v90 = 0;
    v91 = 0;
    while (1)
    {
      if ((v87 & 0xC000000000000001) != 0)
      {
        v92 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v91, v87);
      }
      else
      {
        v92 = *(_QWORD **)(v87 + 8 * v91 + 32);
        swift_retain();
      }
      swift_beginAccess(v92 + 14, v117, 1, 0);
      if (v92[15])
        break;
      if (!v90)
        goto LABEL_91;
      v92[14] = v89;
      v92[15] = v90;
      swift_bridgeObjectRetain(v90);
      swift_release();
      swift_bridgeObjectRelease(0);
LABEL_85:
      if (v88 == ++v91)
        goto LABEL_100;
    }
    swift_bridgeObjectRelease(v90);
LABEL_91:
    swift_beginAccess(v92 + 16, &v115, 0, 0);
    v93 = v92[17];
    if (v93)
    {
      v89 = v92[16];
      v90 = v92[17];
    }
    else
    {
      v89 = v92[14];
      v90 = v92[15];
      swift_bridgeObjectRetain(v90);
    }
    swift_bridgeObjectRetain(v93);
    swift_release();
    goto LABEL_85;
  }
  __break(1u);
}

void sub_12E7E8(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD **v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  uint64_t KeyPath;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[16];
  char v58[24];

  v9 = (_QWORD **)(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys);
  swift_beginAccess(v4 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys, v58, 0, 0);
  v10 = sub_6CBF8(*(_QWORD *)(a4 + 200), *(_QWORD *)(a4 + 208), *v9);
  if ((a2 & 1) == 0)
  {
    v24 = (_BYTE *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed, &v56, 1, 0);
    *v24 = 0;
    KeyPath = swift_getKeyPath(&unk_2ED6E8);
    v26 = swift_getKeyPath(&unk_2ED710);
    LOBYTE(v55) = 1;
    swift_retain();
    static Published.subscript.setter(&v55, a1, KeyPath, v26);
LABEL_15:
    v38 = v10 ^ 1;
    goto LABEL_16;
  }
  if ((a3 & 1) != 0)
  {
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v11 = type metadata accessor for Logger(0);
    sub_555F0(v11, (uint64_t)qword_3BD350);
    v12 = swift_retain_n(a1);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc(22, -1);
      v16 = swift_slowAlloc(32, -1);
      *(_DWORD *)v15 = 134218242;
      v17 = *(_QWORD *)(a1 + 16);
      v55 = v16;
      v56 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v15 + 4);
      *(_WORD *)(v15 + 12) = 2080;
      v18 = a4;
      v19 = (double *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
      swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize, &v56, 0, 0);
      v20 = CGSize.debugDescription.getter(*v19, v19[1]);
      v22 = v21;
      v54 = sub_33524(v20, v21, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v15 + 14);
      swift_release_n(a1);
      v23 = v22;
      a4 = v18;
      swift_bridgeObjectRelease(v23);
      _os_log_impl(&dword_0, v13, v14, "#reevaluatePaginationData ordinal %ld did actually change. New Size: %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

      swift_release_n(a1);
    }
    v39 = sub_319AC((uint64_t *)&unk_3B8EA0);
    v40 = sub_3DCC0((unint64_t *)&unk_3B8CC0, (uint64_t *)&unk_3B8EA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
    Subject<>.send()(v39, v40);
    goto LABEL_15;
  }
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v27 = type metadata accessor for Logger(0);
  sub_555F0(v27, (uint64_t)qword_3BD350);
  v28 = swift_retain_n(a1);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc(22, -1);
    v32 = swift_slowAlloc(32, -1);
    *(_DWORD *)v31 = 134218242;
    v33 = *(_QWORD *)(a1 + 16);
    v55 = v32;
    v56 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v31 + 4);
    *(_WORD *)(v31 + 12) = 2080;
    v34 = (double *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_contentSize, &v56, 0, 0);
    v35 = CGSize.debugDescription.getter(*v34, v34[1]);
    v37 = v36;
    v54 = sub_33524(v35, v36, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v31 + 14);
    swift_release_n(a1);
    swift_bridgeObjectRelease(v37);
    _os_log_impl(&dword_0, v29, v30, "#reevaluatePaginationData ordinal %ld did NOT actually change: size %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);

  }
  else
  {

    swift_release_n(a1);
  }
  v38 = 0;
LABEL_16:
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v41 = type metadata accessor for Logger(0);
  sub_555F0(v41, (uint64_t)qword_3BD350);
  v42 = swift_retain_n(a1);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    v55 = v46;
    *(_DWORD *)v45 = 136315138;
    v47 = a1;
    swift_retain();
    v48 = DocumentPaginationEntity.description.getter();
    v50 = v49;
    swift_release();
    v54 = sub_33524(v48, v50, &v55);
    a1 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v45 + 4);
    swift_release_n(v47);
    swift_bridgeObjectRelease(v50);
    _os_log_impl(&dword_0, v43, v44, "Completed pagination of %s", v45, 0xCu);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v45, -1, -1);

    if ((v38 & 1) == 0)
      return;
  }
  else
  {

    swift_release_n(a1);
    if ((v38 & 1) == 0)
      return;
  }
  v51 = *(_QWORD *)(v53 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v53 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache));
  (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v51 + 16))(a1, *(_QWORD *)(a4 + 200), *(_QWORD *)(a4 + 208), ObjectType, v51);
}

double sub_12EE3C(void *a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t KeyPath;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  __n128 v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(__int128 *);
  uint64_t v67;
  os_log_t v68;
  int v69;
  int v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char v75[24];
  __int128 v76;
  uint64_t v77;
  uint64_t v78[3];
  uint64_t v79;
  void *v80;
  char v81[32];

  v6 = sub_319AC(&qword_3BAD70);
  v74 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v81, 0, 0);
  Strong = swift_weakLoadStrong(a3);
  if (Strong)
  {
    v11 = Strong;
    v73 = v8;
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v12 = type metadata accessor for Logger(0);
    sub_555F0(v12, (uint64_t)qword_3BD350);
    v13 = a1;
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter();
    v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = swift_slowAlloc(32, -1);
      v18 = (_QWORD *)swift_slowAlloc(8, -1);
      v71 = v18;
      v72 = swift_slowAlloc(64, -1);
      v78[0] = v72;
      *(_DWORD *)v17 = 138412802;
      *(_QWORD *)&v76 = v13;
      v69 = a2;
      v19 = v13;
      v70 = v16;
      v20 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, (char *)&v76 + 8, v17 + 4);
      *v18 = v13;

      *(_WORD *)(v17 + 12) = 2080;
      v67 = v17 + 14;
      v21 = objc_msgSend(v20, "be_identifier");
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v68 = v14;
      v23 = v6;
      v25 = v24;

      *(_QWORD *)&v76 = sub_33524(v22, v25, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, (char *)&v76 + 8, v67);
      v26 = v25;
      v6 = v23;
      swift_bridgeObjectRelease(v26);

      *(_WORD *)(v17 + 22) = 2080;
      LODWORD(v76) = v69;
      type metadata accessor for BEWKFontRegistrationResult(0);
      v28 = String.init<A>(describing:)(&v76, v27);
      v30 = v29;
      *(_QWORD *)&v76 = sub_33524(v28, v29, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, (char *)&v76 + 8, v17 + 24);
      swift_bridgeObjectRelease(v30);
      v31 = v68;
      _os_log_impl(&dword_0, v68, (os_log_type_t)v70, "PaginatingService created webView:%@ id:%s #fontRegSuccess:%s", (uint8_t *)v17, 0x20u);
      v32 = sub_319AC(&qword_3B8A70);
      v33 = v71;
      swift_arrayDestroy(v71, 1, v32);
      swift_slowDealloc(v33, -1, -1);
      v34 = v72;
      swift_arrayDestroy(v72, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v17, -1, -1);

    }
    else
    {

    }
    v35 = objc_msgSend(v13, "be_navigationHandler");
    if (v35)
    {
      v36 = v35;
      objc_msgSend(v35, "setMaxReloadAttempts:", 1);

    }
    v37 = objc_msgSend(v13, "be_navigationHandler");
    if (v37)
    {
      v38 = v37;
      objc_msgSend(v37, "setLoadTimeout:", 4.0);

    }
    v39 = v11 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFontsObservationToken;
    swift_beginAccess(v11 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFontsObservationToken, v75, 0, 0);
    sub_3F238(v39, (uint64_t)&v76, (uint64_t *)&unk_3B8E28);
    if (v77)
    {
      sub_3F1CC(&v76, (uint64_t)v78);
      v40 = v79;
      v41 = v80;
      sub_472D0(v78, v79);
      v42 = v13;
      dispatch thunk of Cancellable.cancel()(v40, v41);
      sub_34488(v78);
    }
    else
    {
      v43 = v13;
      sub_52128((uint64_t)&v76, (uint64_t *)&unk_3B8E28);
    }
    v44 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView;
    v45 = *(void **)(v11 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
    *(_QWORD *)(v11 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView) = v13;
    v46 = v13;

    v47 = *(void **)(v11 + v44);
    if (v47)
    {
      KeyPath = swift_getKeyPath(&unk_2ED928);
      v49 = v47;
      v50 = v73;
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(KeyPath, 5);
      swift_release();
      v51 = swift_allocObject(&unk_3826B0, 24);
      swift_weakInit(v51 + 16, v11);
      v52 = swift_allocObject(&unk_382C80, 24);
      swift_unknownObjectWeakInit(v52 + 16, v49);
      v53 = swift_allocObject(&unk_382CA8, 32);
      *(_QWORD *)(v53 + 16) = v51;
      *(_QWORD *)(v53 + 24) = v52;
      v54 = sub_3DCC0(&qword_3BAD80, &qword_3BAD70, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
      v55 = Publisher<>.sink(receiveValue:)(sub_139CC4, v53, v6, v54);
      v56 = swift_release();
      v57.n128_f64[0] = (*(double (**)(char *, uint64_t, __n128))(v74 + 8))(v50, v6, v56);
      v79 = type metadata accessor for AnyCancellable(0, v57);
      v80 = &protocol witness table for AnyCancellable;
      v78[0] = v55;
      swift_beginAccess(v39, &v76, 33, 0);
      sub_9390C((uint64_t)v78, v39);
      swift_endAccess(&v76);

    }
    v58 = swift_unknownObjectWeakLoadStrong(v11 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostView);
    if (v58)
    {
      v59 = (void *)v58;
      v60 = *(void **)(v11 + v44);
      if (v60)
      {
        v61 = v60;
        objc_msgSend(v61, "setAccessibilityElementsHidden:", 1);
        objc_msgSend(v59, "addSubview:", v61);
        objc_msgSend(v59, "sendSubviewToBack:", v61);
        sub_1237FC();

        v59 = v61;
      }

    }
    v62 = (_QWORD *)(v11 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginatingWebViewCreationCompletions);
    swift_beginAccess(v11 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginatingWebViewCreationCompletions, v78, 1, 0);
    v63 = *v62;
    v64 = *(_QWORD *)(*v62 + 16);
    if (v64)
    {
      swift_bridgeObjectRetain(*v62);
      v65 = v63 + 40;
      do
      {
        v66 = *(void (**)(__int128 *))(v65 - 8);
        *(_QWORD *)&v76 = v46;
        swift_retain();
        v66(&v76);
        swift_release();
        v65 += 16;
        --v64;
      }
      while (v64);
      swift_bridgeObjectRelease(v63);
      v63 = *v62;
    }
    *v62 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease(v63);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_12F4DC(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> PaginatingService.pageOffset(for:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  unint64_t v29;
  Swift::Int result;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  uint64_t v33;
  uint64_t v34;
  void **v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  os_log_type_t type;
  uint64_t v83;
  uint64_t v84;
  os_log_t log;
  os_log_t loga;
  uint64_t v87;
  char v88[24];
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[3];
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;

  v2 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v5 = type metadata accessor for DocumentAnchor();
  swift_allocObject(v5, 48);
  swift_bridgeObjectRetain(object);
  sub_112E00(countAndFlagsBits, (unint64_t)object);
  if (!v6)
  {
    v26 = sub_135B74();
    swift_allocError(&type metadata for PaginatingServiceError, v26, 0, 0);
    *(_QWORD *)v27 = countAndFlagsBits;
    *(_QWORD *)(v27 + 8) = object;
    *(_BYTE *)(v27 + 16) = 2;
    v28 = swift_bridgeObjectRetain(object);
    swift_willThrow(v28);
    return (Swift::Int)object;
  }
  log = (os_log_t)countAndFlagsBits;
  v8 = *(_QWORD *)(v6 + 16);
  v7 = *(_QWORD *)(v6 + 24);
  v87 = v6;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  v11 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(v9 + 8);
  v12 = swift_bridgeObjectRetain(v7);
  v11(v93, ObjectType, v9, v12);
  v13 = v94;
  v14 = v95;
  sub_472D0(v93, v94);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 64))(v13, v14);
  v16 = v15;
  v17 = *(_QWORD *)(v15 + 16);
  if (v17)
  {
    v83 = v1;
    v18 = v15 + 32;
    swift_bridgeObjectRetain(v15);
    while (1)
    {
      sub_49F1C(v18, (uint64_t)&v90);
      v19 = v91;
      v20 = v92;
      sub_472D0(&v90, v91);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
      if (v21 == v8 && v22 == v7)
      {
        swift_bridgeObjectRelease(v16);
        v29 = v7;
        goto LABEL_15;
      }
      v24 = v22;
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v8, v7, 0);
      swift_bridgeObjectRelease(v24);
      if ((v25 & 1) != 0)
        break;
      sub_34488(&v90);
      v18 += 40;
      if (!--v17)
      {
        swift_bridgeObjectRelease(v16);
        v2 = v83;
        goto LABEL_11;
      }
    }
    v29 = v16;
LABEL_15:
    v2 = v83;
    swift_bridgeObjectRelease(v29);
    sub_3F1CC(&v90, (uint64_t)&v96);
  }
  else
  {
LABEL_11:
    v98 = 0;
    v96 = 0u;
    v97 = 0u;
  }
  swift_bridgeObjectRelease(v16);
  sub_34488(v93);
  if (!*((_QWORD *)&v97 + 1))
  {
    sub_52128((uint64_t)&v96, &qword_3BD428);
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v48 = type metadata accessor for Logger(0);
    sub_555F0(v48, (uint64_t)qword_3BD350);
    swift_bridgeObjectRetain(v7);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.error.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(12, -1);
      v53 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v96 = v53;
      *(_DWORD *)v52 = 136315138;
      v99 = v8;
      v100 = v7;
      swift_bridgeObjectRetain(v7);
      v54 = String.init<A>(_:)(&v99, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
      v56 = v55;
      v99 = sub_33524(v54, v55, (uint64_t *)&v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, &v100, v52 + 4);
      swift_bridgeObjectRelease_n(v7, 2);
      swift_bridgeObjectRelease(v56);
      _os_log_impl(&dword_0, v50, v51, "Document entity for href '%s' not found", v52, 0xCu);
      swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1, -1);
      swift_slowDealloc(v52, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v7, 2);
    }
    v65 = sub_135B74();
    swift_allocError(&type metadata for PaginatingServiceError, v65, 0, 0);
    *(_QWORD *)v66 = log;
    *(_QWORD *)(v66 + 8) = object;
    *(_BYTE *)(v66 + 16) = 2;
    v67 = swift_bridgeObjectRetain(object);
    swift_willThrow(v67);
    swift_release();
    return (Swift::Int)object;
  }
  result = sub_3F1CC(&v96, (uint64_t)&v99);
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
  {
    v31 = v101;
    object = v102;
    sub_472D0(&v99, v101);
    v32 = (uint64_t (*)(uint64_t, _QWORD *))object[2];
    swift_retain();
    v33 = v32(v31, object);
    v34 = BookPaginationEntity.document(for:)(v33);
    swift_release();
    if (!v34)
    {
      swift_bridgeObjectRelease(v7);
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v57 = type metadata accessor for Logger(0);
      sub_555F0(v57, (uint64_t)qword_3BD350);
      v58 = sub_49F1C((uint64_t)&v99, (uint64_t)&v96);
      v59 = Logger.logObject.getter(v58);
      v60 = static os_log_type_t.error.getter(v59);
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v61 = 134217984;
        object = v61 + 4;
        v62 = *((_QWORD *)&v97 + 1);
        v63 = v98;
        sub_472D0(&v96, *((uint64_t *)&v97 + 1));
        v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 16))(v62, v63);
        sub_34488(&v96);
        *(_QWORD *)&v96 = v64;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, (char *)&v96 + 8, v61 + 4);
        _os_log_impl(&dword_0, v59, v60, "No document pagination entity found for ordinal %ld", v61, 0xCu);
        swift_slowDealloc(v61, -1, -1);
      }
      else
      {
        sub_34488(&v96);
      }

      v68 = v101;
      v69 = v102;
      sub_472D0(&v99, v101);
      v70 = ((uint64_t (*)(uint64_t, _QWORD *))v69[2])(v68, v69);
      v71 = sub_135B74();
      swift_allocError(&type metadata for PaginatingServiceError, v71, 0, 0);
      *(_QWORD *)v72 = v70;
      *(_QWORD *)(v72 + 8) = 0;
      *(_BYTE *)(v72 + 16) = 1;
      swift_willThrow(v73);
      swift_release();
      sub_34488(&v99);
      return (Swift::Int)object;
    }
    v35 = (void **)(v34 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
    swift_beginAccess(v34 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset, v93, 0, 0);
    object = *v35;
    v36 = *(_QWORD *)(v87 + 40);
    if (v36)
    {
      loga = *(os_log_t *)(v87 + 32);
      v37 = v34 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName;
      swift_beginAccess(v34 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName, &v90, 0, 0);
      v38 = *(_QWORD *)v37;
      v39 = *(_QWORD *)(*(_QWORD *)v37 + 16);
      swift_bridgeObjectRetain(v36);
      if (v39)
      {
        swift_bridgeObjectRetain(v36);
        swift_bridgeObjectRetain(v38);
        v40 = sub_3B8A0((uint64_t)loga, v36);
        if ((v41 & 1) != 0)
        {
          v42 = *(_QWORD *)(*(_QWORD *)(v38 + 56) + 8 * v40);
          swift_retain();
          swift_bridgeObjectRelease(v36);
          swift_bridgeObjectRelease(v38);
          swift_beginAccess(v42 + 40, v88, 0, 0);
          v43 = *(_QWORD *)(v42 + 40);
          swift_bridgeObjectRetain(v43);
          v45 = sub_95C18(v44);
          v47 = v46;
          swift_release();
          swift_bridgeObjectRelease(v43);
          if ((v47 & 1) == 0)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease(v36);
            swift_bridgeObjectRelease(v7);
            object = (_QWORD *)v45;
LABEL_44:
            sub_34488(&v99);
            return (Swift::Int)object;
          }
        }
        else
        {
          swift_bridgeObjectRelease(v36);
          swift_bridgeObjectRelease(v38);
        }
      }
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v74 = type metadata accessor for Logger(0);
      sub_555F0(v74, (uint64_t)qword_3BD350);
      sub_49F1C((uint64_t)&v99, (uint64_t)&v96);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v36);
      v76 = Logger.logObject.getter(v75);
      v77 = static os_log_type_t.error.getter(v76);
      if (os_log_type_enabled(v76, v77))
      {
        v78 = swift_slowAlloc(32, -1);
        v84 = swift_slowAlloc(64, -1);
        v103 = v84;
        *(_DWORD *)v78 = 136315650;
        type = v77;
        swift_bridgeObjectRetain(v36);
        v89 = sub_33524((uint64_t)loga, v36, &v103);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v78 + 4);
        swift_bridgeObjectRelease_n(v36, 3);
        *(_WORD *)(v78 + 12) = 2048;
        v80 = *((_QWORD *)&v97 + 1);
        v79 = v98;
        sub_472D0(&v96, *((uint64_t *)&v97 + 1));
        v81 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 16))(v80, v79);
        sub_34488(&v96);
        v89 = v81;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v78 + 14);
        *(_WORD *)(v78 + 22) = 2080;
        swift_bridgeObjectRetain(v7);
        v89 = sub_33524(v8, v7, &v103);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90, v78 + 24);
        swift_bridgeObjectRelease_n(v7, 3);
        _os_log_impl(&dword_0, v76, type, "Fragment '%s' not found in document: %ld|%s", (uint8_t *)v78, 0x20u);
        swift_arrayDestroy(v84, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v84, -1, -1);
        swift_slowDealloc(v78, -1, -1);
        swift_release();

      }
      else
      {
        sub_34488(&v96);

        swift_bridgeObjectRelease_n(v7, 2);
        swift_bridgeObjectRelease_n(v36, 2);
        swift_release();
      }
      swift_release();
      goto LABEL_44;
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease(v7);
    goto LABEL_44;
  }
  __break(1u);
  return result;
}

uint64_t sub_12FED0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_12FF34;
  return v6(a1);
}

uint64_t sub_12FF34()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_12FF80(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), a2);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_131440(a2, v9, isUniquelyReferenced_nonNull_native);
    v14 = *v3;
    *v3 = v15;
    swift_bridgeObjectRelease(v14);
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_130078(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[9];

  v3 = v2;
  v6 = *v2;
  Hasher.init(_seed:)(v46, *(_QWORD *)(*v2 + 40));
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  v12 = a2[5];
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  String.hash(into:)(v46, v7, v8);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRetain(v10);
  v45 = v9;
  String.hash(into:)(v46, v9, v10);
  v44 = v10;
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRetain(v12);
  v43 = v11;
  String.hash(into:)(v46, v11, v12);
  v42 = v12;
  swift_bridgeObjectRelease(v12);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v6 + 32);
  v15 = v13 & ~v14;
  v16 = v6 + 56;
  v40 = a2;
  v41 = a1;
  v38 = v6;
  v39 = v3;
  if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v17 = ~v14;
    v18 = *(_QWORD *)(v6 + 48);
    while (1)
    {
      v19 = (_QWORD *)(v18 + 48 * v15);
      v20 = v19[1];
      v21 = v19[2];
      v22 = v19[3];
      v23 = v19[4];
      v24 = v19[5];
      v25 = *v19 == v7 && v20 == v8;
      if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, v7, v8, 0) & 1) != 0)
      {
        v26 = v21 == v45 && v22 == v44;
        if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v45, v44, 0) & 1) != 0)
        {
          v27 = v23 == v43 && v24 == v42;
          if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v43, v42, 0) & 1) != 0)
            break;
        }
      }
      v15 = (v15 + 1) & v17;
      if (((*(_QWORD *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_20;
    }
    swift_bridgeObjectRelease(v38);
    sub_1398EC(v40);
    v28 = (_QWORD *)(*(_QWORD *)(*v39 + 48) + 48 * v15);
    v29 = v28[1];
    v30 = v28[2];
    v31 = v28[3];
    v32 = v28[4];
    v33 = v28[5];
    *v41 = *v28;
    v41[1] = v29;
    v41[2] = v30;
    v41[3] = v31;
    v41[4] = v32;
    v41[5] = v33;
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v33);
    return 0;
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease(v38);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v39);
    v46[0] = *v39;
    *v39 = 0x8000000000000000;
    sub_1398A4(v40);
    sub_131560(v40, v15, isUniquelyReferenced_nonNull_native);
    v36 = *v39;
    *v39 = v46[0];
    swift_bridgeObjectRelease(v36);
    v37 = *((_OWORD *)v40 + 1);
    *(_OWORD *)v41 = *(_OWORD *)v40;
    *((_OWORD *)v41 + 1) = v37;
    *((_OWORD *)v41 + 2) = *((_OWORD *)v40 + 2);
    return 1;
  }
}

uint64_t sub_130310(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_1317BC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

void sub_1304BC(uint64_t a1, char a2)
{
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, *(_QWORD *)(*(_QWORD *)v2 + 40));
  __asm { BR              X10 }
}

uint64_t sub_130528()
{
  char *v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  swift_bridgeObjectRetain(v3);
  String.hash(into:)(&v8, 0x7465697571, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  v4 = Hasher._finalize()() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  v8 = *v1;
  *v1 = 0x8000000000000000;
  sub_131954(v2, v4, isUniquelyReferenced_nonNull_native);
  v6 = *v1;
  *v1 = v8;
  swift_bridgeObjectRelease(v6);
  result = 1;
  *v0 = v2;
  return result;
}

void sub_130818(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_319AC(&qword_3BD8D0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    v29 = -1 << v9;
    v30 = v2;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v31 = 1 << *(_BYTE *)(v3 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = v5 + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                if (v31 >= 64)
                  bzero((void *)(v3 + 56), 8 * v12);
                else
                  *v8 = v29;
                v2 = v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_130A98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  _QWORD v40[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_319AC(&qword_3BD958);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v37 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v36 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    swift_retain();
    v11 = 0;
    v38 = v3;
    while (1)
    {
      if (v9)
      {
        v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v39 = v11;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v16 >= v36)
          goto LABEL_36;
        v17 = v37[v16];
        v18 = v11 + 1;
        if (!v17)
        {
          v18 = v11 + 2;
          if (v11 + 2 >= v36)
            goto LABEL_36;
          v17 = v37[v18];
          if (!v17)
          {
            v18 = v11 + 3;
            if (v11 + 3 >= v36)
              goto LABEL_36;
            v17 = v37[v18];
            if (!v17)
            {
              v19 = v11 + 4;
              if (v11 + 4 >= v36)
              {
LABEL_36:
                swift_release();
                v2 = v1;
                v35 = 1 << *(_BYTE *)(v3 + 32);
                if (v35 > 63)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v17 = v37[v19];
              if (!v17)
              {
                while (1)
                {
                  v18 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v18 >= v36)
                    goto LABEL_36;
                  v17 = v37[v18];
                  ++v19;
                  if (v17)
                    goto LABEL_26;
                }
              }
              v18 = v11 + 4;
            }
          }
        }
LABEL_26:
        v9 = (v17 - 1) & v17;
        v39 = v18;
        v15 = __clz(__rbit64(v17)) + (v18 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 48 * v15);
      v21 = *v20;
      v22 = v20[1];
      v23 = v20[2];
      v24 = v20[3];
      v26 = v20[4];
      v25 = v20[5];
      Hasher.init(_seed:)(v40, *(_QWORD *)(v6 + 40));
      swift_bridgeObjectRetain(v22);
      String.hash(into:)(v40, v21, v22);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRetain(v24);
      String.hash(into:)(v40, v23, v24);
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRetain(v25);
      String.hash(into:)(v40, v26, v25);
      swift_bridgeObjectRelease(v25);
      v27 = Hasher._finalize()();
      v28 = -1 << *(_BYTE *)(v6 + 32);
      v29 = v27 & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v10 + 8 * (v29 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v10 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v10 + 8 * v30);
        }
        while (v34 == -1);
        v12 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 48 * v12);
      *v13 = v21;
      v13[1] = v22;
      v13[2] = v23;
      v13[3] = v24;
      v13[4] = v26;
      v13[5] = v25;
      ++*(_QWORD *)(v6 + 16);
      v3 = v38;
      v11 = v39;
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_130E08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_319AC(&qword_3BD990);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release();
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release();
  *v2 = v6;
}

void sub_1310E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_319AC(&qword_3BD960);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  v17 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = (_QWORD *)(v3 + 56);
  if (v6 < 64)
    v8 = ~(-1 << v6);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v3 + 64);
    v13 = 1;
    if (v12)
      goto LABEL_22;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v3 + 72);
      if (v12)
        goto LABEL_22;
      v13 = 3;
      if (v10 > 3)
      {
        v12 = *(_QWORD *)(v3 + 80);
        if (!v12)
        {
          v14 = 4;
          if (v10 > 4)
          {
            v12 = *(_QWORD *)(v3 + 88);
            if (v12)
            {
              v13 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
              {
                __break(1u);
                JUMPOUT(0x131428);
              }
              if (v13 >= v10)
                break;
              v12 = v7[v13];
              ++v14;
              if (v12)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_23:
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11);
        Hasher.init(_seed:)(v18, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release();
  v2 = v17;
  v16 = 1 << *(_BYTE *)(v3 + 32);
  if (v16 > 63)
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v7 = -1 << v16;
  *(_QWORD *)(v3 + 16) = 0;
LABEL_28:
  swift_release();
  *v2 = v5;
}

void sub_131440(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_130818(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1B3954();
      goto LABEL_14;
    }
    sub_131CF4(v8);
  }
  v9 = *v3;
  v10 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v3 + 40), a1);
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v9 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == a1)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == a1)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
}

void sub_131560(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  uint64_t v30;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_27;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_130A98(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1B3AE8();
      goto LABEL_27;
    }
    sub_131F54(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v42, *(_QWORD *)(*v3 + 40));
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v15 = a1[4];
  v14 = a1[5];
  swift_bridgeObjectRetain(v11);
  String.hash(into:)(v42, v10, v11);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRetain(v13);
  v39 = v12;
  String.hash(into:)(v42, v12, v13);
  v38 = v13;
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRetain(v14);
  v41 = v15;
  String.hash(into:)(v42, v15, v14);
  v40 = v14;
  swift_bridgeObjectRelease(v14);
  v16 = Hasher._finalize()();
  v17 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v16 & ~v17;
  v18 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v17;
    v20 = *(_QWORD *)(v9 + 48);
    while (1)
    {
      v21 = (_QWORD *)(v20 + 48 * a2);
      v22 = v21[1];
      v23 = v21[2];
      v24 = v21[3];
      v25 = v21[4];
      v26 = v21[5];
      v27 = *v21 == v10 && v22 == v11;
      if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, v10, v11, 0) & 1) != 0)
      {
        v28 = v23 == v39 && v24 == v38;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v39, v38, 0) & 1) != 0)
        {
          v29 = v25 == v41 && v26 == v40;
          if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v41, v40, 0) & 1) != 0)
            break;
        }
      }
      a2 = (a2 + 1) & v19;
      if (((*(_QWORD *)(v18 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_27;
    }
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SearchPassage);
    __break(1u);
  }
LABEL_27:
  v30 = *v36;
  *(_QWORD *)(*v36 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v31 = (_OWORD *)(*(_QWORD *)(v30 + 48) + 48 * a2);
  v32 = *((_OWORD *)a1 + 1);
  *v31 = *(_OWORD *)a1;
  v31[1] = v32;
  v31[2] = *((_OWORD *)a1 + 2);
  v33 = *(_QWORD *)(v30 + 16);
  v34 = __OFADD__(v33, 1);
  v35 = v33 + 1;
  if (v34)
    __break(1u);
  else
    *(_QWORD *)(v30 + 16) = v35;
}

void sub_1317BC(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_130E08(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1B3CC4();
      goto LABEL_22;
    }
    sub_1322A0(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

void sub_131954(char a1, unint64_t a2, char a3)
{
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _QWORD v15[9];

  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_1310E4(v8);
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_13254C(v8);
LABEL_8:
      Hasher.init(_seed:)(v15, *(_QWORD *)(*(_QWORD *)v3 + 40));
      __asm { BR              X10 }
    }
    sub_1B3E74();
  }
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x131C90);
  }
  *(_QWORD *)(v9 + 16) = v12;
}

void sub_131CF4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_319AC(&qword_3BD8D0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v29 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v5 + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = static Hasher._hash(seed:_:)(*(_QWORD *)(v6 + 40), v20);
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v13 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    swift_release();
    v2 = v29;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_131F54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  _QWORD v40[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_319AC(&qword_3BD958);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v35 = v2;
  v36 = v3 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v37 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  swift_retain();
  v11 = 0;
  v38 = v3;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v39 = v11;
      v15 = v14 | (v11 << 6);
      goto LABEL_27;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v37)
      goto LABEL_36;
    v17 = *(_QWORD *)(v36 + 8 * v16);
    v18 = v11 + 1;
    if (!v17)
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v37)
        goto LABEL_36;
      v17 = *(_QWORD *)(v36 + 8 * v18);
      if (!v17)
      {
        v18 = v11 + 3;
        if (v11 + 3 >= v37)
          goto LABEL_36;
        v17 = *(_QWORD *)(v36 + 8 * v18);
        if (!v17)
          break;
      }
    }
LABEL_26:
    v9 = (v17 - 1) & v17;
    v39 = v18;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 48 * v15);
    v21 = *v20;
    v22 = v20[1];
    v23 = v20[2];
    v24 = v20[3];
    v25 = v20[4];
    v26 = v20[5];
    Hasher.init(_seed:)(v40, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain_n(v22, 2);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v26);
    String.hash(into:)(v40, v21, v22);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRetain(v24);
    String.hash(into:)(v40, v23, v24);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRetain(v26);
    String.hash(into:)(v40, v25, v26);
    swift_bridgeObjectRelease(v26);
    v27 = Hasher._finalize()();
    v28 = -1 << *(_BYTE *)(v6 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v10 + 8 * (v29 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v10 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v10 + 8 * v30);
      }
      while (v34 == -1);
      v12 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 48 * v12);
    *v13 = v21;
    v13[1] = v22;
    v13[2] = v23;
    v13[3] = v24;
    v13[4] = v25;
    v13[5] = v26;
    ++*(_QWORD *)(v6 + 16);
    v3 = v38;
    v11 = v39;
  }
  v19 = v11 + 4;
  if (v11 + 4 >= v37)
  {
LABEL_36:
    swift_release_n(v3);
    v2 = v35;
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(v36 + 8 * v19);
  if (v17)
  {
    v18 = v11 + 4;
    goto LABEL_26;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v37)
      goto LABEL_36;
    v17 = *(_QWORD *)(v36 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1322A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_319AC(&qword_3BD990);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v33, v21, v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_13254C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_319AC(&qword_3BD960);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release();
    goto LABEL_26;
  }
  v15 = v2;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain();
  if (v8)
  {
    v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }
  if (v9 > 1)
  {
    v11 = *(_QWORD *)(v3 + 64);
    v12 = 1;
    if (v11)
      goto LABEL_22;
    v12 = 2;
    if (v9 > 2)
    {
      v11 = *(_QWORD *)(v3 + 72);
      if (v11)
        goto LABEL_22;
      v12 = 3;
      if (v9 > 3)
      {
        v11 = *(_QWORD *)(v3 + 80);
        if (!v11)
        {
          v13 = 4;
          if (v9 > 4)
          {
            v11 = *(_QWORD *)(v3 + 88);
            if (v11)
            {
              v12 = 4;
              goto LABEL_22;
            }
            while (1)
            {
              v12 = v13 + 1;
              if (__OFADD__(v13, 1))
              {
                __break(1u);
                JUMPOUT(0x13285CLL);
              }
              if (v12 >= v9)
                break;
              v11 = *(_QWORD *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11)
                goto LABEL_22;
            }
          }
          goto LABEL_24;
        }
LABEL_22:
        v10 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_23:
        v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v10);
        Hasher.init(_seed:)(v16, *(_QWORD *)(v5 + 40));
        __asm { BR              X8 }
      }
    }
  }
LABEL_24:
  swift_release_n(v3);
  v2 = v15;
LABEL_26:
  *v2 = v5;
}

void sub_132874(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  _QWORD *v1;
  uint64_t v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  Swift::Int v13;
  int v14;
  int v15;
  uint64_t *v16;
  Swift::Int v17;
  Swift::Int v18;
  uint64_t v19;
  Swift::Int v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  Swift::Int v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  Swift::Int v75;
  uint64_t *v76;
  char v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  Swift::Int v93;
  Swift::Int v94;
  char *__dst;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;

  v3 = v1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_141;
    if (v3)
      sub_F8A84(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 <= -2)
    goto LABEL_150;
  v93 = v4;
  v94 = v3;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v23 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      v81 = v11;
      if (v23 >= 2)
      {
        v82 = *v1;
        do
        {
          v83 = v23 - 2;
          if (v23 < 2)
            goto LABEL_136;
          if (!v82)
            goto LABEL_149;
          v84 = v81;
          v85 = *(_QWORD *)&v81[16 * v83 + 32];
          v86 = *(_QWORD *)&v81[16 * v23 + 24];
          sub_133CB0((char *)(v82 + 8 * v85), (char *)(v82 + 8 * *(_QWORD *)&v81[16 * v23 + 16]), v82 + 8 * v86, __dst, a1);
          if (v2)
          {
            v81 = v84;
            break;
          }
          if (v86 < v85)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
            v84 = sub_1D34BC((uint64_t)v84);
          if (v83 >= *((_QWORD *)v84 + 2))
            goto LABEL_138;
          v87 = &v84[16 * v83 + 32];
          *(_QWORD *)v87 = v85;
          *((_QWORD *)v87 + 1) = v86;
          v88 = *((_QWORD *)v84 + 2);
          if (v23 > v88)
            goto LABEL_139;
          memmove(&v84[16 * v23 + 16], &v84[16 * v23 + 32], 16 * (v88 - v23));
          v81 = v84;
          *((_QWORD *)v84 + 2) = v88 - 1;
          v23 = v88 - 1;
        }
        while (v88 > 2);
      }
      swift_bridgeObjectRelease(v81);
LABEL_119:
      v8[2] = 0;
      swift_bridgeObjectRelease(v8);
      return;
    }
    v92 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for Int);
    *(_QWORD *)(v7 + 16) = v6;
    v92 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v1;
  v91 = *v1 + 16;
  v89 = v1;
  v90 = *v1 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v12 = v94;
  v96 = *v1;
  while (1)
  {
    v13 = v9++;
    if (v9 < v12)
    {
      v99 = *(_QWORD *)(v10 + 8 * v9);
      v98 = *(_QWORD *)(v10 + 8 * v13);
      v14 = a1(&v99, &v98);
      if (v2)
      {
LABEL_101:
        v80 = v11;
LABEL_103:
        swift_bridgeObjectRelease(v80);
        v8 = v92;
        goto LABEL_119;
      }
      v15 = v14;
      v9 = v13 + 2;
      if (v13 + 2 < v94)
      {
        v16 = (uint64_t *)(v91 + 8 * v13);
        while (1)
        {
          v99 = *v16;
          v98 = *(v16 - 1);
          if (((v15 ^ a1(&v99, &v98)) & 1) != 0)
            break;
          ++v16;
          if (v94 == ++v9)
          {
            v9 = v94;
            break;
          }
        }
      }
      v10 = v96;
      if ((v15 & 1) != 0)
      {
        if (v9 < v13)
          goto LABEL_145;
        v12 = v94;
        if (v13 < v9)
        {
          v17 = v9 - 1;
          v18 = v13;
          do
          {
            if (v18 != v17)
            {
              if (!v96)
                goto LABEL_148;
              v19 = *(_QWORD *)(v96 + 8 * v18);
              *(_QWORD *)(v96 + 8 * v18) = *(_QWORD *)(v96 + 8 * v17);
              *(_QWORD *)(v96 + 8 * v17) = v19;
            }
            v54 = ++v18 < v17--;
          }
          while (v54);
        }
      }
      else
      {
        v12 = v94;
      }
    }
    if (v9 >= v12)
      goto LABEL_40;
    if (__OFSUB__(v9, v13))
      goto LABEL_142;
    if (v9 - v13 >= v93)
      goto LABEL_40;
    if (__OFADD__(v13, v93))
      goto LABEL_143;
    v20 = v13 + v93 >= v12 ? v12 : v13 + v93;
    if (v20 < v13)
      break;
    if (v9 != v20)
    {
      v73 = (uint64_t *)(v90 + 8 * v9);
      do
      {
        v74 = *(_QWORD *)(v10 + 8 * v9);
        v75 = v13;
        v76 = v73;
        while (1)
        {
          v99 = v74;
          v98 = *v76;
          v77 = a1(&v99, &v98);
          if (v2)
            goto LABEL_101;
          if ((v77 & 1) == 0)
            break;
          v10 = v96;
          if (!v96)
            goto LABEL_147;
          v78 = *v76;
          v74 = v76[1];
          *v76 = v74;
          v76[1] = v78;
          --v76;
          if (v9 == ++v75)
            goto LABEL_98;
        }
        v10 = v96;
LABEL_98:
        ++v9;
        ++v73;
      }
      while (v9 != v20);
      v9 = v20;
      if (v20 < v13)
        goto LABEL_140;
      goto LABEL_41;
    }
LABEL_40:
    if (v9 < v13)
      goto LABEL_140;
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1D3038(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v22 = *((_QWORD *)v11 + 2);
    v21 = *((_QWORD *)v11 + 3);
    v23 = v22 + 1;
    v10 = v96;
    if (v22 >= v21 >> 1)
    {
      v79 = sub_1D3038((char *)(v21 > 1), v22 + 1, 1, v11);
      v10 = v96;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v23;
    v24 = v11 + 32;
    v25 = &v11[16 * v22 + 32];
    *(_QWORD *)v25 = v13;
    *((_QWORD *)v25 + 1) = v9;
    if (v22)
    {
      while (1)
      {
        v26 = v23 - 1;
        if (v23 >= 4)
        {
          v31 = &v24[16 * v23];
          v32 = *((_QWORD *)v31 - 8);
          v33 = *((_QWORD *)v31 - 7);
          v37 = __OFSUB__(v33, v32);
          v34 = v33 - v32;
          if (v37)
            goto LABEL_125;
          v36 = *((_QWORD *)v31 - 6);
          v35 = *((_QWORD *)v31 - 5);
          v37 = __OFSUB__(v35, v36);
          v29 = v35 - v36;
          v30 = v37;
          if (v37)
            goto LABEL_126;
          v38 = v23 - 2;
          v39 = &v24[16 * v23 - 32];
          v41 = *(_QWORD *)v39;
          v40 = *((_QWORD *)v39 + 1);
          v37 = __OFSUB__(v40, v41);
          v42 = v40 - v41;
          if (v37)
            goto LABEL_128;
          v37 = __OFADD__(v29, v42);
          v43 = v29 + v42;
          if (v37)
            goto LABEL_131;
          if (v43 >= v34)
          {
            v61 = &v24[16 * v26];
            v63 = *(_QWORD *)v61;
            v62 = *((_QWORD *)v61 + 1);
            v37 = __OFSUB__(v62, v63);
            v64 = v62 - v63;
            if (v37)
              goto LABEL_135;
            v54 = v29 < v64;
            goto LABEL_77;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v55 = *((_QWORD *)v11 + 4);
            v56 = *((_QWORD *)v11 + 5);
            v37 = __OFSUB__(v56, v55);
            v48 = v56 - v55;
            v49 = v37;
            goto LABEL_71;
          }
          v28 = *((_QWORD *)v11 + 4);
          v27 = *((_QWORD *)v11 + 5);
          v37 = __OFSUB__(v27, v28);
          v29 = v27 - v28;
          v30 = v37;
        }
        if ((v30 & 1) != 0)
          goto LABEL_127;
        v38 = v23 - 2;
        v44 = &v24[16 * v23 - 32];
        v46 = *(_QWORD *)v44;
        v45 = *((_QWORD *)v44 + 1);
        v47 = __OFSUB__(v45, v46);
        v48 = v45 - v46;
        v49 = v47;
        if (v47)
          goto LABEL_130;
        v50 = &v24[16 * v26];
        v52 = *(_QWORD *)v50;
        v51 = *((_QWORD *)v50 + 1);
        v37 = __OFSUB__(v51, v52);
        v53 = v51 - v52;
        if (v37)
          goto LABEL_133;
        if (__OFADD__(v48, v53))
          goto LABEL_134;
        if (v48 + v53 >= v29)
        {
          v54 = v29 < v53;
LABEL_77:
          if (v54)
            v26 = v38;
          goto LABEL_79;
        }
LABEL_71:
        if ((v49 & 1) != 0)
          goto LABEL_129;
        v57 = &v24[16 * v26];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v37 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v37)
          goto LABEL_132;
        if (v60 < v48)
          goto LABEL_88;
LABEL_79:
        v65 = v26 - 1;
        if (v26 - 1 >= v23)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v10)
          goto LABEL_146;
        v66 = v9;
        v67 = v11;
        v68 = &v24[16 * v65];
        v69 = *(_QWORD *)v68;
        v70 = &v24[16 * v26];
        v71 = *((_QWORD *)v70 + 1);
        sub_133CB0((char *)(v10 + 8 * *(_QWORD *)v68), (char *)(v10 + 8 * *(_QWORD *)v70), v10 + 8 * v71, __dst, a1);
        if (v2)
        {
          v80 = v67;
          goto LABEL_103;
        }
        if (v71 < v69)
          goto LABEL_122;
        if (v26 > *((_QWORD *)v67 + 2))
          goto LABEL_123;
        *(_QWORD *)v68 = v69;
        *(_QWORD *)&v24[16 * v65 + 8] = v71;
        v72 = *((_QWORD *)v67 + 2);
        if (v26 >= v72)
          goto LABEL_124;
        v11 = v67;
        v23 = v72 - 1;
        memmove(&v24[16 * v26], v70 + 16, 16 * (v72 - 1 - v26));
        *((_QWORD *)v67 + 2) = v72 - 1;
        v10 = v96;
        v9 = v66;
        if (v72 <= 2)
          goto LABEL_88;
      }
    }
    v23 = 1;
LABEL_88:
    v12 = v94;
    if (v9 >= v94)
    {
      v8 = v92;
      v1 = v89;
      goto LABEL_105;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_132F64(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  CGFloat *v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double *v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  double MinY;
  double v24;
  double MaxY;
  double v26;
  double v27;
  double MinX;
  double v29;
  _BOOL4 v30;
  CGFloat *v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  Swift::Int v48;
  Swift::Int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  double *v54;
  double *v55;
  CGFloat v56;
  CGFloat v57;
  CGFloat v58;
  Swift::Int v59;
  double *v60;
  CGFloat v61;
  CGFloat v62;
  CGFloat v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double *v71;
  uint64_t v72;
  double v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  char v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  _QWORD *v139;
  Swift::Int v140;
  Swift::Int v141;
  CGFloat *__dst;
  uint64_t v143;
  CGFloat v144;
  __int128 v145;
  CGFloat height;
  __int128 v147;
  double v148;
  double rect;
  double recta;
  __int128 rectc;
  CGFloat rectb;
  __int128 rect_16a;
  CGFloat rect_16;
  CGFloat v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;
  CGRect v160;
  CGRect v161;
  CGRect v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;
  CGRect v169;
  CGRect v170;
  CGRect v171;
  CGRect v172;
  CGRect v173;
  CGRect v174;
  CGRect v175;
  CGRect v176;
  CGRect v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;
  CGRect v181;
  CGRect v182;
  CGRect v183;
  CGRect v184;
  CGRect v185;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_133A44(0, v3, 1, a1);
      return;
    }
    goto LABEL_159;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_167:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v140 = v4;
  v137 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (CGFloat *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_125;
    }
    v139 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for DocumentRectList.Element);
    *(_QWORD *)(v7 + 16) = v6;
    v139 = (_QWORD *)v7;
    __dst = (CGFloat *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v138 = *a1 + 208;
  v136 = *a1 + 64;
  v11 = (char *)_swiftEmptyArrayStorage;
  v141 = v3;
  v143 = v10;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = (CGFloat *)(v10 + 72 * v9);
      v15 = v14[5];
      v16 = v14[6];
      v17 = v14[7];
      v156.size.height = v14[8];
      height = v156.size.height;
      v18 = (double *)(v10 + 72 * v13);
      v20 = v18[5];
      v19 = v18[6];
      v22 = v18[7];
      v21 = v18[8];
      v156.origin.x = v15;
      v156.origin.y = v16;
      v156.size.width = v17;
      MinY = CGRectGetMinY(v156);
      v157.origin.x = v20;
      v157.origin.y = v19;
      v157.size.width = v22;
      v157.size.height = v21;
      v24 = CGRectGetMinY(v157);
      if (MinY > v24)
        v24 = MinY;
      rect = v24;
      v158.origin.x = v15;
      v158.origin.y = v16;
      v158.size.width = v17;
      v158.size.height = height;
      MaxY = CGRectGetMaxY(v158);
      v159.origin.x = v20;
      v159.origin.y = v19;
      v159.size.width = v22;
      v159.size.height = v21;
      v26 = CGRectGetMaxY(v159);
      if (v26 >= MaxY)
        v26 = MaxY;
      if (rect >= v26)
        goto LABEL_24;
      v160.origin.x = v15;
      v160.origin.y = v16;
      v160.size.width = v17;
      v160.size.height = height;
      v27 = CGRectGetMaxY(v160);
      v161.origin.x = v20;
      v161.origin.y = v19;
      v161.size.width = v22;
      v161.size.height = v21;
      if (vabdd_f64(v27, CGRectGetMaxY(v161)) >= 5.0)
      {
LABEL_24:
        v164.origin.x = v15;
        v164.origin.y = v16;
        v164.size.width = v17;
        v164.size.height = height;
        MinX = CGRectGetMinY(v164);
        v165.origin.x = v20;
        v165.origin.y = v19;
        v165.size.width = v22;
        v165.size.height = v21;
        v29 = CGRectGetMinY(v165);
      }
      else
      {
        v162.origin.x = v15;
        v162.origin.y = v16;
        v162.size.width = v17;
        v162.size.height = height;
        MinX = CGRectGetMinX(v162);
        v163.origin.x = v20;
        v163.origin.y = v19;
        v163.size.width = v22;
        v163.size.height = v21;
        v29 = CGRectGetMinX(v163);
      }
      v30 = MinX < v29;
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v31 = (CGFloat *)(v138 + 72 * v13);
        while (1)
        {
          v32 = *(v31 - 3);
          v33 = *(v31 - 2);
          v35 = *(v31 - 1);
          v34 = *v31;
          v36 = *(v31 - 12);
          v144 = *(v31 - 11);
          v38 = *(v31 - 10);
          v37 = *(v31 - 9);
          v166.origin.x = v32;
          v166.origin.y = v33;
          v166.size.width = v35;
          v166.size.height = *v31;
          v39 = CGRectGetMinY(v166);
          v167.origin.x = v36;
          v167.origin.y = v144;
          v167.size.width = v38;
          v167.size.height = v37;
          v40 = CGRectGetMinY(v167);
          if (v39 > v40)
            v40 = v39;
          recta = v40;
          v168.origin.x = v32;
          v168.origin.y = v33;
          v168.size.width = v35;
          v168.size.height = v34;
          v41 = CGRectGetMaxY(v168);
          v169.origin.x = v36;
          v169.origin.y = v144;
          v169.size.width = v38;
          v169.size.height = v37;
          v42 = CGRectGetMaxY(v169);
          if (v42 >= v41)
            v42 = v41;
          if (recta >= v42)
            goto LABEL_34;
          v170.origin.x = v32;
          v170.origin.y = v33;
          v170.size.width = v35;
          v170.size.height = v34;
          v43 = CGRectGetMaxY(v170);
          v171.origin.x = v36;
          v171.origin.y = v144;
          v171.size.width = v38;
          v171.size.height = v37;
          if (vabdd_f64(v43, CGRectGetMaxY(v171)) >= 5.0)
          {
LABEL_34:
            v174.origin.x = v32;
            v174.origin.y = v33;
            v174.size.width = v35;
            v174.size.height = v34;
            v44 = CGRectGetMinY(v174);
            v175.origin.x = v36;
            v175.origin.y = v144;
            v175.size.width = v38;
            v175.size.height = v37;
            v45 = CGRectGetMinY(v175);
          }
          else
          {
            v172.origin.x = v32;
            v172.origin.y = v33;
            v172.size.width = v35;
            v172.size.height = v34;
            v44 = CGRectGetMinX(v172);
            v173.origin.x = v36;
            v173.origin.y = v144;
            v173.size.width = v38;
            v173.size.height = v37;
            v45 = CGRectGetMinX(v173);
          }
          if (v30 != v44 < v45)
            break;
          ++v9;
          v31 += 9;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v30)
      {
        if (v9 < v13)
          goto LABEL_160;
        if (v13 < v9)
        {
          v46 = 72 * v9;
          v47 = 72 * v13;
          v48 = v9;
          v49 = v13;
          do
          {
            if (v49 != --v48)
            {
              if (!v10)
                goto LABEL_165;
              v50 = (char *)(v10 + v47);
              v51 = v143 + v46;
              v52 = *(_QWORD *)v50;
              rectc = *(_OWORD *)(v50 + 24);
              rect_16a = *(_OWORD *)(v50 + 8);
              v145 = *(_OWORD *)(v50 + 56);
              v147 = *(_OWORD *)(v50 + 40);
              memmove(v50, (const void *)(v143 + v46 - 72), 0x48uLL);
              *(_QWORD *)(v51 - 72) = v52;
              *(_OWORD *)(v51 - 64) = rect_16a;
              *(_OWORD *)(v51 - 48) = rectc;
              *(_OWORD *)(v51 - 32) = v147;
              *(_OWORD *)(v51 - 16) = v145;
              v10 = v143;
            }
            ++v49;
            v46 -= 72;
            v47 += 72;
          }
          while (v49 < v48);
          v3 = v141;
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_158;
      if (v9 - v13 < v140)
      {
        if (__OFADD__(v13, v140))
          goto LABEL_161;
        if (v13 + v140 >= v3)
          v53 = v3;
        else
          v53 = v13 + v140;
        if (v53 < v13)
          goto LABEL_162;
        if (v9 != v53)
        {
          v54 = (double *)(v136 + 72 * v9);
          do
          {
            v55 = (double *)(v10 + 72 * v9);
            v57 = v55[5];
            v56 = v55[6];
            v58 = v55[7];
            rect_16 = v55[8];
            v59 = v13;
            v60 = v54;
            do
            {
              v61 = *(v60 - 12);
              v62 = *(v60 - 11);
              v63 = *(v60 - 10);
              v155 = *(v60 - 9);
              v176.origin.x = v57;
              v176.origin.y = v56;
              v176.size.width = v58;
              v176.size.height = rect_16;
              v64 = CGRectGetMinY(v176);
              v177.origin.x = v61;
              v177.origin.y = v62;
              v177.size.width = v63;
              v177.size.height = v155;
              v65 = CGRectGetMinY(v177);
              if (v64 > v65)
                v65 = v64;
              v148 = v65;
              v178.origin.x = v57;
              v178.origin.y = v56;
              v178.size.width = v58;
              v178.size.height = rect_16;
              v66 = CGRectGetMaxY(v178);
              rectb = v61;
              v179.origin.x = v61;
              v179.origin.y = v62;
              v179.size.width = v63;
              v179.size.height = v155;
              v67 = CGRectGetMaxY(v179);
              if (v67 >= v66)
                v67 = v66;
              if (v148 >= v67)
                goto LABEL_67;
              v180.origin.x = v57;
              v180.origin.y = v56;
              v180.size.width = v58;
              v180.size.height = rect_16;
              v68 = CGRectGetMaxY(v180);
              v181.origin.x = v61;
              v181.origin.y = v62;
              v181.size.width = v63;
              v181.size.height = v155;
              if (vabdd_f64(v68, CGRectGetMaxY(v181)) >= 5.0)
              {
LABEL_67:
                v184.origin.x = v57;
                v184.origin.y = v56;
                v184.size.width = v58;
                v184.size.height = rect_16;
                v70 = CGRectGetMinY(v184);
                v185.origin.x = rectb;
                v185.origin.y = v62;
                v185.size.width = v63;
                v185.size.height = v155;
                if (v70 >= CGRectGetMinY(v185))
                  break;
              }
              else
              {
                v182.origin.x = v57;
                v182.origin.y = v56;
                v182.size.width = v58;
                v182.size.height = rect_16;
                v69 = CGRectGetMinX(v182);
                v183.origin.x = rectb;
                v183.origin.y = v62;
                v183.size.width = v63;
                v183.size.height = v155;
                if (v69 >= CGRectGetMinX(v183))
                  break;
              }
              if (!v10)
                goto LABEL_163;
              v71 = v60 - 8;
              v72 = *((_QWORD *)v60 - 8);
              v57 = *(v60 - 3);
              v56 = *(v60 - 2);
              v58 = *(v60 - 1);
              v73 = *v60;
              v74 = *(_OWORD *)(v60 - 7);
              v75 = *(_OWORD *)(v60 - 5);
              v76 = *(_OWORD *)(v60 - 11);
              *((_OWORD *)v71 + 2) = *(_OWORD *)(v60 - 13);
              *((_OWORD *)v71 + 3) = v76;
              *v60 = *(v60 - 9);
              v77 = *(_OWORD *)(v60 - 15);
              *(_OWORD *)v71 = *(_OWORD *)(v60 - 17);
              *((_OWORD *)v71 + 1) = v77;
              rect_16 = v73;
              *(v60 - 9) = v73;
              v60 -= 9;
              *((_QWORD *)v60 - 8) = v72;
              *(_OWORD *)(v60 - 7) = v74;
              *(_OWORD *)(v60 - 5) = v75;
              *(v60 - 3) = v57;
              *(v60 - 2) = v56;
              ++v59;
              *(v60 - 1) = v58;
            }
            while (v9 != v59);
            ++v9;
            v54 += 9;
          }
          while (v9 != v53);
          v9 = v53;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_153:
      __break(1u);
      goto LABEL_154;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_1D3038(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v79 = *((_QWORD *)v11 + 2);
    v78 = *((_QWORD *)v11 + 3);
    v12 = v79 + 1;
    if (v79 >= v78 >> 1)
      v11 = sub_1D3038((char *)(v78 > 1), v79 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v80 = v11 + 32;
    v81 = &v11[16 * v79 + 32];
    *(_QWORD *)v81 = v13;
    *((_QWORD *)v81 + 1) = v9;
    if (v79)
      break;
    v12 = 1;
    v10 = v143;
LABEL_15:
    v3 = v141;
    if (v9 >= v141)
    {
      v8 = v139;
LABEL_125:
      v129 = v11;
      v139 = v8;
      if (v12 < 2)
        goto LABEL_122;
      v130 = *v137;
      while (1)
      {
        v131 = v12 - 2;
        if (v12 < 2)
          break;
        if (!v130)
          goto LABEL_166;
        v128 = v129;
        v132 = *(_QWORD *)&v129[16 * v131 + 32];
        v133 = *(_QWORD *)&v129[16 * v12 + 24];
        sub_133F74((CGFloat *)(v130 + 72 * v132), (CGFloat *)(v130 + 72 * *(_QWORD *)&v129[16 * v12 + 16]), (CGFloat *)(v130 + 72 * v133), __dst);
        if (v1)
          goto LABEL_121;
        if (v133 < v132)
          goto LABEL_155;
        if ((swift_isUniquelyReferenced_nonNull_native(v128) & 1) == 0)
          v128 = sub_1D34BC((uint64_t)v128);
        if (v131 >= *((_QWORD *)v128 + 2))
          goto LABEL_156;
        v134 = &v128[16 * v131 + 32];
        *(_QWORD *)v134 = v132;
        *((_QWORD *)v134 + 1) = v133;
        v135 = *((_QWORD *)v128 + 2);
        if (v12 > v135)
          goto LABEL_157;
        memmove(&v128[16 * v12 + 16], &v128[16 * v12 + 32], 16 * (v135 - v12));
        v129 = v128;
        *((_QWORD *)v128 + 2) = v135 - 1;
        v12 = v135 - 1;
        if (v135 <= 2)
          goto LABEL_122;
      }
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
  }
  v10 = v143;
  while (1)
  {
    v82 = v12 - 1;
    if (v12 >= 4)
    {
      v87 = &v80[16 * v12];
      v88 = *((_QWORD *)v87 - 8);
      v89 = *((_QWORD *)v87 - 7);
      v93 = __OFSUB__(v89, v88);
      v90 = v89 - v88;
      if (v93)
        goto LABEL_142;
      v92 = *((_QWORD *)v87 - 6);
      v91 = *((_QWORD *)v87 - 5);
      v93 = __OFSUB__(v91, v92);
      v85 = v91 - v92;
      v86 = v93;
      if (v93)
        goto LABEL_143;
      v94 = v12 - 2;
      v95 = &v80[16 * v12 - 32];
      v97 = *(_QWORD *)v95;
      v96 = *((_QWORD *)v95 + 1);
      v93 = __OFSUB__(v96, v97);
      v98 = v96 - v97;
      if (v93)
        goto LABEL_145;
      v93 = __OFADD__(v85, v98);
      v99 = v85 + v98;
      if (v93)
        goto LABEL_148;
      if (v99 >= v90)
      {
        v117 = &v80[16 * v82];
        v119 = *(_QWORD *)v117;
        v118 = *((_QWORD *)v117 + 1);
        v93 = __OFSUB__(v118, v119);
        v120 = v118 - v119;
        if (v93)
          goto LABEL_152;
        v110 = v85 < v120;
        goto LABEL_110;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v111 = *((_QWORD *)v11 + 4);
        v112 = *((_QWORD *)v11 + 5);
        v93 = __OFSUB__(v112, v111);
        v104 = v112 - v111;
        v105 = v93;
        goto LABEL_104;
      }
      v84 = *((_QWORD *)v11 + 4);
      v83 = *((_QWORD *)v11 + 5);
      v93 = __OFSUB__(v83, v84);
      v85 = v83 - v84;
      v86 = v93;
    }
    if ((v86 & 1) != 0)
      goto LABEL_144;
    v94 = v12 - 2;
    v100 = &v80[16 * v12 - 32];
    v102 = *(_QWORD *)v100;
    v101 = *((_QWORD *)v100 + 1);
    v103 = __OFSUB__(v101, v102);
    v104 = v101 - v102;
    v105 = v103;
    if (v103)
      goto LABEL_147;
    v106 = &v80[16 * v82];
    v108 = *(_QWORD *)v106;
    v107 = *((_QWORD *)v106 + 1);
    v93 = __OFSUB__(v107, v108);
    v109 = v107 - v108;
    if (v93)
      goto LABEL_150;
    if (__OFADD__(v104, v109))
      goto LABEL_151;
    if (v104 + v109 >= v85)
    {
      v110 = v85 < v109;
LABEL_110:
      if (v110)
        v82 = v94;
      goto LABEL_112;
    }
LABEL_104:
    if ((v105 & 1) != 0)
      goto LABEL_146;
    v113 = &v80[16 * v82];
    v115 = *(_QWORD *)v113;
    v114 = *((_QWORD *)v113 + 1);
    v93 = __OFSUB__(v114, v115);
    v116 = v114 - v115;
    if (v93)
      goto LABEL_149;
    if (v116 < v104)
      goto LABEL_15;
LABEL_112:
    v121 = v82 - 1;
    if (v82 - 1 >= v12)
    {
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
      goto LABEL_153;
    }
    if (!v10)
      goto LABEL_164;
    v122 = v10;
    v123 = &v80[16 * v121];
    v124 = *(_QWORD *)v123;
    v125 = &v80[16 * v82];
    v126 = *((_QWORD *)v125 + 1);
    sub_133F74((CGFloat *)(v122 + 72 * *(_QWORD *)v123), (CGFloat *)(v122 + 72 * *(_QWORD *)v125), (CGFloat *)(v122 + 72 * v126), __dst);
    if (v1)
      break;
    if (v126 < v124)
      goto LABEL_139;
    if (v82 > *((_QWORD *)v11 + 2))
      goto LABEL_140;
    *(_QWORD *)v123 = v124;
    *(_QWORD *)&v80[16 * v121 + 8] = v126;
    v127 = *((_QWORD *)v11 + 2);
    if (v82 >= v127)
      goto LABEL_141;
    v12 = v127 - 1;
    memmove(&v80[16 * v82], v125 + 16, 16 * (v127 - 1 - v82));
    *((_QWORD *)v11 + 2) = v127 - 1;
    v110 = v127 > 2;
    v10 = v143;
    if (!v110)
      goto LABEL_15;
  }
  v128 = v11;
LABEL_121:
  v129 = v128;
LABEL_122:
  swift_bridgeObjectRelease(v129);
  v139[2] = 0;
  swift_bridgeObjectRelease(v139);
}

void sub_133A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  uint64_t v13;
  double *v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  double MinY;
  double v19;
  double MaxY;
  double v21;
  double v22;
  double MinX;
  double v24;
  double *v25;
  uint64_t v26;
  double v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  CGFloat v32;
  double v33;
  CGFloat rect;
  CGFloat v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  if (a3 != a2)
  {
    v4 = a3;
    v7 = *a4;
    v8 = *a4 + 72 * a3 + 64;
LABEL_5:
    v9 = (double *)(v7 + 72 * v4);
    v11 = v9[5];
    v10 = v9[6];
    v12 = v9[7];
    v35 = v9[8];
    v13 = a1;
    v14 = (double *)v8;
    while (1)
    {
      v15 = *(v14 - 12);
      v16 = *(v14 - 11);
      v17 = *(v14 - 10);
      v32 = *(v14 - 9);
      v36.origin.x = v11;
      v36.origin.y = v10;
      v36.size.width = v12;
      v36.size.height = v35;
      MinY = CGRectGetMinY(v36);
      v37.origin.x = v15;
      v37.origin.y = v16;
      v37.size.width = v17;
      v37.size.height = v32;
      v19 = CGRectGetMinY(v37);
      if (MinY > v19)
        v19 = MinY;
      v33 = v19;
      v38.origin.x = v11;
      v38.origin.y = v10;
      v38.size.width = v12;
      v38.size.height = v35;
      MaxY = CGRectGetMaxY(v38);
      rect = v15;
      v39.origin.x = v15;
      v39.origin.y = v16;
      v39.size.width = v17;
      v39.size.height = v32;
      v21 = CGRectGetMaxY(v39);
      if (v21 >= MaxY)
        v21 = MaxY;
      if (v33 >= v21)
        goto LABEL_14;
      v40.origin.x = v11;
      v40.origin.y = v10;
      v40.size.width = v12;
      v40.size.height = v35;
      v22 = CGRectGetMaxY(v40);
      v41.origin.x = v15;
      v41.origin.y = v16;
      v41.size.width = v17;
      v41.size.height = v32;
      if (vabdd_f64(v22, CGRectGetMaxY(v41)) >= 5.0)
      {
LABEL_14:
        v44.origin.x = v11;
        v44.origin.y = v10;
        v44.size.width = v12;
        v44.size.height = v35;
        v24 = CGRectGetMinY(v44);
        v45.origin.x = rect;
        v45.origin.y = v16;
        v45.size.width = v17;
        v45.size.height = v32;
        if (v24 >= CGRectGetMinY(v45))
          goto LABEL_4;
      }
      else
      {
        v42.origin.x = v11;
        v42.origin.y = v10;
        v42.size.width = v12;
        v42.size.height = v35;
        MinX = CGRectGetMinX(v42);
        v43.origin.x = rect;
        v43.origin.y = v16;
        v43.size.width = v17;
        v43.size.height = v32;
        if (MinX >= CGRectGetMinX(v43))
          goto LABEL_4;
      }
      if (!v7)
        break;
      v25 = v14 - 8;
      v26 = *((_QWORD *)v14 - 8);
      v11 = *(v14 - 3);
      v10 = *(v14 - 2);
      v12 = *(v14 - 1);
      v27 = *v14;
      v28 = *(_OWORD *)(v14 - 7);
      v29 = *(_OWORD *)(v14 - 5);
      v30 = *(_OWORD *)(v14 - 11);
      *((_OWORD *)v25 + 2) = *(_OWORD *)(v14 - 13);
      *((_OWORD *)v25 + 3) = v30;
      *v14 = *(v14 - 9);
      v31 = *(_OWORD *)(v14 - 15);
      *(_OWORD *)v25 = *(_OWORD *)(v14 - 17);
      *((_OWORD *)v25 + 1) = v31;
      v35 = v27;
      *(v14 - 9) = v27;
      v14 -= 9;
      *((_QWORD *)v14 - 8) = v26;
      *(_OWORD *)(v14 - 7) = v28;
      *(_OWORD *)(v14 - 5) = v29;
      *(v14 - 3) = v11;
      *(v14 - 2) = v10;
      ++v13;
      *(v14 - 1) = v12;
      if (v4 == v13)
      {
LABEL_4:
        ++v4;
        v8 += 72;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_133CB0(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5;
  uint64_t *v6;
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  char *v17;
  uint64_t *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  char *v31;

  v6 = (uint64_t *)__dst;
  v7 = a2;
  v8 = __src;
  v9 = a2 - __src;
  v10 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v10 = a2 - __src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v31 = __src;
  v30 = (uint64_t *)__dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 > -8)
    {
      if (__dst != a2 || &a2[8 * v14] <= __dst)
        memmove(__dst, a2, 8 * v14);
      v18 = &v6[v14];
      v29 = v18;
      v31 = v7;
      if (v8 < v7 && v12 >= 8)
      {
        v19 = (char *)(a3 - 8);
        v20 = v7;
        while (1)
        {
          v28 = *(v18 - 1);
          v21 = *((_QWORD *)v20 - 1);
          v20 -= 8;
          v27 = v21;
          v22 = a5(&v28, &v27);
          if (v5)
            break;
          v23 = v19 + 8;
          if ((v22 & 1) != 0)
          {
            if (v23 != v7 || v19 >= v7)
              *(_QWORD *)v19 = *(_QWORD *)v20;
            v31 = v20;
            if (v20 <= v8)
              goto LABEL_44;
          }
          else
          {
            v29 = v18 - 1;
            if (v23 < (char *)v18 || v19 >= (char *)v18 || v23 != (char *)v18)
              *(_QWORD *)v19 = *(v18 - 1);
            v20 = v7;
            --v18;
            if (v7 <= v8)
              goto LABEL_44;
          }
          v19 -= 8;
          v7 = v20;
          if (v18 <= v6)
            goto LABEL_44;
        }
      }
      goto LABEL_44;
    }
  }
  else if (v9 > -8)
  {
    if (__dst != __src || &__src[8 * v11] <= __dst)
      memmove(__dst, __src, 8 * v11);
    v15 = &v6[v11];
    v29 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      do
      {
        v28 = *(_QWORD *)v7;
        v27 = *v6;
        v16 = a5(&v28, &v27);
        if (v5)
          break;
        if ((v16 & 1) != 0)
        {
          v17 = v7 + 8;
          if (v8 < v7 || v8 >= v17 || v8 != v7)
            *(_QWORD *)v8 = *(_QWORD *)v7;
        }
        else
        {
          if (v8 != (char *)v6)
            *(_QWORD *)v8 = *v6;
          v30 = ++v6;
          v17 = v7;
        }
        v8 += 8;
        v31 = v8;
        if (v6 >= v15)
          break;
        v7 = v17;
      }
      while ((unint64_t)v17 < a3);
    }
LABEL_44:
    sub_1D3130((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_133F74(CGFloat *__src, CGFloat *a2, CGFloat *a3, CGFloat *__dst)
{
  CGFloat *v4;
  CGFloat *v5;
  CGFloat *v6;
  CGFloat *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat *v12;
  CGFloat *v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGFloat *v27;
  CGFloat *v28;
  double v29;
  double *v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  double MinY;
  double v39;
  double MaxY;
  double v41;
  double v42;
  double MinX;
  double v44;
  unint64_t v45;
  CGFloat *v46;
  unint64_t v47;
  uint64_t result;
  CGFloat v49;
  CGFloat v50;
  double v51;
  double v52;
  char *v53;
  CGFloat *v54;
  CGFloat *v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = ((char *)a2 - (char *)__src) / 72;
  v10 = (char *)a3 - (char *)a2;
  v11 = ((char *)a3 - (char *)a2) / 72;
  v55 = __src;
  v54 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -71)
    {
      if (__dst != a2 || &a2[9 * v11] <= __dst)
        memmove(__dst, a2, 72 * v11);
      v30 = &v4[9 * v11];
      v53 = (char *)v30;
      v55 = v6;
      if (v7 < v6 && v10 >= 72)
      {
        do
        {
          v31 = *(v30 - 4);
          v32 = *(v30 - 3);
          v34 = *(v30 - 2);
          v33 = *(v30 - 1);
          v35 = *(v6 - 4);
          v50 = *(v6 - 3);
          v37 = *(v6 - 2);
          v36 = *(v6 - 1);
          v66.origin.x = v31;
          v66.origin.y = v32;
          v66.size.width = v34;
          v66.size.height = v33;
          MinY = CGRectGetMinY(v66);
          v67.origin.x = v35;
          v67.origin.y = v50;
          v67.size.width = v37;
          v67.size.height = v36;
          v39 = CGRectGetMinY(v67);
          if (MinY > v39)
            v39 = MinY;
          v52 = v39;
          v68.origin.x = v31;
          v68.origin.y = v32;
          v68.size.width = v34;
          v68.size.height = v33;
          MaxY = CGRectGetMaxY(v68);
          v69.origin.x = v35;
          v69.origin.y = v50;
          v69.size.width = v37;
          v69.size.height = v36;
          v41 = CGRectGetMaxY(v69);
          if (v41 >= MaxY)
            v41 = MaxY;
          if (v52 >= v41)
            goto LABEL_41;
          v70.origin.x = v31;
          v70.origin.y = v32;
          v70.size.width = v34;
          v70.size.height = v33;
          v42 = CGRectGetMaxY(v70);
          v71.origin.x = v35;
          v71.origin.y = v50;
          v71.size.width = v37;
          v71.size.height = v36;
          if (vabdd_f64(v42, CGRectGetMaxY(v71)) >= 5.0)
          {
LABEL_41:
            v74.origin.x = v31;
            v74.origin.y = v32;
            v74.size.width = v34;
            v74.size.height = v33;
            MinX = CGRectGetMinY(v74);
            v75.origin.x = v35;
            v75.origin.y = v50;
            v75.size.width = v37;
            v75.size.height = v36;
            v44 = CGRectGetMinY(v75);
          }
          else
          {
            v72.origin.x = v31;
            v72.origin.y = v32;
            v72.size.width = v34;
            v72.size.height = v33;
            MinX = CGRectGetMinX(v72);
            v73.origin.x = v35;
            v73.origin.y = v50;
            v73.size.width = v37;
            v73.size.height = v36;
            v44 = CGRectGetMinX(v73);
          }
          v45 = (unint64_t)(v5 - 9);
          if (MinX >= v44)
          {
            v47 = (unint64_t)(v30 - 9);
            v53 = (char *)(v30 - 9);
            if (v5 < v30 || v45 >= (unint64_t)v30 || v5 != v30)
              memmove(v5 - 9, v30 - 9, 0x48uLL);
            v46 = v6;
            v30 -= 9;
            if (v47 <= (unint64_t)v4)
              break;
          }
          else
          {
            v46 = v6 - 9;
            if (v5 != v6 || v45 >= (unint64_t)v6)
              memmove(v5 - 9, v6 - 9, 0x48uLL);
            v55 = v6 - 9;
            if (v30 <= v4)
              break;
          }
          v6 = v46;
          v5 -= 9;
        }
        while (v46 > v7);
      }
LABEL_54:
      sub_1D33FC((void **)&v55, (const void **)&v54, &v53);
      return 1;
    }
  }
  else if (v8 >= -71)
  {
    if (__dst != __src || &__src[9 * v9] <= __dst)
      memmove(__dst, __src, 72 * v9);
    v12 = &v4[9 * v9];
    v53 = (char *)v12;
    if (v6 < v5 && v8 >= 72)
    {
      v13 = v4;
      while (1)
      {
        v14 = v6[5];
        v15 = v6[6];
        v17 = v6[7];
        v16 = v6[8];
        v18 = v13[5];
        v49 = v13[6];
        v20 = v13[7];
        v19 = v13[8];
        v56.origin.x = v14;
        v56.origin.y = v15;
        v56.size.width = v17;
        v56.size.height = v16;
        v21 = CGRectGetMinY(v56);
        v57.origin.x = v18;
        v57.origin.y = v49;
        v57.size.width = v20;
        v57.size.height = v19;
        v22 = CGRectGetMinY(v57);
        if (v21 > v22)
          v22 = v21;
        v51 = v22;
        v58.origin.x = v14;
        v58.origin.y = v15;
        v58.size.width = v17;
        v58.size.height = v16;
        v23 = CGRectGetMaxY(v58);
        v59.origin.x = v18;
        v59.origin.y = v49;
        v59.size.width = v20;
        v59.size.height = v19;
        v24 = CGRectGetMaxY(v59);
        if (v24 >= v23)
          v24 = v23;
        if (v51 >= v24)
          goto LABEL_19;
        v60.origin.x = v14;
        v60.origin.y = v15;
        v60.size.width = v17;
        v60.size.height = v16;
        v25 = CGRectGetMaxY(v60);
        v61.origin.x = v18;
        v61.origin.y = v49;
        v61.size.width = v20;
        v61.size.height = v19;
        if (vabdd_f64(v25, CGRectGetMaxY(v61)) >= 5.0)
        {
LABEL_19:
          v64.origin.x = v14;
          v64.origin.y = v15;
          v64.size.width = v17;
          v64.size.height = v16;
          v29 = CGRectGetMinY(v64);
          v65.origin.x = v18;
          v65.origin.y = v49;
          v65.size.width = v20;
          v65.size.height = v19;
          if (v29 < CGRectGetMinY(v65))
          {
LABEL_20:
            v28 = v6 + 9;
            v27 = v6;
            if (v7 == v6 && v7 < v28)
              goto LABEL_25;
            goto LABEL_24;
          }
        }
        else
        {
          v62.origin.x = v14;
          v62.origin.y = v15;
          v62.size.width = v17;
          v62.size.height = v16;
          v26 = CGRectGetMinX(v62);
          v63.origin.x = v18;
          v63.origin.y = v49;
          v63.size.width = v20;
          v63.size.height = v19;
          if (v26 < CGRectGetMinX(v63))
            goto LABEL_20;
        }
        v4 = v13 + 9;
        v27 = v13;
        v28 = v6;
        if (v7 == v13)
        {
          v13 += 9;
          if (v7 < v4)
            goto LABEL_25;
        }
        else
        {
          v13 += 9;
        }
LABEL_24:
        memmove(v7, v27, 0x48uLL);
LABEL_25:
        v7 += 9;
        if (v13 < v12)
        {
          v6 = v28;
          if (v28 < v5)
            continue;
        }
        v54 = v4;
        v55 = v7;
        goto LABEL_54;
      }
    }
    goto LABEL_54;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_1344B0(_QWORD *result, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;

  v3 = *a3;
  v4 = *result - *a3;
  if (__OFSUB__(*result, *a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  v5 = __OFSUB__(*a2, v3);
  v6 = *a2 - v3;
  if (v5)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v7 = *result - *a3;
  if (v4 < 0)
  {
    v7 = *a3 - *result;
    if (__OFSUB__(0, v4))
      goto LABEL_12;
  }
  v8 = v6;
  if (v6 < 0)
  {
    v8 = -v6;
    if (__OFSUB__(0, v6))
      goto LABEL_13;
  }
  v9 = v6 < v4;
  if (v7 == v8)
    return (_QWORD *)v9;
  else
    return (_QWORD *)(v7 < v8);
}

uint64_t sub_134514(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *i;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v5 = result + 64;
    v18 = result + 64;
    do
    {
      if (v4 <= v2)
        v6 = v2;
      else
        v6 = v4;
      v7 = -(uint64_t)v6;
      for (i = (_QWORD *)(v5 + 40 * v4++); ; i += 5)
      {
        if (v7 + v4 == 1)
        {
          __break(1u);
          return result;
        }
        v9 = *(i - 4);
        if (*(_QWORD *)(a2 + 24) == v9)
        {
          v10 = *i;
          v11 = *((_OWORD *)i - 1);
          v12 = *(i - 3);
          v13 = v12;
          v19 = v11;
          result = CGRectContainsPoint(*(CGRect *)(a2 + 32), *(CGPoint *)((char *)&v11 - 8));
          if ((_DWORD)result)
            break;
        }
        if (++v4 - v2 == 1)
          return (uint64_t)_swiftEmptyArrayStorage;
      }
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_F5254(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v14 = v19;
      v16 = _swiftEmptyArrayStorage[2];
      v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1)
      {
        result = sub_F5254(v15 > 1, v16 + 1, 1);
        v14 = v19;
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      v17 = &_swiftEmptyArrayStorage[5 * v16];
      v17[4] = v9;
      v17[5] = v12;
      *((_OWORD *)v17 + 3) = v14;
      v17[8] = v10;
      v5 = v18;
    }
    while (v4 != v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

_QWORD *sub_134698(uint64_t a1, uint64_t a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16[2];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  result = _swiftEmptyArrayStorage;
  v20 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return result;
  v6 = 0;
  v7 = a1 + 32;
  v8 = _swiftEmptyArrayStorage;
  while (1)
  {
    sub_49F1C(v7 + 40 * v6, (uint64_t)&v17);
    v9 = v18;
    v10 = v19;
    sub_472D0(&v17, v18);
    result = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    v11 = *(_QWORD *)(a2 + 16);
    if (v11)
    {
      if (*(_QWORD **)(a2 + 32) == result)
      {
LABEL_7:
        sub_3F1CC(&v17, (uint64_t)v16);
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          sub_F5338(0, v8[2] + 1, 1);
        v8 = v20;
        v13 = v20[2];
        v12 = v20[3];
        if (v13 >= v12 >> 1)
        {
          sub_F5338(v12 > 1, v13 + 1, 1);
          v8 = v20;
        }
        v8[2] = v13 + 1;
        sub_3F1CC(v16, (uint64_t)&v8[5 * v13 + 4]);
        goto LABEL_4;
      }
      if (v11 != 1)
        break;
    }
LABEL_3:
    sub_34488(&v17);
LABEL_4:
    if (++v6 == v4)
      return v20;
  }
  v14 = 5;
  while (1)
  {
    v15 = v14 - 3;
    if (__OFADD__(v14 - 4, 1))
      break;
    if (*(_QWORD **)(a2 + 8 * v14) == result)
      goto LABEL_7;
    ++v14;
    if (v15 == v11)
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_134824(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for Int, &protocol witness table for Int);
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_12FF80(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void sub_134894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v4)
  {
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = v3[v7 + 4];
      v10 = v3[v7 + 5];
      v11 = v9 == a2 && v10 == a3;
      if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, a2, a3, 0) & 1) != 0)
        break;
      ++v8;
      v7 += 2;
      if (v4 == v8)
        return;
    }
    v12 = v8 + 1;
    if (!__OFADD__(v8, 1))
    {
      if (v12 == v4)
        return;
      while (1)
      {
        v14 = v3[2];
        if (v12 >= v14)
          break;
        v15 = &v3[v7];
        v16 = v3[v7 + 6];
        v17 = v3[v7 + 7];
        v18 = v16 == a2 && v17 == a3;
        if (!v18 && (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, a2, a3, 0) & 1) == 0)
        {
          if (v12 != v8)
          {
            if (v8 >= v14)
              goto LABEL_30;
            v19 = &v3[2 * v8 + 4];
            v20 = v19[1];
            v27 = *v19;
            v21 = v15[6];
            v22 = v15[7];
            swift_bridgeObjectRetain(v20);
            swift_bridgeObjectRetain(v22);
            if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
              v3 = sub_E3A10(v3);
            v23 = &v3[2 * v8];
            v24 = v23[5];
            v23[4] = v21;
            v23[5] = v22;
            swift_bridgeObjectRelease(v24);
            if (v12 >= v3[2])
              goto LABEL_31;
            v25 = &v3[v7];
            v26 = v3[v7 + 7];
            v25[6] = v27;
            v25[7] = v20;
            swift_bridgeObjectRelease(v26);
            *(_QWORD *)a1 = v3;
          }
          if (__OFADD__(v8++, 1))
            goto LABEL_29;
        }
        ++v12;
        v7 += 2;
        if (v12 == v3[2])
          return;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
    }
    __break(1u);
  }
}

void sub_134A44(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void *v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  _QWORD **v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint8_t *v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  _QWORD aBlock[6];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[32];

  v16 = swift_allocObject(&unk_382C08, 72);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  v60 = a3;
  *(_QWORD *)(v16 + 32) = a4;
  *(_QWORD *)(v16 + 40) = a5;
  v63 = a6;
  *(_BYTE *)(v16 + 48) = a6;
  v65 = a7;
  *(_QWORD *)(v16 + 56) = a7;
  *(_QWORD *)(v16 + 64) = a8;
  swift_beginAccess(a1 + 32, v71, 0, 0);
  v18 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  sub_34450(0, &qword_3BA5C8, NSUserDefaults_ptr);
  swift_retain();
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a5);
  v61 = a8;
  swift_retain();
  v19 = swift_unknownObjectRetain(v18);
  v20 = (void *)static NSUserDefaults.booksAppGroup.getter(v19);
  objc_msgSend(v20, "BKSettingFilterBrightImages");

  ObjectType = swift_getObjectType(v18);
  v22 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_stylesheetProvider);
  v23 = v17;
  v24 = sub_9A8B8(v18, ObjectType, v17);
  v25 = v24;
  v26 = *(void **)(a1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v25, "applyToWebView:", v27);
    sub_124154(v27, a2, v60, a4, a5, v63, v65, v61);

    swift_unknownObjectRelease(v18);
  }
  else
  {
    v62 = v22;
    v66 = v24;
    v28 = v23;
    v29 = (*(double (**)(uint64_t, uint64_t))(v23 + 48))(ObjectType, v23);
    v31 = v30;
    v32 = swift_allocObject(&unk_382C30, 32);
    *(_QWORD *)(v32 + 16) = sub_139C30;
    *(_QWORD *)(v32 + 24) = v16;
    v33 = (_QWORD **)(a1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginatingWebViewCreationCompletions);
    swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginatingWebViewCreationCompletions, aBlock, 33, 0);
    v34 = *v33;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
    *v33 = v34;
    v64 = v18;
    v36 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v34 = sub_42744(0, v34[2] + 1, 1, v34);
      *v33 = v34;
    }
    v38 = v34[2];
    v37 = v34[3];
    if (v38 >= v37 >> 1)
    {
      v34 = sub_42744((_QWORD *)(v37 > 1), v38 + 1, 1, v34);
      *v33 = v34;
    }
    v34[2] = v38 + 1;
    v39 = &v34[2 * v38];
    v39[4] = sub_1128A4;
    v39[5] = v32;
    v40 = *v33;
    swift_endAccess(aBlock);
    if (v40[2] == 1)
    {
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v41 = type metadata accessor for Logger(0);
      v42 = sub_555F0(v41, (uint64_t)qword_3BD350);
      v43 = Logger.logObject.getter(v42);
      v44 = static os_log_type_t.info.getter();
      v45 = ObjectType;
      if (os_log_type_enabled(v43, v44))
      {
        v46 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_0, v43, v44, "PaginatingService creating #fontReg webView", v46, 2u);
        swift_slowDealloc(v46, -1, -1);
      }

      v47 = (void *)PaginatingService.paginationJSOptions<A>(layoutProvider:)(v64, ObjectType, v36);
      v48 = (void *)PaginatingService.cleanupJSOptions<A>(layoutProvider:)(v64, v45, v36);
      v49 = objc_msgSend(objc_allocWithZone((Class)BECFIUtilitiesJSOptions), "init");
      v50 = (void *)objc_opt_self(BEWebViewFactory);
      v51 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
      v52 = swift_getObjectType(*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v51 + 8))(v68, v52, v51);
      v53 = a1;
      v54 = v69;
      v55 = v70;
      sub_472D0(v68, v69);
      v56 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v55 + 280))(v54, v55);
      v57 = *(_QWORD *)(v62 + OBJC_IVAR____TtC8BookEPUB18StylesheetProvider__styleManager);
      v58 = swift_allocObject(&unk_3826B0, 24);
      swift_weakInit(v58 + 16, v53);
      aBlock[4] = sub_139C68;
      aBlock[5] = v58;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_12F4DC;
      aBlock[3] = &unk_382C48;
      v59 = _Block_copy(aBlock);
      swift_unknownObjectRetain(v57);
      swift_release();
      objc_msgSend(v50, "viewConfiguredAsyncForPagination:protocolCacheItem:paginationOptions:cleanupOptions:cfiOptions:stylesheetSet:styleManager:completion:", v56, v47, v48, v49, v66, v57, 0.0, 0.0, v29, v31, v59);

      swift_unknownObjectRelease(v64);
      _Block_release(v59);
      swift_unknownObjectRelease(v57);

      sub_34488(v68);
    }
    else
    {

      swift_unknownObjectRelease(v64);
    }
  }
  swift_release();
}

void sub_134F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v3 = v2;
  v17 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  if (!v6)
    goto LABEL_18;
  while (!__OFSUB__(v6--, 1))
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
      goto LABEL_12;
    }
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      if (a1 < 0)
        v14 = a1;
      else
        v14 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v6 = _CocoaArrayWrapper.endIndex.getter(v14);
      if (!v6)
        goto LABEL_18;
    }
    else
    {
      if (v6 >= *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
        goto LABEL_20;
      v9 = *(_QWORD *)(a1 + 32 + 8 * v6);
      swift_retain();
LABEL_12:
      v16 = v9;
      sub_12C948((uint64_t)&v16, a2, &v15);
      if (v3)
      {
        swift_bridgeObjectRelease(a1);
        swift_release();
        swift_bridgeObjectRelease(v17);
        return;
      }
      swift_release();
      v11 = v15;
      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
        v13 = *(_QWORD *)((char *)&dword_10 + (v17 & 0xFFFFFFFFFFFFFF8));
        v12 = *(_QWORD *)((char *)&dword_18 + (v17 & 0xFFFFFFFFFFFFFF8));
        if (v13 >= v12 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v11);
        specialized Array._endMutation()(v7);
      }
      if (!v6)
        goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  swift_bridgeObjectRelease(a1);
}

uint64_t sub_13513C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];
  uint64_t v10;
  _OWORD v11[3];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_139860();
  result = Set.init(minimumCapacity:)(v2, &type metadata for SearchPassage, v3);
  v10 = result;
  if (v2)
  {
    v5 = (_OWORD *)(a1 + 32);
    do
    {
      v6 = v5[1];
      v11[0] = *v5;
      v11[1] = v6;
      v11[2] = v5[2];
      sub_1398A4(v11);
      sub_130078(v9, v11);
      v7 = v9[1];
      v8 = v9[3];
      swift_bridgeObjectRelease(v9[5]);
      swift_bridgeObjectRelease(v8);
      swift_bridgeObjectRelease(v7);
      v5 += 3;
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_1351E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for String, &protocol witness table for String);
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain(*v4);
      sub_130310(v7, v5, v6);
      swift_bridgeObjectRelease(v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_13527C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  char *v5;
  char v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_4233C();
  result = Set.init(minimumCapacity:)(v2, &type metadata for BookThemeType, v3);
  v8 = result;
  if (v2)
  {
    v5 = (char *)(a1 + 32);
    do
    {
      v6 = *v5++;
      sub_1304BC((uint64_t)&v7, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1352EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
      }
      else
      {
        v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
        swift_retain(v8);
      }
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_QWORD *)(v8 + 24);
      if (v9 == a2 && v10 == a3)
        break;
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, a2, a3, 0);
      swift_release(v8);
      if ((v12 & 1) != 0)
        return v7;
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_17:
        if (a1 < 0)
          v14 = a1;
        else
          v14 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v6 = _CocoaArrayWrapper.endIndex.getter(v14);
        swift_bridgeObjectRelease(a1);
        v7 = 0;
        if (!v6)
          return v7;
      }
      else
      {
        ++v7;
        if (v13 == v6)
          return 0;
      }
    }
    swift_release(v8);
  }
  return v7;
}

_QWORD *sub_13541C(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  if (*(_QWORD *)(a2 + 16) <= *(_QWORD *)(a1 + 16) >> 3)
  {
    swift_bridgeObjectRetain(a1);
    sub_1B50C8(a2);
    v4 = (_QWORD *)a1;
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v4 = sub_1B599C(a2, a1);
  }
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(a2 + 16) >> 3)
  {
    swift_bridgeObjectRetain(a2);
    sub_1B50C8(a1);
    v5 = (_QWORD *)a2;
  }
  else
  {
    swift_bridgeObjectRetain(a2);
    v5 = sub_1B599C(a1, a2);
  }
  v6 = v4[2];
  if (v5[2])
  {
    if (!v6)
    {
      swift_bridgeObjectRelease(v4);
      return v5;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v5);
    if (!v6)
    {
      swift_bridgeObjectRelease(v4);
      return 0;
    }
  }
  return v4;
}

uint64_t sub_135540(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 < 2u)
    return swift_bridgeObjectRelease(result);
  if (a3 == 2)
  {
    swift_bridgeObjectRelease(result);
    return swift_bridgeObjectRelease(a2);
  }
  return result;
}

_QWORD *sub_135588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, _UNKNOWN **a12)
{
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  NSString v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char **v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t *v48;
  id v49;
  NSString v50;
  unsigned __int8 v51;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;

  v13 = v12;
  v59 = a8;
  v60 = a5;
  v55 = a7;
  v56 = a2;
  v61 = a6;
  v57 = a4;
  v58 = a3;
  v54 = a10;
  v15 = sub_319AC((uint64_t *)&unk_3B8E70);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[3] = 0;
  swift_unknownObjectWeakInit(v13 + 2, 0);
  v19 = (char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__isPaginationComplete;
  v63 = 0;
  Published.init(initialValue:)(&v63, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v18, v15);
  swift_unknownObjectWeakInit((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostView, 0);
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_backgroundHostViewFrameObservation) = 0;
  v20 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_highlightsChangedSubject;
  v21 = sub_319AC(&qword_3BD380);
  v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48));
  *(_QWORD *)((char *)v13 + v20) = PassthroughSubject.init()(v22);
  v23 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookmarksChangedSubject;
  v24 = sub_319AC((uint64_t *)&unk_3B8EA0);
  v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48));
  *(_QWORD *)((char *)v13 + v23) = PassthroughSubject.init()(v25);
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity) = 0;
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService____lazy_storage___bookPaginationEntitySubject) = 0;
  v26 = (char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFontsObservationToken;
  *(_OWORD *)v26 = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  *((_QWORD *)v26 + 4) = 0;
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView) = 0;
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginatingWebViewCreationCompletions) = _swiftEmptyArrayStorage;
  v27 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationQueue;
  *(_QWORD *)((char *)v13 + v27) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PaginationQueue(0)), "init");
  v28 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_subscriptions;
  v29 = type metadata accessor for PaginatingService.Subscriptions();
  v30 = swift_allocObject(v29, 136);
  *(_OWORD *)(v30 + 16) = 0u;
  *(_OWORD *)(v30 + 32) = 0u;
  *(_OWORD *)(v30 + 48) = 0u;
  *(_OWORD *)(v30 + 64) = 0u;
  *(_OWORD *)(v30 + 80) = 0u;
  *(_OWORD *)(v30 + 96) = 0u;
  *(_OWORD *)(v30 + 112) = 0u;
  *(_QWORD *)(v30 + 128) = 0;
  *(_QWORD *)((char *)v13 + v28) = v30;
  *((_BYTE *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_started) = 0;
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_invalidKeys) = _swiftEmptyArrayStorage;
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFonts) = &_swiftEmptySetSingleton;
  v31 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_fontsFailedPerWebView;
  *(_QWORD *)((char *)v13 + v31) = sub_389D0((uint64_t)_swiftEmptyArrayStorage);
  v32 = OBJC_IVAR____TtC8BookEPUB17PaginatingService_onlyPaginateLiveContent;
  v33 = (void *)objc_opt_self(NSUserDefaults);
  v34 = objc_msgSend(v33, "standardUserDefaults");
  v35 = String._bridgeToObjectiveC()();
  LOBYTE(v16) = objc_msgSend(v34, "BOOLForKey:", v35);

  *((_BYTE *)v13 + v32) = v16;
  v37 = v54;
  v36 = v55;
  v38 = (_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider);
  v39 = v56;
  *v38 = a1;
  v38[1] = v39;
  v40 = v58;
  v13[3] = v57;
  swift_unknownObjectWeakAssign(v13 + 2, v40);
  v41 = v59;
  v13[4] = v36;
  v13[5] = v41;
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_stylesheetProvider) = a9;
  sub_49F1C((uint64_t)v37, (uint64_t)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_historyProvider);
  if (a11)
  {
    swift_unknownObjectRetain(a1);
    swift_unknownObjectRetain(v36);
    swift_retain();
    v43 = a11;
    v44 = &selRef_copy;
  }
  else
  {
    swift_unknownObjectRetain(a1);
    swift_unknownObjectRetain(v36);
    swift_retain();
    v45 = objc_msgSend(v33, "standardUserDefaults");
    v46 = BookEPUBBundle();
    v47 = type metadata accessor for PaginationCacheProvider(0);
    swift_allocObject(v47, *(unsigned int *)(v47 + 48));
    v43 = sub_189448(1, v45, v46);

    a12 = &off_385D38;
    v44 = &selRef_copy;
  }
  v48 = (_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_paginationCache);
  *v48 = v43;
  v48[1] = (uint64_t)a12;
  v49 = objc_msgSend(v33, v44[390], swift_unknownObjectRetain(a11).n128_f64[0]);
  v50 = String._bridgeToObjectiveC()();
  v51 = objc_msgSend(v49, "BOOLForKey:", v50);

  *((_BYTE *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_logContentSize) = v51;
  v62 = 0;
  *(_QWORD *)((char *)v13 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity) = sub_11C63C(&v62);
  swift_release();
  sub_11CAC4();
  sub_11D8DC(v60, v61);
  sub_34488(v37);
  return v13;
}

uint64_t sub_135A28()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_135A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_123980(a1, a2, v2);
}

uint64_t sub_135A58()
{
  uint64_t v0;

  swift_release();

  sub_34488((_QWORD *)(v0 + 32));
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  swift_release();
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_135AAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (uint64_t)(v0 + 4);
  v5 = v0[9];
  v6 = v0[10];
  v8 = v0[11];
  v7 = v0[12];
  v9 = (_QWORD *)swift_task_alloc(dword_3BD404);
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_3F0C0;
  return sub_127448(v2, v3, v4, v5, v6, v8, v7);
}

double sub_135B34()
{
  uint64_t v0;

  return sub_12BF10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_382BB8, (uint64_t)&unk_3BD970);
}

uint64_t sub_135B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_135B6C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_135B74()
{
  unint64_t result;

  result = qword_3BD420;
  if (!qword_3BD420)
  {
    result = swift_getWitnessTable(&unk_2ED878, &type metadata for PaginatingServiceError);
    atomic_store(result, (unint64_t *)&qword_3BD420);
  }
  return result;
}

uint64_t sub_135BC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = v1[2];
  v9 = v1[4];
  v10 = v1[3];
  v4 = v1[10];
  v5 = v1[11];
  v6 = v1[12];
  v7 = (_QWORD *)swift_task_alloc(dword_3BD43C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_6B4A4;
  return sub_1255E4(a1, v11, v10, v9, (uint64_t)(v1 + 5), v4, v5, v6);
}

double sub_135C90@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 32, v6, 0, 0);
  v4 = *(_OWORD *)(v3 + 32);
  *a2 = v4;
  *(_QWORD *)&result = swift_unknownObjectRetain(v4).n128_u64[0];
  return result;
}

uint64_t sub_135CE8()
{
  return type metadata accessor for PaginatingService(0);
}

uint64_t type metadata accessor for PaginatingService(uint64_t a1)
{
  uint64_t result;

  result = qword_3BD488;
  if (!qword_3BD488)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PaginatingService);
  return result;
}

void sub_135D2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[24];

  v4[0] = &unk_2ED788;
  v4[1] = &unk_2ED7A0;
  sub_B2A7C();
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    v4[3] = &unk_2ED7B8;
    v4[4] = &unk_2ED7D0;
    v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[7] = &unk_2ED7D0;
    v4[8] = &unk_2ED7D0;
    v4[9] = &unk_2ED7E8;
    v4[10] = &unk_2ED7D0;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = &unk_2ED7A0;
    v4[14] = &unk_2ED7A0;
    v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[16] = &unk_2ED800;
    v4[17] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[18] = &unk_2ED818;
    v4[19] = &unk_2ED818;
    v4[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[21] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[23] = &unk_2ED818;
    swift_updateClassMetadata2(a1, 256, 24, v4, a1 + 80);
  }
}

uint64_t method lookup function for PaginatingService(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PaginatingService);
}

uint64_t dispatch thunk of PaginatingService.isPaginationComplete.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of PaginatingService.isPaginationComplete.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of PaginatingService.$isPaginationComplete.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of PaginatingService.$isPaginationComplete.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of PaginatingService.$isPaginationComplete.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of PaginatingService.paginationComplete.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ReadingSettingsManager.textZoomFactorPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ContentLayoutProvider.chromeGutterWidth.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of PaginatingService.__allocating_init(bookProvider:annotationProviderService:contentHostEnvironmentProvider:contentLayout:stylesheetProvider:historyProvider:paginationCache:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 728))();
}

uint64_t type metadata accessor for PaginatingService.Subscriptions()
{
  return objc_opt_self(_TtCC8BookEPUB17PaginatingServiceP33_8640756CADBAB04BDD73619B01143EA713Subscriptions);
}

uint64_t sub_135ECC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 0xFE) == 2)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t destroy for PaginatingServiceError(uint64_t a1)
{
  return sub_135EF4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_135EF4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 0xFE) == 2)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t _s8BookEPUB22PaginatingServiceErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_135ECC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for PaginatingServiceError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_135ECC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_135EF4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PaginatingServiceError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_135EF4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaginatingServiceError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaginatingServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_136078(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PaginatingServiceError()
{
  return &type metadata for PaginatingServiceError;
}

double sub_136090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t KeyPath;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t (**v29)(_QWORD, _QWORD);
  uint64_t v30;
  _QWORD *v31;
  double result;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v14 = swift_allocObject(&unk_382A50, 49);
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  *(_QWORD *)(v14 + 32) = a5;
  *(_QWORD *)(v14 + 40) = a6;
  *(_BYTE *)(v14 + 48) = a7;
  v15 = *(void **)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
  if (!v15)
  {
    swift_retain();
    sub_3E938(a4, a5, a6, a7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  v38 = v14;
  v16 = a1;
  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  swift_getKeyPath(&unk_2ED608);
  swift_retain();
  sub_3E938(a4, a5, a6, a7);
  v18 = v15;
  static Published.subscript.getter(&v45, a2, KeyPath);
  swift_release();
  v19 = v16;
  swift_release();
  if ((v45 & 1) == 0)
    goto LABEL_11;
  v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 8))(&v41, ObjectType, v20);
  v22 = v43;
  v23 = v44;
  sub_472D0(&v41, v43);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v23 + 336))(&v39, v16, v22, v23);
  if (!v40)
  {
    sub_52128((uint64_t)&v39, &qword_3BD428);
    sub_34488(&v41);
LABEL_11:
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_555F0(v33, (uint64_t)qword_3BD350);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v37 = 134217984;
      v45 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v37 + 4);
      _os_log_impl(&dword_0, v35, v36, "Highlight not added. Pagination not complete or document missing at ordinal: %ld", v37, 0xCu);
      swift_slowDealloc(v37, -1, -1);
    }

    goto LABEL_16;
  }
  sub_3F1CC(&v39, (uint64_t)&v45);
  sub_34488(&v41);
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_555F0(v24, (uint64_t)qword_3BD350);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v28 = 134217984;
    v41 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v28 + 4);
    _os_log_impl(&dword_0, v26, v27, "Highlight Added. Attempting repagination for document ordinal:%ld.", v28, 0xCu);
    swift_slowDealloc(v28, -1, -1);
  }

  swift_beginAccess(a2 + 32, &v41, 0, 0);
  v30 = *(_QWORD *)(a2 + 32);
  v29 = *(uint64_t (***)(_QWORD, _QWORD))(a2 + 40);
  v31 = (_QWORD *)swift_allocObject(&unk_382A78, 40);
  v31[2] = v16;
  v31[3] = sub_139798;
  v31[4] = v38;
  swift_unknownObjectRetain(v30);
  swift_retain();
  sub_11E168(&v45, v18, v30, v29, 0, 0, (uint64_t)sub_1397C0, (uint64_t)v31);
  swift_release();
  swift_unknownObjectRelease(v30);

  sub_34488(&v45);
LABEL_16:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1364BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t KeyPath;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t (**v29)(_QWORD, _QWORD);
  uint64_t v30;
  _QWORD *v31;
  double result;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v14 = swift_allocObject(&unk_382AA0, 49);
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  *(_QWORD *)(v14 + 32) = a5;
  *(_QWORD *)(v14 + 40) = a6;
  *(_BYTE *)(v14 + 48) = a7;
  v15 = *(void **)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
  if (!v15)
  {
    swift_retain();
    sub_3E938(a4, a5, a6, a7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  v38 = v14;
  v16 = a1;
  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  swift_getKeyPath(&unk_2ED608);
  swift_retain();
  sub_3E938(a4, a5, a6, a7);
  v18 = v15;
  static Published.subscript.getter(&v45, a2, KeyPath);
  swift_release();
  v19 = v16;
  swift_release();
  if ((v45 & 1) == 0)
    goto LABEL_11;
  v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 8))(&v41, ObjectType, v20);
  v22 = v43;
  v23 = v44;
  sub_472D0(&v41, v43);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v23 + 336))(&v39, v16, v22, v23);
  if (!v40)
  {
    sub_52128((uint64_t)&v39, &qword_3BD428);
    sub_34488(&v41);
LABEL_11:
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_555F0(v33, (uint64_t)qword_3BD350);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v37 = 134217984;
      v45 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v37 + 4);
      _os_log_impl(&dword_0, v35, v36, "Highlight not added. Pagination not complete or document missing at ordinal: %ld", v37, 0xCu);
      swift_slowDealloc(v37, -1, -1);
    }

    goto LABEL_16;
  }
  sub_3F1CC(&v39, (uint64_t)&v45);
  sub_34488(&v41);
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_555F0(v24, (uint64_t)qword_3BD350);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v28 = 134217984;
    v41 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v28 + 4);
    _os_log_impl(&dword_0, v26, v27, "Highlight Added. Attempting repagination for document ordinal:%ld.", v28, 0xCu);
    swift_slowDealloc(v28, -1, -1);
  }

  swift_beginAccess(a2 + 32, &v41, 0, 0);
  v30 = *(_QWORD *)(a2 + 32);
  v29 = *(uint64_t (***)(_QWORD, _QWORD))(a2 + 40);
  v31 = (_QWORD *)swift_allocObject(&unk_382AC8, 40);
  v31[2] = v16;
  v31[3] = sub_139798;
  v31[4] = v38;
  swift_unknownObjectRetain(v30);
  swift_retain();
  sub_11E168(&v45, v18, v30, v29, 0, 0, (uint64_t)sub_139D8C, (uint64_t)v31);
  swift_release();
  swift_unknownObjectRelease(v30);

  sub_34488(&v45);
LABEL_16:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_1368E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t KeyPath;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t (**v29)(_QWORD, _QWORD);
  uint64_t v30;
  _QWORD *v31;
  double result;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v14 = swift_allocObject(&unk_382AF0, 49);
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  *(_QWORD *)(v14 + 32) = a5;
  *(_QWORD *)(v14 + 40) = a6;
  *(_BYTE *)(v14 + 48) = a7;
  v15 = *(void **)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_webView);
  if (!v15)
  {
    swift_retain();
    sub_3E938(a4, a5, a6, a7);
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  v38 = v14;
  v16 = a1;
  KeyPath = swift_getKeyPath(&unk_2ED5E0);
  swift_getKeyPath(&unk_2ED608);
  swift_retain();
  sub_3E938(a4, a5, a6, a7);
  v18 = v15;
  static Published.subscript.getter(&v45, a2, KeyPath);
  swift_release();
  v19 = v16;
  swift_release();
  if ((v45 & 1) == 0)
    goto LABEL_11;
  v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_bookProvider));
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 8))(&v41, ObjectType, v20);
  v22 = v43;
  v23 = v44;
  sub_472D0(&v41, v43);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(v23 + 336))(&v39, v16, v22, v23);
  if (!v40)
  {
    sub_52128((uint64_t)&v39, &qword_3BD428);
    sub_34488(&v41);
LABEL_11:
    if (qword_3B57A0 != -1)
      swift_once(&qword_3B57A0, sub_11B838);
    v33 = type metadata accessor for Logger(0);
    v34 = sub_555F0(v33, (uint64_t)qword_3BD350);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v37 = 134217984;
      v45 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v37 + 4);
      _os_log_impl(&dword_0, v35, v36, "Highlight not added. Pagination not complete or document missing at ordinal: %ld", v37, 0xCu);
      swift_slowDealloc(v37, -1, -1);
    }

    goto LABEL_16;
  }
  sub_3F1CC(&v39, (uint64_t)&v45);
  sub_34488(&v41);
  if (qword_3B57A0 != -1)
    swift_once(&qword_3B57A0, sub_11B838);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_555F0(v24, (uint64_t)qword_3BD350);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v28 = 134217984;
    v41 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v28 + 4);
    _os_log_impl(&dword_0, v26, v27, "Highlight Added. Attempting repagination for document ordinal:%ld.", v28, 0xCu);
    swift_slowDealloc(v28, -1, -1);
  }

  swift_beginAccess(a2 + 32, &v41, 0, 0);
  v30 = *(_QWORD *)(a2 + 32);
  v29 = *(uint64_t (***)(_QWORD, _QWORD))(a2 + 40);
  v31 = (_QWORD *)swift_allocObject(&unk_382B18, 40);
  v31[2] = v16;
  v31[3] = sub_139798;
  v31[4] = v38;
  swift_unknownObjectRetain(v30);
  swift_retain();
  sub_11E168(&v45, v18, v30, v29, 0, 0, (uint64_t)sub_139D8C, (uint64_t)v31);
  swift_release();
  swift_unknownObjectRelease(v30);

  sub_34488(&v45);
LABEL_16:
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_136D14(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = *a1;
  swift_bridgeObjectRetain(*a1);
  v10 = sub_1352EC(v9, a2, a3);
  v12 = v11;
  v13 = v4;
  swift_bridgeObjectRelease(v8);
  if (v4)
    return v10;
  if ((v12 & 1) == 0)
  {
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_64;
    v12 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
LABEL_65:
      if (v12 < 0)
        v33 = v12;
      else
        v33 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v12);
      if (v14 != v34)
        goto LABEL_6;
    }
    else if (v14 != *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8)))
    {
LABEL_6:
      v14 = v10 + 5;
      v37 = v13;
      while (1)
      {
        v15 = v14 - 4;
        v16 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, v16);
        }
        else
        {
          if ((v15 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
          if (v15 >= *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8)))
            goto LABEL_55;
          v12 = *(_QWORD *)(v16 + 8 * v14);
          swift_retain();
        }
        v17 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v17 == a2 && v18 == a3)
        {
          swift_release();
          goto LABEL_39;
        }
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, a2, a3, 0);
        swift_release();
        if ((v20 & 1) != 0)
          goto LABEL_39;
        if (v15 != v10)
          break;
LABEL_35:
        if (__OFADD__(v10++, 1))
          goto LABEL_57;
LABEL_39:
        v28 = v14 - 3;
        if (__OFADD__(v15, 1))
          goto LABEL_56;
        v12 = *a1;
        if ((unint64_t)*a1 >> 62)
        {
          if (v12 < 0)
            v30 = *a1;
          else
            v30 = v12 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*a1);
          v29 = _CocoaArrayWrapper.endIndex.getter(v30);
          swift_bridgeObjectRelease(v12);
        }
        else
        {
          v29 = *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFF8));
        }
        ++v14;
        if (v28 == v29)
          return v10;
      }
      v13 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, *a1);
        v13 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_60;
          if (v15 >= *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
            goto LABEL_61;
          v22 = *(_QWORD *)(v13 + 8 * v14);
          swift_retain();
          goto LABEL_24;
        }
      }
      else
      {
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_58;
        if (v10 >= *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
          goto LABEL_59;
        v21 = *(_QWORD *)(v13 + 8 * v10 + 32);
        swift_retain();
        if ((v13 & 0xC000000000000001) == 0)
          goto LABEL_21;
      }
      v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, v13);
      v13 = *a1;
LABEL_24:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v13);
      *a1 = v13;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v13 < 0 || (v13 & 0x4000000000000000) != 0)
      {
        v13 = a4(v13);
        *a1 = v13;
      }
      *(_QWORD *)((char *)&stru_20.cmd + 8 * v10 + (v13 & 0xFFFFFFFFFFFFFF8)) = v22;
      swift_release();
      specialized Array._endMutation()(v24);
      v12 = *a1;
      v25 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
      *a1 = v12;
      if (!v25 || v12 < 0 || (v12 & 0x4000000000000000) != 0)
      {
        v12 = a4(v12);
        *a1 = v12;
      }
      v13 = v37;
      if ((v15 & 0x8000000000000000) != 0)
        goto LABEL_62;
      if (v15 >= *(_QWORD *)((char *)&dword_10 + (v12 & 0xFFFFFFFFFFFFFF8)))
        goto LABEL_63;
      *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * v14) = v21;
      swift_release();
      specialized Array._endMutation()(v26);
      goto LABEL_35;
    }
    return v10;
  }
  v31 = *a1;
  if (!((unint64_t)v31 >> 62))
    return *(_QWORD *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFF8));
  if (v31 < 0)
    v35 = v31;
  else
    v35 = v31 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v31);
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v31);
  return v36;
}

double sub_13707C(uint64_t a1)
{
  uint64_t v1;

  return sub_11DFDC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_137084@<X0>(BOOL *a1@<X8>)
{
  return sub_137098(a1);
}

uint64_t sub_137098@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)(char *);
  uint64_t result;
  char v5;

  v3 = *(uint64_t (**)(char *))(v1 + 16);
  if (v3)
  {
    v5 = 0;
    result = v3(&v5);
  }
  *a1 = v3 == 0;
  return result;
}

uint64_t sub_1370F0()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();

  sub_34488((_QWORD *)(v0 + 48));
  swift_release();

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 104));
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_13715C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v2 = v0[3];
  v10 = v0[2];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[11];
  v6 = v0[12];
  v7 = v0[13];
  v8 = (_QWORD *)swift_task_alloc(dword_3BD8DC);
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_6B4A4;
  return sub_12AA8C(v10, v2, v3, v4, (uint64_t)(v0 + 6), v5, v6, v7);
}

double sub_137210()
{
  uint64_t v0;

  return sub_12BF10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (uint64_t)&unk_382A00, (uint64_t)&unk_3BD8F0);
}

uint64_t sub_13723C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *(int **)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_3BD8EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_6B4A4;
  v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc(v2[1]);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_6B4A4;
  return v6();
}

uint64_t sub_1372B8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PaginationOperation.Result(a2, a1);
  return a2;
}

_QWORD *sub_1372F4(_QWORD *a1)
{
  destroy for PaginationOperation.Result(a1);
  return a1;
}

uint64_t sub_137328(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_13736C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t KeyPath;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  double *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  double *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  BOOL v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  int64_t v75;
  id v76;
  id v77;
  _QWORD *v78;
  uint64_t v79;
  double *v80;
  double v81;
  double v82;
  double v83;
  double v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  char *v98;
  uint64_t *v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  CGFloat *v114;
  uint64_t v115;
  CGFloat v116;
  CGFloat v117;
  CGFloat v118;
  CGFloat v119;
  unint64_t v120;
  int64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  _QWORD *v124;
  CGFloat v125;
  CGFloat v126;
  CGFloat v127;
  CGFloat v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  __int128 v149;
  CGFloat v150;
  CGFloat v151;
  uint64_t v152;
  CGFloat v153;
  CGFloat v154;
  CGFloat v155;
  CGFloat v156;
  CGFloat v157;
  unint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  _QWORD *v166;
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  NSObject *v175;
  os_log_type_t v176;
  BOOL v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  id v187;
  __int128 v188;
  __int128 v189;
  _QWORD *v190;
  uint64_t v191;
  unint64_t v192;
  __int128 v193;
  uint64_t v194;
  __n128 v195;
  _QWORD *v196;
  char *v197;
  __int128 v198;
  __int128 v199;
  uint64_t v200;
  uint64_t v201;
  __int128 rect1;
  _QWORD *v203;
  __int128 v204;
  __int128 v205;
  _QWORD *v206;
  char v207[32];
  CGRect v208;
  CGRect v209;
  CGRect v210;
  CGRect v211;
  CGRect v212;
  CGRect v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;

  v12 = 0;
  KeyPath = swift_getKeyPath(&unk_2ED8B8);
  swift_getKeyPath(&unk_2ED8E0);
  v200 = a4;
  swift_retain();
  v187 = a5;
  v201 = a6;
  swift_retain();
  v191 = a3;
  static Published.subscript.getter(&v203, a3, KeyPath);
  swift_release();
  v14 = swift_release();
  v15 = v203[8];
  *(_QWORD *)&v199 = v203 + 8;
  v16 = (uint64_t)v203;
  v17 = 1 << *((_BYTE *)v203 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v15;
  v192 = a1;
  v196 = (_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_bookmarkEntities);
  *(_QWORD *)&rect1 = (unint64_t)(v17 + 63) >> 6;
  v14.n128_u64[0] = 136315138;
  v195 = v14;
  v197 = (char *)&type metadata for Any + 8;
  v193 = xmmword_2E5F80;
  *(_QWORD *)&v198 = 0;
  v194 = a2;
  while (v19)
  {
    v20 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    v21 = v20 | (v12 << 6);
LABEL_25:
    v25 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * v21);
    v26 = *v25;
    v27 = v25[1];
    v28 = *(_QWORD *)(a2 + 144);
    v29 = *(_QWORD *)(v28 + 16);
    swift_bridgeObjectRetain(v27);
    if (!v29)
      goto LABEL_34;
    swift_bridgeObjectRetain(v27);
    v30 = sub_3B8A0(v26, v27);
    if ((v31 & 1) != 0)
    {
      v32 = *(double **)(*(_QWORD *)(v28 + 56) + 8 * v30);
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRelease(v27);
      if (!*((_QWORD *)v32 + 2))
      {
        v45 = v32;
        goto LABEL_33;
      }
      v33 = v32[4];
      v34 = v32[5];
      v35 = v32[6];
      v36 = v32[7];
      swift_bridgeObjectRelease(v32);
      v37 = sub_319AC(&qword_3B67E8);
      v38 = swift_allocObject(v37, 72);
      *(_OWORD *)(v38 + 16) = v193;
      sub_12DBDC(v187, v201, v38 + 32, v33, v34, v35, v36);
      v39 = type metadata accessor for BookmarkPaginationEntity(0);
      v40 = (_QWORD *)swift_allocObject(v39, 48);
      v40[2] = v26;
      v40[3] = v27;
      v40[4] = v38;
      v40[5] = &_swiftEmptySetSingleton;
      swift_beginAccess(v196, &v203, 33, 0);
      v41 = swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
      v43 = *(_QWORD *)((char *)&dword_10 + (*v196 & 0xFFFFFFFFFFFFFF8));
      v42 = *(_QWORD *)((char *)&dword_18 + (*v196 & 0xFFFFFFFFFFFFFF8));
      if (v43 >= v42 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
      v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v40);
      specialized Array._endMutation()(v44);
      swift_endAccess(&v203);
      swift_release();
    }
    else
    {
      v45 = (double *)v27;
LABEL_33:
      swift_bridgeObjectRelease(v45);
LABEL_34:
      if (qword_3B57A0 != -1)
        swift_once(&qword_3B57A0, sub_11B838);
      v46 = type metadata accessor for Logger(0);
      sub_555F0(v46, (uint64_t)qword_3BD350);
      swift_bridgeObjectRetain(v27);
      v48 = Logger.logObject.getter(v47);
      v49 = static os_log_type_t.error.getter(v48);
      if (os_log_type_enabled(v48, v49))
      {
        v50 = swift_slowAlloc(12, -1);
        v51 = swift_slowAlloc(32, -1);
        v203 = (_QWORD *)v51;
        *(_DWORD *)v50 = v195.n128_u32[0];
        swift_bridgeObjectRetain(v27);
        *(_QWORD *)(v50 + 4) = sub_33524(v26, v27, (uint64_t *)&v203);
        swift_bridgeObjectRelease_n(v27, 3);
        _os_log_impl(&dword_0, v48, v49, "Bookmark without any rects! id: %s", (uint8_t *)v50, 0xCu);
        swift_arrayDestroy(v51, 1, v197);
        swift_slowDealloc(v51, -1, -1);
        v52 = v50;
        a2 = v194;
        swift_slowDealloc(v52, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v27, 2);
      }
    }
  }
  v22 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  if (v22 >= (uint64_t)rect1)
    goto LABEL_38;
  v23 = *(_QWORD *)(v199 + 8 * v22);
  ++v12;
  if (v23)
    goto LABEL_24;
  v12 = v22 + 1;
  if (v22 + 1 >= (uint64_t)rect1)
    goto LABEL_38;
  v23 = *(_QWORD *)(v199 + 8 * v12);
  if (v23)
    goto LABEL_24;
  v12 = v22 + 2;
  if (v22 + 2 >= (uint64_t)rect1)
    goto LABEL_38;
  v23 = *(_QWORD *)(v199 + 8 * v12);
  if (v23)
    goto LABEL_24;
  v12 = v22 + 3;
  if (v22 + 3 >= (uint64_t)rect1)
    goto LABEL_38;
  v23 = *(_QWORD *)(v199 + 8 * v12);
  if (v23)
    goto LABEL_24;
  v12 = v22 + 4;
  if (v22 + 4 >= (uint64_t)rect1)
    goto LABEL_38;
  v23 = *(_QWORD *)(v199 + 8 * v12);
  if (v23)
  {
LABEL_24:
    v19 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v12 << 6);
    goto LABEL_25;
  }
  v24 = v22 + 5;
  if (v24 >= (uint64_t)rect1)
  {
LABEL_38:
    swift_release();
    v53 = swift_getKeyPath(&unk_2ED670);
    swift_getKeyPath(&unk_2ED698);
    static Published.subscript.getter(&v203, v191, v53);
    swift_release();
    swift_release();
    v54 = (uint64_t)v203;
    v55 = v203[8];
    v190 = v203 + 8;
    v56 = 1 << *((_BYTE *)v203 + 32);
    v57 = -1;
    if (v56 < 64)
      v57 = ~(-1 << v56);
    v58 = v57 & v55;
    v59 = (_QWORD *)(v192 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_highlightEntities);
    v185 = (char *)(v192 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_isVerticalDocument);
    swift_beginAccess(v192 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_isVerticalDocument, v207, 0, 0);
    v60 = 0;
    *(_QWORD *)&v193 = (unint64_t)(v56 + 63) >> 6;
    v61 = qword_3BD350;
    v186 = (char *)&type metadata for Any + 8;
    v183 = v59;
    v184 = v54;
    while (1)
    {
      while (1)
      {
        if (v58)
        {
          v62 = __clz(__rbit64(v58));
          v58 &= v58 - 1;
          v63 = v62 | (v60 << 6);
        }
        else
        {
          v64 = __OFADD__(v60++, 1);
          if (v64)
            goto LABEL_135;
          if (v60 >= (uint64_t)v193)
          {
LABEL_131:
            swift_release();
            swift_release();
            swift_release();

            return;
          }
          v65 = v190[v60];
          if (!v65)
          {
            v66 = v60 + 1;
            if (v60 + 1 >= (uint64_t)v193)
              goto LABEL_131;
            v65 = v190[v66];
            if (v65)
              goto LABEL_55;
            v66 = v60 + 2;
            if (v60 + 2 >= (uint64_t)v193)
              goto LABEL_131;
            v65 = v190[v66];
            if (v65)
              goto LABEL_55;
            v66 = v60 + 3;
            if (v60 + 3 >= (uint64_t)v193)
              goto LABEL_131;
            v65 = v190[v66];
            if (v65)
              goto LABEL_55;
            v66 = v60 + 4;
            if (v60 + 4 >= (uint64_t)v193)
              goto LABEL_131;
            v65 = v190[v66];
            if (v65)
            {
LABEL_55:
              v60 = v66;
            }
            else
            {
              v181 = v60 + 5;
              if (v60 + 5 >= (uint64_t)v193)
                goto LABEL_131;
              v65 = v190[v181];
              for (v60 += 5; !v65; ++v181)
              {
                v60 = v181 + 1;
                if (__OFADD__(v181, 1))
                  goto LABEL_142;
                if (v60 >= (uint64_t)v193)
                  goto LABEL_131;
                v65 = v190[v60];
              }
            }
          }
          v58 = (v65 - 1) & v65;
          v63 = __clz(__rbit64(v65)) + (v60 << 6);
        }
        v67 = (uint64_t *)(*(_QWORD *)(v54 + 48) + 16 * v63);
        v69 = *v67;
        v68 = v67[1];
        v70 = *(_QWORD *)(a2 + 144);
        v71 = *(_QWORD *)(v70 + 16);
        swift_bridgeObjectRetain(v68);
        if (v71)
          break;
LABEL_66:
        if (qword_3B57A0 != -1)
          swift_once(&qword_3B57A0, sub_11B838);
        v93 = type metadata accessor for Logger(0);
        sub_555F0(v93, (uint64_t)v61);
        swift_bridgeObjectRetain(v68);
        v95 = Logger.logObject.getter(v94);
        v96 = static os_log_type_t.error.getter(v95);
        if (os_log_type_enabled(v95, v96))
        {
          v97 = swift_slowAlloc(12, -1);
          v98 = (char *)v58;
          v99 = v61;
          v100 = v59;
          v101 = v54;
          v102 = a2;
          v103 = v69;
          v196 = (_QWORD *)v60;
          v197 = v98;
          v104 = v97;
          v105 = swift_slowAlloc(32, -1);
          v203 = (_QWORD *)v105;
          *(_DWORD *)v104 = v195.n128_u32[0];
          swift_bridgeObjectRetain(v68);
          v106 = v103;
          a2 = v102;
          v54 = v101;
          v59 = v100;
          v61 = v99;
          *(_QWORD *)(v104 + 4) = sub_33524(v106, v68, (uint64_t *)&v203);
          swift_bridgeObjectRelease_n(v68, 3);
          _os_log_impl(&dword_0, v95, v96, "Highlight without any rects! id: %s", (uint8_t *)v104, 0xCu);
          swift_arrayDestroy(v105, 1, v186);
          swift_slowDealloc(v105, -1, -1);
          v107 = v104;
          v60 = (uint64_t)v196;
          v58 = (unint64_t)v197;
          swift_slowDealloc(v107, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v68, 2);
        }
      }
      swift_bridgeObjectRetain(v68);
      v72 = sub_3B8A0(v69, v68);
      if ((v73 & 1) == 0)
      {
        swift_bridgeObjectRelease(v68);
        goto LABEL_66;
      }
      v191 = v69;
      v196 = (_QWORD *)v60;
      v74 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v72);
      swift_bridgeObjectRetain(v74);
      v192 = v68;
      swift_bridgeObjectRelease(v68);
      v75 = *(_QWORD *)(v74 + 16);
      v197 = (char *)v58;
      if (v75)
      {
        *(_QWORD *)&rect1 = &v182;
        v206 = _swiftEmptyArrayStorage;
        swift_retain_n(v200);
        v76 = v187;
        swift_retain_n(v201);
        v77 = v76;
        sub_F5254(0, v75, 0);
        v78 = v206;
        v79 = v74;
        v80 = (double *)(v74 + 56);
        do
        {
          v81 = *(v80 - 3);
          v82 = *(v80 - 2);
          v83 = *(v80 - 1);
          v84 = *v80;
          swift_retain();
          v85 = v77;
          v86 = v201;
          swift_retain();
          sub_12DBDC(v85, v86, (uint64_t)&v203, v81, v82, v83, v84);
          swift_release();

          swift_release();
          v87 = (uint64_t)v203;
          v88 = v204;
          v89 = v205;
          v206 = v78;
          v91 = v78[2];
          v90 = v78[3];
          if (v91 >= v90 >> 1)
          {
            v199 = v204;
            v189 = v205;
            sub_F5254(v90 > 1, v91 + 1, 1);
            v89 = v189;
            v88 = v199;
            v78 = v206;
          }
          v78[2] = v91 + 1;
          v92 = &v78[5 * v91];
          v92[4] = v87;
          *(_OWORD *)(v92 + 5) = v88;
          *(_OWORD *)(v92 + 7) = v89;
          v80 += 4;
          --v75;
        }
        while (v75);
        swift_bridgeObjectRelease(v79);
        swift_release_n(v201);

        swift_release_n(v200);
        v58 = (unint64_t)v197;
        v108 = v198;
      }
      else
      {
        swift_bridgeObjectRelease(v74);
        v78 = _swiftEmptyArrayStorage;
        v108 = v198;
      }
      v109 = *v185;
      swift_bridgeObjectRetain(v78);
      v111 = sub_6411C(v110, v109);
      swift_bridgeObjectRelease(v78);
      v203 = v111;
      v112 = v111[2];
      if (v112)
      {
        swift_bridgeObjectRetain(v111);
        v113 = 0;
        v114 = (CGFloat *)(v111 + 8);
        v115 = 21;
        while (1)
        {
          v116 = *(v114 - 3);
          v117 = *(v114 - 2);
          v118 = *(v114 - 1);
          v119 = *v114;
          v208.origin.x = v116;
          v208.origin.y = v117;
          v208.size.width = v118;
          v208.size.height = *v114;
          if (CGRectGetWidth(v208) <= 1.0)
            break;
          v209.origin.x = v116;
          v209.origin.y = v117;
          v209.size.width = v118;
          v209.size.height = v119;
          if (CGRectGetHeight(v209) <= 1.0)
            break;
          ++v113;
          v114 += 9;
          v115 += 9;
          if (v112 == v113)
          {
            swift_bridgeObjectRelease(v111);
            v113 = v112;
            goto LABEL_79;
          }
        }
        swift_bridgeObjectRelease(v111);
        v120 = v113 + 1;
        if (__OFADD__(v113, 1))
          goto LABEL_140;
        if (v120 != v112)
        {
          while (v120 < v111[2])
          {
            v124 = &v111[v115];
            v125 = *(double *)&v111[v115 - 7];
            v126 = *(double *)&v111[v115 - 6];
            v127 = *(double *)&v111[v115 - 5];
            v128 = *(double *)&v111[v115 - 4];
            v210.origin.x = v125;
            v210.origin.y = v126;
            v210.size.width = v127;
            v210.size.height = v128;
            if (CGRectGetWidth(v210) > 1.0)
            {
              v211.origin.x = v125;
              v211.origin.y = v126;
              v211.size.width = v127;
              v211.size.height = v128;
              if (CGRectGetHeight(v211) > 1.0)
              {
                if (v120 != v113)
                {
                  if (v113 < 0)
                    goto LABEL_137;
                  v129 = v111[2];
                  if (v113 >= v129)
                    goto LABEL_138;
                  if (v120 >= v129)
                    goto LABEL_139;
                  v130 = v58;
                  v131 = (uint64_t)&v111[9 * v113 + 4];
                  v132 = *(_QWORD *)v131;
                  rect1 = *(_OWORD *)(v131 + 8);
                  v133 = *(_OWORD *)(v131 + 24);
                  v198 = *(_OWORD *)(v131 + 40);
                  v199 = v133;
                  v134 = *(_OWORD *)(v131 + 56);
                  v135 = *(v124 - 8);
                  v136 = *(v124 - 7);
                  v137 = *(v124 - 6);
                  v138 = *(v124 - 5);
                  v139 = *(v124 - 4);
                  v140 = v111[v115 - 3];
                  v188 = *(_OWORD *)&v111[v115 - 2];
                  v189 = v134;
                  v141 = v111[v115];
                  if ((swift_isUniquelyReferenced_nonNull_native(v111) & 1) == 0)
                    v111 = sub_E3A3C(v111);
                  v122 = &v111[9 * v113];
                  v122[4] = v135;
                  v122[5] = v136;
                  v122[6] = v137;
                  v122[7] = v138;
                  v122[8] = v139;
                  v122[9] = v140;
                  *((_OWORD *)v122 + 5) = v188;
                  v122[12] = v141;
                  v123 = &v111[v115];
                  *(v123 - 8) = v132;
                  *(_OWORD *)(v123 - 7) = rect1;
                  *(_OWORD *)(v123 - 5) = v199;
                  *(_OWORD *)(v123 - 3) = v198;
                  *(_OWORD *)(v123 - 1) = v189;
                  v203 = v111;
                  v58 = v130;
                }
                v64 = __OFADD__(v113++, 1);
                if (v64)
                  goto LABEL_133;
              }
            }
            ++v120;
            v115 += 9;
            if (v120 == v111[2])
              goto LABEL_79;
          }
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
LABEL_79:
        v121 = v111[2];
        if (v121 < v113)
          goto LABEL_136;
      }
      else
      {
        v121 = 0;
        v113 = 0;
      }
      sub_88DB4(v113, v121);
      sub_11B7CC(&v203);
      v142 = (uint64_t)v203;
      v143 = v203[2];
      if (v143)
      {
        v144 = v203[2];
        if (v144)
        {
          *(_QWORD *)&v188 = &v182;
          *(_QWORD *)&v189 = v108;
          swift_bridgeObjectRetain(v203);
          v145 = 0;
          v146 = 1;
          v147 = _swiftEmptyArrayStorage;
          while (1)
          {
            v148 = *(_QWORD *)(v142 + v145 + 32);
            v149 = *(_OWORD *)(v142 + v145 + 40);
            v198 = *(_OWORD *)(v142 + v145 + 56);
            v199 = v149;
            v150 = *(double *)(v142 + v145 + 72);
            rect1 = *(_OWORD *)(v142 + v145 + 80);
            v151 = *(double *)(v142 + v145 + 96);
            v152 = *(_QWORD *)(v142 + 16);
            if (!v145 || v146 - 1 > v152)
              goto LABEL_101;
            *(_OWORD *)&v212.origin.y = rect1;
            v212.origin.x = v150;
            v212.size.height = *(CGFloat *)(v142 + v145 + 96);
            if (!CGRectContainsRect(v212, *(CGRect *)(v142 + v145)))
              break;
LABEL_109:
            if (v143 != v146)
            {
              v145 += 72;
              if (v144 != v146++)
                continue;
            }
            swift_bridgeObjectRelease(v142);
            v58 = (unint64_t)v197;
            v108 = v189;
            goto LABEL_115;
          }
          v152 = *(_QWORD *)(v142 + 16);
LABEL_101:
          if (v146 >= v152)
            goto LABEL_104;
          v153 = *(double *)(v142 + v145 + 144);
          v154 = *(double *)(v142 + v145 + 152);
          v155 = *(double *)(v142 + v145 + 160);
          v156 = *(double *)(v142 + v145 + 168);
          v157 = *((double *)&rect1 + 1);
          *(_QWORD *)&v213.origin.y = rect1;
          v213.origin.x = v150;
          v213.size.width = *((CGFloat *)&rect1 + 1);
          v213.size.height = v151;
          v215.origin.x = v153;
          v215.origin.y = v154;
          v215.size.width = v155;
          v215.size.height = v156;
          if (CGRectEqualToRect(v213, v215))
            goto LABEL_104;
          v214.origin.x = v150;
          *(_QWORD *)&v214.origin.y = rect1;
          v214.size.width = v157;
          v214.size.height = v151;
          v216.origin.x = v153;
          v216.origin.y = v154;
          v216.size.width = v155;
          v216.size.height = v156;
          if (!CGRectContainsRect(v214, v216))
          {
LABEL_104:
            if ((swift_isUniquelyReferenced_nonNull_native(v147) & 1) == 0)
              v147 = sub_42BB8(0, v147[2] + 1, 1, v147);
            v159 = v147[2];
            v158 = v147[3];
            if (v159 >= v158 >> 1)
              v147 = sub_42BB8((_QWORD *)(v158 > 1), v159 + 1, 1, v147);
            v147[2] = v159 + 1;
            v160 = &v147[9 * v159];
            v160[4] = v148;
            *(_OWORD *)(v160 + 5) = v199;
            *(_OWORD *)(v160 + 7) = v198;
            *((CGFloat *)v160 + 9) = v150;
            *((_OWORD *)v160 + 5) = rect1;
            *((CGFloat *)v160 + 12) = v151;
          }
          goto LABEL_109;
        }
      }
      v147 = _swiftEmptyArrayStorage;
LABEL_115:
      swift_bridgeObjectRelease(v203);
      v203 = v147;
      sub_63548();
      v162 = (uint64_t)v203;
      swift_bridgeObjectRetain(v203);
      v164 = sub_11A3AC(v163);
      *(_QWORD *)&v198 = v108;
      swift_bridgeObjectRelease(v78);
      swift_bridgeObjectRelease_n(v162, 2);
      if (v164[2])
      {
        v165 = type metadata accessor for HighlightPaginationEntity(0);
        v166 = (_QWORD *)swift_allocObject(v165, 48);
        v167 = v192;
        v166[2] = v191;
        v166[3] = v167;
        v166[4] = v164;
        v166[5] = &_swiftEmptySetSingleton;
        v59 = v183;
        swift_beginAccess(v183, &v203, 33, 0);
        v168 = swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v168);
        v170 = *(_QWORD *)((char *)&dword_10 + (*v59 & 0xFFFFFFFFFFFFFF8));
        v169 = *(_QWORD *)((char *)&dword_18 + (*v59 & 0xFFFFFFFFFFFFFF8));
        a2 = v194;
        v54 = v184;
        v61 = qword_3BD350;
        if (v170 >= v169 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v169 > 1, v170 + 1, 1);
        v171 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v170, v166);
        specialized Array._endMutation()(v171);
        swift_endAccess(&v203);
        swift_release();
        v60 = (uint64_t)v196;
      }
      else
      {
        swift_bridgeObjectRelease(v164);
        a2 = v194;
        v59 = v183;
        v54 = v184;
        v172 = v192;
        if (qword_3B57A0 != -1)
          swift_once(&qword_3B57A0, sub_11B838);
        v173 = type metadata accessor for Logger(0);
        sub_555F0(v173, (uint64_t)qword_3BD350);
        swift_bridgeObjectRetain(v172);
        v175 = Logger.logObject.getter(v174);
        v176 = static os_log_type_t.error.getter(v175);
        v177 = os_log_type_enabled(v175, v176);
        v178 = v191;
        if (v177)
        {
          v179 = swift_slowAlloc(12, -1);
          v180 = swift_slowAlloc(32, -1);
          v203 = (_QWORD *)v180;
          *(_DWORD *)v179 = v195.n128_u32[0];
          swift_bridgeObjectRetain(v172);
          *(_QWORD *)(v179 + 4) = sub_33524(v178, v172, (uint64_t *)&v203);
          swift_bridgeObjectRelease_n(v172, 3);
          _os_log_impl(&dword_0, v175, v176, "Highlight without any valid rects! id: %s", (uint8_t *)v179, 0xCu);
          swift_arrayDestroy(v180, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v180, -1, -1);
          swift_slowDealloc(v179, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v172, 2);
        }
        v60 = (uint64_t)v196;
        v61 = qword_3BD350;
      }
    }
  }
  v23 = *(_QWORD *)(v199 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= (uint64_t)rect1)
      goto LABEL_38;
    v23 = *(_QWORD *)(v199 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_24;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
}

void sub_138470(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  int64_t v70;
  unint64_t v71;
  int64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  double *v76;
  double v77;
  double v78;
  double v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  char v90;
  unint64_t v91;
  uint64_t v92;
  _BOOL8 v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  char v97;
  _QWORD *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  int64_t v113;
  uint64_t v114;
  unint64_t v115;
  int64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  double *v120;
  double v121;
  double v122;
  double v123;
  double v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  _QWORD *v133;
  char v134;
  unint64_t v135;
  uint64_t v136;
  _BOOL8 v137;
  uint64_t v138;
  char v139;
  unint64_t v140;
  char v141;
  _QWORD *v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  int64_t v153;
  uint64_t v154;
  unint64_t v155;
  int64_t v156;
  unint64_t v157;
  int64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  double *v163;
  double v164;
  double v165;
  double v166;
  double v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  _QWORD *v176;
  char v177;
  unint64_t v178;
  uint64_t v179;
  _BOOL8 v180;
  uint64_t v181;
  char v182;
  unint64_t v183;
  char v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  void (*v194)(char *, uint64_t, uint64_t);
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  void (*v199)(char *, uint64_t);
  __n128 v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  int64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  int64_t v217;
  int64_t v218;
  uint64_t v219;
  __int128 v220;
  uint64_t v221;
  __int128 v222;
  uint64_t v223;
  void *v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  uint64_t v228;
  __int128 v229;
  uint64_t v230;
  uint64_t v231;

  v223 = a6;
  v224 = a5;
  v225 = a4;
  v206 = a3;
  v216 = type metadata accessor for Date(0);
  v219 = *(_QWORD *)(v216 - 8);
  __chkstk_darwin(v216);
  v211 = (char *)&v206 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v210 = (char *)&v206 - v10;
  v11 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v11);
  v214 = (char *)&v206 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v221 = (uint64_t)&v206 - v14;
  v208 = a2;
  v15 = a2[15];
  v16 = *(_QWORD *)(v15 + 64);
  v215 = v15 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v207 = a1;
  v20 = (_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName);
  v217 = (unint64_t)(v17 + 63) >> 6;
  v218 = v15;
  swift_bridgeObjectRetain(v15);
  v21 = 0;
  v222 = xmmword_2E5F80;
  while (1)
  {
    if (v19)
    {
      v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    v26 = v21 + 1;
    if (__OFADD__(v21, 1))
      goto LABEL_144;
    if (v26 >= v217)
      break;
    v27 = *(_QWORD *)(v215 + 8 * v26);
    ++v21;
    if (!v27)
    {
      v21 = v26 + 1;
      if (v26 + 1 >= v217)
        break;
      v27 = *(_QWORD *)(v215 + 8 * v21);
      if (!v27)
      {
        v21 = v26 + 2;
        if (v26 + 2 >= v217)
          break;
        v27 = *(_QWORD *)(v215 + 8 * v21);
        if (!v27)
        {
          v28 = v26 + 3;
          if (v28 >= v217)
            break;
          v27 = *(_QWORD *)(v215 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              v21 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_148;
              if (v21 >= v217)
                goto LABEL_33;
              v27 = *(_QWORD *)(v215 + 8 * v21);
              ++v28;
              if (v27)
                goto LABEL_21;
            }
          }
          v21 = v28;
        }
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = (uint64_t *)(*(_QWORD *)(v218 + 48) + 16 * v25);
    v30 = *v29;
    v31 = v29[1];
    v32 = (double *)(*(_QWORD *)(v218 + 56) + 32 * v25);
    v33 = *v32;
    v34 = v32[1];
    v35 = v32[2];
    v36 = v32[3];
    swift_bridgeObjectRetain(v31);
    sub_12DBDC(v224, v223, (uint64_t)&v228, v33, v34, v35, v36);
    v37 = v228;
    v220 = v229;
    v38 = v230;
    v39 = v231;
    v40 = sub_319AC(&qword_3B67E8);
    v41 = swift_allocObject(v40, 72);
    *(_OWORD *)(v41 + 16) = v222;
    *(_QWORD *)(v41 + 32) = v37;
    *(_OWORD *)(v41 + 40) = v220;
    *(_QWORD *)(v41 + 56) = v38;
    *(_QWORD *)(v41 + 64) = v39;
    v42 = type metadata accessor for AnchorPaginationEntity(0);
    v43 = (_QWORD *)swift_allocObject(v42, 48);
    v43[2] = v30;
    v43[3] = v31;
    v43[4] = v41;
    v43[5] = &_swiftEmptySetSingleton;
    swift_beginAccess(v20, &v228, 33, 0);
    swift_bridgeObjectRetain(v31);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v20);
    v227 = (_QWORD *)*v20;
    v45 = v227;
    *v20 = 0x8000000000000000;
    v47 = sub_3B8A0(v30, v31);
    v48 = v45[2];
    v49 = (v46 & 1) == 0;
    v50 = v48 + v49;
    if (__OFADD__(v48, v49))
    {
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
    v51 = v46;
    if (v45[3] >= v50)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v54 = v227;
        if ((v46 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_F3264();
        v54 = v227;
        if ((v51 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_EF5C0(v50, isUniquelyReferenced_nonNull_native);
      v52 = sub_3B8A0(v30, v31);
      if ((v51 & 1) != (v53 & 1))
        goto LABEL_153;
      v47 = v52;
      v54 = v227;
      if ((v51 & 1) != 0)
      {
LABEL_4:
        v22 = v54[7];
        swift_release();
        *(_QWORD *)(v22 + 8 * v47) = v43;
        goto LABEL_5;
      }
    }
    v54[(v47 >> 6) + 8] |= 1 << v47;
    v55 = (uint64_t *)(v54[6] + 16 * v47);
    *v55 = v30;
    v55[1] = v31;
    *(_QWORD *)(v54[7] + 8 * v47) = v43;
    v56 = v54[2];
    v57 = __OFADD__(v56, 1);
    v58 = v56 + 1;
    if (v57)
      goto LABEL_140;
    v54[2] = v58;
    swift_bridgeObjectRetain(v31);
LABEL_5:
    v23 = *v20;
    *v20 = v54;
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v23);
    swift_endAccess(&v228);
    swift_release();
  }
LABEL_33:
  swift_release();
  v59 = v208[16];
  v60 = *(_QWORD *)(v59 + 64);
  v215 = v59 + 64;
  v61 = 1 << *(_BYTE *)(v59 + 32);
  v62 = -1;
  if (v61 < 64)
    v62 = ~(-1 << v61);
  v63 = v62 & v60;
  v64 = (_QWORD *)(v207 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_mediaEntitiesByName);
  v217 = (unint64_t)(v61 + 63) >> 6;
  v218 = v59;
  swift_bridgeObjectRetain(v59);
  v65 = 0;
  while (2)
  {
    if (v63)
    {
      v68 = __clz(__rbit64(v63));
      v63 &= v63 - 1;
      v69 = v68 | (v65 << 6);
      goto LABEL_54;
    }
    v70 = v65 + 1;
    if (__OFADD__(v65, 1))
      goto LABEL_145;
    if (v70 < v217)
    {
      v71 = *(_QWORD *)(v215 + 8 * v70);
      ++v65;
      if (!v71)
      {
        v65 = v70 + 1;
        if (v70 + 1 >= v217)
          break;
        v71 = *(_QWORD *)(v215 + 8 * v65);
        if (!v71)
        {
          v65 = v70 + 2;
          if (v70 + 2 >= v217)
            break;
          v71 = *(_QWORD *)(v215 + 8 * v65);
          if (!v71)
          {
            v72 = v70 + 3;
            if (v72 >= v217)
              break;
            v71 = *(_QWORD *)(v215 + 8 * v72);
            if (!v71)
            {
              while (1)
              {
                v65 = v72 + 1;
                if (__OFADD__(v72, 1))
                  break;
                if (v65 >= v217)
                  goto LABEL_65;
                v71 = *(_QWORD *)(v215 + 8 * v65);
                ++v72;
                if (v71)
                  goto LABEL_53;
              }
LABEL_149:
              __break(1u);
              goto LABEL_150;
            }
            v65 = v72;
          }
        }
      }
LABEL_53:
      v63 = (v71 - 1) & v71;
      v69 = __clz(__rbit64(v71)) + (v65 << 6);
LABEL_54:
      v73 = (uint64_t *)(*(_QWORD *)(v218 + 48) + 16 * v69);
      v74 = *v73;
      v75 = v73[1];
      v76 = (double *)(*(_QWORD *)(v218 + 56) + 32 * v69);
      v77 = *v76;
      v78 = v76[1];
      v79 = v76[2];
      v80 = v76[3];
      swift_bridgeObjectRetain(v75);
      sub_12DBDC(v224, v223, (uint64_t)&v228, v77, v78, v79, v80);
      v81 = v228;
      v220 = v229;
      v82 = v230;
      v83 = v231;
      v84 = sub_319AC(&qword_3B67E8);
      v85 = swift_allocObject(v84, 72);
      *(_OWORD *)(v85 + 16) = v222;
      *(_QWORD *)(v85 + 32) = v81;
      *(_OWORD *)(v85 + 40) = v220;
      *(_QWORD *)(v85 + 56) = v82;
      *(_QWORD *)(v85 + 64) = v83;
      v86 = type metadata accessor for MediaElementPaginationEntity(0);
      v87 = (_QWORD *)swift_allocObject(v86, 48);
      v87[2] = v74;
      v87[3] = v75;
      v87[4] = v85;
      v87[5] = &_swiftEmptySetSingleton;
      swift_beginAccess(v64, &v228, 33, 0);
      swift_bridgeObjectRetain(v75);
      swift_retain();
      v88 = swift_isUniquelyReferenced_nonNull_native(*v64);
      v227 = (_QWORD *)*v64;
      v89 = v227;
      *v64 = 0x8000000000000000;
      v91 = sub_3B8A0(v74, v75);
      v92 = v89[2];
      v93 = (v90 & 1) == 0;
      v94 = v92 + v93;
      if (__OFADD__(v92, v93))
        goto LABEL_137;
      v95 = v90;
      if (v89[3] >= v94)
      {
        if ((v88 & 1) != 0)
        {
          v98 = v227;
          if ((v90 & 1) == 0)
            goto LABEL_61;
        }
        else
        {
          sub_F3270();
          v98 = v227;
          if ((v95 & 1) == 0)
            goto LABEL_61;
        }
      }
      else
      {
        sub_EF5CC(v94, v88);
        v96 = sub_3B8A0(v74, v75);
        if ((v95 & 1) != (v97 & 1))
          goto LABEL_153;
        v91 = v96;
        v98 = v227;
        if ((v95 & 1) == 0)
        {
LABEL_61:
          v98[(v91 >> 6) + 8] |= 1 << v91;
          v99 = (uint64_t *)(v98[6] + 16 * v91);
          *v99 = v74;
          v99[1] = v75;
          *(_QWORD *)(v98[7] + 8 * v91) = v87;
          v100 = v98[2];
          v57 = __OFADD__(v100, 1);
          v101 = v100 + 1;
          if (v57)
            goto LABEL_141;
          v98[2] = v101;
          swift_bridgeObjectRetain(v75);
          goto LABEL_37;
        }
      }
      v66 = v98[7];
      swift_release();
      *(_QWORD *)(v66 + 8 * v91) = v87;
LABEL_37:
      v67 = *v64;
      *v64 = v98;
      swift_bridgeObjectRelease(v75);
      swift_bridgeObjectRelease(v67);
      swift_endAccess(&v228);
      swift_release();
      continue;
    }
    break;
  }
LABEL_65:
  swift_release();
  v102 = v208[17];
  v103 = *(_QWORD *)(v102 + 64);
  v215 = v102 + 64;
  v104 = 1 << *(_BYTE *)(v102 + 32);
  v105 = -1;
  if (v104 < 64)
    v105 = ~(-1 << v104);
  v106 = v105 & v103;
  v107 = (_QWORD *)(v207 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_expandableEntitiesByName);
  v217 = (unint64_t)(v104 + 63) >> 6;
  v218 = v102;
  swift_bridgeObjectRetain(v102);
  v108 = 0;
  while (2)
  {
    if (v106)
    {
      v111 = __clz(__rbit64(v106));
      v106 &= v106 - 1;
      v112 = v111 | (v108 << 6);
      goto LABEL_86;
    }
    v113 = v108 + 1;
    if (__OFADD__(v108, 1))
      goto LABEL_146;
    v114 = (uint64_t)v214;
    if (v113 >= v217)
    {
LABEL_97:
      swift_release();
      v146 = v208[19];
      v147 = *(_QWORD *)(v146 + 64);
      v212 = v146 + 64;
      v148 = 1 << *(_BYTE *)(v146 + 32);
      v149 = -1;
      if (v148 < 64)
        v149 = ~(-1 << v148);
      v150 = v149 & v147;
      v151 = (_QWORD *)(v207 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_historyEntitiesByName);
      v152 = v207 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_latestModifiedHistoryDate;
      v209 = v207 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_latestModifiedHistoryDate;
      v215 = v146;
      swift_bridgeObjectRetain(v146);
      swift_beginAccess(v152, &v227, 0, 0);
      v153 = 0;
      v213 = (unint64_t)(v148 + 63) >> 6;
      v154 = v216;
      while (1)
      {
        if (v150)
        {
          v217 = (v150 - 1) & v150;
          v218 = v153;
          v155 = __clz(__rbit64(v150)) | (v153 << 6);
        }
        else
        {
          v156 = v153 + 1;
          if (__OFADD__(v153, 1))
            goto LABEL_147;
          if (v156 >= v213)
          {
LABEL_132:
            swift_release();
            v201 = v208;
            v202 = v208[22];
            v203 = (uint64_t *)(v207 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_textNodeCharacterCounts);
            swift_beginAccess(v207 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_textNodeCharacterCounts, &v228, 1, 0);
            v204 = *v203;
            *v203 = v202;
            swift_bridgeObjectRetain(v202);
            swift_bridgeObjectRelease(v204);
            v205 = v201[23];
            if (!v205)
              return;
            if (*(_QWORD *)(v206 + OBJC_IVAR____TtC8BookEPUB17PaginatingService__bookPaginationEntity))
            {
              swift_retain();
              sub_E8BA8(v205);
              swift_release();
              return;
            }
            goto LABEL_152;
          }
          v157 = *(_QWORD *)(v212 + 8 * v156);
          v158 = v153 + 1;
          if (!v157)
          {
            v158 = v153 + 2;
            if (v153 + 2 >= v213)
              goto LABEL_132;
            v157 = *(_QWORD *)(v212 + 8 * v158);
            if (!v157)
            {
              v158 = v153 + 3;
              if (v153 + 3 >= v213)
                goto LABEL_132;
              v157 = *(_QWORD *)(v212 + 8 * v158);
              if (!v157)
              {
                v159 = v153 + 4;
                if (v153 + 4 >= v213)
                  goto LABEL_132;
                v157 = *(_QWORD *)(v212 + 8 * v159);
                if (!v157)
                {
                  while (1)
                  {
                    v158 = v159 + 1;
                    if (__OFADD__(v159, 1))
                      goto LABEL_151;
                    if (v158 >= v213)
                      goto LABEL_132;
                    v157 = *(_QWORD *)(v212 + 8 * v158);
                    ++v159;
                    if (v157)
                      goto LABEL_117;
                  }
                }
                v158 = v153 + 4;
              }
            }
          }
LABEL_117:
          v217 = (v157 - 1) & v157;
          v218 = v158;
          v155 = __clz(__rbit64(v157)) + (v158 << 6);
        }
        v160 = (uint64_t *)(*(_QWORD *)(v215 + 48) + 16 * v155);
        v161 = *v160;
        v162 = v160[1];
        v163 = (double *)(*(_QWORD *)(v215 + 56) + 32 * v155);
        v164 = *v163;
        v165 = v163[1];
        v166 = v163[2];
        v167 = v163[3];
        swift_bridgeObjectRetain(v162);
        sub_12DBDC(v224, v223, (uint64_t)&v228, v164, v165, v166, v167);
        v168 = v228;
        v220 = v229;
        v169 = v230;
        v170 = v231;
        v171 = sub_319AC(&qword_3B67E8);
        v172 = swift_allocObject(v171, 72);
        *(_OWORD *)(v172 + 16) = v222;
        *(_QWORD *)(v172 + 32) = v168;
        *(_OWORD *)(v172 + 40) = v220;
        *(_QWORD *)(v172 + 56) = v169;
        *(_QWORD *)(v172 + 64) = v170;
        v173 = type metadata accessor for HistoryPaginationEntity(0);
        v174 = (_QWORD *)swift_allocObject(v173, 48);
        v174[2] = v161;
        v174[3] = v162;
        v174[4] = v172;
        v174[5] = &_swiftEmptySetSingleton;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v219 + 56))(v221, 1, 1, v154);
        swift_beginAccess(v151, &v228, 33, 0);
        swift_bridgeObjectRetain(v162);
        swift_retain();
        v175 = swift_isUniquelyReferenced_nonNull_native(*v151);
        v226 = (_QWORD *)*v151;
        v176 = v226;
        *v151 = 0x8000000000000000;
        v178 = sub_3B8A0(v161, v162);
        v179 = v176[2];
        v180 = (v177 & 1) == 0;
        v181 = v179 + v180;
        if (__OFADD__(v179, v180))
          goto LABEL_139;
        v182 = v177;
        if (v176[3] >= v181)
        {
          if ((v175 & 1) == 0)
            sub_F3258();
        }
        else
        {
          sub_EF5B4(v181, v175);
          v183 = sub_3B8A0(v161, v162);
          if ((v182 & 1) != (v184 & 1))
            goto LABEL_153;
          v178 = v183;
        }
        v154 = v216;
        v185 = v226;
        if ((v182 & 1) != 0)
        {
          v186 = v226[7];
          swift_release();
          *(_QWORD *)(v186 + 8 * v178) = v174;
        }
        else
        {
          v226[(v178 >> 6) + 8] |= 1 << v178;
          v187 = (uint64_t *)(v185[6] + 16 * v178);
          *v187 = v161;
          v187[1] = v162;
          *(_QWORD *)(v185[7] + 8 * v178) = v174;
          v188 = v185[2];
          v57 = __OFADD__(v188, 1);
          v189 = v188 + 1;
          if (v57)
            goto LABEL_143;
          v185[2] = v189;
          swift_bridgeObjectRetain(v162);
        }
        v190 = *v151;
        *v151 = v185;
        swift_bridgeObjectRelease(v162);
        swift_bridgeObjectRelease(v190);
        swift_endAccess(&v228);
        sub_3F238(v221, v114, &qword_3BFBB0);
        v191 = v219;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v219 + 48))(v114, 1, v154) == 1)
        {
          sub_52128(v114, &qword_3BFBB0);
        }
        else
        {
          v192 = v114;
          v193 = v210;
          (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v210, v192, v154);
          v194 = *(void (**)(char *, uint64_t, uint64_t))(v191 + 16);
          v195 = v211;
          v196 = v209;
          v194(v211, v209, v154);
          v197 = v191;
          v198 = static Date.> infix(_:_:)(v193, v195);
          v199 = *(void (**)(char *, uint64_t))(v197 + 8);
          v199(v195, v154);
          if ((v198 & 1) != 0)
          {
            v194(v195, (uint64_t)v193, v154);
            v200 = swift_beginAccess(v196, &v228, 33, 0);
            (*(void (**)(uint64_t, char *, uint64_t, __n128))(v197 + 40))(v196, v195, v154, v200);
            swift_endAccess(&v228);
          }
          v199(v193, v154);
          v114 = (uint64_t)v214;
        }
        v153 = v218;
        v150 = v217;
        swift_release();
        sub_52128(v221, &qword_3BFBB0);
      }
    }
    v115 = *(_QWORD *)(v215 + 8 * v113);
    ++v108;
    if (v115)
      goto LABEL_85;
    v108 = v113 + 1;
    if (v113 + 1 >= v217)
      goto LABEL_97;
    v115 = *(_QWORD *)(v215 + 8 * v108);
    if (v115)
      goto LABEL_85;
    v108 = v113 + 2;
    if (v113 + 2 >= v217)
      goto LABEL_97;
    v115 = *(_QWORD *)(v215 + 8 * v108);
    if (v115)
    {
LABEL_85:
      v106 = (v115 - 1) & v115;
      v112 = __clz(__rbit64(v115)) + (v108 << 6);
LABEL_86:
      v117 = (uint64_t *)(*(_QWORD *)(v218 + 48) + 16 * v112);
      v118 = *v117;
      v119 = v117[1];
      v120 = (double *)(*(_QWORD *)(v218 + 56) + 32 * v112);
      v121 = *v120;
      v122 = v120[1];
      v123 = v120[2];
      v124 = v120[3];
      swift_bridgeObjectRetain(v119);
      sub_12DBDC(v224, v223, (uint64_t)&v228, v121, v122, v123, v124);
      v125 = v228;
      v220 = v229;
      v126 = v230;
      v127 = v231;
      v128 = sub_319AC(&qword_3B67E8);
      v129 = swift_allocObject(v128, 72);
      *(_OWORD *)(v129 + 16) = v222;
      *(_QWORD *)(v129 + 32) = v125;
      *(_OWORD *)(v129 + 40) = v220;
      *(_QWORD *)(v129 + 56) = v126;
      *(_QWORD *)(v129 + 64) = v127;
      v130 = type metadata accessor for ExpandableContentPaginationEntity(0);
      v131 = (_QWORD *)swift_allocObject(v130, 48);
      v131[2] = v118;
      v131[3] = v119;
      v131[4] = v129;
      v131[5] = &_swiftEmptySetSingleton;
      swift_beginAccess(v107, &v228, 33, 0);
      swift_bridgeObjectRetain(v119);
      swift_retain();
      v132 = swift_isUniquelyReferenced_nonNull_native(*v107);
      v227 = (_QWORD *)*v107;
      v133 = v227;
      *v107 = 0x8000000000000000;
      v135 = sub_3B8A0(v118, v119);
      v136 = v133[2];
      v137 = (v134 & 1) == 0;
      v138 = v136 + v137;
      if (__OFADD__(v136, v137))
        goto LABEL_138;
      v139 = v134;
      if (v133[3] < v138)
      {
        sub_EF5D8(v138, v132);
        v140 = sub_3B8A0(v118, v119);
        if ((v139 & 1) != (v141 & 1))
          goto LABEL_153;
        v135 = v140;
        v142 = v227;
        if ((v139 & 1) == 0)
          goto LABEL_93;
LABEL_68:
        v109 = v142[7];
        swift_release();
        *(_QWORD *)(v109 + 8 * v135) = v131;
LABEL_69:
        v110 = *v107;
        *v107 = v142;
        swift_bridgeObjectRelease(v119);
        swift_bridgeObjectRelease(v110);
        swift_endAccess(&v228);
        swift_release();
        continue;
      }
      if ((v132 & 1) != 0)
      {
        v142 = v227;
        if ((v134 & 1) != 0)
          goto LABEL_68;
      }
      else
      {
        sub_F327C();
        v142 = v227;
        if ((v139 & 1) != 0)
          goto LABEL_68;
      }
LABEL_93:
      v142[(v135 >> 6) + 8] |= 1 << v135;
      v143 = (uint64_t *)(v142[6] + 16 * v135);
      *v143 = v118;
      v143[1] = v119;
      *(_QWORD *)(v142[7] + 8 * v135) = v131;
      v144 = v142[2];
      v57 = __OFADD__(v144, 1);
      v145 = v144 + 1;
      if (v57)
        goto LABEL_142;
      v142[2] = v145;
      swift_bridgeObjectRetain(v119);
      goto LABEL_69;
    }
    break;
  }
  v116 = v113 + 3;
  if (v116 >= v217)
    goto LABEL_97;
  v115 = *(_QWORD *)(v215 + 8 * v116);
  if (v115)
  {
    v108 = v116;
    goto LABEL_85;
  }
  while (1)
  {
    v108 = v116 + 1;
    if (__OFADD__(v116, 1))
      break;
    if (v108 >= v217)
      goto LABEL_97;
    v115 = *(_QWORD *)(v215 + 8 * v108);
    ++v116;
    if (v115)
      goto LABEL_85;
  }
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  swift_release();

  swift_release();
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_1396C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_1396D0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1396E0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1396F0()
{
  unint64_t result;

  result = qword_3BD920;
  if (!qword_3BD920)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BookContentApplicationForegroundState, &type metadata for BookContentApplicationForegroundState);
    atomic_store(result, (unint64_t *)&qword_3BD920);
  }
  return result;
}

double sub_139734(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_11DAC0(a1, v1);
}

uint64_t sub_13973C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC((uint64_t *)&unk_3B8E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_139784(uint64_t a1)
{
  uint64_t v1;

  return sub_11D518(a1, v1);
}

uint64_t sub_13978C(uint64_t a1)
{
  uint64_t v1;

  return sub_11D5F0(a1, v1);
}

uint64_t sub_13979C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1397C0(uint64_t a1)
{
  uint64_t v1;

  return sub_11F5F4(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1397D0()
{
  uint64_t v0;

  swift_release();
  sub_3E974(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject(v0, 49, 7);
}

uint64_t sub_139804(uint64_t a1)
{
  uint64_t v1;

  return sub_11D834(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
}

void sub_139828(uint64_t a1)
{
  uint64_t v1;

  sub_125C20(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (***)(_QWORD, _QWORD))(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(NSObject **)(v1 + 64), *(_BYTE *)(v1 + 72));
}

unint64_t sub_139860()
{
  unint64_t result;

  result = qword_3BD950;
  if (!qword_3BD950)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchPassage, &type metadata for SearchPassage);
    atomic_store(result, (unint64_t *)&qword_3BD950);
  }
  return result;
}

_QWORD *sub_1398A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[3];
  v3 = a1[5];
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *sub_1398EC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[3];
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t sub_139934()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  sub_34488((_QWORD *)(v0 + 40));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 145, 7);
}

void sub_139988(uint64_t a1)
{
  uint64_t v1;

  sub_125D54(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD *))(v1 + 24), *(_QWORD *)(v1 + 32), (_QWORD *)(v1 + 40), *(void **)(v1 + 80), *(unsigned __int8 *)(v1 + 88), *(_QWORD *)(v1 + 96), *(uint64_t (***)(_QWORD, _QWORD))(v1 + 104), *(_QWORD *)(v1 + 112), *(uint64_t (***)(_QWORD, _QWORD))(v1 + 120), *(_BYTE *)(v1 + 128), *(NSObject **)(v1 + 136), *(_BYTE *)(v1 + 144));
}

uint64_t sub_1399E4(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
    return swift_retain(result);
  return result;
}

uint64_t sub_1399F0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

char *sub_139A1C(char *result)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v3;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  if (v2)
  {
    v3 = *result;
    return (char *)v2(&v3);
  }
  return result;
}

uint64_t sub_139A58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

_QWORD *sub_139A68(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1344B0(a1, a2, (_QWORD *)(v2 + 16));
}

uint64_t sub_139A74()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_139AA0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *(int **)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_3BD96C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_6B4A4;
  v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc(v2[1]);
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_6B4A4;
  return v6();
}

uint64_t sub_139B1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_319AC(&qword_3BD978);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_139B80(char *a1)
{
  uint64_t v2;
  char v4;

  sub_319AC(&qword_3BD978);
  v4 = *a1;
  v2 = sub_319AC(&qword_3BD978);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

void sub_139BEC()
{
  uint64_t v0;

  sub_123D3C(v0);
}

uint64_t sub_139BF4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

double sub_139C30(void *a1)
{
  uint64_t v1;

  return sub_124154(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_139C44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_139C68(void *a1, int a2)
{
  uint64_t v2;

  return sub_12EE3C(a1, a2, v2);
}

uint64_t sub_139C74()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_139C98()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_139CC4(void **a1)
{
  uint64_t v1;

  return sub_11C10C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_139CCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_139CF0()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_139CFC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release();
  sub_34488((_QWORD *)(v0 + 40));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  if (*(_QWORD *)(v0 + 128))
    swift_release();
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_139D50()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_139D7C()
{
  uint64_t v0;

  sub_12A43C(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_139D84()
{
  uint64_t v0;

  return sub_12A700(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t BookContentLayoutController.createSnapshotImage(forLocation:completion:)(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v10;
  __int16 v11;
  _BYTE v12[24];
  _BYTE v13[8];

  v4 = v3;
  swift_weakInit(v13, v4);
  swift_beginAccess(v13, v12, 0, 0);
  Strong = swift_weakLoadStrong(v13);
  if (Strong)
  {
    v8 = Strong;
    v10 = 1;
    v11 = 260;
    swift_retain(a3);
    a2(&v10);
    swift_release(a3);
    swift_release(v8);
  }
  return swift_weakDestroy(v13);
}

uint64_t dispatch thunk of BookContentRouting.contentHandleFootnoteRequest(baseURL:html:title:contentType:zoomScale:book:presentationRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 32))();
}

uint64_t dispatch thunk of BookContentRouting.contentHandleExpandContentRequest(arSource:title:baseURL:presentationRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *);
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v8 = *(_BYTE *)(a6 + 32);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))(a8 + 48);
  v10 = *(_OWORD *)(a6 + 16);
  v12[0] = *(_OWORD *)a6;
  v12[1] = v10;
  v13 = v8;
  return v9(a1, a2, a3, a4, a5, v12);
}

uint64_t dispatch thunk of BookContentRouting.contentHandleExpandContentRequest(imgSrc:title:book:presentationRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *);
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v8 = *(_BYTE *)(a6 + 32);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))(a8 + 56);
  v10 = *(_OWORD *)(a6 + 16);
  v12[0] = *(_OWORD *)a6;
  v12[1] = v10;
  v13 = v8;
  return v9(a1, a2, a3, a4, a5, v12);
}

uint64_t dispatch thunk of BookContentRouting.contentHandleExpandContentRequest(html:title:contentSize:zoomScale:baseURL:book:presentationRect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *);
  __int128 v11;
  _OWORD v13[2];
  char v14;

  v9 = *(_BYTE *)(a7 + 32);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))(a9 + 64);
  v11 = *(_OWORD *)(a7 + 16);
  v13[0] = *(_OWORD *)a7;
  v13[1] = v11;
  v14 = v9;
  return v10(a1, a2, a3, a4, a5, a6, v13);
}

uint64_t dispatch thunk of BookContentRouting.contentHandleUserRequestForFrameToLoadExternalURL(externalURL:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of LocationControlling.updateCurrentLocationTo(pageLocation:documentOffset:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t dispatch thunk of ContentLoading.peripheralAccessoryLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of BookContentLayoutProviding.pageLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of BookContentRouting.bkaxContentPerformAction(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 184);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_3F0C0;
  return v12(a1, a2, a3, a4);
}

void ReadingLoupeVisibilityState.title.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_13A000()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = BookEPUBBundle();
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

void ReadingLoupeVisibilityState.accessibilityValue.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_13A12C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = BookEPUBBundle();
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

double ReadingLoupeVisibilityState.dimmingValue.getter()
{
  char *v0;

  return dbl_2EDB10[*v0];
}

BookEPUB::ReadingLoupeVisibilityState_optional __swiftcall ReadingLoupeVisibilityState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  BookEPUB::ReadingLoupeVisibilityState_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_379878, v3);
  result.value = swift_bridgeObjectRelease(object);
  v7 = 4;
  if (v5 < 4)
    v7 = v5;
  *v4 = v7;
  return result;
}

_UNKNOWN **static ReadingLoupeVisibilityState.allCases.getter()
{
  return &off_3798F8;
}

uint64_t ReadingLoupeVisibilityState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_13A2EC + 4 * byte_2ED9A0[*v0]))(1751607656, 0xE400000000000000);
}

uint64_t sub_13A2EC()
{
  return 0x6D756964656DLL;
}

uint64_t sub_13A300()
{
  return 7827308;
}

uint64_t sub_13A310()
{
  return 0x726170736E617274;
}

void sub_13A330(char *a1)
{
  sub_3F2BC(*a1);
}

unint64_t sub_13A340()
{
  unint64_t result;

  result = qword_3BD9A0;
  if (!qword_3BD9A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ReadingLoupeVisibilityState, &type metadata for ReadingLoupeVisibilityState);
    atomic_store(result, (unint64_t *)&qword_3BD9A0);
  }
  return result;
}

void sub_13A384()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_13A3C8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6D756964656DLL, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_13A434()
{
  __asm { BR              X10 }
}

uint64_t sub_13A468(uint64_t a1)
{
  String.hash(into:)(a1, 0x6D756964656DLL, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_13A4C0(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_13A500()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6D756964656DLL, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

BookEPUB::ReadingLoupeVisibilityState_optional sub_13A56C(Swift::String *a1)
{
  return ReadingLoupeVisibilityState.init(rawValue:)(*a1);
}

uint64_t sub_13A578()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_13A5A0 + 4 * byte_2ED9B0[*v0]))();
}

void sub_13A5A0(_QWORD *a1@<X8>)
{
  *a1 = 0x6D756964656DLL;
  a1[1] = 0xE600000000000000;
}

void sub_13A5B8(_QWORD *a1@<X8>)
{
  *a1 = 7827308;
  a1[1] = 0xE300000000000000;
}

void sub_13A5CC(_QWORD *a1@<X8>)
{
  *a1 = 0x726170736E617274;
  a1[1] = 0xEB00000000746E65;
}

unint64_t sub_13A5F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3BD9A8;
  if (!qword_3BD9A8)
  {
    v1 = sub_31A38(&qword_3BD9B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3BD9A8);
  }
  return result;
}

void sub_13A640(_QWORD *a1@<X8>)
{
  *a1 = &off_379920;
}

unint64_t sub_13A654()
{
  unint64_t result;

  result = qword_3BD9B8;
  if (!qword_3BD9B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ReadingLoupeVisibilityState, &type metadata for ReadingLoupeVisibilityState);
    atomic_store(result, (unint64_t *)&qword_3BD9B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReadingLoupeVisibilityState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_13A6E4 + 4 * byte_2ED9B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_13A718 + 4 * byte_2ED9B4[v4]))();
}

uint64_t sub_13A718(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_13A720(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x13A728);
  return result;
}

uint64_t sub_13A734(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x13A73CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_13A740(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_13A748(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadingLoupeVisibilityState()
{
  return &type metadata for ReadingLoupeVisibilityState;
}

uint64_t destroy for SpreadCollection(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  swift_bridgeObjectRelease(a1[1]);
  return swift_bridgeObjectRelease(a1[4]);
}

uint64_t initializeWithCopy for SpreadCollection(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  v5 = a2[4];
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *assignWithCopy for SpreadCollection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  v8 = a2[4];
  v9 = a1[4];
  a1[4] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t assignWithTake for SpreadCollection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookContentLayoutController.PartialContent(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookContentLayoutController.PartialContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpreadCollection()
{
  return &type metadata for SpreadCollection;
}

uint64_t sub_13A960()
{
  return sub_3DCC0(&qword_3BD9C0, &qword_3BD9C8, (uint64_t)&protocol conformance descriptor for IndexingIterator<A>);
}

uint64_t sub_13A98C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  int64_t v8;
  __int128 *v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  __int128 v20;

  if (a2 < 1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = result;
  v8 = *(_QWORD *)(result + 16);
  if (v8 - 1 >= (unint64_t)a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  sub_F5070(0, v8, 0);
  v11 = (__int128 *)(v6 + 32);
  v12 = _swiftEmptyArrayStorage[2];
  v13 = 3 * v12;
  v14 = v8;
  do
  {
    v15 = *v11;
    v16 = _swiftEmptyArrayStorage[3];
    v17 = v12 + 1;
    if (v12 >= v16 >> 1)
    {
      v20 = *v11;
      sub_F5070(v16 > 1, v12 + 1, 1);
      v15 = v20;
    }
    _swiftEmptyArrayStorage[2] = v17;
    v18 = &_swiftEmptyArrayStorage[v13];
    *((_OWORD *)v18 + 2) = v15;
    *((_BYTE *)v18 + 48) = 0;
    v13 += 3;
    ++v11;
    v12 = v17;
    --v14;
  }
  while (v14);
  v19 = sub_664A4(0, 0, 1, a2 - v8);
  sub_6656C((uint64_t)v19);
  *a5 = _swiftEmptyArrayStorage;
  a5[1] = a3;
  a5[2] = a4;
  return swift_bridgeObjectRetain(a4);
}

uint64_t sub_13AAD0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  v2 = v1;
  v3 = *v1;
  v4 = v1[1];
  v5 = *((_OWORD *)v2 + 1);
  v6 = v2[4];
  v28 = v4;
  if (!*(_QWORD *)(v4 + 16))
    return (uint64_t)_swiftEmptyArrayStorage;
  v25 = v5;
  v8 = sub_3B7F8(a1);
  if ((v9 & 1) == 0)
    return (uint64_t)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 24 * v8 + 16);
  v29 = a1;
  v30 = 0;
  v27 = v3;
  result = (uint64_t)sub_13C030(&v29, v3, v25);
  if ((v13 & 1) != 0)
    return (uint64_t)_swiftEmptyArrayStorage;
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v14 = result;
  v15 = v12;
  v29 = a1;
  v30 = v10 - 1;
  result = (uint64_t)sub_13C030(&v29, v3, v25);
  if ((v17 & 1) != 0)
    return (uint64_t)_swiftEmptyArrayStorage;
  if (result < v14)
    goto LABEL_22;
  v18 = result + 1;
  if (__OFADD__(result, 1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (result == -1)
  {
    v21 = 0;
    goto LABEL_17;
  }
  v19 = v18 * v25;
  if ((unsigned __int128)(v18 * (__int128)(uint64_t)v25) >> 64 != (v18 * (uint64_t)v25) >> 63)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v20 = v25 - 1;
  if (!__OFSUB__((_QWORD)v25, 1))
  {
    v21 = v19 - v20;
    if (!__OFSUB__(v19, v20))
    {
LABEL_17:
      v26 = *(_OWORD *)(v2 + 3);
      v23 = sub_13BE64(v21, v16, v3);
      result = sub_13C18C(v3, v25);
      if ((result & 0x8000000000000000) == 0)
      {
        if ((v14 & 0x8000000000000000) == 0)
        {
          if (result >= v18)
          {
            v29 = v14;
            v30 = v15;
            v31 = v18;
            v32 = v23;
            v33 = v3;
            v34 = v4;
            v35 = v25;
            v36 = v6;
            sub_FA4F4(&v27);
            sub_FA4F4(&v28);
            sub_E45E8((uint64_t)&v26);
            sub_F4B9C(&v29);
            v22 = v24;
            sub_5B810(&v27);
            sub_5B810(&v28);
            sub_E48EC((uint64_t)&v26);
            return v22;
          }
          goto LABEL_26;
        }
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    __break(1u);
    return (uint64_t)_swiftEmptyArrayStorage;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_13AC8C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  v1 = *v0;
  v2 = (_QWORD *)sub_3D004((uint64_t)_swiftEmptyArrayStorage);
  v3 = *(_QWORD *)(v1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain(v1);
LABEL_18:
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v0[1]);
    v0[1] = (uint64_t)v2;
    return;
  }
  swift_bridgeObjectRetain_n(v1, 2);
  v22 = v1;
  v4 = (uint64_t *)(v1 + 48);
  while (1)
  {
    v7 = *(v4 - 2);
    v6 = *(v4 - 1);
    v8 = *v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v2);
    v11 = sub_3B7F8(v7);
    v12 = v2[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
      break;
    v15 = v10;
    if (v2[3] >= v14)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v10 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_F2078();
        if ((v15 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_ED55C(v14, isUniquelyReferenced_nonNull_native);
      v16 = sub_3B7F8(v7);
      if ((v15 & 1) != (v17 & 1))
        goto LABEL_21;
      v11 = v16;
      if ((v15 & 1) != 0)
      {
LABEL_3:
        v5 = (uint64_t *)(v2[7] + 24 * v11);
        *v5 = v7;
        v5[1] = v6;
        v5[2] = v8;
        goto LABEL_4;
      }
    }
    v2[(v11 >> 6) + 8] |= 1 << v11;
    *(_QWORD *)(v2[6] + 8 * v11) = v7;
    v18 = (uint64_t *)(v2[7] + 24 * v11);
    *v18 = v7;
    v18[1] = v6;
    v18[2] = v8;
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_20;
    v2[2] = v21;
LABEL_4:
    v4 += 3;
    swift_bridgeObjectRelease(0x8000000000000000);
    if (!--v3)
    {
      v1 = v22;
      swift_bridgeObjectRelease(v22);
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_13AE64(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  __int128 v31;

  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v4 = a2;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 <= a2)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v7 = v5 + 32;
  v8 = (unint64_t *)(v5 + 32 + 24 * a2);
  v9 = v8[1];
  if (!a1)
  {
    if (!a2)
    {
LABEL_26:
      v31 = *v8;
      static SpreadPaginationEntity.initial(location:columnCount:configuration:)(&v31, v3[2], v3[3], v3[4], a3);
      return;
    }
    v8 = 0;
    v14 = -(uint64_t)v9;
    if (!__OFSUB__(0, v9))
      goto LABEL_8;
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = v3[2];
  v11 = a1 * v10;
  if ((unsigned __int128)(a1 * (__int128)v10) >> 64 != (a1 * v10) >> 63)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v12 = __OFSUB__(v10, 1);
  v13 = v10 - 1;
  if (v12)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v12 = __OFSUB__(v11, v13);
  v8 = (unint64_t *)(v11 - v13);
  if (!v12)
  {
    v14 = (uint64_t)v8 - v9;
    if (!__OFSUB__(v8, v9))
    {
LABEL_8:
      v28 = v7;
      v29 = v3;
      v15 = v3[2];
      v16 = sub_42034(0, v15 & ~(v15 >> 63), 0, _swiftEmptyArrayStorage);
      v17 = v16[2];
      if ((uint64_t)v17 >= v15)
      {
LABEL_21:
        sub_13A98C((uint64_t)v16, v15, v29[3], v29[4], a3);
        swift_bridgeObjectRelease(v16);
        return;
      }
      v18 = 2 * v17;
      v19 = v28;
      while (v4 < v6)
      {
        v20 = (uint64_t *)(v19 + 24 * v4);
        v21 = *v20;
        v22 = v20[2];
        v23 = v16[3];
        v24 = v17 + 1;
        if (v17 >= v23 >> 1)
        {
          v27 = sub_42034((_QWORD *)(v23 > 1), v17 + 1, 1, v16);
          v19 = v28;
          v16 = v27;
        }
        v16[2] = v24;
        v25 = &v16[v18];
        v25[4] = v21;
        v25[5] = v14;
        v26 = (char *)(v14 + 1);
        if (__OFADD__(v14, 1))
          goto LABEL_28;
        if ((uint64_t)v26 < v22)
          ++v14;
        else
          v14 = 0;
        if ((uint64_t)v26 >= v22)
          ++v4;
        if (v24 < v15)
        {
          v18 += 2;
          ++v17;
          if ((uint64_t)v4 < (uint64_t)v6)
            continue;
        }
        goto LABEL_21;
      }
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    goto LABEL_25;
  }
LABEL_33:
  __break(1u);
}

uint64_t *sub_13B048(uint64_t *result)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *i;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;

  v2 = *result;
  v3 = *(_QWORD *)(*result + 16);
  if (!v3)
    return 0;
  v4 = 0;
  v6 = result[1];
  v5 = result[2];
  for (i = (_BYTE *)(v2 + 48); *i == 1; i += 24)
  {
    if (v3 == ++v4)
      return 0;
  }
  if (v3 == v4)
    return 0;
  if (v4 >= v3)
  {
    __break(1u);
  }
  else if ((*i & 1) == 0)
  {
    v15 = *((_OWORD *)i - 1);
    v9 = sub_13C030((uint64_t *)&v15, *v1, v1[2]);
    v8 = v9;
    if ((v11 & 1) != 0)
      return v8;
    sub_13AE64((uint64_t)v9, v10, &v15);
    v12 = v15;
    v13 = v16;
    if ((sub_658EC(v15, v2) & 1) != 0)
    {
      if (*((_QWORD *)&v12 + 1) == v6 && v13 == v5)
      {
        swift_bridgeObjectRelease(v5);
        swift_bridgeObjectRelease(v12);
        return v8;
      }
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(*((_QWORD *)&v12 + 1), v13, v6, v5, 0);
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v12);
      if ((v14 & 1) != 0)
        return v8;
    }
    else
    {
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v12);
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_13B1A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *v0;
  v11 = v0[1];
  v12 = v1;
  v10 = *(_OWORD *)(v0 + 3);
  sub_FA4F4(&v12);
  sub_FA4F4(&v11);
  sub_E45E8((uint64_t)&v10);
  v2 = sub_319AC(&qword_3BDA38);
  v3 = sub_13BF54(&qword_3BDA40, &qword_3BDA38, (void (*)(void))sub_13BCE4, (uint64_t)&protocol conformance descriptor for <> LazyMapSequence<A, B>);
  v4 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v2, v3);
  v6 = v5;
  sub_5B810(&v12);
  sub_5B810(&v11);
  sub_E48EC((uint64_t)&v10);
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v8._countAndFlagsBits = 93;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  return 91;
}

void sub_13B2BC(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;

  v3 = *a1;
  swift_bridgeObjectRetain(*a1);
  v5 = sub_E49E0(v4);
  swift_bridgeObjectRelease(v3);
  v6 = sub_319AC((uint64_t *)&unk_3B8C90);
  v7 = sub_3DCC0((unint64_t *)&qword_3B9380, (uint64_t *)&unk_3B8C90, (uint64_t)&protocol conformance descriptor for [A]);
  v8 = BidirectionalCollection<>.joined(separator:)(124, 0xE100000000000000, v6, v7);
  v10 = v9;
  swift_bridgeObjectRelease(v5);
  v11._countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v12._countAndFlagsBits = 93;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  *a2 = 91;
  a2[1] = 0xE100000000000000;
}

_QWORD *sub_13B3B4@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v5 = result[1];
  v6 = *v2;
  if (*result == 1)
    goto LABEL_8;
  v7 = v2[2];
  v8 = v4 * v7;
  if ((unsigned __int128)(v4 * (__int128)v7) >> 64 != (v4 * v7) >> 63)
    goto LABEL_11;
  v9 = __OFSUB__(v7, 1);
  v10 = v7 - 1;
  if (!v9)
  {
    v11 = v8 - v10;
    if (!__OFSUB__(v8, v10))
      goto LABEL_9;
    __break(1u);
LABEL_8:
    v11 = 0;
LABEL_9:
    result = (_QWORD *)sub_13BE64(v11, v5, v6);
    *a2 = v4;
    a2[1] = (uint64_t)result;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t *sub_13B430(uint64_t *result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v3 = result;
  v4 = *v1;
  v5 = result[1];
  if (*result == 1)
    goto LABEL_8;
  v6 = v1[2];
  v7 = v2 * v6;
  if ((unsigned __int128)(v2 * (__int128)v6) >> 64 != (v2 * v6) >> 63)
    goto LABEL_11;
  v8 = __OFSUB__(v6, 1);
  v9 = v6 - 1;
  if (!v8)
  {
    v10 = v7 - v9;
    if (!__OFSUB__(v7, v9))
      goto LABEL_9;
    __break(1u);
LABEL_8:
    v10 = 0;
LABEL_9:
    result = (uint64_t *)sub_13BE64(v10, v5, v4);
    *v3 = v2;
    v3[1] = (uint64_t)result;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_13B4AC(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  uint64_t result;

  v2 = __OFSUB__(*a2, *a1);
  result = *a2 - *a1;
  if (v2)
    __break(1u);
  return result;
}

void sub_13B4C4(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_13B4CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *v1;
  result = sub_13C18C(*v1, v1[2]);
  v5 = *(_QWORD *)(v3 + 16);
  *a1 = result;
  a1[1] = v5;
  return result;
}

uint64_t (*sub_13B508(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  sub_13AE64(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), a1);
  return sub_13B53C;
}

uint64_t sub_13B53C(_QWORD *a1)
{
  uint64_t v1;

  v1 = a1[2];
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(v1);
}

uint64_t sub_13B568@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_13B5AC(*a1, a1[1], a1[2], a1[3], a2);
}

uint64_t sub_13B5AC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v21 = *v5;
  v6 = *(_QWORD *)(v21 + 16);
  if (!v6)
  {
    v17 = 0;
    if ((result & 0x8000000000000000) == 0)
    {
LABEL_14:
      if (v17 >= a3)
      {
        v20 = v5[1];
        v19 = *(_OWORD *)(v5 + 3);
        v18 = *((_OWORD *)v5 + 1);
        *(_OWORD *)(a5 + 32) = *(_OWORD *)v5;
        *(_OWORD *)(a5 + 48) = v18;
        *(_QWORD *)(a5 + 64) = v5[4];
        *(_QWORD *)a5 = result;
        *(_QWORD *)(a5 + 8) = a2;
        *(_QWORD *)(a5 + 16) = a3;
        *(_QWORD *)(a5 + 24) = a4;
        sub_FA4F4(&v21);
        sub_FA4F4(&v20);
        return sub_E45E8((uint64_t)&v19);
      }
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  v7 = v5[2];
  v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = *(_QWORD *)(v21 + 24 * v6 + 16);
  v10 = *(_QWORD *)(v21 + 24 * v6 + 24);
  v11 = __OFADD__(v9, v10);
  v12 = v9 + v10;
  if (v11)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v11 = __OFADD__(v8, v12);
  v13 = v8 + v12;
  if (v11)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = __OFADD__(v13, v7);
  v14 = v13 + v7;
  if (v11)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v11 = __OFSUB__(v14, 1);
  v15 = v14 - 1;
  if (v11)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v7)
  {
    if (v15 == 0x8000000000000000 && v7 == -1)
      goto LABEL_26;
    v17 = v15 / v7;
    if (v17 < 0)
      goto LABEL_18;
    if ((result & 0x8000000000000000) == 0)
      goto LABEL_14;
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_13B6A4@<X0>(uint64_t a1@<X8>)
{
  return sub_13B6DC(a1);
}

uint64_t sub_13B6DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t result;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *v1;
  v2 = v20;
  v3 = *((_OWORD *)v1 + 1);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = v1[4];
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(v2 + 16);
  if (!v5)
  {
    v16 = 0;
    goto LABEL_14;
  }
  v6 = v1[2];
  v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  v9 = (_QWORD *)(v2 + 24 * v5 + 16);
  v8 = v9[1];
  v10 = *v9 + v8;
  if (__OFADD__(*v9, v8))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v11 = __OFADD__(v7, v10);
  v12 = v7 + v10;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v11 = __OFADD__(v12, v6);
  v13 = v12 + v6;
  if (v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = __OFSUB__(v13, 1);
  v14 = v13 - 1;
  if (v11)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v6)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v14 != 0x8000000000000000 || v6 != -1)
  {
    v16 = v14 / v6;
LABEL_14:
    v19 = v1[1];
    v18 = *(_OWORD *)(v1 + 3);
    *(_QWORD *)(a1 + 56) = v16;
    *(_QWORD *)(a1 + 64) = v5;
    sub_FA4F4(&v20);
    sub_FA4F4(&v19);
    return sub_E45E8((uint64_t)&v18);
  }
LABEL_21:
  __break(1u);
  return result;
}

BOOL sub_13B7B8()
{
  uint64_t v0;

  return sub_13BFB8(*(_QWORD *)v0, *(_QWORD *)(v0 + 16));
}

uint64_t *sub_13B7C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *result;
  uint64_t v4;
  char v5;
  char v6;

  result = sub_13B048(a1);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 17) = v6 & 1;
  return result;
}

uint64_t *sub_13B7F4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t *result;
  uint64_t v5;
  char v6;
  char v7;
  __int128 v8;
  uint64_t v9;

  v3 = *((_QWORD *)a1 + 2);
  v8 = *a1;
  v9 = v3;
  result = sub_13B048((uint64_t *)&v8);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 17) = v7 & 1;
  return result;
}

_QWORD *sub_13B840@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = result[1];
  v7 = *v3;
  if (!v5)
    goto LABEL_8;
  v8 = v3[2];
  v9 = v5 * v8;
  if ((unsigned __int128)(v5 * (__int128)v8) >> 64 != (v5 * v8) >> 63)
    goto LABEL_11;
  v10 = __OFSUB__(v8, 1);
  v11 = v8 - 1;
  if (!v10)
  {
    v12 = v9 - v11;
    if (!__OFSUB__(v9, v11))
      goto LABEL_9;
    __break(1u);
LABEL_8:
    v12 = 0;
LABEL_9:
    result = (_QWORD *)sub_13BE64(v12, v6, v7);
    *a3 = v5;
    a3[1] = result;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_13B8BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t result;
  uint64_t v7;
  char v8;

  result = sub_FAF88(*a1, a1[1], a2, *a3, *v4, v4[2]);
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v7;
  *(_BYTE *)(a4 + 16) = v8 & 1;
  return result;
}

uint64_t *sub_13B904(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[2];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_13B924(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[2] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_13B944(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[2] < result[2])
    __break(1u);
  return result;
}

_QWORD *sub_13B968@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *result + 1;
  if (__OFADD__(*result, 1))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v5 = result[1];
  v6 = *v2;
  if (*result == -1)
    goto LABEL_8;
  v7 = v2[2];
  v8 = v4 * v7;
  if ((unsigned __int128)(v4 * (__int128)v7) >> 64 != (v4 * v7) >> 63)
    goto LABEL_11;
  v9 = __OFSUB__(v7, 1);
  v10 = v7 - 1;
  if (!v9)
  {
    v11 = v8 - v10;
    if (!__OFSUB__(v8, v10))
      goto LABEL_9;
    __break(1u);
LABEL_8:
    v11 = 0;
LABEL_9:
    result = (_QWORD *)sub_13BE64(v11, v5, v6);
    *a2 = v4;
    a2[1] = (uint64_t)result;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t *sub_13B9E4(uint64_t *result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *result + 1;
  if (__OFADD__(*result, 1))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v3 = result;
  v4 = *v1;
  v5 = result[1];
  if (*result == -1)
    goto LABEL_8;
  v6 = v1[2];
  v7 = v2 * v6;
  if ((unsigned __int128)(v2 * (__int128)v6) >> 64 != (v2 * v6) >> 63)
    goto LABEL_11;
  v8 = __OFSUB__(v6, 1);
  v9 = v6 - 1;
  if (!v8)
  {
    v10 = v7 - v9;
    if (!__OFSUB__(v7, v9))
      goto LABEL_9;
    __break(1u);
LABEL_8:
    v10 = 0;
LABEL_9:
    result = (uint64_t *)sub_13BE64(v10, v5, v4);
    *v3 = v2;
    v3[1] = (uint64_t)result;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

__n128 sub_13BA60@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 32);
  result = *(__n128 *)v1;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_13BA78()
{
  uint64_t *v0;

  return sub_13C18C(*v0, v0[2]);
}

uint64_t sub_13BA94(__int128 *a1)
{
  uint64_t v1;
  __int16 v2;
  __int128 v4;
  uint64_t v5;

  v1 = *((_QWORD *)a1 + 2);
  v4 = *a1;
  v5 = v1;
  sub_13B048((uint64_t *)&v4);
  if ((v2 & 0x100) != 0)
    return 2;
  else
    return (v2 & 1) == 0;
}

uint64_t sub_13BAD8()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  _BYTE v6[24];
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v1 = v0[1];
  v5 = *v0;
  *(_OWORD *)v6 = v1;
  *(_QWORD *)&v6[16] = *((_QWORD *)v0 + 4);
  sub_F4408((uint64_t *)&v5);
  v3 = v2;
  v7 = v5;
  sub_5B810(&v7);
  v8 = *((_QWORD *)&v5 + 1);
  sub_5B810(&v8);
  v9 = *(_OWORD *)&v6[8];
  sub_E48EC((uint64_t)&v9);
  return v3;
}

void sub_13BB48(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  sub_5A4C8(a1, a2, a3);
}

unint64_t sub_13BB84()
{
  unint64_t result;

  result = qword_3BD9D0;
  if (!qword_3BD9D0)
  {
    result = swift_getWitnessTable(&unk_2EDB44, &type metadata for SpreadCollection);
    atomic_store(result, (unint64_t *)&qword_3BD9D0);
  }
  return result;
}

unint64_t sub_13BBCC()
{
  unint64_t result;

  result = qword_3BD9D8;
  if (!qword_3BD9D8)
  {
    result = swift_getWitnessTable(&unk_2EDD14, &type metadata for SpreadCollection.Index);
    atomic_store(result, (unint64_t *)&qword_3BD9D8);
  }
  return result;
}

uint64_t sub_13BC10()
{
  return sub_3DCC0(&qword_3BD9E0, &qword_3BD9E8, (uint64_t)&protocol conformance descriptor for DefaultIndices<A>);
}

uint64_t sub_13BC3C()
{
  return sub_3DCC0(&qword_3BD9F0, &qword_3BD9F8, (uint64_t)&protocol conformance descriptor for Slice<A>);
}

unint64_t sub_13BC6C()
{
  unint64_t result;

  result = qword_3BDA00;
  if (!qword_3BDA00)
  {
    result = swift_getWitnessTable(&unk_2EDBAC, &type metadata for SpreadCollection);
    atomic_store(result, (unint64_t *)&qword_3BDA00);
  }
  return result;
}

uint64_t sub_13BCB0()
{
  return sub_13BF54(&qword_3BDA08, &qword_3BD9E8, (void (*)(void))sub_13BCE4, (uint64_t)&protocol conformance descriptor for <> DefaultIndices<A>);
}

unint64_t sub_13BCE4()
{
  unint64_t result;

  result = qword_3BDA10;
  if (!qword_3BDA10)
  {
    result = swift_getWitnessTable(&unk_2EDC8C, &type metadata for SpreadCollection);
    atomic_store(result, (unint64_t *)&qword_3BDA10);
  }
  return result;
}

uint64_t sub_13BD28()
{
  return sub_13BF54(&qword_3BDA18, &qword_3BD9F8, (void (*)(void))sub_13BCE4, (uint64_t)&protocol conformance descriptor for <> Slice<A>);
}

unint64_t sub_13BD60()
{
  unint64_t result;

  result = qword_3BDA20;
  if (!qword_3BDA20)
  {
    result = swift_getWitnessTable(&unk_2EDD5C, &type metadata for SpreadCollection.Index);
    atomic_store(result, (unint64_t *)&qword_3BDA20);
  }
  return result;
}

BOOL sub_13BDA4(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_13BDB8(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_13BDCC(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_13BDE0(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t sub_13BDF8()
{
  return sub_13BF54(&qword_3BDA28, &qword_3BD9E8, (void (*)(void))sub_FB324, (uint64_t)&protocol conformance descriptor for <> DefaultIndices<A>);
}

uint64_t sub_13BE2C()
{
  return sub_13BF54(&qword_3BDA30, &qword_3BD9F8, (void (*)(void))sub_FB324, (uint64_t)&protocol conformance descriptor for <> Slice<A>);
}

unint64_t sub_13BE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  result = a2 - (v4 == a2);
  if (result >= v4)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v6 = a3 + 32 + 24 * result;
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(v6 + 16);
  v9 = __OFADD__(v7, v8);
  v10 = v7 + v8;
  if (v9)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v10 < v7)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v7 <= a1 && v10 > a1)
    return result;
  if (v7 > a1)
  {
    v12 = (uint64_t *)(a3 + 24 * result + 16);
    while (--result < v4)
    {
      v13 = *v12;
      v12 -= 3;
      v7 = v13;
      if (v13 <= a1)
        goto LABEL_13;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_13:
  if ((uint64_t)result >= (uint64_t)v4)
    return result;
  v14 = *(_QWORD *)(a3 + 32 + 24 * result + 16);
  v9 = __OFADD__(v7, v14);
  v15 = v7 + v14;
  if (v9)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  if (v15 <= a1)
  {
    v16 = (_QWORD *)(a3 + 24 * result + 72);
    while (v4 - 1 != result)
    {
      v17 = *(v16 - 1);
      v9 = __OFADD__(v17, *v16);
      v18 = v17 + *v16;
      if (v9)
        goto LABEL_23;
      v16 += 3;
      ++result;
      if (v18 > a1)
        return result;
    }
    return *(_QWORD *)(a3 + 16);
  }
  return result;
}

uint64_t sub_13BF54(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_31A38(a2);
    a3();
    result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_13BFB8(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return v2 == 0;
  v3 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = *(_QWORD *)(result + 24 * v2 + 16);
  v5 = *(_QWORD *)(result + 24 * v2 + 24);
  v6 = __OFADD__(v4, v5);
  v7 = v4 + v5;
  if (v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v6 = __OFADD__(v3, v7);
  v8 = v3 + v7;
  if (v6)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v6 = __OFADD__(v8, a2);
  v9 = v8 + a2;
  if (v6)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = __OFSUB__(v9, 1);
  v10 = v9 - 1;
  if (v6)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v10 != 0x8000000000000000 || a2 != -1)
    return v2 == 0;
LABEL_19:
  __break(1u);
  return result;
}

uint64_t *sub_13C030(uint64_t *result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
    return 0;
  v5 = 0;
  v7 = *result;
  v6 = result[1];
  v8 = v3 - 1;
  v9 = a2 + 32;
  while (1)
  {
    if (__OFSUB__(v8, v5))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v10 = v5 + (v8 - v5) / 2;
    if (__OFADD__(v5, (v8 - v5) / 2))
      goto LABEL_32;
    if (v10 >= v3)
      goto LABEL_33;
    v11 = *(_QWORD *)(v9 + 24 * v10);
    if (v11 >= v7)
      break;
    v5 = v10 + 1;
LABEL_4:
    if (v8 < v5)
      return 0;
  }
  if (v7 < v11)
  {
    v8 = v10 - 1;
    goto LABEL_4;
  }
  v13 = v9 + 24 * v10;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v12 = 0;
  if ((v6 & 0x8000000000000000) == 0 && v6 < v14)
  {
    v15 = *(_QWORD *)(v13 + 8);
    v16 = __OFADD__(v15, v6);
    v17 = v15 + v6;
    if (!v16)
    {
      v18 = a3 - 1;
      if (!__OFSUB__(a3, 1))
      {
        v16 = __OFADD__(v17, v18);
        v19 = v17 + v18;
        if (!v16)
        {
          if (a3)
          {
            if (v19 != 0x8000000000000000 || a3 != -1)
            {
              v12 = v19 / a3;
              if (!(v19 / a3))
                goto LABEL_29;
              v21 = v12 * a3;
              if ((unsigned __int128)(v12 * (__int128)a3) >> 64 == (v12 * a3) >> 63)
              {
                v22 = v21 - v18;
                if (!__OFSUB__(v21, v18))
                  goto LABEL_30;
                __break(1u);
LABEL_29:
                v22 = 0;
LABEL_30:
                sub_13BE64(v22, v10, a2);
                return (uint64_t *)v12;
              }
LABEL_39:
              __break(1u);
            }
            __break(1u);
            return result;
          }
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  return (uint64_t *)v12;
}

uint64_t sub_13C18C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return 0;
  v3 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = (_QWORD *)(result + 24 * v2 + 16);
  v4 = v5[1];
  v6 = *v5 + v4;
  if (__OFADD__(*v5, v4))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = __OFADD__(v3, v6);
  v8 = v3 + v6;
  if (v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = __OFADD__(v8, a2);
  v9 = v8 + a2;
  if (v7)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v7 = __OFSUB__(v9, 1);
  v10 = v9 - 1;
  if (v7)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (a2)
  {
    if (v10 != 0x8000000000000000 || a2 != -1)
      return v10 / a2;
    goto LABEL_20;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void sub_13C208(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a2 < 1)
    goto LABEL_22;
  v7 = a2;
  v10 = (_QWORD *)sub_3D004((uint64_t)_swiftEmptyArrayStorage);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
  {
    swift_bridgeObjectRetain(a1);
LABEL_19:
    *a5 = a1;
    a5[1] = v10;
    a5[2] = v7;
    a5[3] = a3;
    a5[4] = a4;
    return;
  }
  v31 = v7;
  v32 = a3;
  v33 = a4;
  swift_bridgeObjectRetain_n(a1, 2);
  v30 = a1;
  v12 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v15 = *(v12 - 2);
    v14 = *(v12 - 1);
    v16 = *v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v10);
    v19 = sub_3B7F8(v15);
    v20 = v10[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v10[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v18 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_F2078();
        if ((v23 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_ED55C(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_3B7F8(v15);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_23;
      v19 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_4:
        v13 = (uint64_t *)(v10[7] + 24 * v19);
        *v13 = v15;
        v13[1] = v14;
        v13[2] = v16;
        goto LABEL_5;
      }
    }
    v10[(v19 >> 6) + 8] |= 1 << v19;
    *(_QWORD *)(v10[6] + 8 * v19) = v15;
    v26 = (uint64_t *)(v10[7] + 24 * v19);
    *v26 = v15;
    v26[1] = v14;
    v26[2] = v16;
    v27 = v10[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_21;
    v10[2] = v29;
LABEL_5:
    v12 += 3;
    swift_bridgeObjectRelease(0x8000000000000000);
    if (!--v11)
    {
      a1 = v30;
      swift_bridgeObjectRelease(v30);
      a3 = v32;
      a4 = v33;
      v7 = v31;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

ValueMetadata *type metadata accessor for SpreadCollection.Index()
{
  return &type metadata for SpreadCollection.Index;
}

uint64_t getEnumTagSinglePayload for SpreadCollection.Document(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SpreadCollection.Document(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SpreadCollection.Document()
{
  return &type metadata for SpreadCollection.Document;
}

unint64_t sub_13C46C()
{
  unint64_t result;

  result = qword_3BDA48;
  if (!qword_3BDA48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PageTransitionCompletionState, &type metadata for PageTransitionCompletionState);
    atomic_store(result, (unint64_t *)&qword_3BDA48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PageTransitionCompletionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_13C4FC + 4 * byte_2EDDF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_13C530 + 4 * asc_2EDDF0[v4]))();
}

uint64_t sub_13C530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_13C538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x13C540);
  return result;
}

uint64_t sub_13C54C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x13C554);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_13C558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_13C560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageTransitionCompletionState()
{
  return &type metadata for PageTransitionCompletionState;
}

uint64_t PaginationLayoutConfiguration.init<A, B>(layoutProvider:bookEntity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)(_QWORD, _QWORD)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  char v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;

  sub_13C858();
  v14 = sub_1BE6C8(a1, a2, a3, a4, (uint64_t)a5, a6);
  objc_msgSend(v14, "fontSize");
  v16 = v15;
  objc_msgSend(v14, "gapBetweenPages");
  v18 = v17;
  v33 = a5[15](a3, a5);
  v32 = objc_msgSend(v14, "usePaginationLineGrid");
  v31 = objc_msgSend(v14, "isHorizontalScroll");
  v19 = a5[3](a3, a5);
  objc_msgSend(v14, "pageLength");
  v21 = v20;
  v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 128))(a4, a6) & 1;
  objc_msgSend(v14, "gapBetweenPages");
  v23 = v22;
  v24 = objc_msgSend(v14, "respectPageBreaks");
  v25 = a5[23](a3, a5);
  v27 = v26;
  swift_unknownObjectRelease(a1);

  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a2, a4);
  if (v19 <= 1)
    v29 = 1;
  else
    v29 = v19;
  *(_QWORD *)a7 = v16;
  *(_QWORD *)(a7 + 8) = v18;
  *(_QWORD *)(a7 + 16) = v33;
  *(_BYTE *)(a7 + 24) = v32;
  *(_BYTE *)(a7 + 25) = v31;
  *(_QWORD *)(a7 + 32) = v29;
  *(_QWORD *)(a7 + 40) = v21;
  *(_BYTE *)(a7 + 48) = v30;
  *(_QWORD *)(a7 + 56) = v23;
  *(_BYTE *)(a7 + 64) = v24;
  *(_QWORD *)(a7 + 72) = v25;
  *(_QWORD *)(a7 + 80) = v27;
  return result;
}

uint64_t PaginationLayoutConfiguration.webViewPaginationMode.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >= 2)
  {
    if (v1 - 2 >= 2)
    {
      v3 = *(_QWORD *)(v0 + 32);
      type metadata accessor for BookLayoutMode(0);
      v5 = v3;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v4, &v5, v4, &type metadata for UInt);
      __break(1u);
    }
    else
    {
      return 0;
    }
  }
  else if (*(_BYTE *)(v0 + 48))
  {
    return 3;
  }
  else
  {
    return 2;
  }
  return result;
}

uint64_t PaginationLayoutConfiguration.usePaginationLineGrid.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t PaginationLayoutConfiguration.isHorizontalScroll.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

double PaginationLayoutConfiguration.gapBetweenPages.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

uint64_t PaginationLayoutConfiguration.respectLineBreaks.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t PaginationLayoutConfiguration.key.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 80));
  return v1;
}

uint64_t PaginationLayoutConfiguration.init(fontSize:gutterWidth:columnCount:usePaginationLineGrid:isHorizontalScroll:layoutMode:pageLength:pageProgressDirection:gapBetweenPages:respectLineBreaks:key:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, unint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>)
{
  uint64_t v13;

  *(double *)a9 = a10;
  *(double *)(a9 + 8) = a11;
  *(_QWORD *)(a9 + 16) = result;
  *(_BYTE *)(a9 + 24) = a2;
  *(_BYTE *)(a9 + 25) = a3;
  if (a4 <= 1)
    v13 = 1;
  else
    v13 = a4;
  *(_QWORD *)(a9 + 32) = v13;
  *(double *)(a9 + 40) = a12;
  *(_BYTE *)(a9 + 48) = a5 & 1;
  *(double *)(a9 + 56) = a13;
  *(_BYTE *)(a9 + 64) = a6;
  *(_QWORD *)(a9 + 72) = a7;
  *(_QWORD *)(a9 + 80) = a8;
  return result;
}

unint64_t sub_13C858()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3BD410;
  if (!qword_3BD410)
  {
    v1 = objc_opt_self(BEWebViewFactoryPaginationOptions);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3BD410);
  }
  return result;
}

uint64_t PaginationLayoutConfiguration.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  double v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  double v7;
  double v8;
  void *v9;
  Swift::String v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  void *object;
  Swift::String v16;
  Swift::String v17;
  void *v18;
  Swift::String v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  Swift::String v31;
  void *v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  void *v41;
  Swift::String v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  Swift::String v46;
  uint64_t v47;
  Swift::String v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  Swift::String v54;
  Swift::String v55;
  uint64_t result;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];

  v1 = *(_QWORD *)v0;
  v2 = *(double *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(unsigned __int8 *)(v0 + 24);
  v5 = *(unsigned __int8 *)(v0 + 25);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(double *)(v0 + 40);
  v8 = *(double *)(v0 + 56);
  v57 = *(unsigned __int8 *)(v0 + 48);
  v58 = *(unsigned __int8 *)(v0 + 64);
  v9 = *(void **)(v0 + 80);
  v59 = *(_QWORD *)(v0 + 72);
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(270);
  v10._countAndFlagsBits = 0xD00000000000002CLL;
  v10._object = (void *)0x80000000002CC830;
  String.append(_:)(v10);
  v11.n128_u64[0] = v1;
  Double.write<A>(to:)(v61, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v11);
  v12._object = (void *)0x80000000002CC860;
  v12._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v12);
  v14._countAndFlagsBits = Double.description.getter(v13, v2);
  object = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(object);
  v16._object = (void *)0x80000000002CC880;
  v16._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v16);
  v60 = v3;
  v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v18 = v17._object;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v18);
  v19._countAndFlagsBits = 0xD00000000000001BLL;
  v19._object = (void *)0x80000000002CC8A0;
  String.append(_:)(v19);
  if (v4)
    v20 = 1702195828;
  else
    v20 = 0x65736C6166;
  if (v4)
    v21 = 0xE400000000000000;
  else
    v21 = 0xE500000000000000;
  v22 = v21;
  String.append(_:)(*(Swift::String *)&v20);
  swift_bridgeObjectRelease(v21);
  v23._countAndFlagsBits = 0xD000000000000018;
  v23._object = (void *)0x80000000002CC8C0;
  String.append(_:)(v23);
  if (v5)
    v24 = 1702195828;
  else
    v24 = 0x65736C6166;
  if (v5)
    v25 = 0xE400000000000000;
  else
    v25 = 0xE500000000000000;
  v26 = v25;
  String.append(_:)(*(Swift::String *)&v24);
  swift_bridgeObjectRelease(v25);
  v27._countAndFlagsBits = 0xD000000000000010;
  v27._object = (void *)0x80000000002CC8E0;
  String.append(_:)(v27);
  type metadata accessor for BookLayoutMode(0);
  switch(v6)
  {
    case 0:
      v29 = 0x6465767265736572;
      v30 = 0xE800000000000000;
      v31._countAndFlagsBits = 0x6465767265736572;
      v31._object = (void *)0xE800000000000000;
      String.append(_:)(v31);
      v32 = (void *)0xE800000000000000;
      goto LABEL_18;
    case 1:
      v29 = 0x6465676170;
      v30 = 0xE500000000000000;
      v35._countAndFlagsBits = 0x6465676170;
      v35._object = (void *)0xE500000000000000;
      String.append(_:)(v35);
      v32 = (void *)0xE500000000000000;
      goto LABEL_18;
    case 2:
      v29 = 0x6C61636974726576;
      v30 = 0xE800000000000000;
      v33._countAndFlagsBits = 0x6C61636974726576;
      v33._object = (void *)0xE800000000000000;
      String.append(_:)(v33);
      v32 = (void *)0xEF6C6C6F7263732DLL;
      goto LABEL_18;
    case 3:
      v30 = 0xEA00000000006C61;
      v34._countAndFlagsBits = 0x746E6F7A69726F68;
      v34._object = (void *)0xEA00000000006C61;
      String.append(_:)(v34);
      v32 = (void *)0x80000000002CC980;
      v29 = 0xD000000000000011;
LABEL_18:
      swift_bridgeObjectRelease(v30);
      v36._countAndFlagsBits = 656440352;
      v36._object = (void *)0xE400000000000000;
      String.append(_:)(v36);
      v37._countAndFlagsBits = v29;
      v37._object = v32;
      String.append(_:)(v37);
      swift_bridgeObjectRelease(v32);
      v38._object = (void *)0x80000000002CC900;
      v38._countAndFlagsBits = 0xD000000000000011;
      String.append(_:)(v38);
      v40._countAndFlagsBits = Double.description.getter(v39, v7);
      v41 = v40._object;
      String.append(_:)(v40);
      swift_bridgeObjectRelease(v41);
      v42._countAndFlagsBits = 0xD00000000000001BLL;
      v42._object = (void *)0x80000000002CC920;
      String.append(_:)(v42);
      if (v57)
        v43 = 0x4C6F547468676972;
      else
        v43 = 0x69526F547466656CLL;
      if (v57)
        v44 = 0xEB00000000746665;
      else
        v44 = 0xEB00000000746867;
      v45 = v44;
      String.append(_:)(*(Swift::String *)&v43);
      swift_bridgeObjectRelease(v44);
      v46._countAndFlagsBits = 0xD000000000000015;
      v46._object = (void *)0x80000000002CC940;
      String.append(_:)(v46);
      v48._countAndFlagsBits = Double.description.getter(v47, v8);
      v49 = v48._object;
      String.append(_:)(v48);
      swift_bridgeObjectRelease(v49);
      v50._countAndFlagsBits = 0xD000000000000017;
      v50._object = (void *)0x80000000002CC960;
      String.append(_:)(v50);
      if (v58)
        v51 = 1702195828;
      else
        v51 = 0x65736C6166;
      if (v58)
        v52 = 0xE400000000000000;
      else
        v52 = 0xE500000000000000;
      v53 = v52;
      String.append(_:)(*(Swift::String *)&v51);
      swift_bridgeObjectRelease(v52);
      v54._countAndFlagsBits = 0x79656B202020200ALL;
      v54._object = (void *)0xE90000000000003ALL;
      String.append(_:)(v54);
      swift_bridgeObjectRetain(v9);
      v55._countAndFlagsBits = v59;
      v55._object = v9;
      String.append(_:)(v55);
      swift_bridgeObjectRelease(v9);
      result = v61[0];
      break;
    default:
      v60 = v6;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v28, &v60, v28, &type metadata for UInt);
      __break(1u);
      break;
  }
  return result;
}

uint64_t destroy for PaginationLayoutConfiguration(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
}

uint64_t initializeWithCopy for PaginationLayoutConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v3 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for PaginationLayoutConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

__n128 initializeWithTake for PaginationLayoutConfiguration(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for PaginationLayoutConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v3 = *(_QWORD *)(a2 + 80);
  v4 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaginationLayoutConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaginationLayoutConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaginationLayoutConfiguration()
{
  return &type metadata for PaginationLayoutConfiguration;
}

__int128 *sub_13CFD8(__int128 *result)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  char v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[2];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[3];

  v2 = result[6];
  v3 = result[7];
  v4 = result[4];
  v62 = result[5];
  v63 = v2;
  v64[0] = v3;
  *(_OWORD *)((char *)v64 + 10) = *(__int128 *)((char *)result + 122);
  v5 = result[3];
  v59 = result[2];
  v60 = v5;
  v61 = v4;
  v6 = result[1];
  v57 = *result;
  v58 = v6;
  v7 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer;
  v8 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
  if (!v8)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = v1;
  v10 = result[7];
  v55 = result[6];
  v56[0] = v10;
  *(_OWORD *)((char *)v56 + 10) = *(__int128 *)((char *)result + 122);
  v11 = result[3];
  v51 = result[2];
  v52 = v11;
  v12 = result[5];
  v53 = result[4];
  v54 = v12;
  v13 = result[1];
  v49 = *result;
  v50 = v13;
  v14 = v8;
  sub_8D4C0((uint64_t)&v49, 0);
  v16 = v15;
  v18 = v17;
  v20 = v19;

  if ((v20 & 1) != 0)
  {
    sub_49BD8((uint64_t)&v57);
    v34 = sub_49BD8((uint64_t)&v57);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v48 = v38;
      *(_DWORD *)v37 = 136315138;
      v55 = v63;
      v56[0] = v64[0];
      *(_OWORD *)((char *)v56 + 10) = *(_OWORD *)((char *)v64 + 10);
      v51 = v59;
      v52 = v60;
      v53 = v61;
      v54 = v62;
      v49 = v57;
      v50 = v58;
      v39 = Location.description.getter();
      v41 = v40;
      *(_QWORD *)&v49 = sub_33524(v39, v40, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 8, v37 + 4);
      swift_bridgeObjectRelease(v41);
      sub_49900((uint64_t)&v57);
      sub_49900((uint64_t)&v57);
      _os_log_impl(&dword_0, v35, v36, "Failed to get #uberScrollContainer.offset(for: %s)", v37, 0xCu);
      swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

      sub_49900((uint64_t)&v57);
      sub_49900((uint64_t)&v57);
    }
    return (__int128 *)((v20 & 1) == 0);
  }
  sub_49BD8((uint64_t)&v57);
  v21 = sub_49BD8((uint64_t)&v57);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v22, v23))
  {
    v47 = v20;
    v24 = swift_slowAlloc(22, -1);
    v46 = swift_slowAlloc(64, -1);
    v48 = v46;
    *(_DWORD *)v24 = 136315394;
    v55 = v63;
    v56[0] = v64[0];
    *(_OWORD *)((char *)v56 + 10) = *(_OWORD *)((char *)v64 + 10);
    v51 = v59;
    v52 = v60;
    v53 = v61;
    v54 = v62;
    v49 = v57;
    v50 = v58;
    v25 = Location.description.getter();
    v27 = v26;
    *(_QWORD *)&v49 = sub_33524(v25, v26, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 8, v24 + 4);
    swift_bridgeObjectRelease(v27);
    sub_49900((uint64_t)&v57);
    sub_49900((uint64_t)&v57);
    *(_WORD *)(v24 + 12) = 2080;
    *(double *)&v49 = v16;
    *((double *)&v49 + 1) = v18;
    v28 = v18;
    type metadata accessor for CGPoint(0);
    v30 = String.init<A>(describing:)(&v49, v29);
    v32 = v31;
    *(_QWORD *)&v49 = sub_33524(v30, v31, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 8, v24 + 14);
    swift_bridgeObjectRelease(v32);
    _os_log_impl(&dword_0, v22, v23, "Adjusting #uberScroll scroll offsets for location: %s to offset:%s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy(v46, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    v33 = v24;
    v20 = v47;
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {
    v28 = v18;

    sub_49900((uint64_t)&v57);
    sub_49900((uint64_t)&v57);
  }
  v42 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll;
  *(_BYTE *)(v9 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) = 0;
  result = *(__int128 **)(v9 + v7);
  if (!result)
    goto LABEL_15;
  result = (__int128 *)objc_msgSend(result, "setContentOffset:", v16, v28);
  v43 = *(void **)(v9 + v7);
  if (!v43)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v44 = v43;
  sub_8E300();

  v45 = sub_164DA8();
  objc_msgSend(v45, "layoutIfNeeded");

  result = *(__int128 **)(v9 + v7);
  if (result)
  {
    objc_msgSend(result, "layoutIfNeeded");
    sub_13D47C();
    *(_BYTE *)(v9 + v42) = 1;
    return (__int128 *)((v20 & 1) == 0);
  }
LABEL_17:
  __break(1u);
  return result;
}

id sub_13D47C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id result;
  double v4;
  double v5;
  double *v6;
  void *v7;
  CGFloat v8;
  CGFloat v9;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(_OWORD *, uint64_t, uint64_t, __n128);
  __n128 v16;
  _OWORD v17[7];
  _OWORD v18[2];
  char v19[24];
  _BYTE v20[11];
  _OWORD v21[7];
  _OWORD v22[2];
  _BYTE v23[144];

  v1 = v0;
  v2 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer;
  result = *(id *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  result = objc_msgSend(result, "contentOffset");
  v6 = (double *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_uberScrollLastOffset);
  *v6 = v4;
  v6[1] = v5;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) != 1)
    return result;
  v7 = *(void **)(v1 + v2);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v8 = v4;
  v9 = v5;
  v10 = v7;
  sub_8BB8C((uint64_t)v23, v8, v9);

  sub_49AD8((uint64_t)v23, (uint64_t)v20);
  sub_49AD8((uint64_t)v20, (uint64_t)v21);
  result = (id)sub_49B20((uint64_t)v21);
  if ((_DWORD)result != 1)
  {
    v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
    swift_beginAccess(v11, v19, 0, 0);
    v13 = *v11;
    v12 = v11[1];
    ObjectType = swift_getObjectType(v13);
    v17[6] = v21[6];
    v18[0] = v22[0];
    *(_OWORD *)((char *)v18 + 10) = *(_OWORD *)((char *)v22 + 10);
    v17[2] = v21[2];
    v17[3] = v21[3];
    v17[4] = v21[4];
    v17[5] = v21[5];
    v17[0] = v21[0];
    v17[1] = v21[1];
    v15 = *(void (**)(_OWORD *, uint64_t, uint64_t, __n128))(v12 + 24);
    v16 = swift_unknownObjectRetain(v13);
    v15(v17, ObjectType, v12, v16);
    swift_unknownObjectRelease(v13);
    return (id)sub_13E5D0((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
  }
  return result;
}

void sub_13D5F0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL8 v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  int v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(_BOOL8, uint64_t, uint64_t, __n128);
  __n128 v21;
  void *v22;
  id v23;
  NSObject *oslog;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) == 1)
  {
    if (objc_msgSend(a1, "isDragging") && (objc_msgSend(a1, "isDecelerating") & 1) == 0)
    {
      v8 = a1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation];
      objc_msgSend(a1, "contentOffset");
      if (v8 == 1)
      {
        v11 = -v9;
        v12 = 0.0;
      }
      else
      {
        v11 = v10;
        objc_msgSend(a1, "contentSize");
        v14 = v13;
        objc_msgSend(a1, "bounds");
        v12 = v14 - v15;
      }
      v4 = v12 < v11;
    }
    else
    {
      v4 = 0;
    }
    v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, v25, 0, 0);
    v18 = *v16;
    v17 = v16[1];
    ObjectType = swift_getObjectType(v18);
    v20 = *(void (**)(_BOOL8, uint64_t, uint64_t, __n128))(v17 + 32);
    v21 = swift_unknownObjectRetain(v18);
    v20(v4, ObjectType, v17, v21);
    swift_unknownObjectRelease(v18);
    v22 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
    if (v22)
    {
      v23 = v22;
      sub_8E300();

      sub_13D47C();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    oslog = Logger.logObject.getter(a1);
    v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v25[0] = v7;
      *(_DWORD *)v6 = 136315138;
      v26 = sub_33524(0xD000000000000020, 0x80000000002CC9A0, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v6 + 4);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {

    }
  }
}

void sub_13D894(_BYTE *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  unint64_t v25;
  char v26;
  double v27;
  double v28;
  double *v29;
  double v30;
  double v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  double v62;
  double v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  NSObject *oslog;
  os_log_t osloga;
  os_log_t oslogb;
  __int128 v101[7];
  _OWORD v102[2];
  os_log_t v103;
  _OWORD v104[7];
  _OWORD v105[2];
  _BYTE v106[144];
  uint64_t v107;
  _BYTE v108[136];
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  _OWORD v116[2];
  _BYTE v117[24];
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _OWORD v125[3];

  v5 = v4;
  if (*(_QWORD *)(a2 + 16))
  {
    v10 = (uint64_t *)(v4 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
    swift_beginAccess(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v117, 0, 0);
    v11 = *v10;
    v12 = *(_QWORD *)(*v10 + 16);
    v13 = *(_QWORD *)(v11 + 24);
    ObjectType = swift_getObjectType(v12);
    v15 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v13 + 16);
    v16 = swift_unknownObjectRetain(v12);
    v15(&v109, ObjectType, v13, v16);
    swift_unknownObjectRelease(v12);
    v124 = v115;
    v125[0] = v116[0];
    *(_OWORD *)((char *)v125 + 10) = *(_OWORD *)((char *)v116 + 10);
    v120 = v111;
    v121 = v112;
    v122 = v113;
    v123 = v114;
    v118 = v109;
    v119 = v110;
    v17 = v109;
    *(double *)&v18 = COERCE_DOUBLE(sub_8DC34(v109, a2, *(uint64_t *)&a3, *(uint64_t *)&a4, 0));
    if ((v20 & 1) != 0)
    {
      sub_49900((uint64_t)&v118);
      v39 = swift_bridgeObjectRetain_n(a2, 2);
      v40 = Logger.logObject.getter(v39);
      v41 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v40, v41))
      {
        swift_bridgeObjectRelease_n(a2, 2);

        return;
      }
      v42 = swift_slowAlloc(22, -1);
      v43 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v109 = v43;
      *(_DWORD *)v42 = 134218242;
      v107 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v42 + 4);
      *(_WORD *)(v42 + 12) = 2080;
      type metadata accessor for CGPoint(0);
      v45 = v44;
      v46 = swift_bridgeObjectRetain(a2);
      v47 = Dictionary.description.getter(v46, &type metadata for Int, v45, &protocol witness table for Int);
      v49 = v48;
      swift_bridgeObjectRelease(a2);
      v107 = sub_33524(v47, v49, (uint64_t *)&v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v42 + 14);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v49);
      _os_log_impl(&dword_0, v40, v41, "Failed to get offset into document ordinal %ld in map %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      v50 = v42;
    }
    else
    {
      v21 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state;
      v22 = *(_QWORD *)&a1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_state];
      if (*(_QWORD *)(v22 + 16))
      {
        v23 = *(double *)&v18;
        v24 = v19;
        v25 = sub_3B7F8(v17);
        if ((v26 & 1) != 0)
        {
          v27 = v23;
          v28 = v24;
          v29 = (double *)(*(_QWORD *)(v22 + 56) + 16 * v25);
          v30 = *v29;
          v31 = v29[1];
          if ((a1[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation] & 1) != 0)
          {
            if (v23 >= 0.0)
            {
              v36 = sub_49900((uint64_t)&v118);
              v62 = v30 + v23;
              v63 = 0.0;
            }
            else
            {
              v32 = sub_49BD8((uint64_t)&v118);
              v33 = Logger.logObject.getter(v32);
              v34 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v33, v34))
              {
                v35 = swift_slowAlloc(22, -1);
                *(_DWORD *)v35 = 134218240;
                sub_49900((uint64_t)&v118);
                *(_QWORD *)&v109 = v17;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, (char *)&v109 + 8, v35 + 4);
                sub_49900((uint64_t)&v118);
                *(_WORD *)(v35 + 12) = 2048;
                *(double *)&v109 = v23;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, (char *)&v109 + 8, v35 + 14);
                swift_slowDealloc(v35, -1, -1);

              }
              else
              {
                sub_49900((uint64_t)&v118);

                v36 = sub_49900((uint64_t)&v118);
              }
              v63 = 0.0;
              v62 = v30;
            }
          }
          else if (v24 >= 0.0)
          {
            v36 = sub_49900((uint64_t)&v118);
            v63 = v31 + v24;
            v62 = 0.0;
          }
          else
          {
            v58 = sub_49BD8((uint64_t)&v118);
            v59 = Logger.logObject.getter(v58);
            v60 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v59, v60))
            {
              v61 = swift_slowAlloc(22, -1);
              *(_DWORD *)v61 = 134218240;
              sub_49900((uint64_t)&v118);
              *(_QWORD *)&v109 = v17;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, (char *)&v109 + 8, v61 + 4);
              sub_49900((uint64_t)&v118);
              *(_WORD *)(v61 + 12) = 2048;
              *(double *)&v109 = v24;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, (char *)&v109 + 8, v61 + 14);
              swift_slowDealloc(v61, -1, -1);

            }
            else
            {
              sub_49900((uint64_t)&v118);

              v36 = sub_49900((uint64_t)&v118);
            }
            v62 = 0.0;
            v63 = v31;
          }
          v64 = Logger.logObject.getter(v36);
          v65 = static os_log_type_t.info.getter();
          osloga = (os_log_t)v21;
          if (os_log_type_enabled(v64, v65))
          {
            v66 = swift_slowAlloc(32, -1);
            v67 = swift_slowAlloc(96, -1);
            *(_QWORD *)&v109 = v67;
            *(_DWORD *)v66 = 136315650;
            v68 = CGPoint.debugDescription.getter(v62, v63);
            v70 = v69;
            v107 = sub_33524(v68, v69, (uint64_t *)&v109);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v66 + 4);
            swift_bridgeObjectRelease(v70);
            *(_WORD *)(v66 + 12) = 2080;
            v71 = CGPoint.debugDescription.getter(v27, v28);
            v73 = v72;
            v107 = sub_33524(v71, v72, (uint64_t *)&v109);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v66 + 14);
            swift_bridgeObjectRelease(v73);
            *(_WORD *)(v66 + 22) = 2080;
            v74 = CGPoint.debugDescription.getter(v30, v31);
            v76 = v75;
            v107 = sub_33524(v74, v75, (uint64_t *)&v109);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, v108, v66 + 24);
            swift_bridgeObjectRelease(v76);
            _os_log_impl(&dword_0, v64, v65, "Adjusting offset to %s offsetInDocument: %s newStartOfDocument: %s", (uint8_t *)v66, 0x20u);
            swift_arrayDestroy(v67, 3, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v67, -1, -1);
            swift_slowDealloc(v66, -1, -1);
          }

          *(_BYTE *)(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) = 0;
          v78 = Logger.logObject.getter(v77);
          v79 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v78, v79))
          {
            v80 = (uint8_t *)swift_slowAlloc(12, -1);
            v81 = swift_slowAlloc(32, -1);
            v107 = v81;
            *(_DWORD *)v80 = 136315138;
            *(double *)&v109 = v62;
            *((double *)&v109 + 1) = v63;
            type metadata accessor for CGPoint(0);
            v83 = String.init<A>(describing:)(&v109, v82);
            v85 = v84;
            *(_QWORD *)&v109 = sub_33524(v83, v84, &v107);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, (char *)&v109 + 8, v80 + 4);
            swift_bridgeObjectRelease(v85);
            _os_log_impl(&dword_0, v78, v79, "uberScrollContainerDidUpdateOffsetMap #uberScroll setting offset:%s", v80, 0xCu);
            swift_arrayDestroy(v81, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v81, -1, -1);
            swift_slowDealloc(v80, -1, -1);
          }

          objc_msgSend(a1, "setContentOffset:", v62, v63);
          v86 = *(void **)(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
          if (v86)
          {
            v87 = v86;
            sub_8E300();

            v88 = v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation;
            sub_49AD8(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation, (uint64_t)&v107);
            sub_49AD8((uint64_t)&v107, (uint64_t)&v109);
            if (sub_49B20((uint64_t)&v109) != 1)
            {
              if ((*(_QWORD **)((char *)&osloga->isa + (_QWORD)a1))[2])
              {
                v89 = v109;
                sub_3B7F8(v109);
                if ((v90 & 1) != 0)
                {
                  sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_13E59C);
                  sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_13E59C);
                  sub_49AD8((uint64_t)&v107, (uint64_t)v106);
                  sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_13E59C);
                  sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_13E59C);
                  v91 = sub_49BD8((uint64_t)v106);
                  v92 = Logger.logObject.getter(v91);
                  v93 = static os_log_type_t.default.getter();
                  if (os_log_type_enabled(v92, v93))
                  {
                    v94 = swift_slowAlloc(22, -1);
                    oslogb = (os_log_t)swift_slowAlloc(32, -1);
                    v103 = oslogb;
                    *(_DWORD *)v94 = 136315394;
                    v104[6] = v115;
                    v105[0] = v116[0];
                    *(_OWORD *)((char *)v105 + 10) = *(_OWORD *)((char *)v116 + 10);
                    v104[2] = v111;
                    v104[3] = v112;
                    v104[4] = v113;
                    v104[5] = v114;
                    v104[0] = v109;
                    v104[1] = v110;
                    v95 = Location.description.getter();
                    v97 = v96;
                    *(_QWORD *)&v104[0] = sub_33524(v95, v96, (uint64_t *)&v103);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(v104, (char *)v104 + 8, v94 + 4);
                    swift_bridgeObjectRelease(v97);
                    sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
                    sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
                    *(_WORD *)(v94 + 12) = 2048;
                    sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
                    *(_QWORD *)&v104[0] = v89;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(v104, (char *)v104 + 8, v94 + 14);
                    sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
                    _os_log_impl(&dword_0, v92, v93, "Attempting to show previously failed location: %s as we now have a startOffset for %ld", (uint8_t *)v94, 0x16u);
                    swift_arrayDestroy(oslogb, 1, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(oslogb, -1, -1);
                    swift_slowDealloc(v94, -1, -1);

                  }
                  else
                  {
                    sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);

                    sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
                    sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
                    sub_49AD8((uint64_t)&v107, (uint64_t)v104);
                    sub_49900((uint64_t)v104);
                  }
                  sub_555CC((uint64_t)&v103);
                  sub_49AD8(v88, (uint64_t)v104);
                  sub_49AD8((uint64_t)&v103, v88);
                  sub_13E5D0((uint64_t)v104, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
                  v101[6] = v115;
                  v102[0] = v116[0];
                  *(_OWORD *)((char *)v102 + 10) = *(_OWORD *)((char *)v116 + 10);
                  v101[2] = v111;
                  v101[3] = v112;
                  v101[4] = v113;
                  v101[5] = v114;
                  v101[0] = v109;
                  v101[1] = v110;
                  sub_13CFD8(v101);
                  sub_13E5D0((uint64_t)&v107, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
                  sub_13D47C();
                }
              }
            }
          }
          else
          {
            __break(1u);
          }
          return;
        }
      }
      v51 = sub_49BD8((uint64_t)&v118);
      v40 = Logger.logObject.getter(v51);
      v52 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v40, v52))
      {

        sub_49900((uint64_t)&v118);
        sub_49900((uint64_t)&v118);
        return;
      }
      v53 = (uint8_t *)swift_slowAlloc(12, -1);
      v54 = swift_slowAlloc(32, -1);
      v107 = v54;
      *(_DWORD *)v53 = 136315138;
      v115 = v124;
      v116[0] = v125[0];
      *(_OWORD *)((char *)v116 + 10) = *(_OWORD *)((char *)v125 + 10);
      v111 = v120;
      v112 = v121;
      v113 = v122;
      v114 = v123;
      v109 = v118;
      v110 = v119;
      v55 = Location.description.getter();
      v57 = v56;
      *(_QWORD *)&v109 = sub_33524(v55, v56, &v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, (char *)&v109 + 8, v53 + 4);
      swift_bridgeObjectRelease(v57);
      sub_49900((uint64_t)&v118);
      sub_49900((uint64_t)&v118);
      _os_log_impl(&dword_0, v40, v52, "Failed to get newOffset for location: %s", v53, 0xCu);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      v50 = (uint64_t)v53;
    }
    swift_slowDealloc(v50, -1, -1);

    return;
  }
  oslog = Logger.logObject.getter(a1);
  v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v38 = 0;
    _os_log_impl(&dword_0, oslog, v37, "old offset map was empty -- we're likely initing. Bailing out to avoid infinite loop", v38, 2u);
    swift_slowDealloc(v38, -1, -1);
  }

}

uint64_t sub_13E59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a4 != 1)
  {
    swift_bridgeObjectRetain(a7);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_13E5D0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int16 v4;

  v4 = *(_WORD *)(a1 + 136);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), v4);
  return a1;
}

void sub_13E634(uint64_t a1, void *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  char **v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  Class isa;
  Class v13;
  id v14;
  void *v15;
  id v16;
  char **v17;
  int64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v33;

  v2 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v22 = a1;
    else
      v22 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v22);
    if (!v3)
      goto LABEL_18;
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    if (!v3)
      goto LABEL_18;
  }
  v31 = (id)objc_opt_self(NSLayoutConstraint);
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = 0;
  v29 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_ConstraintPrefix);
  v30 = v2 & 0xC000000000000001;
  v28 = *(_QWORD *)(v27 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_ConstraintPrefix + 8);
  v5 = &selRef_copy;
  do
  {
    if (v30)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
    else
      v6 = *(id *)(v2 + 8 * v4 + 32);
    v7 = v6;
    v8 = objc_msgSend(v6, "constraints");
    v9 = sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    swift_bridgeObjectRetain(v28);
    v11 = sub_1604D4(v10, v29, v28);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v28);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v31, "deactivateConstraints:", isa);

    v13 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v7, "removeConstraints:", v13, swift_bridgeObjectRelease(v11).n128_f64[0]);

    objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 1);
    v14 = objc_msgSend(v7, v5[412]);
    if (!v14)
      goto LABEL_11;
    v15 = v14;
    sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
    v16 = a2;
    v17 = v5;
    v18 = v2;
    v19 = v3;
    v20 = v15;
    LOBYTE(v15) = static NSObject.== infix(_:_:)(v20, v16);

    v3 = v19;
    v2 = v18;
    v5 = v17;

    if ((v15 & 1) == 0)
LABEL_11:
      objc_msgSend(v7, "removeFromSuperview");
    v21 = objc_msgSend(v7, v5[412]);

    if (!v21)
      objc_msgSend(a2, "addSubview:", v7);
    ++v4;

  }
  while (v3 != v4);
LABEL_18:
  swift_bridgeObjectRelease(v2);
  v23 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer;
  v24 = *(void **)(v27 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
  if (!v24)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v25 = v24;
  sub_8F388(v2);

  v26 = *(void **)(v27 + v23);
  if (v26)
  {
    v33 = v26;
    sub_8E300();

    return;
  }
LABEL_23:
  __break(1u);
}

void sub_13E94C(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  void *v14;
  uint64_t v15;
  BOOL v16;
  Swift::String v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  char v24;

  v2 = 0;
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_22:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v15 = *v13;
    v14 = (void *)v13[1];
    v16 = *v13 == 28261 && v14 == (void *)0xE200000000000000;
    if (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v14, 28261, 0xE200000000000000, 0) & 1) == 0)
    {
      swift_bridgeObjectRetain_n(v14, 2);
      v17._countAndFlagsBits = v15;
      v17._object = v14;
      BookFontTable.init(rawValue:)(v17);
      if (v24 == 26)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
          sub_F508C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        v19 = _swiftEmptyArrayStorage[2];
        v18 = _swiftEmptyArrayStorage[3];
        v20 = v19 + 1;
        if (v19 >= v18 >> 1)
        {
          v22 = _swiftEmptyArrayStorage[2];
          v23 = v19 + 1;
          sub_F508C(v18 > 1, v19 + 1, 1);
          v19 = v22;
          v20 = v23;
        }
        _swiftEmptyArrayStorage[2] = v20;
        v21 = &_swiftEmptyArrayStorage[2 * v19];
        v21[4] = v15;
        v21[5] = v14;
      }
      else
      {
        swift_bridgeObjectRelease(v14);
      }
    }
  }
  v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v10 >= v7)
    goto LABEL_34;
  v11 = *(_QWORD *)(v3 + 8 * v10);
  ++v2;
  if (v11)
    goto LABEL_21;
  v2 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_34;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 2;
  if (v10 + 2 >= v7)
    goto LABEL_34;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
    goto LABEL_21;
  v2 = v10 + 3;
  if (v10 + 3 >= v7)
    goto LABEL_34;
  v11 = *(_QWORD *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_21:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
    goto LABEL_22;
  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_34:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_34;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_36:
  __break(1u);
}

id sub_13EB8C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  char **v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  id v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  double v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  unsigned int v35;
  char v36;
  id result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];

  v2 = v1;
  v4 = &selRef_accessibilityScroll_;
  v5 = objc_msgSend(v1, "fontsByLanguage");
  if (v5)
  {
    v6 = v5;
    v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String, &type metadata for String, &protocol witness table for String);

    sub_13E94C(v7);
    v9 = v8;
    if (*(_QWORD *)(v8 + 16))
    {
      if (qword_3B58C0 != -1)
        swift_once(&qword_3B58C0, sub_1927FC);
      v10 = type metadata accessor for Logger(0);
      sub_555F0(v10, (uint64_t)qword_3CF2D8);
      swift_bridgeObjectRetain(v9);
      v12 = Logger.logObject.getter(v11);
      v13 = static os_log_type_t.error.getter(v12);
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v41[0] = v39;
        *(_DWORD *)v14 = 136446210;
        swift_bridgeObjectRetain(v9);
        v16 = Array.description.getter(v15, &type metadata for String);
        v18 = v17;
        swift_bridgeObjectRelease(v9);
        v40 = sub_33524(v16, v18, v41);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41, v14 + 4);
        swift_bridgeObjectRelease_n(v9, 2);
        swift_bridgeObjectRelease(v18);
        _os_log_impl(&dword_0, v12, v13, "Unrecognized font tables: %{public}s", v14, 0xCu);
        swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v39, -1, -1);
        v19 = v14;
        v4 = &selRef_accessibilityScroll_;
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v9, 2);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v8);
    }
  }
  v20 = objc_msgSend(v2, v4[469]);
  if (v20)
  {
    v21 = v20;
    v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v20, &type metadata for String, &type metadata for String, &protocol witness table for String);

    v23 = (_QWORD *)sub_387A4((uint64_t)_swiftEmptyArrayStorage);
    v24 = sub_13F1B8(v23, v22, (void (*)(_QWORD *__return_ptr, _QWORD, __n128))sub_13EF0C);
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
  }
  else
  {
    v24 = sub_387A4((uint64_t)_swiftEmptyArrayStorage);
  }
  v26 = objc_msgSend(v2, "isFontBolded", v25);
  v27 = objc_msgSend(v2, "hasCustomLayout");
  objc_msgSend(v2, "lineHeight");
  v29 = v28;
  objc_msgSend(v2, "letterSpacing");
  v31 = v30;
  objc_msgSend(v2, "wordSpacing");
  v33 = v32;
  v34 = objc_msgSend(v2, "justify");
  v35 = objc_msgSend(v2, "multipleColumnMode");
  if (v35 >= 3)
    v36 = 1;
  else
    v36 = v35;
  result = objc_msgSend(v2, "marginAdjustment");
  *(_QWORD *)a1 = v24;
  *(_BYTE *)(a1 + 8) = v26;
  *(_BYTE *)(a1 + 9) = v27;
  *(_QWORD *)(a1 + 16) = v29;
  *(_QWORD *)(a1 + 24) = v31;
  *(_QWORD *)(a1 + 32) = v33;
  *(_BYTE *)(a1 + 40) = v34;
  *(_BYTE *)(a1 + 41) = v36;
  *(_QWORD *)(a1 + 48) = v38;
  return result;
}

char sub_13EF0C@<W0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  char v6;
  Swift::String v7;
  char v9;

  v3 = *a1;
  v4 = (void *)a1[1];
  if (*a1 == 28261 && v4 == (void *)0xE200000000000000)
  {
    v6 = 0;
  }
  else
  {
    LOBYTE(a1) = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v4, 28261, 0xE200000000000000, 0);
    v6 = 0;
    if ((a1 & 1) == 0)
    {
      swift_bridgeObjectRetain(v4);
      v7._countAndFlagsBits = v3;
      v7._object = v4;
      LOBYTE(a1) = BookFontTable.init(rawValue:)(v7);
      v6 = v9;
    }
  }
  *a2 = v6;
  return (char)a1;
}

double sub_13EF98(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  _QWORD *v11;
  uint64_t v12;
  Class isa;
  double result;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = *((unsigned __int8 *)a1 + 9);
  v6 = *((double *)a1 + 2);
  v5 = *((double *)a1 + 3);
  v7 = *((double *)a1 + 4);
  v8 = *((unsigned __int8 *)a1 + 40);
  v9 = *((unsigned __int8 *)a1 + 41);
  v10 = *((double *)a1 + 6);
  swift_bridgeObjectRetain(*a1);
  v11 = (_QWORD *)sub_388B0((uint64_t)_swiftEmptyArrayStorage);
  v12 = sub_13F4FC(v11, v2, (void (*)(_QWORD *__return_ptr, char *, __n128))sub_13F11C);
  swift_bridgeObjectRelease(v2);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setFontsByLanguage:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);

  objc_msgSend(v1, "setIsFontBolded:", v3);
  objc_msgSend(v1, "setHasCustomLayout:", v4);
  objc_msgSend(v1, "setLineHeight:", v6);
  objc_msgSend(v1, "setLetterSpacing:", v5);
  objc_msgSend(v1, "setWordSpacing:", v7);
  objc_msgSend(v1, "setJustify:", v8);
  objc_msgSend(v1, "setMultipleColumnMode:", v9);
  objc_msgSend(v1, "setMarginAdjustment:", v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_13F11C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t result;

  v2 = BookFontTable.rawValue.getter();
  v4 = v3;
  if (v2 || v3 != 0xE000000000000000)
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v3, 0, 0xE000000000000000, 0);
    swift_bridgeObjectRelease(v4);
    if ((v5 & 1) == 0)
    {
      result = BookFontTable.rawValue.getter();
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease(0xE000000000000000);
  }
  v6 = 0xE200000000000000;
  result = 28261;
LABEL_7:
  *a1 = result;
  a1[1] = v6;
  return result;
}

uint64_t sub_13F1B8(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, _QWORD, __n128))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  int64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  void (*v39)(_QWORD *__return_ptr, _QWORD, __n128);
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  _QWORD v45[2];
  _QWORD *v46;

  v4 = a2;
  v41 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v42 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v8 = 0;
  v40 = v4;
  v39 = a3;
  if (v7)
    goto LABEL_6;
LABEL_7:
  v11 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v11 < v42)
    {
      v12 = *(_QWORD *)(v41 + 8 * v11);
      ++v8;
      if (v12)
        goto LABEL_22;
      v8 = v11 + 1;
      if (v11 + 1 >= v42)
        goto LABEL_36;
      v12 = *(_QWORD *)(v41 + 8 * v8);
      if (v12)
        goto LABEL_22;
      v8 = v11 + 2;
      if (v11 + 2 >= v42)
        goto LABEL_36;
      v12 = *(_QWORD *)(v41 + 8 * v8);
      if (v12)
        goto LABEL_22;
      v8 = v11 + 3;
      if (v11 + 3 >= v42)
        goto LABEL_36;
      v12 = *(_QWORD *)(v41 + 8 * v8);
      if (v12)
      {
LABEL_22:
        v7 = (v12 - 1) & v12;
        for (i = __clz(__rbit64(v12)) + (v8 << 6); ; i = v9 | (v8 << 6))
        {
          v14 = 16 * i;
          v15 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v14);
          v16 = v15[1];
          v17 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v14);
          v18 = *v17;
          v19 = v17[1];
          v45[0] = *v15;
          v45[1] = v16;
          swift_bridgeObjectRetain(v16);
          v20 = swift_bridgeObjectRetain(v19);
          a3(&v46, v45, v20);
          v21 = v46;
          if (v46 == 26)
          {
            swift_bridgeObjectRelease(v19);
            swift_bridgeObjectRelease(v16);
            if (!v7)
              goto LABEL_7;
          }
          else
          {
            v43 = v7;
            v22 = v8;
            swift_bridgeObjectRetain(v19);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
            v46 = a1;
            v25 = sub_3B828(v21);
            v26 = a1[2];
            v27 = (v24 & 1) == 0;
            v28 = v26 + v27;
            if (__OFADD__(v26, v27))
            {
              __break(1u);
              goto LABEL_38;
            }
            v29 = v24;
            if (a1[3] >= v28)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_F2E94();
            }
            else
            {
              sub_EECC4(v28, isUniquelyReferenced_nonNull_native);
              v30 = sub_3B828(v21);
              if ((v29 & 1) != (v31 & 1))
                goto LABEL_41;
              v25 = v30;
            }
            v8 = v22;
            v32 = v46;
            v7 = v43;
            a1 = v46;
            if ((v29 & 1) != 0)
            {
              v33 = (_QWORD *)(v46[7] + 16 * v25);
              swift_bridgeObjectRelease(v33[1]);
              *v33 = v18;
              v33[1] = v19;
            }
            else
            {
              v46[(v25 >> 6) + 8] |= 1 << v25;
              *(_BYTE *)(v32[6] + v25) = v21;
              v34 = (_QWORD *)(v32[7] + 16 * v25);
              *v34 = v18;
              v34[1] = v19;
              v35 = v32[2];
              v36 = __OFADD__(v35, 1);
              v37 = v35 + 1;
              if (v36)
                goto LABEL_39;
              v32[2] = v37;
            }
            swift_bridgeObjectRelease(v19);
            swift_bridgeObjectRelease(v16);
            swift_bridgeObjectRelease(0x8000000000000000);
            v4 = v40;
            a3 = v39;
            if (!v43)
              goto LABEL_7;
          }
LABEL_6:
          v9 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      v13 = v11 + 4;
      if (v13 < v42)
      {
        v12 = *(_QWORD *)(v41 + 8 * v13);
        if (v12)
        {
          v8 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          v8 = v13 + 1;
          if (__OFADD__(v13, 1))
            goto LABEL_40;
          if (v8 >= v42)
            break;
          v12 = *(_QWORD *)(v41 + 8 * v8);
          ++v13;
          if (v12)
            goto LABEL_22;
        }
      }
    }
LABEL_36:
    swift_release();
    return (uint64_t)a1;
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for BookFontTable);
  __break(1u);
  return result;
}

uint64_t sub_13F4FC(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, char *, __n128))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t i;
  _QWORD *v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  char v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  int64_t v37;
  uint64_t v40;
  int64_t v41;
  _QWORD v42[2];
  char v43[8];
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v37 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  for (i = 0; ; i = v41)
  {
    if (v6)
    {
      v40 = (v6 - 1) & v6;
      v41 = i;
      v9 = __clz(__rbit64(v6)) | (i << 6);
    }
    else
    {
      v10 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_38;
      if (v10 >= v37)
      {
LABEL_35:
        swift_release();
        return (uint64_t)a1;
      }
      v11 = *(_QWORD *)(v36 + 8 * v10);
      v12 = i + 1;
      if (!v11)
      {
        v12 = i + 2;
        if (i + 2 >= v37)
          goto LABEL_35;
        v11 = *(_QWORD *)(v36 + 8 * v12);
        if (!v11)
        {
          v12 = i + 3;
          if (i + 3 >= v37)
            goto LABEL_35;
          v11 = *(_QWORD *)(v36 + 8 * v12);
          if (!v11)
          {
            v12 = i + 4;
            if (i + 4 >= v37)
              goto LABEL_35;
            v11 = *(_QWORD *)(v36 + 8 * v12);
            if (!v11)
            {
              v13 = i + 5;
              if (i + 5 >= v37)
                goto LABEL_35;
              v11 = *(_QWORD *)(v36 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  v12 = v13 + 1;
                  if (__OFADD__(v13, 1))
                    goto LABEL_39;
                  if (v12 >= v37)
                    goto LABEL_35;
                  v11 = *(_QWORD *)(v36 + 8 * v12);
                  ++v13;
                  if (v11)
                    goto LABEL_23;
                }
              }
              v12 = i + 5;
            }
          }
        }
      }
LABEL_23:
      v40 = (v11 - 1) & v11;
      v41 = v12;
      v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    v14 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v9);
    v15 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v9);
    v16 = *v15;
    v17 = v15[1];
    v43[0] = v14;
    v44 = v16;
    v45 = v17;
    v18 = swift_bridgeObjectRetain(v17);
    a3(v42, v43, v18);
    v20 = v42[0];
    v19 = v42[1];
    swift_bridgeObjectRetain(v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
    v46 = a1;
    v23 = sub_3B8A0(v20, v19);
    v24 = a1[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      break;
    v27 = v22;
    if (a1[3] >= v26)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        a1 = v46;
        if ((v22 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_F37EC();
        a1 = v46;
        if ((v27 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_EFEEC(v26, isUniquelyReferenced_nonNull_native);
      v28 = sub_3B8A0(v20, v19);
      if ((v27 & 1) != (v29 & 1))
        goto LABEL_40;
      v23 = v28;
      a1 = v46;
      if ((v27 & 1) != 0)
      {
LABEL_4:
        v8 = (_QWORD *)(a1[7] + 16 * v23);
        swift_bridgeObjectRelease(v8[1]);
        *v8 = v16;
        v8[1] = v17;
        goto LABEL_5;
      }
    }
    a1[(v23 >> 6) + 8] |= 1 << v23;
    v30 = (uint64_t *)(a1[6] + 16 * v23);
    *v30 = v20;
    v30[1] = v19;
    v31 = (_QWORD *)(a1[7] + 16 * v23);
    *v31 = v16;
    v31[1] = v17;
    v32 = a1[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_37;
    a1[2] = v34;
    swift_bridgeObjectRetain(v19);
LABEL_5:
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(0x8000000000000000);
    v6 = v40;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

double ExpandedContentAnimator.rect.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect, v3, 0, 0);
  return *(double *)v1;
}

uint64_t ExpandedContentAnimator.rect.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v9;
  uint64_t result;
  _BYTE v11[24];

  v9 = (double *)(v4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect);
  result = swift_beginAccess(v4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect, v11, 1, 0);
  *v9 = a1;
  v9[1] = a2;
  v9[2] = a3;
  v9[3] = a4;
  return result;
}

uint64_t (*ExpandedContentAnimator.rect.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t ExpandedContentAnimator.presenting.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting, v3, 0, 0);
  return *v1;
}

uint64_t ExpandedContentAnimator.presenting.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*ExpandedContentAnimator.presenting.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t ExpandedContentAnimator.interactive.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_interactive);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_interactive, v3, 0, 0);
  return *v1;
}

uint64_t ExpandedContentAnimator.interactive.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_interactive);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*ExpandedContentAnimator.interactive.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_interactive, a1, 33, 0);
  return j_j__swift_endAccess;
}

char *ExpandedContentAnimator.interactiveAnimator.getter()
{
  char *v0;
  char *v1;
  char *result;
  char *v3;
  char v4[24];

  v1 = &v0[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_interactive];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_interactive], v4, 0, 0);
  result = 0;
  if (*v1 == 1)
  {
    v3 = v0;
    return v0;
  }
  return result;
}

double ExpandedContentAnimator.duration.getter()
{
  return 0.4;
}

id ExpandedContentAnimator.__allocating_init(presenting:rect:interactive:)(char a1, char a2, double a3, double a4, double a5, double a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return ExpandedContentAnimator.init(presenting:rect:interactive:)(a1, a2, a3, a4, a5, a6);
}

id ExpandedContentAnimator.init(presenting:rect:interactive:)(char a1, char a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  char *v7;
  objc_class *ObjectType;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  double *v19;
  objc_super v21;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType(v6);
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_image], 0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation] = 0;
  v15 = OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_shimView;
  v16 = objc_allocWithZone((Class)UIView);
  v17 = v7;
  *(_QWORD *)&v7[v15] = objc_msgSend(v16, "init");
  v18 = OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_landingShimView;
  *(_QWORD *)&v17[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v17[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting] = a1;
  v19 = (double *)&v17[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect];
  *v19 = a3;
  v19[1] = a4;
  v19[2] = a5;
  v19[3] = a6;
  v17[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_interactive] = a2;

  v21.receiver = v17;
  v21.super_class = ObjectType;
  return objc_msgSendSuper2(&v21, "init");
}

uint64_t sub_13FCBC()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3BDA50);
  sub_555F0(v0, (uint64_t)qword_3BDA50);
  return Logger.init(subsystem:category:)(0xD000000000000018, 0x80000000002CCAB0, 0xD000000000000017, 0x80000000002EDF30, v1);
}

void sub_13FD3C()
{
  uint64_t v0;
  uint64_t Strong;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_image);
  if (Strong)
  {
    v2 = (void *)Strong;
    v3 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", Strong);

    v4 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation);
    *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation) = v3;
  }
  else
  {
    v5 = OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation;
    v4 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation);
    if (v4)
    {
      objc_msgSend(v4, "removeFromSuperview");
      v4 = *(void **)(v0 + v5);
    }
    *(_QWORD *)(v0 + v5) = 0;
  }

}

void ExpandedContentAnimator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookEPUB.ExpandedContentAnimator", 32, "init()", 6, 0);
  __break(1u);
}

void ExpandedContentAnimator.animateTransition(using:)(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  uint64_t (*v5)();
  uint64_t v6;
  id v7;
  void *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  id v14;
  id v15;
  id (*v16)();
  void (*v17)();
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char *v32;
  id v33;
  char *v34;
  id v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  char v43[24];
  char v44[24];
  void **aBlock;
  uint64_t v46;
  void *v47;
  void *v48;
  id (*v49)(char);
  _QWORD *v50;
  _QWORD v51[10];
  _OWORD v52[2];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;

  sub_140454(a1, v51);
  sub_140BC8((uint64_t)v51, (uint64_t)v52);
  if ((_QWORD)v53 != 1)
  {
    v58 = v53;
    v59 = v54;
    v60 = v55;
    v56 = v52[0];
    v57 = v52[1];
    v3 = *(void **)&v1[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation];
    if (v3)
    {
      v4 = v3;
      v5 = sub_140C10(a1, (uint64_t)&v56);
      v42 = v6;
      v7 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
      if (v7)
      {
        v8 = v7;
        v9 = &v1[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting];
        swift_beginAccess(&v1[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting], v43, 0, 0);
        if (*v9 == 1)
        {
          v10 = swift_allocObject(&unk_383580, 112);
          *(_QWORD *)(v10 + 16) = v8;
          *(_QWORD *)(v10 + 24) = v4;
          v11 = v59;
          *(_OWORD *)(v10 + 64) = v58;
          *(_OWORD *)(v10 + 80) = v11;
          *(_OWORD *)(v10 + 96) = v60;
          v12 = v57;
          *(_OWORD *)(v10 + 32) = v56;
          *(_OWORD *)(v10 + 48) = v12;
          v13 = swift_allocObject(&unk_3835A8, 32);
          *(_QWORD *)(v13 + 16) = v8;
          *(_QWORD *)(v13 + 24) = v1;
          v14 = v4;
          v15 = v8;
          sub_1415D4(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_141620);
          v16 = sub_141594;
          v17 = sub_1415CC;
          v18 = v1;
          if (!v5)
            goto LABEL_18;
LABEL_24:
          sub_899C8((uint64_t)v5, v42);
          sub_899C8((uint64_t)v16, v10);
          v36 = sub_899C8((uint64_t)v17, v13);
          ((void (*)(uint64_t))v5)(v36);
          v40 = (id)objc_opt_self(UIView);
          v41 = v4;
          v49 = (id (*)(char))v16;
          v50 = (_QWORD *)v10;
          aBlock = _NSConcreteStackBlock;
          v46 = 1107296256;
          v47 = sub_525B8;
          v48 = &unk_3834A8;
          v37 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          v38 = (_QWORD *)swift_allocObject(&unk_3834E0, 40);
          v38[2] = v17;
          v38[3] = v13;
          v38[4] = a1;
          v49 = sub_1414D4;
          v50 = v38;
          aBlock = _NSConcreteStackBlock;
          v46 = 1107296256;
          v47 = sub_525E4;
          v48 = &unk_3834F8;
          v39 = _Block_copy(&aBlock);
          sub_899C8((uint64_t)v17, v13);
          swift_unknownObjectRetain(a1);
          swift_release();
          objc_msgSend(v40, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v37, v39, 0.4, 0.0, 0.8, 1.0);
          sub_7241C((uint64_t)v17, v13);
          sub_7241C((uint64_t)v16, v10);
          sub_1415D4(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_141480);
          sub_7241C((uint64_t)v5, v42);
          sub_7241C((uint64_t)v5, v42);
          sub_7241C((uint64_t)v16, v10);
          sub_7241C((uint64_t)v17, v13);
          _Block_release(v39);
          _Block_release(v37);

          return;
        }

      }
      v24 = objc_msgSend(a1, "viewForKey:", UITransitionContextFromViewKey);
      if (v24)
      {
        v25 = v24;
        v26 = &v1[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting];
        swift_beginAccess(&v1[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting], v44, 0, 0);
        if ((*v26 & 1) == 0)
        {
          v10 = swift_allocObject(&unk_383530, 40);
          *(_QWORD *)(v10 + 16) = v4;
          *(_QWORD *)(v10 + 24) = v1;
          *(_QWORD *)(v10 + 32) = v25;
          v13 = swift_allocObject(&unk_383558, 32);
          *(_QWORD *)(v13 + 16) = v25;
          *(_QWORD *)(v13 + 24) = v1;
          v32 = v1;
          v33 = v4;
          v34 = v32;
          v16 = sub_14154C;
          v17 = sub_141558;
          v35 = v25;
          if (v5)
            goto LABEL_24;
LABEL_18:
          if (qword_3B57A8 != -1)
            swift_once(&qword_3B57A8, sub_13FCBC);
          v27 = type metadata accessor for Logger(0);
          v28 = sub_555F0(v27, (uint64_t)qword_3BDA50);
          v29 = Logger.logObject.getter(v28);
          v30 = static os_log_type_t.error.getter(v29);
          if (os_log_type_enabled(v29, v30))
          {
            v31 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v31 = 0;
            _os_log_impl(&dword_0, v29, v30, "Failed to setup necessary animations for expanded content transition - failing presentation", v31, 2u);
            swift_slowDealloc(v31, -1, -1);
          }

          objc_msgSend(a1, "completeTransition:", 0);
          sub_7241C((uint64_t)v17, v13);
          sub_7241C((uint64_t)v16, v10);
          sub_1415D4(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_141480);
          sub_7241C((uint64_t)v5, v42);

          return;
        }

      }
      v10 = 0;
      v16 = 0;
      v13 = 0;
      v17 = 0;
      goto LABEL_18;
    }
    sub_1415D4(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_141480);
  }
  if (qword_3B57A8 != -1)
    swift_once(&qword_3B57A8, sub_13FCBC);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_555F0(v19, (uint64_t)qword_3BDA50);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.error.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_0, v21, v22, "failed to setup expanded content animation -- marking transition incomplete", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }

  objc_msgSend(a1, "completeTransition:", 0);
}

void sub_140454(void *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v2;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  int64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;

  v5 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  v6 = objc_msgSend(a1, "viewForKey:", UITransitionContextFromViewKey);
  v7 = objc_msgSend(a1, "containerView");
  if (v5)
  {
    v8 = v5;
    objc_msgSend(v7, "bounds");
    objc_msgSend(v8, "setFrame:");

  }
  else
  {
    if (!v6)
    {
LABEL_33:
      v75 = v6;
      if (qword_3B57A8 != -1)
        swift_once(&qword_3B57A8, sub_13FCBC);
      v39 = type metadata accessor for Logger(0);
      sub_555F0(v39, (uint64_t)qword_3BDA50);
      v40 = v2;
      v41 = Logger.logObject.getter(v40);
      v42 = static os_log_type_t.error.getter(v41);
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc(12, -1);
        v44 = swift_slowAlloc(32, -1);
        v77 = v44;
        *(_DWORD *)v43 = 136315138;
        ObjectType = swift_getObjectType(v40);
        v46 = _typeName(_:qualified:)(ObjectType, 0);
        v48 = v47;
        v76 = sub_33524(v46, v47, &v77);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, &v77, v43 + 4);

        swift_bridgeObjectRelease(v48);
        v49 = &dword_0 + 1;
        swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v44, -1, -1);
        swift_slowDealloc(v43, -1, -1);

        v27 = 0;
        v29 = 0;
        v31 = 0;
      }
      else
      {

        v27 = 0;
        v29 = 0;
        v31 = 0;
        v49 = &dword_0 + 1;
      }
      v33 = 0;
      v35 = 0;
      v50 = 0;
      v51 = 0;
      v52 = 0;
      v53 = 0;
      goto LABEL_67;
    }
    v8 = v6;
  }
  v74 = v5;
  v9 = objc_msgSend(v8, "subviews");
  v10 = sub_4C140();
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if (!((unint64_t)v11 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_7;
    goto LABEL_32;
  }
  if (v11 < 0)
    v37 = v11;
  else
    v37 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v38 = _CocoaArrayWrapper.endIndex.getter(v37);
  swift_bridgeObjectRelease(v11);
  if (!v38)
  {
LABEL_32:

    swift_bridgeObjectRelease(v11);
    goto LABEL_33;
  }
LABEL_7:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_41;
    }
    v12 = *(id *)(v11 + 32);
  }
  v5 = v12;
  objc_msgSend(v8, "layoutIfNeeded", swift_bridgeObjectRelease(v11).n128_f64[0]);
  v13 = objc_msgSend(v8, "subviews");
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v10);

  if (!((unint64_t)v11 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_12;
LABEL_45:
    v36 = swift_bridgeObjectRelease(v11).n128_u64[0];
LABEL_62:
    objc_msgSend(v5, "frame", *(double *)&v36, v73);
    v29 = v61;
    v31 = v62;
    v33 = v63;
    v35 = v64;
    v27 = &dword_0 + 1;
LABEL_63:
    v65 = OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation;
    v66 = *(void **)&v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation];
    if (v66
      || (v67 = objc_msgSend(v8, "snapshotViewAfterScreenUpdates:", 0),
          v68 = *(void **)&v2[v65],
          *(_QWORD *)&v2[v65] = v67,
          v68,
          (v66 = *(void **)&v2[v65]) != 0))
    {
      objc_msgSend(v66, "setContentMode:", v27, v73);
    }
    v49 = objc_msgSend(v8, "backgroundColor", v73);
    objc_msgSend(v7, "bounds");
    v50 = v69;
    v51 = v70;
    v52 = v71;
    v53 = v72;

LABEL_67:
    *a2 = v29;
    a2[1] = v31;
    a2[2] = v33;
    a2[3] = v35;
    a2[4] = v49;
    a2[5] = v27;
    a2[6] = v50;
    a2[7] = v51;
    a2[8] = v52;
    a2[9] = v53;
    return;
  }
LABEL_41:
  if (v11 < 0)
    v54 = v11;
  else
    v54 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v55 = _CocoaArrayWrapper.endIndex.getter(v54);
  swift_bridgeObjectRelease(v11);
  if (!v55)
    goto LABEL_45;
LABEL_12:
  v73 = v7;
  if ((v11 & 0xC000000000000001) != 0)
  {
    v7 = v6;
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_48;
    }
    v7 = v6;
    v14 = *(id *)(v11 + 32);
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "subviews", swift_bridgeObjectRelease(v11).n128_f64[0]);

  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v10);
  if (!((unint64_t)v11 >> 62))
  {
    v6 = v7;
    if (*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_17;
LABEL_52:
    v58 = v11;
LABEL_60:
    v36 = swift_bridgeObjectRelease(v58).n128_u64[0];
LABEL_61:
    v7 = v73;
    goto LABEL_62;
  }
LABEL_48:
  if (v11 < 0)
    v56 = v11;
  else
    v56 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v57 = _CocoaArrayWrapper.endIndex.getter(v56);
  swift_bridgeObjectRelease(v11);
  v6 = v7;
  if (!v57)
    goto LABEL_52;
LABEL_17:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v7 = v6;
    v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_55;
    }
    v7 = v6;
    v17 = *(id *)(v11 + 32);
  }
  v18 = v17;
  v19 = objc_msgSend(v17, "subviews", swift_bridgeObjectRelease(v11).n128_f64[0]);

  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, v10);
  if (!((unint64_t)v10 >> 62))
  {
    v6 = v7;
    if (*(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8)))
      goto LABEL_22;
    goto LABEL_59;
  }
LABEL_55:
  if (v10 < 0)
    v59 = v10;
  else
    v59 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v60 = _CocoaArrayWrapper.endIndex.getter(v59);
  swift_bridgeObjectRelease(v10);
  v6 = v7;
  if (!v60)
  {
LABEL_59:
    v58 = v10;
    goto LABEL_60;
  }
LABEL_22:
  if ((v10 & 0xC000000000000001) != 0)
  {
    v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
    goto LABEL_25;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8)))
  {
    v20 = *(id *)(v10 + 32);
LABEL_25:
    v21 = v20;
    swift_bridgeObjectRelease(v10);
    v22 = objc_opt_self(UIImageView);
    v23 = (void *)swift_dynamicCastObjCClass(v21, v22);
    if (v23)
    {
      v24 = v23;
      v25 = v6;
      v26 = objc_msgSend(v23, "image");
      swift_unknownObjectWeakAssign(&v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_image], v26);
      sub_13FD3C();

      v6 = v25;
      v27 = objc_msgSend(v24, "contentMode");
      objc_msgSend(v24, "frame");
      v29 = v28;
      v31 = v30;
      v33 = v32;
      v35 = v34;

      v7 = v73;
      goto LABEL_63;
    }

    goto LABEL_61;
  }
  __break(1u);
}

uint64_t sub_140BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3BDAA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_140C10(void *a1, uint64_t a2))()
{
  char *v2;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  char *v28;
  uint64_t v29;
  char v30[24];

  v5 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  v6 = objc_msgSend(a1, "viewForKey:", UITransitionContextFromViewKey);
  v7 = objc_msgSend(a1, "containerView");
  v8 = *(_QWORD *)(a2 + 32);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_shimView], "setBackgroundColor:", v8);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_landingShimView], "setBackgroundColor:", v8);
  v9 = *(void **)&v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation];
  if (!v9)
  {
    if (qword_3B57A8 != -1)
      swift_once(&qword_3B57A8, sub_13FCBC);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_555F0(v18, (uint64_t)qword_3BDA50);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "We did not have a view to animate", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    return 0;
  }
  if (v5)
  {
    v10 = &v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting], &v29, 0, 0);
    LOBYTE(v10) = *v10;
    v11 = v9;
    if ((v10 & 1) != 0)
    {
      v12 = v11;

      v13 = swift_allocObject(&unk_383698, 128);
      *(_QWORD *)(v13 + 16) = v12;
      *(_QWORD *)(v13 + 24) = v7;
      *(_QWORD *)(v13 + 32) = v5;
      *(_QWORD *)(v13 + 40) = v2;
      v14 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v13 + 80) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v13 + 96) = v14;
      *(_OWORD *)(v13 + 112) = *(_OWORD *)(a2 + 64);
      v15 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v13 + 48) = *(_OWORD *)a2;
      *(_OWORD *)(v13 + 64) = v15;
      v16 = v2;
      sub_14187C(a2);
      return sub_1418EC;
    }

    if (!v6)
      goto LABEL_15;
  }
  else
  {
    v23 = v9;
    if (!v6)
      goto LABEL_15;
  }
  v24 = &v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_presenting], v30, 0, 0);
  if ((*v24 & 1) != 0)
  {

LABEL_15:
    return 0;
  }
  v25 = swift_allocObject(&unk_383670, 128);
  *(_QWORD *)(v25 + 16) = v9;
  *(_QWORD *)(v25 + 24) = v7;
  *(_QWORD *)(v25 + 32) = v6;
  *(_QWORD *)(v25 + 40) = v2;
  v26 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v25 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v25 + 96) = v26;
  *(_OWORD *)(v25 + 112) = *(_OWORD *)(a2 + 64);
  v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(v25 + 64) = v27;
  v28 = v2;
  sub_14187C(a2);
  return sub_141870;
}

id sub_140F3C(void *a1, id a2, void *a3, uint64_t a4, double *a5)
{
  double *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  _BYTE v18[24];

  objc_msgSend(a2, "addSubview:");
  v10 = (double *)(a4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect);
  swift_beginAccess(a4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect, v18, 0, 0);
  v11 = *v10;
  v12 = v10[1];
  v13 = v10[2];
  v14 = v10[3];
  v15 = *(void **)(a4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_shimView);
  v16 = *(void **)(a4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_landingShimView);
  objc_msgSend(a3, "setAlpha:", 0.0);
  objc_msgSend(a2, "addSubview:", v15);
  objc_msgSend(a3, "addSubview:", v16);
  objc_msgSend(a2, "addSubview:", a1);
  objc_msgSend(v15, "setFrame:", v11, v12, v13, v14);
  objc_msgSend(v16, "setFrame:", a5[6], a5[7], a5[8], a5[9]);
  objc_msgSend(a3, "center");
  objc_msgSend(v16, "setCenter:");
  objc_msgSend(a1, "setFrame:", v11, v12, v13, v14);
  objc_msgSend(a2, "bringSubviewToFront:", v15);
  objc_msgSend(a3, "bringSubviewToFront:", v16);
  return objc_msgSend(a2, "bringSubviewToFront:", a1);
}

id sub_1410D0(void *a1, id a2, void *a3, uint64_t a4, double *a5)
{
  void *v10;
  void *v11;
  double *v12;
  _BYTE v14[24];

  objc_msgSend(a2, "addSubview:");
  objc_msgSend(a2, "bringSubviewToFront:", a3);
  objc_msgSend(a3, "setAlpha:", 1.0);
  v10 = *(void **)(a4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_shimView);
  objc_msgSend(a3, "addSubview:", v10);
  v11 = *(void **)(a4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_landingShimView);
  objc_msgSend(a2, "addSubview:", v11);
  objc_msgSend(a2, "addSubview:", a1);
  objc_msgSend(a1, "setFrame:", *a5, a5[1], a5[2], a5[3]);
  objc_msgSend(a3, "center");
  objc_msgSend(a1, "setCenter:");
  objc_msgSend(a1, "frame");
  objc_msgSend(v10, "setFrame:");
  v12 = (double *)(a4 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect);
  swift_beginAccess(v12, v14, 0, 0);
  objc_msgSend(v11, "setFrame:", *v12, v12[1], v12[2], v12[3]);
  objc_msgSend(a3, "bringSubviewToFront:", v10);
  objc_msgSend(a2, "bringSubviewToFront:", v11);
  return objc_msgSend(a2, "bringSubviewToFront:", a1);
}

id sub_14125C(void *a1, void *a2, double *a3)
{
  objc_msgSend(a1, "setAlpha:", 1.0);
  objc_msgSend(a2, "setFrame:", *a3, a3[1], a3[2], a3[3]);
  objc_msgSend(a1, "center");
  return objc_msgSend(a2, "setCenter:");
}

id sub_1412CC(void *a1, uint64_t a2, void *a3)
{
  double *v5;
  _BYTE v7[24];

  v5 = (double *)(a2 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_rect, v7, 0, 0);
  objc_msgSend(a1, "setFrame:", *v5, v5[1], v5[2], v5[3]);
  return objc_msgSend(a3, "setAlpha:", 0.0);
}

void sub_141348(void *a1, char *a2)
{
  void *v3;
  void *v4;
  char *v5;

  objc_msgSend(a1, "setAlpha:", 1.0);
  v3 = *(void **)&a2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_shimView];
  v5 = a2;
  objc_msgSend(v3, "removeFromSuperview");
  objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_landingShimView], "removeFromSuperview");
  v4 = *(void **)&v5[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation];
  if (v4)
    objc_msgSend(v4, "removeFromSuperview");

}

void sub_1413D8(void *a1, char *a2)
{
  void *v3;
  void *v4;
  char *v5;

  objc_msgSend(a1, "removeFromSuperview");
  swift_unknownObjectWeakAssign(&a2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_image], 0);
  sub_13FD3C();
  v3 = *(void **)&a2[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_shimView];
  v5 = a2;
  objc_msgSend(v3, "removeFromSuperview");
  objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_landingShimView], "removeFromSuperview");
  v4 = *(void **)&v5[OBJC_IVAR____TtC8BookEPUB23ExpandedContentAnimator_viewForAnimation];
  if (v4)
    objc_msgSend(v4, "removeFromSuperview");

}

void sub_141480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  if (a5 != (_BYTE *)&dword_0 + 1)

}

uint64_t sub_141490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1414A0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1414A8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1414D4(char a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 32);
  (*(void (**)(void))(v1 + 16))();
  return objc_msgSend(v3, "completeTransition:", a1 & 1);
}

uint64_t sub_141518()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_14154C()
{
  uint64_t v0;

  return sub_1412CC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_141558()
{
  uint64_t v0;

  sub_1413D8(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_141560()
{
  id *v0;

  return swift_deallocObject(v0, 112, 7);
}

id sub_141594()
{
  uint64_t v0;

  return sub_14125C(*(void **)(v0 + 16), *(void **)(v0 + 24), (double *)(v0 + 32));
}

uint64_t sub_1415A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1415CC()
{
  uint64_t v0;

  sub_141348(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

_QWORD *sub_1415D4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

char *sub_141620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  char *result;

  if (a5 != (_BYTE *)&dword_0 + 1)
    return a5;
  return result;
}

uint64_t type metadata accessor for ExpandedContentAnimator()
{
  return objc_opt_self(_TtC8BookEPUB23ExpandedContentAnimator);
}

uint64_t method lookup function for ExpandedContentAnimator(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ExpandedContentAnimator);
}

uint64_t dispatch thunk of ExpandedContentAnimator.__allocating_init(presenting:rect:interactive:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void destroy for ExpandedContentAnimator.AnimationSetup(uint64_t a1)
{

}

uint64_t initializeWithCopy for ExpandedContentAnimator.AnimationSetup(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  uint64_t v5;
  __int128 v6;
  id v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  v7 = v4;
  return a1;
}

_QWORD *assignWithCopy for ExpandedContentAnimator.AnimationSetup(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  return a1;
}

__n128 initializeWithTake for ExpandedContentAnimator.AnimationSetup(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ExpandedContentAnimator.AnimationSetup(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  __int128 v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for ExpandedContentAnimator.AnimationSetup(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ExpandedContentAnimator.AnimationSetup(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExpandedContentAnimator.AnimationSetup()
{
  return &type metadata for ExpandedContentAnimator.AnimationSetup;
}

uint64_t sub_141870()
{
  return sub_1418F8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD *))sub_1410D0);
}

uint64_t sub_14187C(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 32);
  return a1;
}

uint64_t sub_1418A8()
{
  id *v0;

  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1418EC()
{
  return sub_1418F8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD *))sub_140F3C);
}

uint64_t sub_1418F8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD *))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1 + 6);
}

uint64_t BookEntityType.urlReferencesTableOfContents(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;
  char v8;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 56))(a2, a3);
  v5 = v4;
  v6 = URL.pathWithoutLeadingSlash()();
  if (v5)
  {
    if (v3 == v6._countAndFlagsBits && v5 == v6._object)
      v8 = 1;
    else
      v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6._countAndFlagsBits, v6._object, 0);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = 0;
  }
  swift_bridgeObjectRelease(v6._object);
  return v8 & 1;
}

BookEPUB::DocumentEntityID __swiftcall DocumentEntityID.init(ordinal:)(BookEPUB::DocumentEntityID ordinal)
{
  BookEPUB::DocumentEntityID *v1;

  v1->value = ordinal.value;
  return ordinal;
}

BOOL BookEntityType.urlReferencesNonLinearDocument(_:)()
{
  Swift::String v0;
  void *object;
  Swift::Bool v2;

  v0._countAndFlagsBits = URL.path.getter();
  object = v0._object;
  v2 = BookEntityType.hrefReferencesNonLinearDocument(_:)(v0);
  swift_bridgeObjectRelease(object);
  return v2;
}

void sub_141A18(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_1D34F8(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_145AD4(v4);
  *a1 = v2;
}

uint64_t DocumentEntity.__allocating_init(href:ordinal:linearDocumentIndex:nonLinear:manifestId:fileSize:mime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t result;

  result = swift_allocObject(v10, 89, 7);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a6;
  *(_QWORD *)(result + 56) = a7;
  *(_QWORD *)(result + 64) = a8;
  *(_QWORD *)(result + 72) = a9;
  *(_QWORD *)(result + 80) = a10;
  *(_BYTE *)(result + 88) = a5;
  return result;
}

uint64_t BookType.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_141B48 + 4 * byte_2EDF90[a1]))(0x6261776F6C666572, 0xEA0000000000656CLL);
}

uint64_t sub_141B48()
{
  return 0x6465786966;
}

uint64_t sub_141B5C()
{
  return 6710384;
}

uint64_t sub_141B6C()
{
  return 7630194;
}

_UNKNOWN **static BookType.allCases.getter()
{
  return &off_379948;
}

void sub_141B88(_QWORD *a1@<X8>)
{
  *a1 = &off_379970;
}

uint64_t sub_141B98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_141BCC + 4 * byte_2EDF94[*v0]))(0x6261776F6C666572, 0xEA0000000000656CLL);
}

uint64_t sub_141BCC()
{
  return 0x6465786966;
}

uint64_t sub_141BE0()
{
  return 6710384;
}

uint64_t sub_141BF0()
{
  return 7630194;
}

uint64_t PageProgressDirection.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4C6F547468676972;
  else
    return 0x69526F547466656CLL;
}

BookEPUB::PageProgressDirection_optional __swiftcall PageProgressDirection.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &off_379998;
  return (BookEPUB::PageProgressDirection_optional)sub_141F4C(rawValue, v1);
}

uint64_t sub_141C4C(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x4C6F547468676972;
  else
    v3 = 0x69526F547466656CLL;
  if (v2)
    v4 = 0xEB00000000746867;
  else
    v4 = 0xEB00000000746665;
  if (*a2)
    v5 = 0x4C6F547468676972;
  else
    v5 = 0x69526F547466656CLL;
  if (*a2)
    v6 = 0xEB00000000746665;
  else
    v6 = 0xEB00000000746867;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

Swift::Int sub_141CFC()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x4C6F547468676972;
  else
    v2 = 0x69526F547466656CLL;
  if (v1)
    v3 = 0xEB00000000746665;
  else
    v3 = 0xEB00000000746867;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_141D84(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x4C6F547468676972;
  else
    v2 = 0x69526F547466656CLL;
  if (*v1)
    v3 = 0xEB00000000746665;
  else
    v3 = 0xEB00000000746867;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_141DE8(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x4C6F547468676972;
  else
    v3 = 0x69526F547466656CLL;
  if (v2)
    v4 = 0xEB00000000746665;
  else
    v4 = 0xEB00000000746867;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_141E6C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_379998;
  return sub_1421B4(v2, a1, a2);
}

void sub_141E78(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x69526F547466656CLL;
  if (*v1)
    v2 = 0x4C6F547468676972;
  v3 = 0xEB00000000746665;
  if (!*v1)
    v3 = 0xEB00000000746867;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_141EC0()
{
  _BYTE *v0;

  if (*v0)
    return 0x4C6F547468676972;
  else
    return 0x69526F547466656CLL;
}

uint64_t ScrollModeOrientation.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C61636974726576;
  else
    return 0x746E6F7A69726F68;
}

BookEPUB::ScrollModeOrientation_optional __swiftcall ScrollModeOrientation.init(rawValue:)(Swift::String rawValue)
{
  Swift::OpaquePointer v1;

  v1._rawValue = &off_3799E8;
  return (BookEPUB::ScrollModeOrientation_optional)sub_141F4C(rawValue, v1);
}

uint64_t sub_141F4C(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  Swift::Int v5;
  unsigned int v6;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v6 = 1;
  else
    v6 = 2;
  if (v5)
    return v6;
  else
    return 0;
}

uint64_t sub_141F98(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x6C61636974726576;
  else
    v3 = 0x746E6F7A69726F68;
  if (v2)
    v4 = 0xEA00000000006C61;
  else
    v4 = 0xE800000000000000;
  if (*a2)
    v5 = 0x6C61636974726576;
  else
    v5 = 0x746E6F7A69726F68;
  if (*a2)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEA00000000006C61;
  if (v3 == v5 && v4 == v6)
  {
    v8 = 1;
    v6 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v4, v5, v6, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v6);
  return v8 & 1;
}

Swift::Int sub_142044()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x6C61636974726576;
  else
    v2 = 0x746E6F7A69726F68;
  if (v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xEA00000000006C61;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1420C8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6C61636974726576;
  else
    v2 = 0x746E6F7A69726F68;
  if (*v1)
    v3 = 0xE800000000000000;
  else
    v3 = 0xEA00000000006C61;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_142128(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x6C61636974726576;
  else
    v3 = 0x746E6F7A69726F68;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xEA00000000006C61;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1421A8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::OpaquePointer v2;

  v2._rawValue = &off_3799E8;
  return sub_1421B4(v2, a1, a2);
}

uint64_t sub_1421B4@<X0>(Swift::OpaquePointer cases@<0:X3>, uint64_t *a2@<X0>, char *a3@<X8>)
{
  Swift::String v4;
  void *v5;
  Swift::Int v6;
  uint64_t result;
  char v8;

  v4._countAndFlagsBits = *a2;
  v5 = (void *)a2[1];
  v4._object = v5;
  v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  result = swift_bridgeObjectRelease(v5);
  if (v6 == 1)
    v8 = 1;
  else
    v8 = 2;
  if (!v6)
    v8 = 0;
  *a3 = v8;
  return result;
}

void sub_14220C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746E6F7A69726F68;
  if (*v1)
    v2 = 0x6C61636974726576;
  v3 = 0xEA00000000006C61;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_142250()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C61636974726576;
  else
    return 0x746E6F7A69726F68;
}

Swift::String __swiftcall DocumentEntityType.description()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  Swift::String v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  Swift::String result;

  v2 = v1;
  v3 = v0;
  _StringGuts.grow(_:)(57);
  v4._object = (void *)0x80000000002CCAD0;
  v4._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 0x3A6665726820;
  v7._object = (void *)0xE600000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v2);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 0x3A656D696D20;
  v10._object = (void *)0xE600000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v3, v2);
  v12 = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v12);
  v13._countAndFlagsBits = 0x61656E694C736920;
  v13._object = (void *)0xEA00000000003A72;
  String.append(_:)(v13);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v3, v2);
  v15 = (v14 & 1) == 0;
  if ((v14 & 1) != 0)
    v16 = 1702195828;
  else
    v16 = 0x65736C6166;
  if (v15)
    v17 = 0xE500000000000000;
  else
    v17 = 0xE400000000000000;
  v18 = v17;
  String.append(_:)(*(Swift::String *)&v16);
  swift_bridgeObjectRelease(v17);
  v19 = 0;
  v20 = (void *)0xE000000000000000;
  result._object = v20;
  result._countAndFlagsBits = v19;
  return result;
}

unint64_t DocumentEntityID.description.getter()
{
  Swift::String v0;
  void *object;
  Swift::String v2;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return 0xD000000000000011;
}

void DocumentEntityID.hash(into:)()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

uint64_t sub_142508()
{
  return 0x65756C6176;
}

uint64_t sub_14251C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v6;
  uint64_t result;
  char v8;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease(0xE500000000000000);
    v8 = 0;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65756C6176, 0xE500000000000000, a1, a2, 0);
    result = swift_bridgeObjectRelease(a2);
    v8 = v6 ^ 1;
  }
  *a3 = v8 & 1;
  return result;
}

uint64_t sub_1425A8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1453F4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1425D0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1453F4();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DocumentEntityID.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_319AC(&qword_3BDB90);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = a1[3];
  v9 = a1[4];
  sub_472D0(a1, v8);
  v10 = sub_1453F4();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for DocumentEntityID.CodingKeys, &type metadata for DocumentEntityID.CodingKeys, v10, v8, v9);
  KeyedEncodingContainer.encode(_:forKey:)(v7, v11, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int DocumentEntityID.hashValue.getter()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t DocumentEntityID.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v5 = sub_319AC(&qword_3BDBA0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_472D0(a1, v9);
  v11 = sub_1453F4();
  v12 = dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for DocumentEntityID.CodingKeys, &type metadata for DocumentEntityID.CodingKeys, v11, v9, v10);
  if (!v2)
  {
    v13 = KeyedDecodingContainer.decode(_:forKey:)(v12, v5);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v13;
  }
  return sub_34488(a1);
}

uint64_t sub_142828@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DocumentEntityID.init(from:)(a1, a2);
}

Swift::Int sub_142840(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

_QWORD *ChapterEntity.__allocating_init(href:name:indentationLevel:absoluteOrder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *result;

  result = (_QWORD *)swift_allocObject(v6, 64, 7);
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  return result;
}

_QWORD *ChapterEntity.init(href:name:indentationLevel:absoluteOrder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  return v6;
}

uint64_t sub_1428F8()
{
  _QWORD *v0;
  Swift::String v1;
  uint64_t v2;
  void *v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  void *v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  Swift::String v13;
  void *v14;

  _StringGuts.grow(_:)(92);
  v1._countAndFlagsBits = 0xD00000000000001BLL;
  v1._object = (void *)0x80000000002CCAF0;
  String.append(_:)(v1);
  v2 = v0[2];
  v3 = (void *)v0[3];
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v3);
  v5._countAndFlagsBits = 0x6D616E202020200ALL;
  v5._object = (void *)0xEC000000203D2065;
  String.append(_:)(v5);
  v6 = v0[4];
  v7 = (void *)v0[5];
  swift_bridgeObjectRetain(v7);
  v8._countAndFlagsBits = v6;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  v9._countAndFlagsBits = 0xD000000000000018;
  v9._object = (void *)0x80000000002CB610;
  String.append(_:)(v9);
  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  v12._object = (void *)0x80000000002CB630;
  v12._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v12);
  v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v14 = v13._object;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v14);
  return 0;
}

uint64_t ChapterEntity.__deallocating_deinit()
{
  return sub_142BB0(64);
}

uint64_t sub_142A8C()
{
  return sub_1428F8();
}

unint64_t sub_142AB0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;

  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1 = v0[2];
  v2 = (void *)v0[3];
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = 0x6D616E202020200ALL;
  v4._object = (void *)0xEC000000203D2065;
  String.append(_:)(v4);
  v6 = v0[4];
  v5 = (void *)v0[5];
  swift_bridgeObjectRetain(v5);
  v7._countAndFlagsBits = v6;
  v7._object = v5;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v5);
  return 0xD000000000000020;
}

uint64_t _s8BookEPUB18PhysicalPageEntityCfd_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t PhysicalPageEntity.__deallocating_deinit()
{
  return sub_142BB0(48);
}

uint64_t sub_142BB0(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 40));
  return swift_deallocClassInstance(v1, a1, 7);
}

unint64_t sub_142BE8()
{
  return sub_142AB0();
}

uint64_t sub_142C08(_QWORD **a1, _QWORD **a2)
{
  return _s8BookEPUB18PhysicalPageEntityC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t BookEntityType.sortedDocuments()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v2 = (*(uint64_t (**)(void))(a2 + 64))();
  v4 = v2;
  swift_bridgeObjectRetain(v2);
  sub_141A18(&v4);
  swift_bridgeObjectRelease(v2);
  return v4;
}

Swift::Int_optional __swiftcall BookEntityType.documentIndex(forOrdinal:)(Swift::Int forOrdinal)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Bool v12;
  Swift::Int v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  Swift::Int_optional result;

  v4 = BookEntityType.sortedDocuments()(v1, v2);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = 0;
    v8 = v4 + 32;
    while (1)
    {
      sub_49F1C(v8, (uint64_t)v14);
      v9 = v15;
      v10 = v16;
      sub_472D0(v14, v15);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
      sub_34488(v14);
      if (v11 == forOrdinal)
        break;
      ++v7;
      v8 += 40;
      if (v6 == v7)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(v5);
    v12 = 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v5);
    v7 = 0;
    v12 = 1;
  }
  v13 = v7;
  result.value = v13;
  result.is_nil = v12;
  return result;
}

Swift::Int_optional __swiftcall BookEntityType.documentOrdinal(forIndex:)(Swift::Int forIndex)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Bool v5;
  Swift::Int v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  Swift::Int_optional result;

  v4 = BookEntityType.sortedDocuments()(v1, v2);
  v6 = v4;
  v7 = *(_QWORD *)(v4 + 16);
  if (v7 > forIndex)
  {
    if (forIndex < 0)
    {
      __break(1u);
      goto LABEL_7;
    }
    sub_49F1C(v4 + 40 * forIndex + 32, (uint64_t)v11);
    swift_bridgeObjectRelease(v6);
    v9 = v12;
    v10 = v13;
    sub_472D0(v11, v12);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    sub_34488(v11);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
    v8 = 0;
  }
  v5 = v7 <= forIndex;
  v4 = v8;
LABEL_7:
  result.value = v4;
  result.is_nil = v5;
  return result;
}

Swift::Bool __swiftcall BookEntityType.hrefReferencesTableOfContents(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;
  char v7;

  v2 = (*(uint64_t (**)())(v1 + 56))();
  v4 = v3;
  v5 = String.leadingSlashesRemoved()();
  if (v4)
  {
    if (v2 == v5._countAndFlagsBits && v4 == v5._object)
      v7 = 1;
    else
      v7 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5._countAndFlagsBits, v5._object, 0);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v7 = 0;
  }
  swift_bridgeObjectRelease(v5._object);
  return v7 & 1;
}

Swift::Bool __swiftcall BookEntityType.hrefReferencesNonLinearDocument(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v4 = v1;
  v5 = String.leadingSlashesRemoved()();
  countAndFlagsBits = v5._countAndFlagsBits;
  object = v5._object;
  v8 = type metadata accessor for DocumentAnchor();
  swift_allocObject(v8, 48);
  swift_bridgeObjectRetain(v5._object);
  sub_112E00(v5._countAndFlagsBits, (unint64_t)v5._object);
  if (v9)
  {
    countAndFlagsBits = *(_QWORD *)(v9 + 16);
    v10 = *(void **)(v9 + 24);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRelease(v5._object);
    object = v10;
  }
  (*(void (**)(__int128 *__return_ptr, uint64_t, void *, uint64_t, uint64_t))(v3 + 344))(&v19, countAndFlagsBits, object, v4, v3);
  swift_bridgeObjectRelease(object);
  if (v20)
  {
    sub_3F1CC(&v19, (uint64_t)v22);
    v11 = v23;
    v12 = v24;
    sub_472D0(v22, v23);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    sub_49F1C((uint64_t)v22, (uint64_t)&v19);
    if (v13 == -1)
    {
      swift_release();
      v17 = 1;
    }
    else
    {
      v14 = v20;
      v15 = v21;
      sub_472D0(&v19, v20);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 56))(v14, v15);
      swift_release();
      v17 = v16 ^ 1;
    }
    sub_34488(&v19);
    sub_34488(v22);
  }
  else
  {
    swift_release();
    sub_52128((uint64_t)&v19, &qword_3BD428);
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t BookEntity.storeFrontID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t BookEntity.author.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 104));
  return v1;
}

uint64_t BookEntity.tocHref.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 120));
  return v1;
}

uint64_t PaginationOperation.Result.mediaFrames.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 128));
}

uint64_t PaginationOperation.Result.expandableContentFrames.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 136));
}

uint64_t BookEntity.path.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 160));
  return v1;
}

uint64_t BookEntity.collectionType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t BookEntity.baseURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB10BookEntity_baseURL;
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BookEntity.spineIndexInPackage.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_spineIndexInPackage);
}

uint64_t BookEntity.pageProgressionDirection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_pageProgressionDirection);
}

uint64_t BookEntity.scrollModeOrientation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_scrollModeOrientation);
}

uint64_t BookEntity.fixedLayoutSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_fixedLayoutSize);
}

uint64_t BookEntity.obeyPageBreaks.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_obeyPageBreaks);
}

uint64_t BookEntity.shouldAllowRemoteInspection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_shouldAllowRemoteInspection);
}

uint64_t BookEntity.respectImageSizeClassIsPrefix.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_respectImageSizeClassIsPrefix);
}

uint64_t BookEntity.shouldDisableOptimizeSpeed.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_shouldDisableOptimizeSpeed);
}

uint64_t BookEntity.respectImageSizeClass.getter()
{
  return sub_143828(&OBJC_IVAR____TtC8BookEPUB10BookEntity_respectImageSizeClass);
}

uint64_t BookEntity.bookLanguage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_bookLanguage);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_bookLanguage + 8));
  return v1;
}

uint64_t BookEntity.sample.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_sample);
}

uint64_t BookEntity.protected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protected);
}

uint64_t BookEntity.suppressTOC.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_suppressTOC);
}

uint64_t BookEntity.physicalPages.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_physicalPages));
}

uint64_t sub_143230@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2EDFB8);
  v5 = swift_getKeyPath(&unk_2EDFE0);
  static Published.subscript.getter(&v7, v3, KeyPath);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_1432AC(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2EDFB8);
  v5 = swift_getKeyPath(&unk_2EDFE0);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_14331C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2EDFB8);
  v2 = swift_getKeyPath(&unk_2EDFE0);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_14338C(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_2EDFB8);
  v4 = swift_getKeyPath(&unk_2EDFE0);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t (*sub_1433F8(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2EDFB8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2EDFE0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_143470(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*a1 + OBJC_IVAR____TtC8BookEPUB10BookEntity__preordered, v3, 33, 0);
  v1 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_1434D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  _BYTE *v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v4 = sub_319AC(&qword_3B8E20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = __chkstk_darwin(v8);
  v11 = &v17[-v10 - 8];
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16);
  v12(&v17[-v10 - 8], a1, v4, v9);
  v13 = *a2;
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v12)(v7, v11, v4);
  swift_beginAccess(v13 + OBJC_IVAR____TtC8BookEPUB10BookEntity__preordered, v17, 33, 0);
  v14 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.setter(v7, v14);
  swift_endAccess(v17);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t sub_1435E4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity__preordered, v3, 33, 0);
  v1 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_143644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = sub_319AC(&qword_3B8E20);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB10BookEntity__preordered, v11, 33, 0);
  v8 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_143718(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3B8E20);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB10BookEntity__preordered;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC((uint64_t *)&unk_3B8E70);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_3A5BC;
}

uint64_t BookEntity.hasBuiltInFonts.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_hasBuiltInFonts);
}

uint64_t BookEntity.chapters.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_chapters));
}

uint64_t BookEntity.chaptersByHref.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_chaptersByHref));
}

uint64_t BookEntity.versionNumberHumanReadable.getter()
{
  return sub_143828(&OBJC_IVAR____TtC8BookEPUB10BookEntity_versionNumberHumanReadable);
}

uint64_t BookEntity.bookDatabaseKey.getter()
{
  return sub_143828(&OBJC_IVAR____TtC8BookEPUB10BookEntity_bookDatabaseKey);
}

uint64_t sub_143828(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

BOOL sub_14385C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_physicalPages);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_physicalPages);
    else
      v4 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  }
  return v2 != 0;
}

BOOL sub_1438C4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 168) - 1 < 2;
}

uint64_t sub_1438D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = v1 & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    if (v1 == 48 && v2 == 0xE100000000000000)
      LOBYTE(v3) = 0;
    else
      LOBYTE(v3) = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 48, 0xE100000000000000, 0) ^ 1;
  }
  return v3 & 1;
}

void sub_143930(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

void *sub_143990()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1439DC(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_143A2C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t BookEntity.__allocating_init(assetID:storeID:storeFrontID:title:author:tocHref:linearDocuments:allDocuments:firstDocumentOrdinal:path:collectionType:baseURL:spineIndexInPackage:pageProgressionDirection:scrollModeOrientation:fixedLayoutSize:obeyPageBreaks:shouldAllowRemoteInspection:respectImageSizeClassIsPrefix:shouldDisableOptimizeSpeed:respectImageSizeClass:bookLanguage:sample:protected:suppressTOC:physicalPages:preordered:hasBuiltInFonts:chapters:versionNumberHumanReadable:bookDatabaseKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, unsigned __int8 a17, uint64_t a18, uint64_t a19, char a20,char a21,uint64_t a22,uint64_t a23,char a24,unsigned __int8 a25,unsigned __int8 a26,unsigned __int8 a27,unsigned __int8 a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,unsigned __int8 a34,unsigned __int8 a35,uint64_t a36,unsigned __int8 a37,unsigned __int8 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unint64_t a43)
{
  uint64_t v43;
  uint64_t v44;
  int v46;

  v46 = a6 & 1;
  swift_allocObject(v43, *(unsigned int *)(v43 + 48));
  v44 = sub_1468E4(a1, a2, a3, a4, a5, v46, a7, a8, a9, a10, a11, a12, a13, __PAIR128__(a15, a14), a16, a17, a18, a19, a20 & 1,
          a21 & 1,
          a22,
          a23,
          a24 & 1,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31,
          a32,
          a33,
          a34,
          a35,
          a36,
          a37,
          a38,
          a39,
          a40,
          a41,
          a42,
          a43);
  swift_bridgeObjectRelease(a12);
  return v44;
}

uint64_t BookEntity.init(assetID:storeID:storeFrontID:title:author:tocHref:linearDocuments:allDocuments:firstDocumentOrdinal:path:collectionType:baseURL:spineIndexInPackage:pageProgressionDirection:scrollModeOrientation:fixedLayoutSize:obeyPageBreaks:shouldAllowRemoteInspection:respectImageSizeClassIsPrefix:shouldDisableOptimizeSpeed:respectImageSizeClass:bookLanguage:sample:protected:suppressTOC:physicalPages:preordered:hasBuiltInFonts:chapters:versionNumberHumanReadable:bookDatabaseKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, unsigned __int8 a17, uint64_t a18, uint64_t a19, char a20,char a21,uint64_t a22,uint64_t a23,char a24,unsigned __int8 a25,unsigned __int8 a26,unsigned __int8 a27,unsigned __int8 a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned __int8 a33,unsigned __int8 a34,unsigned __int8 a35,uint64_t a36,unsigned __int8 a37,unsigned __int8 a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unint64_t a43)
{
  uint64_t v43;

  v43 = sub_1468E4(a1, a2, a3, a4, a5, a6 & 1, a7, a8, a9, a10, a11, a12, a13, __PAIR128__(a15, a14), a16, a17, a18, a19, a20 & 1,
          a21 & 1,
          a22,
          a23,
          a24 & 1,
          a25,
          a26,
          a27,
          a28,
          a29,
          a30,
          a31,
          a32,
          a33,
          a34,
          a35,
          a36,
          a37,
          a38,
          a39,
          a40,
          a41,
          a42,
          a43);
  swift_bridgeObjectRelease(a12);
  return v43;
}

double sub_143E04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  double result;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB10BookEntity_allDocumentsByOrdinal);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_3B7F8(a1), (v6 & 1) != 0))
  {
    sub_49F1C(*(_QWORD *)(v4 + 56) + 40 * v5, a2);
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_143E64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_143E7C(a1, a2, &OBJC_IVAR____TtC8BookEPUB10BookEntity_allDocumentsByHref, a3);
}

double sub_143E70@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_143E7C(a1, a2, &OBJC_IVAR____TtC8BookEPUB10BookEntity_documentsByManifestID, a3);
}

double sub_143E7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v9;
  char v10;
  double result;

  v6 = *(_QWORD *)(v4 + *a3);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain(a2);
    v9 = sub_3B8A0(a1, a2);
    if ((v10 & 1) != 0)
    {
      sub_49F1C(*(_QWORD *)(v6 + 56) + 40 * v9, a4);
    }
    else
    {
      *(_QWORD *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
    }
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_143F14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  v5 = v2 + 32;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 128));
  while (1)
  {
    sub_49F1C(v5, (uint64_t)v10);
    v6 = v11;
    v7 = v12;
    sub_472D0(v10, v11);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
    sub_34488(v10);
    if (v8 == a1)
      break;
    v5 += 40;
    if (!--v3)
    {
      swift_bridgeObjectRelease(v2);
      return 0;
    }
  }
  swift_bridgeObjectRelease(v2);
  return 1;
}

id sub_143FD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id result;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[2];

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  sub_472D0(a1, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  v17 = v16;
  v40[0] = v15;
  v40[1] = v16;
  if (qword_3B57B0 != -1)
    swift_once(&qword_3B57B0, sub_145A0C);
  v18 = type metadata accessor for CharacterSet(0);
  v19 = sub_555F0(v18, (uint64_t)qword_3CF118);
  v20 = sub_5C170();
  v21 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v19, &type metadata for String, v20);
  if (v22)
  {
    v23 = v21;
    v24 = v22;
    v25 = HIBYTE(v22) & 0xF;
    if ((v22 & 0x2000000000000000) == 0)
      v25 = v21 & 0xFFFFFFFFFFFFLL;
    if (v25)
    {
      swift_bridgeObjectRelease(v17);
      v26 = v3 + OBJC_IVAR____TtC8BookEPUB10BookEntity_baseURL;
      v27 = type metadata accessor for URL(0);
      v28 = *(_QWORD *)(v27 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v12, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v12, 0, 1, v27);
      URL.init(string:relativeTo:)(v23, v24, v12);
      swift_bridgeObjectRelease(v24);
      return (id)sub_52128((uint64_t)v12, (uint64_t *)&unk_3B8C50);
    }
    swift_bridgeObjectRelease(v22);
  }
  result = _BookEPUBLog();
  if (result)
  {
    Logger.init(_:)(result);
    swift_bridgeObjectRetain(v17);
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.error.getter(v31);
    if (os_log_type_enabled(v31, v32))
    {
      v38 = v6;
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      v40[0] = v34;
      v37 = v7;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain(v17);
      v39 = sub_33524(v15, v17, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v33 + 4);
      swift_bridgeObjectRelease_n(v17, 3);
      _os_log_impl(&dword_0, v31, v32, "Failed to encode document href %s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
    }
    else
    {

      swift_bridgeObjectRelease_n(v17, 2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    v35 = type metadata accessor for URL(0);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a2, 1, 1, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_14434C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[5];

  v7 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 1, 1, v10);
  v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB10BookEntity_allDocumentsByHref);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain(a2);
    v12 = sub_3B8A0(a1, a2);
    if ((v13 & 1) != 0)
    {
      sub_49F1C(*(_QWORD *)(v11 + 56) + 40 * v12, (uint64_t)&v15);
      swift_bridgeObjectRelease(a2);
      if (*((_QWORD *)&v16 + 1))
      {
        sub_3F1CC(&v15, (uint64_t)v18);
        sub_143FD4(v18, (uint64_t)v9);
        sub_34488(v18);
        sub_52128(a3, (uint64_t *)&unk_3B8C50);
        return sub_8927C((uint64_t)v9, a3);
      }
    }
    else
    {
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
      swift_bridgeObjectRelease(a2);
    }
  }
  else
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
  }
  return sub_52128((uint64_t)&v15, &qword_3BD428);
}

_QWORD *BookEntity.deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[13]);
  swift_bridgeObjectRelease(v0[15]);
  swift_bridgeObjectRelease(v0[16]);
  swift_bridgeObjectRelease(v0[17]);
  swift_bridgeObjectRelease(v0[20]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_baseURL;
  v2 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_respectImageSizeClass + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_bookLanguage + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_physicalPages));
  v3 = (char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity__preordered;
  v4 = sub_319AC((uint64_t *)&unk_3B8E70);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_chapters));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_chaptersByHref));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_versionNumberHumanReadable
                                                   + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_bookDatabaseKey + 8));

  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_allDocumentsByOrdinal));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_allDocumentsByHref));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_documentsByManifestID));
  return v0;
}

uint64_t BookEntity.__deallocating_deinit()
{
  uint64_t v0;

  BookEntity.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_14464C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 24));
  return v1;
}

uint64_t sub_14467C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 40));
  return v1;
}

uint64_t sub_1446AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return v1;
}

uint64_t sub_1446DC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 64);
}

uint64_t sub_1446EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 88));
  return v1;
}

uint64_t sub_14471C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 104));
  return v1;
}

uint64_t sub_14474C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 120));
  return v1;
}

uint64_t sub_14477C()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 128));
}

uint64_t sub_144788()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 136));
}

uint64_t sub_144794()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 144);
}

uint64_t sub_1447A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)v0 + 160));
  return v1;
}

uint64_t sub_1447D0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 168);
}

uint64_t sub_1447DC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8BookEPUB10BookEntity_baseURL;
  v4 = type metadata accessor for URL(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_144824()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_spineIndexInPackage);
}

uint64_t sub_144838()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_pageProgressionDirection);
}

uint64_t sub_14484C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_scrollModeOrientation);
}

uint64_t sub_144860()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_fixedLayoutSize);
}

uint64_t sub_14487C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_obeyPageBreaks);
}

uint64_t sub_144890()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_shouldAllowRemoteInspection);
}

uint64_t sub_1448A4()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_respectImageSizeClassIsPrefix);
}

uint64_t sub_1448B8()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_shouldDisableOptimizeSpeed);
}

uint64_t sub_1448CC(uint64_t a1, uint64_t a2)
{
  return sub_144CD4(a1, a2, &OBJC_IVAR____TtC8BookEPUB10BookEntity_respectImageSizeClass);
}

uint64_t sub_1448D8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_bookLanguage);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_144914()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_sample);
}

uint64_t sub_144928()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protected);
}

uint64_t sub_14493C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_suppressTOC);
}

uint64_t sub_144950()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  KeyPath = swift_getKeyPath(&unk_2EDFB8);
  v3 = swift_getKeyPath(&unk_2EDFE0);
  static Published.subscript.getter(&v5, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v3);
  return v5;
}

uint64_t sub_1449C4(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v3 = *v1;
  KeyPath = swift_getKeyPath(&unk_2EDFB8);
  v5 = swift_getKeyPath(&unk_2EDFE0);
  v7 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t (*sub_144A34(_QWORD *a1))()
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = *v1;
  KeyPath = swift_getKeyPath(&unk_2EDFB8);
  v3[4] = KeyPath;
  v6 = swift_getKeyPath(&unk_2EDFE0);
  v3[5] = v6;
  v3[6] = static Published.subscript.modify(v3, v4, KeyPath, v6);
  return sub_37800;
}

uint64_t sub_144AB0()
{
  _QWORD *v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity__preordered, v3, 33, 0);
  v1 = sub_319AC((uint64_t *)&unk_3B8E70);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t sub_144B14()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_hasBuiltInFonts);
}

uint64_t sub_144B28()
{
  _QWORD *v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_chapters));
}

uint64_t sub_144B3C()
{
  _QWORD *v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_chaptersByHref));
}

void *sub_144B50()
{
  _QWORD *v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem);
  swift_beginAccess(v1, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_144BA0(void *a1)
{
  _QWORD *v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(*v1 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_144BF4(uint64_t a1))(_QWORD)
{
  _QWORD *v1;

  swift_beginAccess(*v1 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_144C3C()
{
  _QWORD *v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_physicalPages));
}

BOOL sub_144C50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_physicalPages);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v4 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8BookEPUB10BookEntity_physicalPages);
    else
      v4 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
  }
  return v2 != 0;
}

uint64_t sub_144CBC(uint64_t a1, uint64_t a2)
{
  return sub_144CD4(a1, a2, &OBJC_IVAR____TtC8BookEPUB10BookEntity_versionNumberHumanReadable);
}

uint64_t sub_144CC8(uint64_t a1, uint64_t a2)
{
  return sub_144CD4(a1, a2, &OBJC_IVAR____TtC8BookEPUB10BookEntity_bookDatabaseKey);
}

uint64_t sub_144CD4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;

  v4 = (uint64_t *)(*v3 + *a3);
  v5 = *v4;
  swift_bridgeObjectRetain(v4[1]);
  return v5;
}

double sub_144D0C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_143E04(a1, a2);
}

double sub_144D2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_143E64(a1, a2, a3);
}

double sub_144D4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_143E70(a1, a2, a3);
}

uint64_t sub_144D6C(uint64_t a1)
{
  return sub_143F14(a1) & 1;
}

id sub_144D90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_143FD4(a1, a2);
}

uint64_t sub_144DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_14434C(a1, a2, a3);
}

BOOL sub_144DD0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)v0 + 168) - 1 < 2;
}

uint64_t sub_144DE8()
{
  return sub_1438D8() & 1;
}

uint64_t sub_144E0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess(*a2 + 16, v7, 1, 0);
  v5 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_144E68()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 16, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_144EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 16, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*sub_144F00(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_144F3C()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 32, v2, 0, 0);
  return *(_QWORD *)(v0 + 32);
}

void sub_144F6C(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 32, v3, 1, 0);
  *(_QWORD *)(v1 + 32) = a1;
}

void sub_144FA8(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 40, v3, 1, 0);
  *(_QWORD *)(v1 + 40) = a1;
}

uint64_t (*sub_144FE4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 40, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_145020(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess(*a2 + 48, v7, 1, 0);
  v5 = *(_QWORD *)(v4 + 56);
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_14507C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 48, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t sub_1450C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 48, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*sub_145114(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 48, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_145150()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 64, v2, 0, 0);
  return *(_QWORD *)(v0 + 64);
}

void sub_145180(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 64, v3, 1, 0);
  *(_QWORD *)(v1 + 64) = a1;
}

uint64_t (*sub_1451BC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 64, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1451F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess(*a2 + 72, v7, 1, 0);
  v5 = *(_QWORD *)(v4 + 80);
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 80) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_145254()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 72, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 80));
  return v1;
}

uint64_t sub_14529C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 72, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*sub_1452EC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 72, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_145328()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 88);
}

void sub_145358(char a1)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 88, v3, 1, 0);
  *(_BYTE *)(v1 + 88) = a1;
}

uint64_t (*sub_145394(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 88, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t DocumentEntity.init(href:ordinal:linearDocumentIndex:nonLinear:manifestId:fileSize:mime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a6;
  *(_QWORD *)(v10 + 56) = a7;
  *(_QWORD *)(v10 + 64) = a8;
  *(_QWORD *)(v10 + 72) = a9;
  *(_QWORD *)(v10 + 80) = a10;
  *(_BYTE *)(v10 + 88) = a5;
  return v10;
}

unint64_t sub_1453F4()
{
  unint64_t result;

  result = qword_3BDB98;
  if (!qword_3BDB98)
  {
    result = swift_getWitnessTable(&unk_2EE7BC, &type metadata for DocumentEntityID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3BDB98);
  }
  return result;
}

uint64_t sub_145438()
{
  uint64_t v0;
  char v1;
  uint64_t v3;
  _BYTE v4[24];

  swift_beginAccess(v0 + 32, v4, 0, 0);
  if (*(_QWORD *)(v0 + 32) == -1)
  {
    v1 = 0;
  }
  else
  {
    swift_beginAccess(v0 + 88, &v3, 0, 0);
    v1 = *(_BYTE *)(v0 + 88) ^ 1;
  }
  return v1 & 1;
}

_QWORD *DocumentEntity.deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[10]);
  return v0;
}

uint64_t DocumentEntity.__deallocating_deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocClassInstance(v0, 89, 7);
}

uint64_t sub_1454F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = *v0;
  swift_beginAccess(v1 + 16, v4, 0, 0);
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 24));
  return v2;
}

uint64_t sub_145544()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 32, v3, 0, 0);
  return *(_QWORD *)(v1 + 32);
}

uint64_t sub_145580()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 40, v3, 0, 0);
  return *(_QWORD *)(v1 + 40);
}

uint64_t sub_1455BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = *v0;
  swift_beginAccess(v1 + 48, v4, 0, 0);
  v2 = *(_QWORD *)(v1 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 56));
  return v2;
}

uint64_t sub_145608()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 64, v3, 0, 0);
  return *(_QWORD *)(v1 + 64);
}

uint64_t sub_145644()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = *v0;
  swift_beginAccess(v1 + 72, v4, 0, 0);
  v2 = *(_QWORD *)(v1 + 72);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 80));
  return v2;
}

uint64_t sub_145690()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v4;
  _BYTE v5[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 32, v5, 0, 0);
  if (*(_QWORD *)(v1 + 32) == -1)
  {
    v2 = 0;
  }
  else
  {
    swift_beginAccess(v1 + 88, &v4, 0, 0);
    v2 = *(_BYTE *)(v1 + 88) ^ 1;
  }
  return v2 & 1;
}

uint64_t DocumentEntity.description.getter()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  Swift::String v5;
  void *v6;
  Swift::String v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  Swift::String v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD v27[3];
  _BYTE v28[24];
  _BYTE v29[24];
  _BYTE v30[24];
  _QWORD v31[3];
  _QWORD v32[3];
  _QWORD v33[3];
  uint64_t v34;
  unint64_t v35;

  v33[0] = 0;
  v33[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(95);
  v34 = 0;
  v35 = 0xE000000000000000;
  v1._countAndFlagsBits = 0x3A6C616E6964726FLL;
  v1._object = (void *)0xE900000000000020;
  String.append(_:)(v1);
  swift_beginAccess(v0 + 32, v33, 0, 0);
  v32[0] = *(_QWORD *)(v0 + 32);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._object = (void *)0x80000000002CCB40;
  v4._countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v4);
  swift_beginAccess(v0 + 40, v32, 0, 0);
  v31[0] = *(_QWORD *)(v0 + 40);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  v6 = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v6);
  v7._countAndFlagsBits = 0x736566696E616D0ALL;
  v7._object = (void *)0xED0000203A644974;
  String.append(_:)(v7);
  swift_beginAccess(v0 + 48, v31, 0, 0);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = *(void **)(v0 + 56);
  swift_bridgeObjectRetain(v9);
  v10._countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 0x203A666572680ALL;
  v11._object = (void *)0xE700000000000000;
  String.append(_:)(v11);
  swift_beginAccess(v0 + 16, v30, 0, 0);
  v12 = *(_QWORD *)(v0 + 16);
  v13 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v13);
  v14._countAndFlagsBits = v12;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 0x203A656D696D0ALL;
  v15._object = (void *)0xE700000000000000;
  String.append(_:)(v15);
  swift_beginAccess(v0 + 72, v29, 0, 0);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = *(void **)(v0 + 80);
  swift_bridgeObjectRetain(v17);
  v18._countAndFlagsBits = v16;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  v19._countAndFlagsBits = 0x7A6953656C69660ALL;
  v19._object = (void *)0xEB00000000203A65;
  String.append(_:)(v19);
  swift_beginAccess(v0 + 64, v28, 0, 0);
  v27[0] = *(_QWORD *)(v0 + 64);
  v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v21 = v20._object;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v21);
  v22._countAndFlagsBits = 0x656E694C6E6F6E0ALL;
  v22._object = (void *)0xEC000000203A7261;
  String.append(_:)(v22);
  swift_beginAccess(v0 + 88, v27, 0, 0);
  if (*(_BYTE *)(v0 + 88))
    v23 = 1702195828;
  else
    v23 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 88))
    v24 = 0xE400000000000000;
  else
    v24 = 0xE500000000000000;
  v25 = v24;
  String.append(_:)(*(Swift::String *)&v23);
  swift_bridgeObjectRelease(v24);
  return v34;
}

uint64_t sub_1459EC()
{
  return DocumentEntity.description.getter();
}

uint64_t sub_145A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v8;

  v0 = type metadata accessor for CharacterSet(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_55F54(v4, qword_3CF118);
  v5 = sub_555F0(v0, (uint64_t)qword_3CF118);
  v6 = objc_msgSend((id)objc_opt_self(NSCharacterSet), "be_allowedURLPathCharacterSet");
  static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();

  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
}

void sub_145AD4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  Swift::Int v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  Swift::Int v34;
  uint64_t v35;
  Swift::Int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  char *v108;
  char *v109;
  _QWORD *v110;
  Swift::Int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  Swift::Int v115;
  Swift::Int v116;
  Swift::Int v117;
  Swift::Int v118;
  char *__dst;
  _QWORD v120[3];
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v2 = v1;
  v3 = a1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_134;
    if (v4)
      sub_146328(0, v4, 1, v3);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_142;
  v111 = v5;
  if (v4 < 2)
  {
    v10 = (char *)_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    v110 = _swiftEmptyArrayStorage;
    if (v4 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      if (v12 < 2)
      {
LABEL_111:
        swift_bridgeObjectRelease(v10);
        v110[2] = 0;
        swift_bridgeObjectRelease(v110);
        return;
      }
LABEL_99:
      v102 = *v3;
      while (1)
      {
        v103 = v12 - 2;
        if (v12 < 2)
          goto LABEL_129;
        if (!v102)
          goto LABEL_141;
        v104 = *(_QWORD *)&v10[16 * v103 + 32];
        v105 = *(_QWORD *)&v10[16 * v12 + 24];
        sub_14648C((char *)(v102 + 40 * v104), (char *)(v102 + 40 * *(_QWORD *)&v10[16 * v12 + 16]), v102 + 40 * v105, __dst);
        if (v2)
          goto LABEL_111;
        if (v105 < v104)
          goto LABEL_130;
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
          v10 = sub_1D34BC((uint64_t)v10);
        if (v103 >= *((_QWORD *)v10 + 2))
          goto LABEL_131;
        v106 = &v10[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v10 + 2);
        if (v12 > v107)
          goto LABEL_132;
        memmove(&v10[16 * v12 + 16], &v10[16 * v12 + 32], 16 * (v107 - v12));
        *((_QWORD *)v10 + 2) = v107 - 1;
        v12 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_111;
      }
    }
    v126 = v1;
  }
  else
  {
    v126 = v1;
    v7 = v6 >> 1;
    v8 = sub_319AC((uint64_t *)&unk_3BBDF0);
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)(v9 + 16) = v7;
    v110 = (_QWORD *)v9;
    __dst = (char *)(v9 + 32);
  }
  v11 = 0;
  v10 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v13 = v11++;
    v117 = v13;
    if (v11 < v4)
    {
      v14 = *v3;
      sub_49F1C(*v3 + 40 * v11, (uint64_t)&v123);
      sub_49F1C(v14 + 40 * v13, (uint64_t)v120);
      v15 = v124;
      v16 = v125;
      sub_472D0(&v123, v124);
      v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
      v17 = v121;
      v18 = v122;
      sub_472D0(v120, v121);
      v113 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
      sub_34488(v120);
      sub_34488(&v123);
      v11 = v13 + 2;
      v112 = v14;
      if (v13 + 2 < v4)
      {
        v108 = v10;
        v19 = v14 + 40 * v13 + 40;
        while (1)
        {
          v20 = v19 + 40;
          sub_49F1C(v19 + 40, (uint64_t)&v123);
          sub_49F1C(v19, (uint64_t)v120);
          v21 = v124;
          v22 = v125;
          sub_472D0(&v123, v124);
          v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
          v25 = v121;
          v24 = v122;
          sub_472D0(v120, v121);
          v26 = v23 >= (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v25, v24);
          sub_34488(v120);
          sub_34488(&v123);
          if (v114 < v113 == v26)
            break;
          ++v11;
          v19 = v20;
          if (v4 == v11)
          {
            v11 = v4;
            break;
          }
        }
        v10 = v108;
        v13 = v117;
      }
      if (v114 < v113)
      {
        if (v11 < v13)
          goto LABEL_135;
        if (v13 < v11)
        {
          v115 = v4;
          v27 = 40 * v11 - 40;
          v28 = v13;
          v29 = 40 * v13;
          v30 = v11;
          do
          {
            if (v28 != --v30)
            {
              if (!v112)
                goto LABEL_140;
              v31 = v112 + v29;
              sub_3F1CC((__int128 *)(v112 + v29), (uint64_t)&v123);
              v32 = *(_QWORD *)(v112 + v27 + 32);
              v33 = *(_OWORD *)(v112 + v27 + 16);
              *(_OWORD *)v31 = *(_OWORD *)(v112 + v27);
              *(_OWORD *)(v31 + 16) = v33;
              *(_QWORD *)(v31 + 32) = v32;
              sub_3F1CC(&v123, v112 + v27);
            }
            ++v28;
            v27 -= 40;
            v29 += 40;
          }
          while (v28 < v30);
          v4 = v115;
          v13 = v117;
        }
      }
    }
    if (v11 >= v4)
      goto LABEL_49;
    if (__OFSUB__(v11, v13))
      goto LABEL_133;
    if (v11 - v13 >= v111)
      goto LABEL_49;
    if (__OFADD__(v13, v111))
      goto LABEL_136;
    v34 = v13 + v111 >= v4 ? v4 : v13 + v111;
    if (v34 < v13)
      break;
    if (v11 != v34)
    {
      v109 = v10;
      v35 = 40 * v11 - 40;
      v116 = v34;
      do
      {
        v36 = v13;
        v37 = v35;
        do
        {
          v38 = *v3 + v37;
          sub_49F1C(v38 + 40, (uint64_t)&v123);
          sub_49F1C(v38, (uint64_t)v120);
          v39 = v124;
          v40 = v125;
          sub_472D0(&v123, v124);
          v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40);
          v42 = v121;
          v43 = v122;
          sub_472D0(v120, v121);
          v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 16))(v42, v43);
          sub_34488(v120);
          sub_34488(&v123);
          if (v41 >= v44)
            break;
          v45 = *v3;
          if (!*v3)
            goto LABEL_138;
          v46 = v45 + v37;
          sub_3F1CC((__int128 *)(v45 + v37 + 40), (uint64_t)&v123);
          v47 = *(_OWORD *)(v46 + 16);
          *(_OWORD *)(v46 + 40) = *(_OWORD *)v46;
          *(_OWORD *)(v46 + 56) = v47;
          *(_QWORD *)(v46 + 72) = *(_QWORD *)(v46 + 32);
          sub_3F1CC(&v123, v46);
          v37 -= 40;
          ++v36;
        }
        while (v11 != v36);
        ++v11;
        v35 += 40;
        v13 = v117;
      }
      while (v11 != v116);
      v11 = v116;
      v10 = v109;
    }
LABEL_49:
    if (v11 < v13)
      goto LABEL_128;
    if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
      v10 = sub_1D3038(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v49 = *((_QWORD *)v10 + 2);
    v48 = *((_QWORD *)v10 + 3);
    v12 = v49 + 1;
    if (v49 >= v48 >> 1)
      v10 = sub_1D3038((char *)(v48 > 1), v49 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v12;
    v50 = v10 + 32;
    v51 = &v10[16 * v49 + 32];
    *(_QWORD *)v51 = v13;
    *((_QWORD *)v51 + 1) = v11;
    if (v49)
    {
      v118 = v11;
      while (1)
      {
        v52 = v12 - 1;
        if (v12 >= 4)
        {
          v57 = &v50[16 * v12];
          v58 = *((_QWORD *)v57 - 8);
          v59 = *((_QWORD *)v57 - 7);
          v63 = __OFSUB__(v59, v58);
          v60 = v59 - v58;
          if (v63)
            goto LABEL_117;
          v62 = *((_QWORD *)v57 - 6);
          v61 = *((_QWORD *)v57 - 5);
          v63 = __OFSUB__(v61, v62);
          v55 = v61 - v62;
          v56 = v63;
          if (v63)
            goto LABEL_118;
          v64 = v12 - 2;
          v65 = &v50[16 * v12 - 32];
          v67 = *(_QWORD *)v65;
          v66 = *((_QWORD *)v65 + 1);
          v63 = __OFSUB__(v66, v67);
          v68 = v66 - v67;
          if (v63)
            goto LABEL_120;
          v63 = __OFADD__(v55, v68);
          v69 = v55 + v68;
          if (v63)
            goto LABEL_123;
          if (v69 >= v60)
          {
            v87 = &v50[16 * v52];
            v89 = *(_QWORD *)v87;
            v88 = *((_QWORD *)v87 + 1);
            v63 = __OFSUB__(v88, v89);
            v90 = v88 - v89;
            if (v63)
              goto LABEL_127;
            v80 = v55 < v90;
            goto LABEL_87;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v81 = *((_QWORD *)v10 + 4);
            v82 = *((_QWORD *)v10 + 5);
            v63 = __OFSUB__(v82, v81);
            v74 = v82 - v81;
            v75 = v63;
            goto LABEL_81;
          }
          v54 = *((_QWORD *)v10 + 4);
          v53 = *((_QWORD *)v10 + 5);
          v63 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          v56 = v63;
        }
        if ((v56 & 1) != 0)
          goto LABEL_119;
        v64 = v12 - 2;
        v70 = &v50[16 * v12 - 32];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v73 = __OFSUB__(v71, v72);
        v74 = v71 - v72;
        v75 = v73;
        if (v73)
          goto LABEL_122;
        v76 = &v50[16 * v52];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v63 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v63)
          goto LABEL_125;
        if (__OFADD__(v74, v79))
          goto LABEL_126;
        if (v74 + v79 >= v55)
        {
          v80 = v55 < v79;
LABEL_87:
          if (v80)
            v52 = v64;
          goto LABEL_89;
        }
LABEL_81:
        if ((v75 & 1) != 0)
          goto LABEL_121;
        v83 = &v50[16 * v52];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v63 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v63)
          goto LABEL_124;
        if (v86 < v74)
          goto LABEL_15;
LABEL_89:
        v91 = v52 - 1;
        if (v52 - 1 >= v12)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        v92 = v3;
        v93 = *v3;
        if (!*v3)
          goto LABEL_139;
        v94 = v10;
        v95 = &v50[16 * v91];
        v96 = *(_QWORD *)v95;
        v97 = v52;
        v98 = &v50[16 * v52];
        v99 = *((_QWORD *)v98 + 1);
        v100 = v126;
        sub_14648C((char *)(v93 + 40 * *(_QWORD *)v95), (char *)(v93 + 40 * *(_QWORD *)v98), v93 + 40 * v99, __dst);
        v126 = v100;
        if (v100)
        {
          v10 = v94;
          goto LABEL_111;
        }
        if (v99 < v96)
          goto LABEL_114;
        if (v97 > *((_QWORD *)v94 + 2))
          goto LABEL_115;
        *(_QWORD *)v95 = v96;
        *(_QWORD *)&v50[16 * v91 + 8] = v99;
        v101 = *((_QWORD *)v94 + 2);
        if (v97 >= v101)
          goto LABEL_116;
        v10 = v94;
        v12 = v101 - 1;
        memmove(v98, v98 + 16, 16 * (v101 - 1 - v97));
        *((_QWORD *)v94 + 2) = v101 - 1;
        v3 = v92;
        v11 = v118;
        if (v101 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v4 = v3[1];
    if (v11 >= v4)
    {
      v2 = v126;
      if (v12 < 2)
        goto LABEL_111;
      goto LABEL_99;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_146328(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = result;
  if (a3 != a2)
  {
    v5 = a3;
    v6 = 40 * a3 - 40;
LABEL_5:
    v7 = v26;
    v8 = v6;
    while (1)
    {
      v9 = *a4 + v8;
      sub_49F1C(v9 + 40, (uint64_t)&v23);
      sub_49F1C(v9, (uint64_t)v20);
      v10 = v24;
      v11 = v25;
      sub_472D0(&v23, v24);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
      v13 = v21;
      v14 = v22;
      sub_472D0(v20, v21);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
      sub_34488(v20);
      result = sub_34488(&v23);
      if (v12 >= v15)
      {
LABEL_4:
        ++v5;
        v6 += 40;
        if (v5 == a2)
          return result;
        goto LABEL_5;
      }
      v16 = *a4;
      if (!*a4)
        break;
      v17 = v16 + v8;
      sub_3F1CC((__int128 *)(v16 + v8 + 40), (uint64_t)&v23);
      v18 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)(v17 + 40) = *(_OWORD *)v17;
      *(_OWORD *)(v17 + 56) = v18;
      *(_QWORD *)(v17 + 72) = *(_QWORD *)(v17 + 32);
      result = sub_3F1CC(&v23, v17);
      v8 -= 40;
      if (v5 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_14648C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  uint64_t result;
  char *v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;

  v4 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v54 = __src;
  v53 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -39)
      goto LABEL_42;
    if (__dst != a2 || &a2[40 * v11] <= __dst)
      memmove(__dst, a2, 40 * v11);
    v26 = &v4[40 * v11];
    v52 = v26;
    v54 = v6;
    if (__src >= v6 || v10 < 40)
      goto LABEL_41;
    v27 = a3 - 40;
    v45 = __src;
    while (1)
    {
      v32 = (char *)(v27 + 40);
      sub_49F1C((uint64_t)(v26 - 40), (uint64_t)v49);
      v30 = v6 - 40;
      sub_49F1C((uint64_t)(v6 - 40), (uint64_t)v46);
      v33 = v50;
      v34 = v51;
      sub_472D0(v49, v50);
      v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
      v36 = v47;
      v37 = v48;
      sub_472D0(v46, v47);
      v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
      sub_34488(v46);
      sub_34488(v49);
      if (v35 < v38)
        break;
      v41 = v52;
      v26 = v52 - 40;
      v52 -= 40;
      if (v32 < v41 || v27 >= (unint64_t)v41)
      {
        v28 = *(_OWORD *)v26;
        v29 = *(_OWORD *)(v41 - 24);
        *(_QWORD *)(v27 + 32) = *((_QWORD *)v41 - 1);
        *(_OWORD *)v27 = v28;
        *(_OWORD *)(v27 + 16) = v29;
        v30 = v6;
        goto LABEL_29;
      }
      v31 = v45;
      if (v32 != v41)
      {
        v42 = *(_OWORD *)v26;
        v43 = *(_OWORD *)(v41 - 24);
        *(_QWORD *)(v27 + 32) = *((_QWORD *)v41 - 1);
        *(_OWORD *)v27 = v42;
        *(_OWORD *)(v27 + 16) = v43;
      }
      v30 = v6;
      if (v26 <= v4)
        goto LABEL_41;
LABEL_30:
      v27 -= 40;
      v6 = v30;
      if (v30 <= v31)
        goto LABEL_41;
    }
    if (v32 != v6 || v27 >= (unint64_t)v6)
    {
      v39 = *(_OWORD *)v30;
      v40 = *(_OWORD *)(v6 - 24);
      *(_QWORD *)(v27 + 32) = *((_QWORD *)v6 - 1);
      *(_OWORD *)v27 = v39;
      *(_OWORD *)(v27 + 16) = v40;
    }
    v54 -= 40;
    v26 = v52;
LABEL_29:
    v31 = v45;
    if (v26 <= v4)
      goto LABEL_41;
    goto LABEL_30;
  }
  if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst)
      memmove(__dst, __src, 40 * v9);
    v12 = (unint64_t)&v4[40 * v9];
    v52 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        sub_49F1C((uint64_t)v6, (uint64_t)v49);
        sub_49F1C((uint64_t)v4, (uint64_t)v46);
        v13 = v50;
        v14 = v51;
        sub_472D0(v49, v50);
        v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
        v16 = v47;
        v17 = v48;
        sub_472D0(v46, v47);
        v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
        sub_34488(v46);
        sub_34488(v49);
        v19 = v54;
        if (v15 >= v18)
        {
          v23 = v53 + 40;
          if (v54 != v53 || v54 >= v23)
          {
            v24 = *(_OWORD *)v53;
            v25 = *((_OWORD *)v53 + 1);
            *((_QWORD *)v54 + 4) = *((_QWORD *)v53 + 4);
            *v19 = v24;
            v19[1] = v25;
          }
          v53 = v23;
          v20 = (unint64_t)v6;
        }
        else
        {
          v20 = (unint64_t)(v6 + 40);
          if (v54 >= v6 && (unint64_t)v54 < v20 && v54 == v6)
          {
            v19 = v6;
          }
          else
          {
            v21 = *(_OWORD *)v6;
            v22 = *((_OWORD *)v6 + 1);
            *((_QWORD *)v54 + 4) = *((_QWORD *)v6 + 4);
            *v19 = v21;
            v19[1] = v22;
          }
        }
        v54 = (char *)v19 + 40;
        v4 = v53;
        if ((unint64_t)v53 >= v12)
          break;
        v6 = (char *)v20;
      }
      while (v20 < a3);
    }
LABEL_41:
    sub_1D31DC((void **)&v54, (const void **)&v53, &v52);
    return 1;
  }
LABEL_42:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t _s8BookEPUB18PhysicalPageEntityC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[2];
  v7 = a2[3];
  v8 = v4 == v6 && v5 == v7;
  if (v8 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0), result = 0, (v9 & 1) != 0))
  {
    v11 = a1[4];
    v12 = a1[5];
    v13 = a2[4];
    v14 = a2[5];
    if (v11 == v13 && v12 == v14)
      return 1;
    else
      return _stringCompareWithSmolCheck(_:_:expecting:)(v11, v12, v13, v14, 0);
  }
  return result;
}

uint64_t sub_1468E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, __int128 a14, uint64_t a15, unsigned __int8 a16, uint64_t a17, uint64_t a18, char a19, char a20,uint64_t a21,uint64_t a22,unsigned __int8 a23,unsigned __int8 a24,unsigned __int8 a25,unsigned __int8 a26,unsigned __int8 a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned __int8 a32,unsigned __int8 a33,unsigned __int8 a34,uint64_t a35,unsigned __int8 a36,unsigned __int8 a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v90;
  unint64_t v91;
  uint64_t v92;
  _BOOL8 v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  char v97;
  _QWORD *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  unint64_t v124;
  uint64_t v125;
  _BOOL8 v126;
  uint64_t v127;
  char v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  BOOL v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  unint64_t v144;
  uint64_t v145;
  _BOOL8 v146;
  uint64_t v147;
  char v148;
  unint64_t v149;
  char v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  __n128 v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  unint64_t v166;
  uint64_t v167;
  _BOOL8 v168;
  uint64_t v169;
  char v170;
  unint64_t v171;
  char v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t result;
  __int128 v177;
  int v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  int v195;
  int v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  int v203;
  int v204;
  uint64_t v205;
  int v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  __int128 v216;
  _QWORD v217[2];
  uint64_t v218;
  uint64_t v219;

  v43 = v42;
  v194 = a8;
  v192 = a7;
  LODWORD(v191) = a6;
  v189 = a5;
  v186 = a4;
  v185 = a3;
  v183 = a2;
  v181 = a1;
  v210 = a12;
  v211 = a13;
  v212 = a41;
  v213 = a42;
  v214 = a38;
  v208 = a39;
  v209 = a40;
  v206 = a36;
  v207 = a37;
  v205 = a35;
  v203 = a33;
  v204 = a34;
  v202 = a32;
  v201 = a31;
  v200 = a30;
  v199 = a29;
  v198 = a28;
  v197 = a27;
  v196 = a26;
  v195 = a25;
  v179 = a14;
  v177 = a9;
  v182 = a19 & 1;
  v184 = a20 & 1;
  v193 = a24;
  v190 = a23;
  v188 = a22;
  v187 = a21;
  v180 = a18;
  v178 = a16;
  v44 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v47 = (char *)&v177 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()(v48);
  v50 = UUID.uuidString.getter(v49);
  v52 = v51;
  v53 = v47;
  v54 = v214;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v53, v44);
  *(_QWORD *)(v43 + 48) = v50;
  *(_QWORD *)(v43 + 56) = v52;
  *(_QWORD *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem) = 0;
  v55 = v183;
  *(_QWORD *)(v43 + 16) = v181;
  *(_QWORD *)(v43 + 24) = v55;
  v56 = v186;
  *(_QWORD *)(v43 + 32) = v185;
  *(_QWORD *)(v43 + 40) = v56;
  *(_QWORD *)(v43 + 64) = v189;
  *(_BYTE *)(v43 + 72) = v191 & 1;
  v57 = v194;
  *(_QWORD *)(v43 + 80) = v192;
  *(_QWORD *)(v43 + 88) = v57;
  *(_OWORD *)(v43 + 96) = v177;
  *(_QWORD *)(v43 + 112) = a10;
  *(_QWORD *)(v43 + 120) = a11;
  v59 = v210;
  v58 = v211;
  *(_QWORD *)(v43 + 128) = v210;
  *(_QWORD *)(v43 + 136) = v58;
  *(_OWORD *)(v43 + 144) = v179;
  *(_QWORD *)(v43 + 160) = a15;
  *(_BYTE *)(v43 + 168) = v178;
  v60 = v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_baseURL;
  v61 = type metadata accessor for URL(0);
  v191 = *(_QWORD *)(v61 - 8);
  v62 = *(void (**)(uint64_t, uint64_t))(v191 + 16);
  v194 = a17;
  v192 = v61;
  v62(v60, a17);
  *(_QWORD *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_spineIndexInPackage) = v180;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_pageProgressionDirection) = v182;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_scrollModeOrientation) = v184;
  v63 = v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_fixedLayoutSize;
  v64 = v188;
  *(_QWORD *)v63 = v187;
  *(_QWORD *)(v63 + 8) = v64;
  *(_BYTE *)(v63 + 16) = v190 & 1;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_obeyPageBreaks) = v193;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_shouldAllowRemoteInspection) = v195;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_respectImageSizeClassIsPrefix) = v196;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_shouldDisableOptimizeSpeed) = v197;
  v65 = (_QWORD *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_respectImageSizeClass);
  v66 = v199;
  *v65 = v198;
  v65[1] = v66;
  v67 = (_QWORD *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_bookLanguage);
  v68 = v201;
  *v67 = v200;
  v67[1] = v68;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_sample) = v202;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protected) = v203;
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_suppressTOC) = v204;
  *(_QWORD *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_physicalPages) = v205;
  swift_beginAccess(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity__preordered, v217, 33, 0);
  LOBYTE(v216) = v206;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRetain(v58);
  Published.init(initialValue:)(&v216, &type metadata for Bool);
  swift_endAccess(v217);
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_hasBuiltInFonts) = v207;
  *(_QWORD *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_chapters) = v54;
  v69 = (_QWORD *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_versionNumberHumanReadable);
  v70 = v209;
  *v69 = v208;
  v69[1] = v70;
  v209 = v43;
  v71 = (uint64_t *)(v43 + OBJC_IVAR____TtC8BookEPUB10BookEntity_bookDatabaseKey);
  v72 = v213;
  *v71 = v212;
  v71[1] = v72;
  swift_bridgeObjectRetain(v54);
  v73 = (_QWORD *)sub_389DC((uint64_t)_swiftEmptyArrayStorage);
  if ((unint64_t)v54 >> 62)
    goto LABEL_31;
  v74 = *(_QWORD *)((char *)&dword_10 + (v54 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v54);
  while (v74)
  {
    v212 = v74;
    v213 = v54 & 0xC000000000000001;
    v75 = 4;
    while (1)
    {
      v76 = v75 - 4;
      if (!v213)
        break;
      v77 = specialized _ArrayBuffer._getElementSlowPath(_:)(v75 - 4, v54);
      v78 = v75 - 3;
      if (__OFADD__(v76, 1))
        goto LABEL_28;
LABEL_9:
      v79 = *(_QWORD *)(v77 + 24);
      v217[0] = *(_QWORD *)(v77 + 16);
      v217[1] = v79;
      v80 = sub_5C170();
      swift_bridgeObjectRetain(v79);
      v81 = (_QWORD *)StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)(35, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, &type metadata for String, v80);
      swift_bridgeObjectRelease(v79);
      if (v81[2])
      {
        v82 = v81[4];
        v83 = v81[5];
        v84 = v81[6];
        v85 = v81[7];
        swift_bridgeObjectRetain(v85);
        swift_bridgeObjectRelease(v81);
        v86 = static String._fromSubstring(_:)(v82, v83, v84, v85);
        v88 = v87;
        swift_bridgeObjectRelease(v85);
      }
      else
      {
        swift_bridgeObjectRelease(v81);
        v86 = *(_QWORD *)(v77 + 16);
        v88 = *(_QWORD *)(v77 + 24);
        swift_bridgeObjectRetain(v88);
      }
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v73);
      v217[0] = v73;
      v54 = (uint64_t)v73;
      v91 = sub_3B8A0(v86, v88);
      v92 = v73[2];
      v93 = (v90 & 1) == 0;
      v94 = v92 + v93;
      if (__OFADD__(v92, v93))
        goto LABEL_29;
      v95 = v90;
      if (v73[3] >= v94)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_F3EF4();
      }
      else
      {
        sub_F0AB4(v94, isUniquelyReferenced_nonNull_native);
        v96 = sub_3B8A0(v86, v88);
        if ((v95 & 1) != (v97 & 1))
          goto LABEL_89;
        v91 = v96;
      }
      v73 = (_QWORD *)v217[0];
      swift_bridgeObjectRelease(0x8000000000000000);
      v98 = v73;
      if ((v95 & 1) == 0)
      {
        v73[(v91 >> 6) + 8] |= 1 << v91;
        v99 = (uint64_t *)(v73[6] + 16 * v91);
        *v99 = v86;
        v99[1] = v88;
        *(_QWORD *)(v73[7] + 8 * v91) = _swiftEmptyArrayStorage;
        v100 = v73[2];
        v101 = v100 + 1;
        v54 = __OFADD__(v100, 1);
        swift_bridgeObjectRetain(v73);
        if ((v54 & 1) != 0)
          goto LABEL_30;
        v73[2] = v101;
        v98 = (_QWORD *)v88;
      }
      swift_bridgeObjectRetain(v98);
      v102 = v73[7];
      swift_bridgeObjectRelease(v73);
      v103 = (_QWORD *)(v102 + 8 * v91);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v104);
      v106 = *(_QWORD *)((char *)&dword_10 + (*v103 & 0xFFFFFFFFFFFFFF8));
      v105 = *(_QWORD *)((char *)&dword_18 + (*v103 & 0xFFFFFFFFFFFFFF8));
      if (v106 >= v105 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v105 > 1, v106 + 1, 1);
      v107 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v77);
      specialized Array._endMutation()(v107);
      swift_release();
      swift_bridgeObjectRelease(v88);
      ++v75;
      v54 = v214;
      if (v78 == v212)
        goto LABEL_35;
    }
    v77 = *(_QWORD *)(v54 + 8 * v75);
    swift_retain();
    v78 = v75 - 3;
    if (!__OFADD__(v76, 1))
      goto LABEL_9;
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    if (v54 < 0)
      v108 = v54;
    else
      v108 = v54 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v54, 2);
    v74 = _CocoaArrayWrapper.endIndex.getter(v108);
    swift_bridgeObjectRelease(v54);
  }
LABEL_35:
  swift_bridgeObjectRelease_n(v54, 2);
  v109 = v209;
  *(_QWORD *)(v209 + OBJC_IVAR____TtC8BookEPUB10BookEntity_chaptersByHref) = v73;
  v110 = v109;
  v111 = sub_3D8A8((uint64_t)_swiftEmptyArrayStorage);
  v112 = (_QWORD *)v111;
  v113 = v211;
  v114 = *(_QWORD *)(v211 + 16);
  if (!v114)
  {
    *(_QWORD *)(v110 + OBJC_IVAR____TtC8BookEPUB10BookEntity_allDocumentsByOrdinal) = v111;
    v135 = (_QWORD *)sub_389E8((uint64_t)_swiftEmptyArrayStorage);
LABEL_66:
    swift_bridgeObjectRelease(v113);
    *(_QWORD *)(v110 + OBJC_IVAR____TtC8BookEPUB10BookEntity_allDocumentsByHref) = v135;
    v154 = (_QWORD *)sub_389E8((uint64_t)_swiftEmptyArrayStorage);
    v156 = *(_QWORD *)(v210 + 16);
    if (!v156)
    {
LABEL_82:
      (*(void (**)(uint64_t, uint64_t, __n128))(v191 + 8))(v194, v192, v155);
      result = v209;
      *(_QWORD *)(v209 + OBJC_IVAR____TtC8BookEPUB10BookEntity_documentsByManifestID) = v154;
      return result;
    }
    v157 = v210 + 32;
    swift_bridgeObjectRetain(v210);
    while (1)
    {
      sub_49F1C(v157, (uint64_t)v217);
      v159 = v218;
      v160 = v219;
      sub_472D0(v217, v218);
      v161 = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 32))(v159, v160);
      v163 = v162;
      sub_49F1C((uint64_t)v217, (uint64_t)&v216);
      v164 = swift_isUniquelyReferenced_nonNull_native(v154);
      v215 = v154;
      v166 = sub_3B8A0(v161, v163);
      v167 = v154[2];
      v168 = (v165 & 1) == 0;
      v169 = v167 + v168;
      if (__OFADD__(v167, v168))
        goto LABEL_85;
      v170 = v165;
      if (v154[3] >= v169)
      {
        if ((v164 & 1) != 0)
        {
          v154 = v215;
          if ((v165 & 1) == 0)
            goto LABEL_77;
        }
        else
        {
          sub_F3B48();
          v154 = v215;
          if ((v170 & 1) == 0)
            goto LABEL_77;
        }
      }
      else
      {
        sub_F04CC(v169, v164);
        v171 = sub_3B8A0(v161, v163);
        if ((v170 & 1) != (v172 & 1))
          goto LABEL_89;
        v166 = v171;
        v154 = v215;
        if ((v170 & 1) == 0)
        {
LABEL_77:
          v154[(v166 >> 6) + 8] |= 1 << v166;
          v173 = (uint64_t *)(v154[6] + 16 * v166);
          *v173 = v161;
          v173[1] = v163;
          sub_3F1CC(&v216, v154[7] + 40 * v166);
          v174 = v154[2];
          v132 = __OFADD__(v174, 1);
          v175 = v174 + 1;
          if (v132)
            goto LABEL_88;
          v154[2] = v175;
          swift_bridgeObjectRetain(v163);
          goto LABEL_69;
        }
      }
      v158 = (_QWORD *)(v154[7] + 40 * v166);
      sub_34488(v158);
      sub_3F1CC(&v216, (uint64_t)v158);
LABEL_69:
      swift_bridgeObjectRelease(v163);
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_34488(v217);
      v157 += 40;
      if (!--v156)
      {
        v155 = swift_bridgeObjectRelease(v210);
        goto LABEL_82;
      }
    }
  }
  v115 = v211 + 32;
  swift_bridgeObjectRetain(v211);
  v116 = v113 + 32;
  v214 = v114;
  v117 = v114;
  while (1)
  {
    sub_49F1C(v116, (uint64_t)v217);
    v119 = v218;
    v120 = v219;
    sub_472D0(v217, v218);
    v121 = (*(uint64_t (**)(uint64_t, uint64_t))(v120 + 16))(v119, v120);
    sub_49F1C((uint64_t)v217, (uint64_t)&v216);
    v122 = swift_isUniquelyReferenced_nonNull_native(v112);
    v215 = v112;
    v124 = sub_3B7F8(v121);
    v125 = v112[2];
    v126 = (v123 & 1) == 0;
    v127 = v125 + v126;
    if (__OFADD__(v125, v126))
      break;
    v128 = v123;
    if (v112[3] >= v127)
    {
      if ((v122 & 1) != 0)
      {
        v112 = v215;
        if ((v123 & 1) == 0)
          goto LABEL_46;
      }
      else
      {
        sub_F3D30();
        v112 = v215;
        if ((v128 & 1) == 0)
          goto LABEL_46;
      }
    }
    else
    {
      sub_F07F0(v127, v122);
      v129 = sub_3B7F8(v121);
      if ((v128 & 1) != (v130 & 1))
        goto LABEL_90;
      v124 = v129;
      v112 = v215;
      if ((v128 & 1) == 0)
      {
LABEL_46:
        v112[(v124 >> 6) + 8] |= 1 << v124;
        *(_QWORD *)(v112[6] + 8 * v124) = v121;
        sub_3F1CC(&v216, v112[7] + 40 * v124);
        v131 = v112[2];
        v132 = __OFADD__(v131, 1);
        v133 = v131 + 1;
        if (v132)
          goto LABEL_86;
        v112[2] = v133;
        goto LABEL_38;
      }
    }
    v118 = (_QWORD *)(v112[7] + 40 * v124);
    sub_34488(v118);
    sub_3F1CC(&v216, (uint64_t)v118);
LABEL_38:
    swift_bridgeObjectRelease(0x8000000000000000);
    sub_34488(v217);
    v116 += 40;
    if (!--v117)
    {
      v134 = v211;
      swift_bridgeObjectRelease(v211);
      v110 = v209;
      *(_QWORD *)(v209 + OBJC_IVAR____TtC8BookEPUB10BookEntity_allDocumentsByOrdinal) = v112;
      v135 = (_QWORD *)sub_389E8((uint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRetain(v134);
      while (1)
      {
        sub_49F1C(v115, (uint64_t)v217);
        v137 = v218;
        v138 = v219;
        sub_472D0(v217, v218);
        v139 = (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 8))(v137, v138);
        v141 = v140;
        sub_49F1C((uint64_t)v217, (uint64_t)&v216);
        v142 = swift_isUniquelyReferenced_nonNull_native(v135);
        v215 = v135;
        v144 = sub_3B8A0(v139, v141);
        v145 = v135[2];
        v146 = (v143 & 1) == 0;
        v147 = v145 + v146;
        if (__OFADD__(v145, v146))
          goto LABEL_84;
        v148 = v143;
        if (v135[3] >= v147)
        {
          if ((v142 & 1) != 0)
          {
            v135 = v215;
            if ((v143 & 1) == 0)
              goto LABEL_60;
          }
          else
          {
            sub_F3B48();
            v135 = v215;
            if ((v148 & 1) == 0)
              goto LABEL_60;
          }
        }
        else
        {
          sub_F04CC(v147, v142);
          v149 = sub_3B8A0(v139, v141);
          if ((v148 & 1) != (v150 & 1))
            goto LABEL_89;
          v144 = v149;
          v135 = v215;
          if ((v148 & 1) == 0)
          {
LABEL_60:
            v135[(v144 >> 6) + 8] |= 1 << v144;
            v151 = (uint64_t *)(v135[6] + 16 * v144);
            *v151 = v139;
            v151[1] = v141;
            sub_3F1CC(&v216, v135[7] + 40 * v144);
            v152 = v135[2];
            v132 = __OFADD__(v152, 1);
            v153 = v152 + 1;
            if (v132)
              goto LABEL_87;
            v135[2] = v153;
            swift_bridgeObjectRetain(v141);
            goto LABEL_52;
          }
        }
        v136 = (_QWORD *)(v135[7] + 40 * v144);
        sub_34488(v136);
        sub_3F1CC(&v216, (uint64_t)v136);
LABEL_52:
        swift_bridgeObjectRelease(v141);
        swift_bridgeObjectRelease(0x8000000000000000);
        sub_34488(v217);
        v115 += 40;
        if (!--v214)
        {
          v113 = v211;
          swift_bridgeObjectRelease(v211);
          goto LABEL_66;
        }
      }
    }
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_90:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

unint64_t sub_147674()
{
  unint64_t result;

  result = qword_3BDBC8;
  if (!qword_3BDBC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BookType, &type metadata for BookType);
    atomic_store(result, (unint64_t *)&qword_3BDBC8);
  }
  return result;
}

unint64_t sub_1476BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3BDBD0;
  if (!qword_3BDBD0)
  {
    v1 = sub_31A38(&qword_3BDBD8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3BDBD0);
  }
  return result;
}

unint64_t sub_14770C()
{
  unint64_t result;

  result = qword_3BDBE0;
  if (!qword_3BDBE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PageProgressDirection, &type metadata for PageProgressDirection);
    atomic_store(result, (unint64_t *)&qword_3BDBE0);
  }
  return result;
}

unint64_t sub_147754()
{
  unint64_t result;

  result = qword_3BDBE8;
  if (!qword_3BDBE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ScrollModeOrientation, &type metadata for ScrollModeOrientation);
    atomic_store(result, (unint64_t *)&qword_3BDBE8);
  }
  return result;
}

unint64_t sub_14779C()
{
  unint64_t result;

  result = qword_3BDBF0;
  if (!qword_3BDBF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DocumentEntityID, &type metadata for DocumentEntityID);
    atomic_store(result, (unint64_t *)&qword_3BDBF0);
  }
  return result;
}

id sub_1477E8@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_14783C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 16, v6, 0, 0);
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain(v4);
}

void sub_147888(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE v4[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 32, v4, 0, 0);
  *a2 = *(_QWORD *)(v3 + 32);
}

void sub_1478CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 32, v4, 1, 0);
  *(_QWORD *)(v3 + 32) = v2;
}

void sub_14790C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE v4[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 40, v4, 0, 0);
  *a2 = *(_QWORD *)(v3 + 40);
}

void sub_147950(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 40, v4, 1, 0);
  *(_QWORD *)(v3 + 40) = v2;
}

uint64_t sub_147990@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 48, v6, 0, 0);
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = *(_QWORD *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain(v4);
}

void sub_1479DC(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _BYTE v4[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 64, v4, 0, 0);
  *a2 = *(_QWORD *)(v3 + 64);
}

void sub_147A20(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 64, v4, 1, 0);
  *(_QWORD *)(v3 + 64) = v2;
}

uint64_t sub_147A60@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 72, v6, 0, 0);
  v4 = *(_QWORD *)(v3 + 80);
  *a2 = *(_QWORD *)(v3 + 72);
  a2[1] = v4;
  return swift_bridgeObjectRetain(v4);
}

void sub_147AAC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  _BYTE v4[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 88, v4, 0, 0);
  *a2 = *(_BYTE *)(v3 + 88);
}

void sub_147AF0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 88, v4, 1, 0);
  *(_BYTE *)(v3 + 88) = v2;
}

uint64_t storeEnumTagSinglePayload for BookType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_147B7C + 4 * byte_2EDF9D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_147BB0 + 4 * byte_2EDF98[v4]))();
}

uint64_t sub_147BB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_147BB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x147BC0);
  return result;
}

uint64_t sub_147BCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x147BD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_147BD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_147BE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookType()
{
  return &type metadata for BookType;
}

ValueMetadata *type metadata accessor for PageProgressDirection()
{
  return &type metadata for PageProgressDirection;
}

uint64_t _s8BookEPUB21PageProgressDirectionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_147C5C + 4 * byte_2EDFA7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_147C90 + 4 * byte_2EDFA2[v4]))();
}

uint64_t sub_147C90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_147C98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x147CA0);
  return result;
}

uint64_t sub_147CAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x147CB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_147CB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_147CC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScrollModeOrientation()
{
  return &type metadata for ScrollModeOrientation;
}

ValueMetadata *type metadata accessor for DocumentEntityID()
{
  return &type metadata for DocumentEntityID;
}

uint64_t type metadata accessor for ChapterEntity()
{
  return objc_opt_self(_TtC8BookEPUB13ChapterEntity);
}

uint64_t method lookup function for ChapterEntity(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ChapterEntity);
}

uint64_t dispatch thunk of ChapterEntity.__allocating_init(href:name:indentationLevel:absoluteOrder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for PhysicalPageEntity()
{
  return objc_opt_self(_TtC8BookEPUB18PhysicalPageEntity);
}

uint64_t method lookup function for PhysicalPageEntity(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PhysicalPageEntity);
}

uint64_t dispatch thunk of PhysicalPageEntity.__allocating_init(href:name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Stack.stackContents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of BookEntityType.storeFrontID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BookEntityType.pageProgressionDirection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))() & 1;
}

uint64_t dispatch thunk of BookEntityType.scrollModeOrientation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))() & 1;
}

uint64_t dispatch thunk of BookEntityType.fixedLayoutSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of ContentLoading.prepareForReuse()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of BookContentLayoutProviding.logKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of BookEntityType.protected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of ContentLoading.clearSelection()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of BookEntityType.chaptersByHref.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of ContentLoading.convertToUI(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of ContentLoading.resumeMediaContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of BookEntityType.versionNumberHumanReadable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of BookEntityType.bookDatabaseKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of ContentLoading.updateLineGuideEnabledState(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of BookEntityType.document(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 344))();
}

uint64_t dispatch thunk of BookEntityType.document(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 352))();
}

uint64_t dispatch thunk of BookEntityType.ordinalIsInLinearDocuments(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

uint64_t dispatch thunk of BookEntityType.urlFor(documentEntity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of BookEntityType.urlFor(href:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 376))();
}

uint64_t dispatch thunk of BookEntityType.isFixedLayout.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of BookEntityType.isStoreBook.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t sub_147E78()
{
  return type metadata accessor for BookEntity(0);
}

uint64_t type metadata accessor for BookEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_3BDD90;
  if (!qword_3BDD90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookEntity);
  return result;
}

void sub_147EBC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[37];

  v6[0] = &unk_2EE5E8;
  v6[1] = &unk_2EE5E8;
  v6[2] = &unk_2EE5E8;
  v6[3] = &unk_2EE600;
  v6[4] = &unk_2EE5E8;
  v6[5] = &unk_2EE5E8;
  v6[6] = &unk_2EE618;
  v6[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[9] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[10] = &unk_2EE5E8;
  v6[11] = &unk_2EE630;
  v2 = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v6[12] = *(_QWORD *)(v2 - 8) + 64;
    v6[13] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[14] = &unk_2EE648;
    v6[15] = &unk_2EE648;
    v6[16] = &unk_2EE660;
    v6[17] = &unk_2EE648;
    v6[18] = &unk_2EE648;
    v6[19] = &unk_2EE648;
    v6[20] = &unk_2EE648;
    v6[21] = &unk_2EE618;
    v6[22] = &unk_2EE5E8;
    v6[23] = &unk_2EE648;
    v6[24] = &unk_2EE648;
    v6[25] = &unk_2EE648;
    v6[26] = (char *)&value witness table for Builtin.BridgeObject + 64;
    sub_B2A7C();
    if (v5 <= 0x3F)
    {
      v6[27] = *(_QWORD *)(v4 - 8) + 64;
      v6[28] = &unk_2EE648;
      v6[29] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[30] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[31] = &unk_2EE618;
      v6[32] = &unk_2EE618;
      v6[33] = &unk_2EE678;
      v6[34] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[35] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[36] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_updateClassMetadata2(a1, 256, 37, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for BookEntity(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookEntity);
}

uint64_t dispatch thunk of SearchViewModel.searchPage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of BookEntity.preordered.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of BookEntity.$preordered.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of SearchViewModel.$searchPage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of BookEntity.$preordered.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of BookEntity.documents.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of SearchViewModel.webSearchLink.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of ReadingSettingsManager.readingLoupeActiveDimming.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of BookEntity.__allocating_init(assetID:storeID:storeFrontID:title:author:tocHref:linearDocuments:allDocuments:firstDocumentOrdinal:path:collectionType:baseURL:spineIndexInPackage:pageProgressionDirection:scrollModeOrientation:fixedLayoutSize:obeyPageBreaks:shouldAllowRemoteInspection:respectImageSizeClassIsPrefix:shouldDisableOptimizeSpeed:respectImageSizeClass:bookLanguage:sample:protected:suppressTOC:physicalPages:preordered:hasBuiltInFonts:chapters:versionNumberHumanReadable:bookDatabaseKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  LOWORD(a21) = a21 & 0x101;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 488))(a1, a2, a3, a4, a5, a6 & 1, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t dispatch thunk of BookEntity.document(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of BookEntity.document(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ReadingSettingsManager.readingLoupeAllowable.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of BookEntity.urlFor(documentEntity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of BookEntity.urlFor(href:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t type metadata accessor for DocumentEntity()
{
  return objc_opt_self(_TtC8BookEPUB14DocumentEntity);
}

uint64_t method lookup function for DocumentEntity(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DocumentEntity);
}

uint64_t dispatch thunk of SearchViewModel.searchResults.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DocumentEntity.mime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DocumentEntity.mime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of SearchViewModel.loadingTitle.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DocumentEntity.__allocating_init(href:ordinal:linearDocumentIndex:nonLinear:manifestId:fileSize:mime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t storeEnumTagSinglePayload for DocumentEntityID.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1482BC + 4 * byte_2EDFAC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1482DC + 4 * byte_2EDFB1[v4]))();
}

_BYTE *sub_1482BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1482DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1482E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1482EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1482F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1482FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DocumentEntityID.CodingKeys()
{
  return &type metadata for DocumentEntityID.CodingKeys;
}

unint64_t sub_14831C()
{
  unint64_t result;

  result = qword_3BE158;
  if (!qword_3BE158)
  {
    result = swift_getWitnessTable(&unk_2EE794, &type metadata for DocumentEntityID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3BE158);
  }
  return result;
}

unint64_t sub_148364()
{
  unint64_t result;

  result = qword_3BE160;
  if (!qword_3BE160)
  {
    result = swift_getWitnessTable(&unk_2EE704, &type metadata for DocumentEntityID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3BE160);
  }
  return result;
}

unint64_t sub_1483AC()
{
  unint64_t result;

  result = qword_3BE168;
  if (!qword_3BE168)
  {
    result = swift_getWitnessTable(&unk_2EE72C, &type metadata for DocumentEntityID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_3BE168);
  }
  return result;
}

_QWORD *sub_148404(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_F50A8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      objc_msgSend(v5, "CGRectValue");
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;

      v16 = _swiftEmptyArrayStorage[2];
      v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1)
        sub_F50A8(v15 > 1, v16 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      v17 = &_swiftEmptyArrayStorage[4 * v16];
      v17[4] = v8;
      v17[5] = v10;
      v17[6] = v12;
      v17[7] = v14;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

_QWORD *sub_148574(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v16;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  while (v2)
  {
    v16 = v1 & 0xC000000000000001;
    v3 = _swiftEmptyArrayStorage;
    v4 = 4;
    v5 = v1;
    while (1)
    {
      v6 = v4 - 4;
      if (!v16)
        break;
      v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v1);
      v8 = v4 - 3;
      if (__OFADD__(v6, 1))
        goto LABEL_15;
LABEL_9:
      v9 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      swift_bridgeObjectRetain(v10);
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_42140(0, v3[2] + 1, 1, v3);
      v12 = v3[2];
      v11 = v3[3];
      if (v12 >= v11 >> 1)
        v3 = sub_42140((_QWORD *)(v11 > 1), v12 + 1, 1, v3);
      v3[2] = v12 + 1;
      v13 = &v3[2 * v12];
      v13[4] = v9;
      v13[5] = v10;
      ++v4;
      v1 = v5;
      if (v8 == v2)
        goto LABEL_21;
    }
    v7 = *(_QWORD *)(v1 + 8 * v4);
    swift_retain();
    v8 = v4 - 3;
    if (!__OFADD__(v6, 1))
      goto LABEL_9;
LABEL_15:
    __break(1u);
LABEL_16:
    if (v1 < 0)
      v14 = v1;
    else
      v14 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
  }
  v3 = _swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease(v1);
  return v3;
}

uint64_t sub_1486F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a2);
  v8 = a2;
  sub_156330(a1, (uint64_t)sub_FA368, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease(0x8000000000000000);
  if (v2)
    swift_bridgeObjectRelease(v6);
  return v6;
}

void sub_148774(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_319AC((uint64_t *)&unk_3BBF10);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v35 = a1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 64);
  v34 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v7 << 6);
      v13 = v7;
    }
    else
    {
      v14 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_38;
      if (v14 >= v34)
      {
LABEL_35:
        sub_89AA0(a1);
        return;
      }
      v15 = *(_QWORD *)(v35 + 8 * v14);
      v13 = v7 + 1;
      if (!v15)
      {
        v13 = v7 + 2;
        if (v7 + 2 >= v34)
          goto LABEL_35;
        v15 = *(_QWORD *)(v35 + 8 * v13);
        if (!v15)
        {
          v13 = v7 + 3;
          if (v7 + 3 >= v34)
            goto LABEL_35;
          v15 = *(_QWORD *)(v35 + 8 * v13);
          if (!v15)
          {
            v13 = v7 + 4;
            if (v7 + 4 >= v34)
              goto LABEL_35;
            v15 = *(_QWORD *)(v35 + 8 * v13);
            if (!v15)
            {
              v16 = v7 + 5;
              if (v7 + 5 >= v34)
                goto LABEL_35;
              v15 = *(_QWORD *)(v35 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v13 >= v34)
                    goto LABEL_35;
                  v15 = *(_QWORD *)(v35 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    v21 = objc_opt_self(NSString);
    v22 = swift_dynamicCastObjCClass(v20, v21);
    if (!v22)
      goto LABEL_34;
    v23 = v22;
    v36 = 0;
    v37 = 0;
    swift_bridgeObjectRetain(v18);
    v24 = v20;
    static String._conditionallyBridgeFromObjectiveC(_:result:)(v23, &v36);

    v25 = v37;
    if (!v37)
    {
      swift_bridgeObjectRelease(v18);
LABEL_34:
      sub_89AA0(a1);
      swift_release();
      return;
    }
    v26 = v36;
    v27 = sub_3B8A0(v19, v18);
    if ((v28 & 1) != 0)
    {
      v8 = 16 * v27;
      v9 = (uint64_t *)(v3[6] + 16 * v27);
      swift_bridgeObjectRelease(v9[1]);
      *v9 = v19;
      v9[1] = v18;
      v10 = (_QWORD *)(v3[7] + v8);
      swift_bridgeObjectRelease(v10[1]);
      *v10 = v26;
      v10[1] = v25;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v27;
    v29 = (uint64_t *)(v3[6] + 16 * v27);
    *v29 = v19;
    v29[1] = v18;
    v30 = (_QWORD *)(v3[7] + 16 * v27);
    *v30 = v26;
    v30[1] = v25;
    v31 = v3[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_37;
    v3[2] = v33;
LABEL_8:
    v7 = v13;
    v6 = v11;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_148A94(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  _OWORD v40[2];
  uint64_t v41;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    sub_319AC(a2);
    v5 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v4);
  }
  else
  {
    v5 = &_swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v6 = -1;
  v7 = -1 << *(_BYTE *)(a1 + 32);
  if (-v7 < 64)
    v6 = ~(-1 << -(char)v7);
  v8 = v6 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v7) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (1)
  {
    if (v8)
    {
      v12 = (v8 - 1) & v8;
      v13 = __clz(__rbit64(v8)) | (v9 << 6);
      v14 = v9;
    }
    else
    {
      v15 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_39;
      if (v15 >= v30)
      {
LABEL_36:
        sub_89AA0(a1);
        return;
      }
      v16 = *(_QWORD *)(v31 + 8 * v15);
      v14 = v9 + 1;
      if (!v16)
      {
        v14 = v9 + 2;
        if (v9 + 2 >= v30)
          goto LABEL_36;
        v16 = *(_QWORD *)(v31 + 8 * v14);
        if (!v16)
        {
          v14 = v9 + 3;
          if (v9 + 3 >= v30)
            goto LABEL_36;
          v16 = *(_QWORD *)(v31 + 8 * v14);
          if (!v16)
          {
            v14 = v9 + 4;
            if (v9 + 4 >= v30)
              goto LABEL_36;
            v16 = *(_QWORD *)(v31 + 8 * v14);
            if (!v16)
            {
              v17 = v9 + 5;
              if (v9 + 5 >= v30)
                goto LABEL_36;
              v16 = *(_QWORD *)(v31 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  v14 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_40;
                  if (v14 >= v30)
                    goto LABEL_36;
                  v16 = *(_QWORD *)(v31 + 8 * v14);
                  ++v17;
                  if (v16)
                    goto LABEL_26;
                }
              }
              v14 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v12 = (v16 - 1) & v16;
      v13 = __clz(__rbit64(v16)) + (v14 << 6);
    }
    sub_3F110(*(_QWORD *)(a1 + 48) + 40 * v13, (uint64_t)v39);
    sub_344A8(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v40 + 8);
    v37[0] = v40[0];
    v37[1] = v40[1];
    v38 = v41;
    v36[0] = v39[0];
    v36[1] = v39[1];
    sub_3F110((uint64_t)v36, (uint64_t)v35);
    if (!swift_dynamicCast(&v33, v35, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v33 = 0;
      v34 = 0;
      sub_52128((uint64_t)v36, &qword_3B9390);
      v29 = v34;
LABEL_35:
      swift_bridgeObjectRelease(v29);
      sub_89AA0(a1);
      swift_release();
      return;
    }
    v18 = v33;
    v19 = v34;
    sub_344A8((uint64_t)v37 + 8, (uint64_t)v35);
    sub_52128((uint64_t)v36, &qword_3B9390);
    v20 = sub_319AC(a3);
    if ((swift_dynamicCast(&v33, v35, (char *)&type metadata for Any + 8, v20, 6) & 1) == 0)
    {
      v33 = 0;
      swift_bridgeObjectRelease(v19);
      v29 = v33;
      goto LABEL_35;
    }
    v21 = v33;
    v22 = sub_3B8A0(v18, v19);
    v23 = v22;
    if ((v24 & 1) != 0)
    {
      v10 = (uint64_t *)(v5[6] + 16 * v22);
      swift_bridgeObjectRelease(v10[1]);
      *v10 = v18;
      v10[1] = v19;
      v11 = v5[7];
      swift_bridgeObjectRelease(*(_QWORD *)(v11 + 8 * v23));
      *(_QWORD *)(v11 + 8 * v23) = v21;
      goto LABEL_8;
    }
    if (v5[2] >= v5[3])
      break;
    *(_QWORD *)((char *)v5 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v22;
    v25 = (uint64_t *)(v5[6] + 16 * v22);
    *v25 = v18;
    v25[1] = v19;
    *(_QWORD *)(v5[7] + 8 * v22) = v21;
    v26 = v5[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_38;
    v5[2] = v28;
LABEL_8:
    v9 = v14;
    v8 = v12;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_148E60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  _OWORD v37[2];
  _OWORD v38[2];
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[2];
  uint64_t v42;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_319AC(&qword_3BBF58);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v32 = v1 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 64);
  v7 = (char *)v41 + 8;
  v8 = (char *)v38 + 8;
  v31 = (unint64_t)(63 - v5) >> 6;
  swift_bridgeObjectRetain(v1);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v14 = (v6 - 1) & v6;
      v15 = __clz(__rbit64(v6)) | (v9 << 6);
      v16 = v9;
    }
    else
    {
      v17 = v9 + 1;
      if (__OFADD__(v9, 1))
        goto LABEL_39;
      if (v17 >= v31)
      {
LABEL_36:
        sub_89AA0(v1);
        return;
      }
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v16 = v9 + 1;
      if (!v18)
      {
        v16 = v9 + 2;
        if (v9 + 2 >= v31)
          goto LABEL_36;
        v18 = *(_QWORD *)(v32 + 8 * v16);
        if (!v18)
        {
          v16 = v9 + 3;
          if (v9 + 3 >= v31)
            goto LABEL_36;
          v18 = *(_QWORD *)(v32 + 8 * v16);
          if (!v18)
          {
            v16 = v9 + 4;
            if (v9 + 4 >= v31)
              goto LABEL_36;
            v18 = *(_QWORD *)(v32 + 8 * v16);
            if (!v18)
            {
              v19 = v9 + 5;
              if (v9 + 5 >= v31)
                goto LABEL_36;
              v18 = *(_QWORD *)(v32 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  v16 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_40;
                  if (v16 >= v31)
                    goto LABEL_36;
                  v18 = *(_QWORD *)(v32 + 8 * v16);
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v16 = v9 + 5;
            }
          }
        }
      }
LABEL_26:
      v14 = (v18 - 1) & v18;
      v15 = __clz(__rbit64(v18)) + (v16 << 6);
    }
    sub_3F110(*(_QWORD *)(v1 + 48) + 40 * v15, (uint64_t)v40);
    sub_344A8(*(_QWORD *)(v1 + 56) + 32 * v15, (uint64_t)v7);
    v38[0] = v41[0];
    v38[1] = v41[1];
    v39 = v42;
    v37[0] = v40[0];
    v37[1] = v40[1];
    sub_3F110((uint64_t)v37, (uint64_t)v36);
    if (!swift_dynamicCast(&v34, v36, &type metadata for AnyHashable, &type metadata for String, 6))
    {
      v34 = 0;
      v35 = 0;
      sub_52128((uint64_t)v37, &qword_3B9390);
      v30 = v35;
LABEL_35:
      swift_bridgeObjectRelease(v30);
      sub_89AA0(v1);
      swift_release();
      return;
    }
    v21 = v34;
    v20 = v35;
    sub_344A8((uint64_t)v8, (uint64_t)v36);
    sub_52128((uint64_t)v37, &qword_3B9390);
    if ((swift_dynamicCast(&v34, v36, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
    {
      v34 = 0;
      LOBYTE(v35) = 1;
      v30 = v20;
      goto LABEL_35;
    }
    v33 = v16;
    v22 = v34;
    v23 = sub_3B8A0(v21, v20);
    v24 = v23;
    if ((v25 & 1) != 0)
    {
      v10 = v1;
      v11 = v8;
      v12 = v7;
      v13 = (uint64_t *)(v3[6] + 16 * v23);
      swift_bridgeObjectRelease(v13[1]);
      *v13 = v21;
      v13[1] = v20;
      v7 = v12;
      v8 = v11;
      v1 = v10;
      *(_QWORD *)(v3[7] + 8 * v24) = v22;
      goto LABEL_8;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v23;
    v26 = (uint64_t *)(v3[6] + 16 * v23);
    *v26 = v21;
    v26[1] = v20;
    *(_QWORD *)(v3[7] + 8 * v23) = v22;
    v27 = v3[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_38;
    v3[2] = v29;
LABEL_8:
    v9 = v33;
    v6 = v14;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_149220(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  _QWORD *i;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[40];
  _OWORD v35[2];
  _OWORD v36[2];
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[2];
  uint64_t v40;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_319AC((uint64_t *)&unk_3BBF10);
    v2 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
  }
  else
  {
    v2 = &_swiftEmptyDictionarySingleton;
  }
  v30 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain(a1);
  v6 = 0;
  for (i = &type metadata for String; ; i = v19)
  {
    if (v5)
    {
      v11 = (v5 - 1) & v5;
      v12 = __clz(__rbit64(v5)) | (v6 << 6);
      v13 = v6;
    }
    else
    {
      v14 = v6 + 1;
      if (__OFADD__(v6, 1))
        goto LABEL_39;
      if (v14 >= v29)
      {
LABEL_36:
        sub_89AA0(a1);
        return;
      }
      v15 = *(_QWORD *)(v30 + 8 * v14);
      v13 = v6 + 1;
      if (!v15)
      {
        v13 = v6 + 2;
        if (v6 + 2 >= v29)
          goto LABEL_36;
        v15 = *(_QWORD *)(v30 + 8 * v13);
        if (!v15)
        {
          v13 = v6 + 3;
          if (v6 + 3 >= v29)
            goto LABEL_36;
          v15 = *(_QWORD *)(v30 + 8 * v13);
          if (!v15)
          {
            v13 = v6 + 4;
            if (v6 + 4 >= v29)
              goto LABEL_36;
            v15 = *(_QWORD *)(v30 + 8 * v13);
            if (!v15)
            {
              v16 = v6 + 5;
              if (v6 + 5 >= v29)
                goto LABEL_36;
              v15 = *(_QWORD *)(v30 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v13 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_40;
                  if (v13 >= v29)
                    goto LABEL_36;
                  v15 = *(_QWORD *)(v30 + 8 * v13);
                  ++v16;
                  if (v15)
                    goto LABEL_26;
                }
              }
              v13 = v6 + 5;
            }
          }
        }
      }
LABEL_26:
      v11 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v13 << 6);
    }
    sub_3F110(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v38);
    sub_344A8(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    v36[0] = v39[0];
    v36[1] = v39[1];
    v37 = v40;
    v35[0] = v38[0];
    v35[1] = v38[1];
    sub_3F110((uint64_t)v35, (uint64_t)v34);
    if (!swift_dynamicCast(&v32, v34, &type metadata for AnyHashable, i, 6))
    {
      v32 = 0;
      v33 = 0;
      sub_52128((uint64_t)v35, &qword_3B9390);
LABEL_35:
      swift_bridgeObjectRelease(v33);
      sub_89AA0(a1);
      swift_release();
      return;
    }
    v17 = v32;
    v18 = v33;
    sub_344A8((uint64_t)v36 + 8, (uint64_t)v34);
    sub_52128((uint64_t)v35, &qword_3B9390);
    v19 = i;
    if ((swift_dynamicCast(&v32, v34, (char *)&type metadata for Any + 8, i, 6) & 1) == 0)
    {
      v32 = 0;
      v33 = 0;
      swift_bridgeObjectRelease(v18);
      goto LABEL_35;
    }
    v20 = v32;
    v21 = v33;
    v22 = sub_3B8A0(v17, v18);
    if ((v23 & 1) != 0)
    {
      v8 = 16 * v22;
      v9 = (uint64_t *)(v2[6] + 16 * v22);
      swift_bridgeObjectRelease(v9[1]);
      *v9 = v17;
      v9[1] = v18;
      v10 = (uint64_t *)(v2[7] + v8);
      swift_bridgeObjectRelease(v10[1]);
      *v10 = v20;
      v10[1] = v21;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v22;
    v24 = (uint64_t *)(v2[6] + 16 * v22);
    *v24 = v17;
    v24[1] = v18;
    v25 = (uint64_t *)(v2[7] + 16 * v22);
    *v25 = v20;
    v25[1] = v21;
    v26 = v2[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_38;
    v2[2] = v28;
LABEL_8:
    v6 = v13;
    v5 = v11;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t PaginationOperation.Parameters.init(bookEntity:webView:styleManager:layoutSize:fullLayoutSize:document:configuration:contentInfo:cfiUtilityOptions:contentCleanupUpdateOptions:forDisplay:lineGuideEnabled:skipDocumentLoad:annotations:histories:shouldGetChapterCFIs:additionalJS:additionalOperations:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, char a14, char a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;

  v27 = *a5;
  v28 = a5[1];
  v29 = a5[2];
  v30 = *((_BYTE *)a5 + 24);
  v31 = *((_BYTE *)a5 + 25);
  v32 = a5[4];
  v33 = a5[5];
  v34 = *((_BYTE *)a5 + 48);
  v35 = a5[7];
  v36 = *((_BYTE *)a5 + 64);
  v41 = a5[10];
  v42 = a5[9];
  *(_QWORD *)(a9 + 248) = 0;
  v37 = type metadata accessor for PaginationOperation.Parameters(0);
  v38 = a9 + *(int *)(v37 + 88);
  v39 = sub_319AC(&qword_3BE170);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  sub_3F1CC(a1, a9);
  *(_QWORD *)(a9 + 40) = a2;
  *(_QWORD *)(a9 + 48) = a3;
  *(double *)(a9 + 56) = a10;
  *(double *)(a9 + 64) = a11;
  *(double *)(a9 + 72) = a12;
  *(double *)(a9 + 80) = a13;
  result = sub_3F1CC(a4, a9 + 88);
  *(_QWORD *)(a9 + 128) = v27;
  *(_QWORD *)(a9 + 136) = v28;
  *(_QWORD *)(a9 + 144) = v29;
  *(_BYTE *)(a9 + 152) = v30;
  *(_BYTE *)(a9 + 153) = v31;
  *(_QWORD *)(a9 + 160) = v32;
  *(_QWORD *)(a9 + 168) = v33;
  *(_BYTE *)(a9 + 176) = v34;
  *(_QWORD *)(a9 + 184) = v35;
  *(_BYTE *)(a9 + 192) = v36;
  *(_QWORD *)(a9 + 200) = v42;
  *(_QWORD *)(a9 + 208) = v41;
  *(_QWORD *)(a9 + 216) = a6;
  *(_QWORD *)(a9 + 224) = a7;
  *(_QWORD *)(a9 + *(int *)(v37 + 92)) = a8;
  *(_BYTE *)(a9 + 232) = a14;
  *(_BYTE *)(a9 + 233) = a15;
  *(_BYTE *)(a9 + 234) = a16;
  *(_QWORD *)(a9 + 240) = a17;
  *(_QWORD *)(a9 + 256) = a18;
  *(_BYTE *)(a9 + 264) = a19;
  *(_QWORD *)(a9 + 272) = a20;
  *(_QWORD *)(a9 + 280) = a21;
  return result;
}

uint64_t type metadata accessor for PaginationOperation.Parameters(uint64_t a1)
{
  return sub_3E7A8(a1, (uint64_t *)&unk_3BE280, (uint64_t)&nominal type descriptor for PaginationOperation.Parameters);
}

id PaginationOperation.__allocating_init(parameters:annotationProviderService:bookProviderService:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  id v13;
  id v14;

  v13 = objc_allocWithZone(v6);
  v14 = sub_156DF8(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease(a4);
  swift_unknownObjectRelease(a2);
  return v14;
}

id PaginationOperation.init(parameters:annotationProviderService:bookProviderService:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v8;

  v8 = sub_156DF8(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease(a4);
  swift_unknownObjectRelease(a2);
  return v8;
}

id PaginationOperation.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, char *, uint64_t, __n128);
  uint64_t v10;
  __n128 v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  objc_class *v26;
  uint8_t *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  objc_super v32;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v28 - v7;
  v9 = *(void (**)(char *, char *, uint64_t, __n128))(v2 + 16);
  v9(v4, &v0[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_log], v1, v6);
  v10 = swift_retain();
  OSAllocatedUnfairLock.valueWithLock.getter(&v31, v10, &type metadata for Bool);
  v11 = swift_release();
  if (v31 == 1)
  {
    v12 = v8;
    v13 = (uint64_t)v4;
  }
  else
  {
    if (qword_3B5828 != -1)
      swift_once(&qword_3B5828, sub_17D3CC);
    v13 = sub_555F0(v1, (uint64_t)qword_3BEF28);
    v12 = v8;
  }
  v9(v12, (char *)v13, v1, v11);
  v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v4, v1);
  v15 = v0;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(12, -1);
    v29 = v14;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc(32, -1);
    *(_DWORD *)v19 = 136446210;
    v31 = v20;
    v28 = v19 + 4;
    v21 = type metadata accessor for UUID(0);
    v22 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v23 = dispatch thunk of CustomStringConvertible.description.getter(v21, v22);
    v25 = v24;
    v30 = sub_33524(v23, v24, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v28);

    swift_bridgeObjectRelease(v25);
    _os_log_impl(&dword_0, v16, v17, "We have a leftover registration for PaginationOperation: %{public}s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

    v29(v8, v1);
  }
  else
  {

    v14(v8, v1);
  }
  v26 = (objc_class *)type metadata accessor for PaginationOperation(0);
  v32.receiver = v15;
  v32.super_class = v26;
  return objc_msgSendSuper2(&v32, "dealloc");
}

void sub_149C70(char a1)
{
  char *v1;
  NSString v3;
  NSString v4;
  NSString v5;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "willChangeValueForKey:", v3);

  v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__executing] = 0;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "didChangeValueForKey:", v4);

  sub_14A1F0(1);
  v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__finished] = 1;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "didChangeValueForKey:", v5);

  if ((a1 & 1) != 0)
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40], "setBe_hasPendingOperations:", 0);
}

uint64_t sub_149D94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_3F238(v3, a1, &qword_3BD8F8);
}

uint64_t sub_149DEC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  NSString v4;
  NSString v5;
  NSString v6;
  _BYTE v8[24];

  v3 = (uint64_t)&v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result], v8, 33, 0);
  sub_157054(a1, v3);
  swift_endAccess(v8);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "willChangeValueForKey:", v4);

  v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__executing] = 0;
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "didChangeValueForKey:", v5);

  sub_14A1F0(1);
  v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__finished] = 1;
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "didChangeValueForKey:", v6);

  return sub_52128(a1, &qword_3BD8F8);
}

void (*sub_149F2C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result, a1, 33, 0);
  return sub_149F74;
}

void sub_149F74(uint64_t a1, char a2)
{
  void *v4;
  NSString v5;
  NSString v6;
  id v7;

  swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    v4 = *(void **)(a1 + 24);
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "willChangeValueForKey:", v5);

    *((_BYTE *)v4 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation__executing) = 0;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "didChangeValueForKey:", v6);

    sub_14A1F0(1);
    *((_BYTE *)v4 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation__finished) = 1;
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v4, "didChangeValueForKey:", v7);

  }
}

uint64_t sub_14A094()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 200);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 208));
  return v1;
}

uint64_t sub_14A1F0(char a1)
{
  char *v1;
  NSString v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "willChangeValueForKey:", v3);

  v4 = OBJC_IVAR____TtC8BookEPUB19PaginationOperation_hasRegisteredObserver;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_hasRegisteredObserver];
  v6 = swift_retain(v5);
  OSAllocatedUnfairLock.valueWithLock.getter(&v12, v6, &type metadata for Bool);
  result = swift_release(v5);
  if (v12 == 1 && (a1 & 1) != 0)
  {
    v8 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40], "be_navigationHandler");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "removeObserver:", v1);

    }
    v10 = *(_QWORD *)&v1[v4];
    v11 = 0;
    swift_retain(v10);
    OSAllocatedUnfairLock.valueWithLock.setter(&v11, v10, &type metadata for Bool);
    return swift_release(v10);
  }
  return result;
}

uint64_t PaginationOperation.operationID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_operationID;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_14A45C()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  void *object;
  _QWORD v5[2];

  strcpy((char *)v5, "operationID: ");
  v0 = type metadata accessor for UUID(0);
  v1 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  return v5[0];
}

void PaginationOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookEPUB.PaginationOperation", 28, "init()", 6, 0);
  __break(1u);
}

id PaginationOperation.Parameters.webView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

double PaginationOperation.Parameters.styleManager.getter()
{
  uint64_t v0;
  double result;

  *(_QWORD *)&result = swift_unknownObjectRetain(*(_QWORD *)(v0 + 48)).n128_u64[0];
  return result;
}

double PaginationOperation.Parameters.layoutSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

double PaginationOperation.Parameters.fullLayoutSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

uint64_t PaginationOperation.Parameters.document.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_49F1C(v1 + 88, a1);
}

uint64_t PaginationOperation.Parameters.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 144);
  v3 = *(_BYTE *)(v1 + 152);
  v4 = *(_BYTE *)(v1 + 153);
  v5 = *(_QWORD *)(v1 + 160);
  v6 = *(_QWORD *)(v1 + 168);
  v7 = *(_BYTE *)(v1 + 176);
  v8 = *(_QWORD *)(v1 + 184);
  v9 = *(_BYTE *)(v1 + 192);
  v11 = *(_QWORD *)(v1 + 200);
  v10 = *(_QWORD *)(v1 + 208);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 128);
  *(_QWORD *)(a1 + 16) = v2;
  *(_BYTE *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 25) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v10;
  return swift_bridgeObjectRetain(v10);
}

uint64_t PaginationOperation.Parameters.contentInfo.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 216);
}

id PaginationOperation.Parameters.cfiUtilityOptions.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 224);
}

uint64_t PaginationOperation.Parameters.forDisplay.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 232);
}

uint64_t PaginationOperation.Parameters.lineGuideEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 233);
}

uint64_t PaginationOperation.Parameters.skipDocumentLoad.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 234);
}

uint64_t PaginationOperation.Parameters.annotations.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 240));
}

uint64_t PaginationOperation.Parameters.annotations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 240));
  *(_QWORD *)(v1 + 240) = a1;
  return result;
}

uint64_t (*PaginationOperation.Parameters.annotations.modify())()
{
  return address(of:);
}

uint64_t PaginationOperation.Parameters.upgradeAnnotations.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 248));
}

uint64_t PaginationOperation.Parameters.upgradeAnnotations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 248));
  *(_QWORD *)(v1 + 248) = a1;
  return result;
}

uint64_t (*PaginationOperation.Parameters.upgradeAnnotations.modify())()
{
  return address(of:);
}

uint64_t PaginationOperation.Parameters.histories.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 256));
}

uint64_t PaginationOperation.Parameters.histories.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 256));
  *(_QWORD *)(v1 + 256) = a1;
  return result;
}

uint64_t (*PaginationOperation.Parameters.histories.modify())()
{
  return address(of:);
}

uint64_t PaginationOperation.Parameters.shouldGetChapterCFIs.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 264);
}

uint64_t PaginationOperation.Parameters.additionalJS.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 272));
}

uint64_t PaginationOperation.Parameters.additionalOperations.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 280));
}

uint64_t PaginationOperation.Result.isVerticalDocument.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 65);
}

double PaginationOperation.Result.contentSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

uint64_t PaginationOperation.Result.textContent.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 112));
  return v1;
}

uint64_t PaginationOperation.Result.anchorFrames.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 120));
}

uint64_t PaginationOperation.Result.annotationFrames.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 144));
}

uint64_t PaginationOperation.Result.historyFrames.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 152));
}

uint64_t PaginationOperation.Result.annotationUpgradeResults.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 160));
}

uint64_t PaginationOperation.Result.additionalJS.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 168));
}

uint64_t PaginationOperation.Result.textNodeCharacterCounts.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 176));
}

uint64_t PaginationOperation.Result.chapterNavigationInfo.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 184));
}

uint64_t PaginationOperation.WebViewOperation.block.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_retain(*(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t PaginationOperation.WebViewOperation.init(requestedExecutionTime:block:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  if (a4 <= 5.0)
    a4 = 5.0;
  *(double *)a3 = a4;
  *(_QWORD *)(a3 + 8) = result;
  *(_QWORD *)(a3 + 16) = a2;
  return result;
}

uint64_t sub_14A798(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  __n128 v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  __n128 v65;
  void (*v66)(uint64_t, uint64_t, __n128);
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  __n128 v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  __n128 v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  _QWORD *aBlock;
  uint64_t v95;
  uint64_t (*v96)(uint64_t);
  void *v97;
  uint64_t (*v98)();
  uint64_t v99;

  v2 = v1;
  v92 = a1;
  v3 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v3);
  v5 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v87 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v83 = (char *)&v81 - v10;
  __chkstk_darwin(v11);
  v88 = (char *)&v81 - v12;
  v89 = type metadata accessor for DispatchWorkItemFlags(0);
  v85 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v91 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for DispatchQoS(0);
  v84 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v90 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URLRequest(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = sub_14B004((uint64_t)"Queue up Load", 13, 2);
  if ((v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 234] & 1) != 0)
  {
    v19 = &v1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
    URLRequest.url.getter(v18);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v21 = v6;
      v22 = v7;
      v23 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v24 = v88;
      v23(v88, v5, v21);
      v25 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v26 = v83;
      v25(v83, v24, v21);
      v25(v87, v26, v21);
      v27 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v28 = swift_allocObject(&unk_383F20, v27 + v8);
      *(_QWORD *)(v28 + 16) = v2;
      v92 = v28;
      v23((char *)(v28 + v27), v26, v21);
      v29 = v2;
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.debug.getter();
      v32 = os_log_type_enabled(v30, v31);
      v82 = v21;
      if (v32)
      {
        v33 = swift_slowAlloc(32, -1);
        v81 = (_QWORD *)swift_slowAlloc(8, -1);
        v83 = (char *)swift_slowAlloc(32, -1);
        v93 = v83;
        *(_DWORD *)v33 = 136315650;
        v34 = type metadata accessor for UUID(0);
        v35 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v36 = dispatch thunk of CustomStringConvertible.description.getter(v34, v35);
        v38 = v37;
        aBlock = (_QWORD *)sub_33524(v36, v37, (uint64_t *)&v93);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v95, v33 + 4);

        swift_bridgeObjectRelease(v38);
        *(_WORD *)(v33 + 12) = 2048;
        sub_49F1C((uint64_t)(v19 + 88), (uint64_t)&aBlock);
        v39 = v22;
        v40 = v97;
        v41 = v98;
        sub_472D0(&aBlock, (uint64_t)v97);
        v42 = (*((uint64_t (**)(void *, uint64_t (*)()))v41 + 2))(v40, v41);
        sub_34488(&aBlock);

        aBlock = (_QWORD *)v42;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v95, v33 + 14);

        *(_WORD *)(v33 + 22) = 2112;
        v43 = (_QWORD *)*((_QWORD *)v19 + 5);
        aBlock = v43;
        v44 = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v95, v33 + 24);
        v45 = v81;
        *v81 = v43;
        v22 = v39;

        _os_log_impl(&dword_0, v30, v31, "Pagination OperationID %s Skipping load for ordinal %ld webView %@", (uint8_t *)v33, 0x20u);
        v46 = sub_319AC(&qword_3B8A70);
        swift_arrayDestroy(v45, 1, v46);
        swift_slowDealloc(v45, -1, -1);
        v47 = v83;
        swift_arrayDestroy(v83, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v33, -1, -1);

      }
      else
      {

      }
      v62 = v89;
      v61 = v90;
      v63 = v91;
      if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
      {
        v64 = (uint64_t)v87;
        sub_14B43C((char *)v29, (uint64_t)v87);
        v65 = swift_release();
        v66 = *(void (**)(uint64_t, uint64_t, __n128))(v22 + 8);
        v67 = v64;
        v68 = v82;
        v66(v67, v82, v65);
        return ((uint64_t (*)(char *, uint64_t))v66)(v88, v68);
      }
      else
      {
        v69 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
        v70 = v82;
        v69((uint64_t)v87, v82);
        sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
        v72 = (void *)static OS_dispatch_queue.main.getter(v71);
        v73 = swift_allocObject(&unk_383F48, 32);
        v74 = v92;
        *(_QWORD *)(v73 + 16) = sub_159BEC;
        *(_QWORD *)(v73 + 24) = v74;
        v98 = sub_618F8;
        v99 = v73;
        aBlock = _NSConcreteStackBlock;
        v95 = 1107296256;
        v96 = sub_525B8;
        v97 = &unk_383F60;
        v75 = _Block_copy(&aBlock);
        swift_retain();
        v76 = swift_release();
        static DispatchQoS.unspecified.getter(v76);
        aBlock = _swiftEmptyArrayStorage;
        v77 = v61;
        v78 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v79 = sub_319AC(&qword_3B96F0);
        v80 = sub_A312C();
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v79, v80, v62, v78);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v77, v63, v75);
        _Block_release(v75);
        swift_release();

        (*(void (**)(char *, uint64_t))(v85 + 8))(v63, v62);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v77, v86);
        return ((uint64_t (*)(char *, uint64_t))v69)(v88, v70);
      }
    }
  }
  else
  {
    sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
    v49 = (void *)static OS_dispatch_queue.main.getter(v48);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v92, v15);
    v50 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v51 = swift_allocObject(&unk_383ED0, v50 + v17);
    *(_QWORD *)(v51 + 16) = v2;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v51 + v50, (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
    v98 = sub_159B54;
    v99 = v51;
    aBlock = _NSConcreteStackBlock;
    v95 = 1107296256;
    v96 = sub_525B8;
    v97 = &unk_383EE8;
    v52 = _Block_copy(&aBlock);
    v53 = v2;
    v54 = swift_release();
    v55 = v90;
    static DispatchQoS.unspecified.getter(v54);
    aBlock = _swiftEmptyArrayStorage;
    v56 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v57 = sub_319AC(&qword_3B96F0);
    v58 = sub_A312C();
    v59 = v91;
    v60 = v89;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v57, v58, v89, v56);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v55, v59, v52);
    _Block_release(v52);

    (*(void (**)(char *, uint64_t))(v85 + 8))(v59, v60);
    return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v55, v86);
  }
  return result;
}

uint64_t sub_14B004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  id v43;
  _BYTE v45[4];
  int v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[16];
  uint64_t v56;
  uint64_t v57;
  id v58;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  v53 = v7;
  __chkstk_darwin(v6);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for OSSignpostID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = static os_signpost_type_t.event.getter(v12);
  if (qword_3B56B8 != -1)
    swift_once(&qword_3B56B8, sub_5EFF4);
  v16 = (id)qword_3CEEF8;
  static OSSignpostID.exclusive.getter();
  v17 = v15;
  v18 = a1;
  os_signpost(_:dso:log:name:signpostID:)(v17, &dword_0, v16, a1, a2, a3, v14);

  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
  Logger.init(_:)((id)qword_3CEEF8);
  v19 = (char *)v51;
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.debug.getter();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = swift_slowAlloc(42, -1);
    v50 = a3;
    v48 = v18;
    v49 = a2;
    v24 = v23;
    v51 = (id)swift_slowAlloc(96, -1);
    v58 = v51;
    *(_DWORD *)v24 = 136315906;
    v25 = type metadata accessor for UUID(0);
    v26 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v27 = dispatch thunk of CustomStringConvertible.description.getter(v25, v26);
    v29 = v28;
    v54 = sub_33524(v27, v28, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v24 + 4);

    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v24 + 12) = 2080;
    v46 = v22;
    v30 = &v19[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
    v31 = *(id *)&v19[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40];
    v32 = objc_msgSend(v31, "be_identifier");
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
    v47 = v9;
    v34 = v33;
    v36 = v35;

    v54 = sub_33524(v34, v36, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v24 + 14);

    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v24 + 22) = 2048;
    sub_49F1C((uint64_t)(v30 + 88), (uint64_t)&v54);
    v37 = v56;
    v38 = v57;
    sub_472D0(&v54, v56);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
    sub_34488(&v54);

    v54 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v24 + 24);

    *(_WORD *)(v24 + 32) = 2080;
    v40 = StaticString.description.getter(v48, v49, v50);
    v42 = v41;
    v54 = sub_33524(v40, v41, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v24 + 34);
    swift_bridgeObjectRelease(v42);
    _os_log_impl(&dword_0, v20, (os_log_type_t)v46, "#PaginationOperation: %s webViewID: %s Ordinal: %ld mark Event:%s", (uint8_t *)v24, 0x2Au);
    v43 = v51;
    swift_arrayDestroy(v51, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1, -1);
    swift_slowDealloc(v24, -1, -1);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v53 + 8))(v47, v52);
  }
  else
  {

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v53 + 8))(v9, v52);
  }
}

void sub_14B43C(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  id *v18;
  id v19;
  void *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char v22;
  char *v23;
  char *v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - v12;
  *(_QWORD *)&v15 = __chkstk_darwin(v14).n128_u64[0];
  v17 = (char *)&v41 - v16;
  if ((objc_msgSend(a1, "isCancelled", v15) & 1) != 0)
  {
    sub_149C70(1);
    sub_150BCC((uint64_t)"FAILURE: #PaginationOperation Cancelled while skipping document load.", 69, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40], "be_paginationOperationCanceled");
    return;
  }
  v44 = v7;
  v18 = (id *)&a1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40], "be_willSkipLoad");
  v19 = objc_msgSend(v18[5], "URL");
  if (v19)
  {
    v20 = v19;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v19);

    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v13, 0, 1, v4);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v21(v13, 1, 1, v4);
  }
  sub_8927C((uint64_t)v13, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4) == 1)
  {
    sub_52128((uint64_t)v17, (uint64_t *)&unk_3B8C50);
    goto LABEL_9;
  }
  v22 = URL.isEquivalent(to:)(a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
  if ((v22 & 1) == 0)
  {
LABEL_9:
    v43 = v21;
    v23 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, a2, v4);
    v24 = a1;
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      v42 = v26;
      v27 = swift_slowAlloc(22, -1);
      v41 = swift_slowAlloc(64, -1);
      v46 = v41;
      *(_DWORD *)v27 = 136315394;
      v28 = objc_msgSend(v18[5], "URL");
      if (v28)
      {
        v29 = v28;
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v28);

        v30 = 0;
      }
      else
      {
        v30 = 1;
      }
      v31 = v44;
      v43(v10, v30, 1, v4);
      v32 = String.init<A>(describing:)(v10, v8);
      v34 = v33;
      v45 = sub_33524(v32, v33, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v27 + 4);

      swift_bridgeObjectRelease(v34);
      *(_WORD *)(v27 + 12) = 2080;
      v35 = sub_34284((unint64_t *)&qword_3B8C68, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v36 = dispatch thunk of CustomStringConvertible.description.getter(v4, v35);
      v38 = v37;
      v45 = sub_33524(v36, v37, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v27 + 14);
      v39 = swift_bridgeObjectRelease(v38);
      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v31, v4, v39);
      _os_log_impl(&dword_0, v25, (os_log_type_t)v42, "#reevaluatePaginationData webView.url: %s != url %s", (uint8_t *)v27, 0x16u);
      v40 = v41;
      swift_arrayDestroy(v41, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v27, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v23, v4);
    }
  }
  sub_14B8AC((uint64_t)address(of:), 0);
}

void sub_14B8AC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  id v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  id v29;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_14B004((uint64_t)"PostLoad Operations Begin", 25, 2);
  v5 = &v2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
  v6 = objc_retain(objc_retain(objc_retain(objc_retain(objc_retain(*(id *)&v2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters
                                                                            + 40])))));
  v7 = v2;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.debug.getter();
  v28 = (id *)v5;
  if (os_log_type_enabled(v8, v9))
  {
    v26 = a1;
    v10 = swift_slowAlloc(32, -1);
    v25 = swift_slowAlloc(64, -1);
    v33 = v25;
    *(_DWORD *)v10 = 134218498;
    sub_49F1C((uint64_t)(v5 + 88), (uint64_t)&v29);
    v27 = a2;
    v11 = v31;
    v12 = v32;
    sub_472D0(&v29, v31);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
    sub_34488(&v29);
    v29 = (id)v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v10 + 4);

    *(_WORD *)(v10 + 12) = 2080;
    v29 = objc_msgSend(v6, "be_paginationMode");
    type metadata accessor for BE_WKPaginationMode(0);
    v15 = String.init<A>(describing:)(&v29, v14);
    v17 = v16;
    v29 = (id)sub_33524(v15, v16, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v10 + 14);

    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v17).n128_u64[0];
    *(_WORD *)(v10 + 22) = 2080;
    v19 = objc_msgSend(v6, "be_identifier", v18);
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    v29 = (id)sub_33524(v20, v22, &v33);
    a2 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v10 + 24);

    swift_bridgeObjectRelease(v22);
    _os_log_impl(&dword_0, v8, v9, "Finished load for ordinal: %ld in pagination mode: %s webView: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    v23 = v10;
    a1 = v26;
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {

  }
  if ((objc_msgSend(v7, "isCancelled") & 1) != 0)
  {
    sub_149C70(1);
    sub_150BCC((uint64_t)"FAILURE: #PaginationOperation Cancelled in webLoadComplete", 58, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
    v24 = v28[5];
    objc_msgSend(v24, "be_paginationOperationCanceled");

  }
  else
  {
    sub_150F00(v6, 0, a1, a2);
  }

}

double sub_14BBE8(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  char *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  _QWORD aBlock[6];

  v4 = type metadata accessor for URLRequest(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if ((objc_msgSend(a1, "isCancelled", __chkstk_darwin(v4).n128_f64[0]) & 1) != 0)
  {
    sub_149C70(1);
    sub_150BCC((uint64_t)"FAILURE: #PaginationOperation Cancelled Queuing up load", 55, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40], "be_paginationOperationCanceled");
  }
  else
  {
    v8 = &a1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
    v9 = *(id *)&a1[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40];
    objc_msgSend(v9, "be_willFullyConfigure");
    v10 = *((_QWORD *)v8 + 6);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
    v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v12 = swift_allocObject(&unk_384240, v11 + v6);
    *(_QWORD *)(v12 + 16) = a1;
    *(_QWORD *)(v12 + 24) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_159F5C;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_525E4;
    aBlock[3] = &unk_384258;
    v13 = _Block_copy(aBlock);
    v14 = v9;
    swift_unknownObjectRetain(v10);
    v15 = a1;
    objc_msgSend(v14, "be_configureFontWithStyleManager:completion:", v10, v13, swift_release().n128_f64[0]);

    _Block_release(v13);
    *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  }
  return result;
}

void sub_14BDE8(uint64_t a1, char *a2, void **a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  char *v58;
  void **v59;
  __objc2_ivar *v60;
  id v61;
  void *v62;
  char *v63;
  void **v64;
  uint64_t v65;
  void (*v66)(void **, char *, uint64_t);
  uint64_t v67;
  unsigned int (*v68)(void **, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  Class v74;
  id v75;
  id v76;
  void *v77;
  void (*v78)(char *, char *, uint64_t);
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  void **v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  void (*v100)(void);
  void *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void **v105;
  uint64_t *v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  void **v113;
  char *v114;
  void **v115;
  NSObject *v116;
  os_log_type_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  __n128 v130;
  char *v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  void **v138;
  NSURL *v139;
  NSURL *v140;
  uint64_t v141;
  char *v142;
  uint64_t *v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  NSURL *v151;
  void *v152;
  void *v153;
  uint64_t *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  __n128 v161;
  void (*v162)(char *, uint64_t, __n128);
  char *v163;
  __n128 v164;
  char *v165;
  uint64_t v166;
  unint64_t v167;
  void **v168;
  id v169;
  uint64_t v170;
  NSURL *v171;
  void *v172;
  void *v173;
  Class v174;
  uint64_t *v175;
  uint64_t (**v176)(uint64_t *, uint64_t, uint64_t);
  char *v177;
  unsigned int v178;
  void (*v179)(void **, char *, uint64_t);
  void **v180;
  os_log_t v181;
  char *v182;
  char v183;
  void **v184;
  void (*v185)(os_log_t, uint64_t);
  void *v186;
  id v187;
  void **v188;
  id v189;
  NSObject *v190;
  os_log_type_t v191;
  int v192;
  _BOOL4 v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  double v202;
  void **v203;
  id v204;
  unint64_t v205;
  unint64_t v206;
  char *v207;
  NSObject *v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  __n128 v213;
  uint64_t v214;
  NSObject *v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  __n128 v219;
  os_log_t v220;
  void **v221;
  char *v222;
  char *v223;
  unsigned __int8 v224;
  void (*v225)(char *, char *, uint64_t);
  objc_class *v226;
  uint64_t v227;
  void **v228;
  Class v229;
  void (*v230)(Class, uint64_t);
  void *v231;
  void *v232;
  Class isa;
  id v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  uint64_t v242;
  NSURL *v243;
  void *v244;
  void **v245;
  void *v246;
  void **v247;
  id v248;
  double v249;
  id v250;
  void **v251;
  objc_class *v252;
  uint64_t v253;
  char v254;
  Class v255;
  char *v256;
  objc_class *v257;
  char *v258;
  NSObject *v259;
  os_log_type_t v260;
  int v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;
  __n128 v272;
  void **v273;
  void **v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  int v278;
  NSObject *v279;
  NSObject *v280;
  os_log_t v281;
  void **v282;
  uint64_t v283;
  char *v284;
  char *v285;
  char *v286;
  objc_class *v287;
  char *v288;
  uint64_t v289;
  objc_class *v290;
  char *v291;
  uint64_t *v292;
  char *v293;
  char *v294;
  char *v295;
  char *v296;
  uint64_t v297;
  uint64_t (**v298)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v299;
  uint64_t *v300;
  uint64_t v301;
  uint64_t v302;
  NSURL *v303;
  uint64_t v304;
  uint64_t v305;
  Class v306;
  char *v307;
  void (*v308)(void);
  char *v309;
  void (*v310)(char *, void **, uint64_t);
  void **v311;
  uint64_t v312;
  char *v313;
  uint64_t v314;
  id v315;
  void **v316;
  void **aBlock;
  uint64_t v318;
  void *v319;
  void *v320;
  void *v321;
  uint64_t v322;
  uint64_t v323;
  char v324[8];
  uint64_t v325;

  v315 = a4;
  v316 = a3;
  v305 = type metadata accessor for URLRequest(0);
  v301 = *(_QWORD *)(v305 - 8);
  __chkstk_darwin(v305);
  v303 = (NSURL *)((char *)&v275 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v302 = v5;
  __chkstk_darwin(v6);
  v293 = (char *)&v275 - v7;
  v8 = sub_319AC(&qword_3BE220);
  __chkstk_darwin(v8);
  v299 = (uint64_t *)((char *)&v275 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v304 = sub_319AC(&qword_3BE170);
  v298 = *(uint64_t (***)(uint64_t *, uint64_t, uint64_t))(v304 - 8);
  __chkstk_darwin(v304);
  v292 = (uint64_t *)((char *)&v275 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v300 = (uint64_t *)((char *)&v275 - v12);
  v297 = type metadata accessor for PaginationOperation.Parameters(0);
  __chkstk_darwin(v297);
  v309 = (char *)&v275 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v289);
  v288 = (char *)&v275 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v310 = (void (*)(char *, void **, uint64_t))((char *)&v275 - v16);
  __chkstk_darwin(v17);
  v307 = (char *)&v275 - v18;
  __chkstk_darwin(v19);
  v308 = (void (*)(void))((char *)&v275 - v20);
  __chkstk_darwin(v21);
  v295 = (char *)&v275 - v22;
  __chkstk_darwin(v23);
  v311 = (void **)((char *)&v275 - v24);
  v314 = type metadata accessor for URL(0);
  v312 = *(_QWORD *)(v314 - 8);
  v25 = *(_QWORD *)(v312 + 64);
  __chkstk_darwin(v314);
  v313 = (char *)&v275 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v287 = (objc_class *)((char *)&v275 - v27);
  __chkstk_darwin(v28);
  v306 = (Class)((char *)&v275 - v29);
  __chkstk_darwin(v30);
  v290 = (objc_class *)((char *)&v275 - v31);
  __chkstk_darwin(v32);
  v291 = (char *)&v275 - v33;
  __chkstk_darwin(v34);
  v36 = (char *)&v275 - v35;
  __chkstk_darwin(v37);
  v39 = ((char *)&v275 - v38);
  __chkstk_darwin(v40);
  v42 = ((char *)&v275 - v41);
  __chkstk_darwin(v43);
  v45 = ((char *)&v275 - v44);
  __chkstk_darwin(v46);
  v48 = (void **)((char *)&v275 - v47);
  __chkstk_darwin(v49);
  v51 = (char *)&v275 - v50;
  __chkstk_darwin(v52);
  v54 = (char *)&v275 - v53;
  *(_QWORD *)&v56 = __chkstk_darwin(v55).n128_u64[0];
  v58 = (char *)&v275 - v57;
  if ((objc_msgSend(a2, "isCancelled", v56) & 1) != 0)
  {
    sub_149C70(1);
    sub_150BCC((uint64_t)"FAILURE: Cancelled After font registration", 42, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
    objc_msgSend(v316, "be_paginationOperationCanceled");
    return;
  }
  v281 = v45;
  v282 = v48;
  v279 = v42;
  v280 = v39;
  v284 = v51;
  v285 = v58;
  v286 = v36;
  v294 = v54;
  v283 = v25;
  v296 = a2;
  v59 = v316;
  objc_msgSend(v316, "be_prepareForLoad");
  v60 = &stru_3AC000;
  v61 = objc_msgSend(v59, "URL");
  if (!v61)
  {
    v64 = v311;
    v65 = v312;
    v67 = v314;
    (*(void (**)(void **, uint64_t, uint64_t, uint64_t))(v312 + 56))(v311, 1, 1, v314);
    v63 = v294;
    goto LABEL_8;
  }
  v62 = v61;
  v63 = v294;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v61);

  v64 = v311;
  v65 = v312;
  v66 = *(void (**)(void **, char *, uint64_t))(v312 + 32);
  v67 = v314;
  v66(v311, v63, v314);
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v65 + 56))(v64, 0, 1, v67);
  v68 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v65 + 48);
  if (v68(v64, 1, v67) == 1)
  {
LABEL_8:
    sub_52128((uint64_t)v64, (uint64_t *)&unk_3B8C50);
    v75 = v315;
    v74 = v306;
    v73 = v307;
    v72 = (char *)v308;
    goto LABEL_9;
  }
  v69 = v285;
  v70 = ((uint64_t (*)(char *, void **, uint64_t))v66)(v285, v64, v67);
  v71 = (uint64_t)v295;
  URLRequest.url.getter(v70);
  if (v68((void **)v71, 1, v67) == 1)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v69, v67);
    sub_52128(v71, (uint64_t *)&unk_3B8C50);
    v73 = v307;
    v72 = (char *)v308;
    v74 = v306;
    v75 = v315;
    goto LABEL_9;
  }
  v177 = v284;
  v66((void **)v284, (char *)v71, v67);
  v178 = objc_msgSend(v59, "isLoading");
  v179 = *(void (**)(void **, char *, uint64_t))(v65 + 16);
  v180 = v282;
  v179(v282, v69, v67);
  v181 = v281;
  v179((void **)&v281->isa, v177, v67);
  if (!v178)
  {
    v251 = v180;
    v185 = *(void (**)(os_log_t, uint64_t))(v65 + 8);
    v185(v181, v67);
    v185((os_log_t)v251, v67);
    goto LABEL_39;
  }
  v182 = v69;
  v183 = URL.isEquivalent(to:)(v181);
  v184 = v180;
  v185 = *(void (**)(os_log_t, uint64_t))(v65 + 8);
  v185(v181, v67);
  v185((os_log_t)v184, v67);
  if ((v183 & 1) != 0)
  {
LABEL_39:
    v73 = v307;
    v72 = (char *)v308;
    v74 = v306;
    v75 = v315;
    v185((os_log_t)v284, v67);
    v185((os_log_t)v285, v67);
    v59 = v316;
    goto LABEL_9;
  }
  v186 = v296;
  v179((void **)&v279->isa, v182, v67);
  v179((void **)&v280->isa, v284, v67);
  v187 = v186;
  v188 = v316;
  v189 = v187;
  v311 = v188;
  v190 = Logger.logObject.getter(v311);
  v191 = static os_log_type_t.error.getter(v190);
  v192 = v191;
  v193 = os_log_type_enabled(v190, v191);
  v194 = v182;
  v74 = v306;
  v73 = v307;
  v75 = v315;
  if (v193)
  {
    v195 = swift_slowAlloc(42, -1);
    v282 = (void **)swift_slowAlloc(128, -1);
    aBlock = v282;
    *(_DWORD *)v195 = 136446978;
    v277 = v195 + 4;
    v281 = v190;
    v196 = type metadata accessor for UUID(0);
    v278 = v192;
    v197 = v196;
    v198 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v199 = dispatch thunk of CustomStringConvertible.description.getter(v197, v198);
    v201 = v200;
    v323 = sub_33524(v199, v200, (uint64_t *)&aBlock);
    v295 = v324;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324, v277);

    *(_QWORD *)&v202 = swift_bridgeObjectRelease(v201).n128_u64[0];
    *(_WORD *)(v195 + 12) = 2082;
    v277 = v195 + 14;
    v203 = v311;
    v204 = objc_msgSend(v311, "be_identifier", v202);
    v276 = static String._unconditionallyBridgeFromObjectiveC(_:)(v204);
    v206 = v205;

    v323 = sub_33524(v276, v206, (uint64_t *)&aBlock);
    v207 = v295;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v295, v277);

    swift_bridgeObjectRelease(v206);
    *(_WORD *)(v195 + 22) = 2080;
    v311 = (void **)(v195 + 24);
    v208 = v279;
    v210 = URL.absoluteString.getter(v209);
    v212 = v211;
    v323 = sub_33524(v210, v211, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v207, v311);
    v213 = swift_bridgeObjectRelease(v212);
    v214 = ((uint64_t (*)(NSObject *, uint64_t, __n128))v185)(v208, v67, v213);
    *(_WORD *)(v195 + 32) = 2080;
    v215 = v280;
    v216 = URL.absoluteString.getter(v214);
    v218 = v217;
    v323 = sub_33524(v216, v217, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v295, v195 + 34);
    v219 = swift_bridgeObjectRelease(v218);
    ((void (*)(NSObject *, uint64_t, __n128))v185)(v215, v67, v219);
    v220 = v281;
    _os_log_impl(&dword_0, v281, (os_log_type_t)v278, "Operation: %{public}s WebView %{public}s is already loading a requests for %s but is about to be asked to load %s -- do we have concurrent operations happening?", (uint8_t *)v195, 0x2Au);
    v221 = v282;
    swift_arrayDestroy(v282, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v221, -1, -1);
    swift_slowDealloc(v195, -1, -1);

    v185((os_log_t)v284, v67);
    v222 = v285;
  }
  else
  {

    v185(v280, v67);
    v185(v279, v67);

    v274 = v311;
    v185((os_log_t)v284, v67);
    v222 = v194;
  }
  v185((os_log_t)v222, v67);
  v59 = v316;
  v65 = v312;
  v72 = (char *)v308;
  v60 = &stru_3AC000;
LABEL_9:
  v76 = objc_msgSend(v59, v60[49].name);
  if (!v76)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v72, 1, 1, v67);
    goto LABEL_14;
  }
  v77 = v76;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v76);

  v78 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
  v78(v72, v63, v67);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v72, 0, 1, v67);
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  if (v79(v72, 1, v67) == 1)
  {
LABEL_14:
    v82 = v65;
    v83 = (uint64_t)v72;
    goto LABEL_15;
  }
  v80 = v286;
  v81 = ((uint64_t (*)(char *, char *, uint64_t))v78)(v286, v72, v67);
  URLRequest.url.getter(v81);
  if (v79(v73, 1, v67) == 1)
  {
    v82 = v65;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v80, v67);
    v83 = (uint64_t)v73;
LABEL_15:
    sub_52128(v83, (uint64_t *)&unk_3B8C50);
    v84 = v296;
LABEL_16:
    v86 = (uint64_t)v309;
    v85 = (uint64_t)v310;
    goto LABEL_17;
  }
  v223 = v291;
  v78(v291, v73, v67);
  v224 = objc_msgSend(v59, "isLoading");
  v225 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v226 = v290;
  v225((char *)v290, v80, v67);
  v225((char *)v74, v223, v67);
  if ((v224 & 1) != 0)
  {
    v227 = v65;
    v228 = v59;
    v229 = v74;
    v82 = v227;
    v230 = *(void (**)(Class, uint64_t))(v227 + 8);
    v230(v229, v67);
    v230(v226, v67);
    v84 = v296;
    v86 = (uint64_t)v309;
    v85 = (uint64_t)v310;
  }
  else
  {
    v252 = v226;
    v253 = v65;
    v228 = v59;
    v254 = URL.isEquivalent(to:)(v74);
    v255 = v74;
    v82 = v253;
    v230 = *(void (**)(Class, uint64_t))(v253 + 8);
    v230(v255, v67);
    v230(v252, v67);
    if ((v254 & 1) != 0)
    {
      v256 = v80;
      v84 = v296;
      v257 = v287;
      v225((char *)v287, v256, v67);
      v258 = v84;
      v259 = Logger.logObject.getter(v258);
      v260 = static os_log_type_t.default.getter();
      v261 = v260;
      if (os_log_type_enabled(v259, v260))
      {
        v262 = swift_slowAlloc(22, -1);
        v316 = (void **)swift_slowAlloc(64, -1);
        aBlock = v316;
        *(_DWORD *)v262 = 136315394;
        LODWORD(v311) = v261;
        v263 = type metadata accessor for UUID(0);
        v264 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v265 = dispatch thunk of CustomStringConvertible.description.getter(v263, v264);
        v267 = v266;
        v323 = sub_33524(v265, v266, (uint64_t *)&aBlock);
        v67 = v314;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324, v262 + 4);

        swift_bridgeObjectRelease(v267);
        *(_WORD *)(v262 + 12) = 2080;
        v269 = URL.absoluteString.getter(v268);
        v271 = v270;
        v323 = sub_33524(v269, v270, (uint64_t *)&aBlock);
        v84 = v296;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324, v262 + 14);
        v272 = swift_bridgeObjectRelease(v271);
        ((void (*)(objc_class *, uint64_t, __n128))v230)(v257, v67, v272);
        _os_log_impl(&dword_0, v259, (os_log_type_t)v311, "Operation: %s loading URL when URL is already loaded. %s", (uint8_t *)v262, 0x16u);
        v273 = v316;
        swift_arrayDestroy(v316, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v273, -1, -1);
        swift_slowDealloc(v262, -1, -1);

      }
      else
      {

        v230(v257, v67);
      }
      v230((Class)v291, v67);
      v230((Class)v286, v67);
      v75 = v315;
      v59 = v228;
      goto LABEL_16;
    }
    v84 = v296;
    v86 = (uint64_t)v309;
    v85 = (uint64_t)v310;
    v223 = v291;
  }
  v230((Class)v223, v67);
  v230((Class)v286, v67);
  v59 = v228;
LABEL_17:
  sub_14B004((uint64_t)"WebView Configuration Begin", 27, 2);
  v87 = &v84[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
  sub_1570F8((uint64_t)&v84[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters], v86);
  sub_14D7D8(v59, v86);
  sub_15713C(v86);
  v88 = sub_14B004((uint64_t)"WebView Configuration End", 25, 2);
  URLRequest.url.getter(v88);
  v89 = v82;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v85, 1, v67) == 1)
  {
    sub_52128(v85, (uint64_t *)&unk_3B8C50);
    v90 = v84;
    v91 = Logger.logObject.getter(v90);
    v92 = static os_log_type_t.error.getter(v91);
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc(12, -1);
      v94 = (void **)swift_slowAlloc(32, -1);
      *(_DWORD *)v93 = 136315138;
      aBlock = v94;
      v95 = type metadata accessor for UUID(0);
      v96 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v97 = dispatch thunk of CustomStringConvertible.description.getter(v95, v96);
      v99 = v98;
      v323 = sub_33524(v97, v98, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324, v93 + 4);

      swift_bridgeObjectRelease(v99);
      _os_log_impl(&dword_0, v91, v92, "Operation: %s WebView no URL specified", v93, 0xCu);
      swift_arrayDestroy(v94, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v94, -1, -1);
      swift_slowDealloc(v93, -1, -1);
    }
    else
    {

    }
    sub_149C70(1);
  }
  else
  {
    v100 = *(void (**)(void))(v82 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v100)(v313, v85, v67);
    sub_14B004((uint64_t)"WebView Load Begin", 18, 2);
    v101 = (void *)objc_opt_self(NSTimer);
    v102 = swift_allocObject(&unk_384100, 24);
    swift_unknownObjectWeakInit(v102 + 16, v84);
    v103 = swift_allocObject(&unk_384290, 32);
    *(_QWORD *)(v103 + 16) = v102;
    *(_QWORD *)(v103 + 24) = v59;
    v321 = sub_159FC8;
    v322 = v103;
    aBlock = _NSConcreteStackBlock;
    v318 = 1107296256;
    v319 = sub_51504;
    v320 = &unk_3842A8;
    v104 = _Block_copy(&aBlock);
    v105 = v59;
    swift_release();
    v309 = (char *)objc_msgSend(v101, "scheduledTimerWithTimeInterval:repeats:block:", 0, v104, 10.0);
    _Block_release(v104);
    v106 = v299;
    sub_3F238((uint64_t)&v87[*(int *)(v297 + 88)], (uint64_t)v299, &qword_3BE220);
    v107 = v304;
    v108 = v298[6](v106, 1, v304);
    v308 = v100;
    v316 = v105;
    if (v108 == 1)
    {
      sub_52128((uint64_t)v106, &qword_3BE220);
      v109 = v301;
      v110 = v293;
      v111 = v305;
      (*(void (**)(char *, id, uint64_t))(v301 + 16))(v293, v75, v305);
      v112 = v84;
      v113 = v105;
      v114 = v112;
      v115 = v113;
      v116 = Logger.logObject.getter(v115);
      v117 = static os_log_type_t.info.getter();
      v118 = v117;
      if (os_log_type_enabled(v116, v117))
      {
        v119 = swift_slowAlloc(32, -1);
        v311 = (void **)swift_slowAlloc(96, -1);
        aBlock = v311;
        *(_DWORD *)v119 = 136315650;
        LODWORD(v310) = v118;
        v120 = type metadata accessor for UUID(0);
        v121 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v122 = dispatch thunk of CustomStringConvertible.description.getter(v120, v121);
        v124 = v123;
        v323 = sub_33524(v122, v123, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324, v119 + 4);

        swift_bridgeObjectRelease(v124);
        *(_WORD *)(v119 + 12) = 2080;
        v125 = v288;
        URLRequest.url.getter(v126);
        v127 = String.init<A>(describing:)(v125, v289);
        v129 = v128;
        v323 = sub_33524(v127, v128, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324, v119 + 14);
        v130 = swift_bridgeObjectRelease(v129);
        v131 = v110;
        v132 = v305;
        (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v131, v305, v130);
        *(_WORD *)(v119 + 22) = 2080;
        v133 = objc_msgSend(v115, "be_identifier");
        v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
        v136 = v135;

        v323 = sub_33524(v134, v136, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v323, v324, v119 + 24);

        v137 = v136;
        v84 = v296;
        swift_bridgeObjectRelease(v137);
        _os_log_impl(&dword_0, v116, (os_log_type_t)v310, "#PaginationOperation: %s loading %s webView: %s", (uint8_t *)v119, 0x20u);
        v138 = v311;
        swift_arrayDestroy(v311, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v138, -1, -1);
        swift_slowDealloc(v119, -1, -1);

        v139 = v303;
        v140 = (NSURL *)&v325;
        v141 = v302;
        v142 = v313;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
        v140 = v303;
        v141 = v302;
        v142 = v313;
        v132 = v111;
        v139 = v303;
      }
      URL._bridgeToObjectiveC()(v140);
      v232 = v231;
      objc_msgSend(v115, "be_willAttemptLoad:", v231);

      v169 = v315;
      isa = URLRequest._bridgeToObjectiveC()().super.isa;

      v168 = v316;
    }
    else
    {
      v143 = v300;
      v311 = (void **)((char *)v300 + *(int *)(v107 + 80));
      v144 = *v106;
      v145 = v106[1];
      *v300 = *v106;
      v143[1] = v145;
      v146 = (char *)v106[2];
      v147 = v106[3];
      v143[2] = (uint64_t)v146;
      v143[3] = v147;
      v148 = v146;
      v307 = v146;
      v149 = v106[4];
      v150 = v106[5];
      v143[4] = v149;
      v143[5] = v150;
      v297 = v149;
      v100();
      sub_158788(v144, v145);
      swift_bridgeObjectRetain(v147);
      swift_bridgeObjectRetain(v150);
      URL._bridgeToObjectiveC()(v151);
      v153 = v152;
      objc_msgSend(v316, "be_willAttemptLoad:", v152);

      v154 = v292;
      v155 = (char *)v292 + *(int *)(v107 + 80);
      *v292 = v144;
      v154[1] = v145;
      v154[2] = (uint64_t)v148;
      v154[3] = v147;
      v154[4] = v149;
      v154[5] = v150;
      v156 = v314;
      v310 = *(void (**)(char *, void **, uint64_t))(v89 + 16);
      v310(v155, v311, v314);
      sub_158788(v144, v145);
      v306 = Data._bridgeToObjectiveC()().super.isa;
      sub_D6828(v144, v145);
      v295 = *(char **)(v89 + 8);
      ((void (*)(char *, uint64_t))v295)(v155, v156);
      v157 = v107;
      v298 = (uint64_t (**)(uint64_t *, uint64_t, uint64_t))((char *)v154 + *(int *)(v107 + 80));
      *v154 = v144;
      v154[1] = v145;
      v158 = v307;
      v154[2] = (uint64_t)v307;
      v154[3] = v147;
      v159 = v297;
      v154[4] = v297;
      v154[5] = v150;
      ((void (*)(void))v310)();
      swift_bridgeObjectRetain(v147);
      v299 = (uint64_t *)String._bridgeToObjectiveC()();
      v160 = v147;
      v161 = swift_bridgeObjectRelease(v147);
      v162 = (void (*)(char *, uint64_t, __n128))v295;
      ((void (*)(uint64_t (**)(uint64_t *, uint64_t, uint64_t), uint64_t, __n128))v295)(v298, v156, v161);
      v163 = (char *)v154 + *(int *)(v157 + 80);
      *v154 = v144;
      v154[1] = v145;
      v154[2] = (uint64_t)v158;
      v154[3] = v160;
      v154[4] = v159;
      v154[5] = v150;
      v310(v163, v311, v156);
      swift_bridgeObjectRetain(v150);
      v298 = (uint64_t (**)(uint64_t *, uint64_t, uint64_t))String._bridgeToObjectiveC()();
      v164 = swift_bridgeObjectRelease(v150);
      v162(v163, v156, v164);
      v165 = (char *)v154 + *(int *)(v304 + 80);
      *v154 = v144;
      v154[1] = v145;
      v154[2] = (uint64_t)v307;
      v154[3] = v160;
      v154[4] = v159;
      v154[5] = v150;
      v310(v165, v311, v156);
      v166 = v144;
      v167 = v145;
      v169 = v315;
      v168 = v316;
      sub_D6828(v166, v167);
      v170 = v150;
      v84 = v296;
      swift_bridgeObjectRelease(v170);
      swift_bridgeObjectRelease(v160);
      URL._bridgeToObjectiveC()(v171);
      v173 = v172;
      ((void (*)(char *, uint64_t))v162)(v165, v156);
      v132 = v305;
      v174 = v306;
      v175 = v299;
      v176 = v298;

      sub_52128((uint64_t)v300, &qword_3BE170);
      v109 = v301;
      v139 = v303;
      v141 = v302;
      v142 = v313;
    }
    v234 = objc_msgSend(v168, "be_navigationHandler");
    if (v234)
    {
      v315 = v234;
      v235 = swift_allocObject(&unk_384100, 24);
      swift_unknownObjectWeakInit(v235 + 16, v84);
      (*(void (**)(NSURL *, id, uint64_t))(v109 + 16))(v139, v169, v132);
      v236 = v312;
      v237 = v294;
      v238 = v314;
      (*(void (**)(char *, char *, uint64_t))(v312 + 16))(v294, v142, v314);
      v239 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
      v240 = (v141 + v239 + 7) & 0xFFFFFFFFFFFFFFF8;
      v241 = (*(unsigned __int8 *)(v236 + 80) + v240 + 8) & ~(unint64_t)*(unsigned __int8 *)(v236 + 80);
      v242 = swift_allocObject(&unk_3842E0, v241 + v283);
      v243 = v139;
      v244 = v309;
      *(_QWORD *)(v242 + 16) = v309;
      *(_QWORD *)(v242 + 24) = v235;
      (*(void (**)(unint64_t, NSURL *, uint64_t))(v109 + 32))(v242 + v239, v243, v305);
      v245 = v316;
      *(_QWORD *)(v242 + v240) = v316;
      ((void (*)(unint64_t, char *, uint64_t))v308)(v242 + v241, v237, v238);
      v321 = sub_15A0A8;
      v322 = v242;
      aBlock = _NSConcreteStackBlock;
      v318 = 1107296256;
      v319 = sub_69380;
      v320 = &unk_3842F8;
      v246 = _Block_copy(&aBlock);
      v247 = v245;
      v248 = v244;
      *(_QWORD *)&v249 = swift_release().n128_u64[0];
      v250 = v315;
      objc_msgSend(v315, "performAfterLoadCompleteOrFailure:", v246, v249);
      _Block_release(v246);

      v142 = v313;
    }
    else
    {
      v238 = v314;
      v236 = v312;
      v250 = v309;
    }

    (*(void (**)(char *, uint64_t))(v236 + 8))(v142, v238);
  }
}

id sub_14D7D8(void *a1, uint64_t a2)
{
  void *v2;
  double v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  double v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id result;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  NSObject *log;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = *(double *)(a2 + 128);
  v5 = *(unsigned __int8 *)(a2 + 152);
  v6 = *(_QWORD *)(a2 + 160);
  v7 = *(double *)(a2 + 168);
  v8 = *(double *)(a2 + 184);
  v9 = *(unsigned __int8 *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 200);
  v10 = *(_QWORD *)(a2 + 208);
  if (v6 >= 2)
  {
    if (v6 - 2 >= 2)
    {
      type metadata accessor for BookLayoutMode(0);
      v36 = v35;
      v39 = v6;
      swift_bridgeObjectRetain(v10);
      result = (id)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v36, &v39, v36, &type metadata for UInt);
      __break(1u);
      return result;
    }
    v12 = 0;
  }
  else if (*(_BYTE *)(a2 + 176))
  {
    v12 = 3;
  }
  else
  {
    v12 = 2;
  }
  objc_msgSend(a1, "setBe_paginationMode:", sub_1BE5F0(v12));
  objc_msgSend(a1, "setBe_pageLength:", v7);
  objc_msgSend(a1, "setBe_gapBetweenPages:", v8);
  objc_msgSend(a1, "setBe_paginationBehavesLikeColumns:", v9 ^ 1u);
  objc_msgSend(a1, "setBe_paginationLineGridEnabled:", v5);
  swift_bridgeObjectRetain_n(v10, 2);
  v13 = a1;
  v14 = v2;
  v15 = v13;
  v16 = v14;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(32, -1);
    v20 = swift_slowAlloc(64, -1);
    v43 = v20;
    *(_DWORD *)v19 = 136315650;
    v21 = objc_msgSend(v15, "be_configurationKey");
    log = v17;
    v37 = v18;
    if (v21)
    {
      v22 = v21;
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v25 = v24;

    }
    else
    {
      v23 = 0;
      v25 = 0;
    }
    v39 = v23;
    v40[0] = v25;
    v26 = sub_319AC((uint64_t *)&unk_3BBB20);
    v27 = String.init<A>(describing:)(&v39, v26);
    v29 = v28;
    v39 = sub_33524(v27, v28, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v19 + 4);

    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain(v10);
    v39 = sub_33524(v11, v10, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v19 + 14);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v19 + 22) = 2048;
    sub_49F1C((uint64_t)v16 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 88, (uint64_t)&v39);
    v31 = v41;
    v30 = v42;
    sub_472D0(&v39, v41);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v31, v30);
    sub_34488(&v39);

    v39 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v19 + 24);

    _os_log_impl(&dword_0, log, v37, "PaginationOperaton update current webView from #contentConfig:(%s) -to- (%s) Ordinal: %ld", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(v10, 2);

  }
  objc_msgSend(v15, "setBe_textZoomFactor:", v4);
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setBe_configurationKey:", v33);

  objc_msgSend(v15, "frame");
  return objc_msgSend(v15, "setFrame:");
}

void sub_14DC00(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void *Strong;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  char **v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v32, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc(32, -1);
      v26 = swift_slowAlloc(64, -1);
      v31 = v26;
      *(_DWORD *)v9 = 136446722;
      v10 = type metadata accessor for UUID(0);
      v11 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v12 = dispatch thunk of CustomStringConvertible.description.getter(v10, v11);
      v14 = v13;
      v27 = sub_33524(v12, v13, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v9 + 4);

      swift_bridgeObjectRelease(v14);
      *(_WORD *)(v9 + 12) = 2050;
      v15 = (uint64_t)v6 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 88;
      sub_49F1C(v15, (uint64_t)&v27);
      v17 = v29;
      v16 = v30;
      sub_472D0(&v27, v29);
      v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v17, v16);
      sub_34488(&v27);

      v27 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v9 + 14);

      *(_WORD *)(v9 + 22) = 2080;
      sub_49F1C(v15, (uint64_t)&v27);
      v19 = v29;
      v20 = v30;
      sub_472D0(&v27, v29);
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
      v23 = v22;
      sub_34488(&v27);
      v27 = sub_33524(v21, v23, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v9 + 24);

      swift_bridgeObjectRelease(v23);
      _os_log_impl(&dword_0, v7, v8, "#PaginationOperation: %{public}s Ordinal: %{public}ld document:%s  #LOADTIMEOUT!", (uint8_t *)v9, 0x20u);
      swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
    sub_14B004((uint64_t)"WebView #LOADTIMEOUT", 20, 2);
    sub_149C70(1);
    v24 = objc_msgSend(v6, "isCancelled");
    v25 = &selRef_be_paginationOperationCanceled;
    if (!v24)
      v25 = &selRef_be_failedLoad;
    objc_msgSend(a3, *v25, v26);

  }
}

void sub_14DF3C(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  char *v36;
  uint64_t Strong;
  void *v38;
  uint64_t v39;
  void *v40;
  void (**v41)(char *, uint64_t, void *);
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  NSObject *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  void (*v55)(void *);
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  __n128 v63;
  void (*v64)(__n128);
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  void (**v69)(char *, uint64_t, void *);
  char *v70;
  uint64_t v71;
  unint64_t v72;
  __n128 v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  void (*v86)(void);
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  char *v89;
  uint64_t v90;
  char v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  void *v94;
  void (*v95)(char *, uint64_t, uint64_t);
  void *v96;
  void *v97;
  id v98;
  char *v99;
  uint64_t v100;
  id v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  id v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  __n128 v126;
  id v127;
  void *v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  void (*v135)(void);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (**v141)(char *, uint64_t, void *);
  void *v142;
  id v143;
  _QWORD v144[3];
  char v145[8];
  uint64_t aBlock;
  uint64_t v147;
  void (*v148)(uint64_t, void *);
  void *v149;
  void (*v150)(void *);
  void (*v151)(char *, uint64_t, uint64_t);
  uint64_t v152;
  char v153[32];

  v134 = a8;
  v143 = a7;
  v138 = a6;
  v139 = type metadata accessor for URL(0);
  v137 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v133 = (char *)&v129 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v129 = (char *)&v129 - v15;
  v16 = sub_319AC(&qword_3B8C78);
  __chkstk_darwin(v16);
  v140 = (uint64_t)&v129 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v18);
  v130 = (char *)&v129 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v131 = (char *)&v129 - v21;
  __chkstk_darwin(v22);
  v132 = (uint64_t)&v129 - v23;
  __chkstk_darwin(v24);
  v26 = (char *)&v129 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v129 - v28;
  __chkstk_darwin(v30);
  v32 = (char *)&v129 - v31;
  v33 = type metadata accessor for URLRequest(0);
  v141 = *(void (***)(char *, uint64_t, void *))(v33 - 8);
  v142 = (void *)v33;
  *(_QWORD *)&v34 = __chkstk_darwin(v33).n128_u64[0];
  v36 = (char *)&v129 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5 += 16;
  objc_msgSend(a4, "invalidate", v34);
  swift_beginAccess(a5, v153, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a5);
  if (!Strong)
  {
    a2();
    return;
  }
  v38 = (void *)Strong;
  v135 = a2;
  v136 = a3;
  sub_14B004((uint64_t)"WebView afterLoadCompleteOrFailure", 34, 2);
  if (a1)
  {
    v39 = a1;
    v41 = v141;
    v40 = v142;
    v141[2](v36, v138, v142);
    v42 = v38;
    swift_errorRetain(v39);
    v43 = v42;
    swift_errorRetain(v39);
    v44 = v43;
    v45 = swift_errorRetain(v39);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.error.getter(v46);
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      LODWORD(v140) = v47;
      v48 = v39;
      v49 = swift_slowAlloc(42, -1);
      v138 = swift_slowAlloc(96, -1);
      v152 = v138;
      *(_DWORD *)v49 = 136315906;
      v50 = type metadata accessor for UUID(0);
      v51 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v52 = dispatch thunk of CustomStringConvertible.description.getter(v50, v51);
      v54 = v53;
      aBlock = sub_33524(v52, v53, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v147, v49 + 4);

      swift_bridgeObjectRelease(v54);
      *(_WORD *)(v49 + 12) = 2048;
      sub_49F1C((uint64_t)v44 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 88, (uint64_t)&aBlock);
      v56 = v149;
      v55 = v150;
      sub_472D0(&aBlock, (uint64_t)v149);
      v57 = (*((uint64_t (**)(void *, void (*)(void *)))v55 + 2))(v56, v55);
      sub_34488(&aBlock);

      aBlock = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v147, v49 + 14);

      *(_WORD *)(v49 + 22) = 2080;
      URLRequest.url.getter();
      v58 = v137;
      v59 = v139;
      v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v137 + 48))(v32, 1, v139);
      if ((_DWORD)v60 == 1)
      {
        sub_52128((uint64_t)v32, (uint64_t *)&unk_3B8C50);
        v61 = 0xE600000000000000;
        v62 = 0x7D656E6F6E7BLL;
      }
      else
      {
        v62 = URL.absoluteString.getter(v60);
        v61 = v72;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v32, v59);
      }
      v64 = (void (*)(__n128))v135;
      aBlock = sub_33524(v62, v61, &v152);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v147, v49 + 24);
      v73 = swift_bridgeObjectRelease(v61);
      ((void (*)(char *, void *, __n128))v141[1])(v36, v142, v73);
      *(_WORD *)(v49 + 32) = 2080;
      swift_getErrorValue(v48, v145, v144);
      v74 = Error.localizedDescription.getter(v144[1], v144[2]);
      v76 = v75;
      aBlock = sub_33524(v74, v75, &v152);
      v39 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v147, v49 + 34);
      swift_bridgeObjectRelease(v76);
      swift_errorRelease(v48);
      swift_errorRelease(v48);
      _os_log_impl(&dword_0, v46, (os_log_type_t)v140, "#PaginationOperation: %s Ordinal: %ld Failed to load %s - %s. Marking operation as finished", (uint8_t *)v49, 0x2Au);
      v77 = v138;
      swift_arrayDestroy(v138, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v77, -1, -1);
      swift_slowDealloc(v49, -1, -1);

    }
    else
    {

      ((void (*)(char *, void *))v41[1])(v36, v40);
      swift_errorRelease(v39);
      v63 = swift_errorRelease(v39);
      v64 = (void (*)(__n128))v135;
    }
    v78 = v143;
    v64(v63);
    sub_14B004((uint64_t)"WebView afterLoadComplete Failure", 33, 2);
    sub_149C70(1);
    if (objc_msgSend(v44, "isCancelled"))
      objc_msgSend(v78, "be_paginationOperationCanceled");
    else
      objc_msgSend(v78, "be_failedLoad");
    swift_errorRelease(v39);

    return;
  }
  sub_14B004((uint64_t)"WebView Load End", 16, 2);
  if ((objc_msgSend(v38, "isCancelled") & 1) != 0)
  {
    v135();
    sub_149C70(1);
    sub_150BCC((uint64_t)"FAILURE: Cancelled After load complete", 38, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
    objc_msgSend(v143, "be_paginationOperationCanceled");

    return;
  }
  v142 = v38;
  v65 = v143;
  v66 = objc_msgSend(v143, "URL");
  if (v66)
  {
    v67 = v66;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v66);

    v68 = v137;
    v69 = *(void (***)(char *, uint64_t, void *))(v137 + 56);
    v70 = v29;
    v71 = 0;
  }
  else
  {
    v68 = v137;
    v69 = *(void (***)(char *, uint64_t, void *))(v137 + 56);
    v70 = v29;
    v71 = 1;
  }
  v79 = v139;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v69)(v70, v71, 1, v139);
  v80 = v140;
  v81 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  v81(v26, v134, v79);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v69)(v26, 0, 1, v79);
  v82 = v80 + *(int *)(v16 + 48);
  sub_3F238((uint64_t)v29, v140, (uint64_t *)&unk_3B8C50);
  v83 = v140;
  sub_3F238((uint64_t)v26, v82, (uint64_t *)&unk_3B8C50);
  v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  if (v84(v83, 1, v79) == 1)
  {
    sub_52128((uint64_t)v26, (uint64_t *)&unk_3B8C50);
    v83 = v140;
    sub_52128((uint64_t)v29, (uint64_t *)&unk_3B8C50);
    if (v84(v82, 1, v79) == 1)
    {
      sub_52128(v83, (uint64_t *)&unk_3B8C50);
      v85 = v136;
      v86 = v135;
LABEL_27:
      v150 = sub_14F174;
      v151 = 0;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v147 = 1107296256;
      v148 = sub_15D99C;
      v149 = &unk_384320;
      v94 = _Block_copy(&aBlock);
      swift_release();
      v95 = (void (*)(char *, uint64_t, uint64_t))swift_allocObject(&unk_384358, 48);
      v96 = v142;
      *((_QWORD *)v95 + 2) = v142;
      *((_QWORD *)v95 + 3) = v65;
      *((_QWORD *)v95 + 4) = v86;
      *((_QWORD *)v95 + 5) = v85;
      v150 = sub_15A184;
      v151 = v95;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v147 = 1107296256;
      v148 = sub_15D9D0;
      v149 = &unk_384370;
      v97 = _Block_copy(&aBlock);
      v81 = v151;
      v98 = v96;
      v65 = v65;
      swift_retain();
      objc_msgSend(v65, "be_evaluateJavaScript:completion:", v94, v97, swift_release().n128_f64[0]);

      _Block_release(v97);
      _Block_release(v94);
      if ((swift_isEscapingClosureAtFileLocation(0, "", 107, 425, 59, 1) & 1) == 0)
        return;
      __break(1u);
      goto LABEL_29;
    }
    goto LABEL_25;
  }
  v87 = v132;
  sub_3F238(v83, v132, (uint64_t *)&unk_3B8C50);
  if (v84(v82, 1, v79) == 1)
  {
    sub_52128((uint64_t)v26, (uint64_t *)&unk_3B8C50);
    sub_52128((uint64_t)v29, (uint64_t *)&unk_3B8C50);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v87, v79);
    v65 = v143;
LABEL_25:
    sub_52128(v83, &qword_3B8C78);
    v86 = v135;
    goto LABEL_29;
  }
  v88 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 32);
  v141 = v69;
  v89 = v129;
  v88(v129, v82, v79);
  v90 = sub_34284((unint64_t *)&qword_3B8CA0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  v91 = dispatch thunk of static Equatable.== infix(_:_:)(v87, v89, v79, v90);
  v92 = *(void (**)(char *, uint64_t))(v68 + 8);
  v93 = v89;
  v69 = v141;
  v92(v93, v79);
  sub_52128((uint64_t)v26, (uint64_t *)&unk_3B8C50);
  sub_52128((uint64_t)v29, (uint64_t *)&unk_3B8C50);
  v92((char *)v87, v79);
  sub_52128(v140, (uint64_t *)&unk_3B8C50);
  v85 = v136;
  v86 = v135;
  v65 = v143;
  if ((v91 & 1) != 0)
    goto LABEL_27;
LABEL_29:
  v99 = v133;
  v100 = v139;
  v81(v133, v134, v139);
  v101 = v65;
  v102 = Logger.logObject.getter(v101);
  v103 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v102, v103))
  {
    v104 = swift_slowAlloc(22, -1);
    v143 = (id)swift_slowAlloc(64, -1);
    v152 = (uint64_t)v143;
    *(_DWORD *)v104 = 136315394;
    v105 = objc_msgSend(v101, "URL");
    if (v105)
    {
      v106 = v105;
      v107 = (uint64_t)v130;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v105);

      v108 = 0;
      v109 = (uint64_t)v131;
    }
    else
    {
      v108 = 1;
      v109 = (uint64_t)v131;
      v107 = (uint64_t)v130;
    }
    v111 = v139;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v69)(v107, v108, 1, v139);
    sub_8927C(v107, v109);
    v112 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v84)(v109, 1, v111);
    if ((_DWORD)v112 == 1)
    {
      sub_52128(v109, (uint64_t *)&unk_3B8C50);
      v113 = 0;
      v114 = 0;
      v115 = v137;
    }
    else
    {
      v113 = URL.absoluteString.getter(v112);
      v114 = v116;
      v115 = v137;
      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v109, v111);
    }
    aBlock = v113;
    v147 = v114;
    v117 = sub_319AC((uint64_t *)&unk_3BBB20);
    v118 = String.init<A>(describing:)(&aBlock, v117);
    v120 = v119;
    aBlock = sub_33524(v118, v119, &v152);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v147, v104 + 4);

    swift_bridgeObjectRelease(v120);
    *(_WORD *)(v104 + 12) = 2080;
    v121 = v133;
    v123 = URL.absoluteString.getter(v122);
    v125 = v124;
    aBlock = sub_33524(v123, v124, &v152);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v147, v104 + 14);
    v126 = swift_bridgeObjectRelease(v125);
    (*(void (**)(char *, uint64_t, __n128))(v115 + 8))(v121, v111, v126);
    _os_log_impl(&dword_0, v102, v103, "[PaginationOperation] finished load of URL that does not match our requested URL.\nEnding up in this state is extremely unexpected -- %s != %s", (uint8_t *)v104, 0x16u);
    v127 = v143;
    swift_arrayDestroy(v143, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v127, -1, -1);
    swift_slowDealloc(v104, -1, -1);

    v86 = v135;
  }
  else
  {

    v110 = (*(uint64_t (**)(char *, uint64_t))(v137 + 8))(v99, v100);
  }
  ((void (*)(uint64_t))v86)(v110);
  v128 = v142;
  sub_149C70(1);
  sub_150BCC((uint64_t)"FAILURE: Loaded URL and requested URL mismatch", 46, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
  objc_msgSend(v101, "be_paginationOperationCanceled");

}

void sub_14ED2C(void *a1)
{
  unint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  id v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  const __CFString *v50;
  unint64_t v51;
  int64_t v52;
  _QWORD aBlock[6];

  v1 = sub_62898(128);
  v2 = 0;
  v51 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v52 = (unint64_t)(v3 + 63) >> 6;
  v50 = CFSTR("scrollingElementSize");
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_22;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v10 >= v52)
      goto LABEL_46;
    v11 = *(_QWORD *)(v51 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v52)
        goto LABEL_46;
      v11 = *(_QWORD *)(v51 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v52)
          goto LABEL_46;
        v11 = *(_QWORD *)(v51 + 8 * v2);
        if (!v11)
          break;
      }
    }
LABEL_21:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_22:
    v13 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v9);
    v14 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 16 * v9 + 8);
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("anchorFrames"));
    v17 = v16;
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    if (v15 == v18 && v17 == v19)
    {
      v45 = v13;
      swift_bridgeObjectRetain(v14);
LABEL_39:
      swift_bridgeObjectRelease_n(v17, 2);
      v24 = sub_631E4;
      goto LABEL_40;
    }
    v21 = v19;
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0);
    v23 = v13;
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v21);
    v24 = sub_631E4;
    if ((v22 & 1) != 0)
      goto LABEL_40;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("mediaFrames"));
    v17 = v26;
    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    if (v25 == v27 && v17 == v28)
      goto LABEL_39;
    v30 = v28;
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v17, v27, v28, 0);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v30);
    v24 = sub_631E4;
    if ((v31 & 1) != 0)
      goto LABEL_40;
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("expandableContentFrames"));
    v17 = v33;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v36 = v34;
    if (v32 == v35 && v17 == v34)
      goto LABEL_39;
    v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v17, v35, v34, 0);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v36);
    v24 = sub_631E4;
    if ((v37 & 1) == 0)
    {
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
      v40 = v39;
      v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v43 = v41;
      if (v38 == v42 && v40 == v41)
        v44 = 1;
      else
        v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v41, 0);
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v43);
      if ((v44 & 1) != 0)
        v24 = sub_62CA4;
      else
        v24 = 0;
    }
LABEL_40:
    v46 = String._bridgeToObjectiveC()();
    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v48 = v47;
    v49 = String._bridgeToObjectiveC()();
    v7 = swift_bridgeObjectRelease(v48).n128_u64[0];
    if (v24)
    {
      aBlock[4] = v24;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_152EB0;
      aBlock[3] = &unk_384398;
      v6 = _Block_copy(aBlock);
      v7 = swift_release().n128_u64[0];
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v46, v49, v6, *(double *)&v7, v50);
    _Block_release(v6);

    sub_7241C((uint64_t)v24, 0);
    swift_bridgeObjectRelease(v14);
  }
  v12 = v10 + 3;
  if (v12 >= v52)
  {
LABEL_46:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v51 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v52)
      goto LABEL_46;
    v11 = *(_QWORD *)(v51 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_48:
  __break(1u);
}

void sub_14F178(void *a1, _BYTE *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  uint64_t v18;
  id v19;
  _BYTE *v20;
  id v21;
  uint64_t v22;
  id v23;
  _BYTE *v24;
  id v25;
  NSObject *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("scrollingElementSize"));
    v15 = v14;
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(a1, "resultForKey:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

    if (v17)
    {
      if (a2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_logContentSize] == 1)
      {
        v18 = (uint64_t)&a2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_log];
      }
      else
      {
        if (qword_3B5828 != -1)
          swift_once(&qword_3B5828, sub_17D3CC);
        v18 = sub_555F0(v10, (uint64_t)qword_3BEF28);
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v18, v10);
      v19 = a3;
      v60 = a2;
      v20 = a2;
      v21 = v17;
      v22 = v11;
      v23 = v19;
      v24 = v20;
      v25 = v21;
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, (os_log_type_t)v27))
      {
        v55 = v27;
        v56 = v26;
        v57 = v22;
        v58 = a4;
        v59 = a5;
        v28 = swift_slowAlloc(42, -1);
        v54 = swift_slowAlloc(96, -1);
        v65 = v54;
        *(_DWORD *)v28 = 134218754;
        sub_49F1C((uint64_t)&v24[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 88], (uint64_t)&v61);
        v29 = v63;
        v30 = v64;
        sub_472D0(&v61, v63);
        v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
        sub_34488(&v61);

        v61 = v31;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v28 + 4);

        *(_WORD *)(v28 + 12) = 2080;
        v32 = objc_msgSend(v23, "be_identifier");
        v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
        v35 = v34;

        v61 = sub_33524(v33, v35, &v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v28 + 14);

        *(_QWORD *)&v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
        *(_WORD *)(v28 + 22) = 2080;
        v37 = objc_msgSend(v23, "be_configurationKey", v36);
        if (v37)
        {
          v38 = v37;
          v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
          v41 = v40;

        }
        else
        {
          v39 = 0;
          v41 = 0;
        }
        v61 = v39;
        v62[0] = v41;
        v42 = sub_319AC((uint64_t *)&unk_3BBB20);
        v43 = String.init<A>(describing:)(&v61, v42);
        v45 = v44;
        v61 = sub_33524(v43, v44, &v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v28 + 24);

        swift_bridgeObjectRelease(v45);
        *(_WORD *)(v28 + 32) = 2080;
        v46 = v25;
        v47 = objc_msgSend(v46, "description");
        v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
        v50 = v49;

        v61 = sub_33524(v48, v50, &v65);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v28 + 34);

        swift_bridgeObjectRelease(v50);
        v51 = v56;
        _os_log_impl(&dword_0, v56, (os_log_type_t)v55, "#sizeResults: ordinal:%ld webView:%s key: %s Initial contentSize evaluates to: %s", (uint8_t *)v28, 0x2Au);
        v52 = v54;
        swift_arrayDestroy(v54, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v52, -1, -1);
        swift_slowDealloc(v28, -1, -1);

        (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v10);
        a4 = v58;
        a5 = v59;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v10);
      }
    }
  }
  sub_14B8AC(a4, a5);
}

Swift::Void __swiftcall PaginationOperation.start()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id *v19;
  id v20;
  void *v21;
  uint64_t v22;
  _QWORD aBlock[6];
  objc_super v24;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for PaginationOperation(0);
  v24.receiver = v0;
  v24.super_class = v9;
  objc_msgSendSuper2(&v24, "start");
  if (objc_msgSend(v0, "isCancelled"))
  {
    sub_149C70(1);
    sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
    v11 = (void *)static OS_dispatch_queue.main.getter(v10);
    v12 = swift_allocObject(&unk_383D28, 24);
    *(_QWORD *)(v12 + 16) = v0;
    aBlock[4] = sub_1570C0;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_525B8;
    aBlock[3] = &unk_383D40;
    v13 = _Block_copy(aBlock);
    v14 = v0;
    v15 = swift_release();
    static DispatchQoS.unspecified.getter(v15);
    aBlock[0] = _swiftEmptyArrayStorage;
    v16 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v17 = sub_319AC(&qword_3B96F0);
    v18 = sub_A312C();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v1, v16);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v13);
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v19 = (id *)&v0[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40], "setBe_hasPendingOperations:", 1);
    v20 = objc_msgSend(v19[5], "be_navigationHandler");
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v20, "addObserver:", v0);

    }
    v22 = *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_hasRegisteredObserver];
    LOBYTE(aBlock[0]) = 1;
    swift_retain();
    OSAllocatedUnfairLock.valueWithLock.setter(aBlock, v22, &type metadata for Bool);
    swift_release();
  }
}

Swift::Void __swiftcall PaginationOperation.main()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  char **v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  char *v56;
  void (*v57)(char *, char *, _QWORD *);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t Strong;
  uint64_t v62;
  uint64_t v63;
  uint64_t ObjectType;
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint8_t *v87;
  __n128 v88;
  uint64_t v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *i;
  _QWORD *v99;
  unint64_t v100;
  unint64_t v101;
  int64_t v102;
  unint64_t v103;
  int64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v113;
  unint64_t v114;
  uint64_t v115;
  _BOOL8 v116;
  uint64_t v117;
  char v118;
  unint64_t v119;
  char v120;
  uint64_t *v121;
  _QWORD *v122;
  uint64_t v123;
  BOOL v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  _QWORD *v135;
  unint64_t v136;
  unint64_t v137;
  int64_t v138;
  uint64_t v139;
  unint64_t v140;
  int64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  unint64_t v151;
  uint64_t v152;
  _BOOL8 v153;
  uint64_t v154;
  char v155;
  unint64_t v156;
  char v157;
  uint64_t *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  int64_t v177;
  char *v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  char *v182;
  _QWORD *v183;
  uint64_t v184;
  _BYTE v185[32];
  uint64_t v186[3];
  uint64_t v187;
  uint64_t v188;

  v1 = type metadata accessor for PaginationOperation.Parameters(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v168 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = type metadata accessor for URLRequest(0);
  v172 = *(_QWORD *)(v173 - 8);
  __chkstk_darwin(v173);
  v175 = (uint64_t)&v168 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v5);
  v182 = (char *)&v168 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v179 = *(_QWORD *)(v7 - 8);
  v180 = (_QWORD *)v7;
  __chkstk_darwin(v7);
  v174 = (char *)&v168 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v176 = (char *)&v168 - v10;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "willChangeValueForKey:", v11);

  v0[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__executing] = 1;
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "didChangeValueForKey:", v12);

  v13 = (uint64_t)&v0[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
  v178 = &v0[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 88];
  sub_49F1C((uint64_t)v178, (uint64_t)v186);
  v14 = v187;
  v15 = v188;
  sub_472D0(v186, v187);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  sub_34488(v186);
  v17 = &v0[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_log];
  v18 = v0;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.info.getter();
  v21 = os_log_type_enabled(v19, v20);
  v181 = v13;
  v171 = v3;
  if (v21)
  {
    v22 = swift_slowAlloc(32, -1);
    v170 = v17;
    v23 = v22;
    v24 = swift_slowAlloc(8, -1);
    v177 = v16;
    v25 = (_QWORD *)v24;
    v26 = swift_slowAlloc(32, -1);
    v186[0] = v26;
    *(_DWORD *)v23 = 136315650;
    v27 = type metadata accessor for UUID(0);
    v28 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v29 = dispatch thunk of CustomStringConvertible.description.getter(v27, v28);
    v31 = v30;
    v184 = sub_33524(v29, v30, v186);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v23 + 4);

    swift_bridgeObjectRelease(v31);
    *(_WORD *)(v23 + 12) = 2048;
    v184 = v177;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v23 + 14);
    *(_WORD *)(v23 + 22) = 2112;
    v32 = *(void **)(v13 + 40);
    v184 = (uint64_t)v32;
    v33 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v23 + 24);
    *v25 = v32;

    _os_log_impl(&dword_0, v19, v20, "Pagination OperationID %s Begin -- ordinal %ld -- webView %@", (uint8_t *)v23, 0x20u);
    v34 = sub_319AC(&qword_3B8A70);
    swift_arrayDestroy(v25, 1, v34);
    v35 = v25;
    v16 = v177;
    swift_slowDealloc(v35, -1, -1);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {

  }
  sub_150BCC((uint64_t)"Pagination Operation Begin", 26, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.begin.getter, "#PaginationOperation: %s start event:%s");
  v36 = objc_msgSend(v18, "isCancelled");
  v37 = (uint64_t)v182;
  if ((v36 & 1) != 0)
  {
    sub_149C70(1);
    sub_150BCC((uint64_t)"FAILURE: #PaginationOperation Cancelled starting main", 53, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
    objc_msgSend(*(id *)(v181 + 40), "be_paginationOperationCanceled");
    return;
  }
  v38 = v181;
  sub_49F1C(v181, (uint64_t)v186);
  v39 = v187;
  v40 = v188;
  sub_472D0(v186, v187);
  sub_49F1C((uint64_t)v178, (uint64_t)&v184);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 368))(&v184, v39, v40);
  sub_34488(&v184);
  v42 = v179;
  v41 = v180;
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v179 + 48))(v37, 1, v180) == 1)
  {
    sub_52128(v37, (uint64_t *)&unk_3B8C50);
    sub_34488(v186);
    v43 = v18;
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = swift_slowAlloc(22, -1);
      v47 = (char **)swift_slowAlloc(8, -1);
      v180 = v47;
      v182 = (char *)swift_slowAlloc(32, -1);
      v186[0] = (uint64_t)v182;
      *(_DWORD *)v46 = 138412546;
      v184 = (uint64_t)v43;
      v48 = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v46 + 4);
      *v47 = v43;

      *(_WORD *)(v46 + 12) = 2080;
      v49 = (uint64_t)v171;
      sub_1570F8(v38, (uint64_t)v171);
      v50 = PaginationOperation.Parameters.description.getter();
      v52 = v51;
      sub_15713C(v49);
      v184 = sub_33524(v50, v52, v186);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v46 + 14);

      swift_bridgeObjectRelease(v52);
      _os_log_impl(&dword_0, v44, v45, "Failed to get URL for operation: %@ - %s", (uint8_t *)v46, 0x16u);
      v53 = sub_319AC(&qword_3B8A70);
      v54 = v180;
      swift_arrayDestroy(v180, 1, v53);
      swift_slowDealloc(v54, -1, -1);
      v55 = v182;
      swift_arrayDestroy(v182, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v46, -1, -1);
    }
    else
    {

    }
    sub_149C70(1);
    sub_150BCC((uint64_t)"FAILURE: #PaginationOperation End", 33, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
    return;
  }
  v56 = v176;
  (*(void (**)(char *, uint64_t, _QWORD *))(v42 + 32))(v176, v37, v41);
  sub_34488(v186);
  v57 = *(void (**)(char *, char *, _QWORD *))(v42 + 16);
  v58 = v174;
  v57(v174, v56, v41);
  v59 = v175;
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v58, 0, 60.0);
  v60 = &v18[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_annotationProviderService];
  Strong = swift_unknownObjectWeakLoadStrong(&v18[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_annotationProviderService]);
  if (!Strong)
  {
    v84 = Logger.logObject.getter(0);
    v85 = static os_log_type_t.error.getter(v84);
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v86 = 0;
      v87 = v86;
      v59 = v175;
      swift_slowDealloc(v87, -1, -1);
    }

    sub_14A798(v59);
LABEL_99:
    v167 = v180;
    (*(void (**)(uint64_t, uint64_t, __n128))(v172 + 8))(v59, v173, v88);
    (*(void (**)(char *, _QWORD *))(v179 + 8))(v176, v167);
    return;
  }
  v62 = *((_QWORD *)v60 + 1);
  v63 = Strong;
  ObjectType = swift_getObjectType(Strong);
  v65 = *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8);
  v171 = (char *)v63;
  v66 = v65(ObjectType, v62);
  KeyPath = swift_getKeyPath(&unk_2EE820);
  swift_getKeyPath(&unk_2EE848);
  static Published.subscript.getter(v186, v66, KeyPath);
  swift_release();
  swift_release();
  swift_release();
  v68 = v186[0];
  if (!*(_QWORD *)(v186[0] + 16))
  {
    swift_bridgeObjectRelease(v186[0]);
    v59 = v175;
LABEL_98:
    sub_14A798(v59);
    v88 = swift_unknownObjectRelease(v171);
    goto LABEL_99;
  }
  v170 = v18;
  sub_49F1C((uint64_t)v178, (uint64_t)v186);
  v69 = v187;
  v70 = v188;
  sub_472D0(v186, v187);
  v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 16))(v69, v70);
  if (!*(_QWORD *)(v68 + 16) || (v72 = sub_3B7F8(v71), (v73 & 1) == 0))
  {
    swift_bridgeObjectRelease(v68);
    sub_34488(v186);
    v89 = v175;
    sub_14A798(v175);
    v90 = swift_unknownObjectRelease(v171);
    (*(void (**)(uint64_t, uint64_t, __n128))(v172 + 8))(v89, v173, v90);
    (*(void (**)(char *, _QWORD *))(v179 + 8))(v176, v180);
    return;
  }
  v169 = *(_QWORD *)(*(_QWORD *)(v68 + 56) + 8 * v72);
  swift_retain();
  swift_bridgeObjectRelease(v68);
  sub_34488(v186);
  v74 = v170;
  v75 = Logger.logObject.getter(v74);
  v76 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v75, v76))
  {
    v77 = swift_slowAlloc(22, -1);
    v78 = swift_slowAlloc(32, -1);
    v186[0] = v78;
    *(_DWORD *)v77 = 136315394;
    v79 = type metadata accessor for UUID(0);
    v80 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v81 = dispatch thunk of CustomStringConvertible.description.getter(v79, v80);
    v83 = v82;
    v184 = sub_33524(v81, v82, v186);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v77 + 4);

    swift_bridgeObjectRelease(v83);
    *(_WORD *)(v77 + 12) = 2048;
    v184 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v184, v185, v77 + 14);
    _os_log_impl(&dword_0, v75, v76, "#PaginationOperation: %s Updated ordinal: %ld annotations", (uint8_t *)v77, 0x16u);
    swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v78, -1, -1);
    swift_slowDealloc(v77, -1, -1);
  }
  else
  {

  }
  v91 = swift_getKeyPath(&unk_2EE868);
  swift_getKeyPath(&unk_2EE890);
  static Published.subscript.getter(v186, v169, v91);
  swift_release();
  swift_release();
  v92 = v186[0];
  v93 = (_QWORD *)sub_388B0((uint64_t)_swiftEmptyArrayStorage);
  v94 = *(_QWORD *)(v92 + 64);
  v174 = (char *)(v92 + 64);
  v95 = 1 << *(_BYTE *)(v92 + 32);
  v96 = -1;
  if (v95 < 64)
    v96 = ~(-1 << v95);
  v97 = v96 & v94;
  v177 = (unint64_t)(v95 + 63) >> 6;
  v178 = (char *)v92;
  swift_bridgeObjectRetain(v92);
  for (i = 0; ; i = v182)
  {
    if (v97)
    {
      v100 = __clz(__rbit64(v97));
      v97 &= v97 - 1;
      v182 = i;
      v101 = v100 | ((_QWORD)i << 6);
      goto LABEL_48;
    }
    v102 = (int64_t)(i + 1);
    if (__OFADD__(i, 1))
      goto LABEL_105;
    if (v102 >= v177)
      break;
    v103 = *(_QWORD *)&v174[8 * v102];
    v104 = (int64_t)(i + 1);
    if (!v103)
    {
      v104 = (int64_t)(i + 2);
      if ((uint64_t)(i + 2) >= v177)
        break;
      v103 = *(_QWORD *)&v174[8 * v104];
      if (!v103)
      {
        v104 = (int64_t)(i + 3);
        if ((uint64_t)(i + 3) >= v177)
          break;
        v103 = *(_QWORD *)&v174[8 * v104];
        if (!v103)
        {
          v104 = (int64_t)(i + 4);
          if ((uint64_t)(i + 4) >= v177)
            break;
          v103 = *(_QWORD *)&v174[8 * v104];
          if (!v103)
          {
            v104 = (int64_t)(i + 5);
            if ((uint64_t)(i + 5) >= v177)
              break;
            v103 = *(_QWORD *)&v174[8 * v104];
            if (!v103)
            {
              v105 = i + 6;
              if ((uint64_t)(i + 6) >= v177)
                break;
              v103 = *(_QWORD *)&v174[8 * (_QWORD)v105];
              if (!v103)
              {
                while (1)
                {
                  v104 = (int64_t)(v105 + 1);
                  if (__OFADD__(v105, 1))
                    goto LABEL_107;
                  if (v104 >= v177)
                    goto LABEL_59;
                  v103 = *(_QWORD *)&v174[8 * v104];
                  ++v105;
                  if (v103)
                    goto LABEL_47;
                }
              }
              v104 = (int64_t)(i + 6);
            }
          }
        }
      }
    }
LABEL_47:
    v97 = (v103 - 1) & v103;
    v182 = (char *)v104;
    v101 = __clz(__rbit64(v103)) + (v104 << 6);
LABEL_48:
    v106 = *(_QWORD *)(*((_QWORD *)v178 + 7) + 8 * v101);
    v108 = *(_QWORD *)(v106 + 16);
    v107 = *(_QWORD *)(v106 + 24);
    v109 = (uint64_t *)(v106 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
    swift_beginAccess(v106 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location, v186, 0, 0);
    v110 = *v109;
    v111 = v109[1];
    swift_bridgeObjectRetain(v107);
    swift_bridgeObjectRetain(v111);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v93);
    v184 = (uint64_t)v93;
    v114 = sub_3B8A0(v108, v107);
    v115 = v93[2];
    v116 = (v113 & 1) == 0;
    v117 = v115 + v116;
    if (__OFADD__(v115, v116))
    {
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    v118 = v113;
    if (v93[3] >= v117)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v93 = (_QWORD *)v184;
        if ((v113 & 1) != 0)
          goto LABEL_26;
      }
      else
      {
        sub_F37EC();
        v93 = (_QWORD *)v184;
        if ((v118 & 1) != 0)
          goto LABEL_26;
      }
    }
    else
    {
      sub_EFEEC(v117, isUniquelyReferenced_nonNull_native);
      v119 = sub_3B8A0(v108, v107);
      if ((v118 & 1) != (v120 & 1))
        goto LABEL_109;
      v114 = v119;
      v93 = (_QWORD *)v184;
      if ((v118 & 1) != 0)
      {
LABEL_26:
        v99 = (_QWORD *)(v93[7] + 16 * v114);
        swift_bridgeObjectRelease(v99[1]);
        *v99 = v110;
        v99[1] = v111;
        goto LABEL_27;
      }
    }
    v93[(v114 >> 6) + 8] |= 1 << v114;
    v121 = (uint64_t *)(v93[6] + 16 * v114);
    *v121 = v108;
    v121[1] = v107;
    v122 = (_QWORD *)(v93[7] + 16 * v114);
    *v122 = v110;
    v122[1] = v111;
    v123 = v93[2];
    v124 = __OFADD__(v123, 1);
    v125 = v123 + 1;
    if (v124)
      goto LABEL_103;
    v93[2] = v125;
    swift_bridgeObjectRetain(v107);
LABEL_27:
    swift_bridgeObjectRelease(v107);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
LABEL_59:
  v126 = (uint64_t)v178;
  swift_release();
  swift_bridgeObjectRelease(v126);
  v127 = swift_getKeyPath(&unk_2EE8B0);
  swift_getKeyPath(&unk_2EE8D8);
  static Published.subscript.getter(&v184, v169, v127);
  swift_release();
  swift_release();
  v128 = v184;
  v129 = (_QWORD *)sub_388B0((uint64_t)_swiftEmptyArrayStorage);
  v130 = *(_QWORD *)(v128 + 64);
  v174 = (char *)(v128 + 64);
  v131 = 1 << *(_BYTE *)(v128 + 32);
  v132 = -1;
  if (v131 < 64)
    v132 = ~(-1 << v131);
  v133 = v132 & v130;
  v177 = (unint64_t)(v131 + 63) >> 6;
  v178 = (char *)v128;
  swift_bridgeObjectRetain(v128);
  v134 = 0;
  while (2)
  {
    if (v133)
    {
      v136 = __clz(__rbit64(v133));
      v133 &= v133 - 1;
      v182 = v134;
      v137 = v136 | ((_QWORD)v134 << 6);
      goto LABEL_84;
    }
    v138 = (int64_t)(v134 + 1);
    if (__OFADD__(v134, 1))
      goto LABEL_106;
    v139 = v181;
    if (v138 >= v177)
    {
LABEL_95:
      v162 = (uint64_t)v178;
      swift_release();
      swift_bridgeObjectRelease(v162);
      v163 = sub_1486F8((uint64_t)v129, (uint64_t)v93);
      if (*(_QWORD *)(v163 + 16))
      {
        v164 = *(_QWORD *)(v139 + 240);
        *(_QWORD *)(v139 + 240) = v163;
        v163 = v164;
      }
      swift_bridgeObjectRelease(v163);
      v59 = v175;
      v165 = swift_getKeyPath(&unk_2EE8F8);
      swift_getKeyPath(&unk_2EE920);
      static Published.subscript.getter(&v183, v169, v165);
      swift_release();
      swift_release();
      v166 = *(_QWORD *)(v139 + 248);
      *(_QWORD *)(v139 + 248) = v183;
      swift_release();
      swift_bridgeObjectRelease(v166);
      goto LABEL_98;
    }
    v140 = *(_QWORD *)&v174[8 * v138];
    v141 = (int64_t)(v134 + 1);
    if (v140)
      goto LABEL_83;
    v141 = (int64_t)(v134 + 2);
    if ((uint64_t)(v134 + 2) >= v177)
      goto LABEL_95;
    v140 = *(_QWORD *)&v174[8 * v141];
    if (v140)
      goto LABEL_83;
    v141 = (int64_t)(v134 + 3);
    if ((uint64_t)(v134 + 3) >= v177)
      goto LABEL_95;
    v140 = *(_QWORD *)&v174[8 * v141];
    if (v140)
      goto LABEL_83;
    v141 = (int64_t)(v134 + 4);
    if ((uint64_t)(v134 + 4) >= v177)
      goto LABEL_95;
    v140 = *(_QWORD *)&v174[8 * v141];
    if (v140)
      goto LABEL_83;
    v141 = (int64_t)(v134 + 5);
    if ((uint64_t)(v134 + 5) >= v177)
      goto LABEL_95;
    v140 = *(_QWORD *)&v174[8 * v141];
    if (v140)
    {
LABEL_83:
      v133 = (v140 - 1) & v140;
      v182 = (char *)v141;
      v137 = __clz(__rbit64(v140)) + (v141 << 6);
LABEL_84:
      v143 = *(_QWORD *)(*((_QWORD *)v178 + 7) + 8 * v137);
      v145 = *(_QWORD *)(v143 + 16);
      v144 = *(_QWORD *)(v143 + 24);
      v146 = (uint64_t *)(v143 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
      swift_beginAccess(v143 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location, &v184, 0, 0);
      v147 = *v146;
      v148 = v146[1];
      swift_bridgeObjectRetain(v144);
      swift_bridgeObjectRetain(v148);
      v149 = swift_isUniquelyReferenced_nonNull_native(v129);
      v183 = v129;
      v151 = sub_3B8A0(v145, v144);
      v152 = v129[2];
      v153 = (v150 & 1) == 0;
      v154 = v152 + v153;
      if (__OFADD__(v152, v153))
        goto LABEL_102;
      v155 = v150;
      if (v129[3] < v154)
      {
        sub_EFEEC(v154, v149);
        v156 = sub_3B8A0(v145, v144);
        if ((v155 & 1) != (v157 & 1))
          goto LABEL_109;
        v151 = v156;
        v129 = v183;
        if ((v155 & 1) == 0)
          goto LABEL_91;
LABEL_62:
        v135 = (_QWORD *)(v129[7] + 16 * v151);
        swift_bridgeObjectRelease(v135[1]);
        *v135 = v147;
        v135[1] = v148;
LABEL_63:
        swift_bridgeObjectRelease(v144);
        swift_bridgeObjectRelease(0x8000000000000000);
        v134 = v182;
        continue;
      }
      if ((v149 & 1) != 0)
      {
        v129 = v183;
        if ((v150 & 1) != 0)
          goto LABEL_62;
      }
      else
      {
        sub_F37EC();
        v129 = v183;
        if ((v155 & 1) != 0)
          goto LABEL_62;
      }
LABEL_91:
      v129[(v151 >> 6) + 8] |= 1 << v151;
      v158 = (uint64_t *)(v129[6] + 16 * v151);
      *v158 = v145;
      v158[1] = v144;
      v159 = (_QWORD *)(v129[7] + 16 * v151);
      *v159 = v147;
      v159[1] = v148;
      v160 = v129[2];
      v124 = __OFADD__(v160, 1);
      v161 = v160 + 1;
      if (v124)
        goto LABEL_104;
      v129[2] = v161;
      swift_bridgeObjectRetain(v144);
      goto LABEL_63;
    }
    break;
  }
  v142 = v134 + 6;
  if ((uint64_t)(v134 + 6) >= v177)
    goto LABEL_95;
  v140 = *(_QWORD *)&v174[8 * (_QWORD)v142];
  if (v140)
  {
    v141 = (int64_t)(v134 + 6);
    goto LABEL_83;
  }
  while (1)
  {
    v141 = (int64_t)(v142 + 1);
    if (__OFADD__(v142, 1))
      break;
    if (v141 >= v177)
      goto LABEL_95;
    v140 = *(_QWORD *)&v174[8 * v141];
    ++v142;
    if (v140)
      goto LABEL_83;
  }
LABEL_108:
  __break(1u);
LABEL_109:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_150BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(__n128), const char *a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  unsigned int v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _BYTE v34[12];
  unsigned int v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a5;
  v39 = a1;
  v9 = type metadata accessor for Logger(0);
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  __chkstk_darwin(v9);
  v11 = &v34[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for OSSignpostID(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = &v34[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = a4(v14);
  if (qword_3B56B8 != -1)
    swift_once(&qword_3B56B8, sub_5EFF4);
  v18 = (id)qword_3CEEF8;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)(v17, &dword_0, v18, v39, a2, a3, v16);

  (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v16, v12);
  Logger.init(_:)((id)qword_3CEEF8);
  v19 = v5;
  v20 = Logger.logObject.getter(v19);
  v21 = a3;
  v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v20, v22))
  {
    v23 = swift_slowAlloc(22, -1);
    v24 = swift_slowAlloc(64, -1);
    v41 = v24;
    *(_DWORD *)v23 = 136315394;
    v35 = v21;
    v25 = type metadata accessor for UUID(0);
    v26 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v27 = dispatch thunk of CustomStringConvertible.description.getter(v25, v26);
    v29 = v28;
    v40 = sub_33524(v27, v28, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v23 + 4);

    swift_bridgeObjectRelease(v29);
    *(_WORD *)(v23 + 12) = 2080;
    v30 = StaticString.description.getter(v39, a2, v35);
    v32 = v31;
    v40 = sub_33524(v30, v31, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v23 + 14);
    swift_bridgeObjectRelease(v32);
    _os_log_impl(&dword_0, v20, v22, v36, (uint8_t *)v23, 0x16u);
    swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v37 + 8))(v11, v38);
}

void sub_150F00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  uint64_t KeyPath;
  double v35;
  double v36;
  id v37;
  id v38;
  double v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  _BOOL4 v49;
  char *v50;
  void *v51;
  uint64_t (*v52)();
  uint64_t v53;
  unsigned int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  void (*v61)(_BYTE *, char *, uint64_t);
  _BYTE *v62;
  uint64_t v63;
  uint64_t (*v64)(_BYTE *, uint64_t);
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  __n128 v82;
  void *v83;
  _BYTE *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  void (*v89)(_BYTE *, uint64_t);
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  void *v93;
  char *v94;
  id v95;
  __n128 v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  _BYTE v103[4];
  _BOOL4 v104;
  _BYTE *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BOOL4 v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  double aBlock;
  _QWORD v127[2];
  void *v128;
  uint64_t (*v129)();
  _QWORD *v130;
  uint64_t v131[2];

  v120 = a3;
  v121 = a4;
  v124 = a2;
  v117 = type metadata accessor for DispatchWorkItemFlags(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = &v103[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v114 = type metadata accessor for DispatchQoS(0);
  v113 = *(_QWORD *)(v114 - 8);
  v7 = __chkstk_darwin(v114);
  v112 = &v103[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v109 = type metadata accessor for DispatchTimeInterval(0, v7);
  v108 = *(_QWORD *)(v109 - 8);
  v9 = __chkstk_darwin(v109);
  v107 = &v103[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v111 = type metadata accessor for DispatchTime(0, v9);
  v106 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v105 = &v103[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v110 = &v103[-v13];
  v14 = type metadata accessor for Logger(0);
  v123 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = &v103[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v19 = &v103[-v18];
  *(_QWORD *)&v21 = __chkstk_darwin(v20).n128_u64[0];
  v118 = &v103[-v22];
  v23 = objc_msgSend(a1, "be_contentView", v21);
  objc_msgSend(v23, "frame");
  v25 = v24;
  v27 = v26;

  objc_msgSend(a1, "frame");
  v29 = v28;
  v31 = v30;
  v125 = v4;
  v32 = &v4[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
  v33 = &unk_2EEB88;
  if (*(_QWORD *)&v4[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 160] != 1 && !v32[153])
    v33 = &unk_2EEB68;
  KeyPath = swift_getKeyPath(v33);
  aBlock = *(double *)&v25;
  v127[0] = v27;
  swift_getAtKeyPath(v131, &aBlock, KeyPath);
  v35 = *(double *)v131;
  aBlock = *(double *)&v29;
  v127[0] = v31;
  v119 = KeyPath;
  swift_getAtKeyPath(v131, &aBlock, KeyPath);
  v36 = *(double *)v131;
  v37 = objc_msgSend(a1, "be_contentView");
  v38 = objc_msgSend(v37, "superview");

  if (v38
    && (v40 = objc_msgSend(v38, "layer"),
        v38,
        v41 = objc_msgSend(v40, "animationKeys"),
        v40,
        v41))
  {
    v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, &type metadata for String);

    v43 = *(_QWORD *)(v42 + 16);
    *(_QWORD *)&v39 = swift_bridgeObjectRelease(v42).n128_u64[0];
    v122 = v43 != 0;
  }
  else
  {
    v122 = 0;
  }
  v44 = objc_msgSend(a1, "be_contentView", v39);
  v45 = objc_msgSend(v44, "layer");

  v46 = objc_msgSend(v45, "animationKeys");
  if (v46)
  {
    v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, &type metadata for String);

    v48 = *(_QWORD *)(v47 + 16);
    swift_bridgeObjectRelease(v47);
    v49 = v48 != 0;
  }
  else
  {
    v49 = 0;
  }
  v50 = v125;
  v104 = v49;
  if (v122)
    v49 = 1;
  sub_49F1C((uint64_t)(v32 + 88), (uint64_t)&aBlock);
  v51 = v128;
  v52 = v129;
  sub_472D0(&aBlock, (uint64_t)v128);
  v53 = (*((uint64_t (**)(void *, uint64_t (*)()))v52 + 2))(v51, v52);
  sub_34488(&aBlock);
  v54 = objc_msgSend(v50, "isCancelled");
  v55 = v35 != v36 || v49;
  v56 = v124;
  if (v54 || v124 > 9 || !v55)
  {
    v60 = v123;
    v61 = *(void (**)(_BYTE *, char *, uint64_t))(v123 + 16);
    v61(v16, &v50[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_log], v14);
    if (v56 < 1 || v53 == -1)
    {
      if (qword_3B5828 != -1)
        swift_once(&qword_3B5828, sub_17D3CC);
      v63 = sub_555F0(v14, (uint64_t)qword_3BEF28);
      v62 = v19;
    }
    else
    {
      v62 = v19;
      v63 = (uint64_t)v16;
    }
    v61(v62, (char *)v63, v14);
    v64 = *(uint64_t (**)(_BYTE *, uint64_t))(v60 + 8);
    v65 = v64(v16, v14);
    v66 = Logger.logObject.getter(v65);
    v67 = static os_log_type_t.error.getter(v66);
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc(42, -1);
      *(_DWORD *)v68 = 134218752;
      aBlock = *(double *)&v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v127, v68 + 4);
      *(_WORD *)(v68 + 12) = 2048;
      aBlock = *(double *)&v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v127, v68 + 14);
      *(_WORD *)(v68 + 22) = 2048;
      aBlock = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v127, v68 + 24);
      *(_WORD *)(v68 + 32) = 2048;
      aBlock = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v127, v68 + 34);
      _os_log_impl(&dword_0, v66, v67, "Running pagination for ordinal: %ld after %ld attempts.\n    Current Sizes: be_contentView.size:%f webView.size:%f", (uint8_t *)v68, 0x2Au);
      swift_slowDealloc(v68, -1, -1);
    }

    v64(v19, v14);
    sub_151A10(a1, v120, v121);
    swift_release();
  }
  else
  {
    v57 = v123;
    if (v53 == -1)
    {
      v59 = v118;
      if (qword_3B5828 != -1)
        swift_once(&qword_3B5828, sub_17D3CC);
      v58 = sub_555F0(v14, (uint64_t)qword_3BEF28);
    }
    else
    {
      v58 = (uint64_t)&v50[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_log];
      v59 = v118;
    }
    v69 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v57 + 16))(v59, v58, v14);
    v70 = Logger.logObject.getter(v69);
    v71 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = swift_slowAlloc(54, -1);
      v73 = swift_slowAlloc(64, -1);
      v131[0] = v73;
      *(_DWORD *)v72 = 134219266;
      aBlock = *(double *)&v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v127, v72 + 4);
      *(_WORD *)(v72 + 12) = 2080;
      aBlock = *(double *)&v25;
      v127[0] = v27;
      type metadata accessor for CGSize(0);
      v75 = v74;
      v76 = String.init<A>(describing:)(&aBlock, v74);
      v78 = v77;
      aBlock = COERCE_DOUBLE(sub_33524(v76, v77, v131));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v127, v72 + 14);
      swift_bridgeObjectRelease(v78);
      *(_WORD *)(v72 + 22) = 2080;
      aBlock = *(double *)&v29;
      v127[0] = v31;
      v79 = String.init<A>(describing:)(&aBlock, v75);
      v81 = v80;
      aBlock = COERCE_DOUBLE(sub_33524(v79, v80, v131));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v127, v72 + 24);
      swift_bridgeObjectRelease(v81);
      *(_WORD *)(v72 + 32) = 2048;
      aBlock = *(double *)&v124;
      v50 = v125;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v127, v72 + 34);
      *(_WORD *)(v72 + 42) = 1024;
      LODWORD(aBlock) = v122;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v72 + 44);
      *(_WORD *)(v72 + 48) = 1024;
      LODWORD(aBlock) = v104;
      v56 = v124;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v72 + 50);
      _os_log_impl(&dword_0, v70, v71, "Delaying running pagination JS information gathering for ordinal: %ld while our webView was in a transitionary state! be_contentView.size:%s webView.size:%s attempts: %ld WKScrollViewHasAnimations: %{BOOL}d WKContentViewHasAnimations: %{BOOL}d", (uint8_t *)v72, 0x36u);
      swift_arrayDestroy(v73, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v72, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v123 + 8))(v118, v14);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v59, v14);
    }
    sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
    v83 = (void *)static OS_dispatch_queue.main.getter(v82);
    v84 = v105;
    static DispatchTime.now()();
    v85 = v107;
    *v107 = 100;
    v86 = v108;
    v87 = v109;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v108 + 104))(v85, enum case for DispatchTimeInterval.milliseconds(_:), v109);
    v88 = v110;
    + infix(_:_:)(v84, v85);
    (*(void (**)(_QWORD *, uint64_t))(v86 + 8))(v85, v87);
    v89 = *(void (**)(_BYTE *, uint64_t))(v106 + 8);
    v90 = v111;
    v89(v84, v111);
    v91 = (_QWORD *)swift_allocObject(&unk_383F98, 56);
    v91[2] = v50;
    v91[3] = a1;
    v92 = v120;
    v91[4] = v56;
    v91[5] = v92;
    v91[6] = v121;
    v129 = sub_159C9C;
    v130 = v91;
    aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
    v127[0] = 1107296256;
    v127[1] = sub_525B8;
    v128 = &unk_383FB0;
    v93 = _Block_copy(&aBlock);
    v94 = v50;
    v95 = a1;
    swift_retain();
    v96 = swift_release();
    v97 = v112;
    static DispatchQoS.unspecified.getter(v96);
    aBlock = COERCE_DOUBLE(_swiftEmptyArrayStorage);
    v98 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v99 = sub_319AC(&qword_3B96F0);
    v100 = sub_A312C();
    v101 = v115;
    v102 = v117;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v99, v100, v117, v98);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v88, v97, v101, v93);
    swift_release();
    _Block_release(v93);

    (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v101, v102);
    (*(void (**)(_BYTE *, uint64_t))(v113 + 8))(v97, v114);
    v89(v88, v90);
  }
}

void sub_151A10(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  uint64_t v8;
  void *v9;
  unsigned __int8 (**v10)(void *, void *);
  int v11;
  void *v12;
  unsigned __int8 (**v13)(void *, void *);
  BOOL v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void **v23;
  uint64_t v24;
  void (*v25)(uint64_t, void *);
  void *v26;
  unsigned __int8 (**v27)(void *, void *);
  uint64_t v28;

  v4 = v3;
  if ((objc_msgSend(v3, "isCancelled") & 1) != 0)
  {
    sub_149C70(1);
    sub_150BCC((uint64_t)"FAILURE: #PaginationOperation Cancelled in executeJavaScriptIn", 62, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40], "be_paginationOperationCanceled");
  }
  else
  {
    v8 = (uint64_t)&v3[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
    sub_49F1C((uint64_t)&v3[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters], (uint64_t)&v23);
    v9 = v26;
    v10 = v27;
    sub_472D0(&v23, (uint64_t)v26);
    v11 = v10[13](v9, v10);
    sub_34488(&v23);
    if (v11)
    {
      sub_49F1C(v8, (uint64_t)&v23);
      v12 = v26;
      v13 = v27;
      sub_472D0(&v23, (uint64_t)v26);
      v14 = v13[13](v12, v13) == 3;
      sub_34488(&v23);
    }
    else
    {
      v14 = 1;
    }
    v15 = swift_allocObject(&unk_383FE8, 32);
    *(_QWORD *)(v15 + 16) = v4;
    *(_QWORD *)(v15 + 24) = a1;
    v27 = (unsigned __int8 (**)(void *, void *))sub_159CFC;
    v28 = v15;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_51504;
    v26 = &unk_384000;
    v16 = _Block_copy(&v23);
    v17 = v4;
    v18 = a1;
    swift_release();
    v19 = swift_allocObject(&unk_384038, 49);
    *(_QWORD *)(v19 + 16) = v17;
    *(_QWORD *)(v19 + 24) = v18;
    *(_QWORD *)(v19 + 32) = a2;
    *(_QWORD *)(v19 + 40) = a3;
    *(_BYTE *)(v19 + 48) = v14;
    v27 = (unsigned __int8 (**)(void *, void *))sub_159D0C;
    v28 = v19;
    v23 = _NSConcreteStackBlock;
    v24 = 1107296256;
    v25 = sub_15D9D0;
    v26 = &unk_384050;
    v20 = _Block_copy(&v23);
    v21 = v17;
    v22 = v18;
    swift_retain();
    objc_msgSend(v22, "be_evaluateJavaScript:afterNextPresentationUpdate:completion:", v16, 0, v20, swift_release().n128_f64[0]);
    _Block_release(v20);
    _Block_release(v16);
  }
}

uint64_t sub_151C8C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  double v7;
  unint64_t v8;
  double v9;
  double v10;
  NSString v11;
  id v12;
  NSString v13;
  id v14;
  void *v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  NSString v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  void *v24;
  id v25;
  NSString v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  void *v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char v48;
  id v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  id v71;
  NSString v72;
  uint64_t v73;
  uint64_t v74;
  NSString v75;
  NSString v76;
  uint64_t v77;
  uint64_t v78;
  NSString v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  int64_t v83;
  int64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSString v90;
  int64_t v91;
  unint64_t v92;
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  Class isa;
  NSString v97;
  uint64_t v98;
  uint64_t v99;
  NSString v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  Class v104;
  NSString v105;
  uint64_t v106;
  uint64_t v107;
  NSString v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  Class v112;
  NSString v113;
  uint64_t v114;
  uint64_t v115;
  NSString v116;
  uint64_t v117;
  void *v118;
  void *v119;
  uint64_t (*v120)(uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSString v124;
  uint64_t v125;
  uint64_t v126;
  NSString v127;
  void *v128;
  uint64_t (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char v137;
  unint64_t v138;
  _QWORD *v139;
  Class v140;
  id v141;
  NSString v142;
  uint64_t result;
  uint64_t v144;
  uint64_t v145;
  id v146;
  void *v147;
  uint64_t v148;
  id v149;
  uint64_t v150;
  unint64_t v151;
  int64_t v152;
  _QWORD v153[3];
  uint64_t v154;
  uint64_t v155;
  void **aBlock;
  uint64_t v157;
  id (*v158)(uint64_t, void *, void *);
  void *v159;
  uint64_t (*v160)(uint64_t, uint64_t);
  uint64_t v161;

  sub_14B004((uint64_t)"Add JS to evaluate Begin", 24, 2);
  v6 = a2 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters;
  v7 = *(double *)(a2 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 136);
  v8 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 160);
  v9 = *(double *)(a2 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 168);
  v10 = *(double *)(a2 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 184);
  v11 = *(NSString *)(a2 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 208);
  v12 = objc_msgSend(a3, "be_imageFilterMode", swift_bridgeObjectRetain(v11).n128_f64[0]);
  v150 = v6;
  v13 = *(NSString *)(v6 + 224);
  if (v8 >= 4)
    goto LABEL_102;
  v14 = v12;
  v15 = (void *)objc_opt_self(BECFIUtilitiesJS);
  v16 = objc_msgSend(v15, "updateScriptWithOptions:gapBetweenPages:paginatedTopToBottom:", v13, 0, v10);
  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v18 = v17;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v18);
  }
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v16, v19, 0);

  v13 = (NSString)v150;
  v149 = (id)objc_opt_self(BEContentSupportJS);
  v20 = objc_msgSend(v149, "javascriptForUpdatedDisplaySetting:imageFilterMode:lineGuideEnabled:", *(unsigned __int8 *)(v150 + 232), v14, *(unsigned __int8 *)(v150 + 233));
  if (!v20)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v22 = v21;
    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
  }
  v147 = v15;
  v148 = a2;
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v20, v23, 0);

  v24 = (void *)objc_opt_self(BEContentCleanupJS);
  v25 = *(id *)(v150 + *(int *)(type metadata accessor for PaginationOperation.Parameters(0) + 92));
  v26 = objc_msgSend(v24, "updateScriptWithOptions:pageLength:gapBetweenPages:", v25, v9, v7);

  swift_bridgeObjectRelease(v11);
  if (!v26)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v28 = v27;
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
  }
  v11 = String._bridgeToObjectiveC()();
  v29 = a1;
  objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v26, v11, 0);

  v30 = sub_62898(*(_QWORD *)(v150 + 216));
  v8 = 0;
  v151 = v30 + 64;
  v31 = 1 << *(_BYTE *)(v30 + 32);
  v32 = -1;
  if (v31 < 64)
    v32 = ~(-1 << v31);
  v33 = v32 & *(_QWORD *)(v30 + 64);
  v152 = (unint64_t)(v31 + 63) >> 6;
  while (1)
  {
    if (v33)
    {
      v35 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      v36 = v35 | (v8 << 6);
      goto LABEL_29;
    }
    v37 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    v38 = v29;
    if (v37 >= v152)
      goto LABEL_53;
    v39 = *(_QWORD *)(v151 + 8 * v37);
    ++v8;
    if (!v39)
    {
      v8 = v37 + 1;
      if (v37 + 1 >= v152)
        goto LABEL_53;
      v39 = *(_QWORD *)(v151 + 8 * v8);
      if (!v39)
      {
        v8 = v37 + 2;
        if (v37 + 2 >= v152)
          goto LABEL_53;
        v39 = *(_QWORD *)(v151 + 8 * v8);
        if (!v39)
          break;
      }
    }
LABEL_28:
    v33 = (v39 - 1) & v39;
    v36 = __clz(__rbit64(v39)) + (v8 << 6);
LABEL_29:
    v11 = *(NSString *)(*(_QWORD *)(v30 + 48) + 8 * v36);
    v13 = *(NSString *)(*(_QWORD *)(v30 + 56) + 16 * v36 + 8);
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("anchorFrames"));
    v43 = v42;
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    if (v41 == v44 && v43 == v45)
    {
      v71 = v11;
      swift_bridgeObjectRetain(v13);
LABEL_46:
      swift_bridgeObjectRelease_n(v43, 2);
      v50 = (uint64_t (*)(uint64_t, uint64_t))sub_631E4;
      goto LABEL_47;
    }
    v47 = v45;
    v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v44, v45, 0);
    v49 = v11;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v47);
    v50 = (uint64_t (*)(uint64_t, uint64_t))sub_631E4;
    if ((v48 & 1) != 0)
      goto LABEL_47;
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("mediaFrames"));
    v43 = v52;
    v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    if (v51 == v53 && v43 == v54)
      goto LABEL_46;
    v56 = v54;
    v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v43, v53, v54, 0);
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v56);
    v50 = (uint64_t (*)(uint64_t, uint64_t))sub_631E4;
    if ((v57 & 1) != 0)
      goto LABEL_47;
    v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("expandableContentFrames"));
    v43 = v59;
    v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v62 = v60;
    if (v58 == v61 && v43 == v60)
      goto LABEL_46;
    v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v43, v61, v60, 0);
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v62);
    v50 = (uint64_t (*)(uint64_t, uint64_t))sub_631E4;
    if ((v63 & 1) == 0)
    {
      v64 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("scrollingElementSize"));
      v66 = v65;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v69 = v67;
      if (v64 == v68 && v66 == v67)
        v70 = 1;
      else
        v70 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, v68, v67, 0);
      swift_bridgeObjectRelease(v66);
      swift_bridgeObjectRelease(v69);
      if ((v70 & 1) != 0)
        v50 = (uint64_t (*)(uint64_t, uint64_t))sub_62CA4;
      else
        v50 = 0;
    }
LABEL_47:
    v72 = String._bridgeToObjectiveC()();
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v74 = v73;
    v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v74);
    if (v50)
    {
      v160 = v50;
      v161 = 0;
      aBlock = _NSConcreteStackBlock;
      v157 = 1107296256;
      v158 = sub_152EB0;
      v159 = &unk_384190;
      v34 = _Block_copy(&aBlock);
      swift_release();
    }
    else
    {
      v34 = 0;
    }
    objc_msgSend(v29, "addScriptToEvaluate:key:transform:", v72, v75, v34);
    _Block_release(v34);

    sub_7241C((uint64_t)v50, 0);
    swift_bridgeObjectRelease(v13);
  }
  v40 = v37 + 3;
  if (v40 < v152)
  {
    v39 = *(_QWORD *)(v151 + 8 * v40);
    if (!v39)
    {
      while (1)
      {
        v8 = v40 + 1;
        if (__OFADD__(v40, 1))
          break;
        if ((uint64_t)v8 >= v152)
          goto LABEL_53;
        v39 = *(_QWORD *)(v151 + 8 * v8);
        ++v40;
        if (v39)
          goto LABEL_28;
      }
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    v8 = v40;
    goto LABEL_28;
  }
LABEL_53:
  v76 = objc_msgSend(v149, "performAfterLoad", swift_release().n128_f64[0]);
  if (!v76)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v78 = v77;
    v76 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v78);
  }
  v79 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "addScriptToEvaluate:key:transform:", v76, v79, 0);

  v11 = *(NSString *)(v150 + 272);
  v8 = (unint64_t)v11 + 64;
  v80 = 1 << *((_BYTE *)v11 + 32);
  v81 = -1;
  if (v80 < 64)
    v81 = ~(-1 << v80);
  v82 = v81 & *((_QWORD *)v11 + 8);
  v83 = (unint64_t)(v80 + 63) >> 6;
  swift_bridgeObjectRetain(*(_QWORD *)(v150 + 272));
  v84 = 0;
  while (2)
  {
    if (v82)
    {
      v85 = __clz(__rbit64(v82));
      v82 &= v82 - 1;
      v86 = v85 | (v84 << 6);
LABEL_59:
      v87 = 16 * v86;
      v88 = *(_QWORD *)(*((_QWORD *)v11 + 6) + v87 + 8);
      v89 = *(_QWORD *)(*((_QWORD *)v11 + 7) + v87 + 8);
      swift_bridgeObjectRetain(v88);
      swift_bridgeObjectRetain(v89);
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v89);
      v90 = String._bridgeToObjectiveC()();
      objc_msgSend(v38, "addScriptToEvaluate:key:transform:", v13, v90, 0, swift_bridgeObjectRelease(v88).n128_f64[0]);

      continue;
    }
    break;
  }
  v91 = v84 + 1;
  if (__OFADD__(v84, 1))
    goto LABEL_99;
  if (v91 >= v83)
  {
LABEL_75:
    swift_release();
    v94 = v150;
    v95 = *(_QWORD *)(v150 + 248);
    if (v95 && *(_QWORD *)(v95 + 16))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v150 + 248));
      sub_319AC(&qword_3BBEE0);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v97 = objc_msgSend(v147, "upgradeAnnotationsScript:", isa, swift_bridgeObjectRelease(v95).n128_f64[0]);

      if (!v97)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v99 = v98;
        v97 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v99);
      }
      v100 = String._bridgeToObjectiveC()();
      v101 = swift_allocObject(&unk_384100, 24);
      swift_unknownObjectWeakInit(v101 + 16, v148);
      v160 = sub_159EB8;
      v161 = v101;
      aBlock = _NSConcreteStackBlock;
      v157 = 1107296256;
      v158 = sub_152EB0;
      v159 = &unk_384208;
      v102 = _Block_copy(&aBlock);
      objc_msgSend(v38, "addScriptToEvaluate:key:transform:", v97, v100, v102, swift_release().n128_f64[0]);
      _Block_release(v102);

      v94 = v150;
    }
    v103 = *(_QWORD *)(v94 + 240);
    if (v103 && *(_QWORD *)(v103 + 16))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v94 + 240));
      v104 = Dictionary._bridgeToObjectiveC()().super.isa;
      v105 = objc_msgSend(v147, "clientRectsForAnnotationCFIs:", v104, swift_bridgeObjectRelease(v103).n128_f64[0]);

      if (!v105)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v107 = v106;
        v105 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v107);
      }
      v108 = String._bridgeToObjectiveC()();
      v109 = swift_allocObject(&unk_384100, 24);
      swift_unknownObjectWeakInit(v109 + 16, v148);
      v160 = sub_159E98;
      v161 = v109;
      aBlock = _NSConcreteStackBlock;
      v157 = 1107296256;
      v158 = sub_152EB0;
      v159 = &unk_3841E0;
      v110 = _Block_copy(&aBlock);
      objc_msgSend(v38, "addScriptToEvaluate:key:transform:", v105, v108, v110, swift_release().n128_f64[0]);
      _Block_release(v110);

      v94 = v150;
    }
    v111 = *(_QWORD *)(v94 + 256);
    if (v111 && *(_QWORD *)(v111 + 16))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v94 + 256));
      v112 = Dictionary._bridgeToObjectiveC()().super.isa;
      v113 = objc_msgSend(v147, "clientRectsForAnnotationCFIs:", v112, swift_bridgeObjectRelease(v111).n128_f64[0]);

      if (!v113)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v115 = v114;
        v113 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v115);
      }
      v116 = String._bridgeToObjectiveC()();
      v117 = swift_allocObject(&unk_384100, 24);
      swift_unknownObjectWeakInit(v117 + 16, v148);
      v160 = sub_159E98;
      v161 = v117;
      aBlock = _NSConcreteStackBlock;
      v157 = 1107296256;
      v158 = sub_152EB0;
      v159 = &unk_3841B8;
      v118 = _Block_copy(&aBlock);
      objc_msgSend(v38, "addScriptToEvaluate:key:transform:", v113, v116, v118, swift_release().n128_f64[0]);
      _Block_release(v118);

      v94 = v150;
    }
    sub_49F1C(v94, (uint64_t)&aBlock);
    v119 = v159;
    v120 = v160;
    sub_472D0(&aBlock, (uint64_t)v159);
    v121 = (*((uint64_t (**)(void *, _QWORD))v120 + 15))(v119, v120);
    sub_49F1C(v94 + 88, (uint64_t)v153);
    v122 = v154;
    v123 = v155;
    sub_472D0(v153, v154);
    v124 = objc_msgSend(v147, "textNodeCharacterCountsScriptForSpineIndex:documentOrdinal:", v121, (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 16))(v122, v123));
    sub_34488(v153);
    sub_34488(&aBlock);
    if (!v124)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v126 = v125;
      v124 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v126);
    }
    v127 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "addScriptToEvaluate:key:transform:", v124, v127, 0);

    if (*(_BYTE *)(v94 + 264) == 1)
    {
      sub_49F1C(v94, (uint64_t)&aBlock);
      v128 = v159;
      v129 = v160;
      sub_472D0(&aBlock, (uint64_t)v159);
      v130 = (*((uint64_t (**)(void *, _QWORD))v129 + 34))(v128, v129);
      sub_49F1C(v94 + 88, (uint64_t)v153);
      v131 = v154;
      v132 = v155;
      sub_472D0(v153, v154);
      v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v132 + 8))(v131, v132);
      v135 = v134;
      if (*(_QWORD *)(v130 + 16) && (v136 = sub_3B8A0(v133, v134), (v137 & 1) != 0))
      {
        v138 = *(_QWORD *)(*(_QWORD *)(v130 + 56) + 8 * v136);
        swift_bridgeObjectRetain(v138);
        swift_bridgeObjectRelease(v135);
        swift_bridgeObjectRelease(v130);
        v139 = sub_148574(v138);
        swift_bridgeObjectRelease(v138);
        sub_34488(v153);
        sub_34488(&aBlock);
        v140 = Array._bridgeToObjectiveC()().super.isa;
        v141 = objc_msgSend(v147, "cfisForHrefsScript:", v140, swift_bridgeObjectRelease(v139).n128_f64[0]);

        v142 = String._bridgeToObjectiveC()();
        objc_msgSend(v38, "addScriptToEvaluate:key:transform:", v141, v142, 0);

      }
      else
      {
        swift_bridgeObjectRelease(v135);
        swift_bridgeObjectRelease(v130);
        sub_34488(v153);
        sub_34488(&aBlock);
      }
    }
    return sub_14B004((uint64_t)"Add JS to evaluate End", 22, 2);
  }
  v92 = *(_QWORD *)(v8 + 8 * v91);
  ++v84;
  if (v92)
    goto LABEL_74;
  v84 = v91 + 1;
  if (v91 + 1 >= v83)
    goto LABEL_75;
  v92 = *(_QWORD *)(v8 + 8 * v84);
  if (v92)
    goto LABEL_74;
  v84 = v91 + 2;
  if (v91 + 2 >= v83)
    goto LABEL_75;
  v92 = *(_QWORD *)(v8 + 8 * v84);
  if (v92)
  {
LABEL_74:
    v82 = (v92 - 1) & v92;
    v86 = __clz(__rbit64(v92)) + (v84 << 6);
    goto LABEL_59;
  }
  v93 = v91 + 3;
  if (v93 >= v83)
    goto LABEL_75;
  v92 = *(_QWORD *)(v8 + 8 * v93);
  if (v92)
  {
    v84 = v93;
    goto LABEL_74;
  }
  while (1)
  {
    v84 = v93 + 1;
    if (__OFADD__(v93, 1))
      break;
    if (v84 >= v83)
      goto LABEL_75;
    v92 = *(_QWORD *)(v8 + 8 * v84);
    ++v93;
    if (v92)
      goto LABEL_74;
  }
LABEL_101:
  __break(1u);
LABEL_102:
  type metadata accessor for BookLayoutMode(0);
  v145 = v144;
  aBlock = (void **)v8;
  swift_bridgeObjectRetain(v11);
  v146 = v13;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v145, &aBlock, v145, &type metadata for UInt);
  __break(1u);
  return result;
}

id sub_152BD0(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v4 = objc_msgSend(objc_allocWithZone((Class)NSMutableDictionary), "init");
  if (a1
    && (v5 = objc_opt_self(NSDictionary), (v6 = swift_dynamicCastObjCClass(a1, v5)) != 0)
    && (v7 = v6,
        v29 = 0,
        v8 = sub_319AC(&qword_3BE358),
        v9 = static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v7, &v29, &type metadata for String, v8, &protocol witness table for String), (v10 = v29) != 0))
  {
    __chkstk_darwin(v9);
    sub_156C60(v10, (void (*)(uint64_t, uint64_t, uint64_t))sub_159ED8);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = a1;
    swift_errorRetain(a2);
    v12 = v11;
    v13 = swift_errorRetain(a2);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(22, -1);
      v17 = swift_slowAlloc(64, -1);
      v28 = (uint64_t)a1;
      v29 = v17;
      *(_DWORD *)v16 = 136315394;
      v18 = v12;
      v19 = sub_319AC(&qword_3B8A70);
      v20 = String.init<A>(describing:)(&v28, v19);
      v22 = v21;
      v28 = sub_33524(v20, v21, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v16 + 4);

      swift_bridgeObjectRelease(v22);
      *(_WORD *)(v16 + 12) = 2080;
      v28 = a2;
      swift_errorRetain(a2);
      v23 = sub_319AC(&qword_3BE350);
      v24 = String.init<A>(describing:)(&v28, v23);
      v26 = v25;
      v28 = sub_33524(v24, v25, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v16 + 14);
      swift_bridgeObjectRelease(v26);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl(&dword_0, v14, v15, "Failed to convert upgradeAnnotations result to required type ([String: [String: Any]]) result: %s - error: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {

      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }
    return 0;
  }
  return v4;
}

id sub_152EB0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t (*v6)(void *, void *);
  id v7;
  id v8;
  void *v9;

  v6 = *(uint64_t (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  v8 = a3;
  v9 = (void *)v6(a2, a3);
  swift_release(v5);

  return v9;
}

id sub_152F24(void *a1, id a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Class isa;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;

  if (a1)
  {
    v4 = objc_opt_self(NSDictionary);
    v5 = swift_dynamicCastObjCClass(a1, v4);
    if (v5)
    {
      v6 = v5;
      v29 = 0;
      v7 = sub_319AC(&qword_3BE360);
      static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)(v6, &v29, &type metadata for String, v7, &protocol witness table for String);
      v8 = v29;
      if (v29)
      {
        v9 = (void *)objc_opt_self(BEJavascriptUtilities);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        a2 = objc_msgSend(v9, "keyedRectsFromKeyedDOMRects:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

        if (a2)
          return a2;
        __break(1u);
      }
    }
  }
  v11 = a1;
  swift_errorRetain(a2);
  v12 = v11;
  v13 = swift_errorRetain(a2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v28 = (uint64_t)a1;
    v29 = v17;
    *(_DWORD *)v16 = 136315394;
    v18 = v12;
    v19 = sub_319AC(&qword_3B8A70);
    v20 = String.init<A>(describing:)(&v28, v19);
    v22 = v21;
    v28 = sub_33524(v20, v21, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v16 + 4);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v16 + 12) = 2080;
    v28 = (uint64_t)a2;
    swift_errorRetain(a2);
    v23 = sub_319AC(&qword_3BE350);
    v24 = String.init<A>(describing:)(&v28, v23);
    v26 = v25;
    v28 = sub_33524(v24, v25, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v16 + 14);
    swift_bridgeObjectRelease(v26);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl(&dword_0, v14, v15, "Failed to convert clientRects result to required type ([String: [[String: NSNumber]]]) result: %s - error: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }
  return 0;
}

uint64_t sub_153200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  _BYTE v12[24];

  v7 = a3 + 16;
  swift_beginAccess(a3 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (!Strong)
    return 0;
  v9 = (void *)Strong;
  v10 = a4(a1, a2);

  return v10;
}

void sub_153280(void *a1, char *a2, NSObject *a3, void (*a4)(uint64_t), uint64_t a5, int a6, __n128 a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint8_t *v21;
  NSString v22;
  NSString v23;
  NSString v24;
  uint64_t v25;
  NSObject *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double *v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t v37;
  double *v38;
  double v39;
  char *v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(void);
  id v50;
  double v51;
  NSString v52;
  id v53;
  uint64_t v54;
  void *v55;
  unint64_t *v56;
  NSString v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  NSString v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSString v71;
  double v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  NSString v77;
  double v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  NSString v85;
  double v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  Swift::String v90;
  uint64_t v91;
  uint64_t v92;
  NSString v93;
  double v94;
  id v95;
  uint64_t v96;
  id v97;
  double v98;
  double v99;
  double v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  NSString v104;
  double v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSString v112;
  double v113;
  id v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  NSString v120;
  double v121;
  id v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  id v128;
  NSString v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  NSString v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  id v150;
  NSObject *v151;
  unint64_t v152;
  uint64_t v153;
  char *v154;
  NSObject *v155;
  char *v156;
  NSObject *v157;
  NSObject *v158;
  os_log_type_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t ObjectType;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  NSObject *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  void **v185;
  __n128 v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  NSObject *v200;
  NSObject *v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  void **v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(uint64_t);
  unint64_t v220;
  uint64_t v221;
  NSObject *v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  double v228;
  _QWORD v229[2];
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239[8];

  v13 = type metadata accessor for DispatchTime(0, a7);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v202 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_14B004((uint64_t)"JS Execution Complete", 21, 2);
  if (a1)
  {
    v227 = a1;
    if ((objc_msgSend(a2, "isCancelled") & 1) != 0)
    {
      -[NSObject be_paginationOperationCanceled](a3, "be_paginationOperationCanceled");
      sub_149C70(1);
      v18 = sub_150BCC((uint64_t)"FAILURE: #PaginationOperation Cancelled in completion of evaluating js.", 71, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
      a4(v18);

      return;
    }
    LODWORD(v216) = a6;
    v217 = v14;
    v218 = v13;
    v219 = a4;
    v221 = a5;
    v26 = dispatch_group_create();
    v27 = &a2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
    v28 = *(_QWORD *)&a2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 280];
    v29 = *(_QWORD *)(v28 + 16);
    if (!v29)
    {
      v32 = 10.0;
LABEL_19:
      v40 = &a2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_log];
      v41 = a2;
      v204 = (uint64_t)v40;
      v42 = Logger.logObject.getter(v41);
      v43 = static os_log_type_t.debug.getter();
      v44 = os_log_type_enabled(v42, v43);
      v224 = v41;
      if (v44)
      {
        v45 = swift_slowAlloc(22, -1);
        *(_DWORD *)v45 = 134218240;
        v228 = *(double *)(*((_QWORD *)v27 + 35) + 16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v228, v229, v45 + 4);

        *(_WORD *)(v45 + 12) = 2048;
        v228 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v228, v229, v45 + 14);
        _os_log_impl(&dword_0, v42, v43, "Running an additional %ld operations with total timeout %fs", (uint8_t *)v45, 0x16u);
        swift_slowDealloc(v45, -1, -1);
      }
      else
      {

      }
      v46 = *((_QWORD *)v27 + 35);
      v47 = *(_QWORD *)(v46 + 16);
      if (v47)
      {
        swift_bridgeObjectRetain(*((_QWORD *)v27 + 35));
        v48 = v46 + 48;
        do
        {
          v49 = *(void (**)(void))(v48 - 8);
          swift_retain();
          dispatch_group_enter(v26);
          v50 = *((id *)v27 + 5);
          v49();

          dispatch_group_leave(v26);
          swift_release();
          v48 += 24;
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease(v46);
      }
      v51 = v32 * 1000000000.0;
      if ((~COERCE__INT64(v32 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v51 > -1.0)
        {
          if (v51 < 1.84467441e19)
          {
            DispatchTime.init(uptimeNanoseconds:)((unint64_t)v51);
            OS_dispatch_group.wait(timeout:)(v16);
            v52 = String._bridgeToObjectiveC()();
            v53 = objc_msgSend(v227, "dictionaryResultForKey:", v52);

            if (v53)
            {
              v54 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v53, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

              sub_148A94(v54, (uint64_t *)&unk_3BE310, &qword_3BE320);
              v53 = v55;
              swift_bridgeObjectRelease(v54);
            }
            v214 = swift_allocObject(&unk_384088, 24);
            v56 = (unint64_t *)(v214 + 16);
            v57 = String._bridgeToObjectiveC()();
            v58 = objc_msgSend(v227, "dictionaryResultForKey:", v57);

            if (v58
              && (v59 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v58, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v58, sub_148A94(v59, &qword_3BE330, &qword_3BE328), v61 = v60, swift_bridgeObjectRelease(v59), v61))
            {
              *v56 = v61;
            }
            else
            {
              *v56 = sub_38B28((uint64_t)_swiftEmptyArrayStorage);
              swift_bridgeObjectRelease(0);
            }
            v62 = String._bridgeToObjectiveC()();
            v63 = objc_msgSend(v227, "dictionaryResultForKey:", v62);

            if (v63
              && (v64 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v63, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v63, sub_148A94(v64, &qword_3BE330, &qword_3BE328), v66 = v65, swift_bridgeObjectRelease(v64), v66))
            {
              v220 = v66;
            }
            else
            {
              v220 = sub_38B28((uint64_t)_swiftEmptyArrayStorage);
              swift_bridgeObjectRelease(0);
            }
            v67 = swift_allocObject(&unk_3840B0, 24);
            v68 = sub_388B0((uint64_t)_swiftEmptyArrayStorage);
            v225 = v67;
            *(_QWORD *)(v67 + 16) = v68;
            v215 = v16;
            if (v53)
            {
              __chkstk_darwin(v68);
              sub_156C60((uint64_t)v53, sub_159D40);
              swift_bridgeObjectRelease(v53);
            }
            static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("textContent"));
            v70 = v69;
            v71 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v72 = swift_bridgeObjectRelease(v70).n128_u64[0];
            v73 = objc_msgSend(v227, "stringResultForKey:", v71, v72);

            if (v73)
            {
              v207 = static String._unconditionallyBridgeFromObjectiveC(_:)(v73);
              v208 = v74;

            }
            else
            {
              v207 = 0;
              v208 = 0;
            }
            static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("textDirection"));
            v76 = v75;
            v77 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v78 = swift_bridgeObjectRelease(v76).n128_u64[0];
            v79 = objc_msgSend(v227, "stringResultForKey:", v77, v78);

            if (v79)
            {
              v80 = static String._unconditionallyBridgeFromObjectiveC(_:)(v79);
              v82 = v81;

              if (v80 == 0xD000000000000010 && v82 == 0x80000000002CD610)
              {
                swift_bridgeObjectRelease(0x80000000002CD610);
                v206 = 1;
              }
              else
              {
                v206 = _stringCompareWithSmolCheck(_:_:expecting:)(v80, v82, 0xD000000000000010, 0x80000000002CD610, 0);
                swift_bridgeObjectRelease(v82);
              }
            }
            else
            {
              v206 = 0;
            }
            static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("writingMode"));
            v84 = v83;
            v85 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v86 = swift_bridgeObjectRelease(v84).n128_u64[0];
            v87 = objc_msgSend(v227, "stringResultForKey:", v85, v86);

            if (v87)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
              v89 = v88;

              v90._countAndFlagsBits = 0x6C61636974726576;
              v90._object = (void *)0xE90000000000002DLL;
              LODWORD(v205) = String.hasPrefix(_:)(v90);
              swift_bridgeObjectRelease(v89);
            }
            else
            {
              LODWORD(v205) = 0;
            }
            static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("scrollingElementSize"));
            v92 = v91;
            v93 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v94 = swift_bridgeObjectRelease(v92).n128_u64[0];
            v95 = objc_msgSend(v227, "resultForKey:", v93, v94);

            if (v95)
            {
              v96 = objc_opt_self(NSValue);
              v97 = (id)swift_dynamicCastObjCClass(v95, v96);
              if (v97)
              {
LABEL_57:
                objc_msgSend(v97, "CGSizeValue");
                v99 = v98;
                v101 = v100;

                static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("anchorFrames"));
                v103 = v102;
                v104 = String._bridgeToObjectiveC()();
                *(_QWORD *)&v105 = swift_bridgeObjectRelease(v103).n128_u64[0];
                v106 = objc_msgSend(v227, "dictionaryResultForKey:", v104, v105);

                if (v106
                  && (v107 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v106, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v106, sub_148A94(v107, &qword_3BE330, &qword_3BE328), v109 = v108, swift_bridgeObjectRelease(v107), v109))
                {
                  v213 = v109;
                }
                else
                {
                  v213 = sub_38B28((uint64_t)_swiftEmptyArrayStorage);
                  swift_bridgeObjectRelease(0);
                }
                static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("mediaFrames"));
                v111 = v110;
                v112 = String._bridgeToObjectiveC()();
                *(_QWORD *)&v113 = swift_bridgeObjectRelease(v111).n128_u64[0];
                v114 = objc_msgSend(v227, "dictionaryResultForKey:", v112, v113);

                if (v114
                  && (v115 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v114, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v114, sub_148A94(v115, &qword_3BE330, &qword_3BE328), v117 = v116, swift_bridgeObjectRelease(v115), v117))
                {
                  v212 = v117;
                }
                else
                {
                  v212 = sub_38B28((uint64_t)_swiftEmptyArrayStorage);
                  swift_bridgeObjectRelease(0);
                }
                static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("expandableContentFrames"));
                v119 = v118;
                v120 = String._bridgeToObjectiveC()();
                *(_QWORD *)&v121 = swift_bridgeObjectRelease(v119).n128_u64[0];
                v122 = objc_msgSend(v227, "dictionaryResultForKey:", v120, v121);

                if (!v122
                  || (v123 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v122, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v122, sub_148A94(v123, &qword_3BE330, &qword_3BE328), v125 = v124, swift_bridgeObjectRelease(v123), !v125))
                {
                  v125 = sub_38B28((uint64_t)_swiftEmptyArrayStorage);
                  swift_bridgeObjectRelease(0);
                }
                v126 = *((_QWORD *)v27 + 34);
                swift_bridgeObjectRetain(v126);
                v127 = (_QWORD *)sub_38B34((uint64_t)_swiftEmptyArrayStorage);
                v128 = v227;
                v210 = sub_1568A0(v127, v126, v128);
                swift_bridgeObjectRelease(v126);

                v129 = String._bridgeToObjectiveC()();
                v227 = v128;
                v130 = objc_msgSend(v128, "dictionaryResultForKey:", v129);

                if (v130)
                {
                  v131 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v130, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

                  sub_148E60(v131);
                  v223 = v132;
                  swift_bridgeObjectRelease(v131);
                }
                else
                {
                  v223 = 0;
                }
                v133 = String._bridgeToObjectiveC()();
                v134 = objc_msgSend(v227, "dictionaryResultForKey:", v133);

                v222 = a3;
                v211 = v125;
                if (v134)
                {
                  v135 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v134, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

                  sub_149220(v135);
                  v226 = v136;
                  swift_bridgeObjectRelease(v135);
                }
                else
                {
                  v226 = 0;
                }
                sub_49F1C((uint64_t)(v27 + 88), (uint64_t)&v228);
                v137 = v230;
                v138 = v231;
                sub_472D0(&v228, v230);
                v209 = (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 16))(v137, v138);
                sub_34488(&v228);
                v139 = *((_QWORD *)v27 + 16);
                v140 = *((_QWORD *)v27 + 17);
                v141 = *((_QWORD *)v27 + 18);
                v142 = v27[152];
                v143 = v27[153];
                v144 = *((_QWORD *)v27 + 20);
                v145 = *((_QWORD *)v27 + 21);
                v146 = v27[176];
                v147 = *((_QWORD *)v27 + 23);
                v203 = v27[192];
                v148 = *((_QWORD *)v27 + 26);
                v202 = *((_QWORD *)v27 + 25);
                v149 = (void *)objc_opt_self(NSValue);
                swift_bridgeObjectRetain(v148);
                v150 = objc_msgSend(v149, "valueWithCGSize:", v99, v101);
                v151 = v222;
                -[NSObject setBe_estimatedContentSizeValue:](v222, "setBe_estimatedContentSizeValue:", v150);

                if ((v216 & 1) != 0)
                {
                  v152 = sub_15D010();
                  v228 = *(double *)&v139;
                  v229[0] = v140;
                  v229[1] = v141;
                  LOBYTE(v230) = v142;
                  BYTE1(v230) = v143;
                  v231 = v144;
                  v232 = v145;
                  v233 = v146;
                  v234 = v147;
                  v235 = v203;
                  v236 = v202;
                  v237 = v148;
                  v153 = _sSo9WKWebViewC8BookEPUBE18calcFinalPageCount19layoutConfiguration11contentSize04pageH0SiAC016PaginationLayoutJ0V_So6CGSizeVSitF_0((uint64_t)&v228, v152, v99, v101);
                  swift_bridgeObjectRelease(v148);
                }
                else
                {
                  swift_bridgeObjectRelease(v148);
                  v153 = 1;
                }
                v154 = v224;
                v155 = v151;
                if (v153 != sub_15D010())
                {
                  v156 = v154;
                  v157 = v151;
                  v158 = Logger.logObject.getter(v157);
                  v159 = static os_log_type_t.error.getter(v158);
                  v160 = v159;
                  if (os_log_type_enabled(v158, v159))
                  {
                    v161 = swift_slowAlloc(38, -1);
                    v204 = swift_slowAlloc(32, -1);
                    v228 = *(double *)&v204;
                    *(_DWORD *)v161 = 134218754;
                    v238 = v153;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v161 + 4);
                    *(_WORD *)(v161 + 12) = 2048;
                    v216 = v153;
                    v203 = v160;
                    v238 = sub_15D010();
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v161 + 14);

                    *(_WORD *)(v161 + 22) = 1024;
                    LODWORD(v238) = objc_msgSend(v156, "isCancelled");
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, (char *)&v238 + 4, v161 + 24);

                    *(_WORD *)(v161 + 28) = 2080;
                    v162 = *((_QWORD *)v27 + 25);
                    v163 = *((_QWORD *)v27 + 26);
                    swift_bridgeObjectRetain(v163);
                    v238 = sub_33524(v162, v163, (uint64_t *)&v228);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v238, v239, v161 + 30);

                    v164 = v163;
                    v153 = v216;
                    swift_bridgeObjectRelease(v164);
                    _os_log_impl(&dword_0, v158, (os_log_type_t)v203, "#pageCountMismatch: pageCount %ld webView.be_pageCount2: %ld cancel:%{BOOL}d key:%s", (uint8_t *)v161, 0x26u);
                    v165 = v204;
                    swift_arrayDestroy(v204, 1, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v165, -1, -1);
                    v166 = v161;
                    v155 = v222;
                    swift_slowDealloc(v166, -1, -1);
                  }
                  else
                  {

                  }
                  v154 = v224;
                }
                v222 = v26;
                v167 = v214;
                v168 = v225;
                v169 = (char)v205;
                if ((v205 & 1) != 0)
                {
                  v170 = *(_QWORD *)&v154[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_bookProviderService + 8];
                  ObjectType = swift_getObjectType(*(_QWORD *)&v154[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_bookProviderService]);
                  v172 = (*(uint64_t (**)(uint64_t, uint64_t))(v170 + 32))(ObjectType, v170);
                  if (v172)
                  {
                    v173 = v172;
                    if (*(_QWORD *)(v172 + 16))
                    {
                      swift_bridgeObjectRetain(v226);
                      v174 = v221;
                      swift_retain();
                      v205 = v154;
                      v175 = v155;
                      v224 = (char *)v175;
                      v176 = v208;
                      swift_bridgeObjectRetain(v208);
                      v177 = v213;
                      swift_bridgeObjectRetain(v213);
                      v178 = v212;
                      swift_bridgeObjectRetain(v212);
                      v216 = v153;
                      v179 = v211;
                      swift_bridgeObjectRetain(v211);
                      swift_retain();
                      swift_bridgeObjectRetain(v220);
                      swift_retain();
                      v180 = v210;
                      swift_bridgeObjectRetain(v210);
                      v181 = v223;
                      swift_bridgeObjectRetain(v223);
                      v200 = v175;
                      v199 = v174;
                      v182 = v226;
                      v198 = v181;
                      v197 = v180;
                      v183 = v180;
                      v184 = v220;
                      v185 = v205;
                      sub_157198(v173, v205, v205, v216, v206 & 1, 1, v207, v176, v99, v101, v177, v178, v179, v167, v220, v225, v197, v198, v226,
                        v219,
                        v199,
                        v209,
                        v200);
                      swift_bridgeObjectRelease(v173);

                      swift_bridgeObjectRelease_n(v176, 2);
                      swift_bridgeObjectRelease_n(v177, 2);
                      swift_bridgeObjectRelease_n(v178, 2);
                      swift_bridgeObjectRelease_n(v179, 2);
                      swift_release();
                      swift_bridgeObjectRelease_n(v184, 2);
                      swift_release();
                      swift_bridgeObjectRelease_n(v183, 2);
                      swift_bridgeObjectRelease_n(v223, 2);
                      swift_bridgeObjectRelease_n(v182, 2);
                      swift_release();

LABEL_88:
                      (*(void (**)(char *, uint64_t, __n128))(v217 + 8))(v215, v218, v186);
                      swift_release();
                      swift_release();
                      return;
                    }
                    swift_bridgeObjectRelease(v172);
                  }
                }
                v201 = v155;
                v187 = v223;
                v188 = v210;
                v189 = v169 & 1;
                v196 = v168;
                v190 = v220;
                v191 = v153;
                v192 = v211;
                v193 = v212;
                v194 = v213;
                v195 = v208;
                sub_154A78(0, 0, v154, v191, v206 & 1, v189, v207, v208, v99, v101, v213, v212, v211, v167, v220, v196, v210, v223, v226,
                  v219,
                  v221,
                  v209,
                  v201);
                swift_bridgeObjectRelease(v190);
                swift_bridgeObjectRelease(v194);
                swift_bridgeObjectRelease(v193);
                swift_bridgeObjectRelease(v192);
                swift_bridgeObjectRelease(v188);

                swift_bridgeObjectRelease(v195);
                swift_bridgeObjectRelease(v187);
                v186 = swift_bridgeObjectRelease(v226);
                goto LABEL_88;
              }

            }
            v97 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGSize:", 0.0, 0.0);
            goto LABEL_57;
          }
          goto LABEL_91;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_91:
      __break(1u);
      return;
    }
    if (v29 == 1)
    {
      v30 = 0;
      v31 = 0.0;
    }
    else
    {
      v30 = v29 & 0x7FFFFFFFFFFFFFFELL;
      v33 = (double *)(v28 + 56);
      v31 = 0.0;
      v34 = v29 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v35 = *(v33 - 3);
        v36 = *v33;
        v33 += 6;
        v31 = v31 + v35 + v36;
        v34 -= 2;
      }
      while (v34);
      if (v29 == v30)
        goto LABEL_16;
    }
    v37 = v29 - v30;
    v38 = (double *)(v28 + 24 * v30 + 32);
    do
    {
      v39 = *v38;
      v38 += 3;
      v31 = v31 + v39;
      --v37;
    }
    while (v37);
LABEL_16:
    if (v31 > 10.0)
      v32 = v31;
    else
      v32 = 10.0;
    goto LABEL_19;
  }
  v19 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.error.getter(v19);
  if (os_log_type_enabled(v19, (os_log_type_t)v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_0, v19, (os_log_type_t)v20, "Unable to get context from JS completion!", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  -[NSObject be_failedLoad](a3, "be_failedLoad");
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "willChangeValueForKey:", v22);

  a2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__executing] = 0;
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "didChangeValueForKey:", v23);

  sub_14A1F0(1);
  a2[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__finished] = 1;
  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(a2, "didChangeValueForKey:", v24);

  sub_14B004((uint64_t)"FAILURE: PostLoad Operations End", 32, 2);
  v25 = sub_150BCC((uint64_t)"FAILURE: Pagination Operation End", 33, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
  a4(v25);
}

void sub_15481C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v10;
  void *v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD v26[2];
  __int128 v27;
  __int128 v28;

  sub_34450(0, (unint64_t *)&qword_3B6638, NSString_ptr);
  v10 = NSString.init(stringLiteral:)("cfi", 3, 2);
  v11 = (void *)v10;
  if (!*(_QWORD *)(a3 + 16) || (v12 = sub_3BB64(v10), (v13 & 1) == 0))
  {
    v27 = 0u;
    v28 = 0u;

    goto LABEL_7;
  }
  sub_344A8(*(_QWORD *)(a3 + 56) + 32 * v12, (uint64_t)&v27);

  if (!*((_QWORD *)&v28 + 1))
  {
LABEL_7:
    sub_52128((uint64_t)&v27, (uint64_t *)&unk_3B96D0);
    goto LABEL_8;
  }
  if ((swift_dynamicCast(v26, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v14 = v26[0];
    v15 = v26[1];
    swift_bridgeObjectRetain(a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a4);
    *(_QWORD *)&v27 = *a4;
    *a4 = 0x8000000000000000;
    sub_17E69C(v14, v15, a1, a2, isUniquelyReferenced_nonNull_native);
    v17 = *a4;
    *a4 = v27;
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v17);
  }
LABEL_8:
  v18 = NSString.init(stringLiteral:)("rects", 5, 2);
  v19 = (void *)v18;
  if (*(_QWORD *)(a3 + 16) && (v20 = sub_3BB64(v18), (v21 & 1) != 0))
  {
    sub_344A8(*(_QWORD *)(a3 + 56) + 32 * v20, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }

  if (*((_QWORD *)&v28 + 1))
  {
    v22 = sub_319AC(&qword_3BE328);
    if ((swift_dynamicCast(v26, &v27, (char *)&type metadata for Any + 8, v22, 6) & 1) != 0)
    {
      v23 = v26[0];
      swift_bridgeObjectRetain(a2);
      v24 = swift_isUniquelyReferenced_nonNull_native(*a5);
      *(_QWORD *)&v27 = *a5;
      *a5 = 0x8000000000000000;
      sub_17E7DC(v23, a1, a2, v24);
      v25 = *a5;
      *a5 = v27;
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v25);
    }
  }
  else
  {
    sub_52128((uint64_t)&v27, (uint64_t *)&unk_3B96D0);
  }
}

id sub_154A78(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void (*a20)(uint64_t),uint64_t a21,uint64_t a22,void *a23)
{
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v66;
  _BYTE v67[24];
  char v68[32];
  uint64_t v69[8];
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v26 = &a3[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters];
  sub_49F1C((uint64_t)&a3[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 88], (uint64_t)v69);
  v58 = *((_QWORD *)v26 + 25);
  v56 = v26;
  v27 = *((_QWORD *)v26 + 26);
  swift_bridgeObjectRetain(v27);
  sub_154EBC(a11);
  v57 = v28;
  sub_154EBC(a12);
  v30 = v29;
  sub_154EBC(a13);
  v32 = v31;
  swift_beginAccess(a14 + 16, v68, 0, 0);
  v33 = *(_QWORD *)(a14 + 16);
  swift_bridgeObjectRetain(v33);
  v35 = sub_15667C(v34);
  swift_bridgeObjectRelease(v33);
  sub_154EBC(a15);
  v37 = v36;
  swift_beginAccess(a16 + 16, v67, 0, 0);
  v38 = *(_QWORD *)(a16 + 16);
  swift_bridgeObjectRetain(v38);
  sub_191A28(a17);
  v69[5] = v58;
  v69[6] = v27;
  v69[7] = a4;
  v70 = a5;
  v71 = a6;
  v72 = a1;
  v73 = a2;
  v74 = a9;
  v75 = a10;
  v76 = a7;
  v77 = a8;
  v78 = v57;
  v79 = v30;
  v80 = v32;
  v81 = v35;
  v82 = v37;
  v83 = v38;
  v84 = v39;
  v85 = a18;
  v86 = a19;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a18);
  swift_bridgeObjectRetain(a19);
  swift_bridgeObjectRetain(a8);
  v40 = sub_149DEC((uint64_t)v69);
  a20(v40);
  sub_14B004((uint64_t)"PostLoad Operations End", 23, 2);
  sub_150BCC((uint64_t)"Pagination Operation End", 24, 2, (uint64_t (*)(__n128))&static os_signpost_type_t.end.getter, "#PaginationOperation: %s end event:%s");
  v41 = a3;
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc(32, -1);
    v45 = (_QWORD *)swift_slowAlloc(8, -1);
    v46 = swift_slowAlloc(32, -1);
    v69[0] = v46;
    *(_DWORD *)v44 = 136315650;
    v47 = type metadata accessor for UUID(0);
    v48 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v49 = dispatch thunk of CustomStringConvertible.description.getter(v47, v48);
    v51 = v50;
    v66 = sub_33524(v49, v50, v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v44 + 4);

    swift_bridgeObjectRelease(v51);
    *(_WORD *)(v44 + 12) = 2048;
    v66 = a22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v44 + 14);
    *(_WORD *)(v44 + 22) = 2112;
    v52 = (void *)*((_QWORD *)v56 + 5);
    v66 = (uint64_t)v52;
    v53 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, v67, v44 + 24);
    *v45 = v52;

    _os_log_impl(&dword_0, v42, v43, "Pagination OperationID %s End -- ordinal %ld -- webview %@", (uint8_t *)v44, 0x20u);
    v54 = sub_319AC(&qword_3B8A70);
    swift_arrayDestroy(v45, 1, v54);
    swift_slowDealloc(v45, -1, -1);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v44, -1, -1);
  }
  else
  {

  }
  return objc_msgSend(a23, "be_completedLoad");
}

void sub_154EBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t i;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  Swift::Int v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD v47[9];
  _QWORD *v48;

  v3 = a1 + 64;
  v2 = *(_QWORD *)(a1 + 64);
  v46 = &_swiftEmptyDictionarySingleton;
  v48 = &_swiftEmptyDictionarySingleton;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v2;
  v7 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain(a1);
  i = 0;
  if (v6)
    goto LABEL_7;
LABEL_8:
  v11 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v11 >= v7)
    goto LABEL_49;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v7)
      goto LABEL_49;
    v12 = *(_QWORD *)(v3 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v7)
        goto LABEL_49;
      v12 = *(_QWORD *)(v3 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v7)
          goto LABEL_49;
        v12 = *(_QWORD *)(v3 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v7)
          {
            v12 = *(_QWORD *)(v3 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_23;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_52;
              if (v13 >= v7)
                break;
              v12 = *(_QWORD *)(v3 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_23;
            }
          }
LABEL_49:
          sub_89AA0(a1);
          return;
        }
      }
    }
  }
LABEL_23:
  v6 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = *(_QWORD *)(a1 + 56);
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(_QWORD *)(v15 + 8 * v10);
    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0)
        v45 = *(_QWORD *)(v15 + 8 * v10);
      else
        v45 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)(v15 + 8 * v10), 2);
      swift_bridgeObjectRetain(v17);
      if (!_CocoaArrayWrapper.endIndex.getter(v45))
      {
LABEL_6:
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease_n(v19, 2);
        if (!v6)
          goto LABEL_8;
        goto LABEL_7;
      }
    }
    else
    {
      v20 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain_n(*(_QWORD *)(v15 + 8 * v10), 2);
      swift_bridgeObjectRetain(v17);
      if (!v20)
        goto LABEL_6;
    }
    if ((v19 & 0xC000000000000001) != 0)
    {
      v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
    }
    else
    {
      if (!*(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8)))
        goto LABEL_53;
      v21 = *(id *)(v19 + 32);
    }
    v22 = v21;
    objc_msgSend(v21, "CGRectValue", swift_bridgeObjectRelease(v19).n128_f64[0]);
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v30 = v29;

    v31 = v46;
    v32 = v46[2];
    if (v46[3] <= v32)
    {
      sub_F0AC0(v32 + 1, 1);
      v31 = v48;
    }
    v46 = v31;
    Hasher.init(_seed:)(v47, v31[5]);
    String.hash(into:)(v47, v18, v17);
    v33 = Hasher._finalize()();
    v34 = (char *)(v46 + 8);
    v35 = -1 << *((_BYTE *)v46 + 32);
    v36 = v33 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~v46[(v36 >> 6) + 8]) == 0)
      break;
    v38 = __clz(__rbit64((-1 << v36) & ~v46[(v36 >> 6) + 8])) | v36 & 0x7FFFFFFFFFFFFFC0;
LABEL_41:
    *(_QWORD *)&v34[(v38 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v38;
    v43 = (_QWORD *)(v46[6] + 16 * v38);
    *v43 = v18;
    v43[1] = v17;
    v44 = (_QWORD *)(v46[7] + 32 * v38);
    *v44 = v24;
    v44[1] = v26;
    v44[2] = v28;
    v44[3] = v30;
    ++v46[2];
    swift_bridgeObjectRelease(v19);
    if (!v6)
      goto LABEL_8;
LABEL_7:
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  v39 = 0;
  v40 = (unint64_t)(63 - v35) >> 6;
  while (++v37 != v40 || (v39 & 1) == 0)
  {
    v41 = v37 == v40;
    if (v37 == v40)
      v37 = 0;
    v39 |= v41;
    v42 = *(_QWORD *)&v34[8 * v37];
    if (v42 != -1)
    {
      v38 = __clz(__rbit64(~v42)) + (v37 << 6);
      goto LABEL_41;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
}

void sub_155270(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  unint64_t v17;
  void *v18;
  Class isa;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  NSString v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  __n128 v28;
  uint64_t v29;
  _BYTE v30[56];
  _QWORD v31[2];
  uint64_t v32;
  unint64_t v33;

  if (*(_QWORD *)(a3 + 16))
  {
    v8 = sub_3B8A0(6907491, 0xE300000000000000);
    if ((v9 & 1) != 0)
    {
      sub_344A8(*(_QWORD *)(a3 + 56) + 32 * v8, (uint64_t)&v32);
      if ((swift_dynamicCast(v31, &v32, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v10 = v31[1];
        if (*(_QWORD *)(a3 + 16))
        {
          v11 = sub_3B8A0(0x7374636572, 0xE500000000000000);
          if ((v12 & 1) != 0)
          {
            sub_344A8(*(_QWORD *)(a3 + 56) + 32 * v11, (uint64_t)&v32);
            v13 = sub_319AC(&qword_3BE360);
            if ((swift_dynamicCast(v31, &v32, (char *)&type metadata for Any + 8, v13, 6) & 1) != 0)
            {
              v14 = v31[0];
              v15 = sub_319AC(&qword_3BE368);
              inited = swift_initStackObject(v15, v30);
              *(_OWORD *)(inited + 16) = xmmword_2E5F80;
              *(_QWORD *)(inited + 32) = 0x7374636572;
              *(_QWORD *)(inited + 40) = 0xE500000000000000;
              *(_QWORD *)(inited + 48) = v14;
              v17 = sub_38C4C(inited);
              v18 = (void *)objc_opt_self(BEJavascriptUtilities);
              isa = Dictionary._bridgeToObjectiveC()().super.isa;
              v20 = objc_msgSend(v18, "keyedRectsFromKeyedDOMRects:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

              if (!v20)
              {
                __break(1u);
                return;
              }
              v21 = objc_msgSend(v20, "mutableCopy");
              _bridgeAnyObjectToAny(_:)(&v32);
              swift_unknownObjectRelease(v21);
              v22 = sub_34450(0, &qword_3BE370, NSMutableDictionary_ptr);
              if ((swift_dynamicCast(v31, &v32, (char *)&type metadata for Any + 8, v22, 6) & 1) != 0)
              {
                v23 = (void *)v31[0];
                v24 = String._bridgeToObjectiveC()();
                v25 = swift_bridgeObjectRelease(v10);
                v32 = 6907491;
                v33 = 0xE300000000000000;
                v26 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v32, &type metadata for String, v25);
                objc_msgSend(v23, "__swift_setObject:forKeyedSubscript:", v24, v26);

                swift_unknownObjectRelease(v26);
                v32 = a1;
                v33 = a2;
                swift_bridgeObjectRetain_n(a2, 2);
                v27 = v23;
                v29 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v32, &type metadata for String, v28);
                objc_msgSend(a4, "__swift_setObject:forKeyedSubscript:", v27, v29);
                swift_bridgeObjectRelease(a2);
                swift_unknownObjectRelease(v29);

                return;
              }

            }
          }
        }
        swift_bridgeObjectRelease(v10);
      }
    }
  }
}

uint64_t sub_155550(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v12;
  uint64_t Strong;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD, _QWORD);
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t (*v43)(_QWORD, _QWORD);
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[24];
  _OWORD v49[2];
  _QWORD v50[3];
  char v51[8];
  _OWORD v52[2];
  char v53;
  char v54[32];

  v12 = a4 + 16;
  swift_beginAccess(a4 + 16, v54, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v12);
  if (!Strong)
    return a2(0, 0);
  v14 = (void *)Strong;
  sub_3F238(a1, (uint64_t)v52, &qword_3BE338);
  if ((v53 & 1) != 0)
  {
    v15 = *(_QWORD *)&v52[0];
    swift_bridgeObjectRetain(a7);
    swift_errorRetain(v15);
    swift_bridgeObjectRetain(a7);
    v16 = swift_errorRetain(v15);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v43 = a2;
      v19 = swift_slowAlloc(32, -1);
      v20 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v49[0] = v20;
      *(_DWORD *)v19 = 134218498;
      v47 = a5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v19 + 4);
      *(_WORD *)(v19 + 12) = 2080;
      swift_bridgeObjectRetain(a7);
      v47 = sub_33524(a6, a7, (uint64_t *)v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v19 + 14);
      swift_bridgeObjectRelease_n(a7, 3);
      *(_WORD *)(v19 + 22) = 2080;
      swift_getErrorValue(v15, v51, v50);
      v21 = Error.localizedDescription.getter(v50[1], v50[2]);
      v23 = v22;
      v47 = sub_33524(v21, v22, (uint64_t *)v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v19 + 24);
      swift_bridgeObjectRelease(v23);
      swift_errorRelease(v15);
      swift_errorRelease(v15);
      _os_log_impl(&dword_0, v17, v18, "Could not generate tocIdCssRules for ordinal: %ld, from %s. %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy(v20, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1, -1);
      v24 = v19;
      a2 = v43;
      swift_slowDealloc(v24, -1, -1);
      swift_errorRelease(v15);

    }
    else
    {
      swift_errorRelease(v15);
      swift_bridgeObjectRelease_n(a7, 2);

      swift_errorRelease(v15);
      swift_errorRelease(v15);
    }
    v28 = 0;
    v27 = 0;
  }
  else
  {
    sub_3F180(v52, v49);
    sub_344A8((uint64_t)v49, (uint64_t)&v47);
    v26 = swift_dynamicCast(&v44, &v47, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if ((v26 & 1) != 0)
    {
      v28 = v44;
      v27 = v45[0];
      v29 = Logger.logObject.getter(v26);
      v30 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v31 = 134217984;
        v47 = a5;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v31 + 4);
        _os_log_impl(&dword_0, v29, v30, "Generated rules for TOC at ordinal: %ld", v31, 0xCu);
        swift_slowDealloc(v31, -1, -1);
      }

      sub_34488(v49);
    }
    else
    {
      v32 = sub_344A8((uint64_t)v49, (uint64_t)&v47);
      v33 = Logger.logObject.getter(v32);
      v34 = static os_log_type_t.error.getter(v33);
      if (os_log_type_enabled(v33, v34))
      {
        v35 = swift_slowAlloc(22, -1);
        v36 = swift_slowAlloc(32, -1);
        v46 = v36;
        *(_DWORD *)v35 = 136315394;
        sub_344A8((uint64_t)&v47, (uint64_t)&v44);
        v37 = String.init<A>(describing:)(&v44, (char *)&type metadata for Any + 8);
        v38 = a2;
        v40 = v39;
        v44 = sub_33524(v37, v39, &v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v35 + 4);
        v41 = v40;
        a2 = v38;
        swift_bridgeObjectRelease(v41);
        sub_34488(&v47);
        *(_WORD *)(v35 + 12) = 2048;
        v44 = a5;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45, v35 + 14);
        _os_log_impl(&dword_0, v33, v34, "tocIdCssRules did not return a string: %s, ordinal: %ld", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v36, -1, -1);
        swift_slowDealloc(v35, -1, -1);
      }
      else
      {
        sub_34488(&v47);
      }

      sub_34488(v49);
      v28 = 0;
      v27 = 0;
    }
  }
  v42 = swift_bridgeObjectRetain(v27);
  ((void (*)(uint64_t, uint64_t, __n128))a2)(v28, v27, v42);
  return swift_bridgeObjectRelease_n(v27, 2);
}

uint64_t PaginationOperation.Result.description.getter()
{
  uint64_t v0;
  _QWORD *v1;
  Swift::String v2;
  uint64_t v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  Swift::String v10;
  void *v11;
  Swift::String v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  Swift::String v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  void *v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  void *v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  Swift::String v50;
  Swift::String v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  Swift::String v57;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];

  v1 = (_QWORD *)v0;
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(275);
  v2._countAndFlagsBits = 0xD00000000000002BLL;
  v2._object = (void *)0x80000000002CCFD0;
  String.append(_:)(v2);
  v3 = sub_319AC((uint64_t *)&unk_3BBDF0);
  _print_unlocked<A, B>(_:_:)(v0, v61, v3, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 0x657268202020200ALL;
  v4._object = (void *)0xEB00000000203A66;
  String.append(_:)(v4);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  sub_472D0(v1, v1[3]);
  v7._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 0xD000000000000010;
  v9._object = (void *)0x80000000002CD000;
  String.append(_:)(v9);
  v59 = *(_QWORD *)(v0 + 56);
  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 0xD00000000000001DLL;
  v12._object = (void *)0x80000000002CD020;
  String.append(_:)(v12);
  if (*(_BYTE *)(v0 + 64))
    v13 = 1702195828;
  else
    v13 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 64))
    v14 = 0xE400000000000000;
  else
    v14 = 0xE500000000000000;
  v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 0xD000000000000019;
  v16._object = (void *)0x80000000002CD040;
  String.append(_:)(v16);
  if (*(_BYTE *)(v0 + 65))
    v17 = 1702195828;
  else
    v17 = 0x65736C6166;
  if (*(_BYTE *)(v0 + 65))
    v18 = 0xE400000000000000;
  else
    v18 = 0xE500000000000000;
  v19 = v18;
  String.append(_:)(*(Swift::String *)&v17);
  swift_bridgeObjectRelease(v18);
  v20._countAndFlagsBits = 0xD000000000000014;
  v20._object = (void *)0x80000000002CD060;
  String.append(_:)(v20);
  v21 = *(_QWORD *)(v0 + 80);
  v59 = *(_QWORD *)(v0 + 72);
  v60 = v21;
  swift_bridgeObjectRetain(v21);
  v22 = sub_319AC((uint64_t *)&unk_3BBB20);
  v23._countAndFlagsBits = String.init<A>(describing:)(&v59, v22);
  v24 = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v24);
  v25._object = (void *)0x80000000002CD080;
  v25._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v25);
  v26 = *(_QWORD *)(v0 + 112);
  v59 = *(_QWORD *)(v0 + 104);
  v60 = v26;
  swift_bridgeObjectRetain(v26);
  v27._countAndFlagsBits = String.init<A>(describing:)(&v59, v22);
  v28 = v27._object;
  String.append(_:)(v27);
  swift_bridgeObjectRelease(v28);
  v29._countAndFlagsBits = 0xD000000000000013;
  v29._object = (void *)0x80000000002CD0A0;
  String.append(_:)(v29);
  v30 = *(_QWORD *)(v0 + 120);
  type metadata accessor for CGRect(0);
  v32 = v31;
  swift_bridgeObjectRetain(v30);
  v33 = Dictionary.description.getter(v30, &type metadata for String, v32, &protocol witness table for String);
  v35 = v34;
  swift_bridgeObjectRelease(v30);
  v36._countAndFlagsBits = v33;
  v36._object = v35;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v35);
  v37._object = (void *)0x80000000002CD0C0;
  v37._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v37);
  v38 = v1[16];
  swift_bridgeObjectRetain(v38);
  v40 = Dictionary.description.getter(v39, &type metadata for String, v32, &protocol witness table for String);
  v42 = v41;
  swift_bridgeObjectRelease(v38);
  v43._countAndFlagsBits = v40;
  v43._object = v42;
  String.append(_:)(v43);
  swift_bridgeObjectRelease(v42);
  v44._countAndFlagsBits = 0xD00000000000001ELL;
  v44._object = (void *)0x80000000002CD0E0;
  String.append(_:)(v44);
  v45 = v1[17];
  swift_bridgeObjectRetain(v45);
  v47 = Dictionary.description.getter(v46, &type metadata for String, v32, &protocol witness table for String);
  v49 = v48;
  swift_bridgeObjectRelease(v45);
  v50._countAndFlagsBits = v47;
  v50._object = v49;
  String.append(_:)(v50);
  swift_bridgeObjectRelease(v49);
  v51._countAndFlagsBits = 0xD000000000000018;
  v51._object = (void *)0x80000000002CD100;
  String.append(_:)(v51);
  v52 = v1[18];
  swift_bridgeObjectRetain(v52);
  v53 = sub_319AC(&qword_3BE1C8);
  v54 = Dictionary.description.getter(v52, &type metadata for String, v53, &protocol witness table for String);
  v56 = v55;
  swift_bridgeObjectRelease(v52);
  v57._countAndFlagsBits = v54;
  v57._object = v56;
  String.append(_:)(v57);
  swift_bridgeObjectRelease(v56);
  return v61[0];
}

uint64_t PaginationOperation.Parameters.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  Swift::String v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  void *object;
  __int128 v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;

  v1 = v0;
  *(_QWORD *)&v29 = 0;
  *((_QWORD *)&v29 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(155);
  v40 = v29;
  v2._countAndFlagsBits = 0xD000000000000037;
  v2._object = (void *)0x80000000002CD120;
  String.append(_:)(v2);
  v3 = sub_319AC(&qword_3BE1D0);
  _print_unlocked<A, B>(_:_:)(v0, &v40, v3, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v4._object = (void *)0x80000000002CD160;
  v4._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v4);
  v5 = *(id *)(v0 + 40);
  v6 = objc_msgSend(v5, "description");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);

  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 0xD000000000000017;
  v11._object = (void *)0x80000000002CD180;
  String.append(_:)(v11);
  v29 = *(_OWORD *)(v1 + 56);
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)(&v29, &v40, v12, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v13._countAndFlagsBits = 0xD000000000000015;
  v13._object = (void *)0x80000000002CD1A0;
  String.append(_:)(v13);
  v14 = sub_319AC((uint64_t *)&unk_3BBDF0);
  _print_unlocked<A, B>(_:_:)(v1 + 88, &v40, v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v15._countAndFlagsBits = 0xD00000000000001ALL;
  v15._object = (void *)0x80000000002CD1C0;
  String.append(_:)(v15);
  v16 = *(_QWORD *)(v1 + 144);
  v17 = *(_BYTE *)(v1 + 152);
  v18 = *(_BYTE *)(v1 + 153);
  v19 = *(_QWORD *)(v1 + 160);
  v20 = *(_QWORD *)(v1 + 168);
  v21 = *(_BYTE *)(v1 + 176);
  v22 = *(_QWORD *)(v1 + 184);
  v23 = *(_BYTE *)(v1 + 192);
  v24 = *(_QWORD *)(v1 + 200);
  v25 = *(_QWORD *)(v1 + 208);
  v29 = *(_OWORD *)(v1 + 128);
  v30 = v16;
  v31 = v17;
  v32 = v18;
  v33 = v19;
  v34 = v20;
  v35 = v21;
  v36 = v22;
  v37 = v23;
  v38 = v24;
  v39 = v25;
  swift_bridgeObjectRetain(v25);
  v26._countAndFlagsBits = PaginationLayoutConfiguration.description.getter();
  object = v26._object;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v25);
  swift_bridgeObjectRelease(object);
  return v40;
}

id PaginationOperation.navigationHandler(_:failedToLoad:error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_157C5C(a2, a3);
}

id PaginationOperation.navigationHandlerWebContentLoadFailed(_:reason:)(uint64_t a1, uint64_t a2)
{
  return sub_15807C(a2);
}

Swift::Void __swiftcall PaginationOperation.navigationHandlerWillCancelCurrentNavigation(_:)(BENavigationHandler *a1)
{
  void *v1;

  sub_14B004((uint64_t)"navigationHandlerWillCancelCurrentNavigation", 44, 2);
  objc_msgSend(v1, "cancel");
}

void sub_156330(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  char v57;
  _QWORD *v58;
  uint64_t *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  swift_bridgeObjectRetain(a1);
  swift_retain();
  v8 = sub_9355C();
  if (!v9)
    goto LABEL_23;
  v12 = v8;
  v13 = v9;
  v14 = v11;
  v63 = v10;
  v15 = (_QWORD *)*a5;
  v17 = sub_3B8A0(v8, v9);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_F37EC();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    v29 = (uint64_t *)(v24[6] + 16 * v17);
    *v29 = v12;
    v29[1] = v13;
    v30 = (_QWORD *)(v24[7] + 16 * v17);
    *v30 = v63;
    v30[1] = v14;
    v31 = v24[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v24[2] = v33;
LABEL_13:
    v34 = sub_9355C();
    if (v35)
    {
      v38 = v34;
      v39 = v35;
      v40 = v36;
      v41 = v37;
      do
      {
        v50 = (_QWORD *)*a5;
        v51 = sub_3B8A0(v38, v39);
        v53 = v50[2];
        v54 = (v52 & 1) == 0;
        v32 = __OFADD__(v53, v54);
        v55 = v53 + v54;
        if (v32)
          goto LABEL_24;
        v56 = v52;
        if (v50[3] < v55)
        {
          sub_EFEEC(v55, 1);
          v51 = sub_3B8A0(v38, v39);
          if ((v56 & 1) != (v57 & 1))
            goto LABEL_26;
        }
        v58 = (_QWORD *)*a5;
        if ((v56 & 1) != 0)
        {
          v42 = 16 * v51;
          v43 = (uint64_t *)(v58[7] + 16 * v51);
          v45 = *v43;
          v44 = v43[1];
          swift_bridgeObjectRetain(v44);
          swift_bridgeObjectRelease(v39);
          swift_bridgeObjectRelease(v41);
          v46 = (_QWORD *)(v58[7] + v42);
          swift_bridgeObjectRelease(v46[1]);
          *v46 = v45;
          v46[1] = v44;
        }
        else
        {
          v58[(v51 >> 6) + 8] |= 1 << v51;
          v59 = (uint64_t *)(v58[6] + 16 * v51);
          *v59 = v38;
          v59[1] = v39;
          v60 = (_QWORD *)(v58[7] + 16 * v51);
          *v60 = v40;
          v60[1] = v41;
          v61 = v58[2];
          v32 = __OFADD__(v61, 1);
          v62 = v61 + 1;
          if (v32)
            goto LABEL_25;
          v58[2] = v62;
        }
        v38 = sub_9355C();
        v39 = v47;
        v40 = v48;
        v41 = v49;
      }
      while (v47);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease(a1);
    sub_89AA0(a1);
    swift_release();
    return;
  }
  sub_EFEEC(v20, a4 & 1);
  v22 = sub_3B8A0(v12, v13);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    v25 = (uint64_t *)(v24[7] + 16 * v17);
    v27 = *v25;
    v26 = v25[1];
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v14);
    v28 = (_QWORD *)(v24[7] + 16 * v17);
    swift_bridgeObjectRelease(v28[1]);
    *v28 = v27;
    v28[1] = v26;
    goto LABEL_13;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_15667C(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t i;
  BOOL v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;

  sub_319AC((uint64_t *)&unk_3BE340);
  result = static _DictionaryStorage.copy(original:)(a1);
  v3 = 0;
  v28 = a1;
  v29 = (_QWORD *)result;
  v6 = *(_QWORD *)(a1 + 64);
  v5 = a1 + 64;
  v4 = v6;
  v7 = 1 << *(_BYTE *)(v5 - 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v4;
  v25 = v5;
  v26 = (unint64_t)(v7 + 63) >> 6;
  v27 = result + 64;
  if ((v8 & v4) == 0)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v30 = v3;
  for (i = v10 | (v3 << 6); ; i = __clz(__rbit64(v14)) + (v13 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v28 + 48) + 16 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * i);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    v21 = sub_148404(v20);
    swift_bridgeObjectRelease(v19);
    *(_QWORD *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = (uint64_t)v29;
    v22 = (_QWORD *)(v29[6] + 16 * i);
    *v22 = v17;
    v22[1] = v18;
    *(_QWORD *)(v29[7] + 8 * i) = v21;
    v23 = v29[2];
    v12 = __OFADD__(v23, 1);
    v24 = v23 + 1;
    if (v12)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v29[2] = v24;
    v3 = v30;
    if (v9)
      goto LABEL_4;
LABEL_5:
    v12 = __OFADD__(v3, 1);
    v13 = v3 + 1;
    if (v12)
      goto LABEL_25;
    if (v13 >= v26)
      return result;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    if (!v14)
      break;
LABEL_15:
    v9 = (v14 - 1) & v14;
    v30 = v13;
  }
  v15 = v13 + 1;
  if (v13 + 1 >= v26)
    return result;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 2;
  if (v13 + 2 >= v26)
    return result;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 3;
  if (v13 + 3 >= v26)
    return result;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
LABEL_14:
    v13 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v26)
      return result;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1568A0(_QWORD *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  unint64_t v20;
  char v21;
  char v22;
  void *v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  char v39;
  void *v40;
  uint64_t v41;
  int64_t v42;

  v41 = a2 + 64;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 64);
  v42 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v9 = 0;
  v40 = a3;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v9 << 6);
LABEL_23:
    v15 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v11);
    v17 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain_n(v16, 2);
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(a3, "resultForKey:", v18);

    if (v19)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(a1);
      v26 = sub_3B8A0(v17, v16);
      v27 = a1[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        goto LABEL_43;
      if (a1[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v25 & 1) != 0)
            goto LABEL_35;
        }
        else
        {
          v33 = v25;
          sub_F40B8();
          if ((v33 & 1) != 0)
            goto LABEL_35;
        }
      }
      else
      {
        v39 = v25;
        sub_F10F0(v29, isUniquelyReferenced_nonNull_native);
        v30 = sub_3B8A0(v17, v16);
        if ((v39 & 1) != (v31 & 1))
          goto LABEL_45;
        v26 = v30;
        if ((v39 & 1) != 0)
        {
LABEL_35:
          v32 = a1[7];

          *(_QWORD *)(v32 + 8 * v26) = v19;
          goto LABEL_39;
        }
      }
      a1[(v26 >> 6) + 8] |= 1 << v26;
      v34 = (uint64_t *)(a1[6] + 16 * v26);
      *v34 = v17;
      v34[1] = v16;
      *(_QWORD *)(a1[7] + 8 * v26) = v19;
      v35 = a1[2];
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
        goto LABEL_44;
      a1[2] = v37;
      swift_bridgeObjectRetain(v16);
LABEL_39:
      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease(0x8000000000000000);
      a3 = v40;
    }
    else
    {
      swift_bridgeObjectRetain(a1);
      v20 = sub_3B8A0(v17, v16);
      v22 = v21;
      swift_bridgeObjectRelease(a1);
      if ((v22 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(a1) & 1) == 0)
          sub_F40B8();
        swift_bridgeObjectRelease(*(_QWORD *)(a1[6] + 16 * v20 + 8));
        v23 = *(void **)(a1[7] + 8 * v20);
        sub_188ECC(v20, (uint64_t)a1);

        swift_bridgeObjectRelease_n(v16, 2);
        swift_bridgeObjectRelease(0x8000000000000000);
      }
      else
      {
        swift_bridgeObjectRelease_n(v16, 2);
      }
    }
  }
  v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v12 >= v42)
    goto LABEL_40;
  v13 = *(_QWORD *)(v41 + 8 * v12);
  ++v9;
  if (v13)
    goto LABEL_22;
  v9 = v12 + 1;
  if (v12 + 1 >= v42)
    goto LABEL_40;
  v13 = *(_QWORD *)(v41 + 8 * v9);
  if (v13)
    goto LABEL_22;
  v9 = v12 + 2;
  if (v12 + 2 >= v42)
    goto LABEL_40;
  v13 = *(_QWORD *)(v41 + 8 * v9);
  if (v13)
    goto LABEL_22;
  v9 = v12 + 3;
  if (v12 + 3 >= v42)
    goto LABEL_40;
  v13 = *(_QWORD *)(v41 + 8 * v9);
  if (v13)
  {
LABEL_22:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_23;
  }
  v14 = v12 + 4;
  if (v14 >= v42)
  {
LABEL_40:
    swift_release();
    return (uint64_t)a1;
  }
  v13 = *(_QWORD *)(v41 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v42)
      goto LABEL_40;
    v13 = *(_QWORD *)(v41 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_156C60(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release(a1);
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release(a1);
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release(a1);
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release(a1);
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    a2(v14, v15, v16);
    swift_bridgeObjectRelease(v16);
    result = swift_bridgeObjectRelease(v15);
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release(a1);
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release(a1);
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_156DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _BYTE *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  unsigned __int8 v22;
  _QWORD *v23;
  id v24;
  objc_super v28;

  v11 = OBJC_IVAR____TtC8BookEPUB19PaginationOperation_hasRegisteredObserver;
  v12 = sub_319AC(&qword_3BE378);
  v13 = swift_allocObject(v12, 24);
  *(_DWORD *)(v13 + 20) = 0;
  *(_QWORD *)&v6[v11] = v13;
  v14 = &v6[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result];
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[5] = 0u;
  v14[6] = 0u;
  v14[7] = 0u;
  v14[8] = 0u;
  v14[9] = 0u;
  v14[10] = 0u;
  v14[11] = 0u;
  v6[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__cancelled] = 0;
  *(_BYTE *)(v13 + 16) = 0;
  v6[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__executing] = 0;
  v6[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__finished] = 0;
  v6[OBJC_IVAR____TtC8BookEPUB19PaginationOperation__ready] = 1;
  v15 = &v6[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_annotationProviderService];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15, 0);
  v16 = qword_3B56B8;
  v17 = v6;
  if (v16 != -1)
    swift_once(&qword_3B56B8, sub_5EFF4);
  v18 = Logger.init(_:)((id)qword_3CEEF8);
  UUID.init()(v18);
  v19 = OBJC_IVAR____TtC8BookEPUB19PaginationOperation_logContentSize;
  v20 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v20, "BOOLForKey:", v21);

  v17[v19] = v22;
  sub_1570F8(a1, (uint64_t)&v17[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters]);
  *((_QWORD *)v15 + 1) = a3;
  swift_unknownObjectWeakAssign(v15, a2);
  v23 = &v17[OBJC_IVAR____TtC8BookEPUB19PaginationOperation_bookProviderService];
  *v23 = a4;
  v23[1] = a5;
  swift_unknownObjectRetain(a4);

  v28.receiver = v17;
  v28.super_class = (Class)type metadata accessor for PaginationOperation(0);
  v24 = objc_msgSendSuper2(&v28, "init");
  objc_msgSend(v24, "setQueuePriority:", a6);
  sub_15713C(a1);
  return v24;
}

uint64_t type metadata accessor for PaginationOperation(uint64_t a1)
{
  return sub_3E7A8(a1, (uint64_t *)&unk_3BE210, (uint64_t)&nominal type descriptor for PaginationOperation);
}

uint64_t sub_157054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3BD8F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_15709C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1570C0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 40), "be_paginationOperationCanceled");
}

uint64_t sub_1570E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1570F0(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1570F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PaginationOperation.Parameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_15713C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PaginationOperation.Parameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_157198(uint64_t a1, void **a2, void *a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void (*a20)(uint64_t),uint64_t a21,uint64_t a22,void *a23)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t (*v37)(uint64_t, void *);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  void *v43;
  Class isa;
  id v45;
  void **v46;
  char *v47;
  void **v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  __n128 v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  Swift::String v58;
  Swift::String v59;
  unint64_t v60;
  void **v61;
  void *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  NSString v68;
  uint64_t v69;
  void *v70;
  void **v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  void **v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  void **v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  void *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  int v117;
  uint64_t v118;
  void **v119;
  uint64_t v120;
  _QWORD v121[3];
  char v122[8];
  uint64_t v123;
  uint64_t v124;
  void **aBlock;
  unint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t, void *);
  void *v128;
  uint64_t (*v129)(uint64_t, void *);
  uint64_t v130;

  v119 = a2;
  v120 = a8;
  v118 = a7;
  v116 = a5;
  v117 = a6;
  v106 = a1;
  v109 = a22;
  v110 = a21;
  v111 = a20;
  v105 = a18;
  v108 = a17;
  v114 = a15;
  v115 = a16;
  v113 = a14;
  v112 = a13;
  v103 = a23;
  v27 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v27);
  v102 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = swift_allocObject(&unk_3840D8, 176);
  *(_QWORD *)(v29 + 16) = a3;
  *(_QWORD *)(v29 + 24) = a4;
  v101 = a4;
  *(_BYTE *)(v29 + 32) = v116;
  *(_BYTE *)(v29 + 33) = v117;
  *(double *)(v29 + 40) = a9;
  *(double *)(v29 + 48) = a10;
  v30 = v120;
  *(_QWORD *)(v29 + 56) = v118;
  *(_QWORD *)(v29 + 64) = v30;
  *(_QWORD *)(v29 + 72) = a11;
  *(_QWORD *)(v29 + 80) = a12;
  *(_QWORD *)(v29 + 88) = a13;
  *(_QWORD *)(v29 + 96) = a14;
  *(_QWORD *)(v29 + 104) = a15;
  *(_QWORD *)(v29 + 112) = a16;
  v31 = v108;
  v32 = v105;
  *(_QWORD *)(v29 + 120) = v108;
  *(_QWORD *)(v29 + 128) = v32;
  v33 = v111;
  *(_QWORD *)(v29 + 136) = a19;
  *(_QWORD *)(v29 + 144) = v33;
  v34 = v109;
  *(_QWORD *)(v29 + 152) = v110;
  *(_QWORD *)(v29 + 160) = v34;
  v97 = (char *)v119 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters;
  v35 = (uint64_t)v119 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_parameters + 88;
  v107 = v29;
  *(_QWORD *)(v29 + 168) = a23;
  sub_49F1C(v35, (uint64_t)&aBlock);
  v36 = v128;
  v37 = v129;
  sub_472D0(&aBlock, (uint64_t)v128);
  v104 = (char *)*((_QWORD *)v37 + 2);
  v98 = a19;
  swift_bridgeObjectRetain(a19);
  v38 = a3;
  v99 = a11;
  swift_bridgeObjectRetain(a11);
  v100 = a12;
  swift_bridgeObjectRetain(a12);
  swift_bridgeObjectRetain(v112);
  swift_retain();
  swift_bridgeObjectRetain(v114);
  swift_retain();
  v39 = v31;
  v40 = v106;
  swift_bridgeObjectRetain(v39);
  swift_retain();
  v103 = v103;
  swift_bridgeObjectRetain(v120);
  v41 = swift_bridgeObjectRetain(v32);
  v42 = ((uint64_t (*)(void *, uint64_t (*)(uint64_t, void *), __n128))v104)(v36, v37, v41);
  sub_34488(&aBlock);
  v43 = (void *)objc_opt_self(NSJSONSerialization);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  aBlock = 0;
  v45 = objc_msgSend(v43, "dataWithJSONObject:options:error:", isa, 1, &aBlock);

  v46 = aBlock;
  if (v45)
  {
    v47 = v38;
    v106 = v42;
    v48 = v119;
    v49 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v45);
    v51 = v50;

    v52 = v102;
    static String.Encoding.utf8.getter(v53);
    v54 = String.init(data:encoding:)(v49, v51, v52);
    if (v55)
    {
      v56 = v54;
      v57 = v55;
      aBlock = 0;
      v126 = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      swift_bridgeObjectRelease(v126);
      aBlock = (void **)0xD000000000000027;
      v126 = 0x80000000002CD680;
      v58._countAndFlagsBits = v56;
      v58._object = v57;
      String.append(_:)(v58);
      swift_bridgeObjectRelease(v57);
      v59._countAndFlagsBits = 15145;
      v59._object = (void *)0xE200000000000000;
      String.append(_:)(v59);
      v61 = aBlock;
      v60 = v126;
      v62 = (void *)*((_QWORD *)v97 + 5);
      v63 = swift_allocObject(&unk_384100, 24);
      swift_unknownObjectWeakInit(v63 + 16, v48);
      v64 = (_QWORD *)swift_allocObject(&unk_384128, 64);
      v65 = v107;
      v64[2] = sub_159DCC;
      v64[3] = v65;
      v66 = v106;
      v64[4] = v63;
      v64[5] = v66;
      v64[6] = v61;
      v64[7] = v60;
      v67 = v62;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain(v60);
      v68 = String._bridgeToObjectiveC()();
      v69 = swift_allocObject(&unk_384150, 32);
      *(_QWORD *)(v69 + 16) = sub_159E80;
      *(_QWORD *)(v69 + 24) = v64;
      v129 = sub_159E90;
      v130 = v69;
      aBlock = _NSConcreteStackBlock;
      v126 = 1107296256;
      v127 = sub_6A0C0;
      v128 = &unk_384168;
      v70 = _Block_copy(&aBlock);
      swift_retain();
      objc_msgSend(v67, "evaluateJavaScript:completionHandler:", v68, v70, swift_release().n128_f64[0]);
      _Block_release(v70);

      sub_D6828(v49, v51);
      swift_release();

      swift_release();
      swift_release();
      swift_bridgeObjectRelease(v60);
      return;
    }
    sub_158788(v49, v51);
    v88 = sub_158788(v49, v51);
    v89 = Logger.logObject.getter(v88);
    v90 = static os_log_type_t.error.getter(v89);
    if (os_log_type_enabled(v89, v90))
    {
      v91 = swift_slowAlloc(22, -1);
      v119 = (void **)swift_slowAlloc(32, -1);
      aBlock = v119;
      *(_DWORD *)v91 = 136315394;
      v104 = (char *)(v91 + 4);
      sub_158788(v49, v51);
      v92 = Data.description.getter(v49, v51);
      v94 = v93;
      sub_D6828(v49, v51);
      v123 = sub_33524(v92, v94, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v104);
      swift_bridgeObjectRelease(v94);
      sub_D6828(v49, v51);
      sub_D6828(v49, v51);
      *(_WORD *)(v91 + 12) = 2048;
      v123 = v106;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v91 + 14);
      _os_log_impl(&dword_0, v89, v90, "Could not generate tocIDCssRules, unable to convert %s to string at ordinal: %ld", (uint8_t *)v91, 0x16u);
      v95 = v119;
      swift_arrayDestroy(v119, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v95, -1, -1);
      swift_slowDealloc(v91, -1, -1);

    }
    else
    {

      sub_D6828(v49, v51);
      sub_D6828(v49, v51);
    }
    sub_154A78(0, 0, v47, v101, v116 & 1, v117 & 1, v118, v120, a9, a10, v99, v100, v112, v113, v114, v115, v108, v32, v98,
      v111,
      v110,
      v109,
      v103);
    sub_D6828(v49, v51);
  }
  else
  {
    v71 = v46;
    v104 = v38;
    v72 = _convertNSErrorToError(_:)(v46);

    swift_willThrow(v73);
    swift_bridgeObjectRetain(v40);
    swift_errorRetain(v72);
    swift_bridgeObjectRetain(v40);
    v74 = swift_errorRetain(v72);
    v75 = Logger.logObject.getter(v74);
    v76 = static os_log_type_t.error.getter(v75);
    if (os_log_type_enabled(v75, v76))
    {
      v77 = swift_slowAlloc(22, -1);
      v78 = (void **)swift_slowAlloc(64, -1);
      aBlock = v78;
      *(_DWORD *)v77 = 136315394;
      swift_bridgeObjectRetain(v40);
      v119 = (void **)((char *)&type metadata for Any + 8);
      v80 = Dictionary.description.getter(v79, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
      v81 = v32;
      v83 = v82;
      swift_bridgeObjectRelease(v40);
      v123 = sub_33524(v80, v83, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v77 + 4);
      swift_bridgeObjectRelease_n(v40, 2);
      v84 = v83;
      v32 = v81;
      swift_bridgeObjectRelease(v84);
      *(_WORD *)(v77 + 12) = 2080;
      swift_getErrorValue(v72, v122, v121);
      v85 = Error.localizedDescription.getter(v121[1], v121[2]);
      v87 = v86;
      v123 = sub_33524(v85, v86, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v123, &v124, v77 + 14);
      swift_bridgeObjectRelease(v87);
      swift_errorRelease(v72);
      swift_errorRelease(v72);
      _os_log_impl(&dword_0, v75, v76, "Error serializing TOC CFI Id map: %s. %s", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy(v78, 2, v119);
      swift_slowDealloc(v78, -1, -1);
      swift_slowDealloc(v77, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n(v40, 2);

      swift_errorRelease(v72);
      swift_errorRelease(v72);
    }
    sub_154A78(0, 0, v104, v101, v116 & 1, v117 & 1, v118, v120, a9, a10, v99, v100, v112, v113, v114, v115, v108, v32, v98,
      v111,
      v110,
      v109,
      v103);
    swift_errorRelease(v72);
  }
  swift_release();
}

id sub_157C5C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  double v27;
  unint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE v35[4];
  int v36;
  uint64_t v37;
  _QWORD v38[3];
  _BYTE v39[8];
  uint64_t v40;
  uint64_t v41;

  v5 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v5);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v35[-v9];
  sub_14B004((uint64_t)"navigationHandler failedToLoad", 30, 2);
  sub_3F238(a1, (uint64_t)v10, (uint64_t *)&unk_3B8C50);
  v11 = v2;
  swift_errorRetain(a2);
  v12 = v11;
  v13 = swift_errorRetain(a2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    v36 = v15;
    v16 = swift_slowAlloc(42, -1);
    v37 = swift_slowAlloc(128, -1);
    v41 = v37;
    *(_DWORD *)v16 = 136315906;
    v17 = type metadata accessor for UUID(0);
    v18 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v19 = dispatch thunk of CustomStringConvertible.description.getter(v17, v18);
    v21 = v20;
    v40 = sub_33524(v19, v20, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v16 + 4);

    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v16 + 12) = 2080;
    v40 = sub_33524(0xD000000000000028, 0x80000000002CD380, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v16 + 14);
    *(_WORD *)(v16 + 22) = 2080;
    sub_3F238((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_3B8C50);
    v22 = type metadata accessor for URL(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v22);
    if ((_DWORD)v24 == 1)
    {
      sub_52128((uint64_t)v7, (uint64_t *)&unk_3B8C50);
      v25 = 0xE90000000000006CLL;
      v26 = 0x7275207974706D65;
    }
    else
    {
      v26 = URL.absoluteString.getter(v24);
      v25 = v28;
      (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v7, v22);
    }
    v29 = v36;
    v40 = sub_33524(v26, v25, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v16 + 24);
    swift_bridgeObjectRelease(v25);
    sub_52128((uint64_t)v10, (uint64_t *)&unk_3B8C50);
    *(_WORD *)(v16 + 32) = 2080;
    if (a2)
    {
      swift_getErrorValue(a2, v39, v38);
      v30 = Error.localizedDescription.getter(v38[1], v38[2]);
      v32 = v31;
    }
    else
    {
      v32 = 0xEE006E6F73616572;
      v30 = 0x206E776F6E6B6E75;
    }
    v40 = sub_33524(v30, v32, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v16 + 34);
    swift_bridgeObjectRelease(v32);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl(&dword_0, v14, v29, "#PaginationOperation: %s %s - url: %s %s", (uint8_t *)v16, 0x2Au);
    v33 = v37;
    swift_arrayDestroy(v37, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

    sub_52128((uint64_t)v10, (uint64_t *)&unk_3B8C50);
    swift_errorRelease(a2);
    *(_QWORD *)&v27 = swift_errorRelease(a2).n128_u64[0];
  }
  return objc_msgSend(v12, "cancel", v27);
}

id sub_15807C(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  double v18;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22;
  uint64_t v23;

  sub_14B004((uint64_t)"navigationHandlerWebContentLoadFailed", 37, 2);
  v3 = v1;
  swift_errorRetain(a1);
  v4 = v3;
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(32, -1);
    v9 = swift_slowAlloc(96, -1);
    v23 = v9;
    *(_DWORD *)v8 = 136315650;
    v10 = type metadata accessor for UUID(0);
    v11 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v12 = dispatch thunk of CustomStringConvertible.description.getter(v10, v11);
    v14 = v13;
    v22 = sub_33524(v12, v13, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v8 + 4);

    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v8 + 12) = 2080;
    v22 = sub_33524(0xD000000000000030, 0x80000000002CD320, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v8 + 14);
    *(_WORD *)(v8 + 22) = 2080;
    if (a1)
    {
      swift_getErrorValue(a1, v21, v20);
      v15 = Error.localizedDescription.getter(v20[1], v20[2]);
      v17 = v16;
    }
    else
    {
      v17 = 0xEE006E6F73616572;
      v15 = 0x206E776F6E6B6E75;
    }
    v22 = sub_33524(v15, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v8 + 24);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl(&dword_0, v6, v7, "#PaginationOperation: %s %s - %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy(v9, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_errorRelease(a1);
    *(_QWORD *)&v18 = swift_errorRelease(a1).n128_u64[0];
  }
  return objc_msgSend(v4, "cancel", v18);
}

uint64_t sub_158334@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC8BookEPUB19PaginationOperation_result;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_3F238(v3, a2, &qword_3BD8F8);
}

uint64_t sub_158390(uint64_t a1)
{
  _BYTE v2[192];

  sub_3F238(a1, (uint64_t)v2, &qword_3BD8F8);
  return sub_149DEC((uint64_t)v2);
}

uint64_t sub_1583D0()
{
  return type metadata accessor for PaginationOperation(0);
}

uint64_t sub_1583D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = &unk_2EEA58;
  v6[2] = &unk_2EEA70;
  v6[3] = &unk_2EEA70;
  v6[4] = &unk_2EEA70;
  v6[5] = &unk_2EEA70;
  result = type metadata accessor for PaginationOperation.Parameters(319);
  if (v3 <= 0x3F)
  {
    v6[6] = *(_QWORD *)(result - 8) + 64;
    v6[7] = &unk_2EEA88;
    v6[8] = &unk_2EEAA0;
    result = type metadata accessor for Logger(319);
    if (v4 <= 0x3F)
    {
      v6[9] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for UUID(319);
      if (v5 <= 0x3F)
      {
        v6[10] = *(_QWORD *)(result - 8) + 64;
        v6[11] = &unk_2EEA70;
        return swift_updateClassMetadata2(a1, 256, 12, v6, a1 + 80);
      }
    }
  }
  return result;
}

uint64_t method lookup function for PaginationOperation(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PaginationOperation);
}

uint64_t dispatch thunk of PaginationOperation.__allocating_init(parameters:annotationProviderService:bookProviderService:priority:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of PaginationOperation.result.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of PaginationOperation.shortDescription.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.size + (swift_isaMask & *v0)))();
}

uint64_t initializeBufferWithCopyOfBuffer for PaginationOperation.Parameters(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  id v12;
  __n128 v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t, __n128);
  __n128 v37;
  uint64_t v38;
  void *v39;
  id v40;
  char *v42;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v28 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
    v7 = (void *)a2[5];
    v8 = a2[6];
    *(_QWORD *)(v4 + 40) = v7;
    *(_QWORD *)(v4 + 48) = v8;
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 9);
    v9 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(v4 + 112) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v9 - 8);
    v12 = v7;
    v13 = swift_unknownObjectRetain(v8);
    v11(v4 + 88, (uint64_t)(a2 + 11), v10, v13);
    *(_OWORD *)(v4 + 128) = *((_OWORD *)a2 + 8);
    *(_QWORD *)(v4 + 144) = a2[18];
    *(_WORD *)(v4 + 152) = *((_WORD *)a2 + 76);
    *(_OWORD *)(v4 + 160) = *((_OWORD *)a2 + 10);
    *(_BYTE *)(v4 + 176) = *((_BYTE *)a2 + 176);
    *(_QWORD *)(v4 + 184) = a2[23];
    *(_BYTE *)(v4 + 192) = *((_BYTE *)a2 + 192);
    v14 = a2[26];
    *(_QWORD *)(v4 + 200) = a2[25];
    *(_QWORD *)(v4 + 208) = v14;
    v15 = (void *)a2[28];
    *(_QWORD *)(v4 + 216) = a2[27];
    *(_QWORD *)(v4 + 224) = v15;
    *(_BYTE *)(v4 + 232) = *((_BYTE *)a2 + 232);
    *(_WORD *)(v4 + 233) = *(_WORD *)((char *)a2 + 233);
    v16 = a2[30];
    v17 = a2[31];
    *(_QWORD *)(v4 + 240) = v16;
    *(_QWORD *)(v4 + 248) = v17;
    v18 = a2[32];
    *(_QWORD *)(v4 + 256) = v18;
    *(_BYTE *)(v4 + 264) = *((_BYTE *)a2 + 264);
    v19 = a2[34];
    v20 = a2[35];
    v21 = *(int *)(a3 + 88);
    v22 = (_QWORD *)(v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    *(_QWORD *)(v4 + 272) = v19;
    *(_QWORD *)(v4 + 280) = v20;
    swift_bridgeObjectRetain(v14);
    v24 = v15;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    v25 = sub_319AC(&qword_3BE170);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v23, 1, v25))
    {
      v27 = sub_319AC(&qword_3BE220);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v29 = *v23;
      v30 = v23[1];
      sub_158788(*v23, v30);
      *v22 = v29;
      v22[1] = v30;
      v31 = v23[3];
      v22[2] = v23[2];
      v22[3] = v31;
      v32 = v23[5];
      v22[4] = v23[4];
      v22[5] = v32;
      v33 = *(int *)(v25 + 80);
      v42 = (char *)v22 + v33;
      v34 = (char *)v23 + v33;
      v35 = type metadata accessor for URL(0);
      v36 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v35 - 8) + 16);
      swift_bridgeObjectRetain(v31);
      v37 = swift_bridgeObjectRetain(v32);
      v36(v42, v34, v35, v37);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v22, 0, 1, v25);
    }
    v38 = *(int *)(a3 + 92);
    v39 = *(void **)((char *)a2 + v38);
    *(_QWORD *)(v4 + v38) = v39;
    v40 = v39;
  }
  return v4;
}

uint64_t sub_158788(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

void destroy for PaginationOperation.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  sub_34488((_QWORD *)a1);

  swift_unknownObjectRelease(*(_QWORD *)(a1 + 48));
  sub_34488((_QWORD *)(a1 + 88));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 208));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 240));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 248));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 256));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 272));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 280));
  v4 = (uint64_t *)(a1 + *(int *)(a2 + 88));
  v5 = sub_319AC(&qword_3BE170);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_D6828(*v4, v4[1]);
    swift_bridgeObjectRelease(v4[3]);
    swift_bridgeObjectRelease(v4[5]);
    v6 = (char *)v4 + *(int *)(v5 + 80);
    v7 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }

}

uint64_t initializeWithCopy for PaginationOperation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  id v11;
  __n128 v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t, __n128);
  __n128 v35;
  uint64_t v36;
  void *v37;
  id v38;
  char *v40;

  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(void))(v5 - 8))();
  v6 = *(void **)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  v11 = v6;
  v12 = swift_unknownObjectRetain(v7);
  v10(a1 + 88, a2 + 88, v9, v12);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v13 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v13;
  v14 = *(void **)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v14;
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_WORD *)(a1 + 233) = *(_WORD *)(a2 + 233);
  v15 = *(_QWORD *)(a2 + 240);
  v16 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v15;
  *(_QWORD *)(a1 + 248) = v16;
  v17 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 256) = v17;
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v18 = *(_QWORD *)(a2 + 272);
  v19 = *(_QWORD *)(a2 + 280);
  v20 = *(int *)(a3 + 88);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  *(_QWORD *)(a1 + 272) = v18;
  *(_QWORD *)(a1 + 280) = v19;
  swift_bridgeObjectRetain(v13);
  v23 = v14;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v19);
  v24 = sub_319AC(&qword_3BE170);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
  {
    v26 = sub_319AC(&qword_3BE220);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = *v22;
    v28 = v22[1];
    sub_158788(*v22, v28);
    *v21 = v27;
    v21[1] = v28;
    v29 = v22[3];
    v21[2] = v22[2];
    v21[3] = v29;
    v30 = v22[5];
    v21[4] = v22[4];
    v21[5] = v30;
    v31 = *(int *)(v24 + 80);
    v32 = (char *)v21 + v31;
    v40 = (char *)v22 + v31;
    v33 = type metadata accessor for URL(0);
    v34 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v33 - 8) + 16);
    swift_bridgeObjectRetain(v29);
    v35 = swift_bridgeObjectRetain(v30);
    v34(v32, v40, v33, v35);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
  }
  v36 = *(int *)(a3 + 92);
  v37 = *(void **)(a2 + v36);
  *(_QWORD *)(a1 + v36) = v37;
  v38 = v37;
  return a1;
}

uint64_t assignWithCopy for PaginationOperation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t, __n128);
  __n128 v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;

  sub_1019A8((_QWORD *)a1, (_QWORD *)a2);
  v6 = *(void **)(a2 + 40);
  v7 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  v8 = v6;

  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  swift_unknownObjectRetain(v9);
  swift_unknownObjectRelease(v10);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_1019A8((_QWORD *)(a1 + 88), (_QWORD *)(a2 + 88));
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v11 = *(_QWORD *)(a2 + 208);
  v12 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  v13 = *(void **)(a2 + 224);
  v14 = *(void **)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v13;
  v15 = v13;

  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  *(_BYTE *)(a1 + 234) = *(_BYTE *)(a2 + 234);
  v16 = *(_QWORD *)(a1 + 240);
  v17 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 240) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v16);
  v18 = *(_QWORD *)(a1 + 248);
  v19 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 248) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v18);
  v20 = *(_QWORD *)(a1 + 256);
  v21 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 256) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v20);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v22 = *(_QWORD *)(a2 + 272);
  v23 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = *(_QWORD *)(a2 + 280);
  v25 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = *(int *)(a3 + 88);
  v27 = (uint64_t *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v29 = sub_319AC(&qword_3BE170);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      v50 = *v28;
      v51 = v28[1];
      sub_158788(*v28, v51);
      v52 = *v27;
      v53 = v27[1];
      *v27 = v50;
      v27[1] = v51;
      sub_D6828(v52, v53);
      v27[2] = v28[2];
      v54 = v28[3];
      v55 = v27[3];
      v27[3] = v54;
      swift_bridgeObjectRetain(v54);
      swift_bridgeObjectRelease(v55);
      v27[4] = v28[4];
      v56 = v28[5];
      v57 = v27[5];
      v27[5] = v56;
      swift_bridgeObjectRetain(v56);
      swift_bridgeObjectRelease(v57);
      v58 = *(int *)(v29 + 80);
      v59 = (char *)v27 + v58;
      v60 = (char *)v28 + v58;
      v61 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
      goto LABEL_7;
    }
    sub_52128((uint64_t)v27, &qword_3BE170);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    v44 = sub_319AC(&qword_3BE220);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_7;
  }
  v34 = *v28;
  v35 = v28[1];
  sub_158788(*v28, v35);
  *v27 = v34;
  v27[1] = v35;
  v27[2] = v28[2];
  v36 = v28[3];
  v27[3] = v36;
  v27[4] = v28[4];
  v37 = v28[5];
  v27[5] = v37;
  v38 = *(int *)(v29 + 80);
  v63 = a3;
  v39 = (char *)v27 + v38;
  v62 = (char *)v28 + v38;
  v40 = type metadata accessor for URL(0);
  v41 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v40 - 8) + 16);
  swift_bridgeObjectRetain(v36);
  v42 = swift_bridgeObjectRetain(v37);
  v43 = v39;
  a3 = v63;
  v41(v43, v62, v40, v42);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_7:
  v45 = *(int *)(a3 + 92);
  v46 = *(void **)(a2 + v45);
  v47 = *(void **)(a1 + v45);
  *(_QWORD *)(a1 + v45) = v46;
  v48 = v46;

  return a1;
}

uint64_t initializeWithTake for PaginationOperation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  *(_BYTE *)(a1 + 234) = *(_BYTE *)(a2 + 234);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v10 = *(int *)(a3 + 88);
  v11 = (_OWORD *)(a1 + v10);
  v12 = (_OWORD *)(a2 + v10);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  v13 = sub_319AC(&qword_3BE170);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_319AC(&qword_3BE220);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v12[1];
    *v11 = *v12;
    v11[1] = v16;
    v11[2] = v12[2];
    v17 = *(int *)(v13 + 80);
    v18 = (char *)v11 + v17;
    v19 = (char *)v12 + v17;
    v20 = type metadata accessor for URL(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 92)) = *(_QWORD *)(a2 + *(int *)(a3 + 92));
  return a1;
}

uint64_t assignWithTake for PaginationOperation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t *, uint64_t, uint64_t);
  int v25;
  int v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  sub_34488((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;

  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease(v9);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  sub_34488((_QWORD *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v10 = *(_QWORD *)(a2 + 208);
  v11 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 224);
  v13 = *(void **)(a1 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v12;

  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 233) = *(_BYTE *)(a2 + 233);
  *(_BYTE *)(a1 + 234) = *(_BYTE *)(a2 + 234);
  v14 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v17 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRelease(v18);
  v19 = *(int *)(a3 + 88);
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = sub_319AC(&qword_3BE170);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v36 = *v20;
      v37 = v20[1];
      *(_OWORD *)v20 = *(_OWORD *)v21;
      sub_D6828(v36, v37);
      v38 = v21[3];
      v39 = v20[3];
      v20[2] = v21[2];
      v20[3] = v38;
      swift_bridgeObjectRelease(v39);
      v40 = v21[5];
      v41 = v20[5];
      v20[4] = v21[4];
      v20[5] = v40;
      swift_bridgeObjectRelease(v41);
      v42 = *(int *)(v22 + 80);
      v43 = (char *)v20 + v42;
      v44 = (char *)v21 + v42;
      v45 = type metadata accessor for URL(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
      goto LABEL_7;
    }
    sub_52128((uint64_t)v20, &qword_3BE170);
    goto LABEL_6;
  }
  if (v26)
  {
LABEL_6:
    v32 = sub_319AC(&qword_3BE220);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  v27 = *((_OWORD *)v21 + 1);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v27;
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  v28 = *(int *)(v22 + 80);
  v29 = (char *)v20 + v28;
  v30 = (char *)v21 + v28;
  v31 = type metadata accessor for URL(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_7:
  v33 = *(int *)(a3 + 92);
  v34 = *(void **)(a1 + v33);
  *(_QWORD *)(a1 + v33) = *(_QWORD *)(a2 + v33);

  return a1;
}

uint64_t getEnumTagSinglePayload for PaginationOperation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_159308);
}

uint64_t sub_159308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_319AC(&qword_3BE220);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 88), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PaginationOperation.Parameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_159394);
}

uint64_t sub_159394(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_319AC(&qword_3BE220);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 88), a2, a2, v7);
  }
  return result;
}

void sub_15940C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[20];

  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = &unk_2EEAE0;
  v4[3] = &unk_2EEAF8;
  v4[4] = &unk_2EEAF8;
  v4[5] = "(";
  v4[6] = &unk_2EEB10;
  v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = &unk_2EEA70;
  v4[10] = &unk_2EEA70;
  v4[11] = &unk_2EEA70;
  v4[12] = &unk_2EEB28;
  v4[13] = &unk_2EEB28;
  v4[14] = &unk_2EEB28;
  v4[15] = &unk_2EEA70;
  v4[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[17] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1594EC(319);
  if (v3 <= 0x3F)
  {
    v4[18] = *(_QWORD *)(v2 - 8) + 64;
    v4[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initStructMetadata(a1, 256, 20, v4, a1 + 16);
  }
}

void sub_1594EC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3BE290)
  {
    v2 = sub_31A38(&qword_3BE170);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3BE290);
  }
}

double destroy for PaginationOperation.Result(_QWORD *a1)
{
  double result;

  sub_34488(a1);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[10]);
  swift_bridgeObjectRelease(a1[14]);
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(a1[16]);
  swift_bridgeObjectRelease(a1[17]);
  swift_bridgeObjectRelease(a1[18]);
  swift_bridgeObjectRelease(a1[19]);
  swift_bridgeObjectRelease(a1[20]);
  swift_bridgeObjectRelease(a1[21]);
  swift_bridgeObjectRelease(a1[22]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(a1[23]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for PaginationOperation.Result(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v7;
  v8 = *(_QWORD *)(a2 + 120);
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v8;
  *(_QWORD *)(a1 + 128) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  v11 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v10;
  *(_QWORD *)(a1 + 144) = v11;
  v12 = *(_QWORD *)(a2 + 152);
  v13 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v12;
  *(_QWORD *)(a1 + 160) = v13;
  v16 = *(_QWORD *)(a2 + 168);
  v17 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v16;
  *(_QWORD *)(a1 + 176) = v17;
  v14 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v14;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRetain(v14);
  return a1;
}

uint64_t assignWithCopy for PaginationOperation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_1019A8((_QWORD *)a1, (_QWORD *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 112);
  v9 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 120);
  v11 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 128);
  v13 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 136);
  v15 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 144);
  v17 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 152);
  v19 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(a2 + 160);
  v21 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(a2 + 168);
  v23 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = *(_QWORD *)(a1 + 176);
  v25 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v24);
  v26 = *(_QWORD *)(a1 + 184);
  v27 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v26);
  return a1;
}

__n128 initializeWithTake for PaginationOperation.Result(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for PaginationOperation.Result(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_34488((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease(v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 112);
  v9 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease(v12);
  v13 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease(v14);
  v15 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease(v16);
  v17 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaginationOperation.Result(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 192))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaginationOperation.Result(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaginationOperation.Result()
{
  return &type metadata for PaginationOperation.Result;
}

uint64_t destroy for PaginationOperation.WebViewOperation(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 16));
}

_QWORD *_s8BookEPUB19PaginationOperationC16WebViewOperationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a2[2];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = v4;
  swift_retain(v4);
  return a1;
}

_QWORD *assignWithCopy for PaginationOperation.WebViewOperation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[2];
  v4 = a1[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

uint64_t assignWithTake for PaginationOperation.WebViewOperation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v3);
  return a1;
}

ValueMetadata *type metadata accessor for PaginationOperation.WebViewOperation()
{
  return &type metadata for PaginationOperation.WebViewOperation;
}

uint64_t sub_159B48()
{
  return sub_159B74((uint64_t (*)(_QWORD))&type metadata accessor for URLRequest);
}

uint64_t sub_159B54()
{
  return sub_159C00((uint64_t (*)(_QWORD))&type metadata accessor for URLRequest, (uint64_t (*)(_QWORD, uint64_t))sub_14BBE8);
}

uint64_t sub_159B68()
{
  return sub_159B74((uint64_t (*)(_QWORD))&type metadata accessor for URL);
}

uint64_t sub_159B74(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_159BEC()
{
  return sub_159C00((uint64_t (*)(_QWORD))&type metadata accessor for URL, (uint64_t (*)(_QWORD, uint64_t))sub_14B43C);
}

uint64_t sub_159C00(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

uint64_t sub_159C44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_159C68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_159C9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0[4];
  if (!__OFADD__(v1, 1))
    return sub_150F00(v0[3], v1 + 1, v0[5], v0[6]);
  __break(1u);
  return result;
}

uint64_t sub_159CD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_159CFC(void *a1)
{
  uint64_t v1;

  return sub_151C8C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_159D04()
{
  return sub_15A144(49);
}

void sub_159D0C(void *a1, __n128 a2)
{
  uint64_t v2;

  sub_153280(a1, *(char **)(v2 + 16), *(NSObject **)(v2 + 24), *(void (**)(uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), a2);
}

uint64_t sub_159D1C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_159D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_15481C(a1, a2, a3, *(_QWORD **)(v3 + 16), *(_QWORD **)(v3 + 24));
}

uint64_t sub_159D48()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  swift_release(*(_QWORD *)(v0 + 112));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 120));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 136));
  swift_release(*(_QWORD *)(v0 + 152));

  return swift_deallocObject(v0, 176, 7);
}

id sub_159DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_154A78(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_BYTE *)(v2 + 33), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(double *)(v2 + 40), *(double *)(v2 + 48), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136),
           *(void (**)(uint64_t))(v2 + 144),
           *(_QWORD *)(v2 + 152),
           *(_QWORD *)(v2 + 160),
           *(void **)(v2 + 168));
}

uint64_t sub_159E28()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_159E4C()
{
  _QWORD *v0;

  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_159E80(uint64_t a1)
{
  uint64_t v1;

  return sub_155550(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_159E90(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_15F104(a1, a2, *(void (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_159E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_153200(a1, a2, v2, (uint64_t (*)(uint64_t, uint64_t))sub_152F24);
}

uint64_t sub_159EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_153200(a1, a2, v2, (uint64_t (*)(uint64_t, uint64_t))sub_152BD0);
}

void sub_159ED8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_155270(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_159EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URLRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_159F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URLRequest(0) - 8) + 80);
  sub_14BDE8(a1, *(char **)(v1 + 16), *(void ***)(v1 + 24), (void *)(v1 + ((v3 + 32) & ~v3)));
}

uint64_t sub_159F9C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_159FC8(uint64_t a1)
{
  uint64_t v1;

  sub_14DC00(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_159FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for URLRequest(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

void sub_15A0A8(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(type metadata accessor for URLRequest(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_14DF3C(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + v8, *(void **)(v3 + v9), v3 + ((v9 + v10 + 8) & ~v10));
}

uint64_t sub_15A13C()
{
  return sub_15A144(48);
}

uint64_t sub_15A144(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 40));
  return swift_deallocObject(v1, a1, 7);
}

void sub_15A184(void *a1)
{
  uint64_t v1;

  sub_14F178(a1, *(_BYTE **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void BookThemeEntity.buttonStyle.getter()
{
  uint64_t v1;

  v1 = type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin(v1);
  __asm { BR              X10 }
}

uint64_t sub_15A28C()
{
  uint64_t *v0;
  char v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t result;

  v2 = (void *)objc_opt_self(UIColor);
  v3 = ((uint64_t (*)(id))Color.init(uiColor:))(objc_msgSend(v2, "systemWhiteColor"));
  if ((v1 & 1) != 0)
    v4 = objc_msgSend(v2, "tertiarySystemBackgroundColor");
  else
    v4 = objc_msgSend(v2, "systemBlackColor");
  result = ((uint64_t (*)(id))Color.init(uiColor:))(v4);
  *v0 = v3;
  v0[1] = result;
  return result;
}

uint64_t BookThemeEntity.ButtonStyle.fill.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 8));
}

uint64_t sub_15A680()
{
  uint64_t v0;
  uint64_t result;

  v0 = static Color.white.getter();
  result = static Color.black.getter();
  qword_3BE380 = v0;
  *(_QWORD *)algn_3BE388 = result;
  return result;
}

uint64_t static BookThemeEntity.defaultButtonStyle.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_3B57B8 != -1)
    swift_once(&qword_3B57B8, sub_15A680);
  v2 = *(_QWORD *)algn_3BE388;
  *a1 = qword_3BE380;
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

void BookThemeEntity.buttonDisabledStyle.getter(uint64_t *a1@<X8>)
{
  uint64_t v1;
  int v3;
  __n128 v4;
  double v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;

  v3 = *(unsigned __int8 *)(v1 + 1);
  BookThemeEntity.buttonStyle.getter();
  v4.n128_u64[0] = 0x3FD3333333333333;
  if (v3)
  {
    v5 = 0.5;
  }
  else
  {
    v4.n128_f64[0] = 0.5;
    v5 = 0.25;
  }
  v6 = Color.opacity(_:)(v4);
  v7.n128_f64[0] = v5;
  v8 = Color.opacity(_:)(v7);
  swift_release();
  swift_release();
  *a1 = v6;
  a1[1] = v8;
}

void BookThemeEntity.secondaryButtonStyle.getter()
{
  uint64_t v1;

  v1 = type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin(v1);
  __asm { BR              X10 }
}

uint64_t sub_15A858()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;

  v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  if ((v2 & 1) != 0)
  {
    *(_QWORD *)(v5 - 80) = sub_57158;
    *(_QWORD *)(v5 - 72) = 0;
    *(_QWORD *)(v5 - 112) = _NSConcreteStackBlock;
    *(_QWORD *)(v5 - 104) = 1107296256;
    *(_QWORD *)(v5 - 96) = sub_57168;
    *(_QWORD *)(v5 - 88) = &unk_384440;
    v7 = _Block_copy((const void *)(v5 - 112));
    v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithTraits:", v7);
    _Block_release(v7);
    swift_release();
    if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1) & 1) != 0)
    {
      __break(1u);
      JUMPOUT(0x15AFE0);
    }
    v9 = objc_msgSend(v6, "resolvedColorWithTraitCollection:", v8);

    v17 = Color.init(_:)(v9, v10, v11, v12, v13, v14, v15, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for Color.RGBColorSpace.sRGB(_:), v1);
    v18 = 0.266666667;
    v19 = 0.282352941;
  }
  else
  {
    *(_QWORD *)(v5 - 80) = sub_57148;
    *(_QWORD *)(v5 - 72) = 0;
    *(_QWORD *)(v5 - 112) = _NSConcreteStackBlock;
    *(_QWORD *)(v5 - 104) = 1107296256;
    *(_QWORD *)(v5 - 96) = sub_57168;
    *(_QWORD *)(v5 - 88) = &unk_384468;
    v20 = _Block_copy((const void *)(v5 - 112));
    v21 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithTraits:", v20);
    _Block_release(v20);
    swift_release();
    if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1) & 1) != 0)
    {
      __break(1u);
      JUMPOUT(0x15AFE8);
    }
    v22 = objc_msgSend(v6, "resolvedColorWithTraitCollection:", v21);

    v17 = Color.init(_:)(v22, v23, v24, v25, v26, v27, v28, v29);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v3, enum case for Color.RGBColorSpace.sRGB(_:), v1);
    v18 = 0.901960784;
    v19 = 0.921568627;
  }
  result = Color.init(_:red:green:blue:opacity:)(v3, v18, v18, v19, 0.7);
  *v0 = v17;
  v0[1] = result;
  return result;
}

uint64_t sub_15B004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_15B014(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t _s11ButtonStyleVwxx(_QWORD *a1)
{
  swift_release(*a1);
  return swift_release(a1[1]);
}

uint64_t *_s11ButtonStyleVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t *_s11ButtonStyleVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  return a1;
}

_QWORD *_s11ButtonStyleVwta(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_release(v4);
  return a1;
}

uint64_t _s11ButtonStyleVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s11ButtonStyleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookThemeEntity.ButtonStyle()
{
  return &type metadata for BookThemeEntity.ButtonStyle;
}

id ReadingLoupeOverlayView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  char *v9;
  char *v10;
  char *v11;
  _OWORD *v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeView], 0);
  v9 = &v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingSettingsProvider];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentThemePublisher] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeActiveDimming] = 0;
  v10 = &v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bookLayoutModeProvider];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  *(_QWORD *)&v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutModePublisher] = 0;
  v11 = &v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutMode];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme];
  *v12 = xmmword_2ED1B0;
  v12[1] = 0u;
  v12[2] = 0u;
  v12[3] = 0u;
  v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_visibilityState] = 4;
  v13 = OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_topGradientLayer;
  v14 = objc_allocWithZone((Class)CAGradientLayer);
  v15 = v4;
  *(_QWORD *)&v4[v13] = objc_msgSend(v14, "init");
  v16 = OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bottomGradientLayer;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeOverlayViewBottomOffset] = 0x4034000000000000;

  v19.receiver = v15;
  v19.super_class = (Class)type metadata accessor for ReadingLoupeOverlayView();
  v17 = objc_msgSendSuper2(&v19, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v17;
}

uint64_t type metadata accessor for ReadingLoupeOverlayView()
{
  return objc_opt_self(_TtC8BookEPUB23ReadingLoupeOverlayView);
}

char *ReadingLoupeOverlayView.__allocating_init(frame:readingSettingsProvider:readingLoupeView:bookLayoutModeProvider:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  objc_class *v9;
  objc_class *v10;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t ObjectType;
  uint64_t (*v27)(uint64_t, uint64_t, __n128);
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, __n128);
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, __n128);
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  objc_class *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  objc_class *v77;
  id v78;
  uint64_t v79;

  v10 = v9;
  v74 = a5;
  v75 = a3;
  v76 = a4;
  v17 = sub_319AC((uint64_t *)&unk_3B80B0);
  __chkstk_darwin(v17);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_319AC(&qword_3BE3F0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (char *)objc_msgSend(objc_allocWithZone(v9), "initWithFrame:", a6, a7, a8, a9);
  v25 = &v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingSettingsProvider];
  *((_QWORD *)v25 + 1) = a2;
  swift_unknownObjectWeakAssign(v25, a1);
  v77 = v9;
  if (a1)
  {
    ObjectType = swift_getObjectType(a1);
    v73 = v21;
    v27 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 24);
    v72 = v24;
    v28 = swift_unknownObjectRetain(a1);
    v29 = v27(ObjectType, a2, v28);
    swift_unknownObjectRelease(a1);
    v79 = v29;
    v30 = sub_5B5E4();
    v78 = (id)static OS_dispatch_queue.main.getter();
    v31 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v19, 1, 1, v31);
    v32 = sub_319AC((uint64_t *)&unk_3BE750);
    v33 = sub_3DCC0(&qword_3B9B58, (uint64_t *)&unk_3BE750, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v34 = sub_49FA8();
    v35 = v30;
    v10 = v77;
    Publisher.receive<A>(on:options:)(&v78, v19, v32, v35, v33, v34);
    sub_4A000((uint64_t)v19);

    swift_release(v79);
    v36 = swift_allocObject(&unk_384528, 24, 7);
    swift_unknownObjectWeakInit(v36 + 16, v72);
    v37 = swift_allocObject(&unk_3845A0, 32, 7);
    *(_QWORD *)(v37 + 16) = v36;
    *(_QWORD *)(v37 + 24) = v10;
    v38 = sub_3DCC0(&qword_3BE408, &qword_3BE3F0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v39 = Publisher<>.sink(receiveValue:)(sub_15BD1C, v37, v20, v38);
    v40 = swift_release(v37);
    (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v23, v20, v40);
  }
  else
  {
    v41 = v24;
    v39 = 0;
  }
  v42 = *(_QWORD *)&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentThemePublisher];
  *(_QWORD *)&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentThemePublisher] = v39;
  swift_release(v42);
  if (a1)
  {
    v43 = swift_getObjectType(a1);
    v44 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 120);
    v45 = swift_unknownObjectRetain(a1);
    v46 = v44(v43, a2, v45);
    swift_unknownObjectRelease(a1);
    v79 = v46;
    v47 = swift_allocObject(&unk_384528, 24, 7);
    swift_unknownObjectWeakInit(v47 + 16, v24);
    v48 = swift_allocObject(&unk_384578, 32, 7);
    *(_QWORD *)(v48 + 16) = v47;
    *(_QWORD *)(v48 + 24) = v10;
    v49 = sub_319AC(&qword_3BE3F8);
    v50 = sub_3DCC0(&qword_3BE400, &qword_3BE3F8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v51 = Publisher<>.sink(receiveValue:)(sub_15BCF0, v48, v49, v50);
    swift_release(v48);
    swift_release(v79);
  }
  else
  {
    v51 = 0;
  }
  v52 = v76;
  v53 = *(_QWORD *)&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeActiveDimming];
  *(_QWORD *)&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeActiveDimming] = v51;
  swift_release(v53);
  v54 = &v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bookLayoutModeProvider];
  v55 = v74;
  *((_QWORD *)v54 + 1) = v74;
  swift_unknownObjectWeakAssign(v54, v52);
  if (v52)
  {
    v56 = swift_getObjectType(v52);
    v57 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v55 + 16);
    v58 = swift_unknownObjectRetain(v52);
    v59 = v57(v56, v55, v58);
    swift_unknownObjectRelease(v52);
    v79 = v59;
    v60 = swift_allocObject(&unk_384528, 24, 7);
    swift_unknownObjectWeakInit(v60 + 16, v24);
    v61 = swift_allocObject(&unk_384550, 32, 7);
    v62 = v77;
    *(_QWORD *)(v61 + 16) = v60;
    *(_QWORD *)(v61 + 24) = v62;
    v63 = sub_319AC((uint64_t *)&unk_3BCEA0);
    v64 = sub_3DCC0(&qword_3B9B38, (uint64_t *)&unk_3BCEA0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v65 = Publisher<>.sink(receiveValue:)(sub_15BCE8, v61, v63, v64);
    swift_release(v61);
    swift_release(v79);
  }
  else
  {
    v65 = 0;
  }
  v66 = *(_QWORD *)&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutModePublisher];
  *(_QWORD *)&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutModePublisher] = v65;
  swift_release(v66);
  v67 = v75;
  swift_unknownObjectWeakAssign(&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeView], v75);
  v68 = objc_msgSend(v24, "layer");
  objc_msgSend(v68, "addSublayer:", *(_QWORD *)&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_topGradientLayer]);

  v69 = objc_msgSend(v24, "layer");
  objc_msgSend(v69, "addSublayer:", *(_QWORD *)&v24[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bottomGradientLayer]);

  v70 = objc_msgSend(v24, "layer");
  objc_msgSend(v70, "setCornerRadius:", 30.0);

  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(v52);
  return v24;
}

uint64_t sub_15B958()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_15B97C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a1 + 3);
  v8 = *((_QWORD *)a1 + 4);
  v9 = *((_QWORD *)a1 + 5);
  v10 = *((_QWORD *)a1 + 6);
  v11 = a2 + 16;
  v19 = *((_QWORD *)a1 + 7);
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = 256;
    if (!v3)
      v14 = 0;
    v15 = (uint64_t *)(Strong + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme);
    v16 = v6;
    v17 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme);
    v18 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme + 8);
    *v15 = v14 | v2 | (v4 << 16);
    v15[1] = v5;
    v15[2] = v16;
    v15[3] = v7;
    v15[4] = v8;
    v15[5] = v9;
    v15[6] = v10;
    v15[7] = v19;
    swift_bridgeObjectRetain(v5);
    sub_15C888(v17, v18);

  }
}

void sub_15BA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  double v21;
  char *v22;
  _QWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = Strong + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingSettingsProvider;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingSettingsProvider);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)(v5 + 8);
      ObjectType = swift_getObjectType(v6);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 96))(v23, ObjectType, v8);
      v10 = SLOBYTE(v23[0]);
      v11 = v23[0];
      v12 = &v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme];
      v13 = *(_QWORD *)&v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme + 8];
      if (v13 == 1)
      {
        v14 = v4;
        v15 = 0;
        v16 = 0;
      }
      else
      {
        v17 = *(_QWORD *)v12;
        v18 = *(_QWORD *)v12 >> 16;
        LOBYTE(v23[0]) = *(_QWORD *)v12;
        BYTE1(v23[0]) = BYTE1(v17) & 1;
        BYTE2(v23[0]) = v18;
        v23[1] = v13;
        v19 = *((_OWORD *)v12 + 2);
        v24 = *((_OWORD *)v12 + 1);
        v25 = v19;
        v26 = *((_OWORD *)v12 + 3);
        BookThemeEntity.backgroundColor.getter();
        v16 = v20;
        v21 = dbl_2EEC80[v10];
        v22 = v4;
        v15 = objc_msgSend(v16, "colorWithAlphaComponent:", v21);
      }
      objc_msgSend(v4, "setBackgroundColor:", v15);

      v4[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_visibilityState] = v11;
      sub_15C258();

      swift_unknownObjectRelease(v7);
      v4 = v16;
    }

  }
}

void sub_15BC04(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *Strong;
  char *v5;
  uint64_t v6;
  char *v7;
  _BOOL8 v8;
  uint64_t v9;
  char v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = &Strong[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutMode];
    *(_QWORD *)v5 = v2;
    v5[8] = 0;

  }
  swift_beginAccess(v3, &v9, 0, 0);
  v6 = swift_unknownObjectWeakLoadStrong(v3);
  if (v6)
  {
    v7 = (char *)v6;
    if ((*(_BYTE *)(v6 + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutMode + 8) & 1) == 0)
    {
      v8 = (unint64_t)(*(_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutMode) - 4) < 0xFFFFFFFFFFFFFFFELL;
      objc_msgSend(*(id *)(v6 + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_topGradientLayer), "setHidden:", v8);
      objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bottomGradientLayer], "setHidden:", v8);
    }

  }
}

void sub_15BCE8(uint64_t *a1)
{
  uint64_t v1;

  sub_15BC04(a1, *(_QWORD *)(v1 + 16));
}

void sub_15BCF0(uint64_t a1)
{
  uint64_t v1;

  sub_15BA8C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_15BCF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_15BD1C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_15B97C(a1, *(_QWORD *)(v1 + 16));
}

id ReadingLoupeOverlayView.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeActiveDimming] = 0;
  swift_release();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentThemePublisher] = 0;
  swift_release();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutModePublisher] = 0;
  swift_release();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadingLoupeOverlayView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_15BF28(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6, double a7, double a8)
{
  char *v8;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  double v23;
  id v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  id v29;
  CGRect v30;

  v17 = (void *)objc_opt_self(UIBezierPath);
  v18 = objc_msgSend(v17, "bezierPathWithRect:", a5, a6, a7, a8);
  v19 = objc_msgSend(v17, "bezierPathWithRect:", a1, a2, a3, a4);
  objc_msgSend(v18, "appendPath:", v19);
  objc_msgSend(v18, "closePath");
  v29 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v20 = objc_msgSend(v18, "CGPath");
  objc_msgSend(v29, "setPath:", v20);

  objc_msgSend(v29, "setFillRule:", kCAFillRuleEvenOdd);
  v21 = objc_msgSend(v8, "layer");
  objc_msgSend(v21, "setMask:", v29);

  v22 = *(id *)&v8[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_topGradientLayer];
  objc_msgSend(v8, "safeAreaInsets");
  objc_msgSend(v22, "setFrame:", a1, a2, a3, v23 + 50.0);

  v24 = *(id *)&v8[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bottomGradientLayer];
  v30.origin.x = a1;
  v30.origin.y = a2;
  v30.size.width = a3;
  v30.size.height = a4;
  v25 = CGRectGetMaxY(v30) + -50.0;
  objc_msgSend(v8, "safeAreaInsets");
  v27 = v25 - v26;
  objc_msgSend(v8, "safeAreaInsets");
  objc_msgSend(v24, "setFrame:", a1, v27, a3, v28 + 50.0);

  sub_15C258();
  sub_15C1D4();

}

void sub_15C18C()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setMask:", 0);

}

void sub_15C1D4()
{
  uint64_t v0;
  _BOOL8 v1;

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutMode + 8) & 1) == 0)
  {
    v1 = (unint64_t)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutMode) - 4) < 0xFFFFFFFFFFFFFFFELL;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_topGradientLayer), "setHidden:", v1);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bottomGradientLayer), "setHidden:", v1);
  }
}

void sub_15C258()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  Class isa;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  Class v36;

  v1 = v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_visibilityState];
  if (v1 != 4)
  {
    v2 = v0;
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme + 8];
    if (v3 != 1)
    {
      v35 = *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme];
      v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme + 8];
      swift_bridgeObjectRetain(v3);
      BookThemeEntity.backgroundColor.getter();
      v6 = v5;
      v7 = objc_msgSend(v5, "colorWithAlphaComponent:", dbl_2EEC80[v1]);

      objc_msgSend(v2, "setBackgroundColor:", v7);
      v8 = *(void **)&v2[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_topGradientLayer];
      v32 = (id)sub_319AC(&qword_3B84F0);
      v9 = swift_allocObject(v32, 96, 7);
      *(_OWORD *)(v9 + 16) = xmmword_2E5F70;
      v31 = v8;
      BookThemeEntity.backgroundColor.getter();
      v11 = v10;
      v12 = objc_msgSend(v10, "colorWithAlphaComponent:", 1.0);

      v13 = objc_msgSend(v12, "CGColor");
      type metadata accessor for CGColor(0);
      v15 = v14;
      *(_QWORD *)(v9 + 56) = v14;
      v34 = v14;
      *(_QWORD *)(v9 + 32) = v13;
      BookThemeEntity.backgroundColor.getter();
      v17 = v16;
      v18 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.0);

      v19 = objc_msgSend(v18, "CGColor");
      *(_QWORD *)(v9 + 88) = v15;
      *(_QWORD *)(v9 + 64) = v19;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v31, "setColors:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

      v21 = *(void **)&v2[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bottomGradientLayer];
      v22 = swift_allocObject(v32, 96, 7);
      *(_OWORD *)(v22 + 16) = xmmword_2E5F70;
      v33 = v21;
      BookThemeEntity.backgroundColor.getter();
      v24 = v23;
      v25 = objc_msgSend(v23, "colorWithAlphaComponent:", 0.0);

      v26 = objc_msgSend(v25, "CGColor");
      *(_QWORD *)(v22 + 56) = v34;
      *(_QWORD *)(v22 + 32) = v26;
      BookThemeEntity.backgroundColor.getter();
      v28 = v27;
      sub_15C888(v35, v4);
      v29 = objc_msgSend(v28, "colorWithAlphaComponent:", 1.0);

      v30 = objc_msgSend(v29, "CGColor");
      *(_QWORD *)(v22 + 88) = v34;
      *(_QWORD *)(v22 + 64) = v30;
      v36 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v33, "setColors:", v36, swift_bridgeObjectRelease(v22).n128_f64[0]);

    }
  }
}

uint64_t method lookup function for ReadingLoupeOverlayView(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingLoupeOverlayView);
}

uint64_t dispatch thunk of ReadingLoupeOverlayView.createMask(overlayRect:loupeRect:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ReadingLoupeOverlayView.clearMask()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) + 8])();
}

void sub_15C724()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  char *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeView], 0);
  v1 = &v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingSettingsProvider];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentThemePublisher] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeActiveDimming] = 0;
  v2 = &v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bookLayoutModeProvider];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutModePublisher] = 0;
  v3 = &v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_layoutMode];
  *(_QWORD *)v3 = 0;
  v3[8] = 1;
  v4 = &v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_currentTheme];
  *v4 = xmmword_2ED1B0;
  v4[1] = 0u;
  v4[2] = 0u;
  v4[3] = 0u;
  v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_visibilityState] = 4;
  v5 = OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_topGradientLayer;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v6 = OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_bottomGradientLayer;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB23ReadingLoupeOverlayView_readingLoupeOverlayViewBottomOffset] = 0x4034000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000002C69C0, "BookEPUB/ReadingLoupeOverlayView.swift", 38, 2, 82, 0);
  __break(1u);
}

uint64_t sub_15C888(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

void WKWebView.convertFromContent(_:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  void *v5;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  id v19;
  CGRect v20;
  CGRect v21;

  objc_msgSend(v5, "be_convertPointFromContentsToView:");
  v12 = v11;
  v14 = v13;
  objc_msgSend(v5, "be_convertPointFromContentsToView:", a2 + a4, a3 + a5);
  v16 = v15 - v12;
  v18 = v17 - v14;
  v19 = v5;
  v20.origin.x = v12;
  v20.origin.y = v14;
  v20.size.width = v16;
  v20.size.height = v18;
  v21 = CGRectStandardize(v20);
  *(_QWORD *)a1 = v19;
  *(CGRect *)(a1 + 8) = v21;
}

id WKWebView.be_estimatedContentSize.getter()
{
  void *v0;
  id result;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  id v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  result = objc_msgSend(v0, "be_estimatedContentSizeValue");
  v2 = result;
  if (result)
  {
    objc_msgSend(result, "CGSizeValue");
    v4 = v3;
    v6 = v5;

    v7 = objc_msgSend(v0, "scrollView");
    objc_msgSend(v7, "contentSize");
    v9 = v8;
    v11 = v10;

    v12.origin.x = 0.0;
    v12.origin.y = 0.0;
    v14.origin.x = 0.0;
    v14.origin.y = 0.0;
    v12.size.width = v9;
    v12.size.height = v11;
    v14.size.width = v4;
    v14.size.height = v6;
    v13 = CGRectUnion(v12, v14);
    return *(id *)&v13.size.width;
  }
  return result;
}

id WKWebView.be_desiredContentOffset.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  result = objc_msgSend(v0, "be_requestedContentOffset");
  v2 = result;
  if (result)
  {
    objc_msgSend(result, "CGPointValue");
    v4 = v3;

    return (id)v4;
  }
  return result;
}

void WKWebView.be_desiredContentOffset.setter(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  id v4;

  if ((a3 & 1) != 0)
  {
    objc_msgSend(v3, "setBe_requestedContentOffset:", 0);
  }
  else
  {
    v4 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGPoint:", *(double *)&a1, *(double *)&a2);
    objc_msgSend(v3, "setBe_requestedContentOffset:", v4);

  }
}

void (*sub_15CB24(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = WKWebView.be_desiredContentOffset.modify((uint64_t)v2);
  return sub_493BC;
}

void (*WKWebView.be_desiredContentOffset.modify(uint64_t a1))(uint64_t a1, char a2)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = objc_msgSend(v1, "be_requestedContentOffset");
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "CGPointValue");
    v6 = v5;
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v4 == 0;
  return sub_15CBF4;
}

void sub_15CBF4(uint64_t a1, char a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  if ((a2 & 1) != 0)
  {
    if ((*(_BYTE *)(a1 + 16) & 1) == 0)
      goto LABEL_6;
LABEL_5:
    objc_msgSend(*(id *)(a1 + 24), "setBe_requestedContentOffset:", 0);
    return;
  }
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    goto LABEL_5;
LABEL_6:
  v3 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGPoint:", *(double *)a1, *(double *)(a1 + 8));
  objc_msgSend(v2, "setBe_requestedContentOffset:", v3);

}

void sub_15CCC8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  _QWORD *v12;
  NSString v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[6];

  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease(0xE000000000000000);
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 10535;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  v11 = swift_allocObject(&unk_384800, 24);
  swift_unknownObjectWeakInit(v11 + 16, v4);
  v12 = (_QWORD *)swift_allocObject(&unk_384828, 40);
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = v11;
  sub_899C8(a3, a4);
  swift_retain();
  v13 = String._bridgeToObjectiveC()();
  v14 = swift_allocObject(&unk_384850, 32);
  *(_QWORD *)(v14 + 16) = sub_15FE70;
  *(_QWORD *)(v14 + 24) = v12;
  v16[4] = sub_15FEE8;
  v16[5] = v14;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_6A0C0;
  v16[3] = &unk_384868;
  v15 = _Block_copy(v16);
  swift_retain();
  objc_msgSend(v4, "evaluateJavaScript:completionHandler:", v13, v15, swift_release().n128_f64[0]);
  _Block_release(v15);
  swift_bridgeObjectRelease(0x80000000002CDBC0);
  swift_release();
  swift_release();

}

void sub_15CE8C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  void *v14;
  _QWORD v15[6];

  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease(0xE000000000000000);
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 10535;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  v11 = swift_allocObject(&unk_384788, 32);
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  sub_899C8(a3, a4);
  v12 = String._bridgeToObjectiveC()();
  v13 = swift_allocObject(&unk_3847B0, 32);
  *(_QWORD *)(v13 + 16) = sub_15FDEC;
  *(_QWORD *)(v13 + 24) = v11;
  v15[4] = sub_159E90;
  v15[5] = v13;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_6A0C0;
  v15[3] = &unk_3847C8;
  v14 = _Block_copy(v15);
  swift_retain();
  objc_msgSend(v4, "evaluateJavaScript:completionHandler:", v12, v14, swift_release().n128_f64[0]);
  _Block_release(v14);
  swift_bridgeObjectRelease(0x80000000002CDB60);
  swift_release();

}

uint64_t sub_15D010()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  id v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double width;
  double height;
  id v22;
  double v23;
  double v24;
  double v25;
  id v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  v1 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v1);
  v3 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v49 - v6;
  if (objc_msgSend(v0, "be_paginationMode", v5))
  {
    v8 = (uint64_t)objc_msgSend(v0, "be_pageCount");
    if ((v8 & 0x8000000000000000) == 0)
      return v8;
    __break(1u);
  }
  v9 = objc_msgSend(v0, "be_estimatedContentSizeValue");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "CGSizeValue");
    v12 = v11;
    v14 = v13;

    v15 = objc_msgSend(v0, "scrollView");
    objc_msgSend(v15, "contentSize");
    v17 = v16;
    v19 = v18;

    v53.origin.x = 0.0;
    v53.origin.y = 0.0;
    v55.origin.x = 0.0;
    v55.origin.y = 0.0;
    v53.size.width = v17;
    v53.size.height = v19;
    v55.size.width = v12;
    v55.size.height = v14;
    v54 = CGRectUnion(v53, v55);
    width = v54.size.width;
    height = v54.size.height;
  }
  else
  {
    v22 = objc_msgSend(v0, "scrollView");
    objc_msgSend(v22, "contentSize");
    width = v23;
    height = v24;

  }
  if (objc_msgSend(v0, "be_isHorizontalScroll", v54.origin.x, v54.origin.y))
    v25 = width;
  else
    v25 = height;
  v26 = objc_msgSend(v0, "be_pageLength");
  if (v27 > 1.0)
    v28 = v27;
  else
    v28 = 1.0;
  v29 = CGFloat.ceiling.getter(v26, v25 / v28);
  if ((~*(_QWORD *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v29 < 9.22337204e18)
  {
    if (qword_3B57C0 == -1)
      goto LABEL_17;
    goto LABEL_30;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  swift_once(&qword_3B57C0, sub_15DA24);
LABEL_17:
  v8 = (uint64_t)v29;
  v30 = type metadata accessor for Logger(0);
  sub_555F0(v30, (uint64_t)qword_3CF1E8);
  v31 = v0;
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc(52, -1);
    v35 = swift_slowAlloc(64, -1);
    *(_DWORD *)v34 = 141559042;
    v51 = 1752392040;
    v52 = v35;
    *(_QWORD *)&v36 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v34 + 4).n128_u64[0];
    *(_WORD *)(v34 + 12) = 2080;
    v37 = objc_msgSend(v31, "URL", v36);
    v50 = v35;
    if (v37)
    {
      v38 = v37;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v37);

      v39 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v3, 0, 1, v39);
    }
    else
    {
      v39 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v3, 1, 1, v39);
    }
    sub_8927C((uint64_t)v3, (uint64_t)v7);
    type metadata accessor for URL(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v7, 1, v39) == 1)
    {
      sub_52128((uint64_t)v7, (uint64_t *)&unk_3B8C50);
      v41 = 0xE200000000000000;
      v42 = 32123;
    }
    else
    {
      v42 = URL.path.getter();
      v41 = v43;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v39);
    }
    v51 = sub_33524(v42, v41, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v34 + 14);

    swift_bridgeObjectRelease(v41);
    *(_WORD *)(v34 + 22) = 2048;
    v51 = (uint64_t)v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v34 + 24);
    *(_WORD *)(v34 + 32) = 2048;
    v51 = *(_QWORD *)&v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v34 + 34);
    *(_WORD *)(v34 + 42) = 2080;
    v44 = CGSize.debugDescription.getter(width, height);
    v46 = v45;
    v51 = sub_33524(v44, v45, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v34 + 44);
    swift_bridgeObjectRelease(v46);
    _os_log_impl(&dword_0, v32, v33, "#ContentSize: [%{mask.hash}s] Calculated #pageCount:%ld from _pageLength: %f size: %s", (uint8_t *)v34, 0x34u);
    v47 = v50;
    swift_arrayDestroy(v50, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v34, -1, -1);

  }
  else
  {

  }
  return v8;
}

uint64_t sub_15D520(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v33;
  char v35;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t aBlock[6];

  v5 = v4;
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a1 + 32);
  v9 = *(void **)(a1 + 40);
  v10 = *(void **)(a1 + 48);
  v35 = *(_BYTE *)(a1 + 56);
  v11 = *(id *)(a1 + 16);
  v38 = v7;
  v37 = v8;
  v12 = v9;
  v13 = v11;
  objc_msgSend(v11, "applyToWebView:", v5, swift_unknownObjectRetain(v10).n128_f64[0]);
  v39 = v12;
  objc_msgSend(v12, "applyToWebView:", v5);
  v14 = objc_msgSend(v10, "font");
  if (v14)
  {
    v15 = v14;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;

  }
  else
  {
    v16 = 0;
    v18 = 0xE000000000000000;
  }
  if (qword_3B57C0 != -1)
    swift_once(&qword_3B57C0, sub_15DA24);
  v19 = type metadata accessor for Logger(0);
  sub_555F0(v19, (uint64_t)qword_3CF1E8);
  v20 = swift_bridgeObjectRetain_n(v18, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    v33 = a4;
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315138;
    swift_bridgeObjectRetain(v18);
    v40 = sub_33524(v16, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, aBlock, v23 + 4);
    swift_bridgeObjectRelease_n(v18, 3);
    _os_log_impl(&dword_0, v21, v22, "#fontFamily '%s' #fontReg attempting to configure font", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    v25 = v23;
    a4 = v33;
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v18, 2);
  }
  v26 = swift_allocObject(&unk_384670, 82);
  *(_QWORD *)(v26 + 16) = v16;
  *(_QWORD *)(v26 + 24) = v18;
  *(_QWORD *)(v26 + 32) = v5;
  *(_QWORD *)(v26 + 40) = v13;
  *(_QWORD *)(v26 + 48) = a3;
  *(_QWORD *)(v26 + 56) = a4;
  *(_QWORD *)(v26 + 64) = v38;
  *(_QWORD *)(v26 + 72) = v37;
  *(_BYTE *)(v26 + 80) = v35;
  *(_BYTE *)(v26 + 81) = a2 & 1;
  aBlock[4] = (uint64_t)sub_15FCB8;
  aBlock[5] = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_525E4;
  aBlock[3] = (uint64_t)&unk_384688;
  v27 = _Block_copy(aBlock);
  v28 = v13;
  v29 = v38;
  v30 = v37;
  swift_unknownObjectRetain(v10);
  v31 = v5;
  sub_899C8(a3, a4);
  objc_msgSend(v31, "be_configureFontWithStyleManager:completion:", v10, v27, swift_release().n128_f64[0]);
  _Block_release(v27);

  return swift_unknownObjectRelease_n(v10, 2);
}

uint64_t sub_15D89C(uint64_t *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;
  uint64_t v8;
  Class isa;
  __int128 v11;
  uint64_t v12;
  _OWORD v13[2];

  v2 = v1;
  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  *(_QWORD *)&v13[0] = *a1;
  BYTE8(v13[0]) = v4;
  sub_1B892C();
  if (!v12)
    return sub_52128((uint64_t)&v11, (uint64_t *)&unk_3B96D0);
  sub_3F180(&v11, v13);
  *(_QWORD *)&v11 = v3;
  BYTE8(v11) = v4;
  sub_1B8444();
  v6 = v5;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  v8 = sub_15F3E8((uint64_t)v13);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "be_updateAXCurrentReadingStateWithMessage:forValue:", v7, isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  return sub_34488(v13);
}

void sub_15D99C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_15D9D0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

uint64_t sub_15DA24()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3CF1E8);
  sub_555F0(v0, (uint64_t)qword_3CF1E8);
  sub_34450(0, (unint64_t *)&qword_3B80A0, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000002C6E50, 0x6569566265574B57, 0xE900000000000077);
  return Logger.init(_:)(v1);
}

uint64_t WebViewConfiguration.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  Swift::String v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v1 = *v0;
  v2 = v0[1];
  v3 = (void *)v0[2];
  v4 = (void *)v0[3];
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(49);
  v5._countAndFlagsBits = 60;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  v6._object = (void *)0x80000000002EEC90;
  v6._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 0x203A657A6973203ELL;
  v7._object = (void *)0xE800000000000000;
  String.append(_:)(v7);
  v24 = v1;
  v25 = v2;
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)(&v24, v26, v8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v9._object = (void *)0x80000000002CDB00;
  v9._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v9);
  v10 = v3;
  v11 = objc_msgSend(v10, "description", v24, v25);
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v14 = v13;

  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);

  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 0x6974704F69666320;
  v16._object = (void *)0xEC0000003A736E6FLL;
  String.append(_:)(v16);
  v17 = v4;
  v18 = objc_msgSend(v17, "description");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);

  swift_bridgeObjectRelease(v21);
  return v26[0];
}

void sub_15DC74(int a1, uint64_t a2, unint64_t a3, char *a4, void *a5, uint64_t a6, char *a7, uint64_t a8, uint64_t a9, char a10, unsigned __int8 a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  id v51;
  char *v52;
  id v53;
  void *v54;
  void *v55;
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  void **v68;
  id v69;
  void *v70;
  uint64_t v71;
  void (*v72)(void);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void (*v89)(char *, uint64_t);
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  double v95;
  double v96;
  _BOOL8 v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  double v103;
  double v104;
  double v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  void *v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  void (*v126)(void);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  void **aBlock;
  uint64_t v132;
  void (*v133)(uint64_t, void *);
  void *v134;
  uint64_t (*v135)();
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v119 = a8;
  v123 = a7;
  v125 = a4;
  v16 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v16);
  v124 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v122 = (char *)&v117 - v19;
  __chkstk_darwin(v20);
  v130 = (char *)&v117 - v21;
  __chkstk_darwin(v22);
  v24 = (char *)&v117 - v23;
  v129 = type metadata accessor for URL(0);
  v25 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v120 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v117 - v28;
  __chkstk_darwin(v30);
  v121 = (char *)&v117 - v31;
  if (qword_3B57C0 != -1)
    goto LABEL_36;
  while (1)
  {
    v32 = type metadata accessor for Logger(0);
    v33 = sub_555F0(v32, (uint64_t)qword_3CF1E8);
    v34 = swift_bridgeObjectRetain_n(a3, 2);
    v128 = v33;
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.info.getter();
    v37 = os_log_type_enabled(v35, v36);
    v126 = (void (*)(void))a6;
    v127 = v25;
    if (v37)
    {
      v38 = swift_slowAlloc(22, -1);
      v118 = a5;
      v39 = v38;
      v40 = (void **)swift_slowAlloc(64, -1);
      aBlock = v40;
      *(_DWORD *)v39 = 136315394;
      swift_bridgeObjectRetain(a3);
      v137 = sub_33524(a2, a3, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v39 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v39 + 12) = 2080;
      LODWORD(v137) = a1;
      type metadata accessor for BEWKFontRegistrationResult(0);
      v42 = String.init<A>(describing:)(&v137, v41);
      v44 = v43;
      v137 = sub_33524(v42, v43, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v39 + 14);
      swift_bridgeObjectRelease(v44);
      _os_log_impl(&dword_0, v35, v36, "#fontFamily '%s' #fontReg success:%s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      v45 = v39;
      a5 = v118;
      v25 = v127;
      swift_slowDealloc(v45, -1, -1);

    }
    else
    {

      v46 = swift_bridgeObjectRelease_n(a3, 2);
    }
    v47 = v129;
    if (a1 == 2)
    {
      v48 = Logger.logObject.getter(v46);
      v49 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_0, v48, v49, "Skipping completion for applying configuration.", v50, 2u);
        swift_slowDealloc(v50, -1, -1);
      }

      return;
    }
    v51 = objc_msgSend(a5, "isHorizontalScroll");
    v52 = v125;
    objc_msgSend(v125, "setBe_isHorizontalScroll:", v51);
    v53 = objc_msgSend(v52, "URL");
    if (!v53)
    {
      v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
      v57(v24, 1, 1, v47);
LABEL_16:
      sub_52128((uint64_t)v24, (uint64_t *)&unk_3B8C50);
      v63 = (uint64_t)v124;
      goto LABEL_17;
    }
    v54 = v53;
    v55 = a5;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v53);

    v56 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v56(v24, v29, v47);
    v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v57(v24, 0, 1, v47);
    v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    if (v58(v24, 1, v47) == 1)
      goto LABEL_16;
    v59 = v121;
    v56(v121, v24, v47);
    if (qword_3B56C8 != -1)
      swift_once(&qword_3B56C8, sub_6A978);
    v60 = type metadata accessor for URLRequest(0);
    sub_555F0(v60, (uint64_t)qword_3CEF00);
    URLRequest.url.getter();
    v61 = (uint64_t)v130;
    v62 = v58(v130, 1, v47);
    v63 = (uint64_t)v124;
    if (v62 == 1)
    {
      (*(void (**)(char *, uint64_t))(v127 + 8))(v59, v47);
      sub_52128(v61, (uint64_t *)&unk_3B8C50);
      goto LABEL_17;
    }
    v81 = ((uint64_t (*)(char *, uint64_t, uint64_t))v56)(v120, v61, v47);
    v82 = URL.absoluteString.getter(v81);
    v84 = v83;
    v86 = URL.absoluteString.getter(v82);
    v87 = v85;
    if (v82 == v86 && v84 == v85)
      break;
    v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v82, v84, v86, v85, 0);
    swift_bridgeObjectRelease(v84);
    swift_bridgeObjectRelease(v87);
    if ((v88 & 1) != 0)
      goto LABEL_33;
    LODWORD(v130) = a11;
    v90 = objc_msgSend((id)objc_opt_self(BEContentLayoutInfo), "updateScriptWithOptions:", v55);
    v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
    v93 = v92;

    v94 = (void *)objc_opt_self(BECFIUtilitiesJS);
    objc_msgSend(v55, "gapBetweenPages");
    v96 = v95;
    v97 = objc_msgSend(v55, "mode") == &dword_4;
    v98 = objc_msgSend(v94, "updateScriptWithOptions:gapBetweenPages:paginatedTopToBottom:", v119, v97, v96);
    v99 = static String._unconditionallyBridgeFromObjectiveC(_:)(v98);
    v24 = v52;
    v101 = v100;

    v102 = (void *)objc_opt_self(BEContentCleanupJS);
    objc_msgSend(v55, "pageLength");
    v104 = v103;
    objc_msgSend(v55, "gapBetweenPages");
    v106 = objc_msgSend(v102, "updateScriptWithOptions:pageLength:gapBetweenPages:", a9, v104, v105);
    v107 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
    v109 = v108;

    v110 = objc_msgSend((id)objc_opt_self(BEContentSupportJS), "javascriptForUpdatedLineGuideDisplayEnabled:", a10 & 1);
    a5 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v110);
    a2 = v111;

    v25 = swift_allocObject(&unk_3846C0, 88);
    *(_QWORD *)(v25 + 16) = v91;
    *(_QWORD *)(v25 + 24) = v93;
    *(_QWORD *)(v25 + 32) = v99;
    *(_QWORD *)(v25 + 40) = v101;
    *(_QWORD *)(v25 + 48) = v107;
    *(_QWORD *)(v25 + 56) = v109;
    *(_BYTE *)(v25 + 64) = v130 & 1;
    *(_QWORD *)(v25 + 72) = a5;
    *(_QWORD *)(v25 + 80) = a2;
    a6 = swift_allocObject(&unk_3846E8, 32);
    *(_QWORD *)(a6 + 16) = sub_15FD4C;
    *(_QWORD *)(a6 + 24) = v25;
    v135 = sub_618F8;
    v136 = a6;
    aBlock = _NSConcreteStackBlock;
    v132 = 1107296256;
    v133 = sub_15D99C;
    v134 = &unk_384700;
    v112 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v113 = swift_allocObject(&unk_384738, 32);
    a3 = (unint64_t)v126;
    v29 = v123;
    *(_QWORD *)(v113 + 16) = v126;
    *(_QWORD *)(v113 + 24) = v29;
    v135 = sub_15FD94;
    v136 = v113;
    aBlock = _NSConcreteStackBlock;
    v132 = 1107296256;
    v133 = sub_15D9D0;
    v134 = &unk_384750;
    v114 = _Block_copy(&aBlock);
    a1 = v136;
    sub_899C8(a3, (uint64_t)v29);
    objc_msgSend(v24, "be_evaluateJavaScript:completion:", v112, v114, swift_release().n128_f64[0]);
    _Block_release(v114);
    _Block_release(v112);
    v115 = *(void (**)(char *, uint64_t))(v127 + 8);
    v116 = v129;
    v115(v120, v129);
    v115(v121, v116);
    LOBYTE(v115) = swift_isEscapingClosureAtFileLocation(a6, "", 105, 95, 44, 1);
    swift_release();
    swift_release();
    if ((v115 & 1) == 0)
      return;
    __break(1u);
LABEL_36:
    swift_once(&qword_3B57C0, sub_15DA24);
  }
  swift_bridgeObjectRelease_n(v84, 2);
LABEL_33:
  v89 = *(void (**)(char *, uint64_t))(v127 + 8);
  v47 = v129;
  v89(v120, v129);
  v89(v59, v47);
LABEL_17:
  v64 = v52;
  v65 = Logger.logObject.getter(v64);
  v66 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v65, v66))
  {

    v72 = v126;
    if (!v126)
      return;
    goto LABEL_27;
  }
  v67 = (uint8_t *)swift_slowAlloc(12, -1);
  v68 = (void **)swift_slowAlloc(32, -1);
  aBlock = v68;
  *(_DWORD *)v67 = 136315138;
  v69 = objc_msgSend(v64, "URL");
  if (v69)
  {
    v70 = v69;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v69);

    v71 = 0;
  }
  else
  {
    v71 = 1;
  }
  v73 = (uint64_t)v122;
  v57((char *)v63, v71, 1, v47);
  sub_8927C(v63, v73);
  v74 = v127;
  v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v73, 1, v47);
  if ((_DWORD)v75 == 1)
  {
    sub_52128(v73, (uint64_t *)&unk_3B8C50);
    v76 = 0xE300000000000000;
    v77 = 7104878;
  }
  else
  {
    v78 = URL.absoluteString.getter(v75);
    v79 = v47;
    v77 = v78;
    v76 = v80;
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v79);
  }
  v137 = sub_33524(v77, v76, (uint64_t *)&aBlock);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v67 + 4);

  swift_bridgeObjectRelease(v76);
  _os_log_impl(&dword_0, v65, v66, "Attempt to apply #fontReg configuration to webView with url (%s) -- skipping JS execution", v67, 0xCu);
  swift_arrayDestroy(v68, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v68, -1, -1);
  swift_slowDealloc(v67, -1, -1);

  v72 = v126;
  if (v126)
LABEL_27:
    v72();
}

void sub_15E72C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  NSString v10;
  NSString v11;
  NSString v12;
  NSString v13;
  NSString v14;
  NSString v15;
  NSString v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  NSString v20;
  id v21;

  v10 = String._bridgeToObjectiveC()();
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v10, v11, 0);

  v12 = String._bridgeToObjectiveC()();
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v12, v13, 0);

  v14 = String._bridgeToObjectiveC()();
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v14, v15, 0);

  if ((a8 & 1) != 0)
  {
    v16 = objc_msgSend((id)objc_opt_self(BEContentSupportJS), "performAfterLoad");
    if (!v16)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0);
      v18 = v17;
      v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
    }
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v16, v19, 0);

  }
  v20 = String._bridgeToObjectiveC()();
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "addScriptToEvaluate:key:transform:", v20, v21, 0);

}

uint64_t sub_15E96C(uint64_t result, char a2, void (*a3)(__int128 *))
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v4 = result;
  if ((a2 & 1) != 0)
  {
    if (a3)
    {
      v7 = (unint64_t)result;
      v8 = 0uLL;
      v9 = 1;
      swift_errorRetain(result);
      a3(&v7);
      return sub_D56A4(v4, 1);
    }
  }
  else if (a3)
  {
    if (*(_QWORD *)(result + 16))
    {
      v5 = *(_OWORD *)(result + 32);
      v6 = *(_OWORD *)(result + 48);
    }
    else
    {
      v5 = 0uLL;
      v6 = 0uLL;
    }
    v7 = v5;
    v8 = v6;
    v9 = 0;
    return ((uint64_t (*)(__int128 *))a3)(&v7);
  }
  return result;
}

void sub_15EA10(uint64_t a1, void (*a2)(id, uint64_t))
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  Class v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  uint64_t v31;
  unint64_t v32;
  id v33;
  NSString v34;
  Class isa;
  id v36;
  id v37;
  uint64_t v38;
  _BYTE v39[80];
  uint64_t v40;
  _BYTE v41[32];
  _OWORD v42[2];
  _OWORD v43[2];
  char v44;

  sub_3F238(a1, (uint64_t)v43, &qword_3BE338);
  if (v44 != 1)
  {
    sub_3F180(v43, v42);
    sub_344A8((uint64_t)v42, (uint64_t)v41);
    v4 = sub_319AC(&qword_3BE440);
    if ((swift_dynamicCast(&v40, v41, (char *)&type metadata for Any + 8, v4, 6) & 1) == 0)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(WKErrorDomain);
      v28 = v27;
      v29 = sub_319AC((uint64_t *)&unk_3B9360);
      inited = swift_initStackObject(v29, v39);
      *(_OWORD *)(inited + 16) = xmmword_2E5F80;
      *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(NSLocalizedDescriptionKey);
      *(_QWORD *)(inited + 40) = v31;
      *(_QWORD *)(inited + 72) = &type metadata for String;
      *(_QWORD *)(inited + 48) = 0xD000000000000029;
      *(_QWORD *)(inited + 56) = 0x80000000002CDB90;
      v32 = sub_37F24(inited);
      v33 = objc_allocWithZone((Class)NSError);
      v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v28);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v36 = objc_msgSend(v33, "initWithDomain:code:userInfo:", v34, 5, isa, swift_bridgeObjectRelease(v32).n128_f64[0]);

      if (!a2)
      {
        sub_34488(v42);

        return;
      }
      v37 = v36;
      a2(v36, 1);

      goto LABEL_30;
    }
    v5 = v40;
    v6 = (void *)objc_opt_self(BEJavascriptUtilities);
    sub_319AC(&qword_3BBEE0);
    v7 = Array._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v6, "collapsedLineRectsFromArrayOfRectDictionaries:isVerticalDocument:", v7, 0, swift_bridgeObjectRelease(v5).n128_f64[0]);

    v9 = sub_34450(0, (unint64_t *)&unk_3B8468, NSValue_ptr);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    if (!a2)
    {
      sub_34488(v42);
      swift_bridgeObjectRelease(v10);
      return;
    }
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v38 = v10;
      else
        v38 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(v38);
      if (v11)
        goto LABEL_9;
    }
    else
    {
      v11 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v10);
      if (v11)
      {
LABEL_9:
        if (v11 < 1)
        {
          __break(1u);
          return;
        }
        v12 = 0;
        v13 = _swiftEmptyArrayStorage;
        do
        {
          if ((v10 & 0xC000000000000001) != 0)
            v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
          else
            v14 = *(id *)(v10 + 8 * v12 + 32);
          v15 = v14;
          objc_msgSend(v14, "CGRectValue");
          v17 = v16;
          v19 = v18;
          v21 = v20;
          v23 = v22;

          if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
            v13 = sub_432C0(0, v13[2] + 1, 1, v13);
          v25 = v13[2];
          v24 = v13[3];
          if (v25 >= v24 >> 1)
            v13 = sub_432C0((_QWORD *)(v24 > 1), v25 + 1, 1, v13);
          ++v12;
          v13[2] = v25 + 1;
          v26 = &v13[4 * v25];
          v26[4] = v17;
          v26[5] = v19;
          v26[6] = v21;
          v26[7] = v23;
        }
        while (v11 != v12);
        goto LABEL_29;
      }
    }
    v13 = _swiftEmptyArrayStorage;
LABEL_29:
    swift_bridgeObjectRelease_n(v10, 2);
    a2(v13, 0);
    swift_bridgeObjectRelease(v13);
LABEL_30:
    sub_34488(v42);
    return;
  }
  v3 = *(void **)&v43[0];
  if (a2)
  {
    swift_errorRetain(*(_QWORD *)&v43[0]);
    a2(v3, 1);
    swift_errorRelease(v3);
  }
  swift_errorRelease(v3);
}

uint64_t sub_15EE1C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];
  _OWORD v14[2];
  _BYTE v15[24];
  _OWORD v16[2];
  _OWORD v17[2];
  char v18;

  sub_3F238(a1, (uint64_t)v17, &qword_3BE338);
  if (v18 == 1)
  {
    result = sub_52128((uint64_t)v17, &qword_3BE338);
    if (a2)
      return a2(0);
  }
  else
  {
    v8 = a4 + 16;
    sub_3F180(v17, v16);
    swift_beginAccess(v8, v15, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v8);
    if (Strong)
    {
      v10 = (void *)Strong;
      sub_344A8((uint64_t)v16, (uint64_t)v14);
      v11 = swift_allocObject(&unk_3848A0, 64);
      *(_QWORD *)(v11 + 16) = a2;
      *(_QWORD *)(v11 + 24) = a3;
      sub_3F180(v14, (_OWORD *)(v11 + 32));
      v13[4] = sub_15FEB0;
      v13[5] = v11;
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 1107296256;
      v13[2] = sub_525B8;
      v13[3] = &unk_3848B8;
      v12 = _Block_copy(v13);
      sub_899C8((uint64_t)a2, a3);
      objc_msgSend(v10, "be_selectForWebView:", v12, swift_release().n128_f64[0]);
      _Block_release(v12);

    }
    return sub_34488(v16);
  }
  return result;
}

uint64_t sub_15EF80(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(_QWORD);
  char v4;
  char v5;
  _BYTE v6[32];

  if (result)
  {
    v3 = (uint64_t (*)(_QWORD))result;
    sub_344A8(a3, (uint64_t)v6);
    v4 = swift_dynamicCast(&v5, v6, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    return v3((v4 & v5));
  }
  return result;
}

void sub_15EFE8(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, "be_requestedContentOffset");
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "CGPointValue");
    v6 = v5;
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v4 == 0;
}

void sub_15F064(uint64_t a1, id *a2)
{
  id v2;
  id v3;

  v2 = *a2;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    objc_msgSend(*a2, "setBe_requestedContentOffset:", 0);
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGPoint:", *(double *)a1, *(double *)(a1 + 8));
    objc_msgSend(v2, "setBe_requestedContentOffset:", v3);

  }
}

uint64_t sub_15F104(uint64_t a1, void *a2, void (*a3)(uint64_t *))
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22[3];
  uint64_t v23;
  char v24;
  _OWORD v25[2];

  sub_3F238(a1, (uint64_t)v22, (uint64_t *)&unk_3B96D0);
  if (v23)
  {
    sub_3F180(v22, v25);
    sub_344A8((uint64_t)v25, (uint64_t)v22);
    v24 = 0;
    a3(v22);
    sub_52128((uint64_t)v22, &qword_3BE338);
    return sub_34488(v25);
  }
  else
  {
    sub_52128((uint64_t)v22, (uint64_t *)&unk_3B96D0);
    if (a2)
    {
      v6 = a2;
    }
    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(WKErrorDomain);
      v8 = v7;
      v9 = objc_allocWithZone((Class)NSError);
      v10 = String._bridgeToObjectiveC()();
      v6 = objc_msgSend(v9, "initWithDomain:code:userInfo:", v10, 4, 0, swift_bridgeObjectRelease(v8).n128_f64[0]);

    }
    swift_errorRetain(a2);
    if (qword_3B57C0 != -1)
      swift_once(&qword_3B57C0, sub_15DA24);
    v11 = type metadata accessor for Logger(0);
    sub_555F0(v11, (uint64_t)qword_3CF1E8);
    swift_errorRetain(v6);
    v12 = swift_errorRetain(v6);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v22[0] = v16;
      *(_DWORD *)v15 = 136315138;
      swift_getErrorValue(v6, v21, v20);
      v17 = Error.localizedDescription.getter(v20[1], v20[2]);
      v19 = v18;
      *(_QWORD *)&v25[0] = sub_33524(v17, v18, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v25, (char *)v25 + 8, v15 + 4);
      swift_bridgeObjectRelease(v19);
      swift_errorRelease(v6);
      swift_errorRelease(v6);
      _os_log_impl(&dword_0, v13, v14, "JS Execution failed - %s", v15, 0xCu);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);
    }
    else
    {
      swift_errorRelease(v6);
      swift_errorRelease(v6);
    }

    v22[0] = (uint64_t)v6;
    v24 = 1;
    swift_errorRetain(v6);
    a3(v22);
    swift_errorRelease(v6);
    return sub_52128((uint64_t)v22, &qword_3BE338);
  }
}

uint64_t sub_15F3E8(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _OWORD v17[2];
  __int128 v18;
  _QWORD *v19;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginIdentifierParameterKey"));
  v5 = v4;
  v6 = objc_msgSend(v1, "be_identifier");
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  v19 = &type metadata for String;
  *(_QWORD *)&v18 = v7;
  *((_QWORD *)&v18 + 1) = v9;
  sub_3F180(&v18, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  sub_17D92C(v17, v3, v5, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(0x8000000000000000);
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginMessageParameterKey"));
  v13 = v12;
  sub_344A8(a1, (uint64_t)&v18);
  v14 = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyDictionarySingleton);
  *(_QWORD *)&v17[0] = &_swiftEmptyDictionarySingleton;
  sub_17D92C(&v18, v11, v13, v14);
  v15 = *(_QWORD *)&v17[0];
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(0x8000000000000000);
  return v15;
}

id WKWebView.convertFromContent(_:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  void *v3;
  id v7;
  id result;
  uint64_t v9;
  uint64_t v10;

  v7 = v3;
  result = objc_msgSend(v7, "be_convertPointFromContentsToView:", a2, a3);
  *a1 = v7;
  a1[1] = v9;
  a1[2] = v10;
  return result;
}

id WKWebView.convertToContent(_:)(uint64_t a1)
{
  void *v1;

  objc_msgSend(*(id *)a1, "convertPoint:toCoordinateSpace:", v1, *(double *)(a1 + 8), *(double *)(a1 + 16));
  return objc_msgSend(v1, "be_convertPointFromViewToContents:");
}

double WKWebView.convertToContent(_:)(double *a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double result;
  CGRect v18;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  swift_unknownObjectRetain(*(_QWORD *)a1);
  objc_msgSend(v7, "convertPoint:toCoordinateSpace:", v1, v3, v4);
  objc_msgSend(v1, "be_convertPointFromViewToContents:");
  v9 = v8;
  v11 = v10;
  swift_unknownObjectRelease(*(_QWORD *)&v2);
  swift_unknownObjectRetain(*(_QWORD *)&v2);
  objc_msgSend(v12, "convertPoint:toCoordinateSpace:", v1, v3 + v5, v4 + v6);
  objc_msgSend(v1, "be_convertPointFromViewToContents:");
  v14 = v13;
  v16 = v15;
  swift_unknownObjectRelease(*(_QWORD *)&v2);
  v18.size.width = v14 - v9;
  v18.size.height = v16 - v11;
  v18.origin.x = v9;
  v18.origin.y = v11;
  *(_QWORD *)&result = (unint64_t)CGRectStandardize(v18);
  return result;
}

uint64_t _sSo9WKWebViewC8BookEPUBE18calcFinalPageCount19layoutConfiguration11contentSize04pageH0SiAC016PaginationLayoutJ0V_So6CGSizeVSitF_0(uint64_t a1, unint64_t a2, double a3, double a4)
{
  uint64_t v4;
  unint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(double *)(a1 + 40);
  if (v6 < 2)
  {
    v8 = CGFloat.ceiling.getter(a1, (*(double *)(a1 + 8) + a3) / (v7 + *(double *)(a1 + 8)));
    if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) != 0)
    {
      if (v8 > -9.22337204e18)
      {
        if (v8 < 9.22337204e18)
        {
          v4 = (uint64_t)v8;
          if ((uint64_t)v8 != a2)
          {
            if (qword_3B57C0 == -1)
            {
LABEL_7:
              v9 = type metadata accessor for Logger(0);
              v10 = sub_555F0(v9, (uint64_t)qword_3CF1E8);
              v11 = Logger.logObject.getter(v10);
              v12 = static os_log_type_t.error.getter(v11);
              if (os_log_type_enabled(v11, v12))
              {
                v13 = swift_slowAlloc(22, -1);
                *(_DWORD *)v13 = 134218240;
                v25 = v4;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v13 + 4);
                *(_WORD *)(v13 + 12) = 2048;
                v25 = a2;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v13 + 14);
                _os_log_impl(&dword_0, v11, v12, "Paginated #pageCount vs. size mismatch sizePageCount: %ld result.pageCount: %ld", (uint8_t *)v13, 0x16u);
                swift_slowDealloc(v13, -1, -1);
              }

              return a2;
            }
LABEL_30:
            swift_once(&qword_3B57C0, sub_15DA24);
            goto LABEL_7;
          }
          return a2;
        }
        goto LABEL_28;
      }
      goto LABEL_26;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v6 - 2 < 2)
  {
    if (!*(_BYTE *)(a1 + 25))
      a3 = a4;
    v14 = CGFloat.ceiling.getter(a1, a3 / v7);
    if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) != 0)
    {
      if (v14 > -9.22337204e18)
      {
        if (v14 < 9.22337204e18)
        {
          v15 = (uint64_t)v14;
          if ((uint64_t)v14 != a2)
          {
            if (qword_3B57C0 != -1)
              swift_once(&qword_3B57C0, sub_15DA24);
            v16 = type metadata accessor for Logger(0);
            v17 = sub_555F0(v16, (uint64_t)qword_3CF1E8);
            v18 = Logger.logObject.getter(v17);
            v19 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v18, v19))
            {
              v20 = swift_slowAlloc(22, -1);
              *(_DWORD *)v20 = 134218240;
              v25 = v15;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v20 + 4);
              *(_WORD *)(v20 + 12) = 2048;
              v25 = a2;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v20 + 14);
              _os_log_impl(&dword_0, v18, v19, "Adopting #pageCount: %ld result.pageCount: %ld", (uint8_t *)v20, 0x16u);
              swift_slowDealloc(v20, -1, -1);
            }

            return v15;
          }
          return a2;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(a1 + 80);
  type metadata accessor for BookLayoutMode(0);
  v24 = v23;
  v25 = v6;
  swift_bridgeObjectRetain(v22);
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v24, &v25, v24, &type metadata for UInt);
  __break(1u);
  return result;
}

double destroy for WebViewConfiguration(uint64_t a1)
{
  double result;

  *(_QWORD *)&result = swift_unknownObjectRelease(*(_QWORD *)(a1 + 48)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for WebViewConfiguration(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(void **)(a2 + 32);
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  swift_unknownObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for WebViewConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 32);
  v11 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 40);
  v14 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v13;
  v15 = v13;

  v16 = *(_QWORD *)(a2 + 48);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v16;
  swift_unknownObjectRetain(v16);
  swift_unknownObjectRelease(v17);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for WebViewConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WebViewConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;

  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v6 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease(v6);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for WebViewConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WebViewConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WebViewConfiguration()
{
  return &type metadata for WebViewConfiguration;
}

uint64_t sub_15FC64()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 82, 7);
}

void sub_15FCB8(int a1)
{
  uint64_t v1;

  sub_15DC74(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(char **)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(char **)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80), *(_BYTE *)(v1 + 81));
}

uint64_t sub_15FCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_15FD08(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_15FD10()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_bridgeObjectRelease(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

void sub_15FD4C(void *a1)
{
  uint64_t v1;

  sub_15E72C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_BYTE *)(v1 + 64));
}

uint64_t sub_15FD80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_15FD94()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_15FDC0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_15FDEC(uint64_t a1)
{
  uint64_t v1;

  sub_15EA10(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

uint64_t sub_15FDF4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_15FE18()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_15FE3C()
{
  _QWORD *v0;

  if (v0[2])
    swift_release(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_15FE70(uint64_t a1)
{
  uint64_t v1;

  return sub_15EE1C(a1, *(uint64_t (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_15FE7C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  sub_34488((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_15FEB0()
{
  uint64_t v0;

  return sub_15EF80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32);
}

Swift::Void __swiftcall UIView.deactivateAndRemoveConstraints(containing:)(Swift::String containing)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  Class isa;
  Class v10;

  object = containing._object;
  countAndFlagsBits = containing._countAndFlagsBits;
  v4 = objc_msgSend(v1, "constraints");
  v5 = sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  swift_bridgeObjectRetain(object);
  v7 = sub_1604D4(v6, countAndFlagsBits, (uint64_t)object);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(object);
  v8 = (void *)objc_opt_self(NSLayoutConstraint);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v8, "deactivateConstraints:", isa);

  v10 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "removeConstraints:", v10, swift_bridgeObjectRelease(v7).n128_f64[0]);

}

UIImage_optional __swiftcall UIView.drawOffscreenImage(backgroundColor:)(UIColor_optional backgroundColor)
{
  void *v1;
  Class isa;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  double *v12;
  uint64_t v13;
  void *v14;
  objc_class *v15;
  id v16;
  objc_class *v17;
  objc_class *v18;
  Swift::Bool v19;
  _QWORD v20[6];
  UIImage_optional result;

  isa = backgroundColor.value.super.isa;
  objc_msgSend(v1, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", v7, v9);
  v12 = (double *)swift_allocObject(&unk_384900, 64);
  *((_QWORD *)v12 + 2) = isa;
  *((_QWORD *)v12 + 3) = v4;
  *((_QWORD *)v12 + 4) = v6;
  v12[5] = v8;
  v12[6] = v10;
  *((_QWORD *)v12 + 7) = v1;
  v13 = swift_allocObject(&unk_384928, 32);
  *(_QWORD *)(v13 + 16) = sub_1606B4;
  *(_QWORD *)(v13 + 24) = v12;
  v20[4] = sub_618F8;
  v20[5] = v13;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_15D99C;
  v20[3] = &unk_384940;
  v14 = _Block_copy(v20);
  v15 = isa;
  v16 = v1;
  swift_retain();
  v17 = (objc_class *)objc_msgSend(v11, "imageWithActions:", v14, swift_release().n128_f64[0]);

  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation(v13, "", 102, 15, 36, 1);
  swift_release();
  swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
  else
    v18 = v17;
  result.value.super.isa = v18;
  result.is_nil = v19;
  return result;
}

id sub_1601B8(int a1, void *a2, id a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  id v12;
  CGRect v14;

  if (a2)
  {
    v12 = a2;
    objc_msgSend(v12, "setFill");
    v14.origin.x = a4;
    v14.origin.y = a5;
    v14.size.width = a6;
    v14.size.height = a7;
    UIRectFill(v14);

  }
  return objc_msgSend(a3, "drawViewHierarchyInRect:afterScreenUpdates:", 1, a4, a5, a6, a7);
}

unint64_t View.takeSnapshot(origin:size:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  UIColor_optional v40;

  v13 = *(_QWORD *)(a4 - 8);
  v14 = __chkstk_darwin(a1);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIHostingController(0, v17, v18, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v6, a4);
  v19 = (void *)UIHostingController.__allocating_init(rootView:)(v16);
  v20 = objc_msgSend(v19, "view");
  if (!v20)
  {
    v33 = 0;
    goto LABEL_17;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "window");
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, "windowScene");

    if (v24)
    {
      v25 = objc_msgSend(v24, "windows");

      v26 = sub_34450(0, &qword_3BE448, UIWindow_ptr);
      v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v26);

      v38 = *(double *)&a1;
      v39 = *(double *)&a2;
      if ((unint64_t)v27 >> 62)
      {
LABEL_23:
        if (v27 < 0)
          v37 = v27;
        else
          v37 = v27 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v27);
        v28 = _CocoaArrayWrapper.endIndex.getter(v37);
        if (v28)
        {
LABEL_6:
          v29 = 4;
          while (1)
          {
            if ((v27 & 0xC000000000000001) != 0)
              v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29 - 4, v27);
            else
              v30 = *(id *)(v27 + 8 * v29);
            v31 = v30;
            v32 = v29 - 3;
            if (__OFADD__(v29 - 4, 1))
            {
              __break(1u);
              goto LABEL_23;
            }
            if (objc_msgSend(v30, "isKeyWindow"))
              break;

            ++v29;
            if (v32 == v28)
              goto LABEL_13;
          }
          swift_bridgeObjectRelease_n(v27, 2);
          if ((a3 & 1) != 0)
          {
            objc_msgSend(v31, "frame");
          }
          else
          {
            v35 = v38;
            v36 = v39;
          }
          objc_msgSend(v21, "setFrame:", a5, a6, v35, v36, *(_QWORD *)&v38, *(_QWORD *)&v39);
          v40.value.super.isa = 0;
          v33 = (unint64_t)UIView.drawOffscreenImage(backgroundColor:)(v40);

          v21 = v19;
          goto LABEL_15;
        }
      }
      else
      {
        v28 = *(_QWORD *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(v27);
        if (v28)
          goto LABEL_6;
      }
LABEL_13:
      swift_bridgeObjectRelease_n(v27, 2);
    }
  }
  v33 = 0;
  v31 = v19;
LABEL_15:

  v19 = v21;
LABEL_17:

  return v33;
}

_QWORD *sub_1604D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD v22[4];
  _QWORD *v23;

  v23 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
LABEL_9:
        v7 = v6;
        v8 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_16;
        v9 = objc_msgSend(v6, "identifier");
        if (!v9)
          goto LABEL_4;
        v10 = v9;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v13 = v12;

        v22[2] = v11;
        v22[3] = v13;
        v22[0] = a2;
        v22[1] = a3;
        v14 = sub_5C170();
        LOBYTE(v11) = StringProtocol.contains<A>(_:)(v22, &type metadata for String, &type metadata for String, v14, v14);
        swift_bridgeObjectRelease(v13);
        if ((v11 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
          v16 = v23[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
          v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v7);
          specialized ContiguousArray._endMutation()(v17);
        }
        else
        {
LABEL_4:

        }
        ++v5;
        if (v8 == v4)
          return v23;
      }
      if (v5 < *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      if (a1 < 0)
        v19 = a1;
      else
        v19 = a1 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v6 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_160688()
{
  uint64_t v0;

  return swift_deallocObject(v0, 64, 7);
}

id sub_1606B4(int a1)
{
  uint64_t v1;

  return sub_1601B8(a1, *(void **)(v1 + 16), *(id *)(v1 + 56), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48));
}

uint64_t sub_1606C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1606D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1606E8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

char *BookContentViewController.__allocating_init(bookEntity:headerText:contentLayoutController:contentLayoutProviderProviding:contentEventHandler:contentNavigationEventHandler:contentHostEnvironmentProvider:readingSettingsProvider:layoutModeProvider:paginatingService:pageNumberProvider:contentUpdateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v28;
  char *v35;

  ObjectType = swift_getObjectType(a7);
  v23 = swift_getObjectType(a9);
  v24 = swift_getObjectType(a21);
  v35 = sub_1752F0(a1, a2, a3, a4, a5, a6, a7, a9, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
          v28,
          ObjectType,
          v24,
          v23,
          a8,
          a22,
          a10);
  swift_unknownObjectRelease(a21);
  swift_unknownObjectRelease(a19);
  swift_unknownObjectRelease(a17);
  swift_unknownObjectRelease(a15);
  swift_unknownObjectRelease(a13);
  swift_unknownObjectRelease(a11);
  swift_unknownObjectRelease(a9);
  swift_unknownObjectRelease(a7);
  swift_release();
  swift_unknownObjectRelease(a5);
  return v35;
}

_QWORD *sub_160868(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = (uint64_t *)(swift_bridgeObjectRetain(a1) + 40);
  v4 = _swiftEmptyArrayStorage;
  do
  {
    v7 = *(v3 - 1);
    v6 = *v3;
    ObjectType = swift_getObjectType(v7);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 48);
    v10 = swift_unknownObjectRetain(v7);
    v11 = v9(ObjectType, v6, v10);
    v13 = v12;
    swift_unknownObjectRelease(v7);
    if (v11)
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_42CE0(0, v4[2] + 1, 1, v4);
      v15 = v4[2];
      v14 = v4[3];
      if (v15 >= v14 >> 1)
        v4 = sub_42CE0((_QWORD *)(v14 > 1), v15 + 1, 1, v4);
      v4[2] = v15 + 1;
      v5 = &v4[2 * v15];
      v5[4] = v11;
      v5[5] = v13;
    }
    v3 += 2;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(a1);
  return v4;
}

Swift::Void __swiftcall BookContentViewController.turnOffPageTurning()()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer);
  if (v1)
    objc_msgSend(v1, "setEnabled:", 0);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isCurlPanRecognizerEnabled) = 0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer);
  if (v2)
    objc_msgSend(v2, "setEnabled:", 0);
}

Swift::Void __swiftcall BookContentViewController.reestablishPageTurnSettings()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;
  _BYTE v7[24];

  v1 = v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider;
  swift_beginAccess(v1, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(Strong);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(ObjectType, v4);
    sub_16CED8(v6);
    swift_unknownObjectRelease(v3);
  }
}

_QWORD *sub_160A80(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 v7;
  unint64_t v8;
  unint64_t v9;
  _OWORD v11[2];
  _OWORD v12[2];
  _QWORD *v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v13 = _swiftEmptyArrayStorage;
    sub_F5300(0, v1, 0);
    type metadata accessor for CGRect(0);
    v5 = v4;
    v6 = (__int128 *)(a1 + 48);
    do
    {
      v7 = *v6;
      v11[0] = *(v6 - 1);
      v11[1] = v7;
      swift_dynamicCast(v12, v11, v5, (char *)&type metadata for Any + 8, 7);
      v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native(v13) & 1) == 0)
      {
        sub_F5300(0, v2[2] + 1, 1);
        v2 = v13;
      }
      v9 = v2[2];
      v8 = v2[3];
      if (v9 >= v8 >> 1)
      {
        sub_F5300(v8 > 1, v9 + 1, 1);
        v2 = v13;
      }
      v2[2] = v9 + 1;
      sub_3F180(v12, &v2[4 * v9 + 4]);
      v6 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_160BA4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  __int128 *v4;
  __int128 v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v15 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      v13 = v5;
      v6 = (id)v5;
      v7 = sub_319AC(&qword_3B6828);
      v8 = sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
      swift_dynamicCast(&v14, &v13, v7, v8, 7);
      v9 = v14;

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
      v11 = v15[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
      v12 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
      specialized ContiguousArray._endMutation()(v12);
      --v2;
    }
    while (v2);
    return v15;
  }
  return result;
}

Swift::Void __swiftcall BookContentViewController.readingLoupeSelectLine(with:)(UIGestureRecognizer with)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double MaxY;
  id v29;
  void *v30;
  double v31;
  double v32;
  id v33;
  id v34;
  void *v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  id v45;
  void *v46;
  double v47;
  double v48;
  uint64_t v49;
  double v50[3];
  CGRect v51;
  CGRect v52;

  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_18;
  }
  v4 = v3;
  v5 = objc_msgSend(v1, "view");
  -[objc_class locationInView:](with.super.isa, "locationInView:", v5);
  v7 = v6;
  v9 = v8;

  if ((*(_QWORD *)((_BYTE *)v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) & 0xFFFFFFFFFFFFFFFELL) != 2)
    goto LABEL_15;
  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v11 = v10;
  objc_msgSend(v10, "safeAreaInsets");
  v13 = v12;

  v14 = objc_msgSend(v1, "view");
  v15 = v14;
  if (v9 < v13 + 110.0)
  {
    if (v14)
    {
      v16 = objc_msgSend(v1, "view");
      if (v16)
      {
        v17 = v16;
        objc_msgSend(v16, "safeAreaInsets");
        v19 = v18;

        v9 = v19 + 110.0;
LABEL_16:
        *(_QWORD *)&v50[0] = v15;
        v50[1] = v7;
        v50[2] = v9;
        swift_unknownObjectRetain(v15);
        sub_167748(v50);
        swift_unknownObjectRelease(v15);
        v49 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController)
            + 184;
        swift_beginAccess(v49, v50, 1, 0);
        swift_unknownObjectWeakAssign(v49, 0);
        sub_10A54C();
        swift_unknownObjectRelease(v15);
        return;
      }
      goto LABEL_20;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!v14)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v14, "frame");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v51.origin.x = v21;
  v51.origin.y = v23;
  v51.size.width = v25;
  v51.size.height = v27;
  MaxY = CGRectGetMaxY(v51);
  v29 = objc_msgSend(v1, "view");
  if (!v29)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v30 = v29;
  objc_msgSend(v29, "safeAreaInsets");
  v32 = v31;

  if (MaxY - v32 + -110.0 >= v9)
  {
LABEL_15:
    v15 = v4;
    goto LABEL_16;
  }
  v33 = objc_msgSend(v1, "view");
  if (!v33)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v15 = v33;
  v34 = objc_msgSend(v1, "view");
  if (!v34)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v35 = v34;
  objc_msgSend(v34, "frame");
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;

  v52.origin.x = v37;
  v52.origin.y = v39;
  v52.size.width = v41;
  v52.size.height = v43;
  v44 = CGRectGetMaxY(v52);
  v45 = objc_msgSend(v1, "view");
  if (v45)
  {
    v46 = v45;
    objc_msgSend(v45, "safeAreaInsets");
    v48 = v47;

    v9 = v44 - v48 + -110.0;
    goto LABEL_16;
  }
LABEL_25:
  __break(1u);
}

void sub_160FDC(void *a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  char *v6;
  void *v7;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  double (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double (*v36)(uint64_t, uint64_t, __n128);
  __n128 v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  char v48;
  double v49;
  double v50;
  id v51;
  void *v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double MidX;
  double v62;
  double v63;
  char v64[24];
  char v65[24];
  char v66[24];
  char v67[24];
  char v68[24];
  CGRect v69;
  CGRect v70;

  v7 = v6;
  v14 = &v6[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
  swift_beginAccess(&v6[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v68, 0, 0);
  v15 = *(_QWORD *)v14;
  swift_beginAccess(*(_QWORD *)v14 + 112, v67, 0, 0);
  v16 = *(_QWORD *)(v15 + 112);
  v17 = *(_QWORD *)(v15 + 120);
  ObjectType = swift_getObjectType(v16);
  v19 = *(double (**)(uint64_t, uint64_t, __n128))(v17 + 80);
  v20 = swift_unknownObjectRetain(v16);
  v21 = v19(ObjectType, v17, v20);
  v23 = v22;
  swift_unknownObjectRelease(v16);
  if (v21 >= v23)
    goto LABEL_5;
  v24 = *(_QWORD *)v14;
  swift_beginAccess(*(_QWORD *)v14 + 112, v64, 0, 0);
  v25 = *(_QWORD *)(v24 + 112);
  v26 = *(_QWORD *)(v24 + 120);
  v27 = swift_getObjectType(v25);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 120);
  v29 = swift_unknownObjectRetain(v25);
  v30 = v28(v27, v26, v29);
  v31 = swift_unknownObjectRelease(v25).n128_u64[0];
  if (v30 <= 1)
  {
LABEL_5:
    v32 = *(_QWORD *)v14;
    swift_beginAccess(*(_QWORD *)v14 + 112, v66, 0, 0);
    v33 = *(_QWORD *)(v32 + 112);
    v34 = *(_QWORD *)(v32 + 120);
    v35 = swift_getObjectType(v33);
    v36 = *(double (**)(uint64_t, uint64_t, __n128))(v34 + 80);
    v37 = swift_unknownObjectRetain(v33);
    v38 = v36(v35, v34, v37);
    v40 = v39;
    swift_unknownObjectRelease(v33);
    if (v38 < v40)
      goto LABEL_6;
    v41 = *(_QWORD *)v14;
    swift_beginAccess(v41 + 112, v65, 0, 0);
    v42 = *(_QWORD *)(v41 + 112);
    v43 = *(_QWORD *)(v41 + 120);
    v44 = swift_getObjectType(v42);
    v45 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v43 + 120);
    v46 = swift_unknownObjectRetain(v42);
    v47 = v45(v44, v43, v46);
    v31 = swift_unknownObjectRelease(v42).n128_u64[0];
    if (v47 < 2
      || (*(_QWORD *)((_BYTE *)v7 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) & 0xFFFFFFFFFFFFFFFELL) == 2)
    {
LABEL_6:
      v48 = 0;
LABEL_12:
      sub_1679A0(a1, a3, a4, a5, a6, a2, v48);
      return;
    }
  }
  objc_msgSend(a1, "frame", *(double *)&v31, *(_QWORD *)&a6);
  v50 = v49;
  v51 = objc_msgSend(v7, "view");
  if (v51)
  {
    v52 = v51;
    objc_msgSend(v51, "frame");
    v54 = v53;
    v56 = v55;
    v58 = v57;
    v60 = v59;

    v69.origin.x = v54;
    v69.origin.y = v56;
    v69.size.width = v58;
    v69.size.height = v60;
    if (CGRectGetMidX(v69) >= v50)
    {
      objc_msgSend(a1, "frame");
      MidX = CGRectGetMidX(v70);
      objc_msgSend(a1, "frame");
      v48 = MidX - v62 < a3;
    }
    else
    {
      v48 = 1;
    }
    a6 = v63;
    goto LABEL_12;
  }
  __break(1u);
}

void sub_1612BC()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13[3];

  if ((*(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    v1 = objc_msgSend(v0, "view");
    if (v1)
    {
      v2 = v1;
      v3 = objc_msgSend(v0, "view");
      if (v3)
      {
        v4 = v3;
        objc_msgSend(v3, "safeAreaInsets");
        v6 = v5;

        v7 = v6 + 110.0;
        v8 = sub_1622D4();
        objc_msgSend(v8, "frame");
        objc_msgSend(v8, "setFrame:", 0.0, v7);

        v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController];
        v10 = sub_1622D4();
        swift_unknownObjectWeakAssign(v9 + 176, v10);

        v11 = *(_QWORD *)(v9 + 144);
        *(_QWORD *)(v9 + 144) = v2;
        *(_QWORD *)(v9 + 152) = 0;
        *(double *)(v9 + 160) = v7;
        v12 = v2;
        swift_unknownObjectRelease(v11);
        v13[0] = (uint64_t)v12;
        v13[1] = 0;
        *(double *)&v13[2] = v7;
        sub_10EC78(v13);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    sub_10D6B8();
  }
}

Swift::Void __swiftcall BookContentViewController.updateScrollingReadingLoupe()()
{
  char *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11[3];

  if ((*(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController];
    if (*(_BYTE *)(v1 + 192) == 1)
    {
      v2 = objc_msgSend(v0, "view");
      if (v2)
      {
        v3 = v2;
        v4 = sub_1622D4();
        objc_msgSend(v4, "frame");
        v6 = v5;
        v8 = v7;

        v9 = *(_QWORD *)(v1 + 144);
        *(_QWORD *)(v1 + 144) = v3;
        *(_QWORD *)(v1 + 152) = v6;
        *(_QWORD *)(v1 + 160) = v8;
        v10 = v3;
        swift_unknownObjectRelease(v9);
        v11[0] = (uint64_t)v10;
        v11[1] = v6;
        v11[2] = v8;
        sub_10EC78(v11);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1614F8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3BE450);
  sub_555F0(v0, (uint64_t)qword_3BE450);
  sub_34450(0, (unint64_t *)&qword_3B80A0, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000002C6E50, 0xD000000000000019, 0x80000000002EED50);
  return Logger.init(_:)(v1);
}

uint64_t sub_16159C()
{
  return sub_1769B0();
}

uint64_t sub_1615CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t OpaqueTypeConformance2;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  void *v18;

  v0 = sub_319AC(&qword_3BE668);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_319AC(&qword_3BE670);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_319AC((uint64_t *)&unk_3BE678);
  v9 = type metadata accessor for Tips.MaxDisplayCount(0);
  v10 = swift_allocObject(v8, ((*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72));
  *(_OWORD *)(v10 + 16) = xmmword_2E5F80;
  Tips.MaxDisplayCount.init(_:)(1);
  static Tips.OptionsBuilder.buildExpression<A>(_:)(v10, v9, &protocol witness table for Tips.MaxDisplayCount);
  v11 = swift_bridgeObjectRelease(v10);
  v17 = v9;
  v18 = &protocol witness table for Tips.MaxDisplayCount;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>, 1, v11);
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)(v7, v4, OpaqueTypeConformance2);
  v17 = v4;
  v18 = (void *)OpaqueTypeConformance2;
  v14 = swift_getOpaqueTypeConformance2(&v17, &opaque type descriptor for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>, 1, v13);
  v15 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)(v3, v0, v14);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_161784@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_176B50();
  result = Tip.id.getter(a1, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1617C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BYTE v5[24];
  _BYTE v6[40];

  sub_1127B0(a1, (uint64_t)v6);
  v3 = *a2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity;
  swift_beginAccess(v3, v5, 33, 0);
  sub_177104((uint64_t)v6, v3, &qword_3B7018);
  return swift_endAccess(v5);
}

uint64_t sub_16182C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1127B0(v3, a1);
}

uint64_t sub_16187C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_retain(v2);
  return swift_release(v4);
}

uint64_t sub_1618E4()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t sub_16192C()
{
  return sub_A35A0(&OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding);
}

double sub_161938()
{
  return sub_1619D0(&OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
}

double sub_161944()
{
  return sub_1619D0(&OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentNavigationEventHandler);
}

uint64_t sub_161950()
{
  return sub_A35A0(&OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider);
}

double sub_16195C(__int128 *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t *v6;
  uint64_t v7;
  __int128 v8;
  double result;
  _BYTE v10[24];

  v6 = (uint64_t *)(*a2 + *a5);
  swift_beginAccess(v6, v10, 1, 0);
  v7 = *v6;
  v8 = *a1;
  *(_OWORD *)v6 = *a1;
  swift_unknownObjectRetain(v8);
  *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  return result;
}

double sub_1619C4()
{
  return sub_1619D0(&OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService);
}

double sub_1619D0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  double result;
  _BYTE v4[24];

  v2 = (_QWORD *)(v1 + *a1);
  swift_beginAccess(v2, v4, 0, 0);
  *(_QWORD *)&result = swift_unknownObjectRetain(*v2).n128_u64[0];
  return result;
}

void sub_161A18(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _QWORD v4[2];
  char v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels);
  swift_beginAccess(v3, v6, 1, 0);
  *v3 = v2;
  v4[0] = 0;
  v4[1] = 0;
  v5 = 1;
  sub_161A90(0, (uint64_t)v4, 0, 1, 2);
}

void sub_161A90(char *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  void (*v19)(_OWORD *__return_ptr, uint64_t, uint64_t, __n128);
  char *v20;
  __n128 v21;
  char *v22;
  unsigned __int8 *v23;
  int v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, __n128);
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  NSString v67;
  double v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char v76[24];
  uint64_t v77[2];
  uint64_t v78;
  uint64_t v79;
  _OWORD v80[7];
  _OWORD v81[2];
  char v82[24];
  _OWORD v83[7];
  _OWORD v84[3];

  v6 = v5;
  v11 = *(_QWORD *)a2;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_BYTE *)(a2 + 16);
  if (a1)
  {
    v75 = a1;
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
LABEL_3:
      v14 = v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController;
      swift_beginAccess(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v82, 0, 0);
      v15 = *(_QWORD *)v14;
      v16 = *(_QWORD *)(*(_QWORD *)v14 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      ObjectType = swift_getObjectType(v16);
      v19 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, __n128))(v17 + 16);
      v20 = a1;
      v21 = swift_unknownObjectRetain(v16);
      v19(v80, ObjectType, v17, v21);
      swift_unknownObjectRelease(v16);
      v83[5] = v80[5];
      v83[6] = v80[6];
      v84[0] = v81[0];
      *(_OWORD *)((char *)v84 + 10) = *(_OWORD *)((char *)v81 + 10);
      v83[2] = v80[2];
      v83[3] = v80[3];
      v83[4] = v80[4];
      v83[0] = v80[0];
      v83[1] = v80[1];
      sub_49900((uint64_t)v83);
      v12 = *((_QWORD *)&v83[0] + 1);
      v11 = *(_QWORD *)&v83[0];
      goto LABEL_6;
    }
  }
  else
  {
    v75 = (char *)*(id *)(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
    if ((v13 & 1) != 0)
      goto LABEL_3;
  }
  v22 = a1;
LABEL_6:
  v23 = (unsigned __int8 *)(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels);
  swift_beginAccess(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels, v83, 0, 0);
  v24 = *v23;
  v74 = v12;
  if (v24 != 1)
  {
    v36 = 0;
    a3 = 1;
    goto LABEL_15;
  }
  if ((a4 & 1) == 0)
    goto LABEL_10;
  v25 = v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
  swift_beginAccess(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, v76, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v25);
  if (Strong)
  {
    v27 = Strong;
    v28 = *(_QWORD *)(v25 + 8);
    v29 = swift_getObjectType(Strong);
    v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v29, v28);
    v32 = v31;
    swift_unknownObjectRelease(v27);
    v33 = swift_getObjectType(v30);
    a3 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 120))(v33, v32);
    swift_unknownObjectRelease(v30);
LABEL_10:
    if (a5 == 2)
    {
LABEL_11:
      v34 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8);
      v35 = swift_getObjectType(*(_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider));
      v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 40))(v35, v34);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  a3 = 1;
  if (a5 == 2)
    goto LABEL_11;
LABEL_14:
  v36 = a5 & 1;
LABEL_15:
  v37 = (_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService);
  swift_beginAccess(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService, v80, 0, 0);
  v38 = *v37;
  v39 = v37[1];
  v40 = swift_getObjectType(*v37);
  v41 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v39 + 8);
  v42 = swift_unknownObjectRetain(v38);
  v43 = v41(v40, v39, v42);
  swift_unknownObjectRelease(v38);
  v44 = BookPaginationEntity.document(for:)(v11);
  v45 = swift_release(v43);
  if (v44)
  {
    v46 = v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
    swift_beginAccess(v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, &v78, 0, 0);
    v47 = swift_unknownObjectWeakLoadStrong(v46);
    v48 = v75;
    if (!v47)
    {
LABEL_26:
      v77[0] = v11;
      v77[1] = v74;
      if ((v24 & 1) != 0)
        sub_174280((uint64_t)v75, v77);
      else
        sub_173B10((uint64_t)v75, v44, v77);
      swift_release(v44);
      v69 = v36 & 1;
      v70 = v6;
      goto LABEL_50;
    }
    v49 = v47;
    v50 = *(_QWORD *)(v46 + 8);
    v51 = swift_getObjectType(v47);
    v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v51, v50);
    v54 = v53;
    swift_unknownObjectRelease(v49);
    v55 = swift_getObjectType(v52);
    v56 = (*(double (**)(uint64_t, uint64_t))(v54 + 64))(v55, v54);
    if (a3 >= 1)
      v57 = 1;
    else
      v57 = a3;
    if ((v36 & 1) == 0)
      a3 = v57;
    v58 = *(_QWORD *)&v75[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels];
    if ((unint64_t)v58 >> 62)
    {
      if (v58 < 0)
        v71 = *(_QWORD *)&v75[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels];
      else
        v71 = v58 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)&v75[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels]);
      v72 = _CocoaArrayWrapper.endIndex.getter(v71);
      swift_bridgeObjectRelease(v58);
      if (v72 == a3)
        goto LABEL_25;
    }
    else if (*(_QWORD *)((char *)&dword_10 + (v58 & 0xFFFFFFFFFFFFF8)) == a3)
    {
LABEL_25:
      swift_unknownObjectRelease(v52);
      goto LABEL_26;
    }
    sub_1A8CF8(a3, v56);
    sub_1A9950(a3);
    goto LABEL_25;
  }
  v59 = Logger.logObject.getter(v45);
  v60 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v61 = 134217984;
    v78 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v61 + 4);
    _os_log_impl(&dword_0, v59, v60, "Failed to get associated document for ordinal %ld", v61, 0xCu);
    swift_slowDealloc(v61, -1, -1);
  }

  v62 = *(_QWORD *)&v75[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels];
  if (!((unint64_t)v62 >> 62))
  {
    v63 = *(_QWORD *)((char *)&dword_10 + (v62 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n(*(_QWORD *)&v75[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels], 2);
    if (v63)
      goto LABEL_32;
LABEL_49:
    swift_bridgeObjectRelease_n(v62, 2);
    v69 = v36 & 1;
    v70 = v6;
    v48 = v75;
LABEL_50:
    sub_16F844(v69, v70, v48, v68);

    return;
  }
  if (v62 < 0)
    v73 = *(_QWORD *)&v75[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels];
  else
    v73 = v62 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)&v75[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels], 2);
  v63 = _CocoaArrayWrapper.endIndex.getter(v73);
  if (!v63)
    goto LABEL_49;
LABEL_32:
  if (v63 >= 1)
  {
    v64 = 0;
    do
    {
      if ((v62 & 0xC000000000000001) != 0)
        v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v64, v62);
      else
        v65 = *(id *)(v62 + 8 * v64 + 32);
      v66 = v65;
      ++v64;
      v67 = String._bridgeToObjectiveC()();
      objc_msgSend(v66, "setText:", v67);

    }
    while (v63 != v64);
    goto LABEL_49;
  }
  __break(1u);
}

uint64_t sub_162024()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels, v3, 0, 0);
  return *v1;
}

void sub_162068(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _QWORD v4[2];
  char v5;
  _BYTE v6[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels, v6, 1, 0);
  *v3 = a1;
  v4[0] = 0;
  v4[1] = 0;
  v5 = 1;
  sub_161A90(0, (uint64_t)v4, 0, 1, 2);
}

void (*sub_1620DC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels, a1, 33, 0);
  return sub_162124;
}

void sub_162124(uint64_t a1, char a2)
{
  _QWORD v3[2];
  char v4;

  swift_endAccess(a1);
  if ((a2 & 1) == 0)
  {
    v3[0] = 0;
    v3[1] = 0;
    v4 = 1;
    sub_161A90(0, (uint64_t)v3, 0, 1, 2);
  }
}

char *sub_16217C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  char *v4;
  char *result;
  char *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  char v24[24];

  v1 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeOverlayView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeOverlayView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeOverlayView];
LABEL_5:
    v23 = v2;
    return v3;
  }
  v4 = v0;
  result = (char *)objc_msgSend(v0, "view");
  if (result)
  {
    v6 = result;
    type metadata accessor for ReadingLoupeOverlayView();
    objc_msgSend(v6, "frame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;

    v15 = &v4[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
    swift_beginAccess(&v4[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider], v24, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v15);
    v17 = *((_QWORD *)v15 + 1);
    v18 = sub_1622D4();
    v19 = *(_QWORD *)&v4[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layoutModeProvider];
    v20 = *(_QWORD *)&v4[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layoutModeProvider + 8];
    swift_unknownObjectRetain(v19);
    v21 = ReadingLoupeOverlayView.__allocating_init(frame:readingSettingsProvider:readingLoupeView:bookLayoutModeProvider:)(Strong, v17, v18, v19, v20, v8, v10, v12, v14);
    v22 = *(void **)&v4[v1];
    *(_QWORD *)&v4[v1] = v21;
    v3 = v21;

    v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1622D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeView;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeView);
  }
  else
  {
    v4 = type metadata accessor for ReadingLoupeView();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
    v6 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t BookContentViewController.readingLoupeStateController.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController));
}

id sub_162358(id result)
{
  unsigned __int8 *v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _BOOL4 v9;
  uint64_t v10;

  v2 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isHandlingPageDrag;
  v3 = v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isHandlingPageDrag];
  if (v3 != (result & 1))
  {
    v4 = v1;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView], "setUserInteractionEnabled:", v3 ^ 1u);
    v5 = v1;
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v8 = 67109120;
      v9 = (v4[v2] & 1) == 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v8 + 4);

      _os_log_impl(&dword_0, v6, v7, "Allowing hostView interaction? %{BOOL}d", v8, 8u);
      swift_slowDealloc(v8, -1, -1);
    }
    else
    {

    }
    result = *(id *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer];
    if (result)
      return objc_msgSend(result, "setEnabled:", (v4[v2] & 1) == 0);
  }
  return result;
}

char *BookContentViewController.init(bookEntity:headerText:contentLayoutController:contentLayoutProviderProviding:contentEventHandler:contentNavigationEventHandler:contentHostEnvironmentProvider:readingSettingsProvider:layoutModeProvider:paginatingService:pageNumberProvider:contentUpdateProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _BYTE *v29;

  ObjectType = swift_getObjectType(a7);
  v24 = swift_getObjectType(a9);
  v25 = swift_getObjectType(a21);
  v26 = sub_1749E8(a1, a2, a3, a4, a5, a6, a7, a9, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
          v29,
          ObjectType,
          v25,
          v24,
          a8,
          a22,
          a10);
  swift_release();
  swift_unknownObjectRelease(a7);
  swift_unknownObjectRelease(a9);
  swift_unknownObjectRelease(a11);
  swift_unknownObjectRelease(a13);
  swift_unknownObjectRelease(a15);
  swift_unknownObjectRelease(a17);
  swift_unknownObjectRelease(a19);
  swift_unknownObjectRelease(a21);
  swift_unknownObjectRelease(a5);
  return v26;
}

void sub_16263C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  char **v11;
  id v12;
  void *v13;
  char **v14;
  id v15;
  char *v16;
  void *v17;
  id v18;
  char v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  void *v46;
  _BYTE *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  char v59;
  uint64_t Strong;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t ObjectType;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t *i;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[19];

  v2 = v1;
  if (a1 <= 1)
    v3 = 1;
  else
    v3 = a1;
  if (!a1)
  {
    v4 = Logger.logObject.getter(0);
    v5 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v74[0] = v7;
      *(_DWORD *)v6 = 136446210;
      switch(v3)
      {
        case 1:
          v8 = 0xE500000000000000;
          v9 = 0x6465676170;
          break;
        case 3:
          v8 = 0xEA00000000006C61;
          v9 = 0x746E6F7A69726F68;
          break;
        case 2:
          v8 = 0xE800000000000000;
          v9 = 0x6C61636974726576;
          break;
        default:
          goto LABEL_53;
      }
      v72 = sub_33524(v9, v8, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v6 + 4);
      swift_bridgeObjectRelease(v8);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);
    }

  }
  v10 = (void *)objc_opt_self(BETestDriver);
  v11 = &selRef_copy;
  v12 = objc_msgSend(v10, "shared");
  if (!v12)
  {
    __break(1u);
    goto LABEL_40;
  }
  v13 = v12;
  v14 = &selRef_characterIndexForPoint_inTextContainer_fractionOfDistanceBetweenInsertionPoints_;
  objc_msgSend(v12, "postEvent:sender:", CFSTR("kBETestDriverPagedToScrolledAnimationStart"), v2);

  if ((unint64_t)(v3 - 2) >= 2)
  {
    if (v3 != 1)
    {
LABEL_51:
      type metadata accessor for BookLayoutMode(0);
      v74[0] = v3;
      for (i = v74; ; i = &v72)
      {
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v69, i, v69, &type metadata for UInt);
        __break(1u);
LABEL_53:
        type metadata accessor for BookLayoutMode(0);
        v72 = v3;
      }
    }
    sub_555CC((uint64_t)&v72);
    v50 = v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation;
    sub_49AD8(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation, (uint64_t)v74);
    sub_49AD8((uint64_t)&v72, v50);
    sub_49B44(v74);
    v51 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer;
    v52 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
    if (v52)
    {
      objc_msgSend(v52, "removeFromSuperview");
      v53 = *(void **)(v2 + v51);
      if (!v53)
      {
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      v54 = v53;
      sub_919A8();

      v55 = *(void **)(v2 + v51);
      *(_QWORD *)(v2 + v51) = 0;
      sub_164E20(v55);

    }
    v56 = sub_164D9C();
    v57 = *(void **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                   + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView);
    sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
    v58 = v57;
    v59 = static NSObject.== infix(_:_:)(v56, v58);

    if ((v59 & 1) == 0)
      sub_1A7F64(v56);

  }
  else
  {
    sub_164F7C();
    v15 = sub_164DA8();
    v16 = *(char **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
    v17 = *(void **)&v16[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView];
    sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
    v18 = v17;
    v19 = static NSObject.== infix(_:_:)(v15, v18);

    if ((v19 & 1) == 0)
      sub_1A7F64(v15);

    v20 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer;
    v21 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
    if (!v21)
      goto LABEL_41;
    v22 = v21;
    sub_8B100();

    if (!*(_QWORD *)(v2 + v20))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    objc_msgSend(v16, "addSubview:");
    if (!*(_QWORD *)(v2 + v20))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    objc_msgSend(v16, "sendSubviewToBack:");
    v23 = *(void **)(v2 + v20);
    if (!v23)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v24 = sub_319AC((uint64_t *)&unk_3B8440);
    v25 = swift_allocObject(v24, 64, 7);
    *(_OWORD *)(v25 + 16) = xmmword_2E74C0;
    v26 = *(void **)(v2 + v20);
    if (!v26)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v27 = objc_msgSend(v26, "topAnchor");
    v28 = objc_msgSend(v16, "topAnchor");
    v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

    *(_QWORD *)(v25 + 32) = v29;
    v30 = *(void **)(v2 + v20);
    if (!v30)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    v71 = v3;
    v31 = objc_msgSend(v30, "bottomAnchor");
    v32 = objc_msgSend(v16, "bottomAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

    *(_QWORD *)(v25 + 40) = v33;
    v34 = *(void **)(v2 + v20);
    if (!v34)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    v3 = (uint64_t)v10;
    v35 = objc_msgSend(v34, "leadingAnchor");
    v36 = objc_msgSend(v16, "leadingAnchor");
    v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

    *(_QWORD *)(v25 + 48) = v37;
    v38 = *(void **)(v2 + v20);
    if (!v38)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    v39 = (void *)objc_opt_self(NSLayoutConstraint);
    v40 = objc_msgSend(v38, "trailingAnchor");
    v41 = objc_msgSend(v16, "trailingAnchor");
    v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

    *(_QWORD *)(v25 + 56) = v42;
    v74[0] = v25;
    specialized Array._endMutation()(v43);
    v44 = v74[0];
    sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v39, "activateConstraints:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

    v46 = *(void **)(v2 + v20);
    if (!v46)
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    v47 = v46;
    v48 = sub_1650FC(v71);
    v49 = OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation;
    v47[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_orientation] = v48 & 1;
    objc_msgSend(v47, "setAlwaysBounceVertical:", (v48 & 1) == 0);
    objc_msgSend(v47, "setAlwaysBounceHorizontal:", v47[v49]);

    v10 = (void *)v3;
    v11 = &selRef_copy;
    v14 = &selRef_characterIndexForPoint_inTextContainer_fractionOfDistanceBetweenInsertionPoints_;
  }
  v3 = v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, v74, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v62 = Strong;
    v63 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(ObjectType, v63);
    v66 = v65;
    swift_unknownObjectRelease(v62);
    sub_16F6D0(v3, v66);
    *(_QWORD *)&v61 = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  v67 = objc_msgSend(v10, v11[380], v61);
  if (!v67)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v68 = v67;
  objc_msgSend(v67, v14[150], CFSTR("kBETestDriverPagedToScrolledAnimationEnd"), v2);

}

void sub_162DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  char *v89;
  _QWORD v90[7];
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t ObjectType;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  id v126;
  char v127[8];
  uint64_t v128;
  uint64_t v129;
  void *v130;
  char v131[8];
  char v132[8];

  v1 = v0;
  v116 = sub_319AC(&qword_3B8E20);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)v90 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_319AC(&qword_3B8E58);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_319AC((uint64_t *)&unk_3BE6C0);
  v112 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_319AC(&qword_3C0000);
  __chkstk_darwin(v8);
  v106 = (char *)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v105 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v104 = (char *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_319AC(&qword_3BE6D0);
  v102 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v101 = (char *)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_319AC(&qword_3BE6D8);
  v109 = *(_QWORD *)(v110 - 8);
  __chkstk_darwin(v110);
  v108 = (char *)v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_319AC((uint64_t *)&unk_3BE6E0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v98 = (char *)v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_319AC(&qword_3BCE98);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v95 = (char *)v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_319AC((uint64_t *)&unk_3B80B0);
  __chkstk_darwin(v15);
  v124 = (char *)v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_319AC(&qword_3BE3F0);
  v94 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v93 = (char *)v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_319AC((uint64_t *)&unk_3BE6F0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
  swift_beginAccess(v23, v132, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v23);
  if (Strong)
  {
    v25 = Strong;
    v90[6] = v6;
    v26 = *(_QWORD *)(v23 + 8);
    v27 = v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider, v131, 0, 0);
    v28 = swift_unknownObjectWeakLoadStrong(v27);
    if (v28)
    {
      v90[3] = v4;
      v90[4] = v3;
      v29 = *(_QWORD *)(v27 + 8);
      v121 = v28;
      ObjectType = swift_getObjectType(v28);
      v91 = v29;
      v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 88))(ObjectType, v29);
      v30 = swift_allocObject(&unk_3849C8, 24, 7);
      swift_unknownObjectWeakInit(v30 + 16, v1);
      v31 = sub_319AC((uint64_t *)&unk_3BCEC0);
      v32 = sub_3DCC0((unint64_t *)&unk_3BE700, (uint64_t *)&unk_3BCEC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v90[2] = v31;
      v90[1] = v32;
      v33 = Publisher<>.sink(receiveValue:)(sub_1770FC, v30, v31, v32);
      swift_release();
      v34 = swift_release();
      v129 = type metadata accessor for AnyCancellable(0, v34);
      v130 = &protocol witness table for AnyCancellable;
      v90[0] = v17;
      v35 = v129;
      v128 = v33;
      v36 = v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_cancellables;
      swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_cancellables, v127, 33, 0);
      sub_177104((uint64_t)&v128, v36 + 280, (uint64_t *)&unk_3B8E28);
      swift_endAccess(v127);
      v37 = swift_getObjectType(v25);
      v38 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 16);
      v90[5] = v25;
      v128 = v38(v37, v26);
      v39 = sub_319AC((uint64_t *)&unk_3BE710);
      v40 = sub_3DCC0((unint64_t *)&unk_3BD180, (uint64_t *)&unk_3BE710, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      Publisher.dropFirst(_:)(1, v39, v40);
      swift_release();
      v41 = swift_allocObject(&unk_3849C8, 24, 7);
      swift_unknownObjectWeakInit(v41 + 16, v1);
      v42 = sub_3DCC0((unint64_t *)&unk_3BE720, (uint64_t *)&unk_3BE6F0, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
      v43 = Publisher<>.sink(receiveValue:)(sub_177148, v41, v19, v42);
      v44 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v44);
      v129 = v35;
      v130 = &protocol witness table for AnyCancellable;
      v123 = v35;
      v128 = v43;
      swift_beginAccess(v36, v127, 33, 0);
      sub_177104((uint64_t)&v128, v36, (uint64_t *)&unk_3B8E28);
      swift_endAccess(v127);
      v45 = v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController;
      swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v127, 0, 0);
      v92 = v45;
      v128 = *(_QWORD *)(*(_QWORD *)v45 + 104);
      v46 = sub_319AC(&qword_3B7290);
      v47 = sub_3DCC0((unint64_t *)&unk_3BE730, &qword_3B7290, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
      v128 = Publisher.eraseToAnyPublisher()(v46, v47);
      v48 = swift_allocObject(&unk_3849C8, 24, 7);
      swift_unknownObjectWeakInit(v48 + 16, v1);
      v49 = sub_319AC(&qword_3B72B0);
      v50 = sub_3DCC0((unint64_t *)&unk_3BE740, &qword_3B72B0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v51 = Publisher<>.sink(receiveValue:)(sub_177150, v48, v49, v50);
      swift_release();
      swift_release();
      v129 = v35;
      v130 = &protocol witness table for AnyCancellable;
      v128 = v51;
      swift_beginAccess(v36, &v126, 33, 0);
      sub_177104((uint64_t)&v128, v36 + 40, (uint64_t *)&unk_3B8E28);
      swift_endAccess(&v126);
      v128 = (*(uint64_t (**)(uint64_t))(v91 + 24))(ObjectType);
      v52 = sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
      v126 = (id)static OS_dispatch_queue.main.getter();
      v119 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
      v120 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56);
      v125 = v1;
      v53 = (uint64_t)v124;
      v120(v124, 1, 1, v119);
      v54 = sub_319AC((uint64_t *)&unk_3BE750);
      v55 = sub_3DCC0(&qword_3B9B58, (uint64_t *)&unk_3BE750, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v122 = sub_1771AC((unint64_t *)&qword_3B8E80, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
      v56 = v93;
      Publisher.receive<A>(on:options:)(&v126, v53, v54, v52, v55, v122);
      sub_52128(v53, (uint64_t *)&unk_3B80B0);

      swift_release();
      v57 = swift_allocObject(&unk_3849C8, 24, 7);
      swift_unknownObjectWeakInit(v57 + 16, v125);
      v58 = sub_3DCC0(&qword_3BE408, &qword_3BE3F0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      v59 = v90[0];
      v60 = Publisher<>.sink(receiveValue:)(sub_177158, v57, v90[0], v58);
      v61 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v94 + 8))(v56, v59, v61);
      v130 = &protocol witness table for AnyCancellable;
      v62 = v123;
      v129 = v123;
      v128 = v60;
      swift_beginAccess(v36, &v126, 33, 0);
      sub_177104((uint64_t)&v128, v36 + 80, (uint64_t *)&unk_3B8E28);
      swift_endAccess(&v126);
      v63 = *(_QWORD *)(v125 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layoutModeProvider + 8);
      v64 = swift_getObjectType(*(_QWORD *)(v125
                                          + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layoutModeProvider));
      v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 16))(v64, v63);
      v65 = sub_319AC((uint64_t *)&unk_3BCEA0);
      v66 = sub_3DCC0(&qword_3B9B38, (uint64_t *)&unk_3BCEA0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v67 = sub_34284(&qword_3BCEB0, (uint64_t (*)(uint64_t))type metadata accessor for BookLayoutMode, (uint64_t)&unk_2E4E88);
      v68 = v95;
      Publisher<>.removeDuplicates()(v65, v66, v67);
      swift_release();
      v69 = swift_allocObject(&unk_3849C8, 24, 7);
      swift_unknownObjectWeakInit(v69 + 16, v125);
      v70 = (_QWORD *)swift_allocObject(&unk_384DB8, 40, 7);
      v71 = v121;
      v70[2] = v69;
      v70[3] = v71;
      v72 = v91;
      v70[4] = v91;
      v73 = sub_3DCC0(&qword_3BCEB8, &qword_3BCE98, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
      swift_unknownObjectRetain(v71);
      v74 = v97;
      v75 = Publisher<>.sink(receiveValue:)(sub_177164, v70, v97, v73);
      v76 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v68, v74, v76);
      v129 = v62;
      v130 = &protocol witness table for AnyCancellable;
      v128 = v75;
      swift_beginAccess(v36, &v126, 33, 0);
      sub_177104((uint64_t)&v128, v36 + 120, (uint64_t *)&unk_3B8E28);
      swift_endAccess(&v126);
      v77 = ObjectType;
      v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 56))(ObjectType, v72);
      v126 = (id)static OS_dispatch_queue.main.getter();
      v120((char *)v53, 1, 1, v119);
      v78 = sub_319AC(&qword_3BE760);
      v79 = sub_3DCC0(&qword_3BE768, &qword_3BE760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v80 = v98;
      v118 = v52;
      Publisher.receive<A>(on:options:)(&v126, v53, v78, v52, v79, v122);
      v81 = v53;
      v82 = v125;
      sub_52128(v81, (uint64_t *)&unk_3B80B0);

      swift_release();
      v83 = swift_allocObject(&unk_3849C8, 24, 7);
      swift_unknownObjectWeakInit(v83 + 16, v82);
      v84 = (_QWORD *)swift_allocObject(&unk_384DE0, 40, 7);
      v84[2] = v83;
      v84[3] = v71;
      v84[4] = v72;
      v85 = sub_3DCC0((unint64_t *)&unk_3BE770, (uint64_t *)&unk_3BE6E0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      swift_unknownObjectRetain(v71);
      v86 = v100;
      v87 = Publisher<>.sink(receiveValue:)(sub_1771A0, v84, v100, v85);
      v88 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v99 + 8))(v80, v86, v88);
      v129 = v123;
      v130 = &protocol witness table for AnyCancellable;
      v128 = v87;
      swift_beginAccess(v36, &v126, 33, 0);
      v100 = v36;
      sub_177104((uint64_t)&v128, v36 + 160, (uint64_t *)&unk_3B8E28);
      swift_endAccess(&v126);
      v89 = (char *)&loc_163B18 + *((int *)qword_164790 + (*(unsigned __int8 (**)(uint64_t))(v72 + 48))(v77));
      __asm { BR              X10 }
    }
    swift_unknownObjectRelease(v25);
  }
}

void sub_1647A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  UIAccessibilityTraits v4;
  id v5;
  void *v6;
  unint64_t v7;
  UIAccessibilityTraits v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void **aBlock;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  double (*v19)();
  uint64_t v20;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                                       + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels));
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease(v1);
    return;
  }
  if (v1 < 0)
    v14 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                    + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels);
  else
    v14 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                                     + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels));
  v2 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v3 = 0;
    v4 = UIAccessibilityTraitAdjustable;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v1);
      else
        v5 = *(id *)(v1 + 8 * v3 + 32);
      v6 = v5;
      ++v3;
      v7 = (unint64_t)objc_msgSend(v5, "accessibilityTraits");
      if ((v4 & ~v7) != 0)
        v8 = v4;
      else
        v8 = 0;
      objc_msgSend(v6, "setAccessibilityTraits:", v8 | v7);
      v9 = swift_allocObject(&unk_3849C8, 24, 7);
      swift_unknownObjectWeakInit(v9 + 16, v0);
      v19 = sub_1770EC;
      v20 = v9;
      aBlock = _NSConcreteStackBlock;
      v16 = 1107296256;
      v17 = sub_525B8;
      v18 = &unk_384D58;
      v10 = _Block_copy(&aBlock);
      objc_msgSend(v6, "_setAccessibilityIncrementBlock:", v10, swift_release().n128_f64[0]);
      _Block_release(v10);
      v11 = swift_allocObject(&unk_3849C8, 24, 7);
      swift_unknownObjectWeakInit(v11 + 16, v0);
      v19 = sub_1770F4;
      v20 = v11;
      aBlock = _NSConcreteStackBlock;
      v16 = 1107296256;
      v17 = sub_525B8;
      v18 = &unk_384D80;
      v12 = _Block_copy(&aBlock);
      objc_msgSend(v6, "_setAccessibilityDecrementBlock:", v12, swift_release().n128_f64[0]);
      _Block_release(v12);
      v13 = objc_msgSend(objc_allocWithZone((Class)UIGestureRecognizer), "init");
      objc_msgSend(v6, "addGestureRecognizer:", v13);

    }
    while (v2 != v3);
    swift_bridgeObjectRelease(v1);
  }
}

id sub_164A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t (*v12)();
  _QWORD *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  id v32;
  NSString v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD aBlock[3];
  _QWORD *v41;
  unint64_t (*v42)();
  uint64_t v43;
  char v44[24];
  uint64_t v45;
  unint64_t v46;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  __chkstk_darwin(v1);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v37 - v6;
  result = _BookEPUBLog();
  if (result)
  {
    v37 = v2;
    v38 = v1;
    v39 = v7;
    Logger.init(_:)(result);
    v45 = 0x203A494552;
    v46 = 0xE500000000000000;
    v9 = v0;
    v10 = v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity;
    swift_beginAccess(v10, v44, 0, 0);
    sub_1127B0(v10, (uint64_t)aBlock);
    v11 = v41;
    if (v41)
    {
      v12 = v42;
      v13 = sub_472D0(aBlock, (uint64_t)v41);
      v14 = *(v11 - 1);
      v15 = __chkstk_darwin(v13);
      v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v14 + 16))(v17, v15);
      sub_52128((uint64_t)aBlock, &qword_3B7018);
      v18 = (*((uint64_t (**)(_QWORD *, unint64_t (*)()))v12 + 3))(v11, v12);
      v20 = v19;
      (*(void (**)(char *, _QWORD *))(v14 + 8))(v17, v11);
    }
    else
    {
      sub_52128((uint64_t)aBlock, &qword_3B7018);
      v20 = (void *)0xE600000000000000;
      v18 = 0x3E6C6C756E3CLL;
    }
    v21._countAndFlagsBits = v18;
    v21._object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(v20);
    v23 = v45;
    v22 = v46;
    v24 = swift_allocObject(&unk_3849C8, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16, v9);
    v26 = v37;
    v25 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v4, v39, v38);
    v27 = *(unsigned __int8 *)(v26 + 80);
    v28 = (v27 + 24) & ~v27;
    v29 = (v3 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = swift_allocObject(&unk_384D18, v29 + 16, v27 | 7);
    *(_QWORD *)(v30 + 16) = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v30 + v28, v4, v25);
    v31 = (uint64_t *)(v30 + v29);
    *v31 = v23;
    v31[1] = v22;
    v32 = objc_allocWithZone((Class)BUOSStateHandler);
    swift_retain(v24);
    swift_bridgeObjectRetain(v22);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
    v42 = sub_1770A4;
    v43 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_173118;
    v41 = &unk_384D30;
    v34 = _Block_copy(aBlock);
    v35 = objc_msgSend(v32, "initWithTitle:block:", v33, v34);

    _Block_release(v34);
    swift_release();
    swift_release();
    v36 = *(void **)(v9 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_stateHandler);
    *(_QWORD *)(v9 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_stateHandler) = v35;

    return (id)(*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v39, v25);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_164D8C()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
}

id sub_164D9C()
{
  return sub_164DB4(&OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___pagedModeView);
}

id sub_164DA8()
{
  return sub_164DB4(&OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___scrollContainerView);
}

id sub_164DB4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    v4 = *(id *)(v1 + *a1);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;
    v4 = v5;

    v3 = 0;
  }
  v7 = v3;
  return v4;
}

void sub_164E20(id a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  void *Strong;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v3 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
  if (v4 && (v5 = objc_msgSend(v4, "panGestureRecognizer")) != 0
    || a1 && (v5 = objc_msgSend(a1, "panGestureRecognizer")) != 0)
  {
    v6 = *(void **)(v1 + v3);
    v11 = v5;
    if (v6)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_scrollGestureHostView);
      if (Strong)
      {
        v8 = Strong;
        objc_msgSend(Strong, "addGestureRecognizer:", v11);

        v9 = v8;
      }
      else
      {
        objc_msgSend(v6, "addGestureRecognizer:", v11);
        v9 = v11;
      }
    }
    else
    {
      v10 = objc_msgSend(v5, "view");
      objc_msgSend(v10, "removeGestureRecognizer:", v11);

      v9 = v10;
    }

  }
}

void *sub_164F3C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *result;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer);
  if (v1)
  {
    v2 = v1;
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_164F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  double result;
  uint64_t v17;
  char v18[24];

  v1 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer))
  {
    v2 = v0;
    v3 = sub_1650FC(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout)) & 1;
    v4 = objc_allocWithZone((Class)type metadata accessor for UberScrollContainerView(0));
    v5 = (char *)sub_8B45C(v3, 0.0, 0.0, 0.0, 0.0);
    v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v18, 0, 0);
    v7 = *v6;
    swift_weakAssign(&v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_layoutController], v7);
    v8 = *(_QWORD *)(v7 + 16);
    v9 = &v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_locationProvider];
    *((_QWORD *)v9 + 1) = *(_QWORD *)(v7 + 24);
    swift_unknownObjectWeakAssign(v9, v8);
    v10 = &v5[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_scrollDelegate];
    *((_QWORD *)v10 + 1) = &off_383470;
    swift_unknownObjectWeakAssign(v10, v2);
    v11 = *(void **)(v2 + v1);
    *(_QWORD *)(v2 + v1) = v5;
    v12 = v5;
    sub_164E20(v11);

    v13 = (uint64_t *)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService);
    swift_beginAccess(v13, &v17, 0, 0);
    v14 = *v13;
    v15 = &v12[OBJC_IVAR____TtC8BookEPUB23UberScrollContainerView_paginatingService];
    *((_QWORD *)v15 + 1) = v13[1];
    swift_unknownObjectWeakAssign(v15, v14);
    swift_unknownObjectRetain(v14);
    sub_8B100();

    *(_QWORD *)&result = swift_unknownObjectRelease(v14).n128_u64[0];
  }
  return result;
}

uint64_t sub_1650FC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  if ((unint64_t)(a1 - 1) < 2)
    return 0;
  if (a1 == 3)
    return 1;
  if (!a1)
  {
    if (qword_3B56F0 != -1)
      swift_once(&qword_3B56F0, sub_8A4D8);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_555F0(v3, (uint64_t)qword_3CEFD0);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v7 = 0;
      swift_slowDealloc(v7, -1, -1);
    }

    return 0;
  }
  type metadata accessor for BookLayoutMode(0);
  v9 = a1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v8, &v9, v8, &type metadata for UInt);
  __break(1u);
  return result;
}

void sub_16521C(uint64_t a1, char a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  char v9[24];
  objc_super v10;

  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for BookContentViewController(0);
  objc_msgSendSuper2(&v10, "viewDidMoveToWindow:shouldAppearOrDisappear:", a1, a2 & 1);
  if (a1)
  {
    v5 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v9, 0, 0);
    v6 = *(_QWORD *)v5;
    swift_retain();
    v7 = objc_msgSend(v2, "view");
    if (v7)
    {
      v8 = v7;
      swift_unknownObjectWeakAssign(*(_QWORD *)(v6 + 272) + 56, v7);
      sub_1C3EE4();

      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_165344()
{
  NSString v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v0);

  v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v1);
  if (qword_3B57F8 != -1)
    swift_once(&qword_3B57F8, sub_16A02C);
  objc_msgSend(v2, "setPreferredSymbolConfiguration:", qword_3BE498);
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
  objc_msgSend(v2, "setTintColor:", v3);

  objc_msgSend(v2, "setAlpha:", 0.0);
  objc_msgSend(v2, "setHidden:", 1);
  v4 = objc_msgSend(v2, "layer");
  if (qword_3B57E8 != -1)
    swift_once(&qword_3B57E8, sub_169FC8);
  v5 = objc_msgSend((id)qword_3BE480, "CGColor");
  objc_msgSend(v4, "setShadowColor:", v5);

  LODWORD(v6) = 1.0;
  objc_msgSend(v4, "setShadowOpacity:", v6);
  objc_msgSend(v4, "setShadowRadius:", 25.0);
  if (qword_3B57F0 != -1)
    swift_once(&qword_3B57F0, sub_16A014);
  objc_msgSend(v4, "setShadowOffset:", xmmword_3BE488);

  return v2;
}

void sub_165584()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  char *v7;
  id v8;
  char *v9;
  char *v10;
  id v11;
  char v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  char *v17;
  char *v18;
  id v19;
  double v20;
  id v21;
  id v22;
  double v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  id v28;
  char *v29;
  double v30;
  id v31;
  void *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  char *v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  char *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  char *v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  void **v62;
  Class isa;
  void **aBlock;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  void *v67;
  void (*v68)();
  uint64_t v69;
  char v70[24];

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
  swift_beginAccess(v2, v70, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    return;
  v4 = Strong;
  v5 = *((_QWORD *)v2 + 1);
  ObjectType = swift_getObjectType(Strong);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 64))(ObjectType, v5) & 1) == 0)
  {
    swift_unknownObjectRelease(v4);
    return;
  }
  v7 = sub_16217C();
  v8 = objc_msgSend(v7, "superview");

  v9 = *(char **)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView];
  if (v8
    && (sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr),
        v10 = v9,
        v11 = v8,
        v12 = static NSObject.== infix(_:_:)(),
        v10,
        v11,
        v11,
        (v12 & 1) != 0))
  {
    v13 = (void *)objc_opt_self(UIView);
    v14 = swift_allocObject(&unk_3849C8, 24, 7);
    swift_unknownObjectWeakInit(v14 + 16, v1);
    v68 = sub_176FB0;
    v69 = v14;
    aBlock = _NSConcreteStackBlock;
    v65 = 1107296256;
    v15 = &unk_384C90;
  }
  else
  {
    v16 = sub_16217C();
    objc_msgSend(v16, "removeFromSuperview");

    v17 = sub_16217C();
    objc_msgSend(v9, "addSubview:", v17);

    objc_msgSend(v9, "bringSubviewToFront:", *(_QWORD *)&v9[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView]);
    v18 = sub_16217C();
    v19 = objc_msgSend(v18, "layer");

    LODWORD(v20) = 0;
    objc_msgSend(v19, "setOpacity:", v20);

    v21 = sub_1622D4();
    v22 = objc_msgSend(v21, "layer");

    LODWORD(v23) = 0;
    objc_msgSend(v22, "setOpacity:", v23);

    v13 = (void *)objc_opt_self(UIView);
    v24 = swift_allocObject(&unk_3849C8, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16, v1);
    v68 = sub_176FA8;
    v69 = v24;
    aBlock = _NSConcreteStackBlock;
    v65 = 1107296256;
    v15 = &unk_384C68;
  }
  v66 = sub_525B8;
  v67 = v15;
  v25 = _Block_copy(&aBlock);
  swift_release(v69);
  objc_msgSend(v13, "animateWithDuration:animations:", v25, 0.3);
  _Block_release(v25);
  v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController];
  v27 = sub_16217C();
  swift_unknownObjectWeakAssign(v26 + 168, v27);

  v28 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v29 = (char *)objc_msgSend(v28, "userInterfaceIdiom");

  v30 = 0.0;
  if (v29 != (_BYTE *)&dword_0 + 1)
  {
    v31 = objc_msgSend(v1, "view");
    if (!v31)
    {
LABEL_23:
      __break(1u);
      return;
    }
    v32 = v31;
    objc_msgSend(v31, "safeAreaInsets");
    v30 = v33;

  }
  v34 = sub_319AC((uint64_t *)&unk_3B8440);
  v35 = swift_allocObject(v34, 64, 7);
  *(_OWORD *)(v35 + 16) = xmmword_2E74C0;
  v36 = sub_16217C();
  v37 = objc_msgSend(v36, "topAnchor");

  v38 = objc_msgSend(v1, "view");
  if (!v38)
  {
    __break(1u);
    goto LABEL_20;
  }
  v39 = v38;
  v40 = objc_msgSend(v38, "topAnchor");

  v41 = objc_msgSend(v37, "constraintEqualToAnchor:", v40);
  *(_QWORD *)(v35 + 32) = v41;
  v42 = sub_16217C();
  v43 = objc_msgSend(v42, "leadingAnchor");

  v44 = objc_msgSend(v1, "view");
  if (!v44)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v45 = v44;
  v46 = objc_msgSend(v44, "leadingAnchor");

  v47 = objc_msgSend(v43, "constraintEqualToAnchor:", v46);
  *(_QWORD *)(v35 + 40) = v47;
  v48 = sub_16217C();
  v49 = objc_msgSend(v48, "trailingAnchor");

  v50 = objc_msgSend(v1, "view");
  if (!v50)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v51 = v50;
  v52 = objc_msgSend(v50, "trailingAnchor");

  v53 = objc_msgSend(v49, "constraintEqualToAnchor:", v52);
  *(_QWORD *)(v35 + 48) = v53;
  v54 = sub_16217C();
  v55 = objc_msgSend(v54, "bottomAnchor");

  v56 = objc_msgSend(v1, "view");
  if (!v56)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v57 = v56;
  v58 = objc_msgSend(v56, "bottomAnchor");

  if ((*(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] & 0xFFFFFFFFFFFFFFFELL) != 2)
  {

    v30 = -20.0;
  }
  v59 = (void *)objc_opt_self(NSLayoutConstraint);
  v60 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v58, v30);

  *(_QWORD *)(v35 + 56) = v60;
  aBlock = (void **)v35;
  specialized Array._endMutation()(v61);
  v62 = aBlock;
  sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v59, "activateConstraints:", isa, swift_bridgeObjectRelease(v62).n128_f64[0]);
  swift_unknownObjectRelease(v4);

  *(_BYTE *)(v26 + 192) = 1;
}

double sub_165C2C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11;
  _BYTE v12[24];

  v2 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) = a1;
  if (v3 != a1)
  {
    v4 = v1;
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) = 0;
    sub_16263C(a1);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling) = 0;
    v5 = v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider;
    swift_beginAccess(v5, v12, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v5);
    if (Strong)
    {
      v8 = Strong;
      v9 = *(_QWORD *)(v5 + 8);
      ObjectType = swift_getObjectType(Strong);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(ObjectType, v9);
      if (v3 <= 1 && (v11 & 1) != 0 && (*(_QWORD *)(v4 + v2) & 0xFFFFFFFFFFFFFFFELL) == 2)
        sub_165584();
      *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
    }
  }
  return result;
}

void sub_165D08(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v2 = v1;
  v4 = *(void **)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer] = a1;
  v5 = a1;
  v12 = v5;
  if (a1)
  {
    v6 = v5;
    UIGestureRecognizer.be_allowedTouchTypes.setter((uint64_t)&off_379A38);
    objc_msgSend(v6, "setAllowedScrollTypesMask:", 2);
    objc_msgSend(v6, "setEnabled:", v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isCurlPanRecognizerEnabled]);
    v7 = objc_msgSend(v2, "viewIfLoaded");
    objc_msgSend(v7, "addGestureRecognizer:", v6);

    v5 = v12;
  }
  if (v4)
  {
    v8 = v4;
    v9 = objc_msgSend(v2, "viewIfLoaded");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "removeGestureRecognizer:", v8);

      v11 = v8;
    }
    else
    {
      v10 = v8;
      v11 = v12;
    }

    v5 = v10;
  }

}

void sub_165E38(void *a1)
{
  id v2;

  v2 = a1;
  sub_165D08(a1);
}

void sub_165E5C()
{
  qword_3BE468 = 0x403E000000000000;
}

id BookContentViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithNibName:bundle:", v7, a3);

  return v8;
}

void BookContentViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("BookEPUB.BookContentViewController", 34, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id BookContentViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookContentViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_166208()
{
  NSString *v0;
  Class v1;
  NSString *v2;

  v0 = (NSString *)String._bridgeToObjectiveC()();
  v1 = NSClassFromString(v0);

  if (v1 || (v2 = (NSString *)String._bridgeToObjectiveC()(), v1 = NSClassFromString(v2), v2, v1))
    qword_3BE470 = swift_getObjCClassMetadata(v1);
  else
    __break(1u);
}

void sub_166298()
{
  NSString *v0;
  Class v1;

  v0 = (NSString *)String._bridgeToObjectiveC()();
  v1 = NSClassFromString(v0);

  if (v1)
    qword_3BE478 = swift_getObjCClassMetadata(v1);
  else
    __break(1u);
}

void BookContentViewController.performPageDrag(translation:velocity:gestureState:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, double, double, double, double);
  uint64_t *v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128);
  __n128 v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, uint64_t, uint64_t, __n128, __n128, __n128, __n128);
  __n128 v28;
  __n128 v29;
  __n128 v30;
  __n128 v31;
  _BYTE v32[24];

  switch(a1)
  {
    case 3:
      v15 = (uint64_t *)(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
      swift_beginAccess(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, v32, 0, 0);
      v12 = *v15;
      v16 = v15[1];
      ObjectType = swift_getObjectType(v12);
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128))(v16 + 96);
      v19 = swift_unknownObjectRetain(v12);
      v19.n128_f64[0] = a2;
      v20.n128_f64[0] = a3;
      v21.n128_f64[0] = a4;
      v22.n128_f64[0] = a5;
      v18(1, ObjectType, v16, v19, v20, v21, v22);
      break;
    case 2:
      v23 = (uint64_t *)(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
      swift_beginAccess(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, v32, 0, 0);
      v12 = *v23;
      v11 = v23[1];
      v13 = swift_getObjectType(v12);
      v14 = *(void (**)(uint64_t, uint64_t, double, double, double, double))(v11 + 88);
      goto LABEL_7;
    case 1:
      v10 = (uint64_t *)(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
      swift_beginAccess(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, v32, 0, 0);
      v12 = *v10;
      v11 = v10[1];
      v13 = swift_getObjectType(v12);
      v14 = *(void (**)(uint64_t, uint64_t, double, double, double, double))(v11 + 80);
LABEL_7:
      swift_unknownObjectRetain(v12);
      v14(v13, v11, a2, a3, a4, a5);
      break;
    default:
      v24 = (uint64_t *)(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
      swift_beginAccess(v5 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, v32, 0, 0);
      v12 = *v24;
      v25 = v24[1];
      v26 = swift_getObjectType(v12);
      v27 = *(void (**)(_QWORD, uint64_t, uint64_t, __n128, __n128, __n128, __n128))(v25 + 96);
      v28 = swift_unknownObjectRetain(v12);
      v28.n128_f64[0] = a2;
      v29.n128_f64[0] = a3;
      v30.n128_f64[0] = a4;
      v31.n128_f64[0] = a5;
      v27(0, v26, v25, v28, v29, v30, v31);
      break;
  }
  swift_unknownObjectRelease(v12);
}

id sub_166584(id a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  char v9;
  uint64_t v10;

  v2 = v1;
  v4 = objc_msgSend(v2, "view");
  if (a1)
  {
    v5 = a1;
    v6 = 11;
    while (1)
    {
      if (v4)
      {
        sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
        v7 = v5;
        v8 = v4;
        v9 = static NSObject.== infix(_:_:)(v7, v8);

        if ((v9 & 1) != 0)
          break;
      }
      if (!--v6)
      {
        a1 = 0;
        goto LABEL_12;
      }
      v10 = objc_opt_self(WKWebView);
      if (swift_dynamicCastObjCClass(v5, v10))
      {
        a1 = &dword_0 + 1;
        goto LABEL_12;
      }
      a1 = objc_msgSend(v5, "superview");

      v5 = a1;
      if (!a1)
        goto LABEL_13;
    }
    a1 = 0;
    v5 = v7;
    v4 = v8;
LABEL_12:

  }
LABEL_13:

  return a1;
}

Swift::Bool __swiftcall BookContentViewController.gestureRecognizer(_:shouldRecognizeSimultaneouslyWith:)(UIGestureRecognizer _, UIGestureRecognizer shouldRecognizeSimultaneouslyWith)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  id v8;
  objc_class *v9;
  char v10;
  void *v11;
  objc_class *v12;
  id v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  objc_class *v19;
  char v20;
  void *v21;
  objc_class *v22;
  id v23;
  char v24;
  void *v25;
  objc_class *v26;
  id v27;
  char v28;
  void *v29;
  objc_class *v30;
  id v31;
  char v32;
  void *v33;
  objc_class *v34;
  id v35;
  char v36;
  void *v37;
  objc_class *v38;
  id v39;
  char v40;

  v3 = v2;
  v6 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer;
  v7 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer);
  if (v7)
  {
    sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
    v8 = v7;
    v9 = _.super.isa;
    v10 = static NSObject.== infix(_:_:)(v9, v8);

    if ((v10 & 1) != 0)
      goto LABEL_22;
  }
  v11 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer);
  if (v11)
  {
    sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
    v12 = _.super.isa;
    v13 = v11;
    v14 = static NSObject.== infix(_:_:)(v12, v13);

    if ((v14 & 1) != 0)
    {
LABEL_22:
      v15 = sub_34450(0, &qword_3BE530, UITapGestureRecognizer_ptr);
      if ((-[objc_class isKindOfClass:](shouldRecognizeSimultaneouslyWith.super.isa, "isKindOfClass:", swift_getObjCClassFromMetadata(v15)) & 1) != 0)return 0;
    }
  }
  v16 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer;
  v17 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer);
  if (!v17
    || (sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr),
        v18 = v17,
        v19 = shouldRecognizeSimultaneouslyWith.super.isa,
        v20 = static NSObject.== infix(_:_:)(v19, v18),
        v19,
        v18,
        (v20 & 1) == 0))
  {
    v21 = *(void **)(v3 + v6);
    if (!v21
      || (sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr),
          v22 = shouldRecognizeSimultaneouslyWith.super.isa,
          v23 = v21,
          v24 = static NSObject.== infix(_:_:)(v22, v23),
          v22,
          v23,
          (v24 & 1) == 0))
    {
      v25 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer);
      if (!v25)
        return 1;
      sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
      v26 = shouldRecognizeSimultaneouslyWith.super.isa;
      v27 = v25;
      v28 = static NSObject.== infix(_:_:)(v26, v27);

      if ((v28 & 1) == 0)
        return 1;
    }
  }
  v29 = *(void **)(v3 + v16);
  if (v29)
  {
    sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
    v30 = _.super.isa;
    v31 = v29;
    v32 = static NSObject.== infix(_:_:)(v30, v31);

    if ((v32 & 1) != 0)
      return 1;
  }
  v33 = *(void **)(v3 + v6);
  if (v33)
  {
    sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
    v34 = _.super.isa;
    v35 = v33;
    v36 = static NSObject.== infix(_:_:)(v34, v35);

    if ((v36 & 1) != 0)
      return 1;
  }
  v37 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer);
  if (!v37)
    return 0;
  sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
  v38 = _.super.isa;
  v39 = v37;
  v40 = static NSObject.== infix(_:_:)(v38, v39);

  return (v40 & 1) != 0;
}

Swift::Bool __swiftcall BookContentViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v6;
  void *v7;
  id v8;
  objc_class *v9;
  char v10;
  id v11;

  v3 = v2;
  v6 = sub_166AEC(_.super.isa, shouldReceive.super.isa);
  if ((v6 & 1) != 0)
  {
    v7 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer);
    if (v7)
    {
      sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
      v8 = v7;
      v9 = _.super.isa;
      v10 = static NSObject.== infix(_:_:)(v9, v8);

      if ((v10 & 1) != 0)
      {
        v11 = -[objc_class type](shouldReceive.super.isa, "type");
        *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapTouchType) = v11;
      }
    }
  }
  return v6 & 1;
}

id sub_166AEC(void *a1, id a2)
{
  char *v2;
  char *v3;
  id v6;
  NSObject *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t (*v16)(NSObject **, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  id result;
  void *v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  char v48;
  id v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  NSObject **v58;
  NSObject *v59;
  uint64_t v60;
  NSObject *v61;
  double v62;
  double v63;
  char v64[24];

  v3 = v2;
  v6 = objc_msgSend(a2, "view");
  if (!v6)
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_555F0(v27, (uint64_t)qword_3BE450);
    v7 = Logger.logObject.getter(v28);
    v29 = ((uint64_t (*)(void))static os_log_type_t.debug.getter)();
    if (os_log_type_enabled(v7, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_0, v7, v29, "#unhandled_tap Touch has no view; ignoring", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }
    goto LABEL_22;
  }
  v7 = v6;
  objc_msgSend(a2, "locationInView:", v7);
  v9 = v8;
  v11 = v10;
  v12 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler];
  swift_beginAccess(&v3[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler], v64, 0, 0);
  v13 = *(_QWORD *)v12;
  v14 = *((_QWORD *)v12 + 1);
  ObjectType = swift_getObjectType(*(_QWORD *)v12);
  v61 = v7;
  v62 = v9;
  v63 = v11;
  v16 = *(uint64_t (**)(NSObject **, uint64_t, uint64_t, uint64_t, __n128))(v14 + 120);
  v17 = swift_unknownObjectRetain(v13);
  LOBYTE(v12) = v16(&v61, 1, ObjectType, v14, v17);
  *(_QWORD *)&v18 = swift_unknownObjectRelease(v13).n128_u64[0];
  if ((v12 & 1) != 0)
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    v19 = type metadata accessor for Logger(0);
    v20 = sub_555F0(v19, (uint64_t)qword_3BE450);
    v21 = Logger.logObject.getter(v20);
    v24 = static os_log_type_t.debug.getter(v21, v22, v23);
    if (!os_log_type_enabled(v21, v24))
      goto LABEL_20;
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    v26 = "#unhandled_tap Touch is on interactive content; ignoring";
    goto LABEL_7;
  }
  result = objc_msgSend(v3, "view", v18, v61, *(_QWORD *)&v62, *(_QWORD *)&v63);
  if (result)
  {
    v32 = result;
    result = objc_msgSend(v3, "view");
    if (result)
    {
      v33 = result;
      -[NSObject convertPoint:toCoordinateSpace:](v7, "convertPoint:toCoordinateSpace:", result, v9, v11);
      v35 = v34;
      v37 = v36;

      v38 = objc_msgSend(v32, "hitTest:withEvent:", 0, v35, v37);
      if (v38)
      {
        v39 = objc_opt_self(UIControl);
        if (swift_dynamicCastObjCClass(v38, v39))
        {
          if (qword_3B57C8 != -1)
            swift_once(&qword_3B57C8, sub_1614F8);
          v40 = type metadata accessor for Logger(0);
          v41 = sub_555F0(v40, (uint64_t)qword_3BE450);
          v21 = Logger.logObject.getter(v41);
          v42 = static os_log_type_t.info.getter();
          if (!os_log_type_enabled(v21, v42))
          {

            goto LABEL_21;
          }
          v43 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v43 = 0;
          _os_log_impl(&dword_0, v21, v42, "#unhandled_tap Touch is on UIControl; ignoring", v43, 2u);
          swift_slowDealloc(v43, -1, -1);

LABEL_20:
LABEL_21:

LABEL_22:
          return 0;
        }

      }
      v45 = *(void **)&v3[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer];
      if (!v45)
        goto LABEL_33;
      sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
      v46 = v45;
      v47 = a1;
      v48 = static NSObject.== infix(_:_:)(v47, v46);

      if ((v48 & 1) == 0
        || objc_msgSend(a2, "type") == (char *)&dword_0 + 3
        || (v49 = objc_msgSend(a2, "view"),
            v50 = sub_166584(v49),
            v49,
            (v50 & 1) == 0))
      {
LABEL_33:
        if (qword_3B57C8 != -1)
          swift_once(&qword_3B57C8, sub_1614F8);
        v53 = type metadata accessor for Logger(0);
        sub_555F0(v53, (uint64_t)qword_3BE450);
        v54 = a1;
        v55 = Logger.logObject.getter(v54);
        v56 = ((uint64_t (*)(void))static os_log_type_t.debug.getter)();
        if (os_log_type_enabled(v55, v56))
        {
          v57 = (uint8_t *)swift_slowAlloc(12, -1);
          v58 = (NSObject **)swift_slowAlloc(8, -1);
          *(_DWORD *)v57 = 138412290;
          v61 = v54;
          v59 = v54;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v57 + 4);
          *v58 = v54;

          _os_log_impl(&dword_0, v55, v56, "#unhandled_tap Yes, %@ should receive this touch", v57, 0xCu);
          v60 = sub_319AC(&qword_3B8A70);
          v44 = 1;
          swift_arrayDestroy(v58, 1, v60);
          swift_slowDealloc(v58, -1, -1);
          swift_slowDealloc(v57, -1, -1);

        }
        else
        {

          return &dword_0 + 1;
        }
        return (id)v44;
      }
      if (qword_3B57C8 != -1)
        swift_once(&qword_3B57C8, sub_1614F8);
      v51 = type metadata accessor for Logger(0);
      v52 = sub_555F0(v51, (uint64_t)qword_3BE450);
      v21 = Logger.logObject.getter(v52);
      v24 = ((uint64_t (*)(void))static os_log_type_t.debug.getter)();
      if (!os_log_type_enabled(v21, v24))
        goto LABEL_20;
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      v26 = "#unhandled_tap Touch is not from indirectPointer and originated in web view; not sending to unhandledTapRecognizer";
LABEL_7:
      _os_log_impl(&dword_0, v21, v24, v26, v25, 2u);
      swift_slowDealloc(v25, -1, -1);
      goto LABEL_20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL static BookContentViewController.treatVelocityAsDownwardCloseSwipe(velocity:)(long double a1, long double a2)
{
  double v4;
  double v5;

  if (qword_3B57D0 != -1)
    swift_once(&qword_3B57D0, sub_165E5C);
  v4 = *(double *)&qword_3BE468;
  v5 = atan2(a2, a1) * 180.0 / 3.14159265;
  return v5 <= v4 * 0.5 + 90.0 && 90.0 - v4 * 0.5 <= v5;
}

Swift::Bool __swiftcall BookContentViewController.gestureRecognizerShouldBegin(_:)(UIGestureRecognizer a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  objc_class *v6;
  char v7;
  void *v8;
  objc_class *v9;
  id v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  objc_class *v15;
  id v16;
  double v17;
  long double v18;
  double v19;
  long double v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t (*v25)(uint64_t, uint64_t, __n128);
  __n128 v26;
  double v27;
  double v28;
  char v30[24];

  v2 = v1;
  v4 = *(void **)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer];
  if (!v4
    || (sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr),
        v5 = v4,
        v6 = a1.super.isa,
        v7 = static NSObject.== infix(_:_:)(v6, v5),
        v6,
        v5,
        (v7 & 1) == 0))
  {
    v8 = *(void **)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer];
    if (!v8)
      return 1;
    sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
    v9 = a1.super.isa;
    v10 = v8;
    v11 = static NSObject.== infix(_:_:)(v9, v10);

    if ((v11 & 1) == 0)
      return 1;
  }
  v12 = objc_opt_self(UIPanGestureRecognizer);
  v13 = swift_dynamicCastObjCClass(a1.super.isa, v12);
  if (!v13)
    return 1;
  v14 = (void *)v13;
  v15 = a1.super.isa;
  v16 = objc_msgSend(v2, "view");
  objc_msgSend(v14, "velocityInView:", v16);
  v18 = v17;
  v20 = v19;

  v21 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler];
  swift_beginAccess(v21, v30, 0, 0);
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  ObjectType = swift_getObjectType(v23);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v22 + 72);
  v26 = swift_unknownObjectRetain(v23);
  LOBYTE(v22) = v25(ObjectType, v22, v26);
  swift_unknownObjectRelease(v23);
  if ((v22 & 1) != 0)
  {
    if (qword_3B57D0 != -1)
      swift_once(&qword_3B57D0, sub_165E5C);
    v27 = *(double *)&qword_3BE468;

    v28 = atan2(v20, v18) * 180.0 / 3.14159265;
    return v28 > v27 * 0.5 + 90.0 || 90.0 - v27 * 0.5 > v28;
  }
  else
  {

    return 0;
  }
}

Swift::Bool __swiftcall BookContentViewController.gestureRecognizer(_:shouldRequireFailureOf:)(UIGestureRecognizer _, UIGestureRecognizer shouldRequireFailureOf)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  objc_class *v8;
  char v9;
  uint64_t v10;
  void *v11;
  objc_class *v12;
  id v13;
  char v14;
  void *v15;
  objc_class *v16;
  id v17;
  char v18;

  v3 = v2;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer);
  if (v6)
  {
    sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
    v7 = v6;
    v8 = _.super.isa;
    v9 = static NSObject.== infix(_:_:)(v8, v7);

    if ((v9 & 1) != 0)
    {
      v10 = objc_opt_self(UILongPressGestureRecognizer);
      if (swift_dynamicCastObjCClass(shouldRequireFailureOf.super.isa, v10))
        return 1;
    }
  }
  v11 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer);
  if (!v11
    || (sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr),
        v12 = _.super.isa,
        v13 = v11,
        v14 = static NSObject.== infix(_:_:)(v12, v13),
        v12,
        v13,
        (v14 & 1) == 0))
  {
    v15 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer);
    if (!v15)
      return 0;
    sub_34450(0, (unint64_t *)&qword_3BECF0, UIGestureRecognizer_ptr);
    v16 = _.super.isa;
    v17 = v15;
    v18 = static NSObject.== infix(_:_:)(v16, v17);

    if ((v18 & 1) == 0)
      return 0;
  }
  if (qword_3B57D8 != -1)
    swift_once(&qword_3B57D8, sub_166208);
  if ((-[objc_class isKindOfClass:](shouldRequireFailureOf.super.isa, "isKindOfClass:", swift_getObjCClassFromMetadata(qword_3BE470)) & 1) != 0)return 1;
  if (qword_3B57E0 != -1)
    swift_once(&qword_3B57E0, sub_166298);
  return (-[objc_class isKindOfClass:](shouldRequireFailureOf.super.isa, "isKindOfClass:", swift_getObjCClassFromMetadata(qword_3BE478)) & 1) != 0;
}

void sub_167748(double *a1)
{
  char *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  double (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, __n128);
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, __n128);
  __n128 v38;
  uint64_t v39;
  id v40;
  void *v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  char v50;
  uint64_t v51;
  double v52[3];
  char v53[24];
  char v54[24];
  char v55[24];
  char v56[24];
  CGRect v57;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = &v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v56, 0, 0);
  v7 = *(_QWORD *)v6;
  swift_beginAccess(*(_QWORD *)v6 + 112, v55, 0, 0);
  v8 = *(_QWORD *)(v7 + 112);
  v9 = *(_QWORD *)(v7 + 120);
  ObjectType = swift_getObjectType(v8);
  v11 = *(double (**)(uint64_t, uint64_t, __n128))(v9 + 80);
  v12 = swift_unknownObjectRetain(v8);
  v13 = v11(ObjectType, v9, v12);
  v15 = v14;
  swift_unknownObjectRelease(v8);
  if (v13 >= v15)
    goto LABEL_12;
  v16 = *(_QWORD *)v6;
  swift_beginAccess(*(_QWORD *)v6 + 112, &v51, 0, 0);
  v17 = *(_QWORD *)(v16 + 112);
  v18 = *(_QWORD *)(v16 + 120);
  v19 = swift_getObjectType(v17);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 120);
  v21 = swift_unknownObjectRetain(v17);
  v22 = v20(v19, v18, v21);
  v23 = swift_unknownObjectRelease(v17).n128_u64[0];
  if (v22 <= 1)
  {
LABEL_12:
    v24 = *(_QWORD *)v6;
    swift_beginAccess(*(_QWORD *)v6 + 112, v54, 0, 0);
    v25 = *(_QWORD *)(v24 + 112);
    v26 = *(_QWORD *)(v24 + 120);
    v27 = swift_getObjectType(v25);
    v28 = *(double (**)(uint64_t, uint64_t, __n128))(v26 + 80);
    v29 = swift_unknownObjectRetain(v25);
    v30 = v28(v27, v26, v29);
    v32 = v31;
    swift_unknownObjectRelease(v25);
    if (v30 < v32)
      goto LABEL_7;
    v33 = *(_QWORD *)v6;
    swift_beginAccess(v33 + 112, v53, 0, 0);
    v34 = *(_QWORD *)(v33 + 112);
    v35 = *(_QWORD *)(v33 + 120);
    v36 = swift_getObjectType(v34);
    v37 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v35 + 120);
    v38 = swift_unknownObjectRetain(v34);
    v39 = v37(v36, v35, v38);
    v23 = swift_unknownObjectRelease(v34).n128_u64[0];
    if (v39 < 2)
    {
LABEL_7:
      v50 = 0;
      goto LABEL_8;
    }
  }
  v40 = objc_msgSend(v2, "view", *(double *)&v23);
  if (v40)
  {
    v41 = v40;
    objc_msgSend(v40, "frame");
    v43 = v42;
    v45 = v44;
    v47 = v46;
    v49 = v48;

    v57.origin.x = v43;
    v57.origin.y = v45;
    v57.size.width = v47;
    v57.size.height = v49;
    v50 = CGRectGetMidX(v57) < v4;
LABEL_8:
    v52[0] = v3;
    v52[1] = v4;
    v52[2] = v5;
    sub_10E3C0(v52, v50);
    return;
  }
  __break(1u);
}

void sub_1679A0(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, char a7)
{
  void *v7;
  void *v8;
  id v15;
  void *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  id v25;
  void *v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  CGFloat Height;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  char *v49;
  void *Strong;
  void *v51;
  void *v52;
  void *v53;
  char *v54;
  CGFloat Width;
  _BYTE v56[24];
  CGRect v57;
  CGRect v58;

  v8 = v7;
  v15 = objc_msgSend(v8, "view");
  if (!v15)
  {
    __break(1u);
    goto LABEL_12;
  }
  v16 = v15;
  objc_msgSend(v15, "frame");
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v57.origin.x = v18;
  v57.origin.y = v20;
  v57.size.width = v22;
  v57.size.height = v24;
  Width = CGRectGetWidth(v57);
  v25 = objc_msgSend(v8, "view");
  if (!v25)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v26 = v25;
  objc_msgSend(v25, "frame");
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;

  v58.origin.x = v28;
  v58.origin.y = v30;
  v58.size.width = v32;
  v58.size.height = v34;
  Height = CGRectGetHeight(v58);
  objc_msgSend(a1, "frame");
  sub_168268(a7 & 1, v36, v37, v38, v39, a2, a3, a4, a5);
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;
  if ((*(_QWORD *)((_BYTE *)v8 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) & 0xFFFFFFFFFFFFFFFELL) == 2
    && (v48 = *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController),
        (*(_BYTE *)(v48 + 192) & 1) == 0))
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v48 + 176);
    if (Strong)
    {
      v51 = Strong;
      objc_msgSend(Strong, "removeFromSuperview");

    }
    v52 = (void *)swift_unknownObjectWeakLoadStrong(v48 + 168);
    if (v52)
    {
      v53 = v52;
      objc_msgSend(v52, "removeFromSuperview");

    }
    *(_BYTE *)(v48 + 192) = 0;
    swift_beginAccess(v48 + 184, v56, 1, 0);
    swift_unknownObjectWeakAssign(v48 + 184, 0);
    sub_10A54C();
    v54 = sub_16217C();
    sub_15BF28(0.0, 0.0, Width, Height, v41, v43, v45, v47);

    sub_165584();
    sub_167DD4(v41, v43, v45, v47);
  }
  else
  {
    v49 = sub_16217C();
    sub_15BF28(0.0, 0.0, Width, Height, v41, v43, v45, v47);

    sub_165584();
    sub_167DD4(v41, v43, v45, v47);
  }
}

void sub_167C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  char *v4;
  id v5;
  double v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_16217C();

    v5 = objc_msgSend(v4, "layer");
    LODWORD(v6) = 1.0;
    objc_msgSend(v5, "setOpacity:", v6);

  }
  swift_beginAccess(v1, &v12, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v1);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = sub_1622D4();

    v10 = objc_msgSend(v9, "layer");
    LODWORD(v11) = 1.0;
    objc_msgSend(v10, "setOpacity:", v11);

  }
}

void sub_167D48(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  id v4;
  id v5;
  double v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = sub_1622D4();

    v5 = objc_msgSend(v4, "layer");
    LODWORD(v6) = 1.0;
    objc_msgSend(v5, "setOpacity:", v6);

  }
}

void sub_167DD4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  char *v5;
  id v9;
  void *v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  CGFloat Width;
  id v20;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat Height;
  double x;
  double y;
  double v33;
  double v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  uint64_t Strong;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v71[24];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80[32];
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;

  v5 = v4;
  v9 = objc_msgSend(v4, "view");
  if (!v9)
  {
    __break(1u);
    goto LABEL_14;
  }
  v10 = v9;
  objc_msgSend(v9, "frame");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v81.origin.x = v12;
  v81.origin.y = v14;
  v81.size.width = v16;
  v81.size.height = v18;
  Width = CGRectGetWidth(v81);
  v20 = objc_msgSend(v5, "view");
  if (!v20)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v21 = v20;
  objc_msgSend(v20, "frame");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  v82.origin.x = v23;
  v82.origin.y = v25;
  v82.size.width = v27;
  v82.size.height = v29;
  Height = CGRectGetHeight(v82);

  v83.origin.x = 0.0;
  v83.origin.y = 0.0;
  v83.size.width = Width;
  v83.size.height = Height;
  v84 = CGRectInset(v83, -100.0, -100.0);
  x = v84.origin.x;
  y = v84.origin.y;
  v33 = v84.size.width;
  v34 = v84.size.height;
  v35 = sub_1622D4();
  v36 = objc_msgSend(v35, "superview");

  if (v36)
  {
    v37 = sub_1622D4();
    objc_msgSend(v37, "removeFromSuperview");

  }
  v38 = &v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
  swift_beginAccess(&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider], v80, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v38);
  if (Strong)
  {
    v40 = Strong;
    v41 = *((_QWORD *)v38 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v41 + 16))(&v72, ObjectType, v41);
    swift_unknownObjectRelease(v40);
    v43 = v72;
    v44 = BYTE1(v72);
    v45 = BYTE2(v72);
    v46 = v73;
    v47 = v74;
    v48 = v75;
    v49 = v76;
    v67 = v77;
    v68 = v78;
    v69 = v79;
    v50 = *(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController] + 184;
    swift_beginAccess(v50, v71, 0, 0);
    v51 = (void *)swift_unknownObjectWeakLoadStrong(v50);
    v52 = sub_1622D4();
    LOBYTE(v72) = v43;
    BYTE1(v72) = v44;
    BYTE2(v72) = v45;
    v73 = v46;
    v74 = v47;
    v75 = v48;
    v76 = v49;
    v77 = v67;
    v78 = v68;
    v79 = v69;
    if (v51)
    {
      sub_4B344((char *)&v72, (uint64_t)objc_msgSend(v51, "state"));

    }
    else
    {
      sub_4B1A8((uint64_t)&v72);
    }

    swift_bridgeObjectRelease(v46);
  }
  v53 = objc_msgSend(v5, "view");
  if (!v53)
    goto LABEL_15;
  v54 = v53;
  v55 = sub_1622D4();
  objc_msgSend(v54, "addSubview:", v55);

  v56 = *(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController];
  v57 = sub_1622D4();
  swift_unknownObjectWeakAssign(v56 + 176, v57);

  v58 = sub_1622D4();
  sub_4B55C(a1, a2, a3, a4, x, y, v33, v34);

  v59 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v60 = objc_msgSend(v5, "view");
  if (v60)
  {
    v61 = v60;
    objc_msgSend(v60, "addLayoutGuide:", v59);

    v62 = objc_msgSend(v59, "topAnchor");
    v63 = sub_1622D4();
    v64 = objc_msgSend(v63, "bottomAnchor");

    v65 = objc_msgSend(v62, "constraintEqualToAnchor:", v64);
    objc_msgSend(v65, "setActive:", 1);

    v66 = sub_1622D4();
    objc_msgSend(v66, "setClipsToBounds:", 0);

    return;
  }
LABEL_16:
  __break(1u);
}

void sub_168268(int a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  char *v9;
  char *v10;
  char *v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double (*v47)(uint64_t, uint64_t, __n128);
  __n128 v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, __n128);
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  CGFloat v64;
  double v65;
  double v66;
  double v67;
  id v68;
  void *v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  double v76;
  CGFloat v77;
  uint64_t v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  double v82;
  id v83;
  void *v84;
  double v85;
  CGFloat v86;
  double v87;
  CGFloat v88;
  double v89;
  CGFloat v90;
  double v91;
  CGFloat v92;
  uint64_t v93;
  CGFloat v94;
  double MinX;
  id v96;
  void *v97;
  double v98;
  CGFloat v99;
  double v100;
  CGFloat v101;
  double v102;
  CGFloat v103;
  double v104;
  CGFloat v105;
  double Width;
  id v107;
  void *v108;
  double v109;
  double v110;
  int v111;
  id v112;
  void *v113;
  double v114;
  CGFloat v115;
  double v116;
  CGFloat v117;
  double v118;
  CGFloat v119;
  double v120;
  CGFloat v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  id v130;
  uint64_t v131;
  double v132;
  double v133;
  char v137[24];
  char v138[24];
  _QWORD v139[5];
  char v140[24];
  char v141[24];
  char v142[24];
  char v143[24];
  char v144[32];
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;

  v10 = v9;
  v17 = &v9[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding];
  swift_beginAccess(&v9[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding], v144, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v17);
  if (!Strong)
    return;
  v19 = Strong;
  v20 = *((_QWORD *)v17 + 1);
  ObjectType = swift_getObjectType(Strong);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);
  v24 = v23;
  swift_unknownObjectRelease(v19);
  v25 = &v10[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
  swift_beginAccess(&v10[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v143, 0, 0);
  v26 = *(_QWORD *)v25;
  swift_beginAccess(*(_QWORD *)v25 + 112, v142, 0, 0);
  v27 = *(_QWORD *)(v26 + 112);
  v28 = *(_QWORD *)(v26 + 120);
  v29 = swift_getObjectType(v27);
  v30 = *(double (**)(uint64_t, uint64_t, __n128))(v28 + 80);
  v31 = swift_unknownObjectRetain(v27);
  v32 = v30(v29, v28, v31);
  v34 = v33;
  swift_unknownObjectRelease(v27);
  if (v32 >= v34)
    goto LABEL_5;
  v35 = *(_QWORD *)v25;
  swift_beginAccess(*(_QWORD *)v25 + 112, v137, 0, 0);
  v36 = *(_QWORD *)(v35 + 112);
  v37 = *(_QWORD *)(v35 + 120);
  v38 = swift_getObjectType(v36);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v37 + 120);
  v40 = swift_unknownObjectRetain(v36);
  v41 = v39(v38, v37, v40);
  swift_unknownObjectRelease(v36);
  if (v41 <= 1)
  {
LABEL_5:
    v43 = *(_QWORD *)v25;
    swift_beginAccess(*(_QWORD *)v25 + 112, v141, 0, 0);
    v44 = *(_QWORD *)(v43 + 112);
    v45 = *(_QWORD *)(v43 + 120);
    v46 = swift_getObjectType(v44);
    v47 = *(double (**)(uint64_t, uint64_t, __n128))(v45 + 80);
    v48 = swift_unknownObjectRetain(v44);
    v49 = v47(v46, v45, v48);
    v51 = v50;
    swift_unknownObjectRelease(v44);
    if (v49 >= v51)
    {
      v52 = *(_QWORD *)v25;
      swift_beginAccess(v52 + 112, v140, 0, 0);
      v53 = *(_QWORD *)(v52 + 112);
      v54 = *(_QWORD *)(v52 + 120);
      v55 = swift_getObjectType(v53);
      v56 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v54 + 120);
      v57 = swift_unknownObjectRetain(v53);
      v58 = v56(v55, v54, v57);
      swift_unknownObjectRelease(v53);
      v42 = v58 > 1;
    }
    else
    {
      v42 = 0;
    }
  }
  else
  {
    v42 = 1;
  }
  v59 = *(_QWORD *)&v10[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController];
  v60 = swift_weakLoadStrong(v59 + 312);
  if (!v60)
  {
    if ((v42 & a1) == 1)
      goto LABEL_11;
LABEL_14:
    v64 = a2;
    v146.origin.x = a2;
    v146.size.height = a5;
    v146.origin.y = a3;
    v146.size.width = a4;
    CGRectGetMinX(v146);

    goto LABEL_15;
  }
  CurrentValueSubject.value.getter(v139);
  swift_release(v60);
  v62 = v139[0];
  v63 = v139[3];
  swift_unknownObjectRelease(v139[1]);
  swift_unknownObjectRelease(v63);
  v60 = *(_QWORD *)(v62 + 16);
  *(_QWORD *)&v61 = swift_bridgeObjectRelease(v62).n128_u64[0];
  LODWORD(v60) = v60 > 1;
  if ((v42 & a1 & 1) == 0)
    goto LABEL_14;
LABEL_11:
  v64 = a2;
  v133 = a6;
  v65 = a7;
  v66 = a8;
  v67 = a9;
  v68 = objc_msgSend(v10, "view", v61);
  if (!v68)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v69 = v68;
  objc_msgSend(v68, "frame");
  v71 = v70;
  v73 = v72;
  v75 = v74;
  v77 = v76;

  v145.origin.x = v71;
  v145.origin.y = v73;
  v145.size.width = v75;
  v145.size.height = v77;
  CGRectGetMidX(v145);
  v78 = swift_getObjectType(v22);
  (*(void (**)(uint64_t, uint64_t))(v24 + 64))(v78, v24);

  a9 = v67;
  a8 = v66;
  a7 = v65;
  a6 = v133;
LABEL_15:
  v79 = a6;
  v147.origin.x = a6;
  v80 = a7;
  v147.origin.y = a7;
  v147.size.width = a8;
  v147.size.height = a9;
  CGRectGetMinY(v147);
  v81 = a8;
  if (v42)
  {
    v132 = a9;
    v82 = v64;
    v83 = objc_msgSend(v10, "view");
    if (!v83)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v84 = v83;
    objc_msgSend(v83, "frame");
    v86 = v85;
    v88 = v87;
    v90 = v89;
    v92 = v91;

    v148.origin.x = v86;
    v148.origin.y = v88;
    v148.size.width = v90;
    v148.size.height = v92;
    CGRectGetMidX(v148);
    v93 = swift_getObjectType(v22);
    (*(double (**)(uint64_t, uint64_t))(v24 + 64))(v93, v24);
    v94 = v82;
    a9 = v132;
  }
  else
  {
    v149.origin.x = v64;
    v149.size.height = a5;
    v149.origin.y = a3;
    v149.size.width = a4;
    v94 = v64;
    CGRectGetWidth(v149);

  }
  v150.origin.x = v79;
  v150.origin.y = v80;
  v150.size.width = v81;
  v150.size.height = a9;
  CGRectGetHeight(v150);
  v151.origin.x = v94;
  v151.size.height = a5;
  v151.origin.y = a3;
  v151.size.width = a4;
  MinX = CGRectGetMinX(v151);
  v96 = objc_msgSend(v10, "view");
  if (!v96)
  {
    __break(1u);
    goto LABEL_42;
  }
  v97 = v96;
  objc_msgSend(v96, "frame");
  v99 = v98;
  v101 = v100;
  v103 = v102;
  v105 = v104;

  v152.origin.x = v99;
  v152.origin.y = v101;
  v152.size.width = v103;
  v152.size.height = v105;
  if (CGRectGetMidX(v152) < MinX)
  {
    if (((!v42 | v60) & 1) != 0 || (a1 & 1) == 0)
      goto LABEL_31;
    goto LABEL_29;
  }
  v153.origin.x = v94;
  v153.origin.y = a3;
  v153.size.width = a4;
  v153.size.height = a5;
  Width = CGRectGetWidth(v153);
  v107 = objc_msgSend(v10, "view");
  if (!v107)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v108 = v107;
  objc_msgSend(v107, "frame");
  v110 = v109;

  v111 = !v42;
  if (Width >= v110 * 0.5)
    v111 = 1;
  if (((v111 | v60) & 1) == 0 && (a1 & 1) != 0)
  {
LABEL_29:
    v112 = objc_msgSend(v10, "view");
    if (v112)
    {
      v113 = v112;
      objc_msgSend(v112, "frame");
      v115 = v114;
      v117 = v116;
      v119 = v118;
      v121 = v120;

      v154.origin.x = v115;
      v154.origin.y = v117;
      v154.size.width = v119;
      v154.size.height = v121;
      CGRectGetMidX(v154);
      v122 = swift_getObjectType(v22);
      (*(void (**)(uint64_t, uint64_t))(v24 + 64))(v122, v24);

      goto LABEL_31;
    }
LABEL_45:
    __break(1u);
    return;
  }
LABEL_31:
  v123 = &v10[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
  swift_beginAccess(&v10[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider], v139, 0, 0);
  v124 = swift_unknownObjectWeakLoadStrong(v123);
  if (!v124)
  {
    v131 = v22;
    goto LABEL_39;
  }
  v125 = v124;
  v126 = *((_QWORD *)v123 + 1);
  v127 = swift_getObjectType(v124);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v126 + 64))(v127, v126) & 1) == 0
    || (swift_beginAccess(v59 + 184, v138, 0, 0),
        (v128 = (void *)swift_unknownObjectWeakLoadStrong(v59 + 184)) == 0))
  {
    swift_unknownObjectRelease(v22);
    v131 = v125;
LABEL_39:
    swift_unknownObjectRelease(v131);
    return;
  }
  v129 = v128;
  if (objc_msgSend(v128, "state") == (char *)&dword_0 + 1 || objc_msgSend(v129, "state") == (char *)&dword_0 + 2)
  {

    v130 = sub_1622D4();
    swift_unknownObjectRelease(v22);

    swift_unknownObjectRelease(v125);
  }
  else
  {
    swift_unknownObjectRelease(v22);
    swift_unknownObjectRelease(v125);

  }
}

Swift::Void __swiftcall BookContentViewController.viewDidLoad()()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  Class isa;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  Class v50;
  void *v51;
  __int128 v52;
  __int128 v53;
  _QWORD v54[4];
  char v55[24];
  objc_super v56;

  v1 = v0;
  v56.receiver = v0;
  v56.super_class = (Class)type metadata accessor for BookContentViewController(0);
  objc_msgSendSuper2(&v56, "viewDidLoad");
  sub_168E84();
  v2 = *(void **)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView];
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = v3;
  objc_msgSend(v3, "frame");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v2, "setFrame:", v6, v8, v10, v12);
  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v14 = v13;
  objc_msgSend(v13, "addSubview:", v2);

  isa = (Class)objc_msgSend(v2, "be_constraintsToFillSuperview");
  if (!isa)
  {
    v16 = sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v16);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v17);
  }
  v18 = (void *)objc_opt_self(NSLayoutConstraint);
  objc_msgSend(v18, "activateConstraints:", isa);

  v19 = &v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding], v55, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v19);
  if (Strong)
  {
    v21 = Strong;
    v22 = *((_QWORD *)v19 + 1);
    ObjectType = swift_getObjectType(Strong);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(ObjectType, v22);
    v26 = v25;
    swift_unknownObjectRelease(v21);
    v27 = swift_getObjectType(v24);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 120))(v27, v26);
    v29 = (*(double (**)(uint64_t, uint64_t))(v26 + 64))(v27, v26);
    v30 = *(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8];
    v31 = swift_getObjectType(*(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider]);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 40))(v31, v30);
    sub_16FD2C((uint64_t)v2, v28, v24, v26, v32 & 1, v29);
    swift_unknownObjectRelease(v24);
  }
  sub_16263C(*(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout]);
  v33 = objc_msgSend(v1, "view");
  if (!v33)
    goto LABEL_15;
  v34 = v33;
  v35 = *(void **)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkView];
  objc_msgSend(v33, "addSubview:", v35);

  v54[3] = sub_34450(0, (unint64_t *)&unk_3BE558, UIImageView_ptr);
  v54[0] = v35;
  v36 = v35;
  v37 = objc_msgSend(v1, "view");
  if (v37)
  {
    v38 = v37;
    *((_QWORD *)&v53 + 1) = sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
    *(_QWORD *)&v52 = v38;
  }
  else
  {
    v52 = 0u;
    v53 = 0u;
  }
  sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
  v39 = sub_168FB8(v54, 10, 0, &v52, 10, 0.5, 0.0);
  v40 = sub_319AC((uint64_t *)&unk_3B8440);
  v41 = swift_allocObject(v40, 48);
  *(_OWORD *)(v41 + 16) = xmmword_2E6690;
  v42 = objc_msgSend(v36, "centerXAnchor", (_QWORD)v52);
  v43 = objc_msgSend(v1, "view");
  if (v43)
  {
    v44 = v43;
    v45 = objc_msgSend(v43, "centerXAnchor");

    v46 = objc_msgSend(v42, "constraintEqualToAnchor:", v45);
    *(_QWORD *)(v41 + 32) = v46;
    *(_QWORD *)(v41 + 40) = v39;
    v54[0] = v41;
    specialized Array._endMutation()(v47);
    v48 = v54[0];
    v49 = v39;
    v50 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "activateConstraints:", v50, swift_bridgeObjectRelease(v48).n128_f64[0]);

    v51 = *(void **)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkCenterYConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkCenterYConstraint] = v49;

    return;
  }
LABEL_16:
  __break(1u);
}

void sub_168E84()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  v1 = *(void **)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (!v3)
    {
      __break(1u);
      goto LABEL_12;
    }
    v4 = v3;
    objc_msgSend(v3, "addGestureRecognizer:", v2);

  }
  v5 = *(void **)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer];
  if (!v5)
    goto LABEL_7;
  v6 = v5;
  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  v8 = v7;
  objc_msgSend(v7, "addGestureRecognizer:", v6);

LABEL_7:
  v9 = *(void **)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer];
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v0, "view");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "addGestureRecognizer:", v10);

      return;
    }
    goto LABEL_13;
  }
}

id sub_168FB8(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  id v28;
  uint64_t v30;
  uint64_t v31;

  v8 = v7;
  v16 = a1[3];
  v17 = sub_472D0(a1, v16);
  v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
  v19 = a4[3];
  if (v19)
  {
    v20 = sub_472D0(a4, a4[3]);
    v30 = a5;
    v31 = a2;
    v21 = a3;
    v22 = *(_QWORD *)(v19 - 8);
    v23 = __chkstk_darwin(v20);
    v25 = (char *)&v30 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v22 + 16))(v25, v23);
    v26 = _bridgeAnythingToObjectiveC<A>(_:)(v25, v19);
    v27 = *(void (**)(char *, uint64_t))(v22 + 8);
    a3 = v21;
    v27(v25, v19);
    a5 = v30;
    a2 = v31;
    sub_34488(a4);
  }
  else
  {
    v26 = 0;
  }
  v28 = objc_msgSend((id)swift_getObjCClassFromMetadata(v8), "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v18, a2, a3, v26, a5, a6, a7);
  swift_unknownObjectRelease(v18);
  swift_unknownObjectRelease(v26);
  sub_34488(a1);
  return v28;
}

Swift::Void __swiftcall BookContentViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  __int128 v20[7];
  _BYTE v21[26];
  char v22[24];
  _OWORD v23[7];
  _OWORD v24[2];
  objc_super v25;

  v2 = v1;
  v25.receiver = v2;
  v25.super_class = (Class)type metadata accessor for BookContentViewController(0);
  objc_msgSendSuper2(&v25, "viewDidAppear:", a1);
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView], "setAlpha:", 1.0);
  if ((*(_QWORD *)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    v4 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v22, 0, 0);
    v5 = *(_QWORD *)v4;
    v6 = *(_QWORD *)(*(_QWORD *)v4 + 16);
    v7 = *(_QWORD *)(v5 + 24);
    ObjectType = swift_getObjectType(v6);
    v9 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v7 + 16);
    v10 = swift_unknownObjectRetain(v6);
    v9(v20, ObjectType, v7, v10);
    swift_unknownObjectRelease(v6);
    *(_OWORD *)((char *)v24 + 10) = *(_OWORD *)&v21[10];
    v23[6] = v20[6];
    v24[0] = *(_OWORD *)v21;
    v23[2] = v20[2];
    v23[3] = v20[3];
    v23[4] = v20[4];
    v23[5] = v20[5];
    v23[0] = v20[0];
    v23[1] = v20[1];
    *(_OWORD *)&v21[10] = *(_OWORD *)((char *)v24 + 10);
    sub_13CFD8(v20);
    sub_49900((uint64_t)v23);
  }
  v11 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
  swift_beginAccess(v11, v23, 0, 0);
  v12 = *(_QWORD *)(*(_QWORD *)v11 + 320);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain(v12);
    v14 = (uint64_t *)(v12 + 40);
    do
    {
      v15 = *(v14 - 1);
      v16 = *v14;
      v17 = swift_getObjectType(v15);
      v18 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 312);
      v19 = swift_unknownObjectRetain(v15);
      v18(v17, v16, v19);
      swift_unknownObjectRelease(v15);
      v14 += 2;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease(v12);
  }
}

Swift::Void __swiftcall BookContentViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, __n128);
  __n128 v11;
  char v12[24];
  objc_super v13;

  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for BookContentViewController(0);
  objc_msgSendSuper2(&v13, "viewDidDisappear:", a1);
  v3 = &v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v12, 0, 0);
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 320);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(v4);
    v6 = (uint64_t *)(v4 + 40);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      ObjectType = swift_getObjectType(v7);
      v10 = *(void (**)(uint64_t, uint64_t, __n128))(v8 + 304);
      v11 = swift_unknownObjectRetain(v7);
      v10(ObjectType, v8, v11);
      swift_unknownObjectRelease(v7);
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v4);
  }
}

void BookContentViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  _BYTE *v3;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  _BYTE *v19;
  uint64_t v20;
  void *v21;
  void **v22;
  uint64_t v23;
  double (*v24)(uint64_t, uint64_t);
  void *v25;
  void *v26;
  uint64_t v27;
  objc_super v28;

  v3[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll] = 0;
  v28.receiver = v3;
  v28.super_class = (Class)type metadata accessor for BookContentViewController(0);
  objc_msgSendSuper2(&v28, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v7 = objc_msgSend(v3, "presentedViewController");
  if (v7)
  {
    v8 = v7;
    if (objc_msgSend(v7, "_isInPopoverPresentation"))
      objc_msgSend(v8, "dismissViewControllerAnimated:completion:", 0, 0);

  }
  sub_1696D0(1, 0.5);
  v9 = objc_msgSend(v3, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "frame");
    v12 = v11;
    v14 = v13;

    v15 = objc_msgSend(v3, "view");
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v15, "setClipsToBounds:", 1);

      v17 = swift_allocObject(&unk_384978, 56);
      *(_QWORD *)(v17 + 16) = v3;
      *(_QWORD *)(v17 + 24) = v12;
      *(_QWORD *)(v17 + 32) = v14;
      *(double *)(v17 + 40) = a2;
      *(double *)(v17 + 48) = a3;
      v26 = sub_175458;
      v27 = v17;
      v22 = _NSConcreteStackBlock;
      v23 = 1107296256;
      v24 = sub_169E14;
      v25 = &unk_384990;
      v18 = _Block_copy(&v22);
      v19 = v3;
      swift_release();
      v20 = swift_allocObject(&unk_3849C8, 24);
      swift_unknownObjectWeakInit(v20 + 16, v19);
      v26 = sub_1754B8;
      v27 = v20;
      v22 = _NSConcreteStackBlock;
      v23 = 1107296256;
      v24 = sub_169E14;
      v25 = &unk_3849E0;
      v21 = _Block_copy(&v22);
      objc_msgSend(a1, "animateAlongsideTransition:completion:", v18, v21, swift_release().n128_f64[0]);
      _Block_release(v21);
      _Block_release(v18);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1696D0(uint64_t a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  char v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(void ***__return_ptr, uint64_t, uint64_t);
  id v26;
  NSObject *v27;
  NSObject *v28;
  double v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  os_log_type_t v47;
  uint8_t *v48;
  NSObject *v49;
  id v50;
  void *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  char *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t oslog;
  NSObject *osloga;
  void **aBlock;
  uint64_t v62;
  uint64_t (*v63)(uint64_t);
  void *v64;
  id (*v65)();
  __int128 v66;
  char v67[24];

  v3 = v2;
  v5 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView])
  {
    v6 = Logger.logObject.getter(a1);
    v7 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      swift_slowDealloc(v8, -1, -1);
    }

    objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v3, "cleanupSnapshotView", 0);
    objc_msgSend(v3, "performSelector:withObject:afterDelay:", "cleanupSnapshotView", 0, a2);
    return;
  }
  v9 = a1;
  v10 = objc_msgSend(v2, "viewIfLoaded");
  if (v10)
  {
    v11 = v10;
    if ((v9 & 1) != 0)
    {
      objc_msgSend(v10, "frame");
      v16 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v12, v13, v14, v15);
    }
    else
    {
      v16 = objc_msgSend(v10, "snapshotViewAfterScreenUpdates:", 0);
    }
    v17 = v16;
    objc_msgSend(*(id *)&v3[v5], "removeFromSuperview");
    v18 = *(void **)&v3[v5];
    *(_QWORD *)&v3[v5] = v17;

  }
  v19 = *(void **)&v3[v5];
  if (v19)
  {
    v20 = &v3[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
    swift_beginAccess(&v3[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider], v67, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v20);
    if (Strong)
    {
      v22 = Strong;
      v23 = *((_QWORD *)v20 + 1);
      ObjectType = swift_getObjectType(Strong);
      v25 = *(void (**)(void ***__return_ptr, uint64_t, uint64_t))(v23 + 16);
      v26 = v19;
      v25(&aBlock, ObjectType, v23);
      swift_unknownObjectRelease(v22);
      oslog = v62;
      BookThemeEntity.backgroundColor.getter();
      v28 = v27;
      *(_QWORD *)&v29 = swift_bridgeObjectRelease(oslog).n128_u64[0];
    }
    else
    {
      v32 = (void *)objc_opt_self(UIColor);
      v33 = v19;
      v28 = objc_msgSend(v32, "whiteColor");
    }
    objc_msgSend(v19, "setBackgroundColor:", v28, v29, oslog);

    if (qword_3B56A0 != -1)
      swift_once(&qword_3B56A0, sub_52620);
    if (byte_3B6F18 == 1)
    {
      v34 = objc_msgSend(v19, "layer");
      v35 = objc_msgSend((id)objc_opt_self(UIColor), "systemCyanColor");
      v36 = objc_msgSend(v35, "CGColor");

      objc_msgSend(v34, "setBorderColor:", v36);
      v28 = objc_msgSend(v19, "layer");
      -[NSObject setBorderWidth:](v28, "setBorderWidth:", 50.0);

    }
    v37 = objc_msgSend(v3, "view");
    if (v37)
    {
      v38 = v37;
      objc_msgSend(v37, "frame");
      v40 = v39;
      v42 = v41;
      v44 = v43;
      v46 = v45;

      v28 = Logger.logObject.getter(objc_msgSend(v19, "setFrame:", v40, v42, v44, v46));
      v47 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_0, v28, v47, "Installing snapshot view #loadingStatus", v48, 2u);
        swift_slowDealloc(v48, -1, -1);
      }

      v49 = objc_msgSend(v3, "view");
      if (v49)
      {
        v28 = v49;
        -[NSObject addSubview:](v49, "addSubview:", v19);

        v50 = objc_msgSend(v3, "view");
        if (v50)
        {
          v51 = v50;
          objc_msgSend(v50, "bringSubviewToFront:", v19);

          if ((v9 & 1) != 0)
          {
            objc_msgSend(v19, "setAlpha:", 0.0);
            v52 = (void *)objc_opt_self(UIView);
            v53 = swift_allocObject(&unk_384CC8, 24, 7);
            *(_QWORD *)(v53 + 16) = v3;
            v65 = sub_176FE4;
            *(_QWORD *)&v66 = v53;
            aBlock = _NSConcreteStackBlock;
            v62 = 1107296256;
            v63 = sub_525B8;
            v64 = &unk_384CE0;
            v54 = _Block_copy(&aBlock);
            v55 = v3;
            swift_release();
            objc_msgSend(v52, "animateWithDuration:animations:", v54, 0.2);
            _Block_release(v54);
          }
          v28 = *(NSObject **)&v3[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout];
          if ((unint64_t)v28 < 2)
          {
            v56 = objc_retain(*(id *)(*(_QWORD *)&v3[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView]
                                    + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
LABEL_32:
            v57 = v56;
            objc_msgSend(v56, "setAlpha:", 0.0);

            objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v3, "cleanupSnapshotView", 0);
            objc_msgSend(v3, "performSelector:withObject:afterDelay:", "cleanupSnapshotView", 0, a2);

            return;
          }
          if ((unint64_t)&v28[-1].isa + 6 < 2)
          {
            v56 = sub_164DA8();
            goto LABEL_32;
          }
LABEL_36:
          type metadata accessor for BookLayoutMode(0);
          aBlock = (void **)&v28->isa;
          _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v58, &aBlock, v58, &type metadata for UInt);
          __break(1u);
          return;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_35;
  }
  osloga = Logger.logObject.getter(v10);
  v30 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(osloga, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_0, osloga, v30, "Failed to get snapshot of content for transition in layout state", v31, 2u);
    swift_slowDealloc(v31, -1, -1);
  }

}

double sub_169E14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(__n128);
  __n128 v5;
  double result;

  v4 = *(void (**)(__n128))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  *(_QWORD *)&result = swift_unknownObjectRelease(a2).n128_u64[0];
  return result;
}

void sub_169E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "view");

    if (v5)
    {
      objc_msgSend(v5, "setClipsToBounds:", 0);

    }
    else
    {
      __break(1u);
    }
  }
}

id sub_169FC8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", 0.282352941, 0.0156862745, 0.0, 1.0);
  qword_3BE480 = (uint64_t)result;
  return result;
}

double sub_16A014()
{
  double result;

  result = 0.0;
  xmmword_3BE488 = xmmword_2EED00;
  return result;
}

id sub_16A02C()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 4, 2, 80.0);
  qword_3BE498 = (uint64_t)result;
  return result;
}

double sub_16A074(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_319AC(&qword_3B8450);
  *(_QWORD *)&result = __chkstk_darwin(v4).n128_u64[0];
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
    type metadata accessor for MainActor(0);
    v9 = swift_retain(a2);
    v10 = static MainActor.shared.getter(v9);
    v11 = (_QWORD *)swift_allocObject(&unk_384EA8, 40, 7);
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = a2;
    v12 = sub_67B40((uint64_t)v7, (uint64_t)&unk_3BE7F8, (uint64_t)v11);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_16A160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4[20] = a4;
  v5 = sub_319AC(&qword_3BE800);
  v4[21] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Tips.Status(0);
  v4[22] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[23] = v7;
  v4[24] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_319AC(&qword_3BE808);
  v4[25] = v8;
  v4[26] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_319AC(&qword_3BE810);
  v4[27] = v9;
  v4[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_319AC(&qword_3BE818);
  v4[29] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[30] = v11;
  v4[31] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_319AC(&qword_3BE820);
  v4[32] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v4[33] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[34] = swift_task_alloc(v14);
  v4[35] = swift_task_alloc(v14);
  v15 = type metadata accessor for MainActor(0);
  v4[36] = v15;
  v4[37] = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v4[38] = v16;
  v4[39] = v17;
  return swift_task_switch(sub_16A2D4, v16, v17);
}

uint64_t sub_16A2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 160) + 16;
  swift_beginAccess(v1, v0 + 136, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 320) = Strong;
  v3 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 208);
  if (Strong)
  {
    v6 = *(_QWORD *)(v0 + 240);
    v5 = *(_QWORD *)(v0 + 248);
    v7 = *(_QWORD *)(v0 + 232);
    v8 = *(_QWORD *)(v0 + 200);
    v9 = sub_176B50();
    *(_QWORD *)(v0 + 328) = v9;
    Tip.shouldDisplayUpdates.getter(&type metadata for ReadingLoupeLongPressTip, v9);
    AsyncMapSequence.base.getter(v7);
    v10 = sub_3DCC0(&qword_3BE828, &qword_3BE808, (uint64_t)&protocol conformance descriptor for AsyncStream<A>);
    dispatch thunk of AsyncSequence.makeAsyncIterator()(v8, v10);
    v11 = AsyncMapSequence.transform.getter(v7);
    v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v14 = AsyncMapSequence.Iterator.init(_:transform:)(v3, v11, v13, v8, &type metadata for Bool, v10);
    *(_QWORD *)(v0 + 336) = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeLongPressTipController;
    v15 = static MainActor.shared.getter(v14);
    *(_QWORD *)(v0 + 344) = v15;
    if (v15)
    {
      ObjectType = swift_getObjectType(v15);
      v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
      v19 = v18;
    }
    else
    {
      v17 = 0;
      v19 = 0;
    }
    *(_QWORD *)(v0 + 352) = v17;
    *(_QWORD *)(v0 + 360) = v19;
    return swift_task_switch(sub_16A4CC, v17, v19);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 272);
    v20 = *(_QWORD *)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 248);
    v23 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 168);
    swift_release();
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    swift_task_dealloc(v22);
    swift_task_dealloc(v3);
    swift_task_dealloc(v4);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_16A4CC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[43];
  v0[46] = AsyncMapSequence.Iterator.baseIterator.modify(v0 + 13, v0[32]);
  sub_3DCC0((unint64_t *)&unk_3BE830, &qword_3BE810, (uint64_t)&protocol conformance descriptor for AsyncStream<A>.Iterator);
  v2 = (_QWORD *)swift_task_alloc(_sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTjTu[1]);
  v0[47] = v2;
  *v2 = v0;
  v2[1] = sub_16A574;
  return _sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v0[21], v1, &protocol witness table for MainActor);
}

uint64_t sub_16A574()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v2 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 376));
  if (v0)
  {
    v3 = *(_QWORD *)(v2 + 352);
    v4 = *(_QWORD *)(v2 + 360);
    v5 = sub_16A728;
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v2 + 368))(v2 + 104, 0);
    v3 = *(_QWORD *)(v2 + 352);
    v4 = *(_QWORD *)(v2 + 360);
    v5 = sub_16A5E4;
  }
  return swift_task_switch(v5, v3, v4);
}

uint64_t sub_16A5E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  int *v12;

  v1 = v0[22];
  v2 = v0[23];
  v3 = v0[21];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_52128(v3, &qword_3BE800);
    swift_release();
    return swift_task_switch(sub_16AA30, v0[38], v0[39]);
  }
  else
  {
    v6 = v0[34];
    v5 = v0[35];
    v7 = v0[32];
    v8 = v0[33];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[24], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v5, v7);
    v9 = (int *)AsyncMapSequence.Iterator.transform.getter(v7);
    v0[48] = v10;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v12 = (int *)((char *)v9 + *v9);
    v11 = (_QWORD *)swift_task_alloc(v9[1]);
    v0[49] = v11;
    *v11 = v0;
    v11[1] = sub_16A738;
    return ((uint64_t (*)(_QWORD *, _QWORD))v12)(v0 + 50, v0[24]);
  }
}

uint64_t sub_16A728()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 368))(v0 + 104, 1);
}

uint64_t sub_16A738()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v1 = *v0;
  v3 = *(_QWORD *)(*v0 + 184);
  v2 = *(_QWORD *)(*v0 + 192);
  v4 = *(_QWORD *)(*v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*v0 + 392));
  v5 = swift_release();
  *(_BYTE *)(v1 + 401) = *(_BYTE *)(v1 + 400);
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v2, v4, v5);
  return swift_task_switch(sub_16A7BC, *(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 360));
}

uint64_t sub_16A7BC()
{
  uint64_t v0;

  swift_release();
  return swift_task_switch(sub_16A7F4, *(_QWORD *)(v0 + 304), *(_QWORD *)(v0 + 312));
}

uint64_t sub_16A7F4(id a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  _BOOL8 v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if ((*(_BYTE *)(v1 + 401) & 1) == 0)
  {
    a1 = objc_msgSend(*(id *)(v1 + 320), "presentedViewController");
    if (!a1)
      goto LABEL_12;
    v13 = a1;
    if (objc_msgSend(a1, "isEqual:", *(_QWORD *)(*(_QWORD *)(v1 + 320) + *(_QWORD *)(v1 + 336))))
    {
      v14 = *(void **)(v1 + 320);
      v15 = !UIAccessibilityIsReduceMotionEnabled();
      v16 = swift_allocObject(&unk_3849C8, 24);
      swift_unknownObjectWeakInit(v16 + 16, v14);
      *(_QWORD *)(v1 + 48) = sub_17733C;
      *(_QWORD *)(v1 + 56) = v16;
      *(_QWORD *)(v1 + 16) = _NSConcreteStackBlock;
      *(_QWORD *)(v1 + 24) = 1107296256;
      *(_QWORD *)(v1 + 32) = sub_525B8;
      *(_QWORD *)(v1 + 40) = &unk_384EC0;
      v17 = _Block_copy((const void *)(v1 + 16));
      objc_msgSend(v14, "dismissViewControllerAnimated:completion:", v15, v17, swift_release().n128_f64[0]);
      _Block_release(v17);
    }
    goto LABEL_11;
  }
  v2 = *(_QWORD *)(v1 + 336);
  v3 = *(_QWORD *)(v1 + 320);
  if (!*(_QWORD *)(v3 + v2))
  {
    v4 = *(_QWORD *)(v1 + 328);
    type metadata accessor for TipUIPopoverViewController(0);
    *(_QWORD *)(v1 + 88) = &type metadata for ReadingLoupeLongPressTip;
    *(_QWORD *)(v1 + 96) = v4;
    v5 = sub_1622D4();
    v6 = TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)(v1 + 64, v5, address(of:), 0);
    v7 = *(void **)(v3 + v2);
    *(_QWORD *)(v3 + v2) = v6;

    v8 = *(void **)(v3 + v2);
    if (v8)
    {
      v9 = v8;
      v10 = (void *)TipUIPopoverViewController.popoverPresentationController.getter();

      if (v10)
      {
        objc_msgSend(v10, "setPermittedArrowDirections:", 3);

      }
      v11 = *(char **)(v1 + 320);
      v12 = *(void **)&v11[*(_QWORD *)(v1 + 336)];
      if (v12)
      {
        v13 = v12;
        objc_msgSend(v11, "presentViewController:animated:completion:", v13, !UIAccessibilityIsReduceMotionEnabled(), 0);
LABEL_11:

      }
    }
  }
LABEL_12:
  v18 = static MainActor.shared.getter(a1);
  *(_QWORD *)(v1 + 344) = v18;
  if (v18)
  {
    ObjectType = swift_getObjectType(v18);
    v20 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, &protocol witness table for MainActor);
    v22 = v21;
  }
  else
  {
    v20 = 0;
    v22 = 0;
  }
  *(_QWORD *)(v1 + 352) = v20;
  *(_QWORD *)(v1 + 360) = v22;
  return swift_task_switch(sub_16A4CC, v20, v22);
}

uint64_t sub_16AA30()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 320);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 8))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));

  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 192);
  v8 = *(_QWORD *)(v0 + 168);
  swift_release(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_16AAE0(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = *(void **)&Strong[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeLongPressTipController];
    *(_QWORD *)&Strong[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeLongPressTipController] = 0;

  }
}

void sub_16AB3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_16ABA4(v2, v3);

  }
}

void sub_16ABA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _BYTE v26[24];

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v10 = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) = 0;
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
    objc_msgSend(*(id *)(v11 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView), "layoutIfNeeded");
    ObjectType = swift_getObjectType(a1);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 120))(ObjectType, a2);
    v14 = (*(double (**)(uint64_t, uint64_t))(a2 + 64))(ObjectType, a2);
    v15 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8);
    v16 = swift_getObjectType(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider));
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 40))(v16, v15);
    sub_16FD2C(v11, v13, a1, a2, v17 & 1, v14);
    sub_16F6D0(a1, a2);
    v22 = 0;
    v23 = 0;
    v24 = 1;
    sub_161A90(0, (uint64_t)&v22, 0, 1, 2);
    v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout);
    if (v18 == (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2))
    {
      v19 = (_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
      swift_beginAccess(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v26, 0, 0);
      swift_retain(*v19);
      CurrentValueSubject.value.getter(&v22);
      swift_release();
      v20 = v22;
      v21 = v25;
      swift_unknownObjectRelease(v23);
      swift_unknownObjectRelease(v21);
      sub_16B2D4(v20, 1);
      swift_bridgeObjectRelease(v20);
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_16ADFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[24];

  v3 = *a1;
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v38, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_bridgeObjectRetain_n(v3, 3);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = swift_slowAlloc(32, -1);
      v37 = v35;
      *(_DWORD *)v10 = 136315138;
      v11 = sub_1B7EFC(v3);
      v12 = sub_1B8004((uint64_t)v11);
      swift_bridgeObjectRelease(v11);
      v13 = sub_319AC((uint64_t *)&unk_3BE7E0);
      v14 = Array.description.getter(v12, v13);
      v16 = v15;
      swift_bridgeObjectRelease(v12);
      v36 = sub_33524(v14, v16, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v10 + 4);
      swift_bridgeObjectRelease_n(v3, 2);
      swift_bridgeObjectRelease(v16);
      _os_log_impl(&dword_0, v8, v9, "Begin update current visible content %s", v10, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n(v3, 2);

    }
    sub_16B2D4(v3, 0);
    v24 = swift_bridgeObjectRetain(v3);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v37 = v28;
      *(_DWORD *)v27 = 136315138;
      v29 = sub_1B7EFC(v3);
      v30 = sub_1B8004((uint64_t)v29);
      swift_bridgeObjectRelease(v29);
      v31 = sub_319AC((uint64_t *)&unk_3BE7E0);
      v32 = Array.description.getter(v30, v31);
      v34 = v33;
      swift_bridgeObjectRelease(v30);
      v36 = sub_33524(v32, v34, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v27 + 4);
      swift_bridgeObjectRelease_n(v3, 2);
      swift_bridgeObjectRelease(v34);
      _os_log_impl(&dword_0, v25, v26, "End update current visible content %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v3, 2);
    }

  }
  else
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    v17 = type metadata accessor for Logger(0);
    sub_555F0(v17, (uint64_t)qword_3BE450);
    v18 = swift_retain(a2);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v37 = v22;
      *(_DWORD *)v21 = 136315138;
      v36 = sub_33524(0xD000000000000023, 0x80000000002CE350, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v21 + 4);
      swift_release();
      _os_log_impl(&dword_0, v19, v20, "CurrentVisibleContent updated but %s is not alive to show it!", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {

      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_16B2D4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  __objc2_ivar *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  id v63;
  CGFloat v64;
  CGFloat m22;
  id v66;
  id v67;
  CGColorRef GenericRGB;
  CGFloat v69;
  id v70;
  void *v71;
  _QWORD *v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t Strong;
  uint64_t v77;
  uint64_t v78;
  uint64_t ObjectType;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  double v84;
  double v85;
  double v86;
  uint64_t v87;
  id v88;
  void *v89;
  double v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  double v94;
  CGFloat v95;
  double v96;
  CGFloat v97;
  double MidX;
  id v99;
  void *v100;
  double v101;
  CGFloat v102;
  double v103;
  CGFloat v104;
  double v105;
  CGFloat v106;
  double v107;
  CGFloat v108;
  id v109;
  id v110;
  id v111;
  CGColorRef v112;
  id v113;
  void *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  int32_t *offs;
  __n128 v119;
  id v120;
  void *v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  id v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  CGFloat v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  CATransform3D aBlock;
  _BYTE v139[24];
  _BYTE v140[24];
  _BYTE v141[40];
  CGRect v142;
  CGRect v143;

  v3 = v2;
  v5 = sub_160868(a1);
  v131 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout;
  v6 = *(__objc2_ivar **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout);
  type metadata accessor for BookLayoutMode(0);
  v128 = v7;
  if ((unint64_t)v6 >= 2)
  {
    if ((unint64_t)&v6[-1].size + 2 >= 2)
      goto LABEL_102;
    v8 = sub_164DA8();
  }
  else
  {
    v8 = objc_retain(*(id *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                           + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "subviews");

  v11 = sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
  v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  swift_bridgeObjectRetain(v12);
  v13 = swift_bridgeObjectRetain(v5);
  sub_173214(v13, v12);
  v15 = v14;
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v5);
  v16 = (uint64_t)sub_173514(v12, (uint64_t)v5);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v5);
  v136 = v15;
  v17 = *(_QWORD *)(v15 + 16);
  v6 = (__objc2_ivar *)((unint64_t)v16 >> 62);
  v18 = v131;
  v135 = v17;
  if (v17)
    goto LABEL_8;
  if (v6)
  {
    if (v16 < 0)
      v32 = v16;
    else
      v32 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v33 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v16);
    if (!v33)
      goto LABEL_26;
LABEL_8:
    v19 = sub_160BA4((uint64_t)v5);
    v20 = sub_1C1690((uint64_t)v19, v12);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v19);
    if ((a2 & 1) != 0)
      goto LABEL_27;
    goto LABEL_9;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8)))
    goto LABEL_8;
LABEL_26:
  swift_bridgeObjectRelease(v12);
  if ((a2 & 1) != 0)
    goto LABEL_27;
  v20 = 1;
LABEL_9:
  v21 = (uint64_t *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
  swift_beginAccess(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v141, 0, 0);
  v22 = *v21;
  swift_retain(v22);
  if (sub_1C3B4C())
    v23 = 1;
  else
    v23 = sub_1C3CB4();
  swift_release(v22);
  if ((v23 & 1) != *(_BYTE *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_adjustingForSinglePage)
    || ((v20 ^ 1) & 1) != 0)
  {
LABEL_27:
    if (v6)
    {
      if (v16 < 0)
        v38 = v16;
      else
        v38 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v34 = _CocoaArrayWrapper.endIndex.getter(v38);
      if (!v34)
        goto LABEL_40;
    }
    else
    {
      v34 = *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v16);
      if (!v34)
        goto LABEL_40;
    }
    if (v34 < 1)
    {
      __break(1u);
LABEL_98:
      swift_once(&qword_3B56A0, sub_52620);
      goto LABEL_17;
    }
    v35 = 0;
    v6 = (__objc2_ivar *)(v16 & 0xC000000000000001);
    do
    {
      if (v6)
        v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v16);
      else
        v36 = *(id *)(v16 + 8 * v35 + 32);
      v37 = v36;
      ++v35;
      objc_msgSend(v36, "removeFromSuperview");

    }
    while (v34 != v35);
LABEL_40:
    swift_bridgeObjectRelease_n(v16, 2);
    if (v135)
    {
      v127 = v5;
      v39 = 0;
      v134 = (id)objc_opt_self(UIView);
      v132 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView;
      v133 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_showLayoutGuides;
      do
      {
        v137 = *(_OWORD *)(v136 + 16 * v39 + 32);
        v42 = objc_opt_self(WKWebView);
        v43 = (void *)swift_dynamicCastObjCClass(v137, v42);
        v44 = (id)v137;
        v45 = v44;
        if (v43)
        {
          v46 = v44;
          v47 = Logger.logObject.getter(v46);
          v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            v49 = swift_slowAlloc(22, -1);
            v129 = (_QWORD *)swift_slowAlloc(8, -1);
            v130 = COERCE_DOUBLE(swift_slowAlloc(32, -1));
            aBlock.m11 = v130;
            *(_DWORD *)v49 = 138412546;
            *(_QWORD *)(v49 + 4) = v46;
            *v129 = v46;
            *(_WORD *)(v49 + 12) = 2080;
            v50 = objc_msgSend(v43, "be_identifier");
            v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
            v52 = v3;
            v54 = v53;

            *(_QWORD *)(v49 + 14) = sub_33524(v51, v54, (uint64_t *)&aBlock);
            v55 = v54;
            v3 = v52;
            v18 = v131;
            swift_bridgeObjectRelease(v55);
            _os_log_impl(&dword_0, v47, v48, "#reuse #fontReg #loadingStatus adding subview:%@ webViewID:%s", (uint8_t *)v49, 0x16u);
            v56 = sub_319AC(&qword_3B8A70);
            swift_arrayDestroy(v129, 1, v56);
            swift_slowDealloc(v129, -1, -1);
            swift_arrayDestroy(*(_QWORD *)&v130, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(*(_QWORD *)&v130, -1, -1);
            swift_slowDealloc(v49, -1, -1);

          }
          else
          {

          }
        }
        else
        {
          v57 = Logger.logObject.getter(v44);
          v58 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v57, v58))
          {
            v59 = swift_slowAlloc(12, -1);
            v60 = (_QWORD *)swift_slowAlloc(8, -1);
            *(_DWORD *)v59 = 138412290;
            *(_QWORD *)(v59 + 4) = v45;
            *v60 = v45;

            _os_log_impl(&dword_0, v57, v58, "#reuse #fontReg #loadingStatus adding subview:%@", (uint8_t *)v59, 0xCu);
            v61 = sub_319AC(&qword_3B8A70);
            swift_arrayDestroy(v60, 1, v61);
            v62 = v60;
            v18 = v131;
            swift_slowDealloc(v62, -1, -1);
            swift_slowDealloc(v59, -1, -1);
          }
          else
          {

          }
        }
        v63 = objc_msgSend(v45, "superview");

        if (v63)
          objc_msgSend(v45, "removeFromSuperview");
        v64 = COERCE_DOUBLE(swift_allocObject(&unk_384E58, 32, 7));
        *(_OWORD *)(*(_QWORD *)&v64 + 16) = v137;
        *(_QWORD *)&aBlock.m21 = sub_177290;
        aBlock.m22 = v64;
        *(_QWORD *)&aBlock.m11 = _NSConcreteStackBlock;
        *(_QWORD *)&aBlock.m12 = 1107296256;
        *(_QWORD *)&aBlock.m13 = sub_525B8;
        *(_QWORD *)&aBlock.m14 = &unk_384E70;
        v6 = (__objc2_ivar *)_Block_copy(&aBlock);
        m22 = aBlock.m22;
        v66 = v45;
        swift_release(*(_QWORD *)&m22);
        objc_msgSend(v134, "animateWithDuration:delay:options:animations:completion:", 0, v6, 0, 0.2, 0.25);
        _Block_release(v6);
        if (*(_BYTE *)(v3 + v133) == 1)
        {
          v67 = objc_msgSend(v66, "layer");
          GenericRGB = CGColorCreateGenericRGB(127.0, 127.0, 0.0, 255.0);
          objc_msgSend(v67, "setBorderColor:", GenericRGB);

          v6 = (__objc2_ivar *)objc_msgSend(v66, "layer");
          -[__objc2_ivar setBorderWidth:](v6, "setBorderWidth:", 4.0);

        }
        v69 = *(double *)(v3 + v18);
        if (*(_QWORD *)&v69 >= 2uLL)
        {
          if ((unint64_t)(*(_QWORD *)&v69 - 2) >= 2)
            goto LABEL_99;
          v70 = sub_164DA8();
        }
        else
        {
          v70 = *(id *)(*(_QWORD *)(v3 + v132) + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView);
        }
        v71 = v70;
        objc_msgSend(v70, "addSubview:", v66);

        v69 = *(double *)(v3 + v18);
        if (*(_QWORD *)&v69 < 2uLL)
        {
          v40 = *(id *)(*(_QWORD *)(v3 + v132) + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView);
        }
        else
        {
          if ((unint64_t)(*(_QWORD *)&v69 - 2) >= 2)
            goto LABEL_99;
          v40 = sub_164DA8();
        }
        v41 = v40;
        ++v39;
        objc_msgSend(v40, "sendSubviewToBack:", v66);

      }
      while (v135 != v39);
      swift_bridgeObjectRelease(v136);
      v5 = v127;
    }
    else
    {
      swift_bridgeObjectRelease(v136);
    }
    v72 = sub_160BA4((uint64_t)v5);
    v73 = *(_QWORD *)(v3 + v18);
    if (v73 >= 2)
    {
      if (v73 - 2 >= 2)
      {
        aBlock.m11 = *(CGFloat *)(v3 + v18);
        goto LABEL_100;
      }
      v74 = sub_164DA8();
    }
    else
    {
      v74 = objc_retain(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                              + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
    }
    sub_170560();
    swift_bridgeObjectRelease(v72);

    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_showPaginatingWebView) & 1) == 0
      || (v75 = v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding,
          swift_beginAccess(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, v140, 0, 0), (Strong = swift_unknownObjectWeakLoadStrong(v75)) == 0))
    {
LABEL_88:
      if (qword_3B56A0 != -1)
        swift_once(&qword_3B56A0, sub_52620);
      if (byte_3B6F18 == 1)
      {
        v123 = v5[2];
        if (v123)
        {
          swift_bridgeObjectRetain(v5);
          v124 = 0;
          do
          {
            v125 = &v5[2 * v124++];
            *(_OWORD *)&aBlock.m11 = *((_OWORD *)v125 + 2);
            v126 = *(id *)&aBlock.m11;
            sub_172E54((void **)&aBlock, v3);

          }
          while (v123 != v124);
          goto LABEL_94;
        }
      }
LABEL_95:
      swift_bridgeObjectRelease(v5);
      goto LABEL_96;
    }
    v77 = Strong;
    v78 = *(_QWORD *)(v75 + 8);
    ObjectType = swift_getObjectType(Strong);
    v6 = (__objc2_ivar *)(*(uint64_t (**)(uint64_t, uint64_t))(v78 + 8))(ObjectType, v78);
    v81 = v80;
    swift_unknownObjectRelease(v77);
    v82 = swift_getObjectType(v6);
    v83 = (*(double (**)(uint64_t, uint64_t))(v81 + 48))(v82, v81);
    v85 = v84;
    *(_QWORD *)&v86 = swift_unknownObjectRelease(v6).n128_u64[0];
    v87 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingHostView;
    objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingHostView), "removeFromSuperview", v86);
    v69 = *(double *)(v3 + v131);
    if (*(_QWORD *)&v69 >= 2uLL)
    {
      if ((unint64_t)(*(_QWORD *)&v69 - 2) >= 2)
        goto LABEL_99;
      v88 = sub_164DA8();
    }
    else
    {
      v88 = objc_retain(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                              + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
    }
    v89 = v88;
    v6 = &stru_3AC000;
    objc_msgSend(v88, "bounds");
    v91 = v90;
    v93 = v92;
    v95 = v94;
    v97 = v96;

    v142.origin.x = v91;
    v142.origin.y = v93;
    v142.size.width = v95;
    v142.size.height = v97;
    MidX = CGRectGetMidX(v142);
    v69 = *(double *)(v3 + v131);
    if (*(_QWORD *)&v69 >= 2uLL)
    {
      if ((unint64_t)(*(_QWORD *)&v69 - 2) >= 2)
        goto LABEL_99;
      v99 = sub_164DA8();
    }
    else
    {
      v99 = objc_retain(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                              + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
    }
    v100 = v99;
    objc_msgSend(v99, "bounds");
    v102 = v101;
    v104 = v103;
    v106 = v105;
    v108 = v107;

    v143.origin.x = v102;
    v143.origin.y = v104;
    v143.size.width = v106;
    v143.size.height = v108;
    v109 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", MidX - v83 * 0.5, CGRectGetMidY(v143) - v85 * 0.5, v83, v85);
    v110 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    objc_msgSend(v109, "setBackgroundColor:", v110);

    v111 = objc_msgSend(v109, "layer");
    objc_msgSend(v111, "setBorderWidth:", 4.0);

    v6 = (__objc2_ivar *)objc_msgSend(v109, "layer");
    v112 = CGColorCreateGenericRGB(0.0, 255.0, 0.0, 128.0);
    -[__objc2_ivar setBorderColor:](v6, "setBorderColor:", v112);

    v69 = *(double *)(v3 + v131);
    if (*(_QWORD *)&v69 < 2uLL)
    {
      v113 = objc_retain(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                               + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
LABEL_83:
      v114 = v113;
      objc_msgSend(v113, "addSubview:", v109);

      v115 = (uint64_t *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService);
      swift_beginAccess(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService, v139, 0, 0);
      v116 = *v115;
      v6 = (__objc2_ivar *)v115[1];
      v117 = swift_getObjectType(v116);
      offs = v6[3].offs;
      v119 = swift_unknownObjectRetain(v116);
      ((void (*)(id, uint64_t, __objc2_ivar *, __n128))offs)(v109, v117, v6, v119);
      swift_unknownObjectRelease(v116);
      v69 = *(double *)(v3 + v131);
      if (*(_QWORD *)&v69 < 2uLL)
      {
        v120 = objc_retain(*(id *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                                 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
LABEL_87:
        v121 = v120;
        objc_msgSend(v120, "bringSubviewToFront:", v109);

        CATransform3DMakeScale(&aBlock, 0.5, 0.5, 1.0);
        objc_msgSend(v109, "setTransform3D:", &aBlock);
        v122 = *(void **)(v3 + v87);
        *(_QWORD *)(v3 + v87) = v109;

        goto LABEL_88;
      }
      if ((unint64_t)(*(_QWORD *)&v69 - 2) < 2)
      {
        v120 = sub_164DA8();
        goto LABEL_87;
      }
      goto LABEL_99;
    }
    if ((unint64_t)(*(_QWORD *)&v69 - 2) < 2)
    {
      v113 = sub_164DA8();
      goto LABEL_83;
    }
LABEL_99:
    aBlock.m11 = v69;
LABEL_100:
    v7 = v128;
    while (1)
    {
      v7 = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v7, &aBlock, v7, &type metadata for UInt);
      __break(1u);
LABEL_102:
      *(_QWORD *)&aBlock.m11 = v6;
    }
  }
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v136);
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_0, v25, v26, "No added or removed views -- bailing out on updating current views", v27, 2u);
    swift_slowDealloc(v27, -1, -1);
  }

  if (qword_3B56A0 != -1)
    goto LABEL_98;
LABEL_17:
  if (byte_3B6F18 != 1)
    goto LABEL_95;
  v28 = v5[2];
  if (!v28)
    goto LABEL_95;
  swift_bridgeObjectRetain(v5);
  v29 = 0;
  do
  {
    v30 = &v5[2 * v29++];
    *(_OWORD *)&aBlock.m11 = *((_OWORD *)v30 + 2);
    v31 = *(id *)&aBlock.m11;
    sub_172E54((void **)&aBlock, v3);

  }
  while (v28 != v29);
LABEL_94:
  swift_bridgeObjectRelease_n(v5, 2);
LABEL_96:
  sub_17043C(v3);
}

void sub_16C170(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27[3];
  uint64_t v28;
  _BYTE v29[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll) = 0;
    v6 = Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
    swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, v27, 0, 0);
    v7 = swift_unknownObjectWeakLoadStrong(v6);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)(v6 + 8);
      ObjectType = swift_getObjectType(v7);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
      v13 = v12;
      swift_unknownObjectRelease(v8);
      v14 = *(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView];
      v15 = swift_getObjectType(v11);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 120))(v15, v13);
      v17 = (*(double (**)(uint64_t, uint64_t))(v13 + 64))(v15, v13);
      v18 = *(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8];
      v19 = swift_getObjectType(*(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider]);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v19, v18);
      sub_16FD2C(v14, v16, v11, v13, v20 & 1, v17);

      swift_unknownObjectRelease(v11);
    }
    else
    {

    }
  }
  else
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    v21 = type metadata accessor for Logger(0);
    sub_555F0(v21, (uint64_t)qword_3BE450);
    v22 = swift_retain(a2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v27[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v28 = sub_33524(0xD000000000000023, 0x80000000002CE350, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v25 + 4);
      swift_release();
      _os_log_impl(&dword_0, v23, v24, "CurrentTheme updated but %s is not alive to show it!", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
}

void sub_16C430(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t Strong;
  char *v14;
  uint64_t ObjectType;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char v53[24];
  uint64_t v54;
  _BYTE v55[16];
  char v56[32];

  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  swift_beginAccess(a2 + 16, v56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v14 = (char *)Strong;
    if (v12)
    {
      sub_165C2C(v12);
      ObjectType = swift_getObjectType(a3);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(ObjectType, a4) & 1) != 0)
      {
        v16 = *(_QWORD *)&v14[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController];
        if (*(uint64_t *)(v16 + 24) >= 1)
          *(_QWORD *)(v16 + 24) = 0;
        *(_OWORD *)(v16 + 40) = 0u;
        *(_OWORD *)(v16 + 56) = 0u;
        *(_OWORD *)(v16 + 80) = 0u;
        *(_OWORD *)(v16 + 96) = 0u;
        *(_OWORD *)(v16 + 112) = 0u;
        *(_BYTE *)(v16 + 128) = 1;
        swift_beginAccess(v16 + 184, &v54, 1, 0);
        swift_unknownObjectWeakAssign(v16 + 184, 0);
        sub_10A54C();
        *(_BYTE *)(v16 + 129) = 1;
        v17 = &v14[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
        swift_beginAccess(&v14[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider], v53, 0, 0);
        v18 = swift_unknownObjectWeakLoadStrong(v17);
        if (v18)
        {
          v19 = v18;
          v20 = *((_QWORD *)v17 + 1);
          v21 = swift_getObjectType(v18);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 16))(&v47, v21, v20);
          swift_unknownObjectRelease(v19);
          v22 = v47;
          v23 = BYTE1(v47);
          v24 = BYTE2(v47);
          v25 = v48;
          v45 = v50;
          v46 = v49;
          v26 = v51;
          v27 = v52;
          v28 = sub_1622D4();
          LOBYTE(v47) = v22;
          BYTE1(v47) = v23;
          BYTE2(v47) = v24;
          v48 = v25;
          v49 = v46;
          v50 = v45;
          v51 = v26;
          v52 = v27;
          sub_4B1A8((uint64_t)&v47);

          swift_bridgeObjectRelease(v25);
        }
        sub_165584();
      }

    }
    else
    {
      if (qword_3B57C8 != -1)
        swift_once(&qword_3B57C8, sub_1614F8);
      v34 = sub_555F0(v8, (uint64_t)qword_3BE450);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v34, v8);
      v35 = v14;
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(12, -1);
        v39 = swift_slowAlloc(32, -1);
        v47 = v39;
        *(_DWORD *)v38 = 136446210;
        v40 = *(_QWORD *)&v35[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout];
        v41 = v39;
        v42 = 0xE800000000000000;
        v43 = 0x6465767265736572;
        switch(v40)
        {
          case 0:
            goto LABEL_24;
          case 1:
            v42 = 0xE500000000000000;
            v43 = 0x6465676170;
            goto LABEL_24;
          case 2:
            v43 = 0x6C61636974726576;
            goto LABEL_24;
          case 3:
            v42 = 0xEA00000000006C61;
            v43 = 0x746E6F7A69726F68;
LABEL_24:
            v54 = sub_33524(v43, v42, &v47);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v38 + 4);
            swift_bridgeObjectRelease(v42);

            swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v41, -1, -1);
            swift_slowDealloc(v38, -1, -1);

            goto LABEL_25;
          default:

            type metadata accessor for BookLayoutMode(0);
            v54 = v40;
            _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v44, &v54, v44, &type metadata for UInt);
            __break(1u);
            return;
        }
      }

LABEL_25:
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    sub_555F0(v8, (uint64_t)qword_3BE450);
    v29 = swift_retain(a2);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(12, -1);
      v33 = swift_slowAlloc(32, -1);
      v47 = v33;
      *(_DWORD *)v32 = 136315138;
      v54 = sub_33524(0xD000000000000023, 0x80000000002CE350, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v32 + 4);
      swift_release();
      _os_log_impl(&dword_0, v30, v31, "LayoutMode updated but %s is not alive to show it!", v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {
      swift_release();
    }

  }
}

void sub_16C99C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _DWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[3];

  v3 = *a1;
  v4 = a2 + 16;
  if (qword_3B57C8 != -1)
    swift_once(&qword_3B57C8, sub_1614F8);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_555F0(v5, (uint64_t)qword_3BE450);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (_DWORD *)swift_slowAlloc(12, -1);
    v17[0] = swift_slowAlloc(32, -1);
    *v9 = 136446210;
    __asm { BR              X9 }
  }

  swift_beginAccess(v4, v17, 0, 0);
  if (swift_unknownObjectWeakLoadStrong(v4))
    __asm { BR              X9 }
  v10 = swift_retain(a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v16 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_33524(0xD000000000000023, 0x80000000002CE350, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v13 + 4);
    swift_release();
    _os_log_impl(&dword_0, v11, v12, "PageNavigationStyle updated but %s is not alive to show it!", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

  }
  else
  {

    swift_release();
  }
}

void sub_16CED8(char a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer))
    __asm { BR              X10 }
  __asm { BR              X10 }
}

id sub_16D070()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id result;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(1701736302, 0xE400000000000000, 1819440483, 0xE400000000000000, 0);
  swift_bridgeObjectRelease(0xE400000000000000);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isCurlPanRecognizerEnabled) = v2 & 1;
  result = *(id *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer);
  if (result)
    return objc_msgSend(result, *(SEL *)(v1 + 408));
  return result;
}

void sub_16D114(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27[3];
  uint64_t v28;
  _BYTE v29[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
    swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, v27, 0, 0);
    v7 = swift_unknownObjectWeakLoadStrong(v6);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)(v6 + 8);
      ObjectType = swift_getObjectType(v7);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
      v13 = v12;
      swift_unknownObjectRelease(v8);
      v14 = *(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView];
      v15 = swift_getObjectType(v11);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 120))(v15, v13);
      v17 = (*(double (**)(uint64_t, uint64_t))(v13 + 64))(v15, v13);
      v18 = *(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8];
      v19 = swift_getObjectType(*(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider]);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v19, v18);
      sub_16FD2C(v14, v16, v11, v13, v20 & 1, v17);

      swift_unknownObjectRelease(v11);
    }
    else
    {

    }
  }
  else
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    v21 = type metadata accessor for Logger(0);
    sub_555F0(v21, (uint64_t)qword_3BE450);
    v22 = swift_retain(a2);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v27[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v28 = sub_33524(0xD000000000000023, 0x80000000002CE350, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v25 + 4);
      swift_release();
      _os_log_impl(&dword_0, v23, v24, "textZoomFactor (delayed) updated but %s is not alive to show it!", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
}

double sub_16D3C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE *Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll] = 0;

  }
  else
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    v6 = type metadata accessor for Logger(0);
    sub_555F0(v6, (uint64_t)qword_3BE450);
    v7 = swift_retain(a2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v13 = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = sub_33524(0xD000000000000023, 0x80000000002CE350, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v10 + 4);
      swift_release();
      _os_log_impl(&dword_0, v8, v9, "textZoomFactor updated but %s is not alive to show it!", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_16D594(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  void (*v11)(_QWORD, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t Strong;
  void *v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  _QWORD *v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  void (*v42)(_QWORD, _QWORD);
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  void *v82;
  __n128 v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(_QWORD, _QWORD);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _OWORD v104[7];
  _OWORD v105[2];
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  _OWORD v113[2];
  _OWORD v114[7];
  _OWORD v115[2];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  _OWORD v123[2];
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  _OWORD v133[2];
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  _OWORD v141[3];

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v101 = *(_QWORD *)(v8 - 8);
  v102 = v8;
  v9 = __chkstk_darwin(v8);
  v100 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for DispatchTime(0, v9);
  v11 = *(void (**)(_QWORD, _QWORD))(v103 - 8);
  __chkstk_darwin(v103);
  v98 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v99 = (char *)&v92 - v14;
  v15 = a1[5];
  v16 = a1[7];
  v132 = a1[6];
  v133[0] = v16;
  *(_OWORD *)((char *)v133 + 10) = *(__int128 *)((char *)a1 + 122);
  v17 = a1[1];
  v18 = a1[3];
  v128 = a1[2];
  v129 = v18;
  v19 = a1[3];
  v20 = a1[5];
  v130 = a1[4];
  v131 = v20;
  v21 = a1[1];
  v126 = *a1;
  v127 = v21;
  v22 = a1[7];
  v140 = v132;
  v141[0] = v22;
  *(_OWORD *)((char *)v141 + 10) = *(__int128 *)((char *)a1 + 122);
  v136 = v128;
  v137 = v19;
  v138 = v130;
  v139 = v15;
  v134 = v126;
  v135 = v17;
  swift_beginAccess(a2 + 16, &v125, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v24 = (void *)Strong;
    v116 = 0uLL;
    LOBYTE(v117) = 1;
    sub_161A90(0, (uint64_t)&v116, 0, 1, 2);
    v96 = v5;
    v97 = v4;
    v95 = v7;
    if ((BYTE9(v133[1]) & 1) != 0 || BYTE8(v133[1]) != 1)
    {
      v25 = *(_QWORD *)((_BYTE *)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) & 0xFFFFFFFFFFFFFFFELL;
      if (v25 == 2)
      {
        v94 = v11;
        v26 = (char *)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_log;
        sub_49BD8((uint64_t)&v126);
        v27 = sub_49BD8((uint64_t)&v126);
        v28 = Logger.logObject.getter(v27);
        v29 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v28, v29))
        {
          v30 = swift_slowAlloc(18, -1);
          v93 = (uint64_t)v26;
          v31 = v30;
          v32 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v114[0] = v32;
          *(_DWORD *)v31 = 136315394;
          v122 = v132;
          v123[0] = v133[0];
          *(_OWORD *)((char *)v123 + 10) = *(_OWORD *)((char *)v133 + 10);
          v118 = v128;
          v119 = v129;
          v120 = v130;
          v121 = v131;
          v116 = v126;
          v117 = v127;
          v33 = Location.description.getter();
          v35 = v34;
          *(_QWORD *)&v116 = sub_33524(v33, v34, (uint64_t *)v114);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 8, v31 + 4);
          swift_bridgeObjectRelease(v35);
          sub_49900((uint64_t)&v126);
          sub_49900((uint64_t)&v126);
          *(_WORD *)(v31 + 12) = 1024;
          LODWORD(v116) = 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 4, v31 + 14);
          _os_log_impl(&dword_0, v28, v29, "#requestedPageChange #uberScroll adjustScrollOffsetsFor: %s #requestedPageChange %{BOOL}d", (uint8_t *)v31, 0x12u);
          swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v32, -1, -1);
          swift_slowDealloc(v31, -1, -1);

        }
        else
        {

          sub_49900((uint64_t)&v126);
          sub_49900((uint64_t)&v126);
        }
        v122 = v132;
        v123[0] = v133[0];
        *(_OWORD *)((char *)v123 + 10) = *(_OWORD *)((char *)v133 + 10);
        v118 = v128;
        v119 = v129;
        v120 = v130;
        v121 = v131;
        v116 = v126;
        v117 = v127;
        if ((sub_13CFD8(&v116) & 1) != 0)
        {
          sub_13D47C();
          v11 = v94;
        }
        else
        {
          v114[6] = v140;
          v115[0] = v141[0];
          *(_OWORD *)((char *)v115 + 10) = *(_OWORD *)((char *)v141 + 10);
          v114[2] = v136;
          v114[3] = v137;
          v114[4] = v138;
          v114[5] = v139;
          v114[0] = v134;
          v114[1] = v135;
          address(of:)(v114);
          v51 = (uint64_t)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation;
          sub_49AD8((uint64_t)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation, (uint64_t)&v116);
          sub_49AD8((uint64_t)v114, v51);
          sub_49BD8((uint64_t)&v126);
          sub_49B44((uint64_t *)&v116);
          sub_49BD8((uint64_t)&v126);
          v52 = sub_49BD8((uint64_t)&v126);
          v53 = Logger.logObject.getter(v52);
          v54 = static os_log_type_t.error.getter();
          v55 = os_log_type_enabled(v53, v54);
          v11 = v94;
          if (v55)
          {
            v56 = (uint8_t *)swift_slowAlloc(12, -1);
            v57 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v104[0] = v57;
            *(_DWORD *)v56 = 136315138;
            v93 = (uint64_t)(v56 + 4);
            v112 = v132;
            v113[0] = v133[0];
            *(_OWORD *)((char *)v113 + 10) = *(_OWORD *)((char *)v133 + 10);
            v108 = v128;
            v109 = v129;
            v110 = v130;
            v111 = v131;
            v106 = v126;
            v107 = v127;
            v58 = Location.description.getter();
            v60 = v59;
            *(_QWORD *)&v106 = sub_33524(v58, v59, (uint64_t *)v104);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, (char *)&v106 + 8, v93);
            swift_bridgeObjectRelease(v60);
            sub_49900((uint64_t)&v126);
            sub_49900((uint64_t)&v126);
            _os_log_impl(&dword_0, v53, v54, "We failed adjust the scrollView for the location %s -- we're likely showing the wrong location. We will try again on map update", v56, 0xCu);
            swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v57, -1, -1);
            swift_slowDealloc(v56, -1, -1);

          }
          else
          {

            sub_49900((uint64_t)&v126);
            sub_49900((uint64_t)&v126);
          }
        }
LABEL_36:
        v73 = (uint64_t)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_axCurrentLocation;
        sub_49AD8((uint64_t)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_axCurrentLocation, (uint64_t)v114);
        sub_49AD8((uint64_t)v114, (uint64_t)&v116);
        if (sub_49B20((uint64_t)&v116) != 1 && v116 != v126)
        {
          sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
          v93 = static OS_dispatch_queue.main.getter();
          v74 = v98;
          static DispatchTime.now()();
          v75 = v99;
          + infix(_:_:)(v74, 0.15);
          v94 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v11 + 1);
          v94(v74, v103);
          v76 = swift_allocObject(&unk_3849C8, 24, 7);
          swift_unknownObjectWeakInit(v76 + 16, v24);
          v77 = swift_allocObject(&unk_384E08, 162, 7);
          v78 = v130;
          *(_OWORD *)(v77 + 104) = v131;
          v79 = v133[0];
          *(_OWORD *)(v77 + 120) = v132;
          *(_OWORD *)(v77 + 136) = v79;
          *(_OWORD *)(v77 + 146) = *(_OWORD *)((char *)v133 + 10);
          v80 = v126;
          *(_OWORD *)(v77 + 40) = v127;
          v81 = v129;
          *(_OWORD *)(v77 + 56) = v128;
          *(_OWORD *)(v77 + 72) = v81;
          *(_OWORD *)(v77 + 88) = v78;
          *(_QWORD *)(v77 + 16) = v76;
          *(_OWORD *)(v77 + 24) = v80;
          *(_QWORD *)&v108 = sub_177260;
          *((_QWORD *)&v108 + 1) = v77;
          *(_QWORD *)&v106 = _NSConcreteStackBlock;
          *((_QWORD *)&v106 + 1) = 1107296256;
          *(_QWORD *)&v107 = sub_525B8;
          *((_QWORD *)&v107 + 1) = &unk_384E20;
          v82 = _Block_copy(&v106);
          sub_49BD8((uint64_t)&v126);
          v83 = swift_release();
          v84 = v100;
          static DispatchQoS.unspecified.getter(v83);
          *(_QWORD *)&v106 = _swiftEmptyArrayStorage;
          v85 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v86 = sub_319AC(&qword_3B96F0);
          v87 = sub_3DCC0((unint64_t *)&qword_3B8510, &qword_3B96F0, (uint64_t)&protocol conformance descriptor for [A]);
          v88 = v95;
          v89 = v86;
          v90 = v97;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v106, v89, v87, v97, v85);
          v91 = (void *)v93;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v75, v84, v88, v82);
          _Block_release(v82);

          (*(void (**)(char *, uint64_t))(v96 + 8))(v88, v90);
          (*(void (**)(char *, uint64_t))(v101 + 8))(v84, v102);
          v94(v75, v103);
        }
        v104[6] = v140;
        v105[0] = v141[0];
        *(_OWORD *)((char *)v105 + 10) = *(_OWORD *)((char *)v141 + 10);
        v104[2] = v136;
        v104[3] = v137;
        v104[4] = v138;
        v104[5] = v139;
        v104[0] = v134;
        v104[1] = v135;
        address(of:)(v104);
        sub_49AD8(v73, (uint64_t)&v106);
        sub_49AD8((uint64_t)v104, v73);
        sub_49BD8((uint64_t)&v126);
        sub_49B44((uint64_t *)&v106);

        return;
      }
    }
    else
    {
      v25 = *(_QWORD *)((_BYTE *)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) & 0xFFFFFFFFFFFFFFFELL;
    }
    if (v25 != 2)
    {
      v36 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_adjustingForSinglePage;
      v37 = *((unsigned __int8 *)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_adjustingForSinglePage);
      v38 = (char *)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController;
      swift_beginAccess((char *)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, &v124, 0, 0);
      swift_retain(*v38);
      if (sub_1C3B4C())
      {
        swift_release();
        if ((v37 & 1) == 0)
        {
LABEL_11:
          swift_retain_n(*v38, 2);
          v39 = v24;
          v40 = Logger.logObject.getter(v39);
          v41 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v40, v41))
          {
            v42 = (void (*)(_QWORD, _QWORD))v39;
            v43 = swift_slowAlloc(14, -1);
            *(_DWORD *)v43 = 67109376;
            LODWORD(v116) = *((unsigned __int8 *)v24 + v36);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 4, v43 + 4);
            v94 = v42;

            *(_WORD *)(v43 + 8) = 1024;
            if (sub_1C3B4C())
              v44 = 1;
            else
              v44 = sub_1C3CB4() & 1;
            LODWORD(v116) = v44;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, (char *)&v116 + 4, v43 + 10);
            swift_release();
            _os_log_impl(&dword_0, v40, v41, "Not in scroll layout but forcing layout update\n        adjustingForSinglePage %{BOOL}d !=     layoutController.adjustingForSinglePage %{BOOL}d.", (uint8_t *)v43, 0xEu);
            swift_slowDealloc(v43, -1, -1);
          }
          else
          {

            swift_release();
          }

          CurrentValueSubject.value.getter(&v116);
          v71 = v116;
          v72 = *((_QWORD *)&v117 + 1);
          swift_unknownObjectRelease(*((_QWORD *)&v116 + 1));
          swift_unknownObjectRelease(v72);
          sub_16B2D4(v71, 1);
          swift_release();
          swift_bridgeObjectRelease(v71);
          goto LABEL_36;
        }
      }
      else
      {
        v61 = sub_1C3CB4() & 1;
        swift_release();
        if (v37 != v61)
          goto LABEL_11;
      }
    }
    v62 = (uint64_t)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation;
    sub_49AD8((uint64_t)v24 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation, (uint64_t)v114);
    sub_49AD8((uint64_t)v114, (uint64_t)&v116);
    if (sub_49B20((uint64_t)&v116) != 1)
    {
      sub_49BD8((uint64_t)&v126);
      v63 = sub_49BD8((uint64_t)&v126);
      v64 = Logger.logObject.getter(v63);
      v65 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc(12, -1);
        v67 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v104[0] = v67;
        *(_DWORD *)v66 = 136315138;
        v94 = (void (*)(_QWORD, _QWORD))(v66 + 4);
        v112 = v132;
        v113[0] = v133[0];
        *(_OWORD *)((char *)v113 + 10) = *(_OWORD *)((char *)v133 + 10);
        v108 = v128;
        v109 = v129;
        v110 = v130;
        v111 = v131;
        v106 = v126;
        v107 = v127;
        v68 = Location.description.getter();
        v70 = v69;
        *(_QWORD *)&v106 = sub_33524(v68, v69, (uint64_t *)v104);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, (char *)&v106 + 8, v94);
        swift_bridgeObjectRelease(v70);
        sub_49900((uint64_t)&v126);
        sub_49900((uint64_t)&v126);
        _os_log_impl(&dword_0, v64, v65, "We have a failed location but we've updated to %s -- clearing failed location", v66, 0xCu);
        swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v67, -1, -1);
        swift_slowDealloc(v66, -1, -1);

      }
      else
      {

        sub_49900((uint64_t)&v126);
        sub_49900((uint64_t)&v126);
      }
      sub_555CC((uint64_t)v104);
      sub_49AD8(v62, (uint64_t)&v106);
      sub_49AD8((uint64_t)v104, v62);
      sub_49B44((uint64_t *)&v106);
    }
    goto LABEL_36;
  }
  if (qword_3B57C8 != -1)
    swift_once(&qword_3B57C8, sub_1614F8);
  v45 = type metadata accessor for Logger(0);
  sub_555F0(v45, (uint64_t)qword_3BE450);
  v46 = swift_retain(a2);
  v47 = Logger.logObject.getter(v46);
  v48 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc(12, -1);
    v50 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v116 = v50;
    *(_DWORD *)v49 = 136315138;
    *(_QWORD *)&v114[0] = sub_33524(0xD000000000000023, 0x80000000002CE350, (uint64_t *)&v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, (char *)v114 + 8, v49 + 4);
    swift_release();
    _os_log_impl(&dword_0, v47, v48, "#currentLoc updated but %s is not alive to show it!", v49, 0xCu);
    swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v49, -1, -1);
  }
  else
  {
    swift_release();
  }

}

void sub_16E32C(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  void (*v17)(__int128 *, uint64_t, uint64_t, __n128);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  _OWORD v39[7];
  _OWORD v40[2];
  char v41[32];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = BookContentViewController.bkaxLoaderForCurrentLocation()();
    if (v6)
    {
      v8 = v6;
      v9 = v7;
      ObjectType = swift_getObjectType(v6);
      v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8];
      v12 = swift_getObjectType(*(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider]);
      v13 = a2[7];
      v39[6] = a2[6];
      v40[0] = v13;
      *(_OWORD *)((char *)v40 + 10) = *(_OWORD *)((char *)a2 + 122);
      v14 = a2[3];
      v39[2] = a2[2];
      v39[3] = v14;
      v15 = a2[5];
      v39[4] = a2[4];
      v39[5] = v15;
      v16 = a2[1];
      v39[0] = *a2;
      v39[1] = v16;
      *(double *)v39 = (double)(*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v11 + 72))(v39, v12, v11);
      BYTE8(v39[0]) = 0;
      v17 = *(void (**)(__int128 *, uint64_t, uint64_t, __n128))(v9 + 320);
      v37 = ObjectType;
      ((void (*)(_OWORD *, uint64_t, uint64_t))v17)(v39, ObjectType, v9);
      v18 = &v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService];
      swift_beginAccess(&v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService], v39, 0, 0);
      v19 = *(_QWORD *)v18;
      v20 = *((_QWORD *)v18 + 1);
      v21 = swift_getObjectType(*(_QWORD *)v18);
      v22 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 8);
      v23 = swift_unknownObjectRetain(v19);
      v22(v21, v20, v23);
      swift_unknownObjectRelease(v19);
      v38 = *a2;
      v25 = (uint64_t)BookPaginationEntity.bookmarks(for:)((uint64_t *)&v38, v24);
      swift_release();
      if ((unint64_t)v25 >> 62)
      {
        if (v25 < 0)
          v36 = v25;
        else
          v36 = v25 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v25);
        v26 = _CocoaArrayWrapper.endIndex.getter(v36);
        swift_bridgeObjectRelease(v25);
      }
      else
      {
        v26 = *(_QWORD *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFF8));
      }
      v27 = swift_bridgeObjectRelease(v25);
      *(_QWORD *)&v38 = v26 != 0;
      BYTE8(v38) = 3;
      v17(&v38, v37, v9, v27);
      v28 = objc_msgSend(v5, "view");
      if (v28)
      {
        v29 = v28;
        objc_msgSend(v28, "frame");
        v31 = v30;

        *(_QWORD *)&v38 = v31;
        BYTE8(v38) = 12;
        ((void (*)(__int128 *, uint64_t, uint64_t))v17)(&v38, v37, v9);
        v32 = objc_msgSend(v5, "view");
        if (v32)
        {
          v33 = v32;
          objc_msgSend(v32, "frame");
          v35 = v34;

          *(_QWORD *)&v38 = v35;
          BYTE8(v38) = 11;
          ((void (*)(__int128 *, uint64_t, uint64_t))v17)(&v38, v37, v9);

          swift_unknownObjectRelease(v8);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {

    }
  }
}

uint64_t BookContentViewController.bkaxLoaderForCurrentLocation()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(_OWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _OWORD v14[7];
  _OWORD v15[2];
  _BYTE v16[24];
  _OWORD v17[7];
  _OWORD v18[2];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v16, 0, 0);
  v2 = *(_QWORD *)(*v1 + 16);
  v3 = *(_QWORD *)(*v1 + 24);
  ObjectType = swift_getObjectType(v2);
  v5 = *(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, __n128))(v3 + 16);
  v6 = swift_unknownObjectRetain(v2);
  v5(v14, ObjectType, v3, v6);
  swift_unknownObjectRelease(v2);
  v17[6] = v14[6];
  v18[0] = v15[0];
  *(_OWORD *)((char *)v18 + 10) = *(_OWORD *)((char *)v15 + 10);
  v17[2] = v14[2];
  v17[3] = v14[3];
  v17[4] = v14[4];
  v17[5] = v14[5];
  v17[0] = v14[0];
  v17[1] = v14[1];
  sub_49900((uint64_t)v17);
  v7 = *(_QWORD *)&v17[0];
  swift_retain(*v1);
  v8 = BookContentLayoutController.contentLoader(ordinal:)(v7);
  swift_release();
  if (!v8)
  {
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v12 = 134217984;
      *(_QWORD *)&v14[0] = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v14, (char *)v14 + 8, v12 + 4);
      _os_log_impl(&dword_0, v10, v11, "AX: Failed to get loader for ordinal %ld", v12, 0xCu);
      swift_slowDealloc(v12, -1, -1);
    }

  }
  return v8;
}

double sub_16E790(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13[2];
  char v14;
  uint64_t v15;
  _BYTE v16[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v13[0] = 0;
    v13[1] = 0;
    v14 = 1;
    sub_161A90(0, (uint64_t)v13, 0, 1, 2);

  }
  else
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    v7 = type metadata accessor for Logger(0);
    sub_555F0(v7, (uint64_t)qword_3BE450);
    v8 = swift_retain(a2);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v13[0] = v12;
      *(_DWORD *)v11 = 136315138;
      v15 = sub_33524(0xD000000000000023, 0x80000000002CE350, v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16, v11 + 4);
      swift_release();
      _os_log_impl(&dword_0, v9, v10, "usePhysicalPages updated but %s is not alive to show it!", v11, 0xCu);
      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_16E978(char *a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t Strong;
  NSObject *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(__int128 *, uint64_t, uint64_t);
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  _OWORD v32[7];
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  _BYTE v42[24];
  _OWORD v43[7];
  _OWORD v44[2];
  _BYTE v45[24];

  v3 = *a1;
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v45, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (!Strong)
  {
    if (qword_3B57C8 != -1)
      swift_once(&qword_3B57C8, sub_1614F8);
    v27 = type metadata accessor for Logger(0);
    sub_555F0(v27, (uint64_t)qword_3BE450);
    v28 = swift_retain(a2);
    v6 = Logger.logObject.getter(v28);
    v29 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v6, v29))
    {

      swift_release();
      return;
    }
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    v31 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v43[0] = v31;
    *(_DWORD *)v30 = 136315138;
    *(_QWORD *)&v34 = sub_33524(0xD000000000000023, 0x80000000002CE350, (uint64_t *)v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8, v30 + 4);
    swift_release();
    _os_log_impl(&dword_0, v6, v29, "paginationComplete updated but %s is not alive to show it!", v30, 0xCu);
    swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1, -1);
    swift_slowDealloc(v30, -1, -1);
LABEL_11:

    return;
  }
  v6 = Strong;
  if ((v3 & 1) == 0)
    goto LABEL_11;
  v34 = 0uLL;
  LOBYTE(v35) = 1;
  sub_161A90(0, (uint64_t)&v34, 0, 1, 2);
  v7 = *(uint64_t *)((char *)&v6[1].isa + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider);
  ObjectType = swift_getObjectType(*(Class *)((char *)&v6->isa
                                            + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider));
  v9 = (uint64_t *)((char *)v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService);
  swift_beginAccess((char *)v6 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService, v42, 0, 0);
  v11 = *v9;
  v10 = v9[1];
  swift_getObjectType(v11);
  swift_unknownObjectRetain(v11);
  Paginating.lastLocation.getter(v10, (uint64_t)&v34);
  swift_unknownObjectRelease(v11);
  v43[6] = v40;
  v44[0] = v41[0];
  *(_OWORD *)((char *)v44 + 10) = *(_OWORD *)((char *)v41 + 10);
  v43[2] = v36;
  v43[3] = v37;
  v43[4] = v38;
  v43[5] = v39;
  v43[0] = v34;
  v43[1] = v35;
  v32[6] = v40;
  v33[0] = v41[0];
  *(_OWORD *)((char *)v33 + 10) = *(_OWORD *)((char *)v41 + 10);
  v32[2] = v36;
  v32[3] = v37;
  v32[4] = v38;
  v32[5] = v39;
  v32[0] = v34;
  v32[1] = v35;
  v12 = (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 72))(v32, ObjectType, v7);
  sub_49900((uint64_t)v43);
  v13 = BookContentViewController.bkaxLoaderForCurrentLocation()();
  v15 = v13;
  if (!v13)
    goto LABEL_11;
  v16 = v14;
  v17 = swift_getObjectType(v13);
  *(double *)&v34 = (double)v12;
  BYTE8(v34) = 1;
  v18 = *(void (**)(__int128 *, uint64_t, uint64_t))(v16 + 320);
  v18(&v34, v17, v16);
  v19 = -[NSObject view](v6, "view");
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v19, "frame");
    v22 = v21;

    *(_QWORD *)&v34 = v22;
    BYTE8(v34) = 12;
    v18(&v34, v17, v16);
    v23 = -[NSObject view](v6, "view");
    if (v23)
    {
      v24 = v23;
      objc_msgSend(v23, "frame");
      v26 = v25;

      *(_QWORD *)&v34 = v26;
      BYTE8(v34) = 11;
      v18(&v34, v17, v16);

      swift_unknownObjectRelease(v15);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_16ED54(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[24];

  v3 = *a1;
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  if (swift_unknownObjectWeakLoadStrong(v4))
    __asm { BR              X9 }
  if (qword_3B57C8 != -1)
    swift_once(&qword_3B57C8, sub_1614F8);
  v5 = type metadata accessor for Logger(0);
  sub_555F0(v5, (uint64_t)qword_3BE450);
  v6 = swift_retain(a2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v12 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = sub_33524(0xD000000000000023, 0x80000000002CE350, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v9 + 4);
    swift_release();
    _os_log_impl(&dword_0, v7, v8, "layoutState updated but %s is not alive to show it!", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    swift_release();
  }

}

double sub_16EF74(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t Strong;
  _BYTE *v5;
  void *v6;
  uint64_t v7;
  double result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = a2 + 16;
  v3 = *a1 ^ 1;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    v6 = (void *)*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isHandlingPageDrag);
    v5[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isHandlingPageDrag] = v3 & 1;
    sub_162358(v6);

  }
  swift_beginAccess(v2, &v11, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v2);
  if (v7)
  {
    v9 = (void *)v7;
    v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController);
    swift_retain(v10);

    *(_BYTE *)(v10 + 290) = v3 & 1;
    sub_10AC8C();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_16F038(_BYTE *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  char *v10;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];

  if (*a1 == 2)
  {
    v2 = a2 + 16;
    swift_beginAccess(a2 + 16, v14, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v2);
    if (Strong)
    {
      v5 = (void *)Strong;
      v6 = Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider;
      swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider, v13, 0, 0);
      v7 = swift_unknownObjectWeakLoadStrong(v6);
      v8 = *(_QWORD *)(v6 + 8);

      if (v7)
      {
        ObjectType = swift_getObjectType(v7);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 64))(ObjectType, v8) & 1) != 0)
        {
          swift_beginAccess(v2, v12, 0, 0);
          v10 = (char *)swift_unknownObjectWeakLoadStrong(v2);
          *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
          if (v10)
          {
            v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController];
            swift_retain(v11);

            *(_BYTE *)(v11 + 16) = 1;
            swift_release(v11);
          }
        }
        else
        {
          *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
        }
      }
    }
  }
  return result;
}

void sub_16F144(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void **aBlock;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  id (*v18)();
  uint64_t v19;
  char v20[24];
  char v21[24];
  char v22[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (_BYTE *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels);
    swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels, v21, 1, 0);
    *v6 = a2 & 1;
    aBlock = 0;
    v15 = 0;
    LOBYTE(v16) = 1;
    sub_161A90(0, (uint64_t)&aBlock, 0, 1, 2);

  }
  swift_beginAccess(v3, v20, 0, 0);
  v7 = swift_unknownObjectWeakLoadStrong(v3);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = (void *)objc_opt_self(UIView);
    v10 = swift_allocObject(&unk_384EF8, 24, 7);
    *(_QWORD *)(v10 + 16) = v8;
    v18 = sub_177368;
    v19 = v10;
    aBlock = _NSConcreteStackBlock;
    v15 = 1107296256;
    v16 = sub_525B8;
    v17 = &unk_384F10;
    v11 = _Block_copy(&aBlock);
    v12 = v19;
    v13 = v8;
    swift_release(v12);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", 4, v11, 0, 0.15, 0.0);
    _Block_release(v11);

  }
}

id sub_16F2CC(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isFooterVisible) = 0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView), "setAlpha:", 0.0);
}

void sub_16F304()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  objc_msgSend((id)objc_opt_self(NSObject), "cancelPreviousPerformRequestsWithTarget:selector:object:", v0, "cleanupSnapshotView", 0);
  v1 = (void *)objc_opt_self(UIView);
  v2 = swift_allocObject(&unk_384B88, 24);
  *(_QWORD *)(v2 + 16) = v0;
  v12 = sub_176B94;
  v13 = v2;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_525B8;
  v11 = &unk_384BA0;
  v3 = _Block_copy(&v8);
  v4 = v0;
  swift_release();
  v5 = swift_allocObject(&unk_384BD8, 24);
  *(_QWORD *)(v5 + 16) = v4;
  v12 = sub_176B9C;
  v13 = v5;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_525E4;
  v11 = &unk_384BF0;
  v6 = _Block_copy(&v8);
  v7 = v4;
  swift_release();
  objc_msgSend(v1, "animateWithDuration:animations:completion:", v3, v6, 0.2);
  _Block_release(v6);
  _Block_release(v3);
}

void sub_16F470(uint64_t a1, char *a2)
{
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  _QWORD v12[6];

  v3 = Logger.logObject.getter(a1);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, v4, "Removing snapshot view #loadingStatus", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v6 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView;
  objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView], "removeFromSuperview");
  objc_msgSend(*(id *)&a2[v6], "removeFromSuperview");
  v7 = *(void **)&a2[v6];
  *(_QWORD *)&a2[v6] = 0;

  v8 = (void *)objc_opt_self(UIView);
  v9 = swift_allocObject(&unk_384C28, 24);
  *(_QWORD *)(v9 + 16) = a2;
  v12[4] = sub_176BA4;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_525B8;
  v12[3] = &unk_384C40;
  v10 = _Block_copy(v12);
  v11 = a2;
  swift_release();
  objc_msgSend(v8, "animateWithDuration:delay:options:animations:completion:", 0, v10, 0, 0.2, 0.1);
  _Block_release(v10);
}

void sub_16F5F4(uint64_t a1)
{
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout);
  if (v1 < 2)
  {
    v2 = objc_retain(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                           + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
LABEL_5:
    objc_msgSend(v2, "setAlpha:", 1.0, v2);

    return;
  }
  if (v1 - 2 < 2)
  {
    v2 = sub_164DA8();
    goto LABEL_5;
  }
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout);
  type metadata accessor for BookLayoutMode(0);
  v6 = v3;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v4, &v6, v4, &type metadata for UInt);
  __break(1u);
}

id sub_16F6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  uint64_t ObjectType;
  double (*v7)(uint64_t, uint64_t, __n128);
  __n128 v8;
  double v9;
  uint64_t v10;
  double v11;
  double v12;
  double (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  double (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;

  v5 = *(char **)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
  ObjectType = swift_getObjectType(a1);
  v7 = *(double (**)(uint64_t, uint64_t, __n128))(a2 + 96);
  v8 = swift_unknownObjectRetain(a1);
  v9 = v7(ObjectType, a2, v8);
  swift_unknownObjectRelease(a1);
  v10 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout;
  v11 = 0.0;
  v12 = 0.0;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) != 2)
  {
    v13 = *(double (**)(uint64_t, uint64_t, __n128))(a2 + 104);
    v14 = swift_unknownObjectRetain(a1);
    v12 = v13(ObjectType, a2, v14);
    swift_unknownObjectRelease(a1);
  }
  v15 = *(double (**)(uint64_t, uint64_t, __n128))(a2 + 128);
  v16 = swift_unknownObjectRetain(a1);
  v17 = v15(ObjectType, a2, v16);
  swift_unknownObjectRelease(a1);
  if (*(_QWORD *)(v2 + v10) == 2)
  {
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentHostEnvironmentProvider + 8);
    v19 = swift_getObjectType(*(_QWORD *)(v2
                                        + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentHostEnvironmentProvider));
    (*(void (**)(uint64_t, uint64_t))(v18 + 128))(v19, v18);
    v11 = v20;
  }
  v21 = (*(double (**)(uint64_t, uint64_t))(a2 + 72))(ObjectType, a2);
  v22 = (*(double (**)(uint64_t, uint64_t))(a2 + 64))(ObjectType, a2);
  return sub_1748A0(v5, v9, v12, v17, v11, v21, v22);
}

double sub_16F844(char a1, uint64_t a2, char *a3, double result)
{
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  void *object;
  Swift::String v32;
  uint64_t v33;
  double v34;
  Swift::String v35;
  void *v36;
  Swift::String v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  Swift::String v43;
  Swift::String v44;
  id v45;
  void *v46;
  NSString v47;
  double v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _BYTE v56[24];

  if (qword_3B56A0 != -1)
    swift_once(&qword_3B56A0, sub_52620);
  if (byte_3B6F18 == 1 && (a1 & 1) == 0)
  {
    v7 = a2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
    swift_beginAccess(a2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, v56, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v9 = Strong;
      v10 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType(Strong);
      v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      v15 = *(_QWORD *)&a3[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels];
      if ((unint64_t)v15 >> 62)
      {
        if (v15 < 0)
          v9 = *(_QWORD *)&a3[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels];
        else
          v9 = v15 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n(*(_QWORD *)&a3[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels], 2);
        v16 = _CocoaArrayWrapper.endIndex.getter(v9);
        if (v16)
        {
LABEL_8:
          v17 = v16 - 1;
          if (__OFSUB__(v16, 1))
          {
            __break(1u);
          }
          else if ((v15 & 0xC000000000000001) == 0)
          {
            if ((v17 & 0x8000000000000000) != 0)
              goto LABEL_38;
            if (v17 >= *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
            {
              __break(1u);
              goto LABEL_41;
            }
            v18 = *(id *)(v15 + 8 * v17 + 32);
LABEL_13:
            v19 = v18;
            v20 = objc_msgSend(v18, "text", swift_bridgeObjectRelease(v15).n128_f64[0]);

            if (v20)
            {
              v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
              v50 = v22;
              v51 = v21;

              goto LABEL_21;
            }
LABEL_20:
            v50 = 0xE000000000000000;
            v51 = 0;
LABEL_21:
            v54 = 0;
            v55 = 0xE000000000000000;
            v23 = swift_getObjectType(v12);
            v52 = (*(double (**)(uint64_t, uint64_t))(v14 + 80))(v23, v14);
            v53 = v24;
            type metadata accessor for CGSize(0);
            v26 = v25;
            _print_unlocked<A, B>(_:_:)(&v52, &v54, v25, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            v27._countAndFlagsBits = 45;
            v27._object = (void *)0xE100000000000000;
            String.append(_:)(v27);
            v52 = (*(double (**)(uint64_t, uint64_t))(v14 + 48))(v23, v14);
            v53 = v28;
            _print_unlocked<A, B>(_:_:)(&v52, &v54, v26, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
            v29._countAndFlagsBits = 45;
            v29._object = (void *)0xE100000000000000;
            String.append(_:)(v29);
            v52 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 120))(v23, v14));
            v30._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            object = v30._object;
            String.append(_:)(v30);
            swift_bridgeObjectRelease(object);
            v32._countAndFlagsBits = 45;
            v32._object = (void *)0xE100000000000000;
            String.append(_:)(v32);
            v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 136))(v23, v14);
            v35._countAndFlagsBits = Double.description.getter(v33, v34);
            v36 = v35._object;
            String.append(_:)(v35);
            swift_bridgeObjectRelease(v36);
            v37._countAndFlagsBits = 45;
            v37._object = (void *)0xE100000000000000;
            String.append(_:)(v37);
            v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v23, v14);
            v38 = 0xE800000000000000;
            v39 = 0x6465767265736572;
            switch(v9)
            {
              case 0:
                goto LABEL_25;
              case 1:
                v38 = 0xE500000000000000;
                v39 = 0x6465676170;
                goto LABEL_25;
              case 2:
                v39 = 0x6C61636974726576;
                goto LABEL_25;
              case 3:
                v38 = 0xEA00000000006C61;
                v39 = 0x746E6F7A69726F68;
LABEL_25:
                v40 = v38;
                String.append(_:)(*(Swift::String *)&v39);
                swift_bridgeObjectRelease(v38);
                v41 = v54;
                v42 = (void *)v55;
                v54 = v51;
                v55 = v50;
                v43._countAndFlagsBits = 2128928;
                v43._object = (void *)0xE300000000000000;
                String.append(_:)(v43);
                v44._countAndFlagsBits = v41;
                v44._object = v42;
                String.append(_:)(v44);
                swift_bridgeObjectRelease(v42);
                v9 = v55;
                if (!v16)
                {
                  swift_bridgeObjectRelease(v55);
                  *(_QWORD *)&v48 = swift_bridgeObjectRelease(v15).n128_u64[0];
                  goto LABEL_33;
                }
                v17 = v16 - 1;
                if (!__OFSUB__(v16, 1))
                {
                  if ((v15 & 0xC000000000000001) == 0)
                  {
                    if ((v17 & 0x8000000000000000) == 0)
                    {
                      if (v17 < *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8)))
                      {
                        v45 = *(id *)(v15 + 8 * v17 + 32);
LABEL_31:
                        v46 = v45;
                        swift_bridgeObjectRelease(v15);
                        v47 = String._bridgeToObjectiveC()();
                        objc_msgSend(v46, "setText:", v47, swift_bridgeObjectRelease(v9).n128_f64[0]);

LABEL_33:
                        objc_msgSend(a3, "bringSubviewToFront:", *(_QWORD *)&a3[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView], v48);
                        *(_QWORD *)&result = swift_unknownObjectRelease(v12).n128_u64[0];
                        return result;
                      }
LABEL_42:
                      __break(1u);
LABEL_43:
                      type metadata accessor for BookLayoutMode(0);
                      v52 = *(double *)&v9;
                      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v49, &v52, v49, &type metadata for UInt);
                      __break(1u);
                      JUMPOUT(0x16FD1CLL);
                    }
LABEL_41:
                    __break(1u);
                    goto LABEL_42;
                  }
LABEL_39:
                  v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v15);
                  goto LABEL_31;
                }
                __break(1u);
                break;
              default:
                goto LABEL_43;
            }
LABEL_38:
            __break(1u);
            goto LABEL_39;
          }
          v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v15);
          goto LABEL_13;
        }
      }
      else
      {
        v16 = *(_QWORD *)((char *)&dword_10 + (v15 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain_n(*(_QWORD *)&a3[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels], 2);
        if (v16)
          goto LABEL_8;
      }
      swift_bridgeObjectRelease(v15);
      goto LABEL_20;
    }
  }
  return result;
}

void sub_16FD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  char *v6;
  char *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  id v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  CGFloat Width;
  id v56;
  void *v57;
  double v58;
  CGFloat v59;
  double v60;
  CGFloat v61;
  double v62;
  CGFloat v63;
  double v64;
  CGFloat v65;
  CGFloat Height;
  id v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  char v89[48];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98[32];
  CGRect v99;
  CGRect v100;

  v7 = v6;
  if (a2 >= 1)
    v11 = 1;
  else
    v11 = a2;
  if ((a5 & 1) != 0)
    v12 = a2;
  else
    v12 = v11;
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels);
  if (!((unint64_t)v13 >> 62))
  {
    if (*(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)) == v12)
      goto LABEL_10;
    goto LABEL_9;
  }
  if (v13 < 0)
    v77 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels);
  else
    v77 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels));
  v78 = _CocoaArrayWrapper.endIndex.getter(v77);
  swift_bridgeObjectRelease(v13);
  if (v78 != v12)
  {
LABEL_9:
    sub_1A8CF8(v12, a6);
    sub_1A9950(v12);
  }
LABEL_10:
  v14 = &v7[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
  swift_beginAccess(&v7[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider], v98, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v14);
  if (Strong)
  {
    v16 = Strong;
    v80 = a3;
    v81 = a4;
    v17 = *((_QWORD *)v14 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 16))(&v90, ObjectType, v17);
    swift_unknownObjectRelease(v16);
    v19 = BYTE2(v90);
    v20 = v91;
    v21 = v92;
    v22 = v97;
    v83 = v90;
    v87 = BYTE1(v90);
    v85 = v94;
    v86 = v93;
    v84 = v95;
    v88 = v96;
    v23 = BookThemeEntity.hasDarkBackground.getter();
    v24 = 1;
    if ((v23 & 1) != 0)
      v24 = 2;
    v82 = v24;
    v25 = sub_319AC((uint64_t *)&unk_3B8440);
    inited = swift_initStackObject(v25, v89);
    *(_OWORD *)(inited + 16) = xmmword_2E6690;
    *(_QWORD *)(inited + 32) = sub_164D9C();
    v27 = sub_164DA8();
    *(_QWORD *)(inited + 40) = v27;
    v90 = inited;
    specialized Array._endMutation()(v27);
    v28 = v90;
    v29 = v90 & 0xC000000000000001;
    v79 = v7;
    if ((v90 & 0xC000000000000001) != 0)
    {
      v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v90);
    }
    else
    {
      if (*(_QWORD *)((char *)&dword_10 + (v90 & 0xFFFFFFFFFFFFF8)) < 2uLL)
      {
        __break(1u);
        goto LABEL_34;
      }
      v30 = *(id *)(v90 + 32);
    }
    v31 = v30;
    LOBYTE(v90) = v83;
    BYTE1(v90) = v87;
    BYTE2(v90) = v19;
    v91 = v20;
    v92 = v21;
    v93 = v86;
    v94 = v85;
    v95 = v84;
    v96 = v88;
    v97 = v22;
    BookThemeEntity.backgroundColor.getter();
    v33 = v32;
    objc_msgSend(v31, "setBackgroundColor:", v32);

    objc_msgSend(v31, "setOverrideUserInterfaceStyle:", v82);
    if (v29)
      v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, v28);
    else
      v34 = *(id *)(v28 + 40);
    v35 = v34;
    LOBYTE(v90) = v83;
    BYTE1(v90) = v87;
    BYTE2(v90) = v19;
    v91 = v20;
    v92 = v21;
    v93 = v86;
    v94 = v85;
    v95 = v84;
    v96 = v88;
    v97 = v22;
    BookThemeEntity.backgroundColor.getter();
    v37 = v36;
    objc_msgSend(v35, "setBackgroundColor:", v36);

    objc_msgSend(v35, "setOverrideUserInterfaceStyle:", v82);
    swift_bridgeObjectRelease(v28);

    LOBYTE(v90) = v83;
    BYTE1(v90) = v87;
    BYTE2(v90) = v19;
    v91 = v20;
    v92 = v21;
    v93 = v86;
    v94 = v85;
    v95 = v84;
    v96 = v88;
    v97 = v22;
    v38 = swift_getObjectType(v80);
    v39 = (*(uint64_t (**)(uint64_t))(v81 + 24))(v38) == 2;
    sub_1A82D8((unsigned __int8 *)&v90, v39);
    v40 = swift_unknownObjectWeakLoadStrong(v14);
    if (v40)
    {
      v41 = v40;
      v42 = *((_QWORD *)v14 + 1);
      v43 = swift_getObjectType(v40);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v42 + 64))(v43, v42) & 1) != 0)
      {
        v44 = sub_1622D4();
        LOBYTE(v90) = v83;
        BYTE1(v90) = v87;
        BYTE2(v90) = v19;
        v91 = v20;
        v92 = v21;
        v93 = v86;
        v94 = v85;
        v95 = v84;
        v96 = v88;
        v97 = v22;
        sub_4B1A8((uint64_t)&v90);

        v45 = objc_msgSend(v79, "view", swift_bridgeObjectRelease(v20).n128_f64[0]);
        if (v45)
        {
          v46 = v45;
          objc_msgSend(v45, "frame");
          v48 = v47;
          v50 = v49;
          v52 = v51;
          v54 = v53;

          v99.origin.x = v48;
          v99.origin.y = v50;
          v99.size.width = v52;
          v99.size.height = v54;
          Width = CGRectGetWidth(v99);
          v56 = objc_msgSend(v79, "view");
          if (v56)
          {
            v57 = v56;
            objc_msgSend(v56, "frame");
            v59 = v58;
            v61 = v60;
            v63 = v62;
            v65 = v64;

            v100.origin.x = v59;
            v100.origin.y = v61;
            v100.size.width = v63;
            v100.size.height = v65;
            Height = CGRectGetHeight(v100);
            v67 = sub_1622D4();
            objc_msgSend(v67, "frame");
            v69 = v68;
            v71 = v70;
            v73 = v72;
            v75 = v74;

            v76 = sub_16217C();
            sub_15BF28(0.0, 0.0, Width, Height, v69, v71, v73, v75);
            swift_unknownObjectRelease(v41);

            return;
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
      swift_unknownObjectRelease(v41);
    }
    swift_bridgeObjectRelease(v20);
  }
}

Swift::Void __swiftcall BookContentViewController.viewDidLayoutSubviews()()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  _BYTE v10[24];
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for BookContentViewController(0);
  objc_msgSendSuper2(&v11, "viewDidLayoutSubviews");
  if (qword_3B56A0 != -1)
    swift_once(&qword_3B56A0, sub_52620);
  if (byte_3B6F18 == 1)
  {
    v1 = (uint64_t *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_debugLayers];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_debugLayers], v10, 0, 0);
    v2 = *v1;
    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v9 = v2;
      else
        v9 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v3 = _CocoaArrayWrapper.endIndex.getter(v9);
      if (v3)
        goto LABEL_6;
    }
    else
    {
      v3 = *(_QWORD *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v2);
      if (v3)
      {
LABEL_6:
        if (v3 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v3; ++i)
        {
          if ((v2 & 0xC000000000000001) != 0)
            v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2);
          else
            v5 = *(id *)(v2 + 8 * i + 32);
          v6 = v5;
          v7 = objc_msgSend(v5, "superlayer");
          if (v7)
          {
            v8 = v7;
            objc_msgSend(v7, "bounds");
            objc_msgSend(v6, "setFrame:");

          }
        }
      }
    }
    swift_bridgeObjectRelease(v2);
  }
}

void sub_17043C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  void *v10;
  char *v11;
  unint64_t v12;

  v2 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout;
  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout);
  type metadata accessor for BookLayoutMode(0);
  v5 = v4;
  if (v3 >= 2)
  {
    if (v3 - 2 >= 2)
    {
      v12 = v3;
      goto LABEL_12;
    }
    v6 = sub_164DA8();
  }
  else
  {
    v6 = objc_retain(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                           + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
  }
  v7 = v6;
  objc_msgSend(v6, "setNeedsLayout");

  v8 = *(_QWORD *)(a1 + v2);
  if (v8 < 2)
  {
    v9 = objc_retain(*(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView)
                           + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView));
LABEL_9:
    v10 = v9;
    objc_msgSend(v9, "layoutIfNeeded");

    v11 = sub_16217C();
    objc_msgSend(v11, "setNeedsLayout");

    return;
  }
  if (v8 - 2 < 2)
  {
    v9 = sub_164DA8();
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(a1 + v2);
LABEL_12:
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v5, &v12, v5, &type metadata for UInt);
  __break(1u);
}

uint64_t sub_170560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD);
  void (**v7)(_QWORD, _QWORD);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  _BYTE v18[24];
  _QWORD *v19;
  _BYTE v20[32];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, v20, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v2);
  if (result)
  {
    v4 = *(_QWORD *)(v2 + 8);
    v19 = _swiftEmptyArrayStorage;
    ObjectType = swift_getObjectType(result);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    v7 = v6;
    v8 = swift_getObjectType(v5);
    v7[5](v8, v7);
    v7[6](v8, v7);
    v7[8](v8, v7);
    v9 = (_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService);
    swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService, v18, 0, 0);
    v10 = *v9;
    v11 = v9[1];
    v12 = swift_getObjectType(*v9);
    v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 8);
    v14 = swift_unknownObjectRetain(v10);
    v15 = v13(v12, v11, v14);
    swift_unknownObjectRelease(v10);
    v16 = *(unsigned __int8 *)(v15 + 96);
    swift_release(v15);
    __asm { BR              X9 }
  }
  return result;
}

double sub_171758(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = (_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
    swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, &v9, 0, 0);
    v6 = *v5;
    v7 = v5[1];
    swift_unknownObjectRetain(*v5);

    ObjectType = swift_getObjectType(v6);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 40))(0, ObjectType, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

double sub_171800(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  _BYTE v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = (_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
    swift_beginAccess(Strong + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, &v9, 0, 0);
    v6 = *v5;
    v7 = v5[1];
    swift_unknownObjectRetain(*v5);

    ObjectType = swift_getObjectType(v6);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v7 + 48))(0, ObjectType, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

uint64_t BookContentViewController.pointIsInContent(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  void *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v19[3];
  _QWORD v20[5];
  _BYTE v21[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v21, 0, 0);
  swift_retain();
  CurrentValueSubject.value.getter(v20);
  v5 = v20[0];
  v6 = v20[3];
  swift_unknownObjectRelease(v20[1]);
  swift_unknownObjectRelease(v6);
  v7 = *(_QWORD *)(v5 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(v5);
    v8 = (uint64_t *)(v5 + 40);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      ObjectType = swift_getObjectType(v9);
      v12 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v10 + 48);
      v13 = swift_unknownObjectRetain(v9);
      v14 = v12(ObjectType, v10, v13);
      if (v14)
      {
        v15 = (void *)v14;
        swift_getObjectType(v14);
        v19[0] = v2;
        v19[1] = v3;
        v19[2] = v4;
        v16 = UICoordinateSpace.contains(_:)((uint64_t)v19);

        if (v16)
        {
          swift_unknownObjectRelease(v9);
          swift_release();
          swift_bridgeObjectRelease(v5);
          v17 = 1;
          goto LABEL_10;
        }
      }
      swift_unknownObjectRelease(v9);
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_release();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    swift_release();
  }
  v17 = 0;
LABEL_10:
  swift_bridgeObjectRelease(v5);
  return v17;
}

Swift::Bool __swiftcall BookContentViewController.passThroughView(_:gestureRecognizer:shouldRecognizeSimultaneouslyWith:)(UIView _, UIGestureRecognizer gestureRecognizer, UIGestureRecognizer shouldRecognizeSimultaneouslyWith)
{
  void *v3;

  return objc_msgSend(v3, "gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:", gestureRecognizer.super.isa, shouldRecognizeSimultaneouslyWith.super.isa);
}

void sub_171A3C(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double (*v19)(uint64_t, uint64_t, __n128);
  __n128 v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double (*v41)(uint64_t, uint64_t, __n128);
  __n128 v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, __n128);
  __n128 v51;
  char v52;
  uint64_t v53;
  char v54[24];
  char v55[24];
  char v56[24];
  _BYTE v57[24];
  char v58[24];

  v2 = v1;
  v4 = objc_msgSend(v1, "view");
  objc_msgSend(a1, "locationInView:", v4);
  v6 = v5;
  v8 = v7;

  v9 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider], v58, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = Strong;
    v12 = *((_QWORD *)v9 + 1);
    ObjectType = swift_getObjectType(Strong);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 64))(ObjectType, v12) & 1) != 0)
    {
      if ((sub_171D30(v6, v8) & 1) != 0)
      {
        v14 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
        swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v57, 0, 0);
        v15 = *(_QWORD *)v14;
        swift_beginAccess(*(_QWORD *)v14 + 112, v56, 0, 0);
        v16 = *(_QWORD *)(v15 + 112);
        v17 = *(_QWORD *)(v15 + 120);
        v18 = swift_getObjectType(v16);
        v19 = *(double (**)(uint64_t, uint64_t, __n128))(v17 + 80);
        v20 = swift_unknownObjectRetain(v16);
        v21 = v19(v18, v17, v20);
        v23 = v22;
        swift_unknownObjectRelease(v16);
        if (v21 >= v23)
          goto LABEL_8;
        v24 = *(_QWORD *)v14;
        swift_beginAccess(*(_QWORD *)v14 + 112, &v53, 0, 0);
        v25 = *(_QWORD *)(v24 + 112);
        v26 = *(_QWORD *)(v24 + 120);
        v27 = swift_getObjectType(v25);
        v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 120);
        v29 = swift_unknownObjectRetain(v25);
        v30 = v28(v27, v26, v29);
        swift_unknownObjectRelease(v25);
        if (v30 <= 1)
        {
LABEL_8:
          v37 = *(_QWORD *)v14;
          swift_beginAccess(*(_QWORD *)v14 + 112, v55, 0, 0);
          v38 = *(_QWORD *)(v37 + 112);
          v39 = *(_QWORD *)(v37 + 120);
          v40 = swift_getObjectType(v38);
          v41 = *(double (**)(uint64_t, uint64_t, __n128))(v39 + 80);
          v42 = swift_unknownObjectRetain(v38);
          v43 = v41(v40, v39, v42);
          v45 = v44;
          swift_unknownObjectRelease(v38);
          if (v43 >= v45)
          {
            v46 = *(_QWORD *)v14;
            swift_beginAccess(v46 + 112, v54, 0, 0);
            v47 = *(_QWORD *)(v46 + 112);
            v48 = *(_QWORD *)(v46 + 120);
            v49 = swift_getObjectType(v47);
            v50 = *(void (**)(uint64_t, uint64_t, __n128))(v48 + 120);
            v51 = swift_unknownObjectRetain(v47);
            v50(v49, v48, v51);
            swift_unknownObjectRelease(v47);
          }
        }
        v52 = sub_10F72C();
        sub_10DA5C(v52 & 1);
      }
      else
      {
        v31 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler];
        swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler], v57, 0, 0);
        v32 = *(_QWORD *)v31;
        v33 = *((_QWORD *)v31 + 1);
        v34 = swift_getObjectType(*(_QWORD *)v31);
        v35 = *(void (**)(uint64_t, uint64_t, __n128))(v33 + 128);
        v36 = swift_unknownObjectRetain(v32);
        v35(v34, v33, v36);
        swift_unknownObjectRelease(v32);
      }
    }
    swift_unknownObjectRelease(v11);
  }
}

id sub_171D30(CGFloat a1, CGFloat a2)
{
  char *v2;
  void *v3;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void *v13;
  double v14;
  id result;
  void *v16;
  double v17;
  double v18;
  void *v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  void *v29;
  double v30;
  double v31;
  double MaxX;
  double MaxY;
  _QWORD v34[5];
  char v35[24];
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v3 = v2;
  v6 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
  swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v35, 0, 0);
  v7 = *(_QWORD *)v6;
  swift_retain(v7);
  CurrentValueSubject.value.getter(v34);
  swift_release(v7);
  v8 = (_QWORD *)v34[0];
  v9 = v34[3];
  swift_unknownObjectRelease(v34[1]);
  swift_unknownObjectRelease(v9);
  if (!v8[2])
  {
    swift_bridgeObjectRelease(v8);
    return &dword_0 + 1;
  }
  v10 = v8[4];
  v11 = v8[5];
  swift_unknownObjectRetain(v10);
  swift_bridgeObjectRelease(v8);
  ObjectType = swift_getObjectType(v10);
  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11);
  *(_QWORD *)&v14 = swift_unknownObjectRelease(v10).n128_u64[0];
  if (!v13)
    return &dword_0 + 1;
  if ((*(_QWORD *)((_BYTE *)v3 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout) & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
    objc_msgSend(v13, "frame", v14);
    if (CGRectGetMinY(v39) <= a2)
    {
      objc_msgSend(v13, "frame");
      MaxY = CGRectGetMaxY(v40);

      return (id)(MaxY >= a2);
    }
    goto LABEL_15;
  }
  result = objc_msgSend(v3, "view", v14);
  if (!result)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v16 = result;
  objc_msgSend(result, "safeAreaInsets");
  v18 = v17;

  if (v18 + 50.0 > a2)
    goto LABEL_15;
  result = objc_msgSend(v3, "view", v18 + 50.0);
  if (!result)
    goto LABEL_20;
  v19 = result;
  objc_msgSend(result, "frame");
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v36.origin.x = v21;
  v36.origin.y = v23;
  v36.size.width = v25;
  v36.size.height = v27;
  v28 = CGRectGetMaxY(v36);
  result = objc_msgSend(v3, "view");
  if (result)
  {
    v29 = result;
    objc_msgSend(result, "safeAreaInsets");
    v31 = v30;

    if (v28 - v31 + -50.0 >= a2)
    {
      objc_msgSend(v13, "frame");
      if (CGRectGetMinX(v37) <= a1)
      {
        objc_msgSend(v13, "frame");
        MaxX = CGRectGetMaxX(v38);

        return (id)(MaxX >= a1);
      }
    }
LABEL_15:

    return 0;
  }
LABEL_21:
  __break(1u);
  return result;
}

Swift::Void __swiftcall BookContentViewController.readingLoupeChangeLine()()
{
  sub_10DA5C(1);
}

void sub_172030(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  char *v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, __n128);
  __n128 v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, __n128);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double (*v57)(uint64_t, uint64_t, __n128);
  __n128 v58;
  double v59;
  double v60;
  double v61;
  unsigned int v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_QWORD *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, __n128);
  __n128 v75;
  char v76;
  NSObject *oslog;
  char v78[24];
  char v79[24];
  char v80[24];
  _QWORD v81[3];
  _BYTE v82[24];
  id v83;
  uint64_t v84;

  v2 = v1;
  v4 = objc_msgSend(a1, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(a1, "locationInView:", v4);
    v7 = v6;
    v9 = v8;
    v10 = objc_msgSend(v1, "view");
    objc_msgSend(a1, "locationInView:", v10);
    v12 = v11;
    v14 = v13;

    v15 = &v1[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
    swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider], &v83, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v15);
    if (Strong)
    {
      v17 = Strong;
      v18 = *((_QWORD *)v15 + 1);
      ObjectType = swift_getObjectType(Strong);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 64))(ObjectType, v18) & 1) != 0
        && (v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling] & 1) == 0)
      {
        if ((sub_171D30(v12, v14) & 1) != 0)
        {
          v30 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
          swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v82, 0, 0);
          v31 = *(_QWORD *)v30;
          swift_beginAccess(*(_QWORD *)v30 + 112, v81, 0, 0);
          v32 = *(_QWORD *)(v31 + 112);
          v33 = *(_QWORD *)(v31 + 120);
          v34 = swift_getObjectType(v32);
          v35 = *(double (**)(uint64_t, uint64_t, __n128))(v33 + 80);
          v36 = swift_unknownObjectRetain(v32);
          v37 = v35(v34, v33, v36);
          v39 = v38;
          swift_unknownObjectRelease(v32);
          if (v37 >= v39)
            goto LABEL_22;
          v40 = *(_QWORD *)v30;
          swift_beginAccess(*(_QWORD *)v30 + 112, v78, 0, 0);
          v41 = *(_QWORD *)(v40 + 112);
          v42 = *(_QWORD *)(v40 + 120);
          v43 = swift_getObjectType(v41);
          v44 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v42 + 120);
          v45 = swift_unknownObjectRetain(v41);
          v46 = v44(v43, v42, v45);
          swift_unknownObjectRelease(v41);
          if (v46 <= 1)
          {
LABEL_22:
            v53 = *(_QWORD *)v30;
            swift_beginAccess(*(_QWORD *)v30 + 112, v80, 0, 0);
            v54 = *(_QWORD *)(v53 + 112);
            v55 = *(_QWORD *)(v53 + 120);
            v56 = swift_getObjectType(v54);
            v57 = *(double (**)(uint64_t, uint64_t, __n128))(v55 + 80);
            v58 = swift_unknownObjectRetain(v54);
            v59 = v57(v56, v55, v58);
            v61 = v60;
            swift_unknownObjectRelease(v54);
            if (v59 >= v61)
            {
              v70 = *(_QWORD *)v30;
              swift_beginAccess(v70 + 112, v79, 0, 0);
              v71 = *(_QWORD *)(v70 + 112);
              v72 = *(_QWORD *)(v70 + 120);
              v73 = swift_getObjectType(v71);
              v74 = *(void (**)(uint64_t, uint64_t, __n128))(v72 + 120);
              v75 = swift_unknownObjectRetain(v71);
              v74(v73, v72, v75);
              swift_unknownObjectRelease(v71);
            }
          }
          v76 = sub_10F72C();
          sub_10DA5C((v76 & 1) == 0);
        }
        else
        {
          v47 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler];
          swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler], v82, 0, 0);
          v48 = *(_QWORD *)v47;
          v49 = *((_QWORD *)v47 + 1);
          v50 = swift_getObjectType(*(_QWORD *)v47);
          v51 = *(void (**)(uint64_t, uint64_t, __n128))(v49 + 128);
          v52 = swift_unknownObjectRetain(v48);
          v51(v50, v49, v52);
          swift_unknownObjectRelease(v48);
        }
        swift_unknownObjectRelease(v17);
LABEL_29:

        return;
      }
      swift_unknownObjectRelease(v17);
    }
    if ((v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isHandlingPageDrag] & 1) != 0)
    {
      v20 = Logger.logObject.getter(Strong);
      v21 = static os_log_type_t.error.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_0, v20, v21, "#unhandled_tap Unhandled tap gesture fired during page drag. That should not happen", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }
LABEL_15:

      return;
    }
    if ((*(_QWORD *)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] & 0xFFFFFFFFFFFFFFFELL) != 2)
      goto LABEL_25;
    v29 = *(void **)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer];
    if (v29)
    {
      v20 = v29;
      if (-[NSObject isTracking](v20, "isTracking")
        || -[NSObject isDecelerating](v20, "isDecelerating"))
      {
        goto LABEL_15;
      }
      v62 = -[NSObject be_isAnimatingScroll](v20, "be_isAnimatingScroll");

      if (!v62)
      {
LABEL_25:
        v63 = &v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler];
        swift_beginAccess(&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler], v82, 0, 0);
        v64 = *(_QWORD *)v63;
        v65 = *((_QWORD *)v63 + 1);
        v66 = swift_getObjectType(*(_QWORD *)v63);
        v81[0] = v5;
        v81[1] = v7;
        v81[2] = v9;
        v67 = *(_QWORD *)&v2[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapTouchType];
        v68 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, __n128))(v65 + 16);
        v69 = swift_unknownObjectRetain(v64);
        v68(v81, v67, v66, v65, v69);

        swift_unknownObjectRelease(v64);
        return;
      }
      goto LABEL_29;
    }
    __break(1u);
  }
  else
  {
    v23 = a1;
    oslog = Logger.logObject.getter(v23);
    v24 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v25 = 138412290;
      v83 = v23;
      v27 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v25 + 4);
      *v26 = v23;

      _os_log_impl(&dword_0, oslog, v24, "#unhandled_tap Failed to get view from %@", v25, 0xCu);
      v28 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v26, 1, v28);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

    }
  }
}

unint64_t sub_172694(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t (*v22)(uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  unint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v52;
  void *v53;
  __int128 v54;
  char v55[24];
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char v59[24];
  uint64_t v60;
  uint64_t v61;
  char v62[176];
  char v63[32];

  v6 = a1 + 16;
  swift_beginAccess(a1 + 16, v63, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (!Strong)
    return sub_38C58((uint64_t)_swiftEmptyArrayStorage);
  v8 = (char *)Strong;
  v9 = swift_bridgeObjectRetain_n(a4, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  v52 = a3;
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v56 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain(a4);
    v60 = sub_33524(a3, a4, (uint64_t *)&v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v12 + 4);
    swift_bridgeObjectRelease_n(a4, 3);
    _os_log_impl(&dword_0, v10, v11, "--- Persisting state for %s ---", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a4, 2);
  }

  v15 = sub_319AC((uint64_t *)&unk_3B9360);
  inited = swift_initStackObject(v15, v62);
  *(_OWORD *)(inited + 16) = xmmword_2E6940;
  *(_QWORD *)(inited + 32) = 0xD000000000000014;
  *(_QWORD *)(inited + 40) = 0x80000000002CE2F0;
  v17 = &v8[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
  swift_beginAccess(&v8[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], &v60, 0, 0);
  v18 = *(_QWORD *)v17;
  swift_beginAccess(*(_QWORD *)v17 + 112, v59, 0, 0);
  v19 = *(_QWORD *)(v18 + 112);
  v20 = *(_QWORD *)(v18 + 120);
  ObjectType = swift_getObjectType(v19);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v20 + 192);
  v23 = swift_unknownObjectRetain(v19);
  v24 = v22(ObjectType, v20, v23);
  v26 = v25;
  swift_unknownObjectRelease(v19);
  *(_QWORD *)(inited + 48) = v24;
  *(_QWORD *)(inited + 56) = v26;
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 80) = 0xD000000000000010;
  *(_QWORD *)(inited + 88) = 0x80000000002CE310;
  v27 = &v8[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService];
  swift_beginAccess(&v8[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService], v55, 0, 0);
  v54 = *(_OWORD *)v27;
  swift_unknownObjectRetain(v54);
  v28 = sub_319AC(&qword_3BE6A0);
  v29 = sub_319AC(&qword_3BE6A8);
  if ((swift_dynamicCast(&v56, &v54, v28, v29, 6) & 1) == 0)
  {
    v58 = 0;
    v56 = 0u;
    v57 = 0u;
    sub_52128((uint64_t)&v56, (uint64_t *)&unk_3BE6B0);
    v33 = sub_319AC(&qword_3BBEE0);
    *(_QWORD *)(inited + 120) = v33;
LABEL_10:
    v32 = sub_38C58((uint64_t)_swiftEmptyArrayStorage);
    goto LABEL_11;
  }
  v30 = *((_QWORD *)&v57 + 1);
  v31 = v58;
  sub_472D0(&v56, *((uint64_t *)&v57 + 1));
  v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
  sub_34488(&v56);
  v33 = sub_319AC(&qword_3BBEE0);
  *(_QWORD *)(inited + 120) = v33;
  if (!v32)
    goto LABEL_10;
LABEL_11:
  *(_QWORD *)(inited + 96) = v32;
  *(_QWORD *)(inited + 128) = 0xD000000000000017;
  *(_QWORD *)(inited + 136) = 0x80000000002CE330;
  swift_retain(*(_QWORD *)v17);
  BookContentLayoutController.currentState.getter();
  *(_QWORD *)(inited + 168) = v33;
  if (!v34)
    v34 = sub_38C58((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(inited + 144) = v34;
  swift_release();
  v35 = sub_37F24(inited);
  v36 = swift_bridgeObjectRetain_n(v35, 2);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter();
  v53 = v8;
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v56 = v40;
    *(_DWORD *)v39 = 136315138;
    v41 = swift_bridgeObjectRetain(v35);
    v42 = Dictionary.description.getter(v41, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
    v44 = v43;
    swift_bridgeObjectRelease(v35);
    *(_QWORD *)&v54 = sub_33524(v42, v44, (uint64_t *)&v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 8, v39 + 4);
    swift_bridgeObjectRelease_n(v35, 2);
    swift_bridgeObjectRelease(v44);
    _os_log_impl(&dword_0, v37, v38, "%s", v39, 0xCu);
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v39, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v35, 2);
  }

  v45 = swift_bridgeObjectRetain_n(a4, 2);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    v48 = a4;
    v49 = (uint8_t *)swift_slowAlloc(12, -1);
    v50 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v56 = v50;
    *(_DWORD *)v49 = 136315138;
    swift_bridgeObjectRetain(v48);
    *(_QWORD *)&v54 = sub_33524(v52, v48, (uint64_t *)&v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 8, v49 + 4);
    swift_bridgeObjectRelease_n(v48, 3);
    _os_log_impl(&dword_0, v46, v47, "--- End Persisting state for %s ---", v49, 0xCu);
    swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v49, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a4, 2);
  }

  v14 = sub_191DA4(v35);
  swift_bridgeObjectRelease(v35);
  return v14;
}

uint64_t sub_172D08()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t result;

  v0 = sub_319AC((uint64_t *)&unk_3B8440);
  v1 = swift_allocObject(v0, 96, 7);
  *(_OWORD *)(v1 + 16) = xmmword_2E66B0;
  v2 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v1 + 32) = objc_msgSend(v2, "systemCyanColor");
  *(_QWORD *)(v1 + 40) = objc_msgSend(v2, "systemIndigoColor");
  *(_QWORD *)(v1 + 48) = objc_msgSend(v2, "systemMintColor");
  *(_QWORD *)(v1 + 56) = objc_msgSend(v2, "systemTealColor");
  *(_QWORD *)(v1 + 64) = objc_msgSend(v2, "systemDarkPurpleColor");
  *(_QWORD *)(v1 + 72) = objc_msgSend(v2, "systemDarkPinkColor");
  *(_QWORD *)(v1 + 80) = objc_msgSend(v2, "systemDarkTealColor");
  v3 = objc_msgSend(v2, "systemDarkYellowColor");
  *(_QWORD *)(v1 + 88) = v3;
  result = specialized Array._endMutation()(v3);
  qword_3BE4A0 = v1;
  return result;
}

void sub_172E54(void **a1, uint64_t a2)
{
  void *v3;
  id v4;
  _QWORD *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v3 = *a1;
  v4 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v5 = (_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_debugLayers);
  swift_beginAccess(v5, v21, 33, 0);
  v6 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6);
  v8 = *(_QWORD *)((char *)&dword_10 + (*v5 & 0xFFFFFFFFFFFFFF8));
  v7 = *(_QWORD *)((char *)&dword_18 + (*v5 & 0xFFFFFFFFFFFFFF8));
  if (v8 >= v7 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
  v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6);
  specialized Array._endMutation()(v9);
  swift_endAccess(v21);
  objc_msgSend(v3, "bounds");
  objc_msgSend(v6, "setFrame:");
  v10 = objc_msgSend(v3, "layer");
  objc_msgSend(v10, "addSublayer:", v6);

  v11 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v12 = objc_msgSend(v11, "CGColor");

  objc_msgSend(v6, "setBackgroundColor:", v12);
  if (qword_3B5800 != -1)
    swift_once(&qword_3B5800, sub_172D08);
  v13 = qword_3BE4A0;
  if (!((unint64_t)qword_3BE4A0 >> 62))
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (qword_3BE4A0 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(qword_3BE4A0);
    if (v14)
      goto LABEL_7;
LABEL_22:
    swift_bridgeObjectRelease(v13);
    __break(1u);
    goto LABEL_23;
  }
  if (qword_3BE4A0 < 0)
    v19 = qword_3BE4A0;
  else
    v19 = qword_3BE4A0 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(qword_3BE4A0, 2);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v13);
  if (!v20)
    goto LABEL_22;
  swift_bridgeObjectRetain(v13);
  v14 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v13);
  if ((v14 & 0x8000000000000000) == 0)
  {
    if (!v14)
    {
      __break(1u);
      goto LABEL_19;
    }
LABEL_7:
    v15 = sub_17318C(v14);
    if ((v13 & 0xC000000000000001) == 0)
    {
      if ((v15 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v15 < *(_QWORD *)((char *)&dword_10 + (v13 & 0xFFFFFFFFFFFFF8)))
      {
        v16 = *(id *)(v13 + 8 * v15 + 32);
LABEL_11:
        v17 = v16;
        v18 = objc_msgSend(v16, "CGColor", swift_bridgeObjectRelease(v13).n128_f64[0]);

        objc_msgSend(v6, "setBorderColor:", v18);
        objc_msgSend(v6, "setBorderWidth:", 1.0);

        return;
      }
      __break(1u);
      goto LABEL_22;
    }
LABEL_19:
    v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
    goto LABEL_11;
  }
LABEL_23:
  __break(1u);
}

Class sub_173118(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSDictionary v5;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = v1(v3);
  swift_release(v2);
  if (v4)
  {
    v5.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5.super.isa = 0;
  }
  return v5.super.isa;
}

unint64_t sub_17318C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    swift_stdlib_random(&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          swift_stdlib_random(&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_173214(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v25;
  __int128 v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __int128 v38;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = 0;
    v5 = a1 + 32;
    v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v34 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v6 = a2;
    v30 = v6;
    v32 = *(_QWORD *)(a1 + 16);
    v33 = _swiftEmptyArrayStorage;
    v37 = a2 & 0xC000000000000001;
    v35 = (unint64_t)a2 >> 62;
    v31 = a1 + 32;
    do
    {
      if (v4 <= v2)
        v7 = v2;
      else
        v7 = v4;
      v36 = v7;
      while (1)
      {
        if (v4 == v36)
          goto LABEL_45;
        v8 = *(_OWORD *)(v5 + 16 * v4);
        v38 = v8;
        if (v35)
        {
          v23 = (id)v8;
          swift_bridgeObjectRetain(a2);
          v9 = _CocoaArrayWrapper.endIndex.getter(v30);
          ++v4;
          if (!v9)
            goto LABEL_41;
        }
        else
        {
          v9 = *(_QWORD *)(v34 + 16);
          v10 = (id)v8;
          swift_bridgeObjectRetain(a2);
          ++v4;
          if (!v9)
            goto LABEL_41;
        }
        v11 = v37 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2) : *(id *)(a2 + 32);
        v12 = v11;
        sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
        v13 = static NSObject.== infix(_:_:)(v12, v38);

        if ((v13 & 1) == 0)
          break;

        swift_bridgeObjectRelease(a2);
LABEL_29:

        if (v4 == v2)
          return;
      }
      if (v9 != 1)
      {
        if (v37)
        {
          v14 = 1;
          while (1)
          {
            v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, a2);
            v16 = v14 + 1;
            if (__OFADD__(v14, 1))
              break;
            v17 = v15;
            v18 = static NSObject.== infix(_:_:)(v15, v38);
            swift_unknownObjectRelease(v17);
            if ((v18 & 1) != 0)
              goto LABEL_28;
            ++v14;
            if (v16 == v9)
              goto LABEL_34;
          }
          __break(1u);
        }
        else
        {
          v19 = 5;
          while (1)
          {
            v20 = v19 - 3;
            if (__OFADD__(v19 - 4, 1))
              break;
            v21 = *(id *)(a2 + 8 * v19);
            v22 = static NSObject.== infix(_:_:)(v21, v38);

            if ((v22 & 1) != 0)
            {
LABEL_28:

              swift_bridgeObjectRelease(a2);
              v5 = v31;
              v2 = v32;
              goto LABEL_29;
            }
            ++v19;
            if (v20 == v9)
            {
LABEL_34:

              swift_bridgeObjectRelease(a2);
              v5 = v31;
              v2 = v32;
              goto LABEL_35;
            }
          }
        }
        __break(1u);
LABEL_45:
        __break(1u);
        return;
      }
LABEL_41:

      swift_bridgeObjectRelease(a2);
LABEL_35:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
      v25 = v33;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_F5354(0, v33[2] + 1, 1);
        v25 = v33;
      }
      v26 = v38;
      v27 = v25;
      v29 = v25[2];
      v28 = v25[3];
      if (v29 >= v28 >> 1)
      {
        sub_F5354(v28 > 1, v29 + 1, 1);
        v26 = v38;
        v27 = v33;
      }
      v27[2] = v29 + 1;
      v33 = v27;
      *(_OWORD *)&v27[2 * v29 + 4] = v26;
    }
    while (v4 != v2);
  }
}

_QWORD *sub_173514(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  __int128 *v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v45;
  void *v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;

  v2 = a1;
  v50 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_47;
  v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
LABEL_3:
  v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    v39 = v2;
    v5 = 0;
    v42 = v2 & 0xFFFFFFFFFFFFFF8;
    v43 = v2 & 0xC000000000000001;
    v40 = v3;
    v41 = v2 + 32;
    while (1)
    {
      if (v43)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v39);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v42 + 16))
          goto LABEL_44;
        v9 = *(id *)(v41 + 8 * v5);
      }
      v46 = v9;
      v10 = __OFADD__(v5, 1);
      v11 = v5 + 1;
      if (v10)
        goto LABEL_45;
      v12 = *(_QWORD *)(a2 + 16);
      if (v12)
      {
        v49 = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v12);
        v13 = (__int128 *)(a2 + 32);
        do
        {
          v14 = *v13++;
          v47 = v14;
          v15 = (id)v14;
          v16 = sub_319AC(&qword_3B6828);
          v17 = sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
          swift_dynamicCast(&v48, &v47, v16, v17, 7);
          v18 = v48;

          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v19);
          v20 = v49[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v20);
          v21 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
          specialized ContiguousArray._endMutation()(v21);
          --v12;
        }
        while (v12);
        v22 = (uint64_t)v49;
      }
      else
      {
        v22 = (uint64_t)_swiftEmptyArrayStorage;
      }
      v45 = v11;
      if ((unint64_t)v22 >> 62)
      {
        if (v22 < 0)
          v36 = v22;
        else
          v36 = v22 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v22);
        v23 = _CocoaArrayWrapper.endIndex.getter(v36);
        if (!v23)
          goto LABEL_5;
      }
      else
      {
        v23 = *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(v22);
        if (!v23)
          goto LABEL_5;
      }
      if ((v22 & 0xC000000000000001) != 0)
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v22);
      else
        v24 = *(id *)(v22 + 32);
      v25 = v24;
      v2 = sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
      v26 = static NSObject.== infix(_:_:)(v25, v46);

      if ((v26 & 1) != 0)
      {
LABEL_33:

        swift_bridgeObjectRelease_n(v22, 2);
        goto LABEL_6;
      }
      if (v23 != 1)
      {
        if ((v22 & 0xC000000000000001) != 0)
        {
          v27 = 1;
          while (1)
          {
            v28 = specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v22);
            v29 = v27 + 1;
            if (__OFADD__(v27, 1))
              break;
            v30 = v28;
            v31 = static NSObject.== infix(_:_:)(v28, v46);
            swift_unknownObjectRelease(v30);
            if ((v31 & 1) != 0)
              goto LABEL_33;
            ++v27;
            if (v29 == v23)
              goto LABEL_5;
          }
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
        v32 = 5;
        while (1)
        {
          v33 = v32 - 3;
          if (__OFADD__(v32 - 4, 1))
            break;
          v34 = *(id *)(v22 + 8 * v32);
          v35 = static NSObject.== infix(_:_:)(v34, v46);

          if ((v35 & 1) != 0)
            goto LABEL_33;
          ++v32;
          if (v33 == v23)
            goto LABEL_5;
        }
LABEL_46:
        __break(1u);
LABEL_47:
        if (v2 < 0)
          v38 = v2;
        else
          v38 = v2 & 0xFFFFFFFFFFFFFF8;
        v3 = _CocoaArrayWrapper.endIndex.getter(v38);
        goto LABEL_3;
      }
LABEL_5:
      v6 = swift_bridgeObjectRelease_n(v22, 2);
      v2 = (uint64_t)&v50;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      v7 = v50[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
      v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v46);
      specialized ContiguousArray._endMutation()(v8);
LABEL_6:
      v5 = v45;
      if (v45 == v40)
        return v50;
    }
  }
  return v4;
}

_QWORD *sub_173894(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  char **v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  NSString v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  Swift::String v24;
  Swift::String v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v4)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v28 = v3;
    v6 = 0;
    a2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_ConstraintPrefix + 8);
    v29 = v3 & 0xC000000000000001;
    v7 = &selRef_copy;
    while (v4 != v6)
    {
      if (v29)
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      else
        v17 = *(id *)(v3 + 8 * v6 + 32);
      v18 = v17;
      swift_bridgeObjectRetain(a2);
      v19 = objc_msgSend(v18, "firstAnchor");
      v20 = objc_msgSend(v19, v7[165]);

      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      v24._countAndFlagsBits = v21;
      v24._object = v23;
      String.append(_:)(v24);
      swift_bridgeObjectRelease(v23);
      v25._countAndFlagsBits = 95;
      v25._object = (void *)0xE100000000000000;
      String.append(_:)(v25);
      v26 = objc_msgSend(v18, "secondAnchor");
      if (v26)
      {
        v8 = v26;
        v9 = objc_msgSend(v26, v7[165]);

        v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v12 = v11;

      }
      else
      {
        v10 = 0;
        v12 = (void *)0xE000000000000000;
      }
      ++v6;
      v13._countAndFlagsBits = v10;
      v13._object = v12;
      String.append(_:)(v13);
      swift_bridgeObjectRelease(v12);
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(a2);
      objc_msgSend(v18, "setIdentifier:", v14);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v15 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v18);
      specialized ContiguousArray._endMutation()(v16);
      v3 = v28;
      v7 = &selRef_copy;
      if (v4 == v6)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_17:
    if (v3 < 0)
      v27 = v3;
    else
      v27 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v3);
  }
  return result;
}

void sub_173B10(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Class isa;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;
  NSString v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  NSString v43;
  NSString v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  NSString v54;
  id v55;
  void *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  unint64_t v65;
  unint64_t v66;
  Swift::String v67;
  Swift::String v68;
  void *object;
  Swift::String v70;
  Swift::String v71;
  void *v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  int64_t v78;
  unint64_t v79;
  uint64_t (*v80)(uint64_t *, uint64_t, uint64_t);
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t ObjectType;
  uint64_t v85;
  unint64_t v86;
  char v87[24];
  char v88[32];

  v4 = v3;
  v5 = a2;
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels);
  v82 = a3[1];
  v83 = *a3;
  if (!*(_BYTE *)(a2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationDirection))
  {
    v7 = 0xEB00000000746867;
    v8 = 0x69526F547466656CLL;
    goto LABEL_6;
  }
  if (*(_BYTE *)(a2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationDirection) != 1)
  {
    v7 = 0xE800000000000000;
    v8 = 0x6C61636974726576;
LABEL_6:
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, 0x4C6F547468676972, 0xEB00000000746665, 0);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(0xEB00000000746665);
LABEL_7:
  v6 = sub_91BB8(v6);
LABEL_8:
  if ((unint64_t)v6 >> 62)
    goto LABEL_42;
  v10 = *(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8));
  if (!v10)
  {
LABEL_46:
    swift_bridgeObjectRelease(v6);
    return;
  }
LABEL_10:
  v81 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout;
  v11 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController;
  v12 = OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount;
  v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v4
                                             + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider));
  if (v10 >= 1)
  {
    v79 = v6 & 0xC000000000000001;
    v80 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v13 + 80);
    v76 = (_QWORD *)(v4 + v11);
    swift_beginAccess(v4 + v11, v88, 0, 0);
    swift_beginAccess(v5 + v12, v87, 0, 0);
    v14 = 0;
    v77 = v10;
    v78 = v6;
    while (1)
    {
      if (v79)
        v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v6);
      else
        v26 = *(id *)(v6 + 8 * v14 + 32);
      v27 = v26;
      v85 = v83;
      v86 = v82;
      v28 = v80(&v85, ObjectType, v13);
      if ((*(_QWORD *)(v4 + v81) & 0xFFFFFFFFFFFFFFFELL) == 2)
      {
        v29 = 0;
        v30 = 0xE000000000000000;
        goto LABEL_27;
      }
      v5 = v28;
      v31 = *v76;
      swift_retain(*v76);
      if (sub_1C3B4C())
      {
        swift_release(v31);
      }
      else
      {
        v32 = sub_1C3CB4();
        swift_release(v31);
        if ((v32 & 1) == 0)
        {
          if (__OFADD__(v5, v14))
            goto LABEL_41;
          v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 128))(v5 + v14, ObjectType, v13);
          v30 = v65;
          if (qword_3B56A0 != -1)
            swift_once(&qword_3B56A0, sub_52620);
          if (byte_3B6F18 == 1)
          {
            v85 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            v86 = v66;
            v67._countAndFlagsBits = 45;
            v67._object = (void *)0xE100000000000000;
            String.append(_:)(v67);
            v68._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            object = v68._object;
            String.append(_:)(v68);
            swift_bridgeObjectRelease(object);
            v70._countAndFlagsBits = 2128928;
            v70._object = (void *)0xE300000000000000;
            String.append(_:)(v70);
            v71._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
            v72 = v71._object;
            String.append(_:)(v71);
            swift_bridgeObjectRelease(v72);
            v73._countAndFlagsBits = 2128928;
            v73._object = (void *)0xE300000000000000;
            String.append(_:)(v73);
            v74._countAndFlagsBits = v29;
            v74._object = (void *)v30;
            String.append(_:)(v74);
            swift_bridgeObjectRelease(v30);
            v29 = v85;
            v30 = v86;
          }
          goto LABEL_27;
        }
      }
      if (v14)
      {
        v33 = v5 + v14;
        if (__OFADD__(v5, v14))
        {
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          if (v6 < 0)
            v75 = v6;
          else
            v75 = v6 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v6);
          v10 = _CocoaArrayWrapper.endIndex.getter(v75);
          swift_bridgeObjectRelease(v6);
          if (!v10)
            goto LABEL_46;
          goto LABEL_10;
        }
        v34 = v33 - 1;
        if (__OFSUB__(v33, 1))
          goto LABEL_40;
        v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 128);
      }
      else
      {
        v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 128);
        v34 = v5;
      }
      v29 = v35(v34, ObjectType, v13);
      v30 = v36;
LABEL_27:
      v37 = v4;
      v38 = String._bridgeToObjectiveC()();
      objc_msgSend(v27, "setText:", v38);

      v39 = objc_msgSend(v27, "superview");
      if (v39)
      {
        v40 = v39;
        v41 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0)
          v41 = v29 & 0xFFFFFFFFFFFFLL;
        objc_msgSend(v39, "setHidden:", v41 == 0);

      }
      objc_msgSend(v27, "layoutIfNeeded");
      v42 = BookEPUBBundle();
      v43 = String._bridgeToObjectiveC()();
      v44 = String._bridgeToObjectiveC()();
      v45 = objc_msgSend(v42, "localizedStringForKey:value:table:", v43, v44, 0);

      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
      v48 = v47;

      v49 = sub_319AC(&qword_3B66F8);
      v50 = swift_allocObject(v49, 72, 7);
      *(_OWORD *)(v50 + 16) = xmmword_2E5F80;
      *(_QWORD *)(v50 + 56) = &type metadata for String;
      *(_QWORD *)(v50 + 64) = sub_42298();
      *(_QWORD *)(v50 + 32) = v29;
      *(_QWORD *)(v50 + 40) = v30;
      v51 = v27;
      static String.localizedStringWithFormat(_:_:)(v46, v48, v50);
      v53 = v52;
      swift_bridgeObjectRelease(v50);
      swift_bridgeObjectRelease(v48);
      v54 = String._bridgeToObjectiveC()();
      objc_msgSend(v51, "setAccessibilityLabel:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

      v55 = objc_msgSend(v51, "superview");
      if (v55)
      {
        v56 = v55;
        objc_msgSend(v55, "accessibilityFrame");
        v58 = v57;
        v60 = v59;
        v62 = v61;
        v64 = v63;

        objc_msgSend(v51, "setAccessibilityFrame:", v58, v60, v62, v64);
      }
      ++v14;
      v15 = sub_319AC(&qword_3BBEB0);
      v16 = swift_allocObject(v15, 48, 7);
      *(_OWORD *)(v16 + 16) = xmmword_2E5F80;
      v17 = v51;
      v18 = BookEPUBBundle();
      v19 = String._bridgeToObjectiveC()();
      v20 = String._bridgeToObjectiveC()();
      v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      *(_QWORD *)(v16 + 32) = v22;
      *(_QWORD *)(v16 + 40) = v24;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v17, "setAccessibilityUserInputLabels:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

      v4 = v37;
      v6 = v78;
      if (v77 == v14)
      {
        swift_bridgeObjectRelease(v78);
        return;
      }
    }
  }
  __break(1u);
}

void sub_174280(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSString v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  NSString v63;
  NSString v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  os_log_t osloga;
  os_log_t oslog;
  _QWORD v78[2];

  v3 = *a2;
  v4 = a2[1];
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels);
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels));
    if (v6)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease(v5);
    oslog = (os_log_t)Logger.logObject.getter(v70);
    v71 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v72 = 0;
      _os_log_impl(&dword_0, oslog, v71, "No page labels found, can't show content", v72, 2u);
      swift_slowDealloc(v72, -1, -1);
    }
    goto LABEL_24;
  }
  if (v5 < 0)
    v69 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels);
  else
    v69 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels));
  v6 = _CocoaArrayWrapper.endIndex.getter(v69);
  if (!v6)
    goto LABEL_22;
LABEL_3:
  v7 = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_26:
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
    goto LABEL_8;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8)))
  {
    v8 = *(id *)(v5 + 8 * v7 + 32);
LABEL_8:
    v9 = v8;
    swift_bridgeObjectRelease(v5);
    v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2
                                               + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider));
    v78[0] = v3;
    v78[1] = v4;
    v12 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 80))(v78, ObjectType, v10);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 128))(v12, ObjectType, v10);
    v15 = v14;
    v16 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0)
      v16 = v13 & 0xFFFFFFFFFFFFLL;
    if (v16)
    {
      v17 = v13;
      v75 = v13;
      v18 = BookEPUBBundle();
      v19 = String._bridgeToObjectiveC()();
      v20 = String._bridgeToObjectiveC()();
      v21 = objc_msgSend(v18, "localizedStringForKey:value:table:", v19, v20, 0);

      v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v23 = v22;

      osloga = (os_log_t)sub_319AC(&qword_3B66F8);
      v24 = swift_allocObject(osloga, 112, 7);
      *(_OWORD *)(v24 + 16) = xmmword_2E5F70;
      *(_QWORD *)(v24 + 56) = &type metadata for String;
      v74 = ObjectType;
      v25 = sub_42298();
      *(_QWORD *)(v24 + 64) = v25;
      *(_QWORD *)(v24 + 32) = v17;
      *(_QWORD *)(v24 + 40) = v15;
      v26 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 112);
      swift_bridgeObjectRetain(v15);
      v27 = v26(ObjectType, v10);
      v28 = v26;
      *(_QWORD *)(v24 + 96) = &type metadata for String;
      *(_QWORD *)(v24 + 104) = v25;
      *(_QWORD *)(v24 + 72) = v27;
      *(_QWORD *)(v24 + 80) = v29;
      static String.localizedStringWithFormat(_:_:)(v73, v23, v24);
      v31 = v30;
      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v23);
      v32 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "setText:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

      v33 = BookEPUBBundle();
      v34 = String._bridgeToObjectiveC()();
      v35 = String._bridgeToObjectiveC()();
      v36 = objc_msgSend(v33, "localizedStringForKey:value:table:", v34, v35, 0);

      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
      v39 = v38;

      v40 = swift_allocObject(osloga, 112, 7);
      *(_OWORD *)(v40 + 16) = xmmword_2E5F70;
      *(_QWORD *)(v40 + 56) = &type metadata for String;
      *(_QWORD *)(v40 + 64) = v25;
      *(_QWORD *)(v40 + 32) = v75;
      *(_QWORD *)(v40 + 40) = v15;
      v41 = v9;
      v42 = v28(v74, v10);
      *(_QWORD *)(v40 + 96) = &type metadata for String;
      *(_QWORD *)(v40 + 104) = v25;
      *(_QWORD *)(v40 + 72) = v42;
      *(_QWORD *)(v40 + 80) = v43;
      static String.localizedStringWithFormat(_:_:)(v37, v39, v40);
      v45 = v44;
      swift_bridgeObjectRelease(v40);
      swift_bridgeObjectRelease(v39);
      v46 = String._bridgeToObjectiveC()();
      objc_msgSend(v41, "setAccessibilityLabel:", v46, swift_bridgeObjectRelease(v45).n128_f64[0]);

    }
    else
    {
      swift_bridgeObjectRelease(v14);
      v46 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "setText:", v46);
    }

    v47 = objc_msgSend(v9, "superview");
    if (v47)
    {
      v48 = v47;
      objc_msgSend(v47, "setHidden:", 0);

    }
    objc_msgSend(v9, "layoutIfNeeded");
    v49 = objc_msgSend(v9, "superview");
    if (v49)
    {
      v50 = v49;
      objc_msgSend(v49, "accessibilityFrame");
      v52 = v51;
      v54 = v53;
      v56 = v55;
      v58 = v57;

      objc_msgSend(v9, "setAccessibilityFrame:", v52, v54, v56, v58);
    }
    v59 = sub_319AC(&qword_3BBEB0);
    v60 = swift_allocObject(v59, 48, 7);
    *(_OWORD *)(v60 + 16) = xmmword_2E5F80;
    v61 = v9;
    v62 = BookEPUBBundle();
    v63 = String._bridgeToObjectiveC()();
    v64 = String._bridgeToObjectiveC()();
    v65 = objc_msgSend(v62, "localizedStringForKey:value:table:", v63, v64, 0);

    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
    v68 = v67;

    *(_QWORD *)(v60 + 32) = v66;
    *(_QWORD *)(v60 + 40) = v68;
    oslog = (os_log_t)Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v61, "setAccessibilityUserInputLabels:", oslog, swift_bridgeObjectRelease(v60).n128_f64[0]);

LABEL_24:
    return;
  }
  __break(1u);
}

id sub_1748A0(char *a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  id result;

  result = *(id *)&a1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentTopConstraint];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(result, "setConstant:");
  result = *(id *)&a1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentBottomConstraint];
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(result, "setConstant:", a3);
  result = *(id *)&a1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelHeightConstraint];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(result, "setConstant:", a4);
  result = *(id *)&a1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageBottomConstraint];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(result, "setConstant:", a5);
  result = *(id *)&a1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerLeadingConstraint];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(result, "setConstant:", a6);
  result = *(id *)&a1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerTrailingConstraint];
  if (result)
  {
    objc_msgSend(result, "setConstant:", a6);
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerView], "setSpacing:", a7);
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView], "setSpacing:", a7);
    return objc_msgSend(a1, "layoutIfNeeded");
  }
LABEL_13:
  __break(1u);
  return result;
}

char *sub_1749E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, _BYTE *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  objc_class *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t *v50;
  _QWORD *v51;
  _QWORD *v52;
  void *v53;
  id v54;
  NSString v55;
  unsigned __int8 v56;
  id v57;
  NSString v58;
  uint64_t v59;
  id v60;
  id v61;
  char *v62;
  id v63;
  void *v64;
  id v65;
  unint64_t v66;
  void *v67;
  uint64_t ObjectType;
  uint64_t (*v69)(uint64_t, uint64_t, __n128);
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  objc_super v89;
  char v90[24];
  _QWORD v91[3];
  _BYTE v92[152];

  swift_bridgeObjectRelease(a3);
  v28 = (uint64_t)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity];
  *(_OWORD *)v28 = 0u;
  *(_OWORD *)(v28 + 16) = 0u;
  *(_QWORD *)(v28 + 32) = 0;
  v29 = &a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding];
  *((_QWORD *)v29 + 1) = 0;
  swift_unknownObjectWeakInit(v29, 0);
  v30 = &a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
  *((_QWORD *)v30 + 1) = 0;
  swift_unknownObjectWeakInit(v30, 0);
  a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels] = 0;
  *(_QWORD *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer] = 0;
  *(_QWORD *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeOverlayView] = 0;
  *(_QWORD *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeView] = 0;
  *(_QWORD *)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapTouchType] = 0;
  v31 = (uint64_t)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_axCurrentLocation];
  sub_555CC((uint64_t)v92);
  sub_49AD8((uint64_t)v92, v31);
  sub_49AD8((uint64_t)v92, (uint64_t)&a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation]);
  a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isHandlingPageDrag] = 0;
  v32 = &a20[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_log];
  v33 = qword_3B57C8;
  v34 = a20;
  if (v33 != -1)
    swift_once(&qword_3B57C8, sub_1614F8);
  v35 = type metadata accessor for Logger(0);
  v36 = sub_555F0(v35, (uint64_t)qword_3BE450);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v32, v36, v35);
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_stateHandler] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_debugLayers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeLongPressTipController] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingHostView] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___pagedModeView] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___scrollContainerView] = 0;
  swift_unknownObjectWeakInit(&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_scrollGestureHostView], 0);
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer] = 0;
  v37 = &v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_uberScrollLastOffset];
  *v37 = 0;
  v37[1] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___pageLabelContainerView] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkCenterYConstraint] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___bookmarkWidthConstraint] = 0;
  v38 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkView;
  *(_QWORD *)&v34[v38] = sub_165344();
  v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_adjustingForSinglePage] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] = 1;
  v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll] = 0;
  v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer] = 0;
  v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isCurlPanRecognizerEnabled] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer] = 0;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView] = 0;
  bzero(&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_cancellables], 0x280uLL);
  v39 = &v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_ConstraintPrefix];
  *v39 = 0xD000000000000010;
  v39[1] = 0x80000000002C6F70;
  swift_beginAccess(v28, v91, 33, 0);
  sub_55608(a1, v28);
  swift_endAccess(v91);
  v40 = (objc_class *)type metadata accessor for BookContentViewController(0);
  v91[0] = v40;
  v41 = sub_319AC(&qword_3B7020);
  v42 = String.init<A>(describing:)(v91, v41);
  v44 = v43;
  v45 = objc_allocWithZone((Class)type metadata accessor for BookContentHostView(0));
  sub_1A7678(v42, v44, 0, 0, 0);
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView] = v46;
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController] = a4;
  swift_beginAccess(v29, v91, 1, 0);
  *((_QWORD *)v29 + 1) = a6;
  swift_unknownObjectWeakAssign(v29, a5);
  v47 = &v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler];
  *v47 = a7;
  v47[1] = a24;
  v48 = &v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentNavigationEventHandler];
  *v48 = a8;
  v48[1] = a26;
  v49 = &v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentHostEnvironmentProvider];
  *v49 = a9;
  v49[1] = a10;
  swift_beginAccess(v30, v90, 1, 0);
  *((_QWORD *)v30 + 1) = a12;
  swift_unknownObjectWeakAssign(v30, a11);
  v50 = (uint64_t *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layoutModeProvider];
  *v50 = a13;
  v50[1] = a14;
  v51 = &v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService];
  *v51 = a15;
  v51[1] = a16;
  v52 = &v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider];
  *v52 = a17;
  v52[1] = a18;
  v53 = (void *)objc_opt_self(NSUserDefaults);
  swift_retain();
  swift_unknownObjectRetain(a7);
  swift_unknownObjectRetain(a8);
  swift_unknownObjectRetain(a9);
  swift_unknownObjectRetain(a13);
  swift_unknownObjectRetain(a15);
  v54 = objc_msgSend(v53, "standardUserDefaults", swift_unknownObjectRetain(a17).n128_f64[0]);
  v55 = String._bridgeToObjectiveC()();
  v56 = objc_msgSend(v54, "BOOLForKey:", v55);

  v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_showPaginatingWebView] = v56;
  v57 = objc_msgSend(v53, "standardUserDefaults");
  v58 = String._bridgeToObjectiveC()();
  LOBYTE(v55) = objc_msgSend(v57, "BOOLForKey:", v58);

  v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_showLayoutGuides] = (_BYTE)v55;
  v59 = type metadata accessor for ReadingLoupeStateController();
  swift_allocObject(v59, 384);
  *(_QWORD *)&v34[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController] = sub_1116B8();

  v89.receiver = v34;
  v89.super_class = v40;
  v60 = objc_msgSendSuper2(&v89, "initWithNibName:bundle:", 0, 0);
  v61 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v62 = (char *)v60;
  v63 = objc_msgSend(v61, "initWithTarget:action:", v62, "unhandledTapAction:");
  objc_msgSend(v63, "setDelegate:", v62);
  objc_msgSend(v63, "setCancelsTouchesInView:", 0);
  v64 = *(void **)&v62[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer];
  *(_QWORD *)&v62[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer] = v63;

  v65 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "initWithTarget:action:", v62, "pageDrag:");
  v66 = 1;
  objc_msgSend(v65, "setDelegate:", v62);
  UIGestureRecognizer.be_allowedTouchTypes.setter((uint64_t)&off_378E50);
  objc_msgSend(v65, "setAllowedScrollTypesMask:", 2);
  v67 = *(void **)&v62[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer];
  *(_QWORD *)&v62[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer] = v65;

  if (a5)
  {
    ObjectType = swift_getObjectType(a5);
    v69 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a6 + 8);
    v70 = swift_unknownObjectRetain(a5);
    v71 = v69(ObjectType, a6, v70);
    v73 = v72;
    swift_unknownObjectRelease(a5);
    v74 = swift_getObjectType(v71);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 24))(v74, v73);
    swift_unknownObjectRelease(v71);
  }
  *(_QWORD *)&v62[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] = v66;
  sub_16263C(v66);
  sub_162DA8();
  v75 = *(void (**)(char *, char *, _UNKNOWN **, uint64_t, uint64_t))(a24 + 8);
  v76 = v62;
  v75(v76, v76, &protocol witness table for BookContentViewController, a21, a24);

  sub_34450(0, (unint64_t *)&unk_3BE690, UITraitCollection_ptr);
  v77 = v76;
  v78 = static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  v79 = UIViewController.registerForTraitChanges(_:action:)(v78, "_traitCollectionDidChangeWithSender:previousTraitCollection:");
  swift_bridgeObjectRelease(v78);

  swift_unknownObjectRelease(v79);
  sub_1647A0();
  sub_164A30();
  v80 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController;
  swift_unknownObjectWeakAssign(*(_QWORD *)&v77[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeStateController] + 344, v77);
  v81 = v77;
  swift_retain();
  sub_10B0A4();

  swift_release();
  v82 = *(_QWORD *)&v77[v80];
  *(_QWORD *)(v82 + 304) = a12;
  swift_unknownObjectWeakAssign(v82 + 296, a11);
  swift_retain();
  swift_unknownObjectRetain(a11);
  sub_10AD9C();
  swift_unknownObjectRelease(a11);
  swift_release();
  swift_unknownObjectRetain(a13);
  swift_retain();
  sub_112114(a13, a14);
  swift_unknownObjectRelease(a13);
  swift_release();
  v83 = *(_QWORD *)&v77[v80];
  *(_QWORD *)(v83 + 328) = a25;
  swift_unknownObjectWeakAssign(v83 + 320, a19);

  sub_52128(a1, &qword_3B7018);
  return v81;
}

char *sub_1752F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  _BYTE *v26;

  v26 = objc_allocWithZone((Class)type metadata accessor for BookContentViewController(0));
  return sub_1749E8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           v26,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t type metadata accessor for BookContentViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_3BE650;
  if (!qword_3BE650)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookContentViewController);
  return result;
}

uint64_t sub_175434()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_175458()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView), "setFrame:", *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_17547C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_17548C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_175494()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1754B8(uint64_t a1)
{
  uint64_t v1;

  sub_169E5C(a1, v1);
}

uint64_t sub_1754C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_1127B0(v3, a2);
}

uint64_t sub_175518@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_retain(v4);
}

uint64_t sub_175570@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A896C(a1, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, a2);
}

uint64_t sub_17557C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_A89CC(a1, a2, a3, a4, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding);
}

double sub_175588@<D0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return sub_1755FC(a1, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler, a2);
}

double sub_175594(__int128 *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_16195C(a1, a2, a3, a4, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentEventHandler);
}

double sub_1755B0@<D0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return sub_1755FC(a1, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentNavigationEventHandler, a2);
}

double sub_1755BC(__int128 *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_16195C(a1, a2, a3, a4, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentNavigationEventHandler);
}

uint64_t sub_1755D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A896C(a1, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider, a2);
}

uint64_t sub_1755E4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_A89CC(a1, a2, a3, a4, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider);
}

double sub_1755F0@<D0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return sub_1755FC(a1, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService, a2);
}

double sub_1755FC@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, __int128 *a3@<X8>)
{
  __int128 *v4;
  __int128 v5;
  double result;
  _BYTE v7[24];

  v4 = (__int128 *)(*a1 + *a2);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  *a3 = *v4;
  *(_QWORD *)&result = swift_unknownObjectRetain(v5).n128_u64[0];
  return result;
}

double sub_175650(__int128 *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_16195C(a1, a2, a3, a4, &OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingService);
}

void sub_17566C(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

uint64_t sub_1756C0()
{
  return type metadata accessor for BookContentViewController(0);
}

uint64_t sub_1756C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[47];

  v4[0] = &unk_2EEDA0;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_2EEDB8;
  v4[3] = &unk_2EEDD0;
  v4[4] = &unk_2EEDD0;
  v4[5] = &unk_2EEDB8;
  v4[6] = &unk_2EEDD0;
  v4[7] = &unk_2EEDD0;
  v4[8] = &unk_2EEDE8;
  v4[9] = &unk_2EEE00;
  v4[10] = &unk_2EEE00;
  v4[11] = &unk_2EEE00;
  v4[12] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[13] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[14] = &unk_2EEE18;
  v4[15] = &unk_2EEE18;
  v4[16] = &unk_2EEDE8;
  v4[17] = &unk_2EEDD0;
  v4[18] = &unk_2EEDD0;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[19] = *(_QWORD *)(result - 8) + 64;
    v4[20] = &unk_2EEE00;
    v4[21] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[22] = &unk_2EEDE8;
    v4[23] = &unk_2EEDE8;
    v4[24] = (char *)&value witness table for () + 64;
    v4[25] = &unk_2EEE00;
    v4[26] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[27] = &unk_2EEE00;
    v4[28] = &unk_2EEE00;
    v4[29] = &unk_2EEE00;
    v4[30] = &unk_2EEE30;
    v4[31] = &unk_2EEE00;
    v4[32] = &unk_2EEE48;
    v4[33] = &unk_2EEE00;
    v4[34] = &unk_2EEE00;
    v4[35] = &unk_2EEE00;
    v4[36] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[37] = &unk_2EEDE8;
    v4[38] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[39] = &unk_2EEDE8;
    v4[40] = &unk_2EEDE8;
    v4[41] = &unk_2EEE00;
    v4[42] = &unk_2EEDE8;
    v4[43] = &unk_2EEE00;
    v4[44] = &unk_2EEE00;
    v4[45] = &unk_2EEE60;
    v4[46] = &unk_2EEDD0;
    return swift_updateClassMetadata2(a1, 256, 47, v4, a1 + 80);
  }
  return result;
}

uint64_t method lookup function for BookContentViewController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookContentViewController);
}

uint64_t dispatch thunk of BookContentViewController.bookEntity.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of BookContentViewController.contentLayoutController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookContentViewController.contentLayoutProviderProviding.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of BookContentViewController.contentNavigationEventHandler.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1F8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookContentViewController.readingSettingsProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1F8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookContentViewController.paginatingService.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_248.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of BookContentViewController.isShowingExpandedPageLabels.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_248.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookContentViewController.isShowingExpandedPageLabels.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_248.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookContentViewController.isShowingExpandedPageLabels.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_248.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookContentViewController.__allocating_init(bookEntity:headerText:contentLayoutController:contentLayoutProviderProviding:contentEventHandler:contentNavigationEventHandler:contentHostEnvironmentProvider:readingSettingsProvider:layoutModeProvider:paginatingService:pageNumberProvider:contentUpdateProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 968))();
}

uint64_t dispatch thunk of BookContentViewController.contentHostView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_3D8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of BookContentViewController.contentScrollContainer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_478.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookContentViewController.setCurlPanRecognizer(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_5B8.size + (swift_isaMask & *v0)))();
}

_QWORD *destroy for BookContentViewController.Subscriptions(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (result[3])
    result = (_QWORD *)sub_34488(result);
  if (v1[8])
    result = (_QWORD *)sub_34488(v1 + 5);
  if (v1[13])
    result = (_QWORD *)sub_34488(v1 + 10);
  if (v1[18])
    result = (_QWORD *)sub_34488(v1 + 15);
  if (v1[23])
    result = (_QWORD *)sub_34488(v1 + 20);
  if (v1[28])
    result = (_QWORD *)sub_34488(v1 + 25);
  if (v1[33])
    result = (_QWORD *)sub_34488(v1 + 30);
  if (v1[38])
    result = (_QWORD *)sub_34488(v1 + 35);
  if (v1[43])
    result = (_QWORD *)sub_34488(v1 + 40);
  if (v1[48])
    result = (_QWORD *)sub_34488(v1 + 45);
  if (v1[53])
    result = (_QWORD *)sub_34488(v1 + 50);
  if (v1[58])
    result = (_QWORD *)sub_34488(v1 + 55);
  if (v1[63])
    result = (_QWORD *)sub_34488(v1 + 60);
  if (v1[68])
    result = (_QWORD *)sub_34488(v1 + 65);
  if (v1[73])
    result = (_QWORD *)sub_34488(v1 + 70);
  if (v1[78])
    return (_QWORD *)sub_34488(v1 + 75);
  return result;
}

uint64_t initializeWithCopy for BookContentViewController.Subscriptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _OWORD *v22;
  _OWORD *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _OWORD *v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  _OWORD *v57;
  _OWORD *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  _OWORD *v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  __int128 v70;
  _OWORD *v71;
  _OWORD *v72;
  uint64_t v73;
  __int128 v74;
  _OWORD *v75;
  _OWORD *v76;
  uint64_t v77;
  __int128 v78;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  v7 = (_OWORD *)(a1 + 40);
  v8 = (_OWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 64);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v9;
    *(_QWORD *)(a1 + 72) = v10;
    (**(void (***)(_OWORD *, _OWORD *))(v9 - 8))(v7, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 56);
    *v7 = *v8;
    *(_OWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v12 = (_OWORD *)(a1 + 80);
  v13 = (_OWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 104);
  if (v14)
  {
    v15 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v14;
    *(_QWORD *)(a1 + 112) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 96);
    *v12 = *v13;
    *(_OWORD *)(a1 + 96) = v16;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  }
  v17 = (_OWORD *)(a1 + 120);
  v18 = (_OWORD *)(a2 + 120);
  v19 = *(_QWORD *)(a2 + 144);
  if (v19)
  {
    v20 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v19;
    *(_QWORD *)(a1 + 152) = v20;
    (**(void (***)(_OWORD *, _OWORD *))(v19 - 8))(v17, v18);
  }
  else
  {
    v21 = *(_OWORD *)(a2 + 136);
    *v17 = *v18;
    *(_OWORD *)(a1 + 136) = v21;
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  }
  v22 = (_OWORD *)(a1 + 160);
  v23 = (_OWORD *)(a2 + 160);
  v24 = *(_QWORD *)(a2 + 184);
  if (v24)
  {
    v25 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v24;
    *(_QWORD *)(a1 + 192) = v25;
    (**(void (***)(_OWORD *, _OWORD *))(v24 - 8))(v22, v23);
  }
  else
  {
    v26 = *(_OWORD *)(a2 + 176);
    *v22 = *v23;
    *(_OWORD *)(a1 + 176) = v26;
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  }
  v27 = (_OWORD *)(a1 + 200);
  v28 = (_OWORD *)(a2 + 200);
  v29 = *(_QWORD *)(a2 + 224);
  if (v29)
  {
    v30 = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 224) = v29;
    *(_QWORD *)(a1 + 232) = v30;
    (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
  }
  else
  {
    v31 = *(_OWORD *)(a2 + 216);
    *v27 = *v28;
    *(_OWORD *)(a1 + 216) = v31;
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  }
  v32 = (_OWORD *)(a1 + 240);
  v33 = (_OWORD *)(a2 + 240);
  v34 = *(_QWORD *)(a2 + 264);
  if (v34)
  {
    v35 = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 264) = v34;
    *(_QWORD *)(a1 + 272) = v35;
    (**(void (***)(_OWORD *, _OWORD *))(v34 - 8))(v32, v33);
  }
  else
  {
    v36 = *(_OWORD *)(a2 + 256);
    *v32 = *v33;
    *(_OWORD *)(a1 + 256) = v36;
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  }
  v37 = (_OWORD *)(a1 + 280);
  v38 = (_OWORD *)(a2 + 280);
  v39 = *(_QWORD *)(a2 + 304);
  if (v39)
  {
    v40 = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 304) = v39;
    *(_QWORD *)(a1 + 312) = v40;
    (**(void (***)(_OWORD *, _OWORD *))(v39 - 8))(v37, v38);
  }
  else
  {
    v41 = *(_OWORD *)(a2 + 296);
    *v37 = *v38;
    *(_OWORD *)(a1 + 296) = v41;
    *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  }
  v42 = (_OWORD *)(a1 + 320);
  v43 = (_OWORD *)(a2 + 320);
  v44 = *(_QWORD *)(a2 + 344);
  if (v44)
  {
    v45 = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 344) = v44;
    *(_QWORD *)(a1 + 352) = v45;
    (**(void (***)(_OWORD *, _OWORD *))(v44 - 8))(v42, v43);
  }
  else
  {
    v46 = *(_OWORD *)(a2 + 336);
    *v42 = *v43;
    *(_OWORD *)(a1 + 336) = v46;
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  }
  v47 = (_OWORD *)(a1 + 360);
  v48 = (_OWORD *)(a2 + 360);
  v49 = *(_QWORD *)(a2 + 384);
  if (v49)
  {
    v50 = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 384) = v49;
    *(_QWORD *)(a1 + 392) = v50;
    (**(void (***)(_OWORD *, _OWORD *))(v49 - 8))(v47, v48);
  }
  else
  {
    v51 = *(_OWORD *)(a2 + 376);
    *v47 = *v48;
    *(_OWORD *)(a1 + 376) = v51;
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  }
  v52 = (_OWORD *)(a1 + 400);
  v53 = (_OWORD *)(a2 + 400);
  v54 = *(_QWORD *)(a2 + 424);
  if (v54)
  {
    v55 = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 424) = v54;
    *(_QWORD *)(a1 + 432) = v55;
    (**(void (***)(_OWORD *, _OWORD *))(v54 - 8))(v52, v53);
  }
  else
  {
    v56 = *(_OWORD *)(a2 + 416);
    *v52 = *v53;
    *(_OWORD *)(a1 + 416) = v56;
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  }
  v57 = (_OWORD *)(a1 + 440);
  v58 = (_OWORD *)(a2 + 440);
  v59 = *(_QWORD *)(a2 + 464);
  if (v59)
  {
    v60 = *(_QWORD *)(a2 + 472);
    *(_QWORD *)(a1 + 464) = v59;
    *(_QWORD *)(a1 + 472) = v60;
    (**(void (***)(_OWORD *, _OWORD *))(v59 - 8))(v57, v58);
  }
  else
  {
    v61 = *(_OWORD *)(a2 + 456);
    *v57 = *v58;
    *(_OWORD *)(a1 + 456) = v61;
    *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  }
  v62 = (_OWORD *)(a1 + 480);
  v63 = (_OWORD *)(a2 + 480);
  v64 = *(_QWORD *)(a2 + 504);
  if (v64)
  {
    v65 = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 504) = v64;
    *(_QWORD *)(a1 + 512) = v65;
    (**(void (***)(_OWORD *, _OWORD *))(v64 - 8))(v62, v63);
  }
  else
  {
    v66 = *(_OWORD *)(a2 + 496);
    *v62 = *v63;
    *(_OWORD *)(a1 + 496) = v66;
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  }
  v67 = (_OWORD *)(a1 + 520);
  v68 = (_OWORD *)(a2 + 520);
  v69 = *(_QWORD *)(a2 + 544);
  if (v69)
  {
    *(_QWORD *)(a1 + 544) = v69;
    *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
    (**(void (***)(_OWORD *, _OWORD *))(v69 - 8))(v67, v68);
  }
  else
  {
    v70 = *(_OWORD *)(a2 + 536);
    *v67 = *v68;
    *(_OWORD *)(a1 + 536) = v70;
    *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  }
  v71 = (_OWORD *)(a1 + 560);
  v72 = (_OWORD *)(a2 + 560);
  v73 = *(_QWORD *)(a2 + 584);
  if (v73)
  {
    *(_QWORD *)(a1 + 584) = v73;
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
    (**(void (***)(_OWORD *, _OWORD *))(v73 - 8))(v71, v72);
  }
  else
  {
    v74 = *(_OWORD *)(a2 + 576);
    *v71 = *v72;
    *(_OWORD *)(a1 + 576) = v74;
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  }
  v75 = (_OWORD *)(a1 + 600);
  v76 = (_OWORD *)(a2 + 600);
  v77 = *(_QWORD *)(a2 + 624);
  if (v77)
  {
    *(_QWORD *)(a1 + 624) = v77;
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    (**(void (***)(_OWORD *, _OWORD *))(v77 - 8))(v75, v76);
  }
  else
  {
    v78 = *(_OWORD *)(a2 + 616);
    *v75 = *v76;
    *(_OWORD *)(a1 + 616) = v78;
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  }
  return a1;
}

uint64_t assignWithCopy for BookContentViewController.Subscriptions(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      sub_1019A8((_QWORD *)a1, a2);
      goto LABEL_8;
    }
    sub_34488((_QWORD *)a1);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  v5 = *a2;
  v6 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  v7 = *((_QWORD *)a2 + 8);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v7)
    {
      sub_1019A8((_QWORD *)(a1 + 40), (_QWORD *)a2 + 5);
      goto LABEL_15;
    }
    sub_34488((_QWORD *)(a1 + 40));
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  v8 = *(__int128 *)((char *)a2 + 40);
  v9 = *(__int128 *)((char *)a2 + 56);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
LABEL_15:
  v10 = *((_QWORD *)a2 + 13);
  if (*(_QWORD *)(a1 + 104))
  {
    if (v10)
    {
      sub_1019A8((_QWORD *)(a1 + 80), (_QWORD *)a2 + 10);
      goto LABEL_22;
    }
    sub_34488((_QWORD *)(a1 + 80));
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 104) = v10;
    *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 80, (uint64_t)(a2 + 5));
    goto LABEL_22;
  }
  v11 = a2[5];
  v12 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 96) = v12;
LABEL_22:
  v13 = *((_QWORD *)a2 + 18);
  if (*(_QWORD *)(a1 + 144))
  {
    if (v13)
    {
      sub_1019A8((_QWORD *)(a1 + 120), (_QWORD *)a2 + 15);
      goto LABEL_29;
    }
    sub_34488((_QWORD *)(a1 + 120));
  }
  else if (v13)
  {
    *(_QWORD *)(a1 + 144) = v13;
    *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 120, (uint64_t)a2 + 120);
    goto LABEL_29;
  }
  v14 = *(__int128 *)((char *)a2 + 120);
  v15 = *(__int128 *)((char *)a2 + 136);
  *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
  *(_OWORD *)(a1 + 120) = v14;
  *(_OWORD *)(a1 + 136) = v15;
LABEL_29:
  v16 = *((_QWORD *)a2 + 23);
  if (*(_QWORD *)(a1 + 184))
  {
    if (v16)
    {
      sub_1019A8((_QWORD *)(a1 + 160), (_QWORD *)a2 + 20);
      goto LABEL_36;
    }
    sub_34488((_QWORD *)(a1 + 160));
  }
  else if (v16)
  {
    *(_QWORD *)(a1 + 184) = v16;
    *(_QWORD *)(a1 + 192) = *((_QWORD *)a2 + 24);
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 160, (uint64_t)(a2 + 10));
    goto LABEL_36;
  }
  v17 = a2[10];
  v18 = a2[11];
  *(_QWORD *)(a1 + 192) = *((_QWORD *)a2 + 24);
  *(_OWORD *)(a1 + 160) = v17;
  *(_OWORD *)(a1 + 176) = v18;
LABEL_36:
  v19 = *((_QWORD *)a2 + 28);
  if (*(_QWORD *)(a1 + 224))
  {
    if (v19)
    {
      sub_1019A8((_QWORD *)(a1 + 200), (_QWORD *)a2 + 25);
      goto LABEL_43;
    }
    sub_34488((_QWORD *)(a1 + 200));
  }
  else if (v19)
  {
    *(_QWORD *)(a1 + 224) = v19;
    *(_QWORD *)(a1 + 232) = *((_QWORD *)a2 + 29);
    (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 200, (uint64_t)a2 + 200);
    goto LABEL_43;
  }
  v20 = *(__int128 *)((char *)a2 + 200);
  v21 = *(__int128 *)((char *)a2 + 216);
  *(_QWORD *)(a1 + 232) = *((_QWORD *)a2 + 29);
  *(_OWORD *)(a1 + 200) = v20;
  *(_OWORD *)(a1 + 216) = v21;
LABEL_43:
  v22 = *((_QWORD *)a2 + 33);
  if (*(_QWORD *)(a1 + 264))
  {
    if (v22)
    {
      sub_1019A8((_QWORD *)(a1 + 240), (_QWORD *)a2 + 30);
      goto LABEL_50;
    }
    sub_34488((_QWORD *)(a1 + 240));
  }
  else if (v22)
  {
    *(_QWORD *)(a1 + 264) = v22;
    *(_QWORD *)(a1 + 272) = *((_QWORD *)a2 + 34);
    (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 240, (uint64_t)(a2 + 15));
    goto LABEL_50;
  }
  v23 = a2[15];
  v24 = a2[16];
  *(_QWORD *)(a1 + 272) = *((_QWORD *)a2 + 34);
  *(_OWORD *)(a1 + 240) = v23;
  *(_OWORD *)(a1 + 256) = v24;
LABEL_50:
  v25 = *((_QWORD *)a2 + 38);
  if (*(_QWORD *)(a1 + 304))
  {
    if (v25)
    {
      sub_1019A8((_QWORD *)(a1 + 280), (_QWORD *)a2 + 35);
      goto LABEL_57;
    }
    sub_34488((_QWORD *)(a1 + 280));
  }
  else if (v25)
  {
    *(_QWORD *)(a1 + 304) = v25;
    *(_QWORD *)(a1 + 312) = *((_QWORD *)a2 + 39);
    (**(void (***)(uint64_t, uint64_t))(v25 - 8))(a1 + 280, (uint64_t)a2 + 280);
    goto LABEL_57;
  }
  v26 = *(__int128 *)((char *)a2 + 280);
  v27 = *(__int128 *)((char *)a2 + 296);
  *(_QWORD *)(a1 + 312) = *((_QWORD *)a2 + 39);
  *(_OWORD *)(a1 + 280) = v26;
  *(_OWORD *)(a1 + 296) = v27;
LABEL_57:
  v28 = *((_QWORD *)a2 + 43);
  if (*(_QWORD *)(a1 + 344))
  {
    if (v28)
    {
      sub_1019A8((_QWORD *)(a1 + 320), (_QWORD *)a2 + 40);
      goto LABEL_64;
    }
    sub_34488((_QWORD *)(a1 + 320));
  }
  else if (v28)
  {
    *(_QWORD *)(a1 + 344) = v28;
    *(_QWORD *)(a1 + 352) = *((_QWORD *)a2 + 44);
    (**(void (***)(uint64_t, uint64_t))(v28 - 8))(a1 + 320, (uint64_t)(a2 + 20));
    goto LABEL_64;
  }
  v29 = a2[20];
  v30 = a2[21];
  *(_QWORD *)(a1 + 352) = *((_QWORD *)a2 + 44);
  *(_OWORD *)(a1 + 320) = v29;
  *(_OWORD *)(a1 + 336) = v30;
LABEL_64:
  v31 = *((_QWORD *)a2 + 48);
  if (*(_QWORD *)(a1 + 384))
  {
    if (v31)
    {
      sub_1019A8((_QWORD *)(a1 + 360), (_QWORD *)a2 + 45);
      goto LABEL_71;
    }
    sub_34488((_QWORD *)(a1 + 360));
  }
  else if (v31)
  {
    *(_QWORD *)(a1 + 384) = v31;
    *(_QWORD *)(a1 + 392) = *((_QWORD *)a2 + 49);
    (**(void (***)(uint64_t, uint64_t))(v31 - 8))(a1 + 360, (uint64_t)a2 + 360);
    goto LABEL_71;
  }
  v32 = *(__int128 *)((char *)a2 + 360);
  v33 = *(__int128 *)((char *)a2 + 376);
  *(_QWORD *)(a1 + 392) = *((_QWORD *)a2 + 49);
  *(_OWORD *)(a1 + 360) = v32;
  *(_OWORD *)(a1 + 376) = v33;
LABEL_71:
  v34 = *((_QWORD *)a2 + 53);
  if (*(_QWORD *)(a1 + 424))
  {
    if (v34)
    {
      sub_1019A8((_QWORD *)(a1 + 400), (_QWORD *)a2 + 50);
      goto LABEL_78;
    }
    sub_34488((_QWORD *)(a1 + 400));
  }
  else if (v34)
  {
    *(_QWORD *)(a1 + 424) = v34;
    *(_QWORD *)(a1 + 432) = *((_QWORD *)a2 + 54);
    (**(void (***)(uint64_t, uint64_t))(v34 - 8))(a1 + 400, (uint64_t)(a2 + 25));
    goto LABEL_78;
  }
  v35 = a2[25];
  v36 = a2[26];
  *(_QWORD *)(a1 + 432) = *((_QWORD *)a2 + 54);
  *(_OWORD *)(a1 + 400) = v35;
  *(_OWORD *)(a1 + 416) = v36;
LABEL_78:
  v37 = *((_QWORD *)a2 + 58);
  if (*(_QWORD *)(a1 + 464))
  {
    if (v37)
    {
      sub_1019A8((_QWORD *)(a1 + 440), (_QWORD *)a2 + 55);
      goto LABEL_85;
    }
    sub_34488((_QWORD *)(a1 + 440));
  }
  else if (v37)
  {
    *(_QWORD *)(a1 + 464) = v37;
    *(_QWORD *)(a1 + 472) = *((_QWORD *)a2 + 59);
    (**(void (***)(uint64_t, uint64_t))(v37 - 8))(a1 + 440, (uint64_t)a2 + 440);
    goto LABEL_85;
  }
  v38 = *(__int128 *)((char *)a2 + 440);
  v39 = *(__int128 *)((char *)a2 + 456);
  *(_QWORD *)(a1 + 472) = *((_QWORD *)a2 + 59);
  *(_OWORD *)(a1 + 440) = v38;
  *(_OWORD *)(a1 + 456) = v39;
LABEL_85:
  v40 = *((_QWORD *)a2 + 63);
  if (*(_QWORD *)(a1 + 504))
  {
    if (v40)
    {
      sub_1019A8((_QWORD *)(a1 + 480), (_QWORD *)a2 + 60);
      goto LABEL_92;
    }
    sub_34488((_QWORD *)(a1 + 480));
  }
  else if (v40)
  {
    *(_QWORD *)(a1 + 504) = v40;
    *(_QWORD *)(a1 + 512) = *((_QWORD *)a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v40 - 8))(a1 + 480, (uint64_t)(a2 + 30));
    goto LABEL_92;
  }
  v41 = a2[30];
  v42 = a2[31];
  *(_QWORD *)(a1 + 512) = *((_QWORD *)a2 + 64);
  *(_OWORD *)(a1 + 480) = v41;
  *(_OWORD *)(a1 + 496) = v42;
LABEL_92:
  v43 = *((_QWORD *)a2 + 68);
  if (*(_QWORD *)(a1 + 544))
  {
    if (v43)
    {
      sub_1019A8((_QWORD *)(a1 + 520), (_QWORD *)a2 + 65);
      goto LABEL_99;
    }
    sub_34488((_QWORD *)(a1 + 520));
  }
  else if (v43)
  {
    *(_QWORD *)(a1 + 544) = v43;
    *(_QWORD *)(a1 + 552) = *((_QWORD *)a2 + 69);
    (**(void (***)(uint64_t, uint64_t))(v43 - 8))(a1 + 520, (uint64_t)a2 + 520);
    goto LABEL_99;
  }
  v44 = *(__int128 *)((char *)a2 + 520);
  v45 = *(__int128 *)((char *)a2 + 536);
  *(_QWORD *)(a1 + 552) = *((_QWORD *)a2 + 69);
  *(_OWORD *)(a1 + 520) = v44;
  *(_OWORD *)(a1 + 536) = v45;
LABEL_99:
  v46 = *((_QWORD *)a2 + 73);
  if (*(_QWORD *)(a1 + 584))
  {
    if (v46)
    {
      sub_1019A8((_QWORD *)(a1 + 560), (_QWORD *)a2 + 70);
      goto LABEL_106;
    }
    sub_34488((_QWORD *)(a1 + 560));
  }
  else if (v46)
  {
    *(_QWORD *)(a1 + 584) = v46;
    *(_QWORD *)(a1 + 592) = *((_QWORD *)a2 + 74);
    (**(void (***)(uint64_t, uint64_t))(v46 - 8))(a1 + 560, (uint64_t)(a2 + 35));
    goto LABEL_106;
  }
  v47 = a2[35];
  v48 = a2[36];
  *(_QWORD *)(a1 + 592) = *((_QWORD *)a2 + 74);
  *(_OWORD *)(a1 + 560) = v47;
  *(_OWORD *)(a1 + 576) = v48;
LABEL_106:
  v49 = *((_QWORD *)a2 + 78);
  if (!*(_QWORD *)(a1 + 624))
  {
    if (v49)
    {
      *(_QWORD *)(a1 + 624) = v49;
      *(_QWORD *)(a1 + 632) = *((_QWORD *)a2 + 79);
      (**(void (***)(uint64_t, uint64_t))(v49 - 8))(a1 + 600, (uint64_t)a2 + 600);
      return a1;
    }
LABEL_112:
    v50 = *(__int128 *)((char *)a2 + 600);
    v51 = *(__int128 *)((char *)a2 + 616);
    *(_QWORD *)(a1 + 632) = *((_QWORD *)a2 + 79);
    *(_OWORD *)(a1 + 600) = v50;
    *(_OWORD *)(a1 + 616) = v51;
    return a1;
  }
  if (!v49)
  {
    sub_34488((_QWORD *)(a1 + 600));
    goto LABEL_112;
  }
  sub_1019A8((_QWORD *)(a1 + 600), (_QWORD *)a2 + 75);
  return a1;
}

void *initializeWithTake for BookContentViewController.Subscriptions(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x280uLL);
}

uint64_t assignWithTake for BookContentViewController.Subscriptions(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  if (*(_QWORD *)(a1 + 24))
    sub_34488((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    sub_34488((_QWORD *)(a1 + 40));
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 104))
    sub_34488((_QWORD *)(a1 + 80));
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 144))
    sub_34488((_QWORD *)(a1 + 120));
  v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v7;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 184))
    sub_34488((_QWORD *)(a1 + 160));
  v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 224))
    sub_34488((_QWORD *)(a1 + 200));
  v9 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v9;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  if (*(_QWORD *)(a1 + 264))
    sub_34488((_QWORD *)(a1 + 240));
  v10 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v10;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  if (*(_QWORD *)(a1 + 304))
    sub_34488((_QWORD *)(a1 + 280));
  v11 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v11;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  if (*(_QWORD *)(a1 + 344))
    sub_34488((_QWORD *)(a1 + 320));
  v12 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v12;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  if (*(_QWORD *)(a1 + 384))
    sub_34488((_QWORD *)(a1 + 360));
  v13 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v13;
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  if (*(_QWORD *)(a1 + 424))
    sub_34488((_QWORD *)(a1 + 400));
  v14 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v14;
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  if (*(_QWORD *)(a1 + 464))
    sub_34488((_QWORD *)(a1 + 440));
  v15 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v15;
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  if (*(_QWORD *)(a1 + 504))
    sub_34488((_QWORD *)(a1 + 480));
  v16 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v16;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  if (*(_QWORD *)(a1 + 544))
    sub_34488((_QWORD *)(a1 + 520));
  v17 = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 536) = v17;
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  if (*(_QWORD *)(a1 + 584))
    sub_34488((_QWORD *)(a1 + 560));
  v18 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v18;
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  if (*(_QWORD *)(a1 + 624))
    sub_34488((_QWORD *)(a1 + 600));
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  v19 = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 616) = v19;
  return a1;
}

uint64_t getEnumTagSinglePayload for BookContentViewController.Subscriptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 640))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BookContentViewController.Subscriptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 632) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 640) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 640) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookContentViewController.Subscriptions()
{
  return &type metadata for BookContentViewController.Subscriptions;
}

ValueMetadata *type metadata accessor for ReadingLoupeLongPressTip()
{
  return &type metadata for ReadingLoupeLongPressTip;
}

void *sub_17695C()
{
  return &protocol witness table for String;
}

unint64_t sub_17696C()
{
  unint64_t result;

  result = qword_3BE660;
  if (!qword_3BE660)
  {
    result = swift_getWitnessTable(&unk_2EEEAC, &type metadata for ReadingLoupeLongPressTip);
    atomic_store(result, (unint64_t *)&qword_3BE660);
  }
  return result;
}

uint64_t sub_1769B0()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = BookEPUBBundle();
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_5C170();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

uint64_t sub_176A80()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v9[2];

  v0 = BookEPUBBundle();
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v9[0] = v4;
  v9[1] = v6;
  v7 = sub_5C170();
  return Text.init<A>(_:)(v9, &type metadata for String, v7);
}

unint64_t sub_176B50()
{
  unint64_t result;

  result = qword_3BE688;
  if (!qword_3BE688)
  {
    result = swift_getWitnessTable(&unk_2EEEE4, &type metadata for ReadingLoupeLongPressTip);
    atomic_store(result, (unint64_t *)&qword_3BE688);
  }
  return result;
}

id sub_176B94()
{
  return sub_176FEC();
}

void sub_176B9C(uint64_t a1)
{
  uint64_t v1;

  sub_16F470(a1, *(char **)(v1 + 16));
}

void sub_176BA4()
{
  uint64_t v0;

  sub_16F5F4(*(_QWORD *)(v0 + 16));
}

void sub_176BAC()
{
  _BYTE *v0;
  char *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _BYTE v11[144];

  v1 = &v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_QWORD *)v1 + 4) = 0;
  v2 = &v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2, 0);
  v3 = &v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingSettingsProvider];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isShowingExpandedPageLabels] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeOverlayView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___readingLoupeView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_unhandledTapTouchType] = 0;
  v4 = (uint64_t)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_axCurrentLocation];
  sub_555CC((uint64_t)v11);
  sub_49AD8((uint64_t)v11, v4);
  sub_49AD8((uint64_t)v11, (uint64_t)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_failedLocation]);
  v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isHandlingPageDrag] = 0;
  v5 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_log;
  if (qword_3B57C8 != -1)
    swift_once(&qword_3B57C8, sub_1614F8);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_555F0(v6, (uint64_t)qword_3BE450);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(&v0[v5], v7, v6);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_stateHandler] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_debugLayers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_readingLoupeLongPressTipController] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_paginatingHostView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___pagedModeView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___scrollContainerView] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_scrollGestureHostView], 0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController__uberScrollContainer] = 0;
  v8 = &v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_uberScrollLastOffset];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___pageLabelContainerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkCenterYConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController____lazy_storage___bookmarkWidthConstraint] = 0;
  v9 = OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookmarkView;
  *(_QWORD *)&v0[v9] = sub_165344();
  v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_adjustingForSinglePage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_layout] = 1;
  v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_updateLocationOnScroll] = 0;
  v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_userIsScrolling] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_slidePanRecognizer] = 0;
  v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_isCurlPanRecognizerEnabled] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_curlPanRecognizer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView] = 0;
  bzero(&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_cancellables], 0x280uLL);
  v10 = &v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_ConstraintPrefix];
  *v10 = 0xD000000000000010;
  v10[1] = 0x80000000002C6F70;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000002C69C0, "BookEPUB/BookContentViewController.swift", 40, 2, 181, 0);
  __break(1u);
}

void sub_176E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE v17[24];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutProviderProviding, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType(Strong);
    v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    v9 = v8;
    swift_unknownObjectRelease(v4);
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
    v11 = swift_getObjectType(v7);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 120))(v11, v9);
    v13 = (*(double (**)(uint64_t, uint64_t))(v9 + 64))(v11, v9);
    v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider + 8);
    v15 = swift_getObjectType(*(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_pageNumberProvider));
    v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v15, v14);
    sub_16FD2C(v10, v12, v7, v9, v16 & 1, v13);
    swift_unknownObjectRelease(v7);
  }
}

void sub_176FA8()
{
  uint64_t v0;

  sub_167C4C(v0);
}

void sub_176FB0()
{
  uint64_t v0;

  sub_167D48(v0);
}

_QWORD *sub_176FB8(_QWORD *a1)
{
  destroy for BookContentViewController.Subscriptions(a1);
  return a1;
}

id sub_176FE4()
{
  return sub_176FEC();
}

id sub_176FEC()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentSnapshotView);
  if (result)
    return objc_msgSend(result, "setAlpha:");
  return result;
}

uint64_t sub_177010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

unint64_t sub_1770A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_172694(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)v3, *(_QWORD *)(v3 + 8));
}

double sub_1770EC()
{
  uint64_t v0;

  return sub_171758(v0);
}

double sub_1770F4()
{
  uint64_t v0;

  return sub_171800(v0);
}

double sub_1770FC(_BYTE *a1)
{
  uint64_t v1;

  return sub_16A074(a1, v1);
}

uint64_t sub_177104(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_319AC(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_177148(uint64_t *a1)
{
  uint64_t v1;

  sub_16AB3C(a1, v1);
}

double sub_177150(uint64_t *a1)
{
  uint64_t v1;

  return sub_16ADFC(a1, v1);
}

void sub_177158(uint64_t a1)
{
  uint64_t v1;

  sub_16C170(a1, v1);
}

void sub_177164(unint64_t *a1)
{
  uint64_t *v1;

  sub_16C430(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_177174()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1771A0(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_16C99C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1771AC(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_34450(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1771EC(uint64_t a1)
{
  uint64_t v1;

  sub_16D114(a1, v1);
}

double sub_1771F4(uint64_t a1)
{
  uint64_t v1;

  return sub_16D3C8(a1, v1);
}

void sub_1771FC(__int128 *a1)
{
  uint64_t v1;

  sub_16D594(a1, v1);
}

double sub_177204(uint64_t a1)
{
  uint64_t v1;

  return sub_16E790(a1, v1);
}

void sub_17720C(char *a1)
{
  uint64_t v1;

  sub_16E978(a1, v1);
}

void sub_177214(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_16ED54(a1, v1);
}

double sub_17721C(_BYTE *a1)
{
  uint64_t v1;

  return sub_16EF74(a1, v1);
}

double sub_177224(_BYTE *a1)
{
  uint64_t v1;

  return sub_16F038(a1, v1);
}

uint64_t sub_17722C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[9]);
  return swift_deallocObject(v0, 162, 7);
}

void sub_177260()
{
  uint64_t v0;

  sub_16E32C(*(_QWORD *)(v0 + 16), (_OWORD *)(v0 + 24));
}

uint64_t sub_17726C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_177290()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 1.0);
}

uint64_t sub_1772A4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1772D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_3BE7F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_3F0C0;
  return sub_16A160(a1, v4, v5, v6);
}

void sub_17733C()
{
  uint64_t v0;

  sub_16AAE0(v0);
}

uint64_t sub_177344()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_177368()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_hostView);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isFooterVisible) = 1;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView), "setAlpha:", 1.0);
}

uint64_t PageNavigationStyle.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_177454 + 4 * byte_2EEF50[a1]))(1819440483, 0xE400000000000000);
}

uint64_t sub_177454()
{
  return 0x6564696C73;
}

uint64_t sub_177468()
{
  return 1701736302;
}

uint64_t sub_177474()
{
  return 0x6E696C6C6F726373;
}

void PageNavigationStyle.paged.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1774C4()
{
  unsigned __int8 v0;

  v0 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E696C6C6F726373, 0xE900000000000067, 0x6564696C73, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(0xE500000000000000);
  return (v0 ^ 1) & 1;
}

void sub_17753C(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_177580@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1775D4 + 4 * byte_2EEF5C[a1]))(0x6564696C73);
}

uint64_t sub_1775D4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6564696C73 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6564696C73, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_177670()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1776B4()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6564696C73, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_177718()
{
  __asm { BR              X10 }
}

uint64_t sub_17774C(uint64_t a1)
{
  String.hash(into:)(a1, 0x6564696C73, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_17779C(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1777DC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6564696C73, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

unint64_t sub_177840@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8BookEPUB19PageNavigationStyleO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_17786C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_177894 + 4 * byte_2EEF6C[*v0]))();
}

void sub_177894(_QWORD *a1@<X8>)
{
  *a1 = 0x6564696C73;
  a1[1] = 0xE500000000000000;
}

void sub_1778AC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1701736302;
  a1[1] = v1;
}

void sub_1778BC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E696C6C6F726373;
  a1[1] = 0xE900000000000067;
}

void PageNavigationStyle.displayName.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_177908()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = BookEPUBBundle();
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

void PageNavigationStyle.accessibilityName.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_177AD0()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = BookEPUBBundle();
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

unint64_t _s8BookEPUB19PageNavigationStyleO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_379A60, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

unint64_t sub_177C30()
{
  unint64_t result;

  result = qword_3BE848;
  if (!qword_3BE848)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PageNavigationStyle, &type metadata for PageNavigationStyle);
    atomic_store(result, (unint64_t *)&qword_3BE848);
  }
  return result;
}

unint64_t sub_177C78()
{
  unint64_t result;

  result = qword_3BE850;
  if (!qword_3BE850)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PageNavigationStyle, &type metadata for PageNavigationStyle);
    atomic_store(result, (unint64_t *)&qword_3BE850);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PageNavigationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_177D08 + 4 * byte_2EEF75[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_177D3C + 4 * byte_2EEF70[v4]))();
}

uint64_t sub_177D3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_177D44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x177D4CLL);
  return result;
}

uint64_t sub_177D58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x177D60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_177D64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_177D6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageNavigationStyle()
{
  return &type metadata for PageNavigationStyle;
}

double BookContentView.init(contentViewController:snapshotDelegate:contentViewProxy:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v10;
  uint64_t v11;
  double result;

  swift_unknownObjectWeakInit(a5, 0);
  *(_QWORD *)(a5 + 24) = 0;
  swift_unknownObjectWeakInit(a5 + 16, 0);
  v10 = (_QWORD *)(a5 + *(int *)(type metadata accessor for BookContentView(0) + 28));
  *v10 = swift_getKeyPath(&unk_2EF080);
  v11 = sub_319AC(&qword_3B6F20);
  swift_storeEnumTagMultiPayload(v10, v11, 0);
  swift_unknownObjectWeakAssign(a5, a1);

  *(_QWORD *)(a5 + 8) = a4;
  *(_QWORD *)(a5 + 24) = a3;
  swift_unknownObjectWeakAssign(a5 + 16, a2);
  *(_QWORD *)&result = swift_unknownObjectRelease(a2).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for BookContentView(uint64_t a1)
{
  return sub_3E7A8(a1, (uint64_t *)&unk_3BEA40, (uint64_t)&nominal type descriptor for BookContentView);
}

uint64_t (*sub_177E6C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v1 + 16);
  return sub_177ED4;
}

uint64_t PlatformViewProvider.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16, 0);
  return v1;
}

uint64_t PlatformViewProvider.init()()
{
  uint64_t v0;

  swift_unknownObjectWeakInit(v0 + 16, 0);
  return v0;
}

uint64_t PlatformViewProvider.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return v0;
}

uint64_t PlatformViewProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_177F74()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

void sub_177FB4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = v1 + 16;
  swift_beginAccess(v3, v4, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);

}

void sub_178000(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  swift_unknownObjectWeakAssign((char *)(*a1)[4] + 16, v4);
  if ((a2 & 1) != 0)
  {

    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);

  }
  free(v3);
}

char *BookContentView.makeUIViewController(context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  objc_super v26;
  _BYTE v27[24];

  v1 = v0;
  Strong = swift_unknownObjectWeakLoadStrong(v0);
  if (!Strong)
    return (char *)objc_msgSend(objc_allocWithZone((Class)UIViewController), "initWithNibName:bundle:", 0, 0);
  v3 = (char *)Strong;
  v4 = swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (v4
    && (v5 = v4,
        v6 = *(_QWORD *)(v1 + 24),
        v7 = swift_getObjectType(v4),
        LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v6),
        swift_unknownObjectRelease(v5),
        (v6 & 1) != 0))
  {
    v8 = (objc_class *)type metadata accessor for SnapshotViewController(0);
    v9 = (char *)objc_allocWithZone(v8);
    *(_QWORD *)&v9[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_snapshotView] = 0;
    swift_unknownObjectWeakInit(&v9[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_viewController], 0);
    sub_523DC();
    v10 = v3;
    v11 = v9;
    v12 = OS_os_log.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEF736B6F6F422E65, 0xD00000000000001ELL, 0x80000000002CE3A0);
    Logger.init(_:)(v12);

    v26.receiver = v11;
    v26.super_class = v8;
    v3 = (char *)objc_msgSendSuper2(&v26, "initWithNibName:bundle:", 0, 0);
    swift_unknownObjectWeakAssign(&v3[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_viewController], v10);

  }
  else
  {
    v13 = swift_unknownObjectWeakLoadStrong(v1 + 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)(v1 + 24);
      ObjectType = swift_getObjectType(v13);
      v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
      v3 = v3;
      v18 = v17(ObjectType, v15);
      if (v18)
      {
        v19 = v18 + 16;
        swift_beginAccess(v18 + 16, v27, 1, 0);
        swift_unknownObjectWeakAssign(v19, v3);
      }
      else
      {
        v21 = type metadata accessor for ViewControllerProvider();
        v22 = swift_allocObject(v21, 24) + 16;
        v23 = swift_unknownObjectWeakInit(v22, 0);
        swift_beginAccess(v23, v27, 1, 0);
        swift_unknownObjectWeakAssign(v22, v3);
        v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24);
        v25 = swift_retain();
        v24(v25, ObjectType, v15);
      }
      swift_release();
      swift_unknownObjectRelease(v14);

    }
  }
  return v3;
}

uint64_t BookContentView.makeCoordinator()()
{
  uint64_t v0;

  v0 = type metadata accessor for BookContentViewControllerCoordinator();
  return swift_allocObject(v0, 16);
}

void BookContentView.updateUIViewController(_:context:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  _BYTE v17[24];

  v2 = v1;
  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v8);
  v10 = &v17[-v9 - 8];
  type metadata accessor for BookContentView(0);
  sub_178A30(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
  v11 = static ColorScheme.== infix(_:_:)(v10, v7);
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v12(v10, v4);
  if ((v11 & 1) != 0)
    v13 = 2;
  else
    v13 = 1;
  objc_msgSend(a1, "setOverrideUserInterfaceStyle:", v13);
  v14 = *(_QWORD *)(v2 + 8);
  v15 = objc_msgSend(a1, "view");
  v14 += 16;
  swift_beginAccess(v14, v17, 1, 0);
  swift_unknownObjectWeakAssign(v14, v15);

}

uint64_t sub_178460@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for BookContentViewControllerCoordinator();
  result = swift_allocObject(v2, 16);
  *a1 = result;
  return result;
}

uint64_t sub_178490(uint64_t a1, char a2)
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)(a1, a2 & 1);
}

uint64_t sub_1784C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_17969C(&qword_3BEB58, (uint64_t)&protocol conformance descriptor for BookContentView);
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_178528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_17969C(&qword_3BEB58, (uint64_t)&protocol conformance descriptor for BookContentView);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_178588()
{
  return static View._viewListCount(inputs:)();
}

void sub_1785A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_17969C(&qword_3BEB58, (uint64_t)&protocol conformance descriptor for BookContentView);
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

UIImage *UIView.renderedImage.getter()
{
  void *v0;
  CGFloat v1;
  CGFloat v2;
  CGContext *v3;
  CGContext *v4;
  id v5;
  UIImage *v6;
  CGSize v8;

  objc_msgSend(v0, "bounds");
  v8.width = v1;
  v8.height = v2;
  UIGraphicsBeginImageContextWithOptions(v8, 0, 0.0);
  v3 = UIGraphicsGetCurrentContext();
  if (!v3)
    return 0;
  v4 = v3;
  v5 = objc_msgSend(v0, "layer");
  objc_msgSend(v5, "renderInContext:", v4);

  v6 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v6;
}

void sub_17869C()
{
  char *v0;
  char *v1;
  void *Strong;
  void *v3;
  id v4;
  CGFloat v5;
  CGFloat v6;
  CGContext *v7;
  CGContext *v8;
  id v9;
  UIImage *v10;
  id v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void *v20;
  id v21;
  NSObject *v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  os_log_type_t v26;
  uint8_t *v27;
  objc_super v28;
  CGSize v29;

  v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for SnapshotViewController(0);
  objc_msgSendSuper2(&v28, "viewDidLoad");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_viewController]);
  if (!Strong)
  {
LABEL_7:
    v13 = *(void **)&v1[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_snapshotView];
    *(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_snapshotView] = 0;

    v12 = Logger.logObject.getter(v14);
    v17 = static os_log_type_t.debug.getter(v12, v15, v16);
    if (os_log_type_enabled(v12, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_0, v12, v17, "image render failed", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }
    goto LABEL_9;
  }
  v3 = Strong;
  v4 = objc_msgSend(Strong, "view");

  if (!v4)
  {
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v4, "bounds");
  v29.width = v5;
  v29.height = v6;
  UIGraphicsBeginImageContextWithOptions(v29, 0, 0.0);
  v7 = UIGraphicsGetCurrentContext();
  if (!v7)
  {

    goto LABEL_7;
  }
  v8 = v7;
  v9 = objc_msgSend(v4, "layer");
  objc_msgSend(v9, "renderInContext:", v8);

  v10 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  if (!v10)
    goto LABEL_7;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);
  v12 = *(NSObject **)&v1[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_snapshotView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_snapshotView] = v11;

LABEL_9:
  v20 = *(void **)&v1[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_snapshotView];
  if (!v20)
  {
    v23 = Logger.logObject.getter(v19);
    v26 = static os_log_type_t.debug.getter(v23, v24, v25);
    if (os_log_type_enabled(v23, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_0, v23, v26, "Snapshot failed", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }
    goto LABEL_14;
  }
  v21 = v20;
  v22 = objc_msgSend(v1, "view");
  if (v22)
  {
    v23 = v22;
    -[NSObject addSubview:](v22, "addSubview:", v21);

LABEL_14:
    return;
  }
LABEL_16:
  __break(1u);
}

id sub_17899C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SnapshotViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_178A30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_319AC(&qword_3B6F20);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1796DC(v2, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    v13 = *v10;
    v14 = static os_log_type_t.fault.getter();
    v15 = static Log.runtimeIssuesLog.getter();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v23 = a1;
      v19 = v18;
      v25 = v18;
      *(_DWORD *)v17 = 136315138;
      v24 = sub_33524(0x686353726F6C6F43, 0xEB00000000656D65, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v17 + 4);
      _os_log_impl(&dword_0, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      v20 = v19;
      a1 = v23;
      swift_slowDealloc(v20, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(a1, v7, v13);
    v21 = swift_release();
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v21);
  }
}

uint64_t type metadata accessor for ViewControllerProvider()
{
  return objc_opt_self(_TtC8BookEPUB22ViewControllerProvider);
}

uint64_t type metadata accessor for SnapshotViewController(uint64_t a1)
{
  return sub_3E7A8(a1, (uint64_t *)&unk_3BEB48, (uint64_t)&nominal type descriptor for SnapshotViewController);
}

uint64_t type metadata accessor for BookContentViewControllerCoordinator()
{
  return objc_opt_self(_TtC8BookEPUB36BookContentViewControllerCoordinator);
}

uint64_t sub_178CC4()
{
  return sub_17969C(&qword_3BE868, (uint64_t)&protocol conformance descriptor for BookContentView);
}

void *sub_178CE8()
{
  return &protocol witness table for Never;
}

uint64_t sub_178D00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + 16;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_178D50(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + 16;
  swift_beginAccess(v3, v5, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2);
}

uint64_t type metadata accessor for PlatformViewProvider()
{
  return objc_opt_self(_TtC8BookEPUB20PlatformViewProvider);
}

uint64_t method lookup function for PlatformViewProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PlatformViewProvider);
}

uint64_t dispatch thunk of PlatformViewProvider.view.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of PlatformViewProvider.view.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PlatformViewProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t method lookup function for ViewControllerProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ViewControllerProvider);
}

uint64_t *initializeBufferWithCopyOfBuffer for BookContentView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_unknownObjectWeakCopyInit(a1, a2);
    v4[1] = a2[1];
    swift_retain();
    swift_unknownObjectWeakCopyInit(v4 + 2, a2 + 2);
    v4[3] = a2[3];
    v7 = *(int *)(a3 + 28);
    v8 = (uint64_t *)((char *)v4 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = sub_319AC(&qword_3B6F20);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      v12 = v8;
      v13 = v10;
      v14 = 1;
    }
    else
    {
      *v8 = *v9;
      swift_retain();
      v12 = v8;
      v13 = v10;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }
  return v4;
}

double destroy for BookContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_unknownObjectWeakDestroy(a1);
  swift_release();
  swift_unknownObjectWeakDestroy(a1 + 16);
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_319AC(&qword_3B6F20);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t initializeWithCopy for BookContentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_unknownObjectWeakCopyInit(a1, a2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_unknownObjectWeakCopyInit(a1 + 16, a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = sub_319AC(&qword_3B6F20);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    v11 = 1;
  }
  else
  {
    *v7 = *v8;
    swift_retain();
    v11 = 0;
  }
  swift_storeEnumTagMultiPayload(v7, v9, v11);
  return a1;
}

uint64_t assignWithCopy for BookContentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_unknownObjectWeakCopyAssign(a1, a2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  swift_unknownObjectWeakCopyAssign(a1 + 16, a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (_QWORD *)(a2 + v6);
    sub_179148(a1 + v6);
    v9 = sub_319AC(&qword_3B6F20);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ColorScheme(0);
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      v11 = 1;
    }
    else
    {
      *v7 = *v8;
      swift_retain();
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v7, v9, v11);
  }
  return a1;
}

uint64_t sub_179148(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_319AC(&qword_3B6F20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for BookContentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = swift_unknownObjectWeakTakeInit(a1, a2);
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectWeakTakeInit(v6 + 16, a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(int *)(a3 + 28);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_319AC(&qword_3B6F20);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    v11 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for BookContentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  swift_unknownObjectWeakTakeAssign(a1, a2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  swift_unknownObjectWeakTakeAssign(a1 + 16, a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_179148(a1 + v6);
    v9 = sub_319AC(&qword_3B6F20);
    if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
    {
      v10 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload(v7, v9, 1);
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for BookContentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_17933C);
}

uint64_t sub_17933C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_319AC(&qword_3BE9E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for BookContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1793C8);
}

uint64_t sub_1793C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_319AC(&qword_3BE9E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_179440(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_2EF238;
  sub_1794CC(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

void sub_1794CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3BEA50)
  {
    v2 = type metadata accessor for ColorScheme(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3BEA50);
  }
}

uint64_t method lookup function for BookContentViewControllerCoordinator(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookContentViewControllerCoordinator);
}

uint64_t sub_17952C()
{
  return type metadata accessor for SnapshotViewController(0);
}

uint64_t sub_179534(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  v4[1] = "\b";
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1795B4()
{
  char *v0;
  uint64_t v1;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_snapshotView] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC8BookEPUB22SnapshotViewController_viewController], 0);
  sub_523DC();
  v1 = OS_os_log.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEF736B6F6F422E65, 0xD00000000000001ELL, 0x80000000002CE3A0);
  Logger.init(_:)(v1);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000002C69C0, "BookEPUB/BookContentView.swift", 30, 2, 134, 0);
  __break(1u);
}

uint64_t sub_17969C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for BookContentView(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1796DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3B6F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

__n128 PersistedLocationEntity.pageLocation.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_pageLocation + 16);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_pageLocation);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

float PersistedLocationEntity.readingProgress.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_readingProgress);
}

float PersistedLocationEntity.readingProgressHighWaterMark.getter()
{
  uint64_t v0;

  return *(float *)(v0 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_readingProgressHighWaterMark);
}

_QWORD *PersistedLocationEntity.__allocating_init(uniqueID:documentOrdinal:location:pageLocation:modificationDate:readingProgress:readingProgressHighWaterMark:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, float a8, float a9)
{
  uint64_t v9;
  _QWORD *v19;
  char v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;

  v19 = (_QWORD *)swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v20 = *(_BYTE *)(a6 + 16);
  v21 = (char *)v19 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_pageLocation;
  *(_OWORD *)v21 = *(_OWORD *)a6;
  v21[16] = v20;
  *(float *)((char *)v19 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_readingProgress) = a8;
  *(float *)((char *)v19 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_readingProgressHighWaterMark) = a9;
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = a3;
  v22 = (char *)v19 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  v23 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a7, v23);
  v24 = (_QWORD *)((char *)v19 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  *v24 = a4;
  v24[1] = a5;
  return v19;
}

_QWORD *PersistedLocationEntity.init(uniqueID:documentOrdinal:location:pageLocation:modificationDate:readingProgress:readingProgressHighWaterMark:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, float a8, float a9)
{
  _QWORD *v9;
  char v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;

  v13 = *(_BYTE *)(a6 + 16);
  v14 = (char *)v9 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_pageLocation;
  *(_OWORD *)v14 = *(_OWORD *)a6;
  v14[16] = v13;
  *(float *)((char *)v9 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_readingProgress) = a8;
  *(float *)((char *)v9 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_readingProgressHighWaterMark) = a9;
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v15 = (char *)v9 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a7, v16);
  v17 = (_QWORD *)((char *)v9 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  *v17 = a4;
  v17[1] = a5;
  return v9;
}

double sub_179934@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  __int128 v11;
  _BYTE v12[24];
  _BYTE v13[40];

  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_pageLocation + 16) & 1) != 0)
    goto LABEL_5;
  v11 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB23PersistedLocationEntity_pageLocation);
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location, v12, 0, 0);
  v4 = v3[1];
  v5 = *v3 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v5 = HIBYTE(v4) & 0xF;
  if (v5)
  {
LABEL_5:
    v6 = *(_QWORD *)(v1 + 32);
    v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location);
    swift_beginAccess(v7, v13, 0, 0);
    v9 = *v7;
    v8 = v7[1];
    v13[32] = 1;
    v13[24] = 1;
    *(_QWORD *)a1 = v6;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_BYTE *)(a1 + 88) = 1;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_QWORD *)(a1 + 128) = 0;
    *(_WORD *)(a1 + 136) = 1;
    swift_bridgeObjectRetain(v8);
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_QWORD *)(a1 + 80) = 0;
    *(_BYTE *)(a1 + 88) = 1;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_QWORD *)(a1 + 128) = 0;
    *(_WORD *)(a1 + 136) = 257;
  }
  return result;
}

void PersistedLocationEntity.init(uniqueID:documentOrdinal:location:modificationDate:)()
{
  _swift_stdlib_reportUnimplementedInitializer("BookEPUB.PersistedLocationEntity", 32, "init(uniqueID:documentOrdinal:location:modificationDate:)", 57, 0);
  __break(1u);
}

uint64_t PersistedLocationEntity.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  v2 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location + 8));
  return v0;
}

uint64_t PersistedLocationEntity.__deallocating_deinit()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_modificationDate;
  v2 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB16AnnotationEntity_location + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_179B5C()
{
  return sub_3613C();
}

uint64_t sub_179B7C()
{
  return type metadata accessor for PersistedLocationEntity(0);
}

uint64_t type metadata accessor for PersistedLocationEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_3BEB88;
  if (!qword_3BEB88)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PersistedLocationEntity);
  return result;
}

uint64_t sub_179BC0(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_2EF318;
  v2[1] = (char *)&value witness table for Builtin.Int32 + 64;
  v2[2] = (char *)&value witness table for Builtin.Int32 + 64;
  return swift_updateClassMetadata2(a1, 256, 3, v2, a1 + 184);
}

uint64_t method lookup function for PersistedLocationEntity(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PersistedLocationEntity);
}

uint64_t dispatch thunk of PersistedLocationEntity.__allocating_init(uniqueID:documentOrdinal:location:pageLocation:modificationDate:readingProgress:readingProgressHighWaterMark:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of CurrentLocationPersisting.update(cfiLocation:progress:updateDate:avoidSync:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(a7 + 24))(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32));
}

uint64_t dispatch thunk of CurrentLocationPersisting.update(pageLocation:progress:updateDate:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(a5 + 32))(a1, a2 | ((HIDWORD(a2) & 1) << 32));
}

uint64_t sub_179CA4()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(v0 + OBJC_IVAR___BEDragDismissGestureManager_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

double sub_179D3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*sub_179D94(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___BEDragDismissGestureManager_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_179E04;
}

void sub_179E04(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_179E70()
{
  return sub_179E88((SEL *)&selRef_enableSwipeToDismiss);
}

uint64_t sub_179E7C()
{
  return sub_179E88((SEL *)&selRef_enablePullToDismiss);
}

uint64_t sub_179E88(SEL *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  _BYTE v8[24];

  v3 = v1 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(v3, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return 1;
  v5 = Strong;
  v6 = objc_msgSend(Strong, *a1);
  swift_unknownObjectRelease(v5);
  return (uint64_t)v6;
}

id sub_179EFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___BEDragDismissGestureManager____lazy_storage____swipeGesture;
  v2 = *(void **)(v0 + OBJC_IVAR___BEDragDismissGestureManager____lazy_storage____swipeGesture);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___BEDragDismissGestureManager____lazy_storage____swipeGesture);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UISwipeGestureRecognizer), "initWithTarget:action:", v0, "swipeToDismiss:");
    objc_msgSend(v4, "setDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_179FA4()
{
  return sub_17A128((SEL *)&selRef_enableSwipeToDismiss, (uint64_t (*)(void))sub_179EFC);
}

id sub_179FB8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___BEDragDismissGestureManager____lazy_storage____panGesture;
  v2 = *(void **)(v0 + OBJC_IVAR___BEDragDismissGestureManager____lazy_storage____panGesture);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___BEDragDismissGestureManager____lazy_storage____panGesture);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "initWithTarget:action:", v0, "dragToDismiss:");
    objc_msgSend(v4, "setMaximumNumberOfTouches:", 1);
    objc_msgSend(v4, "setDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_17A074(char *a1, uint64_t a2, SEL *a3, uint64_t (*a4)(void))
{
  char *v7;
  void *Strong;
  char *v9;
  unsigned int v10;
  void *v11;
  char v13[24];

  v7 = &a1[OBJC_IVAR___BEDragDismissGestureManager_delegate];
  swift_beginAccess(&a1[OBJC_IVAR___BEDragDismissGestureManager_delegate], v13, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v7);
  v9 = a1;
  if (Strong && (v10 = objc_msgSend(Strong, *a3), swift_unknownObjectRelease(Strong), !v10))
    v11 = 0;
  else
    v11 = (void *)a4();

  return v11;
}

uint64_t sub_17A114()
{
  return sub_17A128((SEL *)&selRef_enablePullToDismiss, (uint64_t (*)(void))sub_179FB8);
}

uint64_t sub_17A128(SEL *a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v5;
  void *Strong;
  void *v7;
  unsigned int v8;
  _BYTE v10[24];

  v5 = v2 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(v2 + OBJC_IVAR___BEDragDismissGestureManager_delegate, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong && (v7 = Strong, v8 = objc_msgSend(Strong, *a1), swift_unknownObjectRelease(v7), !v8))
    return 0;
  else
    return a2();
}

void sub_17A1AC()
{
  qword_3BECA0 = 0x4069000000000000;
}

id DragDismissGestureManager.init()()
{
  char *v0;
  char *v1;
  objc_super v3;

  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BEDragDismissGestureManager_delegate], 0);
  *(_QWORD *)&v0[OBJC_IVAR___BEDragDismissGestureManager____lazy_storage____swipeGesture] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BEDragDismissGestureManager____lazy_storage____panGesture] = 0;
  v1 = &v0[OBJC_IVAR___BEDragDismissGestureManager_closePanningTranslation];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DragDismissGestureManager();
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t type metadata accessor for DragDismissGestureManager()
{
  return objc_opt_self(BEDragDismissGestureManager);
}

id DragDismissGestureManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DragDismissGestureManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_17A348(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *Strong;
  void *v5;
  unsigned int v6;
  double result;
  void *v8;
  void *v9;
  _BYTE v10[24];

  v3 = v1 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(v1 + OBJC_IVAR___BEDragDismissGestureManager_delegate, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong
    || (v5 = Strong,
        v6 = objc_msgSend(Strong, "allowsDismissGesture"),
        *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0],
        v6))
  {
    if (objc_msgSend(a1, "direction") == &dword_8)
    {
      v8 = (void *)swift_unknownObjectWeakLoadStrong(v3);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, "dragDismissGestureDidSwipeToDismiss:", v1);
        *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
      }
    }
  }
  return result;
}

void sub_17A45C(void *a1)
{
  _BYTE *v1;
  char *v3;
  void *Strong;
  void *v5;
  unsigned int v6;
  void *v7;
  double v8;
  void *v9;
  id v10;
  char *v11;
  double *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _BYTE *v18;
  _BYTE *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double *v25;
  void *v26;
  void *v27;
  double *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void **aBlock;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  double *v38;
  char v39[24];

  v3 = &v1[OBJC_IVAR___BEDragDismissGestureManager_delegate];
  swift_beginAccess(&v1[OBJC_IVAR___BEDragDismissGestureManager_delegate], v39, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "allowsDismissGesture");
    swift_unknownObjectRelease(v5);
    if (!v6)
      return;
  }
  v7 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (!v7)
    goto LABEL_8;
  v9 = v7;
  if ((objc_msgSend(v7, "respondsToSelector:", "viewToTranslate") & 1) == 0)
  {
    *(_QWORD *)&v8 = swift_unknownObjectRelease(v9).n128_u64[0];
LABEL_8:
    v10 = objc_msgSend(a1, "view", v8);
    goto LABEL_9;
  }
  v10 = objc_msgSend(v9, "viewToTranslate");
  *(_QWORD *)&v8 = swift_unknownObjectRelease(v9).n128_u64[0];
  if (!v10)
    goto LABEL_8;
LABEL_9:
  v11 = (char *)objc_msgSend(a1, "state", v8);
  if ((unint64_t)(v11 - 3) >= 2)
  {
    if (v11 != (_BYTE *)&dword_0 + 2)
      goto LABEL_22;
    objc_msgSend(a1, "translationInView:", v10);
    if (v22 <= 0.0)
      goto LABEL_22;
    v23 = v21;
    v24 = v22;
    if (fabs(v21) >= fabs(v22))
      goto LABEL_22;
    v25 = (double *)&v1[OBJC_IVAR___BEDragDismissGestureManager_closePanningTranslation];
    *v25 = v21;
    v25[1] = v22;
    *((_BYTE *)v25 + 16) = 0;
    v26 = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, "dragDismissGesture:didTranslateToPoint:", v1, v23, v24);
      swift_unknownObjectRelease(v27);
    }
    v28 = (double *)swift_allocObject(&unk_385260, 40);
    v28[2] = v23;
    v28[3] = v24;
    *((_QWORD *)v28 + 4) = v10;
    v29 = (void *)objc_opt_self(UIView);
    v37 = sub_17AEB4;
    v38 = v28;
    aBlock = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_525B8;
    v36 = &unk_385278;
    v30 = _Block_copy(&aBlock);
    v10 = v10;
    swift_retain();
    swift_release();
    objc_msgSend(v29, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v30, 0, 0.5, 0.0, 0.7, 1.0);
    _Block_release(v30);
    goto LABEL_21;
  }
  v12 = (double *)&v1[OBJC_IVAR___BEDragDismissGestureManager_closePanningTranslation];
  if ((v1[OBJC_IVAR___BEDragDismissGestureManager_closePanningTranslation + 16] & 1) != 0)
  {
LABEL_22:

    return;
  }
  v13 = v12[1];
  if (qword_3B5808 != -1)
    swift_once(&qword_3B5808, sub_17A1AC);
  if (v13 < *(double *)&qword_3BECA0)
  {
    v14 = swift_allocObject(&unk_3851C0, 32);
    *(_QWORD *)(v14 + 16) = v1;
    *(_QWORD *)(v14 + 24) = v10;
    v15 = swift_allocObject(&unk_3851E8, 24);
    *(_QWORD *)(v15 + 16) = v1;
    v16 = (void *)objc_opt_self(UIView);
    v37 = sub_17AE0C;
    v38 = (double *)v14;
    aBlock = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_525B8;
    v36 = &unk_385200;
    v17 = _Block_copy(&aBlock);
    v18 = v1;
    v10 = v10;
    v19 = v18;
    swift_retain();
    swift_release();
    v37 = sub_17AE70;
    v38 = (double *)v15;
    aBlock = _NSConcreteStackBlock;
    v34 = 1107296256;
    v35 = sub_525E4;
    v36 = &unk_385228;
    v20 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v17, v20, 0.5, 0.0, 0.7, 1.0);
    _Block_release(v20);
    _Block_release(v17);
    swift_release();
LABEL_21:
    swift_release();
    goto LABEL_22;
  }
  v31 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, "dragDismissGestureDidPanToDismiss:", v1);
    swift_unknownObjectRelease(v32);
  }

  *v12 = 0.0;
  v12[1] = 0.0;
  *((_BYTE *)v12 + 16) = 1;
}

CGAffineTransform *sub_17A8B0(void *a1, CGFloat a2, double a3)
{
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double Height;
  double v16;
  double v17;
  double v18;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  CGAffineTransform *result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  CGAffineTransform v29;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGRect v32;

  v6 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v6, "bounds");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v32.origin.x = v8;
  v32.origin.y = v10;
  v32.size.width = v12;
  v32.size.height = v14;
  Height = CGRectGetHeight(v32);
  v16 = Height - a3;
  if (Height - a3 <= 0.0)
    v16 = 0.0;
  v17 = v16 / Height;
  if (v17 > 1.0)
    v17 = 1.0;
  if (v17 > 0.65)
    v18 = v17;
  else
    v18 = 0.65;
  CGAffineTransformMakeTranslation(&t1, a2, v17 * a3);
  a = t1.a;
  b = t1.b;
  c = t1.c;
  d = t1.d;
  tx = t1.tx;
  ty = t1.ty;
  result = CGAffineTransformMakeScale(&t1, v18, v18);
  if (a1)
  {
    v26 = *(_OWORD *)&t1.a;
    v27 = *(_OWORD *)&t1.c;
    v28 = *(_OWORD *)&t1.tx;
    t1.a = a;
    t1.b = b;
    t1.c = c;
    t1.d = d;
    t1.tx = tx;
    t1.ty = ty;
    *(_OWORD *)&t2.a = v26;
    *(_OWORD *)&t2.c = v27;
    *(_OWORD *)&t2.tx = v28;
    CGAffineTransformConcat(&v29, &t1, &t2);
    t1 = v29;
    return (CGAffineTransform *)objc_msgSend(a1, "setTransform:", &t1);
  }
  return result;
}

double sub_17AA04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  double result;
  void *v7;
  _BYTE v8[24];

  v3 = a2 + OBJC_IVAR___BEDragDismissGestureManager_closePanningTranslation;
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_BYTE *)(v3 + 16) = 1;
  v4 = a2 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(a2 + OBJC_IVAR___BEDragDismissGestureManager_delegate, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    objc_msgSend(Strong, "dragDismissGestureDidCancelPanToDismiss:", a2);
    *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  return result;
}

uint64_t _s8BookEPUB25DragDismissGestureManagerC17gestureRecognizer_13shouldReceiveSbSo09UIGestureH0C_So7UIEventCtF_0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *Strong;
  void *v5;
  unsigned int v6;
  id v7;
  id v8;
  char v9;
  void *v10;
  void *v11;
  unsigned int v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  _BYTE v20[24];

  v3 = v1 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(v1 + OBJC_IVAR___BEDragDismissGestureManager_delegate, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "enablePullToDismiss");
    swift_unknownObjectRelease(v5);
    if (!v6)
      goto LABEL_13;
  }
  v7 = sub_179FB8();
  sub_17AEC0();
  v8 = a1;
  v9 = static NSObject.== infix(_:_:)(v8, v7);

  if ((v9 & 1) == 0)
  {
LABEL_13:
    v10 = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "enableSwipeToDismiss");
      swift_unknownObjectRelease(v11);
      if (!v12)
        return 1;
    }
    v13 = sub_179EFC();
    sub_17AEC0();
    v14 = a1;
    v15 = static NSObject.== infix(_:_:)(v14, v13);

    if ((v15 & 1) == 0)
      return 1;
  }
  v16 = (void *)swift_unknownObjectWeakLoadStrong(v3);
  if (!v16)
    return 1;
  v17 = v16;
  v18 = objc_msgSend(v16, "allowsDismissGesture");
  swift_unknownObjectRelease(v17);
  return (uint64_t)v18;
}

uint64_t sub_17ACA0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_17ACF4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR___BEDragDismissGestureManager_delegate;
  swift_beginAccess(v3, v5, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2);
}

uint64_t method lookup function for DragDismissGestureManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DragDismissGestureManager);
}

uint64_t dispatch thunk of DragDismissGestureManager.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of DragDismissGestureManager.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of DragDismissGestureManager.enableSwipeToDismiss.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of DragDismissGestureManager.enablePullToDismiss.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DragDismissGestureManager.swipeGesture.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t sub_17ADE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_17AE0C()
{
  uint64_t v0;
  id result;
  _QWORD v2[6];

  result = *(id *)(v0 + 24);
  if (result)
  {
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return objc_msgSend(result, "setTransform:", v2);
  }
  return result;
}

uint64_t sub_17AE4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_17AE70(uint64_t a1)
{
  uint64_t v1;

  return sub_17AA04(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_17AE78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_17AE88(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_17AE90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

CGAffineTransform *sub_17AEB4()
{
  uint64_t v0;

  return sub_17A8B0(*(void **)(v0 + 32), *(CGFloat *)(v0 + 16), *(double *)(v0 + 24));
}

unint64_t sub_17AEC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3BECF0;
  if (!qword_3BECF0)
  {
    v1 = objc_opt_self(UIGestureRecognizer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3BECF0);
  }
  return result;
}

void sub_17AF0C()
{
  id v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v0 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
  v1 = objc_msgSend(v0, "environment");

  v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v1, &type metadata for String, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_3B8A0(0xD00000000000001BLL, 0x80000000002CE680), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 16 * v3 + 8);
    swift_bridgeObjectRetain(v5);
    v6 = 1;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v5);
  byte_3CF250 = v6;
}

uint64_t ContentViewHost.__allocating_init(document:updatePlaceholder:updateContentView:layoutProvider:stylesheetProvider:reloadAction:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;

  v11 = v10;
  v18 = swift_allocObject(v11, *(unsigned int *)(v11 + 48));
  UUID.init()(v18);
  v19 = (_QWORD *)(v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView);
  *v19 = 0;
  v19[1] = 0;
  v20 = v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_layoutProvider;
  *(_QWORD *)(v20 + 8) = 0;
  swift_unknownObjectWeakInit(v20, 0);
  v21 = v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_stylesheetProvider;
  swift_weakInit(v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_stylesheetProvider);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost____lazy_storage___placeholderView) = 1;
  sub_3F1CC(a1, v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document);
  *(_BYTE *)(v18 + 16) = 0;
  v22 = (_QWORD *)(v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_updatePlaceholder);
  *v22 = a2;
  v22[1] = a3;
  v23 = (_QWORD *)(v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_updateContentView);
  *v23 = a4;
  v23[1] = a5;
  swift_weakAssign(v21, a8);
  swift_release();
  v24 = (_QWORD *)(v18 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_reloadAction);
  *v24 = a9;
  v24[1] = a10;
  swift_unknownObjectRelease(a6);
  return v18;
}

uint64_t ContentViewHostState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_17B164 + 4 * byte_2EF3B0[*v0]))(0x6C616974696E69, 0xE700000000000000);
}

unint64_t sub_17B164()
{
  return 0xD000000000000018;
}

BookEPUB::ContentViewHostState_optional __swiftcall ContentViewHostState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  BookEPUB::ContentViewHostState_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_379AE0, v3);
  result.value = swift_bridgeObjectRelease(object);
  v7 = 6;
  if (v5 < 6)
    v7 = v5;
  *v4 = v7;
  return result;
}

void sub_17B228(char *a1)
{
  sub_3F9A4(*a1);
}

void sub_17B234()
{
  char *v0;

  sub_1852A8(*v0);
}

void sub_17B23C(uint64_t a1)
{
  char *v1;

  sub_185440(a1, *v1);
}

void sub_17B244(uint64_t a1)
{
  char *v1;

  sub_185754(a1, *v1);
}

BookEPUB::ContentViewHostState_optional sub_17B24C(Swift::String *a1)
{
  return ContentViewHostState.init(rawValue:)(*a1);
}

uint64_t sub_17B258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContentViewHostState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_17B27C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v6;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3CF258);
  sub_555F0(v0, (uint64_t)qword_3CF258);
  v6 = type metadata accessor for ContentViewHost(0);
  v1 = sub_319AC(&qword_3BEF18);
  v2 = String.init<A>(describing:)(&v6, v1);
  return Logger.init(subsystem:category:)(0xD000000000000014, 0x80000000002CE770, v2, v3, v4);
}

uint64_t sub_17B314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[24];
  uint64_t v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView, v32, 0, 0);
  v3 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    v4 = *(_QWORD *)(v2 + 8);
    ObjectType = swift_getObjectType(v3);
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 96);
    v7 = v3;
    v8 = v6(ObjectType, v4);
    v10 = v9;

  }
  else
  {
    v10 = 0xE300000000000000;
    v8 = 7104878;
  }
  if (qword_3B5818 != -1)
    swift_once(&qword_3B5818, sub_17B27C);
  v11 = type metadata accessor for Logger(0);
  sub_555F0(v11, (uint64_t)qword_3CF258);
  swift_retain_n(v1, 6);
  v12 = swift_bridgeObjectRetain(v10);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(52, -1);
    v31 = swift_slowAlloc(128, -1);
    *(_DWORD *)v15 = 136447234;
    v16 = type metadata accessor for UUID(0);
    v17 = sub_17CAB4();
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v16, v17);
    v20 = v19;
    v27 = sub_33524(v18, v19, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v15 + 4);
    swift_release_n(v1);
    swift_bridgeObjectRelease(v20);
    *(_WORD *)(v15 + 12) = 2082;
    swift_bridgeObjectRetain(v10);
    v27 = sub_33524(v8, v10, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v15 + 14);
    swift_bridgeObjectRelease_n(v10, 3);
    *(_WORD *)(v15 + 22) = 2050;
    v21 = v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document, v26, 0, 0);
    sub_49F1C(v21, (uint64_t)&v27);
    v22 = v29;
    v23 = v30;
    sub_472D0(&v27, v29);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
    sub_34488(&v27);
    swift_release();
    v27 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v15 + 24);
    swift_release();
    *(_WORD *)(v15 + 32) = 2082;
    swift_beginAccess(v1 + 16, &v27, 0, 0);
    __asm { BR              X10 }
  }

  swift_bridgeObjectRelease_n(v10, 2);
  return swift_release_n(v1);
}

void sub_17B800(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 16, v3, 0, 0);
  *a1 = *(_BYTE *)(v1 + 16);
}

void sub_17B840(_BYTE *a1)
{
  uint64_t v1;
  char v2;
  _BYTE v3[24];

  v3[0] = *a1;
  v2 = v3[0];
  sub_17B314();
  swift_beginAccess(v1 + 16, v3, 1, 0);
  *(_BYTE *)(v1 + 16) = v2;
}

void (*sub_17B888(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess(v1 + 16, v3, 1, 0);
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 16);
  return sub_17B8E8;
}

void sub_17B8E8(uint64_t a1)
{
  _QWORD *v1;
  char v2;

  v1 = *(_QWORD **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 32);
  sub_17B314();
  *(_BYTE *)(v1[3] + 16) = v2;
  free(v1);
}

uint64_t ContentViewHost.hostID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_hostID;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void sub_17B98C(uint64_t a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView;
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *(void **)v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = v3;
  v6 = v2;

}

id sub_17B9EC()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;
  _BYTE v5[24];

  v1 = (id *)(v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView, v5, 0, 0);
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void sub_17BA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView;
  swift_beginAccess(v5, v7, 1, 0);
  v6 = *(void **)v5;
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;

}

uint64_t (*sub_17BA98(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_17BADC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v3;
  _BYTE v5[24];
  __int128 v6[2];

  sub_49F1C(a1, (uint64_t)v6);
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document);
  swift_beginAccess(v3, v5, 33, 0);
  sub_34488(v3);
  sub_3F1CC(v6, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t sub_17BB48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_49F1C(v3, a1);
}

uint64_t sub_17BB98(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document);
  swift_beginAccess(v3, v5, 33, 0);
  sub_34488(v3);
  sub_3F1CC(a1, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t (*sub_17BBF8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_17BC3C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  void *v15;
  id v16;

  v1 = OBJC_IVAR____TtC8BookEPUB15ContentViewHost____lazy_storage___placeholderView;
  v2 = *(char **)(v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost____lazy_storage___placeholderView);
  v3 = v2;
  if (v2 == (_BYTE *)&dword_0 + 1)
  {
    v4 = v0;
    v5 = swift_allocObject(&unk_3853C0, 24);
    swift_weakInit(v5 + 16, v4);
    v6 = objc_allocWithZone((Class)type metadata accessor for ContentLoaderPlaceholderView(0));
    v3 = sub_5091C((uint64_t)sub_17CEE8, v5);
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v7 = v4 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_layoutProvider;
    Strong = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_layoutProvider);
    if (Strong)
    {
      v9 = Strong;
      v10 = *(_QWORD *)(v7 + 8);
      ObjectType = swift_getObjectType(Strong);
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 48);
      v13 = v3;
      v14 = v12(ObjectType, v10);
      static CGRect.from(size:)(v14);
      objc_msgSend(v13, "setFrame:");
      swift_unknownObjectRelease(v9);

    }
    v15 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v3;
    v16 = v3;
    sub_17CAA4(v15);
  }
  sub_17CEF0(v2);
  return v3;
}

uint64_t sub_17BD6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v5 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_reloadAction);
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_reloadAction + 8);
    swift_retain(v4);
    v6 = swift_release(v3);
    v5(v6);
    return swift_release(v4);
  }
  return result;
}

uint64_t ContentViewHost.init(document:updatePlaceholder:updateContentView:layoutProvider:stylesheetProvider:reloadAction:)(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  v11 = sub_17C994(a1, a2, a3, a4, a5, a8, a9, a10);
  swift_release();
  swift_unknownObjectRelease(a6);
  return v11;
}

double sub_17BE34()
{
  uint64_t v0;
  uint64_t v1;
  double result;
  id v3;
  void *v4;
  void (*v5)(_QWORD *);
  id v6;
  _QWORD v7[2];
  char v8;
  _BYTE v9[24];

  v1 = v0;
  *(_QWORD *)&result = swift_beginAccess(v0 + 16, v9, 1, 0).n128_u64[0];
  if (((1 << *(_BYTE *)(v0 + 16)) & 0x3A) == 0)
  {
    LOBYTE(v7[0]) = 1;
    sub_17B314();
    *(_BYTE *)(v0 + 16) = 1;
    v3 = sub_17BC3C();
    if (v3)
    {
      v4 = v3;
      sub_511E4();
      v5 = *(void (**)(_QWORD *))(v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_updatePlaceholder);
      v7[0] = v4;
      v7[1] = &protocol witness table for ContentLoaderPlaceholderView;
      v8 = 0;
      swift_retain();
      v6 = v4;
      v5(v7);

      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_17BF00(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];
  uint64_t v29;
  _BYTE v30[16];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[24];

  v2 = v1;
  v3 = *a1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView);
  swift_beginAccess(v4, v34, 0, 0);
  v5 = (void *)*v4;
  if (*v4)
  {
    v6 = v4[1];
    ObjectType = swift_getObjectType(*v4);
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 96);
    v9 = v5;
    v10 = v8(ObjectType, v6);
    v12 = v11;

  }
  else
  {
    v12 = 0xE300000000000000;
    v10 = 7104878;
  }
  if (qword_3B5818 != -1)
    swift_once(&qword_3B5818, sub_17B27C);
  v13 = type metadata accessor for Logger(0);
  sub_555F0(v13, (uint64_t)qword_3CF258);
  swift_retain_n(v2, 6);
  v14 = swift_bridgeObjectRetain(v12);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc(52, -1);
    v33 = swift_slowAlloc(128, -1);
    *(_DWORD *)v17 = 136447234;
    v18 = type metadata accessor for UUID(0);
    v19 = sub_17CAB4();
    v20 = dispatch thunk of CustomStringConvertible.description.getter(v18, v19);
    v22 = v21;
    v29 = sub_33524(v20, v21, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v17 + 4);
    swift_release_n(v2);
    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v17 + 12) = 2082;
    swift_bridgeObjectRetain(v12);
    v29 = sub_33524(v10, v12, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v17 + 14);
    swift_bridgeObjectRelease_n(v12, 3);
    *(_WORD *)(v17 + 22) = 2050;
    v23 = v2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document;
    swift_beginAccess(v2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document, v28, 0, 0);
    sub_49F1C(v23, (uint64_t)&v29);
    v24 = v31;
    v25 = v32;
    sub_472D0(&v29, v31);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(v24, v25);
    sub_34488(&v29);
    swift_release();
    v29 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v17 + 24);
    swift_release();
    *(_WORD *)(v17 + 32) = 2082;
    swift_beginAccess(v2 + 16, v27, 0, 0);
    __asm { BR              X10 }
  }

  swift_bridgeObjectRelease_n(v12, 2);
  swift_release_n(v2);
  LOBYTE(v29) = v3;
  sub_17B314();
  swift_beginAccess(v2 + 16, &v29, 1, 0);
  *(_BYTE *)(v2 + 16) = v3;
}

void sub_17C414()
{
  uint64_t v0;
  char v1;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 1, 0);
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v1 = 2;
    sub_17B314();
    *(_BYTE *)(v0 + 16) = 2;
  }
  else
  {
    v1 = 2;
    sub_17BF00(&v1);
  }
}

void sub_17C47C()
{
  uint64_t v0;
  char v1;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 1, 0);
  if (*(unsigned __int8 *)(v0 + 16) > 2u)
  {
    v1 = 3;
    sub_17BF00(&v1);
  }
  else
  {
    v1 = 3;
    sub_17B314();
    *(_BYTE *)(v0 + 16) = 3;
  }
}

double sub_17C4E4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_17C894(a1, v3, a3, a2);
}

uint64_t ContentViewHost.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_hostID;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  sub_34488((_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document));
  swift_release();
  swift_release();
  sub_47418(v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_layoutProvider);
  swift_weakDestroy(v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_stylesheetProvider);
  swift_release();
  sub_17CAA4(*(id *)(v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost____lazy_storage___placeholderView));
  return v0;
}

uint64_t ContentViewHost.__deallocating_deinit()
{
  uint64_t v0;

  ContentViewHost.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_17C5E4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_hostID;
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_17C62C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_49F1C(v3, a1);
}

id sub_17C680()
{
  _QWORD *v0;
  id *v1;
  id v2;
  id v3;
  _BYTE v5[24];

  v1 = (id *)(*v0 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView);
  swift_beginAccess(v1, v5, 0, 0);
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void sub_17C6D4(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  _BYTE v4[24];

  v3 = *v1;
  swift_beginAccess(v3 + 16, v4, 0, 0);
  *a1 = *(_BYTE *)(v3 + 16);
}

uint64_t ContentViewHost.description.getter()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  void *object;
  Swift::String v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  void *v8;
  Swift::String v9;
  char v11;
  _QWORD v12[3];
  _QWORD v13[2];

  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  v1._countAndFlagsBits = 60;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._countAndFlagsBits = _typeName(_:qualified:)(*(_QWORD *)v0, 0);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 0x203A4449203ELL;
  v4._object = (void *)0xE600000000000000;
  String.append(_:)(v4);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_17CAB4();
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  v8 = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v8);
  v9._countAndFlagsBits = 0x203A657461747320;
  v9._object = (void *)0xE800000000000000;
  String.append(_:)(v9);
  swift_beginAccess(v0 + 16, v12, 0, 0);
  v11 = *(_BYTE *)(v0 + 16);
  _print_unlocked<A, B>(_:_:)(&v11, v13, &type metadata for ContentViewHostState, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return v13[0];
}

uint64_t sub_17C844()
{
  return ContentViewHost.description.getter();
}

uint64_t static ContentViewHost.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return static UUID.== infix(_:_:)(a1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_hostID, a2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_hostID);
}

uint64_t sub_17C878(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_hostID, *a2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_hostID);
}

double sub_17C894(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void *v8;
  id v9;
  void (*v10)(_QWORD *);
  id v11;
  double result;
  _QWORD v13[2];
  char v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v7 = a2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView, v16, 1, 0);
  v8 = *(void **)v7;
  *(_QWORD *)v7 = a1;
  *(_QWORD *)(v7 + 8) = a4;
  v9 = a1;

  swift_beginAccess(a2 + 16, v15, 1, 0);
  if (((1 << *(_BYTE *)(a2 + 16)) & 0xD) != 0)
  {
    LOBYTE(v13[0]) = 4;
    sub_17B314();
    *(_BYTE *)(a2 + 16) = 4;
  }
  else
  {
    LOBYTE(v13[0]) = 4;
    sub_17BF00((char *)v13);
  }
  v10 = *(void (**)(_QWORD *))(a2 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_updateContentView);
  v13[0] = a1;
  v13[1] = a4;
  v14 = 0;
  v11 = v9;
  swift_retain();
  v10(v13);

  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_17C994(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;

  UUID.init()(a1);
  v17 = (_QWORD *)(v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView);
  *v17 = 0;
  v17[1] = 0;
  v18 = v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_layoutProvider;
  *(_QWORD *)(v18 + 8) = 0;
  swift_unknownObjectWeakInit(v18, 0);
  v19 = v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_stylesheetProvider;
  swift_weakInit(v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_stylesheetProvider);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost____lazy_storage___placeholderView) = 1;
  sub_3F1CC(a1, v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document);
  *(_BYTE *)(v8 + 16) = 0;
  v20 = (_QWORD *)(v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_updatePlaceholder);
  *v20 = a2;
  v20[1] = a3;
  v21 = (_QWORD *)(v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_updateContentView);
  *v21 = a4;
  v21[1] = a5;
  swift_weakAssign(v19, a6);
  v22 = (_QWORD *)(v8 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_reloadAction);
  *v22 = a7;
  v22[1] = a8;
  return v8;
}

void sub_17CAA4(id a1)
{
  if (a1 != (char *)&dword_0 + 1)

}

unint64_t sub_17CAB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3B6870;
  if (!qword_3B6870)
  {
    v1 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_3B6870);
  }
  return result;
}

unint64_t sub_17CB00()
{
  unint64_t result;

  result = qword_3BED30;
  if (!qword_3BED30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentViewHostState, &type metadata for ContentViewHostState);
    atomic_store(result, (unint64_t *)&qword_3BED30);
  }
  return result;
}

void sub_17CB44(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  _BYTE v4[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 16, v4, 0, 0);
  *a2 = *(_BYTE *)(v3 + 16);
}

void sub_17CB88(_BYTE *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  _BYTE v4[24];

  v3 = *a2;
  v4[0] = *a1;
  v2 = v4[0];
  sub_17B314();
  swift_beginAccess(v3 + 16, v4, 1, 0);
  *(_BYTE *)(v3 + 16) = v2;
}

id sub_17CBD4@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  __int128 *v3;
  __int128 v4;
  _BYTE v6[24];

  v3 = (__int128 *)(*a1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_contentView);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return (id)v4;
}

uint64_t sub_17CC2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC8BookEPUB15ContentViewHost_document;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_49F1C(v3, a2);
}

uint64_t storeEnumTagSinglePayload for ContentViewHostState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_17CCD0 + 4 * byte_2EF3D3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_17CD04 + 4 * byte_2EF3CE[v4]))();
}

uint64_t sub_17CD04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_17CD0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x17CD14);
  return result;
}

uint64_t sub_17CD20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x17CD28);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_17CD2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_17CD34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentViewHostState()
{
  return &type metadata for ContentViewHostState;
}

ValueMetadata *type metadata accessor for ViewProxyError()
{
  return &type metadata for ViewProxyError;
}

uint64_t sub_17CD60()
{
  return type metadata accessor for ContentViewHost(0);
}

uint64_t type metadata accessor for ContentViewHost(uint64_t a1)
{
  uint64_t result;

  result = qword_3BED60;
  if (!qword_3BED60)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContentViewHost);
  return result;
}

uint64_t sub_17CDA4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = &unk_2EF5A0;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_2EF5B8;
    v4[5] = (char *)&value witness table for () + 64;
    v4[6] = &unk_2EF5E8;
    v4[3] = &unk_2EF5D0;
    v4[4] = (char *)&value witness table for () + 64;
    v4[7] = &unk_2EF600;
    v4[8] = (char *)&value witness table for () + 64;
    v4[9] = &unk_2EF618;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ContentViewHost(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ContentViewHost);
}

uint64_t dispatch thunk of NavigationHistoryController.next()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ContentViewHost.contentView.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of SearchBarResponderState.isFirstResponder.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ContentViewHost.__allocating_init(document:updatePlaceholder:updateContentView:layoutProvider:stylesheetProvider:reloadAction:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t dispatch thunk of ContentViewHost.contentViewDeferred()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ContentLayoutProvider.pageLabelHeight.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ContentViewHost.contentViewAvailable(contentView:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t sub_17CEC4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_17CEE8()
{
  uint64_t v0;

  return sub_17BD6C(v0);
}

id sub_17CEF0(id result)
{
  if (result != (char *)&dword_0 + 1)
    return result;
  return result;
}

uint64_t static OS_os_log.be_loggerForCurrentFile(_:)(uint64_t a1, uint64_t a2)
{
  return sub_17CF40(a1, a2, 0x6C7070612E6D6F63, 0xEF736B6F6F422E65);
}

uint64_t static OS_os_log.be_logger(for:)(uint64_t a1, uint64_t a2)
{
  return sub_17CF40(a1, a2, 0xD000000000000013, 0x80000000002C6E50);
}

uint64_t sub_17CF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_523DC();
  swift_bridgeObjectRetain(a2);
  v8 = OS_os_log.init(subsystem:category:)(a3, a4, a1, a2);
  return Logger.init(_:)(v8);
}

uint64_t Logger.once(per:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  int *v9;
  uint64_t v10;
  int *v11;
  _BYTE v12[24];

  v3 = String.hashValue.getter();
  if (qword_3B5820 != -1)
    swift_once(&qword_3B5820, sub_17D3A8);
  swift_beginAccess(off_3BEF20, v12, 32, 0);
  if (*(_QWORD *)((char *)off_3BEF20[0] + (unint64_t)&dword_10) && (sub_3B7F8(v3), (v4 & 1) != 0))
  {
    swift_endAccess(v12);
    if (qword_3B5828 != -1)
      swift_once(&qword_3B5828, sub_17D3CC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_555F0(v5, (uint64_t)qword_3BEF28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v6, v5);
  }
  else
  {
    swift_endAccess(v12);
    swift_beginAccess(off_3BEF20, v12, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_3BEF20[0]);
    v11 = off_3BEF20[0];
    off_3BEF20[0] = (int *)0x8000000000000000;
    sub_17D6DC(1, v3, isUniquelyReferenced_nonNull_native);
    v9 = off_3BEF20[0];
    off_3BEF20[0] = v11;
    swift_bridgeObjectRelease(v9);
    swift_endAccess(v12);
    v10 = type metadata accessor for Logger(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, v1, v10);
  }
}

uint64_t Logger.verbose.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t Logger.once(_:_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  int *v19;
  uint64_t v20;
  int *v21;
  _BYTE v22[24];

  v6 = v5;
  if (a1)
    v11 = ((uint64_t (*)(void))String.hashValue.getter)();
  else
    v11 = 0;
  v12 = String.hashValue.getter(a2, a3) ^ v11;
  v13 = v12 ^ Int.hashValue.getter(a4);
  if (qword_3B5820 != -1)
    swift_once(&qword_3B5820, sub_17D3A8);
  swift_beginAccess(off_3BEF20, v22, 32, 0);
  if (*(_QWORD *)((char *)off_3BEF20[0] + (unint64_t)&dword_10) && (sub_3B7F8(v13), (v14 & 1) != 0))
  {
    swift_endAccess(v22);
    if (qword_3B5828 != -1)
      swift_once(&qword_3B5828, sub_17D3CC);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_555F0(v15, (uint64_t)qword_3BEF28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a5, v16, v15);
  }
  else
  {
    swift_endAccess(v22);
    swift_beginAccess(off_3BEF20, v22, 33, 0);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_3BEF20[0]);
    v21 = off_3BEF20[0];
    off_3BEF20[0] = (int *)0x8000000000000000;
    sub_17D6DC(1, v13, isUniquelyReferenced_nonNull_native);
    v19 = off_3BEF20[0];
    off_3BEF20[0] = v21;
    swift_bridgeObjectRelease(v19);
    swift_endAccess(v22);
    v20 = type metadata accessor for Logger(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a5, v6, v20);
  }
}

uint64_t Logger.if (_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((a1 & 1) != 0)
  {
    v4 = type metadata accessor for Logger(0);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
    v6 = a2;
    v7 = v2;
  }
  else
  {
    if (qword_3B5828 != -1)
      swift_once(&qword_3B5828, sub_17D3CC);
    v8 = type metadata accessor for Logger(0);
    v7 = sub_555F0(v8, (uint64_t)qword_3BEF28);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v6 = a2;
    v4 = v8;
  }
  return v5(v6, v7, v4);
}

int *sub_17D3A8()
{
  int *result;

  result = (int *)sub_3CF30((uint64_t)_swiftEmptyArrayStorage);
  off_3BEF20[0] = result;
  return result;
}

uint64_t sub_17D3CC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3BEF28);
  sub_555F0(v0, (uint64_t)qword_3BEF28);
  sub_523DC();
  v1 = static OS_os_log.disabled.getter();
  return Logger.init(_:)(v1);
}

uint64_t static Logger.disabledLogger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3B5828 != -1)
    swift_once(&qword_3B5828, sub_17D3CC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_555F0(v2, (uint64_t)qword_3BEF28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void sub_17D498(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_3B8A0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v18[7] + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_F1B94();
      goto LABEL_7;
    }
    sub_ECCB4(v15, a4 & 1);
    v19 = sub_3B8A0(a2, a3);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = v19;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F1714(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_17D5B8(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_3B8A0(a1, a2);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a3 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(double *)(v18[7] + 8 * v12) = a4;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a3 & 1) == 0)
    {
      sub_F1D40();
      goto LABEL_7;
    }
    sub_ECFBC(v15, a3 & 1);
    v19 = sub_3B8A0(a1, a2);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = v19;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F175C(v12, a1, a2, v18, a4);
      swift_bridgeObjectRetain(a2);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_17D6DC(char a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  char v18;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_3B7F8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_BYTE *)(v16[7] + v10) = a1 & 1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_F1EEC();
      goto LABEL_7;
    }
    sub_ED2C0(v13, a3 & 1);
    v17 = sub_3B7F8(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F17A4(v10, a2, a1 & 1, v16);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_17D7E8(uint64_t a1, uint64_t a2, char a3)
{
  sub_17DE1C(a1, a2, a3, sub_F221C, (void (*)(void))sub_ED81C, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_F17E8);
}

void sub_17D804(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_17E1A8(a1, a2, a3, a4, sub_F2228, (void (*)(void))sub_ED828, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_F17EC);
}

uint64_t sub_17D820(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_3B7F8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_17EAD8(a1, v16[7] + (v10 << 6));
      return sub_F17F0(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_F2420();
      goto LABEL_7;
    }
    sub_EDB4C(v13, a3 & 1);
    v18 = sub_3B7F8(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_17EAD8(a1, v16[7] + (v10 << 6));
      return sub_F17F0(v10, a2, a1, v16);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

_OWORD *sub_17D92C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_3B8A0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        sub_34488(v19);
        return sub_3F180(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_F25E0();
      goto LABEL_7;
    }
    sub_EDE0C(v15, a4 & 1);
    v21 = sub_3B8A0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F1854(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_17DA5C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_3B8A0(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 16 * v14;
        result = sub_86CB8(*(_QWORD *)v21, *(_BYTE *)(v21 + 8));
        *(_QWORD *)v21 = a1;
        *(_BYTE *)(v21 + 8) = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_F27C4();
      goto LABEL_7;
    }
    sub_EE108(v17, a5 & 1);
    v23 = sub_3B8A0(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F18BC(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain(a4);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_17DBA4(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  unint64_t v19;
  char v20;
  id v21;
  uint64_t v22;

  v5 = (_QWORD **)v4;
  v9 = (_QWORD *)*v4;
  v11 = sub_3B904((uint64_t)a3);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = v9[3];
    if (v16 >= v14 && (a4 & 1) != 0)
    {
LABEL_7:
      v17 = *v5;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v18 = (uint64_t *)(v17[7] + 16 * v11);
        swift_bridgeObjectRelease(v18[1]);
        *v18 = a1;
        v18[1] = a2;
        return;
      }
      goto LABEL_11;
    }
    if (v16 >= v14 && (a4 & 1) == 0)
    {
      sub_F2990();
      goto LABEL_7;
    }
    sub_EE424(v14, a4 & 1);
    v19 = sub_3B904((uint64_t)a3);
    if ((v15 & 1) == (v20 & 1))
    {
      v11 = v19;
      v17 = *v5;
      if ((v15 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F1910(v11, (uint64_t)a3, a1, a2, v17);
      v21 = a3;
      return;
    }
  }
  type metadata accessor for BEContentLayoutInfoKey(0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v22);
  __break(1u);
}

void sub_17DCD4(uint64_t a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  double *v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_3B7F8(a1);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a2 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (double *)(v18[7] + 16 * v12);
        *v19 = a3;
        v19[1] = a4;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a2 & 1) == 0)
    {
      sub_F2B44();
      goto LABEL_7;
    }
    sub_EE748(v15, a2 & 1);
    v20 = sub_3B7F8(a1);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F1914(v12, a1, v18, a3, a4);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_17DDE4(uint64_t a1, uint64_t a2, char a3)
{
  sub_17E560(a1, a2, a3, sub_F2B50, (void (*)(void))sub_EE754, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_F17E8);
}

void sub_17DE00(uint64_t a1, uint64_t a2, char a3)
{
  sub_17DE1C(a1, a2, a3, sub_F2B5C, (void (*)(void))sub_EE760, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_F17E8);
}

void sub_17DE1C(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), void (*a6)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;

  v9 = v6;
  v13 = *v6;
  v15 = sub_3B7F8(a2);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a3 & 1) != 0)
    {
LABEL_7:
      v21 = *v9;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v22 = *(_QWORD *)(v21 + 56);
        swift_release();
        *(_QWORD *)(v22 + 8 * v15) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      a4();
      goto LABEL_7;
    }
    a5();
    v23 = sub_3B7F8(a2);
    if ((v19 & 1) == (v24 & 1))
    {
      v15 = v23;
      v21 = *v9;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a6(v15, a2, a1, v21);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_17DF58(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_3B828(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        swift_bridgeObjectRelease(v19[1]);
        *v19 = a1;
        v19[1] = a2;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_F2E94();
      goto LABEL_7;
    }
    sub_EECC4(v15, a4 & 1);
    v20 = sub_3B828(a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F19A4(v12, a3, a1, a2, v18);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for BookFontTable);
  __break(1u);
}

_QWORD *sub_17E074(_QWORD *a1, uint64_t *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_3B984(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_17EA9C(a1, (_QWORD *)(v16[7] + 48 * v10));
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_F303C();
      goto LABEL_7;
    }
    sub_EF1A4(v13, a3 & 1);
    v18 = sub_3B984(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_17EA9C(a1, (_QWORD *)(v16[7] + 48 * v10));
LABEL_11:
      sub_F19EC(v10, a2, a1, v16);
      return sub_1398A4(a2);
    }
  }
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for SearchPassage);
  __break(1u);
  return result;
}

void sub_17E18C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_17E1A8(a1, a2, a3, a4, sub_F3258, (void (*)(void))sub_EF5B4, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_F17EC);
}

void sub_17E1A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v10 = v7;
  v15 = *v7;
  v17 = sub_3B8A0(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        swift_release();
        *(_QWORD *)(v24 + 8 * v17) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v25 = sub_3B8A0(a2, a3);
    if ((v21 & 1) == (v26 & 1))
    {
      v17 = v25;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_17E2FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_17E7F8(a1, a2, a3, a4, sub_F3434, (void (*)(void))sub_EF8F4, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_F17EC);
}

uint64_t sub_17E318(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_3B7F8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_17EA60((uint64_t)a1, v16[7] + 96 * v10);
      return sub_F1A58(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_F3440();
      goto LABEL_7;
    }
    sub_EF900(v13, a3 & 1);
    v18 = sub_3B7F8(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        return sub_17EA60((uint64_t)a1, v16[7] + 96 * v10);
      return sub_F1A58(v10, a2, a1, v16);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
  return result;
}

void sub_17E428(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_3B7F8(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        swift_bridgeObjectRelease(v19[1]);
        *v19 = a1;
        v19[1] = a2;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_F3640();
      goto LABEL_7;
    }
    sub_EFC38(v15, a4 & 1);
    v20 = sub_3B7F8(a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F1910(v12, a3, a1, a2, v18);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_17E544(uint64_t a1, uint64_t a2, char a3)
{
  sub_17E560(a1, a2, a3, sub_F39A4, (void (*)(void))sub_F0210, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t))sub_F17E8);
}

void sub_17E560(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), void (*a6)(unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;

  v9 = v6;
  v13 = *v6;
  v15 = sub_3B7F8(a2);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a3 & 1) != 0)
    {
LABEL_7:
      v21 = *v9;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v22 = *(_QWORD *)(v21 + 56);
        swift_bridgeObjectRelease(*(_QWORD *)(v22 + 8 * v15));
        *(_QWORD *)(v22 + 8 * v15) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      a4();
      goto LABEL_7;
    }
    a5();
    v23 = sub_3B7F8(a2);
    if ((v19 & 1) == (v24 & 1))
    {
      v15 = v23;
      v21 = *v9;
      if ((v19 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a6(v15, a2, a1, v21);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
  __break(1u);
}

void sub_17E69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_3B8A0(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        swift_bridgeObjectRelease(v21[1]);
        *v21 = a1;
        v21[1] = a2;
        return;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_F37EC();
      goto LABEL_7;
    }
    sub_EFEEC(v17, a5 & 1);
    v22 = sub_3B8A0(a3, a4);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F1B00(v14, a3, a4, a1, a2, v20);
      swift_bridgeObjectRetain(a4);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_17E7DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_17E7F8(a1, a2, a3, a4, sub_F3F00, (void (*)(void))sub_F0DD4, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_F17EC);
}

void sub_17E7F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v10 = v7;
  v15 = *v7;
  v17 = sub_3B8A0(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        swift_bridgeObjectRelease(*(_QWORD *)(v24 + 8 * v17));
        *(_QWORD *)(v24 + 8 * v17) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v25 = sub_3B8A0(a2, a3);
    if ((v21 & 1) == (v26 & 1))
    {
      v17 = v25;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

void sub_17E94C(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  sub_3BA4C(a2);
  v11 = v10;
  v12 = v8[2];
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v9;
    v16 = v8[3];
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v17 = *v4;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v18 = v17[7];

        *(_QWORD *)(v18 + 8 * v11) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_F4268();
      goto LABEL_7;
    }
    sub_F13FC(v14, a3 & 1);
    sub_3BA4C(a2);
    if ((v15 & 1) == (v20 & 1))
    {
      v11 = v19;
      v17 = *v4;
      if ((v15 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_F1B50(v11, a2, a1, v17);
      return;
    }
  }
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for BookThemeType);
  __break(1u);
}

uint64_t sub_17EA60(uint64_t a1, uint64_t a2)
{
  assignWithTake for ContentMessage.CFIUpdate(a2, a1);
  return a2;
}

_QWORD *sub_17EA9C(_QWORD *a1, _QWORD *a2)
{
  assignWithTake for SearchPassage(a2, a1);
  return a2;
}

uint64_t sub_17EAD8(uint64_t a1, uint64_t a2)
{
  assignWithTake for BookContentAdornmentState(a2, a1);
  return a2;
}

uint64_t LocationHistoryEntry.SnapshotLocation.page.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[2];

  v2 = v1[5];
  v3 = v1[7];
  v19 = v1[6];
  v20[0] = v3;
  *(_OWORD *)((char *)v20 + 10) = *(_OWORD *)((char *)v1 + 122);
  v4 = v1[1];
  v5 = v1[3];
  v15 = v1[2];
  v6 = v15;
  v16 = v5;
  v7 = v1[3];
  v8 = v1[5];
  v17 = v1[4];
  v9 = v17;
  v18 = v8;
  v10 = v1[1];
  v14[0] = *v1;
  v11 = v14[0];
  v14[1] = v10;
  v12 = v1[7];
  a1[6] = v19;
  a1[7] = v12;
  *(_OWORD *)((char *)a1 + 122) = *(_OWORD *)((char *)v1 + 122);
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v9;
  a1[5] = v2;
  *a1 = v11;
  a1[1] = v4;
  return sub_49BD8((uint64_t)v14);
}

uint64_t LocationHistoryEntry.SnapshotLocation.cfi.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 152));
  return v1;
}

_QWORD *LocationHistoryEntry.startLocation.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v2 = v1[7];
  v3 = v1[5];
  v22 = v1[6];
  v23 = v2;
  v4 = v1[7];
  v5 = v1[9];
  v24 = v1[8];
  v6 = v24;
  v25 = v5;
  v7 = v1[3];
  v9 = v1[1];
  v18 = v1[2];
  v8 = v18;
  v19 = v7;
  v10 = v1[3];
  v11 = v1[5];
  v20 = v1[4];
  v12 = v20;
  v21 = v11;
  v13 = v1[1];
  v17[0] = *v1;
  v14 = v17[0];
  v17[1] = v13;
  a1[6] = v22;
  a1[7] = v4;
  v15 = v1[9];
  a1[8] = v6;
  a1[9] = v15;
  a1[2] = v8;
  a1[3] = v10;
  a1[4] = v12;
  a1[5] = v3;
  *a1 = v14;
  a1[1] = v9;
  return sub_17EC28(v17);
}

_QWORD *sub_17EC28(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[3];
  v3 = a1[19];
  swift_bridgeObjectRetain(a1[6]);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v2);
  return a1;
}

_QWORD *LocationHistoryEntry.currentLocation.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v2 = v1[17];
  v3 = v1[15];
  v22 = v1[16];
  v23 = v2;
  v4 = v1[17];
  v5 = v1[19];
  v24 = v1[18];
  v6 = v24;
  v25 = v5;
  v7 = v1[13];
  v9 = v1[11];
  v18 = v1[12];
  v8 = v18;
  v19 = v7;
  v10 = v1[13];
  v11 = v1[15];
  v20 = v1[14];
  v12 = v20;
  v21 = v11;
  v13 = v1[11];
  v17[0] = v1[10];
  v14 = v17[0];
  v17[1] = v13;
  a1[6] = v22;
  a1[7] = v4;
  v15 = v1[19];
  a1[8] = v6;
  a1[9] = v15;
  a1[2] = v8;
  a1[3] = v10;
  a1[4] = v12;
  a1[5] = v3;
  *a1 = v14;
  a1[1] = v9;
  return sub_17EC28(v17);
}

uint64_t LocationHistoryEntry.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LocationHistoryEntry(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for LocationHistoryEntry(uint64_t a1)
{
  return sub_3E7A8(a1, qword_3BF028, (uint64_t)&nominal type descriptor for LocationHistoryEntry);
}

uint64_t LocationHistoryEntry.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for LocationHistoryEntry(0) + 28);
  v4 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t LocationHistoryEntry.historyEntity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LocationHistoryEntry(0);
  return sub_137328(v1 + *(int *)(v3 + 32), a1, type metadata accessor for HistoryEntity);
}

uint64_t sub_17EDC4@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a4;
  v42 = type metadata accessor for HistoryEntity(0);
  __chkstk_darwin(v42);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[1];
  v12 = a1[18];
  v13 = a1[19];
  v40 = *a1;
  *(_QWORD *)a5 = v40;
  *(_QWORD *)(a5 + 8) = v11;
  v14 = *((_OWORD *)a1 + 6);
  *(_OWORD *)(a5 + 80) = *((_OWORD *)a1 + 5);
  *(_OWORD *)(a5 + 96) = v14;
  v15 = *((_OWORD *)a1 + 8);
  *(_OWORD *)(a5 + 112) = *((_OWORD *)a1 + 7);
  *(_OWORD *)(a5 + 128) = v15;
  v16 = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a5 + 16) = *((_OWORD *)a1 + 1);
  *(_OWORD *)(a5 + 32) = v16;
  v17 = *((_OWORD *)a1 + 4);
  *(_OWORD *)(a5 + 48) = *((_OWORD *)a1 + 3);
  *(_OWORD *)(a5 + 64) = v17;
  *(_QWORD *)(a5 + 144) = v12;
  *(_QWORD *)(a5 + 152) = v13;
  v18 = a2[1];
  *(_OWORD *)(a5 + 160) = *a2;
  *(_OWORD *)(a5 + 176) = v18;
  v19 = a2[5];
  *(_OWORD *)(a5 + 224) = a2[4];
  *(_OWORD *)(a5 + 240) = v19;
  v20 = a2[3];
  *(_OWORD *)(a5 + 192) = a2[2];
  *(_OWORD *)(a5 + 208) = v20;
  v21 = a2[9];
  *(_OWORD *)(a5 + 288) = a2[8];
  *(_OWORD *)(a5 + 304) = v21;
  v22 = a2[7];
  *(_OWORD *)(a5 + 256) = a2[6];
  *(_OWORD *)(a5 + 272) = v22;
  v23 = (int *)type metadata accessor for LocationHistoryEntry(0);
  v24 = a5 + v23[6];
  v25 = type metadata accessor for Date(0);
  v41 = *(_QWORD *)(v25 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
  v43 = a3;
  v26(v24, a3, v25);
  v27 = a5 + v23[7];
  v28 = type metadata accessor for UUID(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v27, v44, v28);
  if ((v13 & 0x2000000000000000) != 0)
    v31 = HIBYTE(v13) & 0xF;
  else
    v31 = v12 & 0xFFFFFFFFFFFFLL;
  if (v31)
  {
    swift_bridgeObjectRetain(v13);
    v33 = UUID.init()(v32);
    v34 = v42;
    Date.init()(v33);
    v35 = &v10[*(int *)(v34 + 20)];
    *(_QWORD *)v35 = v12;
  }
  else
  {
    v36 = UUID.init()(v30);
    v37 = v42;
    Date.init()(v36);
    v35 = &v10[*(int *)(v37 + 20)];
    *(_QWORD *)v35 = v40;
    v13 = v11;
  }
  *((_QWORD *)v35 + 1) = v13;
  v35[16] = v31 == 0;
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v44, v28);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v25);
  return sub_183000((uint64_t)v10, a5 + v23[8]);
}

uint64_t LocationHistoryEntry.description.getter()
{
  _OWORD *v0;
  Swift::String v1;
  Swift::String v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  Swift::String v13;
  void *object;
  Swift::String v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  Swift::String v21;
  void *v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  void *v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;
  void *v32;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;

  *(_QWORD *)&v43 = 0;
  *((_QWORD *)&v43 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(79);
  v1._object = (void *)0x80000000002EF620;
  v1._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v1);
  v2._object = (void *)0x80000000002CE790;
  v2._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v2);
  v3 = v0[7];
  v4 = v0[5];
  v39 = v0[6];
  v40 = v3;
  v5 = v0[7];
  v6 = v0[9];
  v41 = v0[8];
  v42 = v6;
  v7 = v0[3];
  v8 = v0[1];
  v35 = v0[2];
  v36 = v7;
  v9 = v0[3];
  v10 = v0[5];
  v37 = v0[4];
  v38 = v10;
  v11 = v0[1];
  v34[0] = *v0;
  v34[1] = v11;
  v49 = v39;
  v50 = v5;
  v12 = v0[9];
  v51 = v41;
  v52 = v12;
  v45 = v35;
  v46 = v9;
  v47 = v37;
  v48 = v4;
  v43 = v34[0];
  v44 = v8;
  sub_17EC28(v34);
  v13._countAndFlagsBits = LocationHistoryEntry.SnapshotLocation.description.getter();
  object = v13._object;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(object);
  sub_183044(v34);
  v15._countAndFlagsBits = 0xD000000000000016;
  v15._object = (void *)0x80000000002CE7B0;
  String.append(_:)(v15);
  v16 = v0[17];
  v49 = v0[16];
  v50 = v16;
  v17 = v0[19];
  v51 = v0[18];
  v52 = v17;
  v18 = v0[13];
  v45 = v0[12];
  v46 = v18;
  v19 = v0[15];
  v47 = v0[14];
  v48 = v19;
  v20 = v0[11];
  v43 = v0[10];
  v44 = v20;
  sub_17EC28(&v43);
  v21._countAndFlagsBits = LocationHistoryEntry.SnapshotLocation.description.getter();
  v22 = v21._object;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v22);
  sub_183044(&v43);
  v23._countAndFlagsBits = 0xD000000000000010;
  v23._object = (void *)0x80000000002CE7D0;
  String.append(_:)(v23);
  type metadata accessor for LocationHistoryEntry(0);
  v24 = type metadata accessor for Date(0);
  v25 = sub_34284((unint64_t *)&qword_3B5CA8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v24, v25);
  v27 = v26._object;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v27);
  v28._countAndFlagsBits = 0x697575202020200ALL;
  v28._object = (void *)0xEB00000000203A64;
  String.append(_:)(v28);
  v29 = type metadata accessor for UUID(0);
  v30 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v29, v30);
  v32 = v31._object;
  String.append(_:)(v31);
  swift_bridgeObjectRelease(v32);
  return 0;
}

unint64_t LocationHistoryEntry.SnapshotLocation.description.getter()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  Swift::String v10;
  _OWORD v12[7];
  _OWORD v13[2];

  v1 = *(_OWORD *)(v0 + 112);
  v12[6] = *(_OWORD *)(v0 + 96);
  v13[0] = v1;
  *(_OWORD *)((char *)v13 + 10) = *(_OWORD *)(v0 + 122);
  v2 = *(_OWORD *)(v0 + 48);
  v12[2] = *(_OWORD *)(v0 + 32);
  v12[3] = v2;
  v3 = *(_OWORD *)(v0 + 80);
  v12[4] = *(_OWORD *)(v0 + 64);
  v12[5] = v3;
  v4 = *(_OWORD *)(v0 + 16);
  v12[0] = *(_OWORD *)v0;
  v12[1] = v4;
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(void **)(v0 + 152);
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  sub_49BD8((uint64_t)v12);
  v7._countAndFlagsBits = Location.description.getter();
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  sub_49900((uint64_t)v12);
  v9._countAndFlagsBits = 0x696663202020200ALL;
  v9._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v9);
  swift_bridgeObjectRetain(v5);
  v10._countAndFlagsBits = v6;
  v10._object = v5;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v5);
  return 0xD00000000000001BLL;
}

__n128 static LocationHistoryConfiguration.defaultConfiguration.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 result;

  __asm { FMOV            V0.2D, #0.5 }
  *a1 = result;
  a1[1].n128_u64[0] = 5;
  a1[1].n128_u64[1] = 0x4008000000000000;
  return result;
}

double LocationHistoryObserver.configuration.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 32);
  result = *(double *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 16) = v2;
  *(double *)(a1 + 24) = result;
  return result;
}

uint64_t LocationHistoryObserver.observedEvents.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 48));
}

uint64_t LocationHistoryObserver.__allocating_init(configuration:locationProviding:paginating:)(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48));
  LocationHistoryObserver.init(configuration:locationProviding:paginating:)(a1, a2, a3, a4, a5);
  return v11;
}

uint64_t LocationHistoryObserver.init(configuration:locationProviding:paginating:)(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  unint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  unint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  __n128 v93;
  __n128 v94;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  id v125[3];
  id v126;
  _OWORD v127[10];
  _OWORD v128[9];

  v6 = v5;
  v104 = a5;
  v121 = a3;
  v10 = sub_319AC(&qword_3BEF40);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_319AC((uint64_t *)&unk_3B80B0);
  __chkstk_darwin(v14);
  v122 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v111 = *(_QWORD *)(v16 - 8);
  v112 = v16;
  __chkstk_darwin(v16);
  v110 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_319AC(&qword_3BEF48);
  v107 = *(_QWORD *)(v18 - 8);
  v108 = v18;
  __chkstk_darwin(v18);
  v106 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_319AC(&qword_3BEF50);
  v114 = *(_QWORD *)(v20 - 8);
  v115 = v20;
  __chkstk_darwin(v20);
  v120 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Date(0);
  v116 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v109 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v23;
  __chkstk_darwin(v24);
  v124 = (char *)&v96 - v25;
  v26 = *a1;
  v27 = *((_QWORD *)a1 + 1);
  v28 = *((_QWORD *)a1 + 2);
  v29 = *((_QWORD *)a1 + 3);
  v30 = sub_319AC(&qword_3BEF58);
  v31 = swift_allocObject(v30, *(unsigned int *)(v30 + 48));
  *(_QWORD *)(v6 + 48) = PassthroughSubject.init()(v31);
  v32 = sub_319AC(&qword_3BEF60);
  v33 = *(unsigned int *)(v32 + 48);
  v113 = v32;
  v34 = swift_allocObject(v32, v33);
  *(_QWORD *)(v6 + 56) = PassthroughSubject.init()(v34);
  *(_BYTE *)(v6 + 64) = 0;
  Logger.init(subsystem:category:)(0xD000000000000018, 0x80000000002CCAB0, 0xD000000000000017, 0x80000000002EF640, v35);
  v118 = v11;
  v119 = v10;
  v117 = v13;
  v123 = v22;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_181934((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v36 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_cancellables) = v36;
  v37 = v6 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_endLocation;
  sub_17FD3C(v127);
  sub_17FD58((uint64_t)v127, v37);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_settleTimer) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_fallbackCounter) = 0;
  *(double *)(v6 + 16) = v26;
  *(_QWORD *)(v6 + 24) = v27;
  v103 = v28;
  *(_QWORD *)(v6 + 32) = v28;
  *(_QWORD *)(v6 + 40) = v29;
  v38 = v104;
  *(_QWORD *)(v6 + 72) = a4;
  *(_QWORD *)(v6 + 80) = v38;
  ObjectType = swift_getObjectType(a2);
  v40 = swift_unknownObjectRetain(a4);
  v41 = v121;
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t, __n128))(v121 + 16))(v128, ObjectType, v121, v40);
  v42 = LocationProviding.readingLocationCFI.getter(ObjectType, v41);
  v43 = v6 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation;
  v44 = v128[7];
  *(_OWORD *)(v43 + 96) = v128[6];
  *(_OWORD *)(v43 + 112) = v44;
  *(_OWORD *)(v43 + 128) = v128[8];
  v45 = v128[3];
  *(_OWORD *)(v43 + 32) = v128[2];
  *(_OWORD *)(v43 + 48) = v45;
  v46 = v128[5];
  *(_OWORD *)(v43 + 64) = v128[4];
  *(_OWORD *)(v43 + 80) = v46;
  v47 = v128[1];
  *(_OWORD *)v43 = v128[0];
  *(_OWORD *)(v43 + 16) = v47;
  *(_QWORD *)(v43 + 144) = v42;
  *(_QWORD *)(v43 + 152) = v48;
  *(_QWORD *)(v6 + 88) = a2;
  *(_QWORD *)(v6 + 96) = v41;
  v96 = v6;
  v49 = swift_unknownObjectRetain(a2);
  static Date.now.getter(v49);
  v99 = swift_allocObject(&unk_385478, 17);
  *(_BYTE *)(v99 + 16) = 0;
  v125[0] = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v41 + 48))(ObjectType, v41);
  v126 = (id)LocationProviding.readingLocationCFIPublisher.getter(ObjectType, v41);
  v50 = sub_319AC(&qword_3B7298);
  v51 = sub_319AC(&qword_3BEFA0);
  v98 = a2;
  v52 = sub_3DCC0(&qword_3BE7B0, &qword_3B7298, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v104 = a4;
  v53 = v52;
  v54 = sub_3DCC0(&qword_3BEFA8, &qword_3BEFA0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v55 = v106;
  Publisher.combineLatest<A>(_:)(&v126, v50, v51, v53, v54);
  swift_release();
  swift_release();
  v56 = v110;
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)(v26);
  v57 = sub_5B5E4();
  v97 = v57;
  v125[0] = (id)static OS_dispatch_queue.main.getter(v58);
  v59 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v101 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
  v102 = v59;
  v60 = (uint64_t)v122;
  v101(v122, 1, 1, v59);
  v61 = sub_3DCC0(&qword_3BEFB0, &qword_3BEF48, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v100 = sub_34284((unint64_t *)&qword_3B8E80, (uint64_t (*)(uint64_t))sub_5B5E4, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  v62 = v108;
  Publisher.debounce<A>(for:scheduler:options:)(v56, v125, v60, v108, v57, v61, v100);
  sub_52128(v60, (uint64_t *)&unk_3B80B0);

  (*(void (**)(char *, uint64_t))(v111 + 8))(v56, v112);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v55, v62);
  v63 = swift_allocObject(&unk_3854A0, 24);
  swift_weakInit(v63 + 16);
  v64 = v116;
  v65 = v109;
  v66 = v123;
  (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v109, v124, v123);
  v67 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v68 = (v105 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  v69 = (v68 + 39) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject(&unk_3854C8, v69 + 16);
  v71 = v99;
  *(_QWORD *)(v70 + 16) = v63;
  *(_QWORD *)(v70 + 24) = v71;
  (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v70 + v67, v65, v66);
  v72 = (double *)(v70 + v68);
  *v72 = v26;
  *((_QWORD *)v72 + 1) = v27;
  *((_QWORD *)v72 + 2) = v103;
  *((_QWORD *)v72 + 3) = v29;
  v73 = (_QWORD *)(v70 + v69);
  v74 = v98;
  v75 = v121;
  *v73 = v98;
  v73[1] = v75;
  v76 = swift_allocObject(&unk_3854F0, 32);
  *(_QWORD *)(v76 + 16) = sub_180154;
  *(_QWORD *)(v76 + 24) = v70;
  v77 = sub_3DCC0(&qword_3BEFB8, &qword_3BEF50, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  swift_unknownObjectRetain(v74);
  swift_retain();
  v78 = v115;
  v79 = v120;
  Publisher<>.sink(receiveValue:)(sub_18021C, v76, v115, v77);
  v80 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v79, v78, v80);
  v81 = v96;
  v82 = v96 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_cancellables;
  v83 = swift_beginAccess(v96 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_cancellables, v125, 33, 0);
  AnyCancellable.store(in:)(v82, v83);
  swift_endAccess(v125);
  swift_release();
  v125[0] = *(id *)(v81 + 56);
  swift_retain();
  v84 = v97;
  v126 = (id)static OS_dispatch_queue.main.getter(v85);
  v86 = (uint64_t)v122;
  v101(v122, 1, 1, v102);
  v87 = sub_3DCC0(&qword_3BEFC0, &qword_3BEF60, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v88 = v117;
  Publisher.receive<A>(on:options:)(&v126, v86, v113, v84, v87, v100);
  sub_52128(v86, (uint64_t *)&unk_3B80B0);

  swift_release();
  v89 = swift_allocObject(&unk_3854A0, 24);
  swift_weakInit(v89 + 16);
  v90 = sub_3DCC0(&qword_3BEFC8, &qword_3BEF40, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v91 = v119;
  Publisher<>.sink(receiveValue:)(sub_1802DC, v89, v119, v90);
  v92 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v118 + 8))(v88, v91, v92);
  v93 = swift_beginAccess(v82, v125, 33, 0);
  AnyCancellable.store(in:)(v82, v93);
  swift_endAccess(v125);
  swift_unknownObjectRelease(v74);
  swift_unknownObjectRelease(v104);
  v94 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v124, v123, v94);
  swift_release();
  return v81;
}

double sub_17FD3C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_17FD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3BEF80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_17FDA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_17FDB0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_17FDD4(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t Strong;
  uint64_t v27;
  char *v28;
  __n128 v29;
  char v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD v47[7];
  _OWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[7];
  _OWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _BYTE v65[26];

  v44 = a3;
  v45 = a11;
  v43 = a2;
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[6];
  v22 = a1[7];
  v23 = a1[4];
  v63 = a1[5];
  v64 = v21;
  *(_OWORD *)v65 = v22;
  *(_OWORD *)&v65[10] = *(__int128 *)((char *)a1 + 122);
  v24 = a1[3];
  v60 = a1[2];
  v61 = v24;
  v62 = v23;
  v25 = a1[1];
  a4 += 16;
  v58 = *a1;
  v59 = v25;
  swift_beginAccess(a4, &v57, 0, 0);
  Strong = swift_weakLoadStrong(a4);
  if (Strong)
  {
    v27 = Strong;
    v28 = (char *)(a5 + 16);
    v29 = swift_beginAccess(v28, &v56, 0, 0);
    v30 = *v28;
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, a6, v17, v29);
    if ((v30 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    else
    {
      v32 = fabs(Date.timeIntervalSinceNow.getter(v31));
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      if (v32 > a9)
      {
        swift_beginAccess(v28, &v46, 1, 0);
        *v28 = 1;
      }
    }
    swift_beginAccess(v28, &v55, 0, 0);
    if ((*v28 & 1) == 0)
      *(_BYTE *)(v27 + 64) = 1;
    v33 = *(_QWORD *)(v27 + 80);
    ObjectType = swift_getObjectType(*(_QWORD *)(v27 + 72));
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(ObjectType, v33);
    v37 = v36;
    v38 = swift_getObjectType(v35);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(v38, v37);
    swift_unknownObjectRelease(v35);
    if (*((_QWORD *)&v59 + 1) | (unint64_t)v61)
    {
      if ((v65[25] & 1) == 0 && (v65[24] & 1) != 0 || (v39 & 0xFFFFFFFFFFFFFFFELL) != 2)
        goto LABEL_16;
    }
    else if ((v65[25] & ((v39 & 0xFFFFFFFFFFFFFFFELL) != 2)) != 0)
    {
LABEL_16:
      swift_release();
      return;
    }
    v40 = swift_getObjectType(v45);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a12 + 8))(v40, a12) & 1) == 0)
    {
      v48[0] = *(_OWORD *)v65;
      *(_OWORD *)((char *)v48 + 10) = *(_OWORD *)&v65[10];
      v47[2] = v60;
      v47[3] = v61;
      v47[5] = v63;
      v47[6] = v64;
      v47[4] = v62;
      v47[0] = v58;
      v47[1] = v59;
      v42 = v43;
      v41 = v44;
      v49 = v43;
      v50 = v44;
      sub_49BD8((uint64_t)&v58);
      swift_bridgeObjectRetain(v41);
      PassthroughSubject.send(_:)(v47);
      v51[5] = v63;
      v51[6] = v64;
      v52[0] = *(_OWORD *)v65;
      *(_OWORD *)((char *)v52 + 10) = *(_OWORD *)&v65[10];
      v51[2] = v60;
      v51[3] = v61;
      v51[4] = v62;
      v51[0] = v58;
      v51[1] = v59;
      v53 = v42;
      v54 = v41;
      sub_183044(v51);
    }
    goto LABEL_16;
  }
}

uint64_t sub_1800B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 16, v5);
}

void sub_180154(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_17FDD4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + v8, *(double *)(v3 + v9), *(double *)(v3 + v9 + 8), *(double *)(v3 + v9 + 24), *(_QWORD *)(v3 + v9 + 16), *(_QWORD *)(v3 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 8));
}

Swift::Void __swiftcall LocationHistoryObserver.ignoreNextLocationChange()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 64) = 1;
}

uint64_t sub_1801F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_18021C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(a1, *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152));
}

double sub_180240(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11[7];
  _OWORD v12[2];
  _BYTE v13[24];

  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  if (swift_weakLoadStrong(v5))
  {
    v7 = *(_OWORD *)(a1 + 112);
    v11[6] = *(_OWORD *)(a1 + 96);
    v12[0] = v7;
    *(_OWORD *)((char *)v12 + 10) = *(_OWORD *)(a1 + 122);
    v8 = *(_OWORD *)(a1 + 48);
    v11[2] = *(_OWORD *)(a1 + 32);
    v11[3] = v8;
    v9 = *(_OWORD *)(a1 + 80);
    v11[4] = *(_OWORD *)(a1 + 64);
    v11[5] = v9;
    v10 = *(_OWORD *)(a1 + 16);
    v11[0] = *(_OWORD *)a1;
    v11[1] = v10;
    sub_1802E4(v11, v3, v4);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_1802DC(uint64_t a1)
{
  uint64_t v1;

  return sub_180240(a1, v1);
}

void sub_1802E4(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t ObjectType;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *osloga;
  __int128 v118[10];
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  _BYTE v158[32];
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  _BYTE v168[32];
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  _OWORD v177[3];

  v4 = v3;
  v6 = a1[7];
  v176 = a1[6];
  v177[0] = v6;
  *(_OWORD *)((char *)v177 + 10) = *(__int128 *)((char *)a1 + 122);
  v7 = a1[3];
  v172 = a1[2];
  v173 = v7;
  v8 = a1[5];
  v174 = a1[4];
  v175 = v8;
  v9 = a1[1];
  v170 = *a1;
  v171 = v9;
  if ((*(_BYTE *)(v3 + 64) & 1) != 0)
  {
    sub_49BD8((uint64_t)&v170);
    v10 = sub_49BD8((uint64_t)&v170);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v151 = v14;
      *(_DWORD *)v13 = 136315138;
      v167 = v176;
      *(_OWORD *)v168 = v177[0];
      *(_OWORD *)&v168[10] = *(_OWORD *)((char *)v177 + 10);
      v164 = v173;
      v166 = v175;
      v165 = v174;
      v162 = v171;
      v163 = v172;
      v161 = v170;
      v15 = Location.description.getter();
      v17 = v16;
      *(_QWORD *)&v161 = sub_33524(v15, v16, (uint64_t *)&v151);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, (char *)&v161 + 8, v13 + 4);
      swift_bridgeObjectRelease(v17);
      sub_49900((uint64_t)&v170);
      sub_49900((uint64_t)&v170);
      _os_log_impl(&dword_0, v11, v12, "Ignore next location change; updating start location to given location: %s",
        v13,
        0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      sub_49900((uint64_t)&v170);
      sub_49900((uint64_t)&v170);
    }
    v157 = v176;
    *(_OWORD *)v158 = v177[0];
    *(_OWORD *)&v158[10] = *(_OWORD *)((char *)v177 + 10);
    v153 = v172;
    v154 = v173;
    v155 = v174;
    v156 = v175;
    v151 = v170;
    v152 = v171;
    v32 = v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation;
    v33 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 112);
    v167 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 96);
    *(_OWORD *)v168 = v33;
    v34 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 144);
    *(_OWORD *)&v168[16] = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 128);
    v169 = v34;
    v35 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 32);
    v164 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 48);
    v36 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 80);
    v165 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 64);
    v166 = v36;
    v37 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 16);
    v161 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation);
    v162 = v37;
    v163 = v35;
    v38 = *(_OWORD *)v158;
    *(_OWORD *)(v32 + 96) = v176;
    *(_OWORD *)(v32 + 112) = v38;
    *(_OWORD *)(v32 + 128) = *(_OWORD *)&v158[16];
    v39 = v154;
    *(_OWORD *)(v32 + 32) = v153;
    *(_OWORD *)(v32 + 48) = v39;
    v40 = v156;
    *(_OWORD *)(v32 + 64) = v155;
    *(_OWORD *)(v32 + 80) = v40;
    v41 = v152;
    *(_OWORD *)v32 = v151;
    *(_OWORD *)(v32 + 16) = v41;
    *(_QWORD *)(v32 + 144) = a2;
    *(_QWORD *)(v32 + 152) = a3;
    sub_49BD8((uint64_t)&v170);
    swift_bridgeObjectRetain(a3);
    sub_183044(&v161);
    sub_180E54();
    *(_BYTE *)(v4 + 64) = 0;
  }
  else
  {
    v18 = a1[7];
    v167 = a1[6];
    *(_OWORD *)v168 = v18;
    *(_OWORD *)&v168[10] = *(__int128 *)((char *)a1 + 122);
    v19 = a1[2];
    v164 = a1[3];
    v20 = a1[4];
    v166 = a1[5];
    v165 = v20;
    v21 = *a1;
    v162 = a1[1];
    v163 = v19;
    v161 = v21;
    v22 = v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation;
    v23 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 112);
    v157 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 96);
    *(_OWORD *)v158 = v23;
    *(_OWORD *)&v158[10] = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 122);
    v24 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 48);
    v153 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 32);
    v154 = v24;
    v25 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 80);
    v155 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 64);
    v156 = v25;
    v26 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 16);
    v151 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation);
    v152 = v26;
    v27 = _s8BookEPUB8LocationV2eeoiySbAC_ACtFZ_0((uint64_t)&v161, (uint64_t)&v151);
    if ((v27 & 1) != 0)
    {
      osloga = Logger.logObject.getter(v27);
      v30 = static os_log_type_t.debug.getter(osloga, v28, v29);
      if (os_log_type_enabled(osloga, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_0, osloga, v30, "Received update for our start location: Bailing out", v31, 2u);
        swift_slowDealloc(v31, -1, -1);
      }

    }
    else
    {
      sub_49BD8((uint64_t)&v170);
      v42 = sub_49BD8((uint64_t)&v170);
      v43 = Logger.logObject.getter(v42);
      v46 = static os_log_type_t.debug.getter(v43, v44, v45);
      v115 = a2;
      if (os_log_type_enabled(v43, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(12, -1);
        v48 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v151 = v48;
        *(_DWORD *)v47 = 136315138;
        v167 = v176;
        *(_OWORD *)v168 = v177[0];
        *(_OWORD *)&v168[10] = *(_OWORD *)((char *)v177 + 10);
        v164 = v173;
        v166 = v175;
        v165 = v174;
        v162 = v171;
        v163 = v172;
        v161 = v170;
        v49 = Location.description.getter();
        v51 = v50;
        *(_QWORD *)&v161 = sub_33524(v49, v50, (uint64_t *)&v151);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, (char *)&v161 + 8, v47 + 4);
        swift_bridgeObjectRelease(v51);
        sub_49900((uint64_t)&v170);
        sub_49900((uint64_t)&v170);
        _os_log_impl(&dword_0, v43, v46, "Received new location: %s", v47, 0xCu);
        swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v48, -1, -1);
        swift_slowDealloc(v47, -1, -1);

      }
      else
      {

        sub_49900((uint64_t)&v170);
        sub_49900((uint64_t)&v170);
      }
      sub_49BD8((uint64_t)&v170);
      swift_retain();
      sub_49BD8((uint64_t)&v170);
      v52 = swift_retain();
      v53 = Logger.logObject.getter(v52);
      v56 = static os_log_type_t.debug.getter(v53, v54, v55);
      v57 = &unk_3BE000;
      if (os_log_type_enabled(v53, v56))
      {
        v58 = swift_slowAlloc(22, -1);
        v114 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v151 = v114;
        *(_DWORD *)v58 = 136315394;
        v167 = v176;
        *(_OWORD *)v168 = v177[0];
        *(_OWORD *)&v168[10] = *(_OWORD *)((char *)v177 + 10);
        v164 = v173;
        v166 = v175;
        v165 = v174;
        v162 = v171;
        v163 = v172;
        v161 = v170;
        v59 = Location.description.getter();
        v61 = v60;
        *(_QWORD *)&v161 = sub_33524(v59, v60, (uint64_t *)&v151);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, (char *)&v161 + 8, v58 + 4);
        swift_bridgeObjectRelease(v61);
        sub_49900((uint64_t)&v170);
        sub_49900((uint64_t)&v170);
        *(_WORD *)(v58 + 12) = 2048;
        v62 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_fallbackCounter);
        swift_release();
        *(_QWORD *)&v161 = v62;
        v57 = (_QWORD *)&unk_3BE000;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v161, (char *)&v161 + 8, v58 + 14);
        swift_release();
        _os_log_impl(&dword_0, v53, v56, "Capturing final location: %s - fallbackCounter: %ld", (uint8_t *)v58, 0x16u);
        swift_arrayDestroy(v114, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v114, -1, -1);
        swift_slowDealloc(v58, -1, -1);

      }
      else
      {

        swift_release();
        sub_49900((uint64_t)&v170);
        sub_49900((uint64_t)&v170);
        swift_release();
      }
      v157 = v176;
      *(_OWORD *)v158 = v177[0];
      *(_OWORD *)&v158[10] = *(_OWORD *)((char *)v177 + 10);
      v153 = v172;
      v154 = v173;
      v155 = v174;
      v156 = v175;
      v151 = v170;
      v152 = v171;
      v159 = v115;
      v160 = a3;
      address(of:)(&v151);
      v63 = v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_endLocation;
      sub_17FD58(v4 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_endLocation, (uint64_t)&v161);
      sub_17FD58((uint64_t)&v151, v63);
      sub_49BD8((uint64_t)&v170);
      swift_bridgeObjectRetain(a3);
      sub_182F1C(&v161, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_181BC8);
      v64 = v57[498];
      v65 = *(_QWORD *)(v4 + v64);
      v66 = __OFADD__(v65, 1);
      v67 = v65 + 1;
      if (v66)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v4 + v64) = v67;
        v68 = swift_retain_n(v4);
        v69 = Logger.logObject.getter(v68);
        v72 = static os_log_type_t.debug.getter(v69, v70, v71);
        if (os_log_type_enabled(v69, v72))
        {
          v73 = swift_slowAlloc(22, -1);
          v74 = swift_slowAlloc(64, -1);
          *(_QWORD *)&v129 = v74;
          *(_DWORD *)v73 = 136315394;
          v75 = *(_OWORD *)(v22 + 112);
          v147 = *(_OWORD *)(v22 + 96);
          v148 = v75;
          v76 = *(_OWORD *)(v22 + 144);
          v149 = *(_OWORD *)(v22 + 128);
          v150 = v76;
          v77 = *(_OWORD *)(v22 + 48);
          v143 = *(_OWORD *)(v22 + 32);
          v144 = v77;
          v78 = *(_OWORD *)(v22 + 80);
          v145 = *(_OWORD *)(v22 + 64);
          v146 = v78;
          v79 = *(_OWORD *)(v22 + 16);
          v141 = *(_OWORD *)v22;
          v142 = v79;
          v80 = LocationHistoryEntry.SnapshotLocation.description.getter();
          v82 = v81;
          *(_QWORD *)&v141 = sub_33524(v80, v81, (uint64_t *)&v129);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v141, (char *)&v141 + 8, v73 + 4);
          swift_release_n(v4);
          swift_bridgeObjectRelease(v82);
          *(_WORD *)(v73 + 12) = 2080;
          sub_17FD58(v63, (uint64_t)&v141);
          sub_17FD58((uint64_t)&v141, (uint64_t)&v139);
          sub_182F1C(&v141, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_182F80);
          v83 = sub_319AC(&qword_3BEF80);
          v84 = String.init<A>(describing:)(&v139, v83);
          v86 = v85;
          v139 = sub_33524(v84, v85, (uint64_t *)&v129);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v139, &v140, v73 + 14);
          swift_release_n(v4);
          swift_bridgeObjectRelease(v86);
          _os_log_impl(&dword_0, v69, v72, "Process location with start: %s end: %s", (uint8_t *)v73, 0x16u);
          swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v74, -1, -1);
          swift_slowDealloc(v73, -1, -1);
        }
        else
        {
          swift_release_n(v4);
        }

        sub_17FD58(v63, (uint64_t)&v139);
        sub_17FD58((uint64_t)&v139, (uint64_t)&v141);
        v87 = sub_182F04((uint64_t)&v141);
        if ((_DWORD)v87 == 1)
        {
          v88 = Logger.logObject.getter(v87);
          v89 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v88, v89))
          {
            v90 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v90 = 0;
            _os_log_impl(&dword_0, v88, v89, "Process location finished without a start & end location", v90, 2u);
            swift_slowDealloc(v90, -1, -1);
          }

        }
        else
        {
          v91 = *(_OWORD *)(v22 + 112);
          v92 = *(_OWORD *)(v22 + 80);
          v135 = *(_OWORD *)(v22 + 96);
          v136 = v91;
          v93 = *(_OWORD *)(v22 + 112);
          v94 = *(_OWORD *)(v22 + 144);
          v137 = *(_OWORD *)(v22 + 128);
          v138 = v94;
          v95 = *(_OWORD *)(v22 + 48);
          v96 = *(_OWORD *)(v22 + 16);
          v131 = *(_OWORD *)(v22 + 32);
          v132 = v95;
          v97 = *(_OWORD *)(v22 + 48);
          v98 = *(_OWORD *)(v22 + 80);
          v133 = *(_OWORD *)(v22 + 64);
          v134 = v98;
          v99 = *(_OWORD *)(v22 + 16);
          v129 = *(_OWORD *)v22;
          v130 = v99;
          v125 = v135;
          v126 = v93;
          v100 = *(_OWORD *)(v22 + 144);
          v127 = v137;
          v128 = v100;
          v121 = v131;
          v122 = v97;
          v123 = v133;
          v124 = v92;
          v119 = v129;
          v120 = v96;
          v118[6] = v147;
          v118[7] = v148;
          v118[8] = v149;
          v118[9] = v150;
          v118[2] = v143;
          v118[3] = v144;
          v118[4] = v145;
          v118[5] = v146;
          v118[0] = v141;
          v118[1] = v142;
          sub_182F1C(&v139, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_182F80);
          sub_17EC28(&v129);
          sub_181128(&v119, v118);
          sub_183044(&v129);
          sub_182F1C(&v139, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_181BC8);
        }
        v101 = *(_QWORD *)(v4 + 96);
        ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 88));
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v101 + 16))(&v119, ObjectType, v101);
        v103 = LocationProviding.readingLocationCFI.getter(ObjectType, v101);
        v104 = *(_OWORD *)(v22 + 112);
        v135 = *(_OWORD *)(v22 + 96);
        v136 = v104;
        v105 = *(_OWORD *)(v22 + 144);
        v137 = *(_OWORD *)(v22 + 128);
        v138 = v105;
        v106 = *(_OWORD *)(v22 + 48);
        v131 = *(_OWORD *)(v22 + 32);
        v132 = v106;
        v107 = *(_OWORD *)(v22 + 80);
        v133 = *(_OWORD *)(v22 + 64);
        v134 = v107;
        v108 = *(_OWORD *)(v22 + 16);
        v129 = *(_OWORD *)v22;
        v130 = v108;
        v109 = v126;
        *(_OWORD *)(v22 + 96) = v125;
        *(_OWORD *)(v22 + 112) = v109;
        *(_OWORD *)(v22 + 128) = v127;
        v110 = v122;
        *(_OWORD *)(v22 + 32) = v121;
        *(_OWORD *)(v22 + 48) = v110;
        v111 = v124;
        *(_OWORD *)(v22 + 64) = v123;
        *(_OWORD *)(v22 + 80) = v111;
        v112 = v120;
        *(_OWORD *)v22 = v119;
        *(_OWORD *)(v22 + 16) = v112;
        *(_QWORD *)(v22 + 144) = v103;
        *(_QWORD *)(v22 + 152) = v113;
        sub_183044(&v129);
        sub_180E54();
      }
    }
  }
}

void sub_180E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  NSObject *oslog;
  _OWORD v17[10];
  uint64_t v18;

  v1 = v0;
  v2 = swift_retain_n(v0);
  oslog = Logger.logObject.getter(v2);
  v5 = static os_log_type_t.debug.getter(oslog, v3, v4);
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v18 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 112);
    v17[6] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 96);
    v17[7] = v8;
    v9 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 144);
    v17[8] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 128);
    v17[9] = v9;
    v10 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 48);
    v17[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 32);
    v17[3] = v10;
    v11 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 80);
    v17[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 64);
    v17[5] = v11;
    v12 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 16);
    v17[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation);
    v17[1] = v12;
    v13 = LocationHistoryEntry.SnapshotLocation.description.getter();
    v15 = v14;
    *(_QWORD *)&v17[0] = sub_33524(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v17, (char *)v17 + 8, v6 + 4);
    swift_release_n(v1);
    swift_bridgeObjectRelease(v15);
    _os_log_impl(&dword_0, oslog, v5, "Updated start location: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {
    swift_release_n(v0);

  }
}

uint64_t LocationHistoryObserver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[10];
  _QWORD v10[21];

  swift_release();
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 88));
  v1 = v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_log;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_cancellables));
  v3 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 112);
  v9[6] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 96);
  v9[7] = v3;
  v4 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 144);
  v9[8] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 128);
  v9[9] = v4;
  v5 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 48);
  v9[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 32);
  v9[3] = v5;
  v6 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 80);
  v9[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 64);
  v9[5] = v6;
  v7 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation + 16);
  v9[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_startLocation);
  v9[1] = v7;
  sub_183044(v9);
  sub_17FD58(v0 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_endLocation, (uint64_t)v10);
  sub_182F1C(v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_181BC8);

  return v0;
}

uint64_t LocationHistoryObserver.__deallocating_deinit()
{
  uint64_t v0;

  LocationHistoryObserver.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_181128(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  _DWORD *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _DWORD *v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  os_log_type_t v56;
  uint8_t *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[3];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _OWORD v92[3];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;

  v3 = v2;
  v6 = sub_319AC(&qword_3BF228);
  __chkstk_darwin(v6);
  v74 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for LocationHistoryEntry(0);
  v75 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v76 = (uint64_t)&v71 - v18;
  v19 = a1[5];
  v20 = a1[7];
  v99 = a1[6];
  v100 = v20;
  v21 = a1[9];
  v101 = a1[8];
  v102 = v21;
  v22 = a1[1];
  v23 = a1[3];
  v95 = a1[2];
  v96 = v23;
  v24 = a1[3];
  v25 = a1[5];
  v97 = a1[4];
  v98 = v25;
  v26 = a1[1];
  v93 = *a1;
  v94 = v26;
  v27 = a2[5];
  v28 = a2[7];
  v109 = a2[6];
  v110 = v28;
  v29 = a2[9];
  v111 = a2[8];
  v112 = v29;
  v30 = a2[1];
  v31 = a2[3];
  v105 = a2[2];
  v106 = v31;
  v32 = a2[3];
  v33 = a2[5];
  v107 = a2[4];
  v108 = v33;
  v34 = a2[1];
  v103 = *a2;
  v104 = v34;
  v35 = a1[7];
  v91 = v99;
  v92[0] = v35;
  *(_OWORD *)((char *)v92 + 10) = *(__int128 *)((char *)a1 + 122);
  v87 = v95;
  v88 = v24;
  v89 = v97;
  v90 = v19;
  v85 = v93;
  v86 = v22;
  v36 = a2[7];
  v83 = v109;
  v84[0] = v36;
  *(_OWORD *)((char *)v84 + 10) = *(__int128 *)((char *)a2 + 122);
  v79 = v105;
  v80 = v32;
  v81 = v107;
  v82 = v27;
  v77 = v103;
  v78 = v30;
  sub_49BD8((uint64_t)&v93);
  sub_49BD8((uint64_t)&v103);
  sub_18175C((uint64_t *)&v85, (uint64_t *)&v77);
  v38 = v37;
  sub_49900((uint64_t)&v103);
  sub_49900((uint64_t)&v93);
  v39 = v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_log;
  v40 = swift_retain();
  v73 = v39;
  v41 = Logger.logObject.getter(v40);
  v44 = static os_log_type_t.debug.getter(v41, v42, v43);
  if (os_log_type_enabled(v41, v44))
  {
    v45 = (_DWORD *)swift_slowAlloc(22, -1);
    v72 = v13;
    v46 = v10;
    v47 = v16;
    v48 = v14;
    v49 = v45;
    *v45 = 134218240;
    *(_QWORD *)&v85 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, (char *)&v85 + 8, v45 + 1);
    *((_WORD *)v49 + 6) = 2048;
    *(_QWORD *)&v85 = *(_QWORD *)(v3 + 32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, (char *)&v85 + 8, (char *)v49 + 14);
    swift_release();
    _os_log_impl(&dword_0, v41, v44, "Location settled with delta: %ld. Config Minimum: %ld", (uint8_t *)v49, 0x16u);
    v50 = v49;
    v14 = v48;
    v16 = v47;
    v10 = v46;
    v13 = v72;
    swift_slowDealloc(v50, -1, -1);
  }
  else
  {
    swift_release();
  }

  if (v38 >= *(_QWORD *)(v3 + 32))
  {
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_fallbackCounter) = 0;
    v91 = v99;
    v92[0] = v100;
    v92[1] = v101;
    v92[2] = v102;
    v87 = v95;
    v88 = v96;
    v89 = v97;
    v90 = v98;
    v85 = v93;
    v86 = v94;
    v83 = v109;
    v84[0] = v110;
    v84[1] = v111;
    v84[2] = v112;
    v79 = v105;
    v80 = v106;
    v81 = v107;
    v82 = v108;
    v77 = v103;
    v78 = v104;
    sub_17EC28(&v93);
    v58 = sub_17EC28(&v103);
    v59 = Date.init()(v58);
    UUID.init()(v59);
    v60 = v76;
    sub_17EDC4((uint64_t *)&v85, &v77, (uint64_t)v13, (uint64_t)v10, v76);
    v61 = sub_137328(v60, (uint64_t)v16, type metadata accessor for LocationHistoryEntry);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc(12, -1);
      v65 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v85 = v65;
      v73 = v14;
      *(_DWORD *)v64 = 136315138;
      v66 = LocationHistoryEntry.description.getter();
      v68 = v67;
      *(_QWORD *)&v77 = sub_33524(v66, v67, (uint64_t *)&v85);
      v14 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, (char *)&v77 + 8, v64 + 4);
      swift_bridgeObjectRelease(v68);
      sub_182FC4((uint64_t)v16);
      _os_log_impl(&dword_0, v62, v63, "Publishing new history event: %s", v64, 0xCu);
      swift_arrayDestroy(v65, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v65, -1, -1);
      swift_slowDealloc(v64, -1, -1);

    }
    else
    {

      sub_182FC4((uint64_t)v16);
    }
    v69 = v76;
    v70 = v74;
    sub_137328(v76, v74, type metadata accessor for LocationHistoryEntry);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v70, 0, 1, v14);
    PassthroughSubject.send(_:)(v70);
    sub_52128(v70, &qword_3BF228);
    sub_182FC4(v69);
  }
  else
  {
    v51 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v74, 1, 1, v14);
    PassthroughSubject.send(_:)(v51);
    v52 = sub_52128(v51, &qword_3BF228);
    v53 = Logger.logObject.getter(v52);
    v56 = static os_log_type_t.debug.getter(v53, v54, v55);
    if (os_log_type_enabled(v53, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v57 = 134217984;
      *(_QWORD *)&v85 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, (char *)&v85 + 8, v57 + 4);
      _os_log_impl(&dword_0, v53, v56, "Location delta did not trigger a page change event (offset delta: %ld)", v57, 0xCu);
      swift_slowDealloc(v57, -1, -1);
    }

  }
}

void sub_18175C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30[24];
  char v31[24];

  v3 = v2;
  v4 = *a1;
  v5 = a1[1];
  v7 = *a2;
  v6 = a2[1];
  if (*a1 == *a2)
  {
    v7 = v5 - v6;
    if (!__OFSUB__(v5, v6))
      goto LABEL_10;
    __break(1u);
  }
  v29 = v6;
  v8 = *(_QWORD *)(v2 + 80);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 72));
  v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v10(ObjectType, v8);
  v11 = BookPaginationEntity.document(for:)(v4);
  swift_release();
  if (!v11
    || (v12 = (uint64_t *)(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset),
        swift_beginAccess(v11 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset, v31, 0, 0),
        v13 = *v12,
        v14 = swift_release(),
        ((void (*)(uint64_t, uint64_t, __n128))v10)(ObjectType, v8, v14),
        v15 = BookPaginationEntity.document(for:)(v7),
        swift_release(),
        !v15))
  {
    v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB23LocationHistoryObserver_fallbackCounter);
    if ((v7 & 0x8000000000000000) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
  v16 = (uint64_t *)(v15 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset);
  swift_beginAccess(v15 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_startingPageOffset, v30, 0, 0);
  v17 = *v16;
  swift_release();
  v18 = v13 + v5;
  if (__OFADD__(v13, v5))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v19 = v17 + v29;
  if (__OFADD__(v17, v29))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = v18 - v19;
  if (__OFSUB__(v18, v19))
  {
LABEL_23:
    __break(1u);
    return;
  }
LABEL_10:
  if ((v7 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_13:
  v20 = __OFSUB__(0, v7);
  v7 = -v7;
  if (v20)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_14:
  v22 = *(_QWORD *)(v3 + 72);
  v21 = *(_QWORD *)(v3 + 80);
  v23 = swift_getObjectType(v22);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v23, v21);
  v26 = v25;
  v27 = swift_getObjectType(v24);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 120))(v27, v26);
  swift_unknownObjectRelease(v24);
  if (!v28)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v7 == 0x8000000000000000 && v28 == -1)
    goto LABEL_19;
}

void sub_181934(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(a1);
    if (v3)
    {
LABEL_3:
      sub_319AC(&qword_3BF218);
      v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
      v27 = a1;
      if (!v2)
        goto LABEL_4;
LABEL_11:
      if (a1 < 0)
        v7 = a1;
      else
        v7 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(a1);
      if (!v5)
        return;
      goto LABEL_15;
    }
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (v3)
      goto LABEL_3;
  }
  v4 = &_swiftEmptySetSingleton;
  v27 = a1;
  if (v2)
    goto LABEL_11;
LABEL_4:
  v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v5)
    return;
LABEL_15:
  v8 = 0;
  v9 = (char *)(v4 + 7);
  v26 = v5;
  while ((v27 & 0xC000000000000001) != 0)
  {
    v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v27);
    v12 = __OFADD__(v8++, 1);
    if (v12)
      goto LABEL_32;
LABEL_24:
    v28 = v10;
    v30 = v10;
    v13 = v4[5];
    v14 = type metadata accessor for AnyCancellable(0, v11);
    v15 = sub_34284((unint64_t *)&unk_3B8F00, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v13, v14, v15);
    v17 = -1 << *((_BYTE *)v4 + 32);
    v18 = v16 & ~v17;
    v19 = v18 >> 6;
    v20 = *(_QWORD *)&v9[8 * (v18 >> 6)];
    v21 = 1 << v18;
    if (((1 << v18) & v20) != 0)
    {
      v22 = ~v17;
      v23 = sub_34284(&qword_3BF220, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
      do
      {
        v29 = *(_QWORD *)(v4[6] + 8 * v18);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(&v29, &v30, v14, v23) & 1) != 0)
        {
          swift_release();
          v5 = v26;
          goto LABEL_17;
        }
        v18 = (v18 + 1) & v22;
        v19 = v18 >> 6;
        v20 = *(_QWORD *)&v9[8 * (v18 >> 6)];
        v21 = 1 << v18;
      }
      while ((v20 & (1 << v18)) != 0);
      v5 = v26;
    }
    *(_QWORD *)&v9[8 * v19] = v21 | v20;
    *(_QWORD *)(v4[6] + 8 * v18) = v28;
    v24 = v4[2];
    v12 = __OFADD__(v24, 1);
    v25 = v24 + 1;
    if (v12)
      goto LABEL_33;
    v4[2] = v25;
LABEL_17:
    if (v8 == v5)
      return;
  }
  if (v8 >= *(_QWORD *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8)))
    goto LABEL_34;
  v10 = swift_retain();
  v12 = __OFADD__(v8++, 1);
  if (!v12)
    goto LABEL_24;
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
}

uint64_t sub_181BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t result;

  result = a20;
  if (a20)
  {
    swift_bridgeObjectRelease(a20);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a7);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for LocationHistoryEntry(uint64_t a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = (char *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v40 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v40;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v7 = a2[7];
    v39 = a2[6];
    *(_QWORD *)(a1 + 48) = v39;
    *(_QWORD *)(a1 + 56) = v7;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
    v8 = *((_OWORD *)a2 + 6);
    v9 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)((char *)a2 + 121);
    *(_OWORD *)(a1 + 96) = v8;
    *(_OWORD *)(a1 + 112) = v9;
    *(_BYTE *)(a1 + 137) = *((_BYTE *)a2 + 137);
    v10 = a2[19];
    *(_QWORD *)(a1 + 144) = a2[18];
    *(_QWORD *)(a1 + 152) = v10;
    *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
    v11 = a2[23];
    *(_QWORD *)(a1 + 176) = a2[22];
    *(_QWORD *)(a1 + 184) = v11;
    *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
    v13 = a2[26];
    v12 = a2[27];
    *(_QWORD *)(a1 + 208) = v13;
    *(_QWORD *)(a1 + 216) = v12;
    *(_OWORD *)(a1 + 233) = *(_OWORD *)((char *)a2 + 233);
    *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
    *(_OWORD *)(a1 + 281) = *(_OWORD *)((char *)a2 + 281);
    v14 = *((_OWORD *)a2 + 17);
    *(_OWORD *)(a1 + 256) = *((_OWORD *)a2 + 16);
    *(_OWORD *)(a1 + 272) = v14;
    *(_BYTE *)(a1 + 297) = *((_BYTE *)a2 + 297);
    v15 = a2[39];
    v16 = a3[6];
    v38 = a1 + v16;
    v17 = (uint64_t)a2 + v16;
    *(_QWORD *)(a1 + 304) = a2[38];
    *(_QWORD *)(a1 + 312) = v15;
    v18 = type metadata accessor for Date(0);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain(v40);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
    v20 = swift_bridgeObjectRetain(v15);
    v19(v38, v17, v18, v20);
    v21 = (void (*)(char *, uint64_t, uint64_t))v19;
    v22 = a3[7];
    v23 = &v4[v22];
    v24 = (uint64_t)a2 + v22;
    v25 = type metadata accessor for UUID(0);
    v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    v27 = a3[8];
    v28 = &v4[v27];
    v29 = (uint64_t)a2 + v27;
    v26(&v4[v27], v29, v25);
    v30 = type metadata accessor for HistoryEntity(0);
    v31 = *(int *)(v30 + 20);
    v32 = &v28[v31];
    v33 = v29 + v31;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    LOBYTE(v26) = *(_BYTE *)(v33 + 16);
    sub_1396D0(*(_QWORD *)v33, v35, (char)v26);
    *(_QWORD *)v32 = v34;
    *((_QWORD *)v32 + 1) = v35;
    v32[16] = (char)v26;
    v21(&v28[*(int *)(v30 + 24)], v29 + *(int *)(v30 + 24), v18);
  }
  return v4;
}

uint64_t destroy for LocationHistoryEntry(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t);
  char *v9;
  uint64_t v10;
  void (*v12)(char *, uint64_t);

  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  swift_bridgeObjectRelease(a1[19]);
  swift_bridgeObjectRelease(a1[23]);
  swift_bridgeObjectRelease(a1[26]);
  swift_bridgeObjectRelease(a1[39]);
  v4 = (char *)a1 + a2[6];
  v5 = type metadata accessor for Date(0);
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v12(v4, v5);
  v6 = (char *)a1 + a2[7];
  v7 = type metadata accessor for UUID(0);
  v8 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = (char *)a1 + a2[8];
  v8(v9, v7);
  v10 = type metadata accessor for HistoryEntity(0);
  sub_1396C0(*(_QWORD *)&v9[*(int *)(v10 + 20)], *(_QWORD *)&v9[*(int *)(v10 + 20) + 8], v9[*(int *)(v10 + 20) + 16]);
  return ((uint64_t (*)(char *, uint64_t))v12)(&v9[*(int *)(v10 + 24)], v5);
}

uint64_t initializeWithCopy for LocationHistoryEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v37;
  uint64_t v38;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v38 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v38;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  v37 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v37;
  *(_QWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  v8 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v8;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v9;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  v11 = *(_QWORD *)(a2 + 208);
  v10 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v11;
  *(_QWORD *)(a1 + 216) = v10;
  *(_OWORD *)(a1 + 233) = *(_OWORD *)(a2 + 233);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
  v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v12;
  *(_BYTE *)(a1 + 297) = *(_BYTE *)(a2 + 297);
  v13 = *(_QWORD *)(a2 + 312);
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v13;
  v17 = type metadata accessor for Date(0);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v17 - 8) + 16);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v11);
  v19 = swift_bridgeObjectRetain(v13);
  v18(v15, v16, v17, v19);
  v20 = (void (*)(uint64_t, uint64_t, uint64_t))v18;
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for UUID(0);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v25(v22, v23, v24);
  v26 = a3[8];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v25(a1 + v26, v28, v24);
  v29 = type metadata accessor for HistoryEntity(0);
  v30 = *(int *)(v29 + 20);
  v31 = v27 + v30;
  v32 = v28 + v30;
  v33 = *(_QWORD *)v32;
  v34 = *(_QWORD *)(v32 + 8);
  LOBYTE(v9) = *(_BYTE *)(v32 + 16);
  sub_1396D0(*(_QWORD *)v32, v34, v9);
  *(_QWORD *)v31 = v33;
  *(_QWORD *)(v31 + 8) = v34;
  *(_BYTE *)(v31 + 16) = v9;
  v20(v27 + *(int *)(v29 + 24), v28 + *(int *)(v29 + 24), v17);
  return a1;
}

uint64_t assignWithCopy for LocationHistoryEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 64) = v10;
  v11 = *(_OWORD *)(a2 + 96);
  v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 112) = v12;
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v13 = *(_QWORD *)(a2 + 152);
  v14 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v15 = *(_QWORD *)(a2 + 184);
  v16 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v17 = *(_QWORD *)(a2 + 208);
  v18 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 208) = v17;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v18);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  v19 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 233) = *(_OWORD *)(a2 + 233);
  *(_OWORD *)(a1 + 224) = v19;
  v20 = *(_OWORD *)(a2 + 256);
  v21 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
  *(_OWORD *)(a1 + 256) = v20;
  *(_OWORD *)(a1 + 272) = v21;
  *(_BYTE *)(a1 + 297) = *(_BYTE *)(a2 + 297);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  v22 = *(_QWORD *)(a2 + 312);
  v23 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 312) = v22;
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRelease(v23);
  v24 = a3[6];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for Date(0);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24);
  v28(v25, v26, v27);
  v29 = a3[7];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = type metadata accessor for UUID(0);
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 24);
  v33(v30, v31, v32);
  v34 = a3[8];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v33(a1 + v34, v36, v32);
  v37 = type metadata accessor for HistoryEntity(0);
  v38 = *(int *)(v37 + 20);
  v39 = v35 + v38;
  v40 = v36 + v38;
  v41 = *(_QWORD *)v40;
  v42 = *(_QWORD *)(v40 + 8);
  LOBYTE(v33) = *(_BYTE *)(v40 + 16);
  sub_1396D0(*(_QWORD *)v40, v42, (char)v33);
  v43 = *(_QWORD *)v39;
  v44 = *(_QWORD *)(v39 + 8);
  v45 = *(_BYTE *)(v39 + 16);
  *(_QWORD *)v39 = v41;
  *(_QWORD *)(v39 + 8) = v42;
  *(_BYTE *)(v39 + 16) = (_BYTE)v33;
  sub_1396C0(v43, v44, v45);
  v28(v35 + *(int *)(v37 + 24), v36 + *(int *)(v37 + 24), v27);
  return a1;
}

char *initializeWithTake for LocationHistoryEntry(char *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v6 = a2[7];
  *((_OWORD *)a1 + 6) = a2[6];
  *((_OWORD *)a1 + 7) = v6;
  v7 = a2[9];
  *((_OWORD *)a1 + 8) = a2[8];
  *((_OWORD *)a1 + 9) = v7;
  v8 = a2[3];
  *((_OWORD *)a1 + 2) = a2[2];
  *((_OWORD *)a1 + 3) = v8;
  v9 = a2[5];
  *((_OWORD *)a1 + 4) = a2[4];
  *((_OWORD *)a1 + 5) = v9;
  v10 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v10;
  v11 = a2[17];
  *((_OWORD *)a1 + 16) = a2[16];
  *((_OWORD *)a1 + 17) = v11;
  v12 = a2[19];
  *((_OWORD *)a1 + 18) = a2[18];
  *((_OWORD *)a1 + 19) = v12;
  v13 = a2[13];
  *((_OWORD *)a1 + 12) = a2[12];
  *((_OWORD *)a1 + 13) = v13;
  v14 = a2[15];
  *((_OWORD *)a1 + 14) = a2[14];
  *((_OWORD *)a1 + 15) = v14;
  v15 = a2[11];
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = (char *)a2 + v16;
  *((_OWORD *)a1 + 10) = a2[10];
  *((_OWORD *)a1 + 11) = v15;
  v19 = type metadata accessor for Date(0);
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for UUID(0);
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v26 = a3[8];
  v27 = &a1[v26];
  v28 = (char *)a2 + v26;
  v25(&a1[v26], v28, v24);
  v29 = type metadata accessor for HistoryEntity(0);
  v30 = *(int *)(v29 + 20);
  v31 = &v27[v30];
  v32 = &v28[v30];
  *(_OWORD *)v31 = *(_OWORD *)v32;
  v31[16] = v32[16];
  v20(&v27[*(int *)(v29 + 24)], &v28[*(int *)(v29 + 24)], v19);
  return a1;
}

uint64_t assignWithTake for LocationHistoryEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  v11 = *(_QWORD *)(a2 + 152);
  v12 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  swift_bridgeObjectRelease(v12);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  v13 = *(_QWORD *)(a2 + 184);
  v14 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v13;
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v15 = *(_QWORD *)(a2 + 208);
  v16 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v15;
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 233) = *(_OWORD *)(a2 + 233);
  v17 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v17;
  *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
  *(_BYTE *)(a1 + 297) = *(_BYTE *)(a2 + 297);
  v18 = *(_QWORD *)(a2 + 312);
  v19 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v18;
  swift_bridgeObjectRelease(v19);
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = type metadata accessor for Date(0);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40);
  v24(v21, v22, v23);
  v25 = a3[7];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = type metadata accessor for UUID(0);
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40);
  v29(v26, v27, v28);
  v30 = a3[8];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v29(a1 + v30, v32, v28);
  v33 = type metadata accessor for HistoryEntity(0);
  v34 = *(int *)(v33 + 20);
  v35 = v31 + v34;
  v36 = v32 + v34;
  v37 = *(_BYTE *)(v36 + 16);
  v38 = *(_QWORD *)v35;
  v39 = *(_QWORD *)(v35 + 8);
  v40 = *(_BYTE *)(v35 + 16);
  *(_OWORD *)v35 = *(_OWORD *)v36;
  *(_BYTE *)(v35 + 16) = v37;
  sub_1396C0(v38, v39, v40);
  v24(v31 + *(int *)(v33 + 24), v32 + *(int *)(v33 + 24), v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationHistoryEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1826F8);
}

uint64_t sub_1826F8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 152);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = type metadata accessor for UUID(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = type metadata accessor for HistoryEntity(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for LocationHistoryEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1827C8);
}

uint64_t sub_1827C8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 152) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = type metadata accessor for UUID(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = type metadata accessor for HistoryEntity(0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[8];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_182888(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v6[0] = &unk_2EF718;
  v6[1] = &unk_2EF718;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for HistoryEntity(319);
      if (v5 <= 0x3F)
      {
        v6[4] = *(_QWORD *)(result - 8) + 64;
        swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
        return 0;
      }
    }
  }
  return result;
}

uint64_t destroy for LocationHistoryEntry.SnapshotLocation(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[6]);
  return swift_bridgeObjectRelease(a1[19]);
}

uint64_t initializeWithCopy for LocationHistoryEntry.SnapshotLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  v8 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v8;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v8);
  return a1;
}

uint64_t assignWithCopy for LocationHistoryEntry.SnapshotLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 64) = v8;
  v9 = *(_OWORD *)(a2 + 96);
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v10;
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v11 = *(_QWORD *)(a2 + 152);
  v12 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  return a1;
}

__n128 initializeWithTake for LocationHistoryEntry.SnapshotLocation(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for LocationHistoryEntry.SnapshotLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  v9 = *(_QWORD *)(a2 + 152);
  v10 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v9;
  swift_bridgeObjectRelease(v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationHistoryEntry.SnapshotLocation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 152);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationHistoryEntry.SnapshotLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 152) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationHistoryEntry.SnapshotLocation()
{
  return &type metadata for LocationHistoryEntry.SnapshotLocation;
}

ValueMetadata *type metadata accessor for LocationHistoryConfiguration()
{
  return &type metadata for LocationHistoryConfiguration;
}

ValueMetadata *type metadata accessor for LocationHistoryConfiguration.Defaults()
{
  return &type metadata for LocationHistoryConfiguration.Defaults;
}

uint64_t sub_182C64()
{
  return type metadata accessor for LocationHistoryObserver(0);
}

uint64_t type metadata accessor for LocationHistoryObserver(uint64_t a1)
{
  return sub_3E7A8(a1, qword_3BF098, (uint64_t)&nominal type descriptor for LocationHistoryObserver);
}

uint64_t sub_182C80(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = &unk_2EF7E0;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = &unk_2EF7F8;
  v4[4] = &unk_2EF810;
  v4[5] = &unk_2EF810;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(result - 8) + 64;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = &unk_2EF718;
    v4[9] = &unk_2EF828;
    v4[10] = &unk_2EF840;
    v4[11] = (char *)&value witness table for Builtin.Int64 + 64;
    return swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
  }
  return result;
}

uint64_t method lookup function for LocationHistoryObserver(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for LocationHistoryObserver);
}

uint64_t dispatch thunk of LocationHistoryObserver.__allocating_init(configuration:locationProviding:paginating:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

Swift::Int sub_182D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[9];

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_319AC(&qword_3BD990);
    v3 = static _SetStorage.allocate(capacity:)(v1);
    v4 = 0;
    v5 = v3 + 56;
    v27 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v27 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      Hasher.init(_seed:)(v28, *(_QWORD *)(v3 + 40));
      swift_bridgeObjectRetain(v7);
      String.hash(into:)(v28, v8, v7);
      result = Hasher._finalize()();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = v16[1];
        v18 = *v16 == v8 && v17 == v7;
        if (v18 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(*v16, v17, v8, v7, 0), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease(v7);
          goto LABEL_4;
        }
        v19 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v19;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v20 = (_QWORD *)(v15 + 16 * v11);
          v21 = v20[1];
          if (*v20 != v8 || v21 != v7)
          {
            result = _stringCompareWithSmolCheck(_:_:expecting:)(*v20, v21, v8, v7, 0);
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v23 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v23 = v8;
      v23[1] = v7;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v26;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_182F04(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 152);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_182F1C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19]);
  return a1;
}

uint64_t sub_182F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t result;

  if (a20)
  {
    swift_bridgeObjectRetain(a7);
    swift_bridgeObjectRetain(a20);
    return swift_bridgeObjectRetain(a4);
  }
  return result;
}

uint64_t sub_182FC4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LocationHistoryEntry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_183000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HistoryEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_183044(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[3];
  v3 = a1[6];
  swift_bridgeObjectRelease(a1[19]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return a1;
}

void sub_18308C(char *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  char v9;

  v3 = objc_msgSend(v1, "languageSuffix");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

    sub_183760(v5, v7, &v9);
    v8 = v9;
    if (v9 == 26)
      v8 = 0;
  }
  else
  {
    v8 = 0;
  }
  *a1 = v8;
}

BookEPUB::BookFontTable_optional __swiftcall BookFontTable.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  char *v3;
  uint64_t v4;
  BookEPUB::BookFontTable_optional result;
  char v6;
  char v7;

  object = rawValue._object;
  v3 = v1;
  v4 = _findStringSwitchCaseWithCache(cases:string:cache:)(&off_378B80, rawValue._countAndFlagsBits, rawValue._object, &unk_3B5928);
  result.value = swift_bridgeObjectRelease(object);
  v6 = 0;
  v7 = 8;
  switch(v4)
  {
    case 0:
      goto LABEL_10;
    case 1:
      v6 = 1;
      goto LABEL_10;
    case 2:
      v6 = 2;
      goto LABEL_10;
    case 3:
      v6 = 3;
      goto LABEL_10;
    case 4:
      v6 = 4;
      goto LABEL_10;
    case 5:
      v6 = 5;
      goto LABEL_10;
    case 6:
      v6 = 6;
      goto LABEL_10;
    case 7:
      v6 = 7;
LABEL_10:
      v7 = v6;
      break;
    case 8:
      break;
    case 9:
      v7 = 9;
      break;
    case 10:
      v7 = 10;
      break;
    case 11:
      v7 = 11;
      break;
    case 12:
      v7 = 12;
      break;
    case 13:
      v7 = 13;
      break;
    case 14:
      v7 = 14;
      break;
    case 15:
      v7 = 15;
      break;
    case 16:
      v7 = 16;
      break;
    case 17:
      v7 = 17;
      break;
    case 18:
      v7 = 18;
      break;
    case 19:
      v7 = 19;
      break;
    case 20:
      v7 = 20;
      break;
    case 21:
      v7 = 21;
      break;
    case 22:
      v7 = 22;
      break;
    case 23:
      v7 = 23;
      break;
    case 24:
      v7 = 24;
      break;
    case 25:
      v7 = 25;
      break;
    default:
      v7 = 26;
      break;
  }
  *v3 = v7;
  return result;
}

uint64_t BookFontTable.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)())((char *)sub_183274 + 4 * byte_2EF872[*v0]))();
}

uint64_t sub_183274()
{
  return 28001;
}

uint64_t sub_183280()
{
  return 29281;
}

uint64_t sub_18328C()
{
  return 28258;
}

uint64_t sub_183298()
{
  return 28514;
}

uint64_t sub_1832A4()
{
  return 7497827;
}

uint64_t sub_1832B4()
{
  return 30055;
}

uint64_t sub_1832C0()
{
  return 25960;
}

uint64_t sub_1832CC()
{
  return 26984;
}

uint64_t sub_1832D8()
{
  return 31080;
}

uint64_t sub_1832E4()
{
  return 30057;
}

uint64_t sub_1832F0()
{
  return 24938;
}

uint64_t sub_1832FC()
{
  return 28011;
}

uint64_t sub_183308()
{
  return 28267;
}

uint64_t sub_183314()
{
  return 28523;
}

uint64_t sub_183320()
{
  return 28524;
}

uint64_t sub_18332C()
{
  return 27757;
}

uint64_t sub_183338()
{
  return 29295;
}

uint64_t sub_183344()
{
  return 24944;
}

uint64_t sub_183350()
{
  return 26995;
}

uint64_t sub_18335C()
{
  return 24948;
}

uint64_t sub_183368()
{
  return 25972;
}

uint64_t sub_183374()
{
  return 26740;
}

uint64_t sub_183380()
{
  return 0x6E635F687ALL;
}

uint64_t sub_183394()
{
  return 0x6B685F687ALL;
}

uint64_t sub_1833A8()
{
  return 0x77745F687ALL;
}

uint64_t sub_1833BC()
{
  return sub_3F6A4();
}

Swift::Int sub_1833C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  v0 = BookFontTable.rawValue.getter();
  v2 = v1;
  String.hash(into:)(v4, v0, v1);
  swift_bridgeObjectRelease(v2);
  return Hasher._finalize()();
}

double sub_18342C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v2 = BookFontTable.rawValue.getter();
  v4 = v3;
  String.hash(into:)(a1, v2, v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

Swift::Int sub_18347C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  v1 = BookFontTable.rawValue.getter();
  v3 = v2;
  String.hash(into:)(v5, v1, v2);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

BookEPUB::BookFontTable_optional sub_1834DC(Swift::String *a1)
{
  return BookFontTable.init(rawValue:)(*a1);
}

uint64_t sub_1834E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BookFontTable.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t BookFontTable.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = 0x746C7561666564;
  v1 = BookFontTable.rawValue.getter();
  v3 = v2;
  if (v1 || v2 != 0xE000000000000000)
  {
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v2, 0, 0xE000000000000000, 0);
    swift_bridgeObjectRelease(v3);
    if ((v4 & 1) == 0)
      return BookFontTable.rawValue.getter();
  }
  else
  {
    swift_bridgeObjectRelease(0xE000000000000000);
  }
  return v0;
}

unint64_t sub_1835BC()
{
  unint64_t result;

  result = qword_3BF230;
  if (!qword_3BF230)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BookFontTable, &type metadata for BookFontTable);
    atomic_store(result, (unint64_t *)&qword_3BF230);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BookFontTable(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for BookFontTable(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_1836E0 + 4 * byte_2EF891[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_183714 + 4 * byte_2EF88C[v4]))();
}

uint64_t sub_183714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18371C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x183724);
  return result;
}

uint64_t sub_183730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x183738);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_18373C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_183744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookFontTable()
{
  return &type metadata for BookFontTable;
}

void sub_183760(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  Swift::String v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  Swift::String v18;
  char v19;
  char v20;

  v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (v6 && (v7._countAndFlagsBits = 45, v7._object = (void *)0xE100000000000000, !String.hasPrefix(_:)(v7)))
  {
    swift_bridgeObjectRelease(a2);
    v19 = 26;
  }
  else
  {
    v8 = sub_5C514(1uLL, a1, a2);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    swift_bridgeObjectRelease(a2);
    v15 = static String._fromSubstring(_:)(v8, v10, v12, v14);
    v17 = v16;
    swift_bridgeObjectRelease(v14);
    v18._countAndFlagsBits = v15;
    v18._object = v17;
    BookFontTable.init(rawValue:)(v18);
    v19 = v20;
  }
  *a3 = v19;
}

id UITapGestureRecognizer.coordinateLocation.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  id result;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  result = objc_msgSend(v1, "view");
  v5 = result;
  if (result)
  {
    result = objc_msgSend(v2, "locationInView:", result);
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  return result;
}

double BookContentDataManager.bookProviderService.getter()
{
  uint64_t v0;
  double result;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  *(_QWORD *)&result = swift_unknownObjectRetain(*(_QWORD *)(v0 + 16)).n128_u64[0];
  return result;
}

uint64_t BookContentDataManager.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t BookContentDataManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 48, 7);
}

double sub_18393C()
{
  uint64_t *v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 16, v3, 0, 0);
  *(_QWORD *)&result = swift_unknownObjectRetain(*(_QWORD *)(v1 + 16)).n128_u64[0];
  return result;
}

double sub_183980()
{
  uint64_t *v0;
  uint64_t v1;
  double result;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 32, v3, 0, 0);
  *(_QWORD *)&result = swift_unknownObjectRetain(*(_QWORD *)(v1 + 32)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for BookContentDataManager()
{
  return objc_opt_self(_TtC8BookEPUB22BookContentDataManager);
}

uint64_t method lookup function for BookContentDataManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookContentDataManager);
}

void BookContentLayoutController.currentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  _BYTE v29[400];

  v1 = v0;
  v2 = sub_319AC(&qword_3BF2E0);
  inited = swift_initStackObject(v2, v29);
  *(_OWORD *)(inited + 16) = xmmword_2EFA60;
  strcpy((char *)v28, "loaderCount");
  HIDWORD(v28[1]) = -352321536;
  AnyHashable.init<A>(_:)(v28, &type metadata for String, &protocol witness table for String);
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 320) + 16);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 72) = v4;
  strcpy((char *)v28, "loadersState");
  BYTE5(v28[1]) = 0;
  HIWORD(v28[1]) = -5120;
  AnyHashable.init<A>(_:)(v28, &type metadata for String, &protocol witness table for String);
  v5 = *(_QWORD *)(v0 + 320);
  v28[0] = _swiftEmptyArrayStorage;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = type metadata accessor for ContentLoader(0);
    swift_bridgeObjectRetain_n(v5, 2);
    v8 = 32;
    do
    {
      v10 = *(_QWORD *)(v5 + v8);
      v11 = swift_dynamicCastClass(v10, v7);
      if (v11)
      {
        v12 = v11;
        swift_unknownObjectRetain(v10);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
        v15 = *(_QWORD *)((char *)&dword_10 + (v28[0] & 0xFFFFFFFFFFFFFF8));
        v14 = *(_QWORD *)((char *)&dword_18 + (v28[0] & 0xFFFFFFFFFFFFFF8));
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v12);
        specialized Array._endMutation()(v9);
      }
      v8 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v5);
    v16 = v28[0];
  }
  else
  {
    swift_bridgeObjectRetain(v5);
    v16 = (uint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v5);
  v27 = v1;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v26 = v16;
    else
      v26 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v16);
    if (v17)
      goto LABEL_12;
  }
  else
  {
    v17 = *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8));
    if (v17)
    {
LABEL_12:
      v28[0] = _swiftEmptyArrayStorage;
      sub_F539C(0, v17 & ~(v17 >> 63), 0);
      if (v17 < 0)
      {
        __break(1u);
        JUMPOUT(0x183F10);
      }
      v18 = 0;
      v19 = (_QWORD *)v28[0];
      do
      {
        if ((v16 & 0xC000000000000001) != 0)
          v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
        else
          v20 = *(id *)(v16 + 8 * v18 + 32);
        v21 = v20;
        v22 = ContentLoader.currentState.getter();
        if (!v22)
          v22 = sub_38C58((uint64_t)_swiftEmptyArrayStorage);
        v23 = v22;

        v28[0] = v19;
        v25 = v19[2];
        v24 = v19[3];
        if (v25 >= v24 >> 1)
        {
          sub_F539C(v24 > 1, v25 + 1, 1);
          v19 = (_QWORD *)v28[0];
        }
        ++v18;
        v19[2] = v25 + 1;
        v19[v25 + 4] = v23;
      }
      while (v17 != v18);
      swift_bridgeObjectRelease(v16);
LABEL_28:
      *(_QWORD *)(inited + 168) = sub_319AC(&qword_3BE440);
      *(_QWORD *)(inited + 144) = v19;
      v28[0] = 0xD000000000000013;
      v28[1] = 0x80000000002CE920;
      AnyHashable.init<A>(_:)(v28, &type metadata for String, &protocol witness table for String);
      __asm { BR              X10 }
    }
  }
  swift_bridgeObjectRelease(v16);
  v19 = _swiftEmptyArrayStorage;
  goto LABEL_28;
}

unint64_t ContentLoader.currentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];
  uint64_t v17;
  unint64_t v18;
  _BYTE v19[24];
  _BYTE v20[320];

  v1 = sub_319AC(&qword_3BF2E0);
  inited = swift_initStackObject(v1, v20);
  *(_OWORD *)(inited + 16) = xmmword_2E6930;
  v17 = 25705;
  v18 = 0xE200000000000000;
  AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
  v3 = v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_loaderID;
  v4 = type metadata accessor for UUID(0);
  *(_QWORD *)(inited + 96) = v4;
  v5 = sub_9B1C0((_QWORD *)(inited + 72));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v5, v3, v4);
  v17 = 0x6574617473;
  v18 = 0xE500000000000000;
  AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 168) = &type metadata for ContentLoaderState;
  v6 = (_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_state);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_state, v19, 0, 0);
  *(_BYTE *)(inited + 144) = *v6;
  v17 = 0x48746E65746E6F63;
  v18 = 0xEF7765695674736FLL;
  AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
  v7 = v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB13ContentLoader_contentViewHost, v16, 0, 0);
  sub_1843A8(v7, (uint64_t)&v17);
  v8 = sub_319AC(&qword_3B89A0);
  v9 = String.init<A>(describing:)(&v17, v8);
  *(_QWORD *)(inited + 240) = &type metadata for String;
  *(_QWORD *)(inited + 216) = v9;
  *(_QWORD *)(inited + 224) = v10;
  v17 = 0x56746E65746E6F63;
  v18 = 0xEB00000000776569;
  AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
  KeyPath = swift_getKeyPath(&unk_2EFA70);
  swift_getKeyPath(&unk_2EFA98);
  static Published.subscript.getter(&v17, v0, KeyPath);
  swift_release();
  swift_release();
  v12 = sub_319AC(&qword_3B8A30);
  v13 = String.init<A>(describing:)(&v17, v12);
  *(_QWORD *)(inited + 312) = &type metadata for String;
  *(_QWORD *)(inited + 288) = v13;
  *(_QWORD *)(inited + 296) = v14;
  return sub_38C58(inited);
}

unint64_t ContentLoaderViewReusePool.currentState.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD v9[3];
  _QWORD v10[3];
  _WORD v11[12];
  _BYTE v12[248];

  v1 = sub_319AC(&qword_3BF2E0);
  inited = swift_initStackObject(v1, v12);
  *(_OWORD *)(inited + 16) = xmmword_2E6940;
  strcpy((char *)v11, "contentViews");
  HIBYTE(v11[6]) = 0;
  v11[7] = -5120;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  swift_beginAccess(v0 + 2, v11, 0, 0);
  v3 = *(_QWORD *)(v0[2] + 16);
  *(_QWORD *)(inited + 96) = &type metadata for Int;
  *(_QWORD *)(inited + 72) = v3;
  v10[0] = 0xD000000000000016;
  v10[1] = 0x80000000002CA510;
  AnyHashable.init<A>(_:)(v10, &type metadata for String, &protocol witness table for String);
  swift_beginAccess(v0 + 3, v10, 0, 0);
  v4 = *(_QWORD *)(v0[3] + 16);
  *(_QWORD *)(inited + 168) = &type metadata for Int;
  *(_QWORD *)(inited + 144) = v4;
  v9[0] = 0xD000000000000017;
  v9[1] = 0x80000000002CA530;
  AnyHashable.init<A>(_:)(v9, &type metadata for String, &protocol witness table for String);
  swift_beginAccess(v0 + 4, v9, 0, 0);
  v5 = v0[4];
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v8 = v5;
    else
      v8 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFF8));
  }
  *(_QWORD *)(inited + 240) = &type metadata for Int;
  *(_QWORD *)(inited + 216) = v6;
  return sub_38C58(inited);
}

void sub_184348()
{
  BookContentLayoutController.currentState.getter();
}

unint64_t sub_184368()
{
  return ContentLoader.currentState.getter();
}

unint64_t sub_184388()
{
  return ContentLoaderViewReusePool.currentState.getter();
}

uint64_t sub_1843A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3B89A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContentLoaderDocument.bookType.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ContentLoaderDocument.bookType.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t ContentLoaderDocument.pageProgressDirection.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t ContentLoaderDocument.pageProgressDirection.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result & 1;
  return result;
}

uint64_t (*ContentLoaderDocument.pageProgressDirection.modify())()
{
  return address(of:);
}

uint64_t ContentLoaderDocument.manifestID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v2 + 48));
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t ContentLoaderDocument.bookSpineIndexInPackage.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t (*ContentLoaderDocument.bookSpineIndexInPackage.modify())()
{
  return address(of:);
}

uint64_t ContentLoaderDocument.ordinal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t ContentLoaderDocument.ordinal.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = result;
  return result;
}

uint64_t ContentLoaderDocument.linearDocumentIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t ContentLoaderDocument.linearDocumentIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*ContentLoaderDocument.linearDocumentIndex.modify())()
{
  return address(of:);
}

uint64_t ContentLoaderDocument.pageCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t ContentLoaderDocument.pageCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

void *ContentLoaderDocument.protocolCacheItem.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 88);
  v2 = v1;
  return v1;
}

void ContentLoaderDocument.protocolCacheItem.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
}

uint64_t ContentLoaderDocument.documentEntity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_49F1C(v1 + 96, a1);
}

uint64_t ContentLoaderDocument.documentEntity.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + 96);
  sub_34488(v3);
  return sub_3F1CC(a1, (uint64_t)v3);
}

uint64_t (*ContentLoaderDocument.documentEntity.modify())()
{
  return address(of:);
}

void ContentLoaderDocument.url.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  Swift::String v16;
  void *v17;
  uint64_t v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[4];
  v25 = v1[3];
  v26 = v7;
  v8 = qword_3B57B0;
  swift_bridgeObjectRetain(v7);
  if (v8 != -1)
    swift_once(&qword_3B57B0, sub_145A0C);
  v9 = type metadata accessor for CharacterSet(0);
  v10 = sub_555F0(v9, (uint64_t)qword_3CF118);
  v11 = sub_5C170();
  v12 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)(v10, &type metadata for String, v11);
  v14 = v13;
  swift_bridgeObjectRelease(v26);
  if (v14)
  {
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("ibooks"));
    v26 = v15;
    v16._countAndFlagsBits = 3092282;
    v16._object = (void *)0xE300000000000000;
    String.append(_:)(v16);
    v18 = *v2;
    v17 = (void *)v2[1];
    swift_bridgeObjectRetain(v17);
    v19._countAndFlagsBits = v18;
    v19._object = v17;
    String.append(_:)(v19);
    swift_bridgeObjectRelease(v17);
    v20._countAndFlagsBits = 47;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    v21._countAndFlagsBits = v12;
    v21._object = v14;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(v14);
    v22 = v26;
    URL.init(string:)(v25, v26);
    swift_bridgeObjectRelease(v22);
    v23 = type metadata accessor for URL(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v6, 1, v23) != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(a1, v6, v23);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t ContentLoaderDocument.init<A>(book:document:pageCount:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)(_QWORD, _QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  void *v26;
  id v27;
  _QWORD *v28;
  uint64_t v30;
  _BYTE v31[40];
  _QWORD v32[2];
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  _QWORD v44[5];

  v43 = 0;
  v12 = a1[3];
  v13 = a1[4];
  sub_472D0(a1, v12);
  v32[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  v32[1] = v14;
  v35 = a5[1](a4, a5);
  v36 = v15;
  v37 = a5[4](a4, a5);
  v38 = v16;
  v17 = a1[3];
  v18 = a1[4];
  sub_472D0(a1, v17);
  v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 120))(v17, v18);
  v40 = a5[2](a4, a5);
  v41 = a5[3](a4, a5);
  v19 = a1[3];
  v20 = a1[4];
  sub_472D0(a1, v19);
  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 104))(v19, v20);
  v21 = a1[3];
  v22 = a1[4];
  sub_472D0(a1, v21);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 128))(v21, v22) & 1;
  sub_49F1C((uint64_t)a1, (uint64_t)v31);
  v23 = sub_319AC(&qword_3BE1D0);
  v24 = type metadata accessor for BookEntity(0);
  if ((swift_dynamicCast(&v30, v31, v23, v24, 6) & 1) != 0)
  {
    v25 = (void **)(v30 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem);
    swift_beginAccess(v30 + OBJC_IVAR____TtC8BookEPUB10BookEntity_protocolCacheItem, v31, 0, 0);
    v26 = *v25;
    v27 = v26;
    swift_release();

    v43 = v26;
  }
  v42 = a3;
  v44[3] = a4;
  v44[4] = a5;
  v28 = sub_9B1C0(v44);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v28, a2, a4);
  sub_184938((uint64_t)v32, a6);
  sub_34488(a1);
  return sub_18496C((uint64_t)v32);
}

uint64_t sub_184938(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ContentLoaderDocument(a2, a1);
  return a2;
}

uint64_t sub_18496C(uint64_t a1)
{
  destroy for ContentLoaderDocument(a1);
  return a1;
}

uint64_t destroy for ContentLoaderDocument(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));

  return sub_34488((_QWORD *)(a1 + 96));
}

uint64_t initializeWithCopy for ContentLoaderDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v6 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = a2 + 96;
  v8 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v11 = v6;
  v10(a1 + 96, v7, v9);
  return a1;
}

uint64_t assignWithCopy for ContentLoaderDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v10 = *(void **)(a1 + 88);
  v11 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = v11;

  sub_1019A8((_QWORD *)(a1 + 96), (_QWORD *)(a2 + 96));
  return a1;
}

__n128 initializeWithTake for ContentLoaderDocument(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ContentLoaderDocument(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v10 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

  sub_34488((_QWORD *)(a1 + 96));
  v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentLoaderDocument(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentLoaderDocument(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentLoaderDocument()
{
  return &type metadata for ContentLoaderDocument;
}

unint64_t PaginatingService.currentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _BYTE v24[104];
  uint64_t v25;
  unint64_t v26;
  _WORD v27[12];
  _BYTE v28[248];

  v1 = v0;
  v2 = sub_319AC(&qword_3BF2E0);
  inited = swift_initStackObject(v2, v28);
  *(_OWORD *)(inited + 16) = xmmword_2E6940;
  strcpy((char *)v27, "contentLayout");
  v27[7] = -4864;
  AnyHashable.init<A>(_:)(v27, &type metadata for String, &protocol witness table for String);
  swift_beginAccess(v0 + 32, v27, 0, 0);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  ObjectType = swift_getObjectType(v4);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v5 + 192);
  v8 = swift_unknownObjectRetain(v4);
  v9 = v7(ObjectType, v5, v8);
  v11 = v10;
  swift_unknownObjectRelease(v4);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v11;
  v25 = 0x6F4664656C696166;
  v26 = 0xEB0000000073746ELL;
  AnyHashable.init<A>(_:)(&v25, &type metadata for String, &protocol witness table for String);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB17PaginatingService_failedFonts);
  v25 = v12;
  swift_bridgeObjectRetain(v12);
  v13 = sub_319AC(&qword_3BF2E8);
  v14 = sub_184F64();
  v15 = sub_5C170();
  v16 = Sequence<>.joined(separator:)(8236, 0xE200000000000000, v13, v14, v15);
  v18 = v17;
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(inited + 168) = &type metadata for String;
  *(_QWORD *)(inited + 144) = v16;
  *(_QWORD *)(inited + 152) = v18;
  v25 = 0x6974616E69676170;
  v26 = 0xEF65756575516E6FLL;
  AnyHashable.init<A>(_:)(&v25, &type metadata for String, &protocol witness table for String);
  v19 = swift_initStackObject(v2, v24);
  *(_OWORD *)(v19 + 16) = xmmword_2E5F80;
  v25 = 0x6574617473;
  v26 = 0xE500000000000000;
  AnyHashable.init<A>(_:)(&v25, &type metadata for String, &protocol witness table for String);
  v20 = sub_31A9C();
  *(_QWORD *)(v19 + 96) = &type metadata for String;
  *(_QWORD *)(v19 + 72) = v20;
  *(_QWORD *)(v19 + 80) = v21;
  v22 = sub_38C58(v19);
  *(_QWORD *)(inited + 240) = sub_319AC(&qword_3BBEE0);
  *(_QWORD *)(inited + 216) = v22;
  return sub_38C58(inited);
}

unint64_t sub_184F64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3BF2F0;
  if (!qword_3BF2F0)
  {
    v1 = sub_31A38(&qword_3BF2E8);
    result = swift_getWitnessTable(&protocol conformance descriptor for Set<A>, v1);
    atomic_store(result, (unint64_t *)&qword_3BF2F0);
  }
  return result;
}

unint64_t PaginationQueue.currentState.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  _BYTE v6[104];

  v0 = sub_319AC(&qword_3BF2E0);
  inited = swift_initStackObject(v0, v6);
  *(_OWORD *)(inited + 16) = xmmword_2E5F80;
  v5[0] = 0x6574617473;
  v5[1] = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v5, &type metadata for String, &protocol witness table for String);
  v2 = sub_31A9C();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = v2;
  *(_QWORD *)(inited + 80) = v3;
  return sub_38C58(inited);
}

unint64_t sub_185044()
{
  return PaginatingService.currentState.getter();
}

unint64_t sub_185064()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  _BYTE v6[104];

  v0 = sub_319AC(&qword_3BF2E0);
  inited = swift_initStackObject(v0, v6);
  *(_OWORD *)(inited + 16) = xmmword_2E5F80;
  v5[0] = 0x6574617473;
  v5[1] = 0xE500000000000000;
  AnyHashable.init<A>(_:)(v5, &type metadata for String, &protocol witness table for String);
  v2 = sub_31A9C();
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = v2;
  *(_QWORD *)(inited + 80) = v3;
  return sub_38C58(inited);
}

void sub_1850FC(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_18514C()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0xD000000000000015, 0x80000000002C58B0);
  swift_bridgeObjectRelease(0x80000000002C58B0);
  return Hasher._finalize()();
}

void sub_1851B8(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_185204()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6B72616D6B6F6F62, 0xE800000000000000);
  swift_bridgeObjectRelease(0xE800000000000000);
  return Hasher._finalize()();
}

void sub_1852A8(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_1852F8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0xD000000000000018, 0x80000000002C5B10);
  swift_bridgeObjectRelease(0x80000000002C5B10);
  return Hasher._finalize()();
}

Swift::Int sub_18538C(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  if (a1)
  {
    v2 = 0xD000000000000013;
    if (a1 == 1)
      v3 = 0x80000000002C5BC0;
    else
      v3 = 0x80000000002C5BE0;
  }
  else
  {
    v3 = 0xEF6E6F6974636172;
    v2 = 0x65746E4972657375;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_185440(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_185480(uint64_t a1)
{
  String.hash(into:)(a1, 0xD000000000000018, 0x80000000002C5B10);
  return swift_bridgeObjectRelease(0x80000000002C5B10);
}

Swift::Int sub_185500(uint64_t a1, char a2)
{
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, a1);
  if (a2)
  {
    v3 = 0xD000000000000013;
    if (a2 == 1)
      v4 = 0x80000000002C5BC0;
    else
      v4 = 0x80000000002C5BE0;
  }
  else
  {
    v4 = 0xEF6E6F6974636172;
    v3 = 0x65746E4972657375;
  }
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_1855B0(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_1855F8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6B72616D6B6F6F62, 0xE800000000000000);
  swift_bridgeObjectRelease(0xE800000000000000);
  return Hasher._finalize()();
}

void sub_18569C(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_1856E8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0xD000000000000015, 0x80000000002C58B0);
  swift_bridgeObjectRelease(0x80000000002C58B0);
  return Hasher._finalize()();
}

void sub_185754(uint64_t a1, char a2)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X10 }
}

Swift::Int sub_1857A0()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0xD000000000000018, 0x80000000002C5B10);
  swift_bridgeObjectRelease(0x80000000002C5B10);
  return Hasher._finalize()();
}

Swift::Void __swiftcall LocationControlling.moveTo(cfi:)(Swift::String cfi)
{
  uint64_t v1;

  (*(void (**)(uint64_t, void *, double))(v1 + 88))(cfi._countAndFlagsBits, cfi._object, 0.0);
}

uint64_t LocationMovement.direction.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

void LocationMovement.hash(into:)()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  Swift::UInt v2;

  v1 = v0[1];
  v2 = *((_QWORD *)v0 + 1);
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
}

Swift::Int LocationMovement.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  Swift::UInt v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v1 = *v0;
  v2 = v0[1];
  v3 = *((_QWORD *)v0 + 1);
  Hasher.init(_seed:)(v5, 0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

Swift::Int sub_185908(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  Swift::UInt v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = *((_QWORD *)v1 + 1);
  Hasher.init(_seed:)(v6, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_185970()
{
  word_3BF2F8 = 1;
  qword_3BF300 = 1;
}

uint64_t static LocationMovement.spreadBackward.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  if (qword_3B5830 != -1)
    result = swift_once(&qword_3B5830, sub_185970);
  v2 = HIBYTE(word_3BF2F8);
  v3 = qword_3BF300;
  *(_BYTE *)a1 = word_3BF2F8;
  *(_BYTE *)(a1 + 1) = v2;
  *(_QWORD *)(a1 + 8) = v3;
  return result;
}

void sub_1859EC()
{
  word_3BF308 = 0;
  qword_3BF310 = 1;
}

uint64_t static LocationMovement.spreadForward.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  if (qword_3B5838 != -1)
    result = swift_once(&qword_3B5838, sub_1859EC);
  v2 = HIBYTE(word_3BF308);
  v3 = qword_3BF310;
  *(_BYTE *)a1 = word_3BF308;
  *(_BYTE *)(a1 + 1) = v2;
  *(_QWORD *)(a1 + 8) = v3;
  return result;
}

void sub_185A68()
{
  word_3BF318 = 257;
  qword_3BF320 = 1;
}

uint64_t static LocationMovement.chapterBackward.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  if (qword_3B5840 != -1)
    result = swift_once(&qword_3B5840, sub_185A68);
  v2 = HIBYTE(word_3BF318);
  v3 = qword_3BF320;
  *(_BYTE *)a1 = word_3BF318;
  *(_BYTE *)(a1 + 1) = v2;
  *(_QWORD *)(a1 + 8) = v3;
  return result;
}

void sub_185AE8()
{
  word_3BF328 = 256;
  qword_3BF330 = 1;
}

uint64_t static LocationMovement.chapterForward.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  if (qword_3B5848 != -1)
    result = swift_once(&qword_3B5848, sub_185AE8);
  v2 = HIBYTE(word_3BF328);
  v3 = qword_3BF330;
  *(_BYTE *)a1 = word_3BF328;
  *(_BYTE *)(a1 + 1) = v2;
  *(_QWORD *)(a1 + 8) = v3;
  return result;
}

void sub_185B68()
{
  word_3BF338 = 257;
  qword_3BF340 = 0;
}

uint64_t static LocationMovement.chapterStart.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  if (qword_3B5850 != -1)
    result = swift_once(&qword_3B5850, sub_185B68);
  v2 = HIBYTE(word_3BF338);
  v3 = qword_3BF340;
  *(_BYTE *)a1 = word_3BF338;
  *(_BYTE *)(a1 + 1) = v2;
  *(_QWORD *)(a1 + 8) = v3;
  return result;
}

void sub_185BE4()
{
  word_3BF348 = 256;
  qword_3BF350 = 0;
}

uint64_t static LocationMovement.chapterEnd.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  if (qword_3B5858 != -1)
    result = swift_once(&qword_3B5858, sub_185BE4);
  v2 = HIBYTE(word_3BF348);
  v3 = qword_3BF350;
  *(_BYTE *)a1 = word_3BF348;
  *(_BYTE *)(a1 + 1) = v2;
  *(_QWORD *)(a1 + 8) = v3;
  return result;
}

uint64_t UpdateReason.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x65746E4972657375;
}

BookEPUB::UpdateReason_optional __swiftcall UpdateReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  BookEPUB::UpdateReason_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_379B90, v3);
  result.value = swift_bridgeObjectRelease(object);
  v7 = 3;
  if (v5 < 3)
    v7 = v5;
  *v4 = v7;
  return result;
}

uint64_t sub_185D28(char *a1, unsigned __int8 *a2)
{
  return sub_40200(*a1, *a2);
}

Swift::Int sub_185D34()
{
  char *v0;

  return sub_18538C(*v0);
}

uint64_t sub_185D3C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = 0x80000000002C5BC0;
  if (*v1 != 1)
    v2 = 0x80000000002C5BE0;
  if (*v1)
    v3 = 0xD000000000000013;
  else
    v3 = 0x65746E4972657375;
  if (*v1)
    v4 = v2;
  else
    v4 = 0xEF6E6F6974636172;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v4);
}

