Swift::Int sub_185DCC(uint64_t a1)
{
  char *v1;

  return sub_185500(a1, *v1);
}

BookEPUB::UpdateReason_optional sub_185DD4(Swift::String *a1)
{
  return UpdateReason.init(rawValue:)(*a1);
}

void sub_185DE0(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;

  v2 = *v1;
  v3 = 0xEF6E6F6974636172;
  v4 = 0x80000000002C5BC0;
  if (v2 != 1)
    v4 = 0x80000000002C5BE0;
  v5 = v2 == 0;
  if (*v1)
    v6 = 0xD000000000000013;
  else
    v6 = 0x65746E4972657375;
  if (!v5)
    v3 = v4;
  *a1 = v6;
  a1[1] = v3;
}

Swift::Bool __swiftcall LocationControlling.canMove(_:)(BookEPUB::LocationMovement a1)
{
  char v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE v6[8];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_BYTE *)(*(_QWORD *)&a1.direction + 1);
  v2 = *(_QWORD *)(*(_QWORD *)&a1.direction + 8);
  v6[0] = **(_BYTE **)&a1.direction;
  v6[1] = v1;
  v7 = v2;
  v3 = v6;
  LocationControlling.destination(for:)(a1);
  v4 = v8;
  if (v8)
    sub_5B838(v8, v9, v10);
  return v4 != 0;
}

BookEPUB::SpreadPaginationEntity_optional __swiftcall LocationControlling.destination(for:)(BookEPUB::LocationMovement a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int count;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[3];
  _QWORD v12[2];
  uint64_t v13;
  _BYTE v14[8];
  uint64_t v15;
  BookEPUB::SpreadPaginationEntity_optional result;

  v2 = v1;
  count = a1.count;
  v4 = *(_BYTE *)(*(_QWORD *)&a1.direction + 1);
  v5 = *(_QWORD *)(*(_QWORD *)&a1.direction + 8);
  v14[0] = **(_BYTE **)&a1.direction;
  v14[1] = v4;
  v15 = v5;
  (*(void (**)(_QWORD *__return_ptr, Swift::Int))(v1 + 8))(v12, a1.count);
  v6 = v12[0];
  v7 = v13;
  v11[0] = v12[0];
  v11[1] = v12[1];
  v11[2] = v13;
  (*(void (**)(_BYTE *, _QWORD *, Swift::Int, uint64_t))(v2 + 24))(v14, v11, count, v2);
  swift_bridgeObjectRelease(v7);
  v8 = (void *)swift_bridgeObjectRelease(v6);
  result.value.configuration._object = v10;
  result.value.configuration._countAndFlagsBits = v9;
  result.value.columns._rawValue = v8;
  return result;
}

unint64_t LocationMovement.description.getter()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *v0;
  v2 = v0[1];
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (v1)
    v3 = 0x647261776B636162;
  else
    v3 = 0x64726177726F66;
  if (v1)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE700000000000000;
  v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v4);
  v6._countAndFlagsBits = 0x203A746E756F6320;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 0x7574696E67616D20;
  v9._object = (void *)0xEC000000203A6564;
  String.append(_:)(v9);
  if (v2)
    v10 = 0x72657470616863;
  else
    v10 = 0x646165727073;
  if (v2)
    v11 = 0xE700000000000000;
  else
    v11 = 0xE600000000000000;
  v12 = v11;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease(v11);
  return 0xD00000000000001DLL;
}

uint64_t LocationMovement.Direction.description.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x647261776B636162;
  else
    return 0x64726177726F66;
}

uint64_t sub_186100()
{
  _BYTE *v0;

  if (*v0)
    return 0x647261776B636162;
  else
    return 0x64726177726F66;
}

uint64_t LocationMovement.Magnitude.description.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x72657470616863;
  else
    return 0x646165727073;
}

uint64_t sub_186170()
{
  _BYTE *v0;

  if (*v0)
    return 0x72657470616863;
  else
    return 0x646165727073;
}

BOOL _s8BookEPUB16LocationMovementV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  _BOOL8 result;

  result = 0;
  if (*a1 == *a2 && ((a1[1] ^ a2[1]) & 1) == 0)
    return *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1);
  return result;
}

unint64_t sub_1861E8()
{
  unint64_t result;

  result = qword_3BF358;
  if (!qword_3BF358)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationMovement.Direction, &type metadata for LocationMovement.Direction);
    atomic_store(result, (unint64_t *)&qword_3BF358);
  }
  return result;
}

unint64_t sub_186230()
{
  unint64_t result;

  result = qword_3BF360;
  if (!qword_3BF360)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationMovement.Magnitude, &type metadata for LocationMovement.Magnitude);
    atomic_store(result, (unint64_t *)&qword_3BF360);
  }
  return result;
}

unint64_t sub_186278()
{
  unint64_t result;

  result = qword_3BF368;
  if (!qword_3BF368)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationMovement, &type metadata for LocationMovement);
    atomic_store(result, (unint64_t *)&qword_3BF368);
  }
  return result;
}

unint64_t sub_1862C0()
{
  unint64_t result;

  result = qword_3BF370;
  if (!qword_3BF370)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UpdateReason, &type metadata for UpdateReason);
    atomic_store(result, (unint64_t *)&qword_3BF370);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationMovement(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationMovement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationMovement()
{
  return &type metadata for LocationMovement;
}

ValueMetadata *type metadata accessor for LocationMovement.Direction()
{
  return &type metadata for LocationMovement.Direction;
}

uint64_t _s8BookEPUB16LocationMovementV9DirectionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1863F8 + 4 * byte_2EFB9B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18642C + 4 * byte_2EFB96[v4]))();
}

uint64_t sub_18642C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_186434(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18643CLL);
  return result;
}

uint64_t sub_186448(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x186450);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_186454(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18645C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationMovement.Magnitude()
{
  return &type metadata for LocationMovement.Magnitude;
}

uint64_t storeEnumTagSinglePayload for UpdateReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1864C4 + 4 * byte_2EFBA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1864F8 + 4 * byte_2EFBA0[v4]))();
}

uint64_t sub_1864F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_186500(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x186508);
  return result;
}

uint64_t sub_186514(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18651CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_186520(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_186528(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateReason()
{
  return &type metadata for UpdateReason;
}

uint64_t dispatch thunk of LocationControlling.moveTo(href:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of LocationControlling.moveTo(cfi:surroundingContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of LocationControlling.requestedLocationFulfilled(documentOrdinal:resultingPageOffset:foundRect:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a6 + 128))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of LocationControlling.storeResumeLocationOnChange<A>(publisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

unint64_t sub_186584()
{
  unint64_t result;

  result = qword_3BF390;
  if (!qword_3BF390)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PaginationCacheError, &type metadata for PaginationCacheError);
    atomic_store(result, (unint64_t *)&qword_3BF390);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PaginationCacheError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_186614 + 4 * byte_2EFEA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_186648 + 4 * asc_2EFEA0[v4]))();
}

uint64_t sub_186648(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_186650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x186658);
  return result;
}

uint64_t sub_186664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18666CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_186670(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_186678(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaginationCacheError()
{
  return &type metadata for PaginationCacheError;
}

uint64_t sub_186694()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3BF378);
  sub_555F0(v0, (uint64_t)qword_3BF378);
  if (qword_3B56B8 != -1)
    swift_once(&qword_3B56B8, sub_5EFF4);
  return Logger.init(_:)((id)qword_3CEEF8);
}

uint64_t (*sub_186714(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_186758()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_unknownObjectRelease(v0[3]);
  v1 = (char *)v0 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_log;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_86ABC(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData + 8), *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData + 16));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_1867D8()
{
  return type metadata accessor for PaginationCacheProvider(0);
}

uint64_t type metadata accessor for PaginationCacheProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_3BF3D8;
  if (!qword_3BF3D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PaginationCacheProvider);
  return result;
}

uint64_t sub_18681C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = &unk_2EFFF8;
  v4[1] = &unk_2EFFF8;
  v4[2] = &unk_2F0010;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    v4[4] = &unk_2F0028;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaginationCacheProvider.CacheResult()
{
  return &type metadata for PaginationCacheProvider.CacheResult;
}

uint64_t storeEnumTagSinglePayload for PaginationCacheProvider.StorageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_186914 + 4 * byte_2EFEAF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_186948 + 4 * byte_2EFEAA[v4]))();
}

uint64_t sub_186948(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_186950(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x186958);
  return result;
}

uint64_t sub_186964(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18696CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_186970(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_186978(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaginationCacheProvider.StorageType()
{
  return &type metadata for PaginationCacheProvider.StorageType;
}

unint64_t sub_186998()
{
  unint64_t result;

  result = qword_3BF4B8;
  if (!qword_3BF4B8)
  {
    result = swift_getWitnessTable(&unk_2F0098, &type metadata for PaginationCacheProvider.StorageType);
    atomic_store(result, &qword_3BF4B8);
  }
  return result;
}

void sub_1869DC(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  void (*v7)(_QWORD);
  uint64_t v8;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t ObjectType;
  _QWORD *v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, unint64_t, double (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  uint64_t v55;
  os_log_type_t v56;
  void (*v57)(_QWORD);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v7 = a4;
  if ((*(_BYTE *)(v5 + 17) & 1) != 0)
  {
    v62 = 1;
    v63 = 1;
    a4(&v62);
    return;
  }
  v8 = v5;
  v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData);
  swift_beginAccess(v5 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData, &v62, 1, 0);
  v13 = v12[1];
  if (!v13)
    goto LABEL_19;
  v14 = v7;
  v15 = *v12;
  v16 = v12[2];
  v17 = *v12 == a2 && v13 == a3;
  if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v12[1], a2, a3, 0) & 1) == 0
    || !*(_QWORD *)(v16 + 16)
    || (v18 = sub_3B7F8(a1), (v19 & 1) == 0))
  {
    v28 = v12[1];
    v7 = v14;
    if (v28)
    {
      v29 = *v12;
      v30 = v12[2];
      sub_188008(*v12, v12[1], v30);
      swift_bridgeObjectRetain(v28);
      sub_86ABC(v29, v28, v30);
      if (v29 == a2 && v28 == a3)
      {
        swift_bridgeObjectRelease(v28);
      }
      else
      {
        v32 = _stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, v29, v28, 0);
        swift_bridgeObjectRelease(v28);
        if ((v32 & 1) == 0)
          goto LABEL_19;
      }
LABEL_27:
      v50 = *(_QWORD *)(v8 + 32);
      ObjectType = swift_getObjectType(*(_QWORD *)(v8 + 24));
      v52 = (_QWORD *)swift_allocObject(&unk_385D70, 64);
      v52[2] = v8;
      v52[3] = a1;
      v52[4] = a2;
      v52[5] = a3;
      v52[6] = v7;
      v52[7] = a5;
      v53 = *(_QWORD *)(v50 + 8);
      v54 = *(void (**)(uint64_t, uint64_t, unint64_t, double (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(v53 + 8);
      swift_bridgeObjectRetain(a3);
      swift_retain();
      swift_retain();
      v54(a1, a2, a3, sub_189338, v52, ObjectType, v53);
      swift_release();
      return;
    }
LABEL_19:
    swift_bridgeObjectRetain_n(a3, 2);
    v33 = swift_retain_n(v8);
    v34 = Logger.logObject.getter(v33);
    v37 = static os_log_type_t.debug.getter(v34, v35, v36);
    if (os_log_type_enabled(v34, v37))
    {
      v56 = v37;
      v57 = v7;
      v38 = swift_slowAlloc(22, -1);
      v55 = swift_slowAlloc(64, -1);
      v61 = v55;
      *(_DWORD *)v38 = 136315394;
      swift_bridgeObjectRetain(a3);
      v59 = sub_33524(a2, a3, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v38 + 4);
      swift_bridgeObjectRelease_n(a3, 3);
      *(_WORD *)(v38 + 12) = 2080;
      v39 = v12[1];
      v58 = a5;
      if (v39)
      {
        v40 = v12[2];
        v41 = *v12;
        sub_188008(*v12, v39, v40);
        swift_bridgeObjectRetain(v39);
        sub_86ABC(v41, v39, v40);
      }
      else
      {
        v41 = 0;
      }
      v59 = v41;
      v60 = v39;
      v42 = sub_319AC((uint64_t *)&unk_3BBB20);
      v43 = String.init<A>(describing:)(&v59, v42);
      v45 = v44;
      v59 = sub_33524(v43, v44, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v38 + 14);
      swift_release_n(v8);
      swift_bridgeObjectRelease(v45);
      _os_log_impl(&dword_0, v34, v56, "#paginationCache: Resetting recentData key != recentData.key; %s != %s",
        (uint8_t *)v38,
        0x16u);
      swift_arrayDestroy(v55, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v55, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      v7 = v57;
      a5 = v58;
    }
    else
    {
      swift_release_n(v8);
      swift_bridgeObjectRelease_n(a3, 2);

    }
    v46 = sub_3D0F8(_swiftEmptyArrayStorage);
    v47 = *v12;
    v48 = v12[1];
    v49 = v12[2];
    *v12 = a2;
    v12[1] = a3;
    v12[2] = v46;
    swift_bridgeObjectRetain(a3);
    sub_86ABC(v47, v48, v49);
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v18);
  sub_188008(v15, v13, v16);
  swift_retain();
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v13);
  v21 = swift_bridgeObjectRetain_n(a3, 2);
  v22 = Logger.logObject.getter(v21);
  v25 = static os_log_type_t.debug.getter(v22, v23, v24);
  if (os_log_type_enabled(v22, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v59 = v27;
    *(_DWORD *)v26 = 136315138;
    swift_bridgeObjectRetain(a3);
    v61 = sub_33524(a2, a3, &v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v26 + 4);
    swift_bridgeObjectRelease_n(a3, 3);
    _os_log_impl(&dword_0, v22, v25, "#paginationCache: found recentData for key:%s", v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a3, 2);
  }

  v59 = v20;
  LOBYTE(v60) = 0;
  swift_retain();
  v14(&v59);
  swift_release_n(v20);
}

double sub_186F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;

  v14 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)a1;
  v18 = *(_BYTE *)(a1 + 8);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
  type metadata accessor for MainActor(0);
  sub_1399E4(v17, v18);
  swift_retain();
  swift_bridgeObjectRetain(a5);
  v20 = swift_retain();
  v21 = static MainActor.shared.getter(v20);
  v22 = swift_allocObject(&unk_385D98, 96);
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v22 + 32) = v17;
  *(_BYTE *)(v22 + 40) = v18;
  *(_QWORD *)(v22 + 48) = a2;
  *(_QWORD *)(v22 + 56) = a3;
  *(_QWORD *)(v22 + 64) = a4;
  *(_QWORD *)(v22 + 72) = a5;
  *(_QWORD *)(v22 + 80) = a6;
  *(_QWORD *)(v22 + 88) = a7;
  sub_67B40((uint64_t)v16, (uint64_t)&unk_3BF4C8, v22);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1870B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 96) = v14;
  *(_OWORD *)(v8 + 80) = v13;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  *(_BYTE *)(v8 + 112) = a5;
  *(_QWORD *)(v8 + 48) = a4;
  *(_QWORD *)(v8 + 56) = a6;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 104) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_187138, v10, v11);
}

uint64_t sub_187138()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  __n128 v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t *);
  char v46;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v1 = *(_BYTE *)(v0 + 112);
  swift_release();
  v2 = *(_QWORD *)(v0 + 80);
  if ((v1 & 1) != 0)
  {
    v14 = swift_bridgeObjectRetain_n(v2, 2);
    v15 = Logger.logObject.getter(v14);
    v18 = static os_log_type_t.debug.getter(v15, v16, v17);
    v19 = os_log_type_enabled(v15, v18);
    v20 = *(_QWORD *)(v0 + 80);
    if (v19)
    {
      v22 = *(_QWORD *)(v0 + 64);
      v21 = *(_QWORD *)(v0 + 72);
      v23 = swift_slowAlloc(22, -1);
      v24 = swift_slowAlloc(32, -1);
      v49 = v24;
      *(_DWORD *)v23 = 134218242;
      *(_QWORD *)(v0 + 16) = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v23 + 4);
      *(_WORD *)(v23 + 12) = 2080;
      swift_bridgeObjectRetain(v20);
      *(_QWORD *)(v0 + 16) = sub_33524(v21, v20, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v23 + 14);
      swift_bridgeObjectRelease_n(v20, 3);
      _os_log_impl(&dword_0, v15, v18, "#paginationCache: no data ordinal:%ld for:%s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v20, 2);
    }
    v35 = sub_186714(v0 + 16);
    if (*(_QWORD *)(v34 + 8))
    {
      v37 = v34;
      v38 = sub_3B7F8(*(_QWORD *)(v0 + 64));
      if ((v39 & 1) != 0)
      {
        v40 = v38;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v37 + 16));
        v42 = *(_QWORD *)(v37 + 16);
        v49 = v42;
        *(_QWORD *)(v37 + 16) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_F221C();
          v42 = v49;
        }
        sub_18853C(v40, v42);
        v43 = *(_QWORD *)(v37 + 16);
        *(_QWORD *)(v37 + 16) = v42;
        swift_bridgeObjectRelease(v43);
        v36 = swift_release();
      }
    }
    ((void (*)(uint64_t, _QWORD, __n128))v35)(v0 + 16, 0, v36);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 48);
    swift_bridgeObjectRetain_n(v2, 2);
    v4 = sub_1399E4(v3, 0);
    v5 = Logger.logObject.getter(v4);
    v8 = static os_log_type_t.debug.getter(v5, v6, v7);
    v9 = os_log_type_enabled(v5, v8);
    v10 = *(_QWORD *)(v0 + 80);
    if (v9)
    {
      v11 = *(_QWORD *)(v0 + 64);
      v48 = *(_QWORD *)(v0 + 72);
      v12 = swift_slowAlloc(22, -1);
      v13 = swift_slowAlloc(32, -1);
      v49 = v13;
      *(_DWORD *)v12 = 134218242;
      *(_QWORD *)(v0 + 16) = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 4);
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain(v10);
      *(_QWORD *)(v0 + 16) = sub_33524(v48, v10, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 14);
      swift_bridgeObjectRelease_n(v10, 3);
      _os_log_impl(&dword_0, v5, v8, "#paginationCache: received data ordinal:%ld for:%s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v10, 2);
    }
    v26 = sub_186714(v0 + 16);
    if (*(_QWORD *)(v25 + 8))
    {
      v27 = v25;
      v28 = *(_QWORD *)(v0 + 64);
      v29 = *(_QWORD *)(v0 + 48);
      swift_retain();
      v30 = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v27 + 16));
      v49 = *(_QWORD *)(v27 + 16);
      *(_QWORD *)(v27 + 16) = 0x8000000000000000;
      sub_17D7E8(v3, v28, v30);
      v31 = *(_QWORD *)(v27 + 16);
      *(_QWORD *)(v27 + 16) = v49;
      v32 = swift_bridgeObjectRelease(v31);
      ((void (*)(uint64_t, _QWORD, __n128))v26)(v0 + 16, 0, v32);
      v33 = v29;
    }
    else
    {
      v44 = *(_QWORD *)(v0 + 48);
      ((void (*)(uint64_t, _QWORD))v26)(v0 + 16, 0);
      v33 = v44;
    }
    sub_1052DC(v33, 0);
  }
  v45 = *(void (**)(uint64_t *))(v0 + 88);
  v46 = *(_BYTE *)(v0 + 112);
  v49 = *(_QWORD *)(v0 + 48);
  v50 = v46 & 1;
  v45(&v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_187584(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD);
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[16];
  _BYTE v51[24];

  v4 = v3;
  v8 = (char *)(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_paginationFailed, v51, 0, 0);
  v9 = *v8;
  v10 = swift_retain();
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRetain_n(a3, 2);
    v16 = swift_retain();
    v17 = Logger.logObject.getter(v16);
    v20 = static os_log_type_t.debug.getter(v17, v18, v19);
    if (os_log_type_enabled(v17, v20))
    {
      v21 = swift_slowAlloc(22, -1);
      v22 = swift_slowAlloc(32, -1);
      v47 = v22;
      *(_DWORD *)v21 = 134218242;
      v23 = *(_QWORD *)(a1 + 16);
      swift_release();
      v49 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v21 + 4);
      swift_release();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain(a3);
      v49 = sub_33524(a2, a3, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v21 + 14);
      swift_bridgeObjectRelease_n(a3, 3);
      _os_log_impl(&dword_0, v17, v20, "#paginationCache: Recording results for ordinal %ld key %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n(a3, 2);

      swift_release_n(a1);
    }
    v24 = (uint64_t *)(v4 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData);
    swift_beginAccess(v4 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData, &v49, 0, 0);
    v25 = v24[1];
    if (v25)
    {
      v26 = *v24;
      v27 = v24[2];
      sub_188008(*v24, v24[1], v27);
      swift_bridgeObjectRetain(v25);
      sub_86ABC(v26, v25, v27);
      if (v26 == a2 && v25 == a3)
      {
        swift_bridgeObjectRelease(v25);
LABEL_14:
        swift_retain_n(a1);
        v29 = swift_bridgeObjectRetain_n(a3, 2);
        v30 = Logger.logObject.getter(v29);
        v33 = static os_log_type_t.debug.getter(v30, v31, v32);
        if (os_log_type_enabled(v30, v33))
        {
          v34 = swift_slowAlloc(22, -1);
          v35 = swift_slowAlloc(32, -1);
          v47 = v35;
          *(_DWORD *)v34 = 134218242;
          v36 = *(_QWORD *)(a1 + 16);
          swift_release();
          v46 = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v34 + 4);
          swift_release();
          *(_WORD *)(v34 + 12) = 2080;
          swift_bridgeObjectRetain(a3);
          v46 = sub_33524(a2, a3, &v47);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v34 + 14);
          swift_bridgeObjectRelease_n(a3, 3);
          _os_log_impl(&dword_0, v30, v33, "#paginationCache: Updating recentData for ordinal %ld key %s", (uint8_t *)v34, 0x16u);
          swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v35, -1, -1);
          swift_slowDealloc(v34, -1, -1);

        }
        else
        {
          swift_bridgeObjectRelease_n(a3, 2);

          swift_release_n(a1);
        }
        v38 = sub_186714((uint64_t)&v47);
        if (*(_QWORD *)(v37 + 8))
        {
          v40 = v37;
          v41 = *(_QWORD *)(a1 + 16);
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v40 + 16));
          v46 = *(_QWORD *)(v40 + 16);
          *(_QWORD *)(v40 + 16) = 0x8000000000000000;
          sub_17D7E8(a1, v41, isUniquelyReferenced_nonNull_native);
          v43 = *(_QWORD *)(v40 + 16);
          *(_QWORD *)(v40 + 16) = v46;
          v39 = swift_bridgeObjectRelease(v43);
        }
        ((void (*)(uint64_t *, _QWORD, __n128))v38)(&v47, 0, v39);
        goto LABEL_20;
      }
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v25, a2, a3, 0);
      swift_bridgeObjectRelease(v25);
      if ((v28 & 1) != 0)
        goto LABEL_14;
    }
LABEL_20:
    v44 = *(_QWORD *)(v4 + 32);
    ObjectType = swift_getObjectType(*(_QWORD *)(v4 + 24));
    (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v44 + 8) + 16))(a1, a2, a3, ObjectType);
    return;
  }
  v11 = Logger.logObject.getter(v10);
  v14 = static os_log_type_t.debug.getter(v11, v12, v13);
  if (os_log_type_enabled(v11, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    v47 = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v15 + 4);
    swift_release();
    _os_log_impl(&dword_0, v11, v14, "#paginationCache: Document %ld marked as failed. Will not save.", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_release();
  }

}

uint64_t sub_187AD4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];

  v3 = v2;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData);
  swift_beginAccess(v6, v22, 1, 0);
  v7 = *v6;
  v8 = v6[1];
  v9 = v6[2];
  v6[1] = 0;
  v6[2] = 0;
  *v6 = 0;
  sub_86ABC(v7, v8, v9);
  if (qword_3B5860 != -1)
    swift_once(&qword_3B5860, sub_186694);
  v10 = type metadata accessor for Logger(0);
  sub_555F0(v10, (uint64_t)qword_3BF378);
  v11 = swift_bridgeObjectRetain_n(a2, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v21 = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain(a2);
    v20 = sub_33524(a1, a2, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v14 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl(&dword_0, v12, v13, "Dropping #staleCache data for assetID:%s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v16 = *(_QWORD *)(v3 + 24);
  v17 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType(v16);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v17 + 8) + 24))(a1, a2, ObjectType);
}

uint64_t sub_187CD4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v3 = v2;
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData);
  swift_beginAccess(v6, v27, 1, 0);
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    v9 = v6[2];
    sub_188008(*v6, v6[1], v9);
    swift_bridgeObjectRetain(v7);
    sub_86ABC(v8, v7, v9);
    if (v8 == a1 && v7 == a2)
    {
      swift_bridgeObjectRelease(v7);
    }
    else
    {
      v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, a1, a2, 0);
      swift_bridgeObjectRelease(v7);
      if ((v11 & 1) == 0)
        goto LABEL_10;
    }
    v12 = *v6;
    v13 = v6[1];
    v14 = v6[2];
    v6[1] = 0;
    v6[2] = 0;
    *v6 = 0;
    sub_86ABC(v12, v13, v14);
  }
LABEL_10:
  if (qword_3B5860 != -1)
    swift_once(&qword_3B5860, sub_186694);
  v15 = type metadata accessor for Logger(0);
  sub_555F0(v15, (uint64_t)qword_3BF378);
  v16 = swift_bridgeObjectRetain_n(a2, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v20 = swift_slowAlloc(32, -1);
    v26 = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain(a2);
    v25 = sub_33524(a1, a2, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v19 + 4);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl(&dword_0, v17, v18, "Dropping #staleCache data for key:%s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v21 = *(_QWORD *)(v3 + 24);
  v22 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType(v21);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v22 + 8) + 32))(a1, a2, ObjectType);
}

unint64_t sub_187F5C()
{
  uint64_t v0;
  Swift::String v1;
  void *object;
  char v4;
  unint64_t v5;
  unint64_t v6;

  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease(0xE000000000000000);
  v5 = 0xD000000000000029;
  v6 = 0x80000000002CEAA0;
  v4 = *(_BYTE *)(v0 + 16);
  v1._countAndFlagsBits = String.init<A>(describing:)(&v4, &type metadata for PaginationCacheProvider.StorageType);
  object = v1._object;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(object);
  return v5;
}

unint64_t sub_187FE8()
{
  return sub_187F5C();
}

uint64_t sub_188008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a3);
  }
  return result;
}

unint64_t sub_188038(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  __int128 *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v12 = *(_QWORD *)(a2 + 48);
        v13 = (_QWORD *)(v12 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v13);
        v14 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 >= v8 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            v17 = (_QWORD *)(v12 + 8 * v3);
            if (v3 != v6 || v17 >= v13 + 1)
              *v17 = *v13;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = v18 + 56 * v3;
            v20 = (__int128 *)(v18 + 56 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= (unint64_t)v20 + 56))
            {
              v9 = *v20;
              v10 = v20[1];
              v11 = v20[2];
              *(_QWORD *)(v19 + 48) = *((_QWORD *)v20 + 6);
              *(_OWORD *)(v19 + 16) = v10;
              *(_OWORD *)(v19 + 32) = v11;
              *(_OWORD *)v19 = v9;
              v3 = v6;
            }
          }
        }
        else if (v14 >= v8 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1881E8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        result = v15 + (v3 << 6);
        if (v3 < (uint64_t)v6 || result >= v15 + (v6 << 6) + 64)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v16 = v3 == v6;
          v3 = v6;
          if (v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1883A4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_OWORD *)(v15 + 16 * v3);
            v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18853C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = static Hasher._hash(seed:_:)(*(_QWORD *)(a2 + 40), *v10);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1886D0(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD v14[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
      Hasher.init(_seed:)(v14, *(_QWORD *)(a2 + 40));
      __asm { BR              X8 }
    }
    v8 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v9 = *v8;
    v10 = (-1 << v3) - 1;
  }
  else
  {
    v8 = (uint64_t *)(v4 + 8 * (result >> 6));
    v10 = *v8;
    v9 = (-1 << result) - 1;
  }
  *v8 = v10 & v9;
  v11 = *(_QWORD *)(a2 + 16);
  v12 = __OFSUB__(v11, 1);
  v13 = v11 - 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x1889FCLL);
  }
  *(_QWORD *)(a2 + 16) = v13;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_188A64(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  __int128 *v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[9];

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      v37 = v2;
      v38 = v4;
      do
      {
        v11 = *(_QWORD *)(v2 + 40);
        v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 48 * v6);
        v13 = *v12;
        v14 = v12[1];
        v15 = v7;
        v17 = v12[2];
        v16 = v12[3];
        v19 = v12[4];
        v18 = v12[5];
        Hasher.init(_seed:)(v39, v11);
        swift_bridgeObjectRetain_n(v14, 2);
        swift_bridgeObjectRetain(v16);
        swift_bridgeObjectRetain(v18);
        String.hash(into:)(v39, v13, v14);
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRetain(v16);
        String.hash(into:)(v39, v17, v16);
        swift_bridgeObjectRelease(v16);
        swift_bridgeObjectRetain(v18);
        String.hash(into:)(v39, v19, v18);
        swift_bridgeObjectRelease(v18);
        v20 = Hasher._finalize()();
        swift_bridgeObjectRelease(v18);
        v21 = v16;
        v7 = v15;
        swift_bridgeObjectRelease(v21);
        result = swift_bridgeObjectRelease(v14);
        v22 = v20 & v15;
        if (v3 >= (uint64_t)v8)
        {
          if (v22 < v8)
          {
            v2 = v37;
            v4 = v38;
          }
          else
          {
            v2 = v37;
            v4 = v38;
            if (v3 >= v22)
              goto LABEL_12;
          }
        }
        else
        {
          v2 = v37;
          v4 = v38;
          if (v22 >= v8 || v3 >= v22)
          {
LABEL_12:
            v23 = *(_QWORD *)(v2 + 48);
            v24 = (__int128 *)(v23 + 48 * v3);
            v25 = (__int128 *)(v23 + 48 * v6);
            if (v3 != v6 || v24 >= v25 + 3)
            {
              v26 = *v25;
              v27 = v25[2];
              v24[1] = v25[1];
              v24[2] = v27;
              *v24 = v26;
            }
            v28 = *(_QWORD *)(v2 + 56);
            v29 = (__int128 *)(v28 + 48 * v3);
            v30 = (__int128 *)(v28 + 48 * v6);
            if (v3 != v6 || (v3 = v6, v29 >= v30 + 3))
            {
              v9 = *v30;
              v10 = v30[2];
              v29[1] = v30[1];
              v29[2] = v10;
              *v29 = v9;
              v3 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v31 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v32 = *v31;
    v33 = (-1 << v3) - 1;
  }
  else
  {
    v31 = (uint64_t *)(v4 + 8 * (result >> 6));
    v33 = *v31;
    v32 = (-1 << result) - 1;
  }
  *v31 = v33 & v32;
  v34 = *(_QWORD *)(v2 + 16);
  v35 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v35)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v36;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_188CF8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_OWORD *)(v17 + 16 * v3);
          v19 = (_OWORD *)(v17 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_188ECC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _QWORD v26[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v10 = *v9;
        v11 = v9[1];
        Hasher.init(_seed:)(v26, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        v12 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v11);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = (_QWORD *)(v17 + 8 * v3);
          v19 = (_QWORD *)(v17 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= v19 + 1))
          {
            *v18 = *v19;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1890A0(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD v14[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
      Hasher.init(_seed:)(v14, *(_QWORD *)(a2 + 40));
      __asm { BR              X8 }
    }
    v8 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v9 = *v8;
    v10 = (-1 << v3) - 1;
  }
  else
  {
    v8 = (uint64_t *)(v4 + 8 * (result >> 6));
    v10 = *v8;
    v9 = (-1 << result) - 1;
  }
  *v8 = v10 & v9;
  v11 = *(_QWORD *)(a2 + 16);
  v12 = __OFSUB__(v11, 1);
  v13 = v11 - 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x1892ECLL);
  }
  *(_QWORD *)(a2 + 16) = v13;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

uint64_t sub_189304()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

double sub_189338(uint64_t a1)
{
  uint64_t *v1;

  return sub_186F70(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_189348()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1052DC(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_release();
  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_189390(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_QWORD *)(v1 + 56);
  v10 = *(_QWORD *)(v1 + 64);
  v11 = (_QWORD *)swift_task_alloc(dword_3BF4C4);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_3F0C0;
  return sub_1870B0(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_189448(char a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  id v33;
  int v34;
  id v35;
  _QWORD *v36;

  v4 = v3;
  v35 = a3;
  v33 = a2;
  v34 = a1 & 1;
  v32 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v32 - 8);
  __chkstk_darwin(v32);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v4 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_log;
  if (qword_3B5860 != -1)
    swift_once(&qword_3B5860, sub_186694);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_555F0(v15, (uint64_t)qword_3BF378);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, v16, v15);
  v17 = (_QWORD *)(v4 + OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_recentData);
  v17[1] = 0;
  v17[2] = 0;
  *v17 = 0;
  v18 = OBJC_IVAR____TtC8BookEPUB23PaginationCacheProvider_saveQueue;
  sub_5B5E4();
  static DispatchQoS.unspecified.getter(v19);
  v36 = _swiftEmptyArrayStorage;
  v20 = sub_1898DC();
  v21 = sub_319AC((uint64_t *)&unk_3BC520);
  v22 = sub_319EC();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v21, v22, v8, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v32);
  *(_QWORD *)(v4 + v18) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000021, 0x80000000002CEAD0, v13, v10, v7, 0);
  v23 = v34;
  *(_BYTE *)(v4 + 16) = v34;
  v24 = String._bridgeToObjectiveC()();
  LOBYTE(v21) = objc_msgSend(v33, "BOOLForKey:", v24);

  *(_BYTE *)(v4 + 17) = v21;
  LODWORD(v24) = v23 == 0;
  v25 = v35;
  v26 = sub_1054D4();
  v28 = v27;
  v29 = type metadata accessor for CoreDataPaginationCacheProvider(0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48));
  *(_QWORD *)(v4 + 24) = sub_101F54((void **)0x2E37302E34323032, 0xEA00000000003930, v26, v28, 0, 0, (int)v24, v25);
  *(_QWORD *)(v4 + 32) = &off_3818F8;
  return v4;
}

unint64_t sub_1898DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3B5960;
  if (!qword_3B5960)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_3B5960);
  }
  return result;
}

uint64_t SearchResultType.cfi.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  __objc2_prot *v12;

  v1 = *(unsigned __int8 *)(v0 + 16);
  if ((v1 - 1) < 2)
    return 0;
  v2 = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  if (v1)
  {
    swift_bridgeObjectRetain(v3);
    return v2;
  }
  *(_QWORD *)&v4 = swift_unknownObjectRetain(v2).n128_u64[0];
  v6 = objc_msgSend(v5, "location", v4);
  if (!v6)
    goto LABEL_8;
  v7 = v6;
  v12 = &OBJC_PROTOCOL___BECFILocationProtocol;
  v8 = (void *)swift_dynamicCastObjCProtocolConditional(v6, 1, &v12);
  if (!v8)
  {
    sub_A8870(v2, v3, 0);
    swift_unknownObjectRelease(v7);
    return 0;
  }
  v9 = objc_msgSend(v8, "cfiString");
  swift_unknownObjectRelease(v7);
  if (!v9)
  {
LABEL_8:
    sub_A8870(v2, v3, 0);
    return 0;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  sub_A8870(v2, v3, 0);

  return v10;
}

void sub_189A4C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 3 || a3 == 2)
  {
    swift_bridgeObjectRetain(a2);
  }
  else if (!a3)
  {
    swift_unknownObjectRetain(a1);
  }
}

void destroy for SearchResultType(uint64_t a1)
{
  sub_A8870(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8BookEPUB16SearchResultTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_189A4C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SearchResultType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_189A4C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_A8870(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SearchResultType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_A8870(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SearchResultType()
{
  return &type metadata for SearchResultType;
}

BookEPUB::BookContentUserInterfaceStyle __swiftcall BookContentUserInterfaceStyle.init(traitCollection:)(UITraitCollection traitCollection)
{
  BOOL *v1;
  BOOL *v3;
  char *v4;
  BookEPUB::BookContentUserInterfaceStyle result;

  v3 = v1;
  v4 = (char *)-[objc_class userInterfaceStyle](traitCollection.super.isa, "userInterfaceStyle");

  *v3 = v4 == (_BYTE *)&dword_0 + 2;
  return result;
}

uint64_t sub_189BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];

  v4 = sub_319AC(&qword_3BF8B8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_319AC(&qword_3BF8C0);
  v22[0] = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 64))(a1, a2, v9);
  v22[1] = v12;
  v13 = sub_319AC(&qword_3BF8C8);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_2E5F80;
  *(_QWORD *)(v14 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  *(_QWORD *)(v14 + 40) = v15;
  v16 = sub_319AC(&qword_3B9B28);
  v17 = sub_3DCC0(&qword_3B9B40, &qword_3B9B28, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.prepend(_:)(v14, v16, v17);
  swift_release(v12);
  swift_bridgeObjectRelease(v14);
  v18 = sub_3DCC0(&qword_3BF8D0, &qword_3BF8B8, (uint64_t)&protocol conformance descriptor for Publishers.Concatenate<A, B>);
  Publisher.removeDuplicates(by:)(sub_18A0CC, 0, v4, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v19 = sub_3DCC0(&qword_3BF8D8, &qword_3BF8C0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v20 = Publisher.eraseToAnyPublisher()(v8, v19);
  (*(void (**)(char *, uint64_t))(v22[0] + 8))(v11, v8);
  return v20;
}

uint64_t ContentLayoutProvider.__allocating_init<A>(bookEntity:availableSize:layout:layoutEnvironment:fontSizeCategory:textZoomFactor:useNewTextStyling:theme:)(_QWORD *a1, unint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11)
{
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v40;
  char v43[8];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v15 = *(_BYTE *)a6;
  v16 = *(_BYTE *)(a6 + 1);
  v17 = *(_BYTE *)(a6 + 2);
  v34 = *(_OWORD *)(a6 + 24);
  v35 = *(_OWORD *)(a6 + 8);
  v33 = *(_OWORD *)(a6 + 40);
  v32 = *(_QWORD *)(a6 + 56);
  v18 = a1[3];
  v19 = a1[4];
  sub_472D0(a1, v18);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  v22 = v21;
  v23 = a1[3];
  v24 = a1[4];
  sub_472D0(a1, v23);
  LOBYTE(v23) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 104))(v23, v24);
  v25 = a1[3];
  v26 = a1[4];
  sub_472D0(a1, v25);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 144))(v25, v26);
  v43[0] = v15;
  v43[1] = v16;
  v43[2] = v17;
  v44 = v35;
  v45 = v34;
  v46 = v33;
  v47 = v32;
  v30 = sub_18FA18(v20, v22, v23, v27, v29, v28 & 1, a2, a3, a9, a10, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right, a11, a4, a5, v43, v40,
          a7,
          a8);
  sub_34488(a1);
  return v30;
}

uint64_t sub_189F64()
{
  uint64_t result;

  sub_34450(0, (unint64_t *)&qword_3B80A0, OS_os_log_ptr);
  result = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000002C6E50, 0x4C746E65746E6F43, 0xED000074756F7961);
  qword_3CF288 = result;
  return result;
}

uint64_t sub_189FDC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3BF5F0);
  sub_555F0(v0, (uint64_t)qword_3BF5F0);
  if (qword_3B5868 != -1)
    swift_once(&qword_3B5868, sub_189F64);
  return Logger.init(_:)((id)qword_3CF288);
}

uint64_t ContentLayoutLogger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_3B5870 != -1)
    swift_once(&qword_3B5870, sub_189FDC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_555F0(v2, (uint64_t)qword_3BF5F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_18A0CC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t (**v3)(_QWORD, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  char v17;

  v2 = *a1;
  v3 = (uint64_t (**)(_QWORD, _QWORD))a1[1];
  v4 = *a2;
  v5 = a2[1];
  ObjectType = swift_getObjectType(*a1);
  v7 = v3[1](ObjectType, v3);
  v8 = swift_getObjectType(v4);
  if (((v7 ^ (*(unsigned int (**)(uint64_t, uint64_t))(v5 + 8))(v8, v5)) & 1) != 0
    || (v9 = v3[2](ObjectType, v3),
        ((v9 ^ (*(unsigned int (**)(uint64_t, uint64_t))(v5 + 16))(v8, v5)) & 1) != 0))
  {
    v10 = 0;
  }
  else
  {
    v11 = v3[3](ObjectType, v3);
    v10 = v11 ^ (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v8, v5) ^ 1;
  }
  v12 = objc_opt_self(UITraitCollection);
  if (swift_dynamicCastObjCClass(v2, v12))
  {
    v13 = objc_opt_self(UITraitCollection);
    v14 = swift_dynamicCastObjCClass(v4, v13);
    v15 = (v14 == 0) & v10;
    if (v14 && ((v10 ^ 1) & 1) == 0)
    {
      v16 = (void *)v14;
      swift_unknownObjectRetain(v2);
      swift_unknownObjectRetain(v4);
      v17 = sub_18A244(v16);
      swift_unknownObjectRelease(v4);
      swift_unknownObjectRelease(v2);
      return v17 & 1;
    }
  }
  else
  {
    v15 = v10;
  }
  return v15 & 1;
}

uint64_t sub_18A244(void *a1)
{
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  if (a1)
  {
    v2 = a1;
    v3 = objc_msgSend(v1, "userInterfaceStyle");
    if (v3 == objc_msgSend(v2, "userInterfaceStyle")
      && (v4 = objc_msgSend(v1, "userInterfaceIdiom"), v4 == objc_msgSend(v2, "userInterfaceIdiom"))
      && (v5 = objc_msgSend(v1, "layoutDirection"), v5 == objc_msgSend(v2, "layoutDirection"))
      && (objc_msgSend(v1, "displayScale"), v7 = v6, objc_msgSend(v2, "displayScale"), v7 == v8)
      && (v9 = objc_msgSend(v1, "horizontalSizeClass"), v9 == objc_msgSend(v2, "horizontalSizeClass"))
      && (v10 = objc_msgSend(v1, "verticalSizeClass"), v10 == objc_msgSend(v2, "verticalSizeClass")))
    {
      v11 = objc_msgSend(v1, "preferredContentSizeCategory");
      v12 = objc_msgSend(v2, "preferredContentSizeCategory");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v18 = v16;
      if (v13 == v17 && v15 == v16)
      {
        v19 = 1;
        v18 = v15;
      }
      else
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);
      }
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v18);

    }
    else
    {
      v19 = 0;
    }

  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

BOOL UITraitCollection.isCompactWidth.getter()
{
  void *v0;

  return objc_msgSend(v0, "horizontalSizeClass") == (char *)&dword_0 + 1;
}

BOOL UITraitCollection.isCompactHeight.getter()
{
  void *v0;

  return objc_msgSend(v0, "verticalSizeClass") == (char *)&dword_0 + 1;
}

BOOL UITraitCollection.isPhone.getter()
{
  void *v0;

  return objc_msgSend(v0, "userInterfaceIdiom") == 0;
}

void sub_18A4A4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = v0[8];
  switch(v2)
  {
    case 0:
      if (qword_3B5870 != -1)
        swift_once(&qword_3B5870, sub_189FDC);
      v3 = type metadata accessor for Logger(0);
      sub_555F0(v3, (uint64_t)qword_3BF5F0);
      v4 = swift_retain_n(v1);
      v5 = Logger.logObject.getter(v4);
      v6 = static os_log_type_t.error.getter(v5);
      if (os_log_type_enabled(v5, v6))
      {
        v7 = swift_slowAlloc(22, -1);
        v8 = swift_slowAlloc(64, -1);
        v16 = v8;
        *(_DWORD *)v7 = 136315394;
        v9 = _typeName(_:qualified:)(*v1, 0);
        v11 = v10;
        v15 = sub_33524(v9, v10, &v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 4);
        swift_release_n(v1);
        swift_bridgeObjectRelease(v11);
        *(_WORD *)(v7 + 12) = 2080;
        v12 = v1[11];
        v13 = v1[12];
        swift_bridgeObjectRetain(v13);
        v15 = sub_33524(v12, v13, &v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v7 + 14);
        swift_release_n(v1);
        swift_bridgeObjectRelease(v13);
        swift_arrayDestroy(v8, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v8, -1, -1);
        swift_slowDealloc(v7, -1, -1);

      }
      else
      {

        swift_release_n(v1);
      }
      break;
    case 1:
      return;
    case 2:
      if (qword_3B5880 != -1)
        swift_once(&qword_3B5880, sub_18DD9C);
      break;
    case 3:
      if (qword_3B5888 != -1)
        swift_once(&qword_3B5888, sub_18DDA8);
      sub_18C3E4();
      break;
    default:
      type metadata accessor for BookLayoutMode(0);
      v16 = v2;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v14, &v16, v14, &type metadata for UInt);
      __break(1u);
      break;
  }
}

void BookContentLayoutProviding.contentContainerTopInset.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = (*(uint64_t (**)(void))(a2 + 24))();
  switch(v6)
  {
    case 0:
      if (qword_3B5870 != -1)
        swift_once(&qword_3B5870, sub_189FDC);
      v7 = type metadata accessor for Logger(0);
      sub_555F0(v7, (uint64_t)qword_3BF5F0);
      v8 = swift_unknownObjectRetain_n(v3, 4);
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.error.getter(v9);
      if (os_log_type_enabled(v9, v10))
      {
        v11 = swift_slowAlloc(22, -1);
        v12 = swift_slowAlloc(64, -1);
        v23 = v12;
        *(_DWORD *)v11 = 136315394;
        ObjectType = swift_getObjectType(v3);
        v14 = _typeName(_:qualified:)(ObjectType, 0);
        v16 = v15;
        v22 = sub_33524(v14, v15, &v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v11 + 4);
        swift_unknownObjectRelease_n(v3, 2);
        v17 = swift_bridgeObjectRelease(v16);
        *(_WORD *)(v11 + 12) = 2080;
        v18 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 184))(a1, a2, v17);
        v20 = v19;
        v22 = sub_33524(v18, v19, &v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v11 + 14);
        swift_unknownObjectRelease_n(v3, 2);
        swift_bridgeObjectRelease(v20);
        swift_arrayDestroy(v12, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1, -1);
        swift_slowDealloc(v11, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(v3, 4);
      }
      goto LABEL_12;
    case 1:
      goto LABEL_12;
    case 2:
      if (qword_3B5880 != -1)
        swift_once(&qword_3B5880, sub_18DD9C);
      goto LABEL_12;
    case 3:
      if (qword_3B5888 != -1)
        swift_once(&qword_3B5888, sub_18DDA8);
      floor(*(double *)&qword_3CF2A0 * sub_18C554(a1, a2));
LABEL_12:
      (*(double (**)(uint64_t, uint64_t))(a2 + 88))(a1, a2);
      break;
    default:
      type metadata accessor for BookLayoutMode(0);
      v23 = v6;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v21, &v23, v21, &type metadata for UInt);
      __break(1u);
      break;
  }
}

double sub_18AA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t *v10;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  char v13;
  double v14;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 64);
  v3 = 0.0;
  if (v2 != 2)
  {
    if (qword_3B5890 != -1)
      swift_once(&qword_3B5890, sub_18DDB8);
    v4 = *(double *)&qword_3CF2A8;
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v1 + 80);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 72));
    v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 16);
    v9 = swift_unknownObjectRetain(v5);
    LOBYTE(v8) = v8(ObjectType, v6, v9);
    swift_unknownObjectRelease(v5);
    if ((v8 & 1) != 0)
    {
      if (qword_3B58A0 != -1)
        swift_once(&qword_3B58A0, sub_18DDD8);
      v10 = &qword_3CF2B8;
LABEL_8:
      v4 = *(double *)v10;
      if (v2 != 3)
        goto LABEL_16;
      goto LABEL_15;
    }
    v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 8);
    v12 = swift_unknownObjectRetain(v5);
    v13 = v11(ObjectType, v6, v12);
    swift_unknownObjectRelease(v5);
    if ((v13 & 1) == 0 && *(double *)(v1 + 152) < *(double *)(v1 + 160))
    {
      if (qword_3B5898 != -1)
      {
        swift_once(&qword_3B5898, sub_18DDC8);
        v10 = &qword_3CF2B0;
        goto LABEL_8;
      }
      v4 = *(double *)&qword_3CF2B0;
    }
    if (v2 != 3)
    {
LABEL_16:
      v3 = v4 + sub_18CB4C();
      return v3 + *(double *)(v1 + 136);
    }
LABEL_15:
    sub_18C3E4();
    v4 = floor(v4 * v14);
    goto LABEL_16;
  }
  return v3 + *(double *)(v1 + 136);
}

double BookContentLayoutProviding.contentContainerBottomInset.getter(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  double v5;
  double v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  __n128 v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double (*v18)(uint64_t, uint64_t, __n128);
  double v19;
  double v20;
  double v21;

  v4 = *(uint64_t (**)(void))(a2 + 24);
  v5 = 0.0;
  if (v4() == 2)
    goto LABEL_17;
  if (qword_3B5890 != -1)
    swift_once(&qword_3B5890, sub_18DDB8);
  v6 = *(double *)&qword_3CF2A8;
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
  v8 = v7(a1, a2);
  v10 = v9;
  ObjectType = swift_getObjectType(v8);
  LOBYTE(v10) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(ObjectType, v10);
  v12 = swift_unknownObjectRelease(v8);
  if ((v10 & 1) != 0)
  {
    if (qword_3B58A0 != -1)
      swift_once(&qword_3B58A0, sub_18DDD8);
    v13 = &qword_3CF2B8;
  }
  else
  {
    v14 = ((uint64_t (*)(uint64_t, uint64_t, __n128))v7)(a1, a2, v12);
    v16 = v15;
    v17 = swift_getObjectType(v14);
    LOBYTE(v16) = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
    v12 = swift_unknownObjectRelease(v14);
    if ((v16 & 1) != 0)
      goto LABEL_14;
    v18 = *(double (**)(uint64_t, uint64_t, __n128))(a2 + 80);
    v19 = v18(a1, a2, v12);
    ((void (*)(uint64_t, uint64_t))v18)(a1, a2);
    if (v19 >= v20)
      goto LABEL_14;
    if (qword_3B5898 != -1)
      swift_once(&qword_3B5898, sub_18DDC8);
    v13 = &qword_3CF2B0;
  }
  v6 = *(double *)v13;
LABEL_14:
  if (((uint64_t (*)(uint64_t, uint64_t, __n128))v4)(a1, a2, v12) == 3)
    v6 = floor(v6 * sub_18C554(a1, a2));
  v5 = v6 + (*(double (**)(uint64_t, uint64_t))(a2 + 128))(a1, a2);
LABEL_17:
  (*(void (**)(uint64_t, uint64_t))(a2 + 88))(a1, a2);
  return v5 + v21;
}

double BookContentLayoutProviding.verticalCompression.getter(uint64_t a1, uint64_t a2)
{
  double v4;

  v4 = (*(double (**)(void))(a2 + 96))();
  return v4 + (*(double (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
}

uint64_t BookContentLayoutProviding.pageLength.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = (*(uint64_t (**)(void))(a2 + 24))();
  switch(v6)
  {
    case 0:
      if (qword_3B5870 != -1)
        swift_once(&qword_3B5870, sub_189FDC);
      v8 = type metadata accessor for Logger(0);
      sub_555F0(v8, (uint64_t)qword_3BF5F0);
      v9 = swift_unknownObjectRetain_n(v3, 4);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.error.getter(v10);
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc(22, -1);
        v13 = swift_slowAlloc(64, -1);
        v24 = v13;
        *(_DWORD *)v12 = 136315394;
        ObjectType = swift_getObjectType(v3);
        v15 = _typeName(_:qualified:)(ObjectType, 0);
        v17 = v16;
        v23 = sub_33524(v15, v16, &v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v12 + 4);
        swift_unknownObjectRelease_n(v3, 2);
        v18 = swift_bridgeObjectRelease(v17);
        *(_WORD *)(v12 + 12) = 2080;
        v19 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 184))(a1, a2, v18);
        v21 = v20;
        v23 = sub_33524(v19, v20, &v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v12 + 14);
        swift_unknownObjectRelease_n(v3, 2);
        swift_bridgeObjectRelease(v21);
        swift_arrayDestroy(v13, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v13, -1, -1);
        swift_slowDealloc(v12, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(v3, 4);
      }
      goto LABEL_2;
    case 1:
    case 3:
LABEL_2:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
      break;
    case 2:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
      break;
    default:
      type metadata accessor for BookLayoutMode(0);
      v24 = v6;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v22, &v24, v22, &type metadata for UInt);
      __break(1u);
      break;
  }
  return result;
}

double sub_18B0CC()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  double v7;
  __int128 v9;
  __int128 v10;

  v1 = *(double *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 200);
  v10 = *(_OWORD *)(v0 + 208);
  v9 = *(_OWORD *)(v0 + 232);
  v3 = BookThemeEntity.fontFamily.getter();
  v5 = v4;
  if (((v2 != 0) & BYTE1(v10) & 1) != 0)
    v6 = v9;
  else
    v6 = 0;
  v7 = sub_18FF9C(v3, v4, v6, 0, v1, *(double *)(v0 + 152));
  swift_bridgeObjectRelease(v5);
  return v7;
}

void sub_18B1A0()
{
  uint64_t v0;
  Swift::String v1;

  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  v1._countAndFlagsBits = 45;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  __asm { BR              X10 }
}

uint64_t sub_18B200()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  Swift::String v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::String v27;
  char v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  Swift::String v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  Swift::String v50;
  BOOL v51;
  BOOL v52;
  _BOOL4 v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  Swift::String v57;
  double v58;
  __n128 v59;
  Swift::String v60;
  __n128 v61;
  Swift::String v62;
  __n128 v63;
  Swift::String v64;
  uint64_t v65;
  const __CFString *v66;
  __CFString *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  Swift::String v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  double v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unsigned int v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  double v102;
  uint64_t v103;
  uint64_t v104;

  v2._countAndFlagsBits = 0x6261776F6C666572;
  v2._object = (void *)0xEA0000000000656CLL;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(0xEA0000000000656CLL);
  v86 = v98;
  v87 = v97;
  v3._countAndFlagsBits = 0x6261776F6C666572;
  v3._object = (void *)0xEA0000000000656CLL;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(0xEA0000000000656CLL);
  v97 = 0;
  v98 = 0xE000000000000000;
  *(_OWORD *)(v1 - 128) = *(_OWORD *)(v0 + 152);
  type metadata accessor for CGSize(0);
  v5 = v4;
  _print_unlocked<A, B>(_:_:)(v1 - 128, &v97, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6._countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  sub_18C774();
  *(_QWORD *)(v1 - 128) = v7;
  *(_QWORD *)(v1 - 120) = v8;
  _print_unlocked<A, B>(_:_:)(v1 - 128, &v97, v5, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v9._countAndFlagsBits = 45;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  *(_QWORD *)(v1 - 128) = sub_18D978();
  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  v12._countAndFlagsBits = 45;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  sub_18A4A4();
  v14 = v13;
  v15 = sub_18AA70();
  v17._countAndFlagsBits = Double.description.getter(v16, v14 + v15);
  v18 = v17._object;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v18);
  v19 = v97;
  v20 = v98;
  v97 = 0;
  v98 = 0xE000000000000000;
  v21 = *(_QWORD *)(v0 + 64);
  v84 = v20;
  v85 = v19;
  v22 = 0xE800000000000000;
  v23 = 0x6465767265736572;
  switch(v21)
  {
    case 0:
      goto LABEL_5;
    case 1:
      v22 = 0xE500000000000000;
      v23 = 0x6465676170;
      goto LABEL_5;
    case 2:
      v23 = 0x6C61636974726576;
      goto LABEL_5;
    case 3:
      v22 = 0xEA00000000006C61;
      v23 = 0x746E6F7A69726F68;
LABEL_5:
      v24 = v22;
      String.append(_:)(*(Swift::String *)&v23);
      swift_bridgeObjectRelease(v22);
      v96 = v97;
      v83 = v98;
      *(_QWORD *)(v1 - 128) = Double.description.getter(v25, round(*(double *)(v0 + 176) * 100.0));
      *(_QWORD *)(v1 - 120) = v26;
      v27._countAndFlagsBits = 45;
      v27._object = (void *)0xE100000000000000;
      String.append(_:)(v27);
      v93 = *(unsigned __int8 *)(v0 + 192);
      v28 = *(_BYTE *)(v0 + 193);
      v29 = *(_BYTE *)(v0 + 194);
      v31 = *(_QWORD *)(v0 + 200);
      v30 = *(_QWORD *)(v0 + 208);
      v32 = *(_QWORD *)(v0 + 216);
      v33 = *(_QWORD *)(v0 + 224);
      v35 = *(double *)(v0 + 232);
      v34 = *(_QWORD *)(v0 + 240);
      v36 = *(_QWORD *)(v0 + 248);
      v81 = *(char *)(v0 + 192);
      LOBYTE(v97) = *(_BYTE *)(v0 + 192);
      v94 = v28;
      BYTE1(v97) = v28;
      BYTE2(v97) = v29;
      v98 = v31;
      v99 = v30;
      v91 = v30;
      v100 = v32;
      v101 = v33;
      v102 = v35;
      v103 = v34;
      v104 = v36;
      v37 = BookThemeEntity.fontFamily.getter();
      v39 = v38;
      swift_bridgeObjectRelease(v38);
      v40 = HIBYTE(v39) & 0xF;
      if ((v39 & 0x2000000000000000) == 0)
        v40 = v37 & 0xFFFFFFFFFFFFLL;
      v89 = v35;
      v88 = v33;
      if (v40)
      {
        LOBYTE(v97) = v93;
        BYTE1(v97) = v94;
        BYTE2(v97) = v29;
        v98 = v31;
        v99 = v91;
        v100 = v32;
        v101 = v33;
        v102 = v35;
        v103 = v34;
        v104 = v36;
        v41 = BookThemeEntity.fontFamily.getter();
        v43 = v42;
      }
      else
      {
        v43 = 0xE800000000000000;
        v41 = 0x6C616E696769726FLL;
      }
      v44 = v31;
      v45 = v43;
      String.append(_:)(*(Swift::String *)&v41);
      swift_bridgeObjectRelease(v43);
      v95 = *(_QWORD *)(v1 - 128);
      v82 = *(_QWORD *)(v1 - 120);
      v97 = 0;
      v98 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      v46._countAndFlagsBits = 978539598;
      v46._object = (void *)0xE400000000000000;
      String.append(_:)(v46);
      if (*(_BYTE *)(v0 + 184))
        v47 = 1702195828;
      else
        v47 = 0x65736C6166;
      if (*(_BYTE *)(v0 + 184))
        v48 = 0xE400000000000000;
      else
        v48 = 0xE500000000000000;
      v49 = v48;
      String.append(_:)(*(Swift::String *)&v47);
      swift_bridgeObjectRelease(v48);
      v50._countAndFlagsBits = 0x3A646C6F422DLL;
      v50._object = (void *)0xE600000000000000;
      String.append(_:)(v50);
      v51 = v93 == 3;
      v52 = v31 == 0;
      if (v31)
        v51 = v91;
      v21 = (v91 >> 8) & 1;
      if (v52)
        v53 = v93 != 0;
      else
        v53 = (v91 >> 8) & 1;
      if (v51)
        v54 = 1702195828;
      else
        v54 = 0x65736C6166;
      if (v51)
        v55 = 0xE400000000000000;
      else
        v55 = 0xE500000000000000;
      v56 = v55;
      String.append(_:)(*(Swift::String *)&v54);
      swift_bridgeObjectRelease(v55);
      v57._countAndFlagsBits = 45;
      v57._object = (void *)0xE100000000000000;
      String.append(_:)(v57);
      v58 = 0.0;
      v59.n128_u64[0] = 0;
      if (v53)
      {
        if (v44)
          v59.n128_u64[0] = v32;
        else
          v59.n128_u64[0] = qword_2F05C0[v81];
      }
      Double.write<A>(to:)(&v97, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v59);
      v60._countAndFlagsBits = 58;
      v60._object = (void *)0xE100000000000000;
      String.append(_:)(v60);
      v61.n128_u64[0] = v88;
      if (((v44 != 0) & v21) != 0)
        v58 = v89;
      else
        v61.n128_f64[0] = 0.0;
      Double.write<A>(to:)(&v97, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v61);
      v62._countAndFlagsBits = 58;
      v62._object = (void *)0xE100000000000000;
      String.append(_:)(v62);
      v63.n128_f64[0] = v58;
      Double.write<A>(to:)(&v97, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v63);
      v64._countAndFlagsBits = 58;
      v64._object = (void *)0xE100000000000000;
      String.append(_:)(v64);
      if (v53)
      {
        if (v44)
        {
          if ((v34 & 1) != 0)
            v65 = 1;
          else
            v65 = 2;
        }
        else if (v93 > 4)
        {
          v65 = 1;
        }
        else
        {
          v65 = qword_2F05F0[v81];
        }
      }
      else
      {
        v65 = 0;
      }
      v66 = (id)NSStringFromBEBookContentLayoutJustification(v65);
      if (!v66)
      {
        __break(1u);
LABEL_46:
        type metadata accessor for BookLayoutMode(0);
        *(_QWORD *)(v1 - 128) = v21;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v80, v1 - 128, v80, &type metadata for UInt);
        __break(1u);
        JUMPOUT(0x18B99CLL);
      }
      v67 = (__CFString *)v66;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
      v70 = v69;

      v71._countAndFlagsBits = v68;
      v71._object = v70;
      String.append(_:)(v71);
      swift_bridgeObjectRelease(v70);
      v72 = v97;
      v73 = v98;
      v92 = v97;
      v74 = sub_319AC(&qword_3BBEB0);
      v75 = swift_allocObject(v74, 112);
      *(_OWORD *)(v75 + 16) = xmmword_2EFA60;
      *(_QWORD *)(v75 + 32) = v87;
      *(_QWORD *)(v75 + 40) = v86;
      *(_QWORD *)(v75 + 48) = v85;
      *(_QWORD *)(v75 + 56) = v84;
      *(_QWORD *)(v75 + 64) = v96;
      *(_QWORD *)(v75 + 72) = v83;
      *(_QWORD *)(v75 + 80) = v95;
      *(_QWORD *)(v75 + 88) = v82;
      *(_QWORD *)(v75 + 96) = v72;
      *(_QWORD *)(v75 + 104) = v73;
      v97 = v75;
      swift_bridgeObjectRetain(v84);
      swift_bridgeObjectRetain(v83);
      swift_bridgeObjectRetain(v82);
      swift_bridgeObjectRetain(v73);
      v76 = sub_319AC((uint64_t *)&unk_3B8C90);
      v77 = sub_3DCC0((unint64_t *)&qword_3B9380, (uint64_t *)&unk_3B8C90, (uint64_t)&protocol conformance descriptor for [A]);
      v90 = BidirectionalCollection<>.joined(separator:)(45, 0xE100000000000000, v76, v77);
      swift_bridgeObjectRelease(v75);
      v78 = swift_allocObject(v74, 112);
      *(_OWORD *)(v78 + 16) = xmmword_2EFA60;
      *(_QWORD *)(v78 + 32) = 0x6465746361646572;
      *(_QWORD *)(v78 + 40) = 0xE90000000000002DLL;
      *(_QWORD *)(v78 + 48) = v85;
      *(_QWORD *)(v78 + 56) = v84;
      *(_QWORD *)(v78 + 64) = v96;
      *(_QWORD *)(v78 + 72) = v83;
      *(_QWORD *)(v78 + 80) = v95;
      *(_QWORD *)(v78 + 88) = v82;
      *(_QWORD *)(v78 + 96) = v92;
      *(_QWORD *)(v78 + 104) = v73;
      v97 = v78;
      BidirectionalCollection<>.joined(separator:)(45, 0xE100000000000000, v76, v77);
      swift_bridgeObjectRelease(v78);
      return v90;
    default:
      goto LABEL_46;
  }
}

Swift::tuple_key_String_logKey_String __swiftcall BookContentLayoutProviding.makeKeys()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  char *v5;
  Swift::tuple_key_String_logKey_String result;

  v2 = v1;
  v3 = v0;
  (*(void (**)(void))(v1 + 8))();
  v4._countAndFlagsBits = 45;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v5 = (char *)&loc_18BA48 + dword_18C364[(*(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2)];
  __asm { BR              X10 }
  return result;
}

uint64_t sub_18BA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v36._countAndFlagsBits = 0x6465786966;
  v36._object = (void *)0xE500000000000000;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(0xE500000000000000);
  v37 = v35(v34, v33);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_18BAF0 + dword_18C374[v37]))(v37, v38, v39, v40, v41, v42, v43, v44, a9, a10, a11, a12, a13, a14, a15, a16, a33, a32, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_18BB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  __n128 v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  Swift::String v16;
  uint64_t v17;
  double v18;
  Swift::String v19;
  void *v20;
  __n128 v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  Swift::String v33;
  void (*v34)(double *__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  Swift::String v43;
  Swift::String v44;
  char v45;
  BOOL v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  Swift::String v50;
  int v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  Swift::String v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  __n128 v60;
  Swift::String v61;
  uint64_t v62;
  unint64_t v63;
  __n128 v64;
  Swift::String v65;
  uint64_t v66;
  unint64_t v67;
  __n128 v68;
  Swift::String v69;
  char v70;
  int v71;
  uint64_t v72;
  const __CFString *v74;
  __CFString *v75;
  uint64_t v76;
  void *v77;
  void *v78;
  Swift::String v79;
  uint64_t v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  double v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  double v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;

  v4._countAndFlagsBits = 0x6465786966;
  v4._object = (void *)0xE500000000000000;
  String.append(_:)(v4);
  v5 = swift_bridgeObjectRelease(0xE500000000000000);
  v6 = v106;
  v7 = v107;
  v106 = 0.0;
  *(_QWORD *)&v107 = 0xE000000000000000;
  v101 = (*(double (**)(uint64_t, uint64_t, __n128))(v0 + 80))(v2, v0, v5);
  *(_QWORD *)&v102 = v8;
  type metadata accessor for CGSize(0);
  v10 = v9;
  _print_unlocked<A, B>(_:_:)(&v101, &v106, v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v11._countAndFlagsBits = 45;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  v101 = (*(double (**)(uint64_t, uint64_t))(v0 + 48))(v2, v0);
  *(_QWORD *)&v102 = v12;
  _print_unlocked<A, B>(_:_:)(&v101, &v106, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v13._countAndFlagsBits = 45;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v101 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v0 + 120))(v2, v0));
  v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(object);
  v16._countAndFlagsBits = 45;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 136))(v2, v0);
  v19._countAndFlagsBits = Double.description.getter(v17, v18);
  v20 = v19._object;
  String.append(_:)(v19);
  v21 = swift_bridgeObjectRelease(v20);
  v22 = v106;
  v23 = v107;
  v106 = 0.0;
  *(_QWORD *)&v107 = 0xE000000000000000;
  *(double *)&v24 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 24))(v2, v0, v21));
  v92 = v23;
  v93 = v22;
  v25 = 0xE800000000000000;
  v26 = 0x6465767265736572;
  switch(v24)
  {
    case 0:
      goto LABEL_5;
    case 1:
      v25 = 0xE500000000000000;
      v26 = 0x6465676170;
      goto LABEL_5;
    case 2:
      v26 = 0x6C61636974726576;
      goto LABEL_5;
    case 3:
      v25 = 0xEA00000000006C61;
      v26 = 0x746E6F7A69726F68;
LABEL_5:
      v27 = v25;
      String.append(_:)(*(Swift::String *)&v26);
      v28 = swift_bridgeObjectRelease(v25);
      v29 = v106;
      v91 = v107;
      v30 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v0 + 144))(v2, v0, v28);
      *(_QWORD *)(v3 - 120) = Double.description.getter(v30, round(v31 * 100.0));
      *(_QWORD *)(v3 - 112) = v32;
      v33._countAndFlagsBits = 45;
      v33._object = (void *)0xE100000000000000;
      String.append(_:)(v33);
      v34 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v0 + 160);
      v34(&v106, v2, v0);
      LOWORD(v101) = LOWORD(v106);
      BYTE2(v101) = BYTE2(v106);
      v98 = v107;
      v102 = v107;
      v103 = v108;
      v104 = v109;
      v105 = v110;
      v35 = BookThemeEntity.fontFamily.getter();
      v37 = v36;
      swift_bridgeObjectRelease(v98);
      v38 = swift_bridgeObjectRelease(v37);
      v39 = HIBYTE(v37) & 0xF;
      if ((v37 & 0x2000000000000000) == 0)
        v39 = v35 & 0xFFFFFFFFFFFFLL;
      v97 = v6;
      if (v39)
      {
        ((void (*)(double *__return_ptr, uint64_t, uint64_t, __n128))v34)(&v106, v2, v0, v38);
        LOWORD(v101) = LOWORD(v106);
        BYTE2(v101) = BYTE2(v106);
        v99 = v107;
        v102 = v107;
        v103 = v108;
        v104 = v109;
        v105 = v110;
        v40 = BookThemeEntity.fontFamily.getter();
        v42 = v41;
        swift_bridgeObjectRelease(v99);
      }
      else
      {
        v42 = (void *)0xE800000000000000;
        v40 = 0x6C616E696769726FLL;
      }
      v43._countAndFlagsBits = v40;
      v43._object = v42;
      String.append(_:)(v43);
      swift_bridgeObjectRelease(v42);
      v100 = *(_QWORD *)(v3 - 120);
      v90 = *(_QWORD *)(v3 - 112);
      v106 = 0.0;
      *(_QWORD *)&v107 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      v101 = v106;
      *(_QWORD *)&v102 = v107;
      v44._countAndFlagsBits = 978539598;
      v44._object = (void *)0xE400000000000000;
      String.append(_:)(v44);
      v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 152))(v2, v0);
      v46 = (v45 & 1) == 0;
      if ((v45 & 1) != 0)
        v47 = 1702195828;
      else
        v47 = 0x65736C6166;
      if (v46)
        v48 = 0xE500000000000000;
      else
        v48 = 0xE400000000000000;
      v49 = v48;
      String.append(_:)(*(Swift::String *)&v47);
      swift_bridgeObjectRelease(v48);
      v50._countAndFlagsBits = 0x3A646C6F422DLL;
      v50._object = (void *)0xE600000000000000;
      String.append(_:)(v50);
      v34(&v106, v2, v0);
      if ((_QWORD)v107)
      {
        v51 = BYTE8(v107) & 1;
        swift_bridgeObjectRelease(v107);
      }
      else
      {
        v52 = LOBYTE(v106);
        swift_bridgeObjectRelease(0);
        v51 = v52 == 3;
      }
      if (v51)
        v53 = 1702195828;
      else
        v53 = 0x65736C6166;
      if (v51)
        v54 = 0xE400000000000000;
      else
        v54 = 0xE500000000000000;
      v55 = v54;
      String.append(_:)(*(Swift::String *)&v53);
      swift_bridgeObjectRelease(v54);
      v56._countAndFlagsBits = 45;
      v56._object = (void *)0xE100000000000000;
      String.append(_:)(v56);
      v34(&v106, v2, v0);
      v57 = SLOBYTE(v106);
      v58 = LOBYTE(v106) != 0;
      if ((_QWORD)v107)
        v58 = BYTE9(v107);
      if ((v58 & 1) != 0)
      {
        if ((_QWORD)v107)
        {
          v59 = v108;
          v60 = swift_bridgeObjectRelease(v107);
        }
        else
        {
          v60 = swift_bridgeObjectRelease(0);
          v59 = qword_2F05C0[v57];
        }
      }
      else
      {
        v60 = swift_bridgeObjectRelease(v107);
        v59 = 0;
      }
      v60.n128_u64[0] = v59;
      Double.write<A>(to:)(&v101, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v60);
      v61._countAndFlagsBits = 58;
      v61._object = (void *)0xE100000000000000;
      String.append(_:)(v61);
      v34(&v106, v2, v0);
      v62 = v107;
      if ((_QWORD)v107)
      {
        if ((BYTE9(v107) & 1) != 0)
        {
          v63 = *((_QWORD *)&v108 + 1);
          v64 = swift_bridgeObjectRelease(v107);
          goto LABEL_38;
        }
      }
      else if (LOBYTE(v106))
      {
        v62 = 0;
      }
      v64 = swift_bridgeObjectRelease(v62);
      v63 = 0;
LABEL_38:
      v64.n128_u64[0] = v63;
      Double.write<A>(to:)(&v101, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v64);
      v65._countAndFlagsBits = 58;
      v65._object = (void *)0xE100000000000000;
      String.append(_:)(v65);
      v34(&v106, v2, v0);
      v66 = v107;
      if ((_QWORD)v107)
      {
        if ((BYTE9(v107) & 1) != 0)
        {
          v67 = v109;
          v68 = swift_bridgeObjectRelease(v107);
          goto LABEL_44;
        }
      }
      else if (LOBYTE(v106))
      {
        v66 = 0;
      }
      v68 = swift_bridgeObjectRelease(v66);
      v67 = 0;
LABEL_44:
      v68.n128_u64[0] = v67;
      Double.write<A>(to:)(&v101, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v68);
      v69._countAndFlagsBits = 58;
      v69._object = (void *)0xE100000000000000;
      String.append(_:)(v69);
      v24 = v1;
      v34(&v106, v2, v0);
      v70 = LOBYTE(v106) != 0;
      if ((_QWORD)v107)
        v70 = BYTE9(v107);
      if ((v70 & 1) != 0)
      {
        if ((_QWORD)v107)
          v71 = BYTE8(v109) & 1;
        else
          v71 = LOBYTE(v106) > 4u || (LOBYTE(v106) & 0x1F) == 1;
        swift_bridgeObjectRelease(v107);
        if (v71)
          v72 = 1;
        else
          v72 = 2;
      }
      else
      {
        swift_bridgeObjectRelease(v107);
        v72 = 0;
      }
      v74 = (id)NSStringFromBEBookContentLayoutJustification(v72);
      if (!v74)
      {
        __break(1u);
LABEL_62:
        type metadata accessor for BookLayoutMode(0);
        v101 = *(double *)&v24;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v88, &v101, v88, &type metadata for UInt);
        __break(1u);
        JUMPOUT(0x18C364);
      }
      v75 = (__CFString *)v74;
      v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
      v78 = v77;

      v79._countAndFlagsBits = v76;
      v79._object = v78;
      String.append(_:)(v79);
      swift_bridgeObjectRelease(v78);
      v81 = v101;
      v80 = v102;
      v89 = v101;
      v82 = sub_319AC(&qword_3BBEB0);
      *(double *)&v83 = COERCE_DOUBLE(swift_allocObject(v82, 112));
      *(_OWORD *)(v83 + 16) = xmmword_2EFA60;
      *(_QWORD *)(v83 + 32) = v95;
      *(_QWORD *)(v83 + 40) = v94;
      *(double *)(v83 + 48) = v93;
      *(_QWORD *)(v83 + 56) = v92;
      *(double *)(v83 + 64) = v29;
      *(_QWORD *)(v83 + 72) = v91;
      *(_QWORD *)(v83 + 80) = v100;
      *(_QWORD *)(v83 + 88) = v90;
      *(double *)(v83 + 96) = v81;
      *(_QWORD *)(v83 + 104) = v80;
      v106 = *(double *)&v83;
      swift_bridgeObjectRetain(v92);
      swift_bridgeObjectRetain(v91);
      swift_bridgeObjectRetain(v90);
      swift_bridgeObjectRetain(v80);
      v84 = sub_319AC((uint64_t *)&unk_3B8C90);
      v85 = sub_3DCC0((unint64_t *)&qword_3B9380, (uint64_t *)&unk_3B8C90, (uint64_t)&protocol conformance descriptor for [A]);
      v96 = BidirectionalCollection<>.joined(separator:)(45, 0xE100000000000000, v84, v85);
      swift_bridgeObjectRelease(v83);
      *(double *)&v86 = COERCE_DOUBLE(swift_allocObject(v82, 112));
      *(_OWORD *)(v86 + 16) = xmmword_2EFA60;
      *(double *)(v86 + 32) = v97;
      *(_QWORD *)(v86 + 40) = v7;
      *(double *)(v86 + 48) = v93;
      *(_QWORD *)(v86 + 56) = v92;
      *(double *)(v86 + 64) = v29;
      *(_QWORD *)(v86 + 72) = v91;
      *(_QWORD *)(v86 + 80) = v100;
      *(_QWORD *)(v86 + 88) = v90;
      *(double *)(v86 + 96) = v89;
      *(_QWORD *)(v86 + 104) = v80;
      v106 = *(double *)&v86;
      BidirectionalCollection<>.joined(separator:)(45, 0xE100000000000000, v84, v85);
      swift_bridgeObjectRelease(v86);
      return v96;
    default:
      goto LABEL_62;
  }
}

BOOL BookContentLayoutProviding.isPortraitLayout.getter(uint64_t a1, uint64_t a2)
{
  double (*v4)(void);
  double v5;
  double v6;

  v4 = *(double (**)(void))(a2 + 80);
  v5 = v4();
  ((void (*)(uint64_t, uint64_t))v4)(a1, a2);
  return v5 < v6;
}

void sub_18C3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  ObjectType = swift_getObjectType(v2);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 16);
  v6 = swift_unknownObjectRetain(v2);
  LOBYTE(v3) = v5(ObjectType, v3, v6);
  swift_unknownObjectRelease(v2);
  if ((v3 & 1) != 0)
  {
    BookThemeEntity.marginAdjustmentScaleFactor.getter();
  }
  else
  {
    BookThemeEntity.marginAdjustmentScaleFactor.getter();
    BookThemeEntity.marginAdjustmentScaleFactor.getter();
    if (qword_3B58A8 != -1)
      swift_once(&qword_3B58A8, sub_18DDE4);
  }
}

double sub_18C554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  __n128 v8;
  double v9;
  void (*v10)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  double v11;
  __n128 v12;
  double v13;
  double v14;
  double v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v4 = (*(uint64_t (**)(void))(a2 + 32))();
  v6 = v5;
  ObjectType = swift_getObjectType(v4);
  LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  v8 = swift_unknownObjectRelease(v4);
  if ((v6 & 1) != 0)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(a2 + 160))(&v25, a1, a2, v8);
    LOWORD(v20) = v25;
    BYTE2(v20) = BYTE2(v25);
    v17 = v26;
    v21 = v26;
    v22 = v27;
    v23 = v28;
    v24 = v29;
    v9 = BookThemeEntity.marginAdjustmentScaleFactor.getter();
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v10 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(a2 + 160);
    v10(&v25, a1, a2, v8);
    LOWORD(v20) = v25;
    BYTE2(v20) = BYTE2(v25);
    v18 = v26;
    v21 = v26;
    v22 = v27;
    v23 = v28;
    v24 = v29;
    v11 = BookThemeEntity.marginAdjustmentScaleFactor.getter();
    v12 = swift_bridgeObjectRelease(v18);
    v10(&v20, a1, a2, v12);
    v19 = v21;
    v13 = BookThemeEntity.marginAdjustmentScaleFactor.getter();
    swift_bridgeObjectRelease(v19);
    v14 = v13 + -1.0;
    if (qword_3B58A8 != -1)
      swift_once(&qword_3B58A8, sub_18DDE4);
    v15 = v14 * *(double *)&qword_3CF2C0;
    if (v14 * *(double *)&qword_3CF2C0 < 0.0)
      v15 = 0.0;
    return v11 + v15;
  }
  return v9;
}

uint64_t ContentLayoutProvider.fixedLayoutSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void sub_18C774()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v2 = sub_18D060();
    v3 = *(double *)(v0 + 160);
    sub_18A4A4();
    v5 = v4;
    v7 = sub_18AA70();
    v8 = *(_QWORD *)(v0 + 64);
    v9 = v3 - (v5 + v7);
    switch(v8)
    {
      case 0:
        if (qword_3B5870 != -1)
          swift_once(&qword_3B5870, sub_189FDC);
        v10 = type metadata accessor for Logger(0);
        sub_555F0(v10, (uint64_t)qword_3BF5F0);
        v11 = swift_retain_n(v1);
        v12 = Logger.logObject.getter(v11);
        v13 = static os_log_type_t.error.getter(v12);
        if (os_log_type_enabled(v12, v13))
        {
          v14 = swift_slowAlloc(22, -1);
          v15 = swift_slowAlloc(64, -1);
          v32 = v15;
          *(_DWORD *)v14 = 136315394;
          v16 = _typeName(_:qualified:)(*(_QWORD *)v1, 0);
          v18 = v17;
          v31 = sub_33524(v16, v17, &v32);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v14 + 4);
          swift_release_n(v1);
          swift_bridgeObjectRelease(v18);
          *(_WORD *)(v14 + 12) = 2080;
          v19 = *(_QWORD *)(v1 + 88);
          v20 = *(_QWORD *)(v1 + 96);
          swift_bridgeObjectRetain(v20);
          v31 = sub_33524(v19, v20, &v32);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v14 + 14);
          swift_release_n(v1);
          swift_bridgeObjectRelease(v20);
          swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v15, -1, -1);
          swift_slowDealloc(v14, -1, -1);

        }
        else
        {

          swift_release_n(v1);
        }
        goto LABEL_11;
      case 1:
LABEL_11:
        v27 = *(double *)(v1 + 152);
        v28 = v27 - v2 * (double)(sub_18D978() + 1);
        v6 = sub_18D978();
        v26 = v28 / (double)v6;
        goto LABEL_12;
      case 2:
        v26 = *(double *)(v1 + 152) - (v2 + v2);
        goto LABEL_12;
      case 3:
        v26 = *(double *)(v1 + 152);
LABEL_12:
        CGFloat.ceiling.getter(v6, v26);
        CGFloat.ceiling.getter(v29, v9);
        break;
      default:
        type metadata accessor for BookLayoutMode(0);
        v32 = v8;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v30, &v32, v30, &type metadata for UInt);
        __break(1u);
        break;
    }
  }
  else
  {
    v22 = *(double *)(v0 + 40);
    v21 = *(double *)(v0 + 48);
    v23 = *(double *)(v0 + 152);
    v24 = *(double *)(v0 + 160);
    v25 = sub_18D978();
    CGSize.scaledToFit(in:times:horizontally:)(v25, *(_QWORD *)(v0 + 64) != 2, v23, v24, v22, v21);
  }
}

double sub_18CA80()
{
  uint64_t v0;
  double v1;
  uint64_t v2;
  double v3;
  double v4;

  if (*(_QWORD *)(v0 + 64) == 1 && *(_BYTE *)(v0 + 56) == 1 && sub_18D978() == 2)
  {
    v1 = sub_18D060();
    v3 = CGFloat.ceiling.getter(v2, *(double *)(v0 + 152) - (v1 + v1));
    sub_18C774();
  }
  else
  {
    sub_18C774();
    return v4;
  }
  return v3;
}

double ContentLayoutProvider.additionalContentInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 120);
}

double ContentLayoutProvider.availableSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 152);
}

double ContentLayoutProvider.textZoomFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 176);
}

uint64_t ContentLayoutProvider.useNewTextStyling.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 184);
}

uint64_t ContentLayoutProvider.theme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_BYTE *)(v1 + 193);
  v3 = *(_BYTE *)(v1 + 194);
  v4 = *(_QWORD *)(v1 + 248);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 192);
  *(_BYTE *)(a1 + 1) = v2;
  *(_BYTE *)(a1 + 2) = v3;
  v5 = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 216);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 232);
  *(_QWORD *)(a1 + 56) = v4;
  return swift_bridgeObjectRetain(v5);
}

double sub_18CB4C()
{
  uint64_t v0;
  double result;

  if ((*(_BYTE *)(v0 + 280) & 1) == 0)
    return *(double *)(v0 + 272);
  sub_18CB88(v0);
  *(double *)(v0 + 272) = result;
  *(_BYTE *)(v0 + 280) = 0;
  return result;
}

void sub_18CB88(uint64_t a1)
{
  double v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  id v9;
  void *v10;
  Class isa;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  NSString *v17;
  id v18;
  unint64_t v19;
  id v20;
  NSString v21;
  Class v22;
  const __CFAttributedString *v23;
  const __CTLine *v24;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  _BYTE v29[80];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  CGRect BoundsWithOptions;
  CGRect v35;

  if (qword_3B58B0 != -1)
    swift_once(&qword_3B58B0, sub_18DDF4);
  v2 = *(double *)&qword_3CF2C8 * *(double *)(a1 + 176);
  v3 = *(_BYTE *)(a1 + 193);
  v4 = *(_BYTE *)(a1 + 194);
  v5 = *(_QWORD *)(a1 + 248);
  v29[72] = *(_BYTE *)(a1 + 192);
  v29[73] = v3;
  v29[74] = v4;
  v30 = *(_OWORD *)(a1 + 200);
  v31 = *(_OWORD *)(a1 + 216);
  v32 = *(_OWORD *)(a1 + 232);
  v33 = v5;
  BookThemeEntity.fontFamily.getter();
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithName:size:", v8, v2);
  swift_bridgeObjectRelease(v7);

  if (v9)
  {
    v10 = (void *)objc_opt_self(NSNumberFormatter);
    sub_34450(0, (unint64_t *)&qword_3B8EF0, NSNumber_ptr);
    isa = NSNumber.init(integerLiteral:)(1234567890).super.super.isa;
    v12 = objc_msgSend(v10, "localizedStringFromNumber:numberStyle:", isa, 0);

    static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v14 = v13;

    v15 = sub_319AC(&qword_3B6EF8);
    inited = swift_initStackObject(v15, v29);
    *(_OWORD *)(inited + 16) = xmmword_2E5F80;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 64) = sub_34450(0, (unint64_t *)&qword_3B6F00, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v9;
    v17 = NSFontAttributeName;
    v18 = v9;
    v19 = sub_38058(inited);
    v20 = objc_allocWithZone((Class)NSAttributedString);
    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    type metadata accessor for Key(0);
    sub_520E0();
    v22 = Dictionary._bridgeToObjectiveC()().super.isa;
    v23 = (const __CFAttributedString *)objc_msgSend(v20, "initWithString:attributes:", v21, v22, swift_bridgeObjectRelease(v19).n128_f64[0]);

    v24 = CTLineCreateWithAttributedString(v23);
    BoundsWithOptions = CTLineGetBoundsWithOptions(v24, 1uLL);
    x = BoundsWithOptions.origin.x;
    y = BoundsWithOptions.origin.y;
    width = BoundsWithOptions.size.width;
    height = BoundsWithOptions.size.height;
    if (qword_3B58B8 != -1)
      swift_once(&qword_3B58B8, sub_18DE04);
    v35.origin.x = x;
    v35.origin.y = y;
    v35.size.width = width;
    v35.size.height = height;
    CGRectGetHeight(v35);

  }
  else if (qword_3B58B8 != -1)
  {
    swift_once(&qword_3B58B8, sub_18DE04);
  }
}

uint64_t ContentLayoutProvider.__allocating_init(contentLayoutProvider:textZoomFactor:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  double left;
  double bottom;
  double right;
  uint64_t ObjectType;
  id v20;
  uint64_t v21;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28[8];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v4 = *(_QWORD *)(a1 + 24);
  v26 = *(_QWORD *)(a1 + 40);
  v27 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(a1 + 48);
  v24 = *(_BYTE *)(a1 + 56);
  v5 = *(double *)(a1 + 152);
  v6 = *(double *)(a1 + 160);
  v7 = *(_QWORD *)(a1 + 72);
  v23 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(void **)(a1 + 168);
  v10 = *(_BYTE *)(a1 + 184);
  v11 = *(_BYTE *)(a1 + 193);
  v12 = *(_BYTE *)(a1 + 194);
  v13 = *(_QWORD *)(a1 + 248);
  v14 = *(_BYTE *)(a1 + 32);
  v28[0] = *(_BYTE *)(a1 + 192);
  v28[1] = v11;
  v28[2] = v12;
  v15 = *(_OWORD *)(a1 + 216);
  v29 = *(_OWORD *)(a1 + 200);
  v30 = v15;
  v31 = *(_OWORD *)(a1 + 232);
  v32 = v13;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  ObjectType = swift_getObjectType(v7);
  swift_bridgeObjectRetain(v4);
  swift_unknownObjectRetain(v7);
  v20 = v9;
  swift_bridgeObjectRetain(v29);
  v21 = sub_18FA18(v27, v4, v14, v26, v25, v24, v23, v7, v5, v6, UIEdgeInsetsZero.top, left, bottom, right, a2, v20, v10, v28, v2,
          ObjectType,
          v8);
  swift_release();
  return v21;
}

uint64_t ContentLayoutProvider.__allocating_init(contentLayoutProvider:newTheme:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_1903C8(a1, a2);
  swift_release();
  return v2;
}

double sub_18D060()
{
  return sub_18D41C(&OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___gutterWidth, (double (*)(uint64_t))sub_18D074);
}

void sub_18D074(uint64_t a1)
{
  uint64_t v2;
  double v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  double v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;

  v2 = *(_QWORD *)(a1 + 64);
  if ((unint64_t)(v2 - 1) < 2)
  {
    v3 = *(double *)(a1 + 152);
    v35 = *(_QWORD *)(a1 + 64);
    if (v2 == 1)
    {
      if (*(_QWORD *)(a1 + 200) && (*(_BYTE *)(a1 + 209) & 1) != 0)
      {
        if (!BYTE1(*(_QWORD *)(a1 + 240)))
          goto LABEL_16;
        if (BYTE1(*(_QWORD *)(a1 + 240)) != 1)
        {
          v14 = *(_QWORD *)(a1 + 80);
          ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 72));
          v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(ObjectType, v14) ^ 1;
LABEL_21:
          v36 = v4;
          goto LABEL_22;
        }
      }
      if ((sub_18D64C() & 1) != 0)
      {
        if ((*(_BYTE *)(a1 + 56) & 1) != 0)
          LOBYTE(v4) = sub_18B0CC() >= 90.0;
        else
          LOBYTE(v4) = *(double *)(a1 + 40) <= *(double *)(a1 + 152) * 0.5;
        goto LABEL_21;
      }
    }
LABEL_16:
    v36 = 0;
    goto LABEL_22;
  }
  if (v2 == 3)
    return;
  if (v2)
  {
    type metadata accessor for BookLayoutMode(0);
    v38 = v2;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v31, &v38, v31, &type metadata for UInt);
    __break(1u);
    return;
  }
  if (qword_3B5870 != -1)
    swift_once(&qword_3B5870, sub_189FDC);
  v5 = type metadata accessor for Logger(0);
  sub_555F0(v5, (uint64_t)qword_3BF5F0);
  v6 = swift_retain_n(a1);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  v35 = 0;
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v38 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = _typeName(_:qualified:)(*(_QWORD *)a1, 0);
    v13 = v12;
    v37 = sub_33524(v11, v12, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v9 + 4);
    swift_release_n(a1);
    swift_bridgeObjectRelease(v13);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_release_n(a1);
  }
  v36 = 0;
  v3 = *(double *)(a1 + 152);
LABEL_22:
  v16 = *(double *)(a1 + 176);
  v17 = *(_BYTE *)(a1 + 192);
  v18 = *(_BYTE *)(a1 + 193);
  v19 = *(_BYTE *)(a1 + 194);
  v21 = *(_QWORD *)(a1 + 200);
  v20 = *(_QWORD *)(a1 + 208);
  v22 = *(_QWORD *)(a1 + 216);
  v23 = *(_QWORD *)(a1 + 224);
  v24 = *(_QWORD *)(a1 + 232);
  v25 = *(_QWORD *)(a1 + 240);
  v26 = *(_QWORD *)(a1 + 248);
  LOBYTE(v38) = v17;
  BYTE1(v38) = v18;
  BYTE2(v38) = v19;
  v39 = v21;
  v40 = v20;
  v41 = v22;
  v42 = v23;
  v32 = v25;
  v33 = v24;
  v43 = v24;
  v44 = v25;
  v34 = v26;
  v45 = v26;
  v27 = BookThemeEntity.fontFamily.getter();
  v29 = v28;
  v30 = sub_18DEE8(v27, v28, v16);
  swift_bridgeObjectRelease(v29);
  if (*(unsigned __int8 *)(a1 + 32) - 1 >= 2)
  {
    v38 = v35;
    LOBYTE(v39) = v17;
    BYTE1(v39) = v18;
    BYTE2(v39) = v19;
    v40 = v21;
    v41 = v20;
    v42 = v22;
    v43 = v23;
    v44 = v33;
    v45 = v32;
    v46 = v34;
    v47 = 0x4056800000000000;
    v48 = v30;
    sub_705F0(v36 & 1, v3);
  }
}

double sub_18D408()
{
  return sub_18D41C(&OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___chromeGutterWidth, (double (*)(uint64_t))sub_18D45C);
}

double sub_18D41C(_QWORD *a1, double (*a2)(uint64_t))
{
  uint64_t v2;
  _BYTE *v3;
  double result;

  v3 = (_BYTE *)(v2 + *a1);
  if ((v3[8] & 1) == 0)
    return *(double *)v3;
  result = a2(v2);
  *(double *)v3 = result;
  v3[8] = 0;
  return result;
}

void sub_18D45C(uint64_t a1)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t ObjectType;
  double v6;
  double v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1 != 3)
  {
    if (v1 == 1)
    {
      if (*(_QWORD *)(a1 + 200) && (*(_BYTE *)(a1 + 209) & 1) != 0)
      {
        if (!BYTE1(*(_QWORD *)(a1 + 240)))
          goto LABEL_10;
        if (BYTE1(*(_QWORD *)(a1 + 240)) != 1)
        {
          v4 = *(_QWORD *)(a1 + 80);
          ObjectType = swift_getObjectType(*(_QWORD *)(a1 + 72));
          v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4) ^ 1;
LABEL_14:
          v11 = v3;
LABEL_15:
          v6 = *(double *)(a1 + 152);
          v7 = *(double *)(a1 + 176);
          v8 = BookThemeEntity.fontFamily.getter();
          v10 = v9;
          sub_18DEE8(v8, v9, v7);
          swift_bridgeObjectRelease(v10);
          if (*(unsigned __int8 *)(a1 + 32) - 1 >= 2)
            sub_705F0(v11 & 1, v6);
          return;
        }
      }
      if ((sub_18D64C() & 1) != 0)
      {
        if ((*(_BYTE *)(a1 + 56) & 1) != 0)
          LOBYTE(v3) = sub_18B0CC() >= 90.0;
        else
          LOBYTE(v3) = *(double *)(a1 + 40) <= *(double *)(a1 + 152) * 0.5;
        goto LABEL_14;
      }
    }
LABEL_10:
    v11 = 0;
    goto LABEL_15;
  }
}

uint64_t sub_18D64C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  v1 = OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___spreadPagesAllowedForViewport;
  v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___spreadPagesAllowedForViewport);
  if (v2 == 2)
  {
    v3 = sub_18D694(v0);
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_18D694(uint64_t a1)
{
  double v2;
  BOOL v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;

  v2 = *(double *)(a1 + 160);
  if (*(double *)(a1 + 152) >= 896.0)
  {
    v3 = v2 >= 500.0;
    if ((CGSize.isLandscape.getter() & 1) != 0)
    {
      if (v2 < 500.0)
        goto LABEL_28;
      goto LABEL_26;
    }
  }
  else
  {
    if ((CGSize.isLandscape.getter() & 1) != 0)
      goto LABEL_28;
    v3 = 0;
  }
  v4 = *(void **)(a1 + 168);
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryExtraSmall);
  v7 = v6;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v5 == v8 && v7 == v9)
  {
    v28 = v4;
    swift_bridgeObjectRelease_n(v7, 2);
LABEL_22:

    if (!v3)
      goto LABEL_28;
    goto LABEL_26;
  }
  v11 = v9;
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  v13 = v4;
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  if ((v12 & 1) != 0)
    goto LABEL_22;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategorySmall);
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  if (v14 == v17 && v16 == v18)
  {
    swift_bridgeObjectRelease_n(v16, 2);
  }
  else
  {
    v20 = v18;
    v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v17, v18, 0);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v20);
    if ((v21 & 1) == 0)
    {
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(UIContentSizeCategoryMedium);
      v24 = v23;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v27 = v25;
      if (v22 == v26 && v24 == v25)
      {

        swift_bridgeObjectRelease_n(v24, 2);
        if (!v3)
          goto LABEL_28;
        goto LABEL_26;
      }
      v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v26, v25, 0);

      swift_bridgeObjectRelease(v24);
      swift_bridgeObjectRelease(v27);
      if (v3)
        return v29 & 1;
LABEL_28:
      v29 = 0;
      return v29 & 1;
    }
  }

  if (!v3)
    goto LABEL_28;
LABEL_26:
  v29 = 1;
  return v29 & 1;
}

uint64_t sub_18D8B4()
{
  uint64_t v0;
  int v1;
  uint64_t v3;
  uint64_t ObjectType;

  if (*(_QWORD *)(v0 + 64) != 1)
    goto LABEL_9;
  if (*(_QWORD *)(v0 + 200) && (*(_BYTE *)(v0 + 209) & 1) != 0)
  {
    v1 = BYTE1(*(_QWORD *)(v0 + 240));
    if (!BYTE1(*(_QWORD *)(v0 + 240)))
      return v1 & 1;
    if (v1 != 1)
    {
      v3 = *(_QWORD *)(v0 + 80);
      ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 72));
      LOBYTE(v1) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3) ^ 1;
      return v1 & 1;
    }
  }
  if ((sub_18D64C() & 1) == 0)
  {
LABEL_9:
    LOBYTE(v1) = 0;
    return v1 & 1;
  }
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
    LOBYTE(v1) = sub_18B0CC() >= 90.0;
  else
    LOBYTE(v1) = *(double *)(v0 + 40) <= *(double *)(v0 + 152) * 0.5;
  return v1 & 1;
}

uint64_t sub_18D978()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t ObjectType;

  if (*(_QWORD *)(v0 + 64) != 1)
    return 1;
  if (!*(_QWORD *)(v0 + 200) || (*(_BYTE *)(v0 + 209) & 1) == 0)
    goto LABEL_6;
  if (!BYTE1(*(_QWORD *)(v0 + 240)))
    return 1;
  if (BYTE1(*(_QWORD *)(v0 + 240)) != 1)
  {
    v2 = *(_QWORD *)(v0 + 80);
    ObjectType = swift_getObjectType(*(_QWORD *)(v0 + 72));
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2) & 1) == 0)
      return 2;
  }
  else
  {
LABEL_6:
    if ((sub_18D64C() & 1) != 0)
    {
      if (*(_BYTE *)(v0 + 56) == 1)
      {
        if (sub_18B0CC() >= 90.0)
          return 2;
      }
      else if (*(double *)(v0 + 40) <= *(double *)(v0 + 152) * 0.5)
      {
        return 2;
      }
    }
  }
  return 1;
}

void sub_18DA3C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  double v8;

  v1 = v0 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___semanticSideInset;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___semanticSideInset + 8) & 1) != 0)
  {
    v2 = 0.0;
    if (*(_QWORD *)(v0 + 64) != 3)
    {
      v3 = *(double *)(v0 + 152);
      v4 = *(double *)(v0 + 176);
      v5 = BookThemeEntity.fontFamily.getter();
      v7 = v6;
      sub_18DEE8(v5, v6, v4);
      swift_bridgeObjectRelease(v7);
      v8 = 0.0;
      if (*(unsigned __int8 *)(v0 + 32) - 1 > 1)
        sub_705F0(0, v3);
      v2 = ceil(v8);
    }
    *(double *)v1 = v2;
    *(_BYTE *)(v1 + 8) = 0;
  }
}

uint64_t sub_18DB90(uint64_t a1)
{
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[8];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v1 = *(_BYTE *)(a1 + 1);
  v2 = *(_BYTE *)(a1 + 2);
  v3 = *(_QWORD *)(a1 + 56);
  v7[0] = *(_BYTE *)a1;
  v7[1] = v1;
  v7[2] = v2;
  v8 = *(_OWORD *)(a1 + 8);
  v9 = *(_OWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 40);
  v11 = v3;
  swift_bridgeObjectRetain(v8);
  v4 = swift_retain();
  v5 = sub_1903C8(v4, (uint64_t)v7);
  swift_release();
  return v5;
}

uint64_t ContentLayoutProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 112));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 200));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 256));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 264));
  v1 = v0 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t ContentLayoutProvider.__deallocating_deinit()
{
  uint64_t v0;

  ContentLayoutProvider.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

double ContentLayoutProvider.charactersPerLine(textZoomFactor:fontFamily:contentWidth:isFontBolded:letterSpacing:wordSpacing:)(uint64_t a1, unint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  return sub_18FF9C(a1, a2, a8, a9 & 1, a3, a4);
}

uint64_t sub_18DCFC(uint64_t a1)
{
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[8];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v1 = *(_BYTE *)(a1 + 1);
  v2 = *(_BYTE *)(a1 + 2);
  v3 = *(_QWORD *)(a1 + 56);
  v7[0] = *(_BYTE *)a1;
  v7[1] = v1;
  v7[2] = v2;
  v8 = *(_OWORD *)(a1 + 8);
  v9 = *(_OWORD *)(a1 + 24);
  v10 = *(_OWORD *)(a1 + 40);
  v11 = v3;
  swift_bridgeObjectRetain(v8);
  v4 = swift_retain();
  v5 = sub_1903C8(v4, (uint64_t)v7);
  swift_release();
  return v5;
}

void sub_18DD8C()
{
  qword_3CF290 = 0x4030000000000000;
}

void sub_18DD9C()
{
  qword_3CF298 = 0;
}

void sub_18DDA8()
{
  qword_3CF2A0 = 0x4028000000000000;
}

void sub_18DDB8()
{
  qword_3CF2A8 = 0x4028000000000000;
}

void sub_18DDC8()
{
  qword_3CF2B0 = 0x4034000000000000;
}

void sub_18DDD8()
{
  qword_3CF2B8 = 0;
}

void sub_18DDE4()
{
  qword_3CF2C0 = 0x4028000000000000;
}

void sub_18DDF4()
{
  qword_3CF2C8 = 0x4024000000000000;
}

void sub_18DE04()
{
  qword_3CF2D0 = 0x403C000000000000;
}

id BEBookContentLayoutJustification.description.getter(uint64_t a1)
{
  return sub_18DE38(a1, (uint64_t (*)(void))NSStringFromBEBookContentLayoutJustification);
}

id sub_18DE20(uint64_t a1, uint64_t a2)
{
  return sub_18DE94(a1, a2, (uint64_t (*)(_QWORD))NSStringFromBEBookContentLayoutJustification);
}

id BEBookContentPreferredFontWeight.description.getter(uint64_t a1)
{
  return sub_18DE38(a1, (uint64_t (*)(void))NSStringFromBEBookContentPreferredFontWeight);
}

id sub_18DE38(uint64_t a1, uint64_t (*a2)(void))
{
  id result;
  void *v3;
  uint64_t v4;

  result = (id)a2();
  if (result)
  {
    v3 = result;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_18DE88(uint64_t a1, uint64_t a2)
{
  return sub_18DE94(a1, a2, (uint64_t (*)(_QWORD))NSStringFromBEBookContentPreferredFontWeight);
}

id sub_18DE94(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  _QWORD *v3;
  id result;
  void *v5;
  uint64_t v6;

  result = (id)a3(*v3);
  if (result)
  {
    v5 = result;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_18DEE8(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  double v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  BOOL v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  double v26;
  id v27;
  double v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v35;
  double v36;
  uint64_t v37;
  _BYTE v38[24];

  v4 = v3;
  if (a3 > 0.0)
    v7 = a3;
  else
    v7 = 1.0;
  v8 = *(_QWORD *)(v3 + 200);
  v9 = *(_BYTE *)(v3 + 192) == 3;
  v10 = v8 == 0;
  v11 = v8 != 0;
  if (!v10)
    v9 = *(_QWORD *)(v3 + 208);
  v12 = 0.1;
  if ((v9 & 1) == 0)
    v12 = 0.0;
  v13 = *(double *)(v3 + 224) + 0.4;
  if ((v11 & BYTE1(*(_QWORD *)(v3 + 208)) & 1) == 0)
    v13 = 0.4;
  v14 = v13 + v12;
  if (qword_3B5878 != -1)
    swift_once(&qword_3B5878, sub_18DD8C);
  v15 = v14 * (v7 * *(double *)&qword_3CF290);
  if (a2)
  {
    v16 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v16 = a1 & 0xFFFFFFFFFFFFLL;
    if (v16)
    {
      v17 = sub_319AC(&qword_3B66F8);
      v18 = swift_allocObject(v17, 112);
      *(_OWORD *)(v18 + 16) = xmmword_2E5F70;
      *(_QWORD *)(v18 + 56) = &type metadata for String;
      *(_QWORD *)(v18 + 64) = sub_42298();
      *(_QWORD *)(v18 + 32) = a1;
      *(_QWORD *)(v18 + 40) = a2;
      *(_QWORD *)(v18 + 96) = &type metadata for CGFloat;
      *(_QWORD *)(v18 + 104) = sub_190A0C();
      *(double *)(v18 + 72) = v7;
      swift_bridgeObjectRetain(a2);
      v19 = String.init(format:_:)(0x322E253A40253A41, 0xE900000000000066, v18);
      v21 = v20;
      v22 = (_QWORD *)(v3 + 256);
      swift_beginAccess(v3 + 256, v38, 0, 0);
      v23 = *(_QWORD *)(v3 + 256);
      if (*(_QWORD *)(v23 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v4 + 256));
        v24 = sub_3B8A0(v19, v21);
        if ((v25 & 1) != 0)
        {
          v15 = *(double *)(*(_QWORD *)(v23 + 56) + 8 * v24);
          swift_bridgeObjectRelease(v21);
          swift_bridgeObjectRelease(v23);
          return v15;
        }
        swift_bridgeObjectRelease(v23);
      }
      swift_beginAccess(v4 + 264, &v36, 33, 0);
      v26 = sub_18E940(a1, a2, (uint64_t *)(v4 + 264), v7);
      swift_endAccess(&v36);
      v27 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider_corpus), "length");
      v28 = v26 / (double)(uint64_t)v27;
      if (v28 == 0.0)
      {
        v29 = Logger.logObject.getter(v27);
        v30 = static os_log_type_t.error.getter(v29);
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v31 = 134217984;
          v36 = v15;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v31 + 4);
          swift_slowDealloc(v31, -1, -1);
        }

        v28 = v15;
      }
      swift_beginAccess(v22, &v36, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v22);
      v35 = *v22;
      *v22 = 0x8000000000000000;
      sub_17D5B8(v19, v21, isUniquelyReferenced_nonNull_native, v28);
      v33 = *v22;
      *v22 = v35;
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v33);
      swift_endAccess(&v36);
      return v28;
    }
  }
  return v15;
}

double sub_18E240(uint64_t a1, unint64_t a2, double a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  double v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  double v49;
  double v50;
  char v51;
  double v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  double v65;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[16];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[3];
  double v81[2];

  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v69 - v12;
  v81[0] = 1.0;
  v14 = sub_319AC(&qword_3B66F8);
  v15 = swift_allocObject(v14, 112);
  *(_OWORD *)(v15 + 16) = xmmword_2E5F70;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  *(_QWORD *)(v15 + 64) = sub_42298();
  if (a2)
    v16 = a1;
  else
    v16 = 0;
  v17 = 0xE000000000000000;
  if (a2)
    v17 = a2;
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v17;
  *(_QWORD *)(v15 + 96) = &type metadata for CGFloat;
  *(_QWORD *)(v15 + 104) = sub_190A0C();
  *(double *)(v15 + 72) = a3;
  swift_bridgeObjectRetain(a2);
  v18 = String.init(format:_:)(0x66322E253A4025, 0xE700000000000000, v15);
  v20 = v19;
  v74 = v3;
  v72 = &v3[OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider_logger];
  Logger.once(per:)((uint64_t)v13);
  v21 = swift_bridgeObjectRetain_n(v20, 2);
  v22 = Logger.logObject.getter(v21);
  v25 = static os_log_type_t.debug.getter(v22, v23, v24);
  if (os_log_type_enabled(v22, v25))
  {
    v69 = v8;
    v26 = swift_slowAlloc(12, -1);
    v71 = a2;
    v73 = v18;
    v27 = (uint8_t *)v26;
    v28 = swift_slowAlloc(32, -1);
    v70 = v7;
    v29 = v28;
    v80[0] = v28;
    *(_DWORD *)v27 = 136315138;
    swift_bridgeObjectRetain(v20);
    v78 = sub_33524(v73, v20, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v27 + 4);
    swift_bridgeObjectRelease_n(v20, 3);
    _os_log_impl(&dword_0, v22, v25, "Key: %s", v27, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    v30 = v29;
    v7 = v70;
    swift_slowDealloc(v30, -1, -1);
    v31 = v27;
    v18 = v73;
    a2 = v71;
    swift_slowDealloc(v31, -1, -1);

    v32 = *(void (**)(char *, uint64_t))(v69 + 8);
  }
  else
  {

    swift_bridgeObjectRelease_n(v20, 2);
    v32 = *(void (**)(char *, uint64_t))(v8 + 8);
  }
  v32(v13, v7);
  v33 = v74;
  v34 = v74 + 256;
  swift_beginAccess(v74 + 256, v80, 0, 0);
  v35 = *((_QWORD *)v33 + 32);
  if (*(_QWORD *)(v35 + 16))
  {
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v35);
    v36 = sub_3B8A0(v18, v20);
    if ((v37 & 1) != 0)
    {
      v38 = *(double *)(*(_QWORD *)(v35 + 56) + 8 * v36);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v35);
      Logger.once(per:)((uint64_t)v10);
      swift_bridgeObjectRetain(v20);
      v40 = Logger.logObject.getter(v39);
      v43 = static os_log_type_t.debug.getter(v40, v41, v42);
      if (os_log_type_enabled(v40, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(12, -1);
        v45 = swift_slowAlloc(32, -1);
        v74 = v10;
        v46 = v18;
        v47 = v45;
        v78 = v45;
        *(_DWORD *)v44 = 136315138;
        swift_bridgeObjectRetain(v20);
        v76 = sub_33524(v46, v20, &v78);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v44 + 4);
        swift_bridgeObjectRelease_n(v20, 3);
        _os_log_impl(&dword_0, v40, v43, "Found cached value for %s", v44, 0xCu);
        swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v47, -1, -1);
        swift_slowDealloc(v44, -1, -1);

        v48 = v74;
      }
      else
      {

        swift_bridgeObjectRelease_n(v20, 2);
        v48 = v10;
      }
      v32(v48, v7);
      v81[0] = v38;
      goto LABEL_27;
    }
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRelease(v35);
  }
  if (a2)
  {
    swift_beginAccess(v33 + 264, &v78, 33, 0);
    v49 = sub_18E940(0x66697265732D6975, 0xE800000000000000, (uint64_t *)v33 + 33, a3);
    swift_endAccess(&v78);
    v50 = COERCE_DOUBLE(sub_18EABC(a1, a2, a3));
    if ((v51 & 1) == 0)
      v81[0] = v50 / v49;
  }
  if (qword_3B5810 != -1)
    swift_once(&qword_3B5810, sub_17AF0C);
  if ((byte_3CF250 & 1) == 0)
  {
    v52 = v81[0];
    v53 = swift_bridgeObjectRetain_n(a2, 2);
    v54 = Logger.logObject.getter(v53);
    v57 = static os_log_type_t.debug.getter(v54, v55, v56);
    if (os_log_type_enabled(v54, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = swift_slowAlloc(32, -1);
      v60 = a1;
      v61 = v59;
      v78 = v59;
      v73 = v18;
      *(_DWORD *)v58 = 136315138;
      v62 = sub_18EF58(v60, a2, a3, v52);
      v64 = v63;
      v76 = sub_33524(v62, v63, &v78);
      v18 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v76, v77, v58 + 4);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v64);
      _os_log_impl(&dword_0, v54, v57, "%s", v58, 0xCu);
      swift_arrayDestroy(v61, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v61, -1, -1);
      swift_slowDealloc(v58, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a2, 2);
    }

  }
  swift_beginAccess(v81, &v78, 0, 0);
  v65 = v81[0];
  swift_beginAccess(v34, &v76, 33, 0);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v34);
  v75 = *v34;
  *v34 = 0x8000000000000000;
  sub_17D5B8(v18, v20, isUniquelyReferenced_nonNull_native, v65);
  v67 = *v34;
  *v34 = v75;
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v67);
  swift_endAccess(&v76);
LABEL_27:
  swift_beginAccess(v81, &v76, 0, 0);
  return v81[0];
}

double sub_18E940(uint64_t a1, unint64_t a2, uint64_t *a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  double v17;
  uint64_t v18;
  double v19;
  char v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v24;

  v8 = sub_319AC(&qword_3B66F8);
  v9 = swift_allocObject(v8, 112);
  *(_OWORD *)(v9 + 16) = xmmword_2E5F70;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  *(_QWORD *)(v9 + 64) = sub_42298();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  *(_QWORD *)(v9 + 96) = &type metadata for CGFloat;
  *(_QWORD *)(v9 + 104) = sub_190A0C();
  *(double *)(v9 + 72) = a4;
  swift_bridgeObjectRetain(a2);
  v10 = String.init(format:_:)(0x322E253A40253A52, 0xE900000000000066, v9);
  v12 = v10;
  v13 = v11;
  v14 = *a3;
  if (*(_QWORD *)(*a3 + 16) && (v15 = sub_3B8A0(v10, v11), (v16 & 1) != 0))
  {
    v17 = *(double *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    v18 = v13;
  }
  else
  {
    v19 = COERCE_DOUBLE(sub_18EABC(a1, a2, a4));
    if ((v20 & 1) != 0)
      v17 = 0.0;
    else
      v17 = v19;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
    v24 = *a3;
    *a3 = 0x8000000000000000;
    sub_17D5B8(v12, v13, isUniquelyReferenced_nonNull_native, v17);
    v22 = *a3;
    *a3 = v24;
    swift_bridgeObjectRelease(v13);
    v18 = v22;
  }
  swift_bridgeObjectRelease(v18);
  return v17;
}

uint64_t sub_18EABC(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  double v9;
  NSString v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t inited;
  NSString *v15;
  id v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat Width;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  CGRect v40;

  v7 = 0xD000000000000012;
  v8 = 0x80000000002CEFB0;
  if (a1 == 0x66697265732D6975 && a2 == 0xE800000000000000)
  {
    v7 = 0xD000000000000017;
  }
  else if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x66697265732D6975, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = 0xD000000000000017;
  }
  else
  {
    v8 = 0x80000000002CEF90;
    if ((a1 != 0x752D6D6574737973 || a2 != 0xE900000000000069)
      && (_stringCompareWithSmolCheck(_:_:expecting:)(0x752D6D6574737973, 0xE900000000000069, a1, a2, 0) & 1) == 0)
    {
      v8 = 0x80000000002CEF90;
      if ((a1 || a2 != 0xE000000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)(0, 0xE000000000000000, a1, a2, 0) & 1) == 0)
      {
        swift_bridgeObjectRetain(a2);
        v7 = a1;
        v8 = a2;
      }
    }
  }
  if (qword_3B5878 != -1)
    swift_once(&qword_3B5878, sub_18DD8C);
  v9 = *(double *)&qword_3CF290 * a3;
  swift_bridgeObjectRetain(v8);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v11 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithName:size:", v10, v9);

  v12 = sub_18F034(v7, v8, v11, v9, v3, 0xD000000000000012, 0x80000000002CEF90);
  if (v12)
  {
    swift_bridgeObjectRelease(v8);
    v13 = sub_319AC(&qword_3BF8E8);
    inited = swift_initStackObject(v13, &v37);
    *(_OWORD *)(inited + 16) = xmmword_2E5F80;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    *(_QWORD *)(inited + 40) = v12;
    v15 = NSFontAttributeName;
    v16 = v12;
    v17 = sub_37E1C(inited);
    v18 = *(void **)(v3 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider_corpus);
    sub_190FA0(v17);
    v20 = v19;
    swift_bridgeObjectRelease(v17);
    type metadata accessor for Key(0);
    sub_520E0();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v20);
    objc_msgSend(v18, "boundingRectWithSize:options:attributes:context:", 1, isa, 0, INFINITY, INFINITY);
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;

    v40.origin.x = v23;
    v40.origin.y = v25;
    v40.size.width = v27;
    v40.size.height = v29;
    Width = CGRectGetWidth(v40);

    return *(_QWORD *)&Width;
  }
  else
  {
    swift_bridgeObjectRetain(v8);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc(22, -1);
      v36 = swift_slowAlloc(64, -1);
      v39 = v36;
      *(_DWORD *)v35 = 136315394;
      swift_bridgeObjectRetain(v8);
      v38 = sub_33524(v7, v8, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v35 + 4);
      swift_bridgeObjectRelease_n(v8, 3);
      *(_WORD *)(v35 + 12) = 2080;
      v38 = sub_33524(0xD000000000000012, 0x80000000002CEF90, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v35 + 14);
      swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v8, 2);
    }

    return 0;
  }
}

uint64_t sub_18EF58(uint64_t a1, unint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v8 = sub_319AC(&qword_3B66F8);
  v9 = swift_allocObject(v8, 152);
  *(_OWORD *)(v9 + 16) = xmmword_2E6940;
  *(_QWORD *)(v9 + 56) = &type metadata for String;
  *(_QWORD *)(v9 + 64) = sub_42298();
  if (a2)
    v10 = a1;
  else
    v10 = 0;
  v11 = 0xE000000000000000;
  if (a2)
    v11 = a2;
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v11;
  *(_QWORD *)(v9 + 96) = &type metadata for CGFloat;
  *(_QWORD *)(v9 + 104) = sub_190A0C();
  *(double *)(v9 + 72) = a3;
  *(_QWORD *)(v9 + 136) = &type metadata for Double;
  *(_QWORD *)(v9 + 144) = &protocol witness table for Double;
  *(double *)(v9 + 112) = a4;
  swift_bridgeObjectRetain(a2);
  return String.init(format:_:)(0xD000000000000034, 0x80000000002CF000, v9);
}

id sub_18F034(uint64_t a1, unint64_t a2, void *a3, double a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  id v8;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = a3;
  if (!a3)
  {
    swift_bridgeObjectRetain_n(a2, 2);
    v14 = swift_bridgeObjectRetain_n(a7, 2);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc(32, -1);
      v21 = swift_slowAlloc(96, -1);
      v23 = v21;
      *(_DWORD *)v17 = 136315650;
      v22 = sub_33524(0xD00000000000002ALL, 0x80000000002CEFD0, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v17 + 4);
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain(a2);
      v22 = sub_33524(a1, a2, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v17 + 14);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v17 + 22) = 2080;
      swift_bridgeObjectRetain(a7);
      v22 = sub_33524(a6, a7, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23, v17 + 24);
      swift_bridgeObjectRelease_n(a7, 3);
      swift_arrayDestroy(v21, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a7, 2);
      swift_bridgeObjectRelease_n(a2, 2);
    }

    swift_bridgeObjectRetain(a7);
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a7);
    v8 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithName:size:", v18, a4);

  }
  v19 = a3;
  return v8;
}

uint64_t ContentLayoutProvider.debugDescription.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  Swift::String v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  Swift::String v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  char v23;
  _BOOL4 v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL4 v29;
  uint64_t v30;
  unsigned int v31;
  Swift::String v32;
  char v33;
  BOOL v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  void *v41;
  Swift::String v42;
  char v43;
  char v44;
  Swift::String v45;
  void *v46;
  Swift::String v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  Swift::String v51;
  __n128 v52;
  double v53;
  Swift::String v54;
  __n128 v55;
  Swift::String v56;
  __n128 v57;
  Swift::String v58;
  uint64_t v59;
  Swift::String v60;
  __n128 v61;
  double v62;
  Swift::String v63;
  __n128 v64;
  Swift::String v65;
  const __CFString *v66;
  __CFString *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  Swift::String v71;
  Swift::String v72;
  __n128 v73;
  Swift::String v74;
  __n128 v75;
  uint64_t v77;
  double v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  _BOOL4 v82;
  char v83;
  _QWORD v84[10];
  _QWORD v85[3];

  v1 = v0;
  v2 = *v0;
  v84[1] = 0;
  v84[2] = 0xE000000000000000;
  _StringGuts.grow(_:)(370);
  v85[0] = 0;
  v85[1] = 0xE000000000000000;
  v3._countAndFlagsBits = 60;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._countAndFlagsBits = _typeName(_:qualified:)(v2, 0);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 0x616C202020200A3ELL;
  v6._object = (void *)0xEE00203A74756F79;
  String.append(_:)(v6);
  v7 = (_QWORD *)v0[8];
  v8 = 0xE800000000000000;
  v9 = 0x6465767265736572;
  switch((unint64_t)v7)
  {
    case 0uLL:
      goto LABEL_5;
    case 1uLL:
      v8 = 0xE500000000000000;
      v9 = 0x6465676170;
      goto LABEL_5;
    case 2uLL:
      v9 = 0x6C61636974726576;
      goto LABEL_5;
    case 3uLL:
      v8 = 0xEA00000000006C61;
      v9 = 0x746E6F7A69726F68;
LABEL_5:
      v10 = v8;
      String.append(_:)(*(Swift::String *)&v9);
      swift_bridgeObjectRelease(v8);
      v11._countAndFlagsBits = 0xD000000000000018;
      v11._object = (void *)0x80000000002CEBA0;
      String.append(_:)(v11);
      *(_OWORD *)&v84[1] = *(_OWORD *)(v1 + 9);
      v12 = sub_319AC(&qword_3BF638);
      _print_unlocked<A, B>(_:_:)(&v84[1], v85, v12, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v13._object = (void *)0x80000000002CEBC0;
      v13._countAndFlagsBits = 0xD000000000000012;
      String.append(_:)(v13);
      sub_18C774();
      v84[1] = v14;
      v84[2] = v15;
      type metadata accessor for CGSize(0);
      v17 = v16;
      _print_unlocked<A, B>(_:_:)(&v84[1], v85, v16, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v18._object = (void *)0x80000000002CEBE0;
      v18._countAndFlagsBits = 0xD000000000000012;
      String.append(_:)(v18);
      v19.n128_f64[0] = sub_18D060();
      Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v19);
      v20._object = (void *)0x80000000002CEC00;
      v20._countAndFlagsBits = 0xD000000000000014;
      String.append(_:)(v20);
      *(_OWORD *)&v84[1] = *(_OWORD *)(v1 + 19);
      _print_unlocked<A, B>(_:_:)(&v84[1], v85, v17, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v21._countAndFlagsBits = 0xD00000000000001FLL;
      v21._object = (void *)0x80000000002CEC20;
      String.append(_:)(v21);
      v22 = *((char *)v1 + 192);
      v23 = v22 == 3;
      v24 = v22 != 0;
      v25 = v1[25];
      v26 = v1[26];
      v27 = v1[27];
      v28 = v1[30];
      v78 = *((double *)v1 + 29);
      v79 = v1[31];
      v80 = v1[28];
      v29 = v25 != 0;
      v30 = (v26 >> 8) & 1;
      if (v25)
      {
        v24 = (v26 >> 8) & 1;
        v23 = v1[26];
      }
      v81 = v23;
      v82 = v24;
      v83 = v29 & v30;
      v31 = v28 >> 8;
      if ((v29 & v30) == 0)
        LOBYTE(v31) = 1;
      LOBYTE(v84[1]) = v31;
      _print_unlocked<A, B>(_:_:)(&v84[1], v85, &type metadata for MultipleColumnMode, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v32._countAndFlagsBits = 0xD00000000000001ELL;
      v32._object = (void *)0x80000000002CEC40;
      String.append(_:)(v32);
      v33 = sub_18D8B4();
      v34 = (v33 & 1) == 0;
      if ((v33 & 1) != 0)
        v35 = 1702195828;
      else
        v35 = 0x65736C6166;
      if (v34)
        v36 = 0xE500000000000000;
      else
        v36 = 0xE400000000000000;
      v37 = v36;
      String.append(_:)(*(Swift::String *)&v35);
      swift_bridgeObjectRelease(v36);
      v38._countAndFlagsBits = 0xD000000000000015;
      v38._object = (void *)0x80000000002CEC60;
      String.append(_:)(v38);
      v40._countAndFlagsBits = Double.description.getter(v39, *((double *)v1 + 22));
      v41 = v40._object;
      String.append(_:)(v40);
      swift_bridgeObjectRelease(v41);
      v42._object = (void *)0x80000000002CEC80;
      v42._countAndFlagsBits = 0xD000000000000011;
      String.append(_:)(v42);
      v43 = *((_BYTE *)v1 + 193);
      v44 = *((_BYTE *)v1 + 194);
      LOBYTE(v84[1]) = v22;
      BYTE1(v84[1]) = v43;
      BYTE2(v84[1]) = v44;
      v84[2] = v25;
      v84[3] = v26;
      v84[4] = v27;
      v84[5] = v80;
      *(double *)&v84[6] = v78;
      v84[7] = v28;
      v84[8] = v79;
      v45._countAndFlagsBits = BookThemeEntity.fontFamily.getter();
      v46 = v45._object;
      v7 = v85;
      String.append(_:)(v45);
      swift_bridgeObjectRelease(v46);
      v47._countAndFlagsBits = 0xD000000000000013;
      v47._object = (void *)0x80000000002CECA0;
      String.append(_:)(v47);
      if ((v81 & 1) != 0)
        v48 = 1702195828;
      else
        v48 = 0x65736C6166;
      if ((v81 & 1) != 0)
        v49 = 0xE400000000000000;
      else
        v49 = 0xE500000000000000;
      v50 = v49;
      String.append(_:)(*(Swift::String *)&v48);
      swift_bridgeObjectRelease(v49);
      v51._object = (void *)0x80000000002CECC0;
      v51._countAndFlagsBits = 0xD000000000000011;
      String.append(_:)(v51);
      if (v82)
      {
        if (v25)
          v52.n128_u64[0] = v27;
        else
          v52.n128_u64[0] = qword_2F05C0[v22];
        Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v52);
        v60._object = (void *)0x80000000002CECE0;
        v60._countAndFlagsBits = 0xD000000000000014;
        String.append(_:)(v60);
        v61.n128_u64[0] = v80;
        if ((v83 & 1) != 0)
        {
          v62 = v78;
        }
        else
        {
          v61.n128_f64[0] = 0.0;
          v62 = 0.0;
        }
        Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v61);
        v63._object = (void *)0x80000000002CED00;
        v63._countAndFlagsBits = 0xD000000000000012;
        String.append(_:)(v63);
        v64.n128_f64[0] = v62;
        Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v64);
        v65._object = (void *)0x80000000002CED20;
        v65._countAndFlagsBits = 0xD000000000000014;
        String.append(_:)(v65);
        if (v25)
        {
          if ((v28 & 1) != 0)
            v59 = 1;
          else
            v59 = 2;
        }
        else if (v22 >= 5)
        {
          v59 = 1;
        }
        else
        {
          v59 = qword_2F05F0[v22];
        }
      }
      else
      {
        v53 = 0.0;
        v52.n128_u64[0] = 0;
        Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v52);
        v54._object = (void *)0x80000000002CECE0;
        v54._countAndFlagsBits = 0xD000000000000014;
        String.append(_:)(v54);
        v55.n128_u64[0] = v80;
        if ((v83 & 1) != 0)
          v53 = v78;
        else
          v55.n128_f64[0] = 0.0;
        Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v55);
        v56._object = (void *)0x80000000002CED00;
        v56._countAndFlagsBits = 0xD000000000000012;
        String.append(_:)(v56);
        v57.n128_f64[0] = v53;
        Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v57);
        v58._object = (void *)0x80000000002CED20;
        v58._countAndFlagsBits = 0xD000000000000014;
        String.append(_:)(v58);
        v59 = 0;
      }
      v66 = (id)NSStringFromBEBookContentLayoutJustification(v59);
      if (!v66)
      {
        __break(1u);
LABEL_42:
        type metadata accessor for BookLayoutMode(0);
        v84[1] = v7;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v77, &v84[1], v77, &type metadata for UInt);
        __break(1u);
        JUMPOUT(0x18F9E8);
      }
      v67 = (__CFString *)v66;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
      v70 = v69;

      v71._countAndFlagsBits = v68;
      v71._object = v70;
      String.append(_:)(v71);
      swift_bridgeObjectRelease(v70);
      v72._object = (void *)0x80000000002CED40;
      v72._countAndFlagsBits = 0xD000000000000018;
      String.append(_:)(v72);
      sub_18DA3C();
      Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v73);
      v74._object = (void *)0x80000000002CED60;
      v74._countAndFlagsBits = 0xD000000000000018;
      String.append(_:)(v74);
      v75.n128_f64[0] = sub_18B0CC();
      Double.write<A>(to:)(v85, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v75);
      return v85[0];
    default:
      goto LABEL_42;
  }
}

uint64_t sub_18F9F8()
{
  return ContentLayoutProvider.debugDescription.getter();
}

uint64_t sub_18FA18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, void *a16, char a17, char *a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  char v32;
  uint64_t v33;
  uint64_t v38;

  v32 = a6 & 1;
  v33 = type metadata accessor for ContentLayoutProvider(0);
  v38 = swift_allocObject(v33, *(unsigned int *)(v33 + 48), *(unsigned __int16 *)(v33 + 52));
  return sub_18FB1C(a1, a2, a3, a4, a5, v32, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v38, a20, a21);
}

uint64_t sub_18FB1C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, void *a16, char a17, char *a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[2];

  v66 = a18[1];
  v67 = *a18;
  v65 = a18[2];
  v63 = *((_QWORD *)a18 + 2);
  v64 = *((_QWORD *)a18 + 1);
  v61 = *((_QWORD *)a18 + 4);
  v62 = *((_QWORD *)a18 + 3);
  v59 = *((_QWORD *)a18 + 6);
  v60 = *((_QWORD *)a18 + 5);
  v58 = *((_QWORD *)a18 + 7);
  *(_QWORD *)(a19 + 88) = 0x676E69646E65703CLL;
  *(_QWORD *)(a19 + 96) = 0xE90000000000003ELL;
  *(_QWORD *)(a19 + 104) = 0x676E69646E65703CLL;
  *(_QWORD *)(a19 + 112) = 0xE90000000000003ELL;
  *(_QWORD *)(a19 + 256) = sub_38694((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(a19 + 264) = sub_38694((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(a19 + 272) = 0;
  *(_BYTE *)(a19 + 280) = 1;
  v31 = a19 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider_logger;
  if (qword_3B5870 != -1)
    swift_once(&qword_3B5870, sub_189FDC);
  v32 = type metadata accessor for Logger(0);
  v33 = sub_555F0(v32, (uint64_t)qword_3BF5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v31, v33, v32);
  v34 = OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider_corpus;
  sub_34450(0, (unint64_t *)&qword_3B6638, NSString_ptr);
  *(_QWORD *)(a19 + v34) = NSString.init(stringLiteral:)("The quick brown fox jumped over the lazy dog. The sphinx of black the quartz judge my vow.", 90, 2);
  v35 = a19 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___gutterWidth;
  *(_QWORD *)v35 = 0;
  *(_BYTE *)(v35 + 8) = 1;
  v36 = a19 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___chromeGutterWidth;
  *(_QWORD *)v36 = 0;
  *(_BYTE *)(v36 + 8) = 1;
  *(_BYTE *)(a19 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___spreadPagesAllowedForViewport) = 2;
  v37 = a19 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___semanticSideInset;
  *(_QWORD *)v37 = 0;
  *(_BYTE *)(v37 + 8) = 1;
  *(_QWORD *)(a19 + 16) = a1;
  *(_QWORD *)(a19 + 24) = a2;
  *(_BYTE *)(a19 + 32) = a3;
  *(_QWORD *)(a19 + 40) = a4;
  *(_QWORD *)(a19 + 48) = a5;
  *(_BYTE *)(a19 + 56) = a6 & 1;
  *(double *)(a19 + 152) = a9;
  *(double *)(a19 + 160) = a10;
  if (a7 <= 1)
    v38 = 1;
  else
    v38 = a7;
  *(_QWORD *)(a19 + 64) = v38;
  *(_QWORD *)(a19 + 72) = a8;
  *(_QWORD *)(a19 + 80) = a21;
  *(double *)(a19 + 120) = a11;
  *(double *)(a19 + 128) = a12;
  *(double *)(a19 + 136) = a13;
  *(double *)(a19 + 144) = a14;
  *(_QWORD *)(a19 + 168) = a16;
  *(double *)(a19 + 176) = a15;
  *(_BYTE *)(a19 + 184) = a17 & 1;
  *(_BYTE *)(a19 + 192) = v67;
  *(_BYTE *)(a19 + 193) = v66;
  *(_BYTE *)(a19 + 194) = v65;
  *(_QWORD *)(a19 + 200) = v64;
  *(_QWORD *)(a19 + 208) = v63;
  *(_QWORD *)(a19 + 216) = v62;
  *(_QWORD *)(a19 + 224) = v61;
  *(_QWORD *)(a19 + 232) = v60;
  *(_QWORD *)(a19 + 240) = v59;
  *(_QWORD *)(a19 + 248) = v58;
  swift_unknownObjectRetain(a8);
  v39 = a16;
  sub_18B1A0();
  v41 = v40;
  v43 = v42;
  v44 = *(_QWORD *)(a19 + 96);
  *(_QWORD *)(a19 + 88) = v45;
  *(_QWORD *)(a19 + 96) = v46;
  swift_bridgeObjectRelease(v44);
  v47 = *(_QWORD *)(a19 + 112);
  *(_QWORD *)(a19 + 104) = v41;
  *(_QWORD *)(a19 + 112) = v43;
  swift_bridgeObjectRelease(v47);
  if (qword_3B5810 != -1)
    swift_once(&qword_3B5810, sub_17AF0C);
  if (byte_3CF250 == 1)
  {
    v48 = a8;
  }
  else
  {
    v49 = swift_retain(a19);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v50, v51))
    {

      swift_unknownObjectRelease(a8);
      swift_release(a19);
      return a19;
    }
    v52 = (uint8_t *)swift_slowAlloc(12, -1);
    v72 = a8;
    v53 = swift_slowAlloc(32, -1);
    v74[0] = v53;
    *(_DWORD *)v52 = 136446210;
    v54 = *(_QWORD *)(a19 + 88);
    v55 = *(_QWORD *)(a19 + 96);
    swift_bridgeObjectRetain(v55);
    v73 = sub_33524(v54, v55, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74, v52 + 4);
    swift_release(a19);
    swift_bridgeObjectRelease(v55);
    _os_log_impl(&dword_0, v50, v51, "New layout created for: %{public}s", v52, 0xCu);
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v52, -1, -1);

    v48 = v72;
  }
  swift_unknownObjectRelease(v48);

  return a19;
}

double sub_18FF9C(uint64_t a1, unint64_t a2, uint64_t a3, int a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;

  v7 = v6;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v7 + 64);
  v19 = 0.0;
  if (v18 != 3)
  {
    v61 = a3;
    v62 = a4;
    v64 = v14;
    v65 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    v63 = v15;
    v20 = *(double *)(v7 + 152);
    v21 = *(double *)(v7 + 176);
    v22 = *(_BYTE *)(v7 + 192);
    v23 = *(_BYTE *)(v7 + 193);
    v24 = *(_BYTE *)(v7 + 194);
    v26 = *(_QWORD *)(v7 + 200);
    v25 = *(_QWORD *)(v7 + 208);
    v27 = *(_QWORD *)(v7 + 216);
    v28 = *(_QWORD *)(v7 + 224);
    v29 = *(_QWORD *)(v7 + 232);
    v30 = *(_QWORD *)(v7 + 240);
    v31 = *(_QWORD *)(v7 + 248);
    LOBYTE(v67) = v22;
    BYTE1(v67) = v23;
    BYTE2(v67) = v24;
    v68 = v26;
    v69 = v25;
    v59 = v25;
    v58 = v27;
    v70 = v27;
    v71 = v28;
    v57 = v28;
    v56 = v29;
    v72 = v29;
    v73 = v30;
    v55 = v30;
    v60 = v31;
    v74 = v31;
    v32 = BookThemeEntity.fontFamily.getter();
    v34 = v33;
    v35 = sub_18DEE8(v32, v33, v21);
    swift_bridgeObjectRelease(v34);
    v36 = 0.0;
    if (*(unsigned __int8 *)(v7 + 32) - 1 > 1)
    {
      v67 = v18;
      LOBYTE(v68) = v22;
      BYTE1(v68) = v23;
      BYTE2(v68) = v24;
      v69 = v26;
      v70 = v59;
      v71 = v58;
      v72 = v57;
      v73 = v56;
      v74 = v55;
      v75 = v60;
      v76 = 0x4056800000000000;
      v77 = v35;
      sub_705F0(0, v20);
    }
    v19 = ceil(v36);
    v15 = v63;
    v14 = v64;
    v17 = v65;
    LOBYTE(a4) = v62;
    a3 = v61;
  }
  v37 = *(double *)&a3;
  if ((a4 & 1) != 0)
    v37 = 0.0;
  v38 = (a6 - v19 - v37) / sub_18DEE8(a1, a2, a5);
  v39 = sub_18E240(a1, a2, a5);
  if (qword_3B5810 != -1)
    swift_once(&qword_3B5810, sub_17AF0C);
  v40 = v39 * v38;
  if ((byte_3CF250 & 1) == 0)
  {
    v41 = *(_QWORD *)(v7 + 96);
    swift_bridgeObjectRetain(v41);
    Logger.once(per:)((uint64_t)v17);
    swift_bridgeObjectRelease(v41);
    v43 = Logger.logObject.getter(v42);
    v46 = static os_log_type_t.debug.getter(v43, v44, v45);
    if (os_log_type_enabled(v43, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(12, -1);
      v48 = swift_slowAlloc(32, -1);
      v67 = v48;
      v65 = v17;
      *(_DWORD *)v47 = 136315138;
      v49 = sub_319AC(&qword_3B66F8);
      v50 = swift_allocObject(v49, 112);
      *(_OWORD *)(v50 + 16) = xmmword_2E5F70;
      *(_QWORD *)(v50 + 56) = &type metadata for Double;
      *(_QWORD *)(v50 + 64) = &protocol witness table for Double;
      *(double *)(v50 + 32) = v40;
      *(_QWORD *)(v50 + 96) = &type metadata for Double;
      *(_QWORD *)(v50 + 104) = &protocol witness table for Double;
      *(double *)(v50 + 72) = a6;
      v51 = String.init(format:_:)(0xD000000000000021, 0x80000000002CEF60, v50);
      v53 = v52;
      v66 = sub_33524(v51, v52, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v47 + 4);
      swift_bridgeObjectRelease(v53);
      _os_log_impl(&dword_0, v43, v46, "%s", v47, 0xCu);
      swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v65, v14);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  return v40;
}

uint64_t sub_1903C8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  double v7;
  double v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  double v13;
  char v14;
  char v15;
  __int128 v16;
  double left;
  double bottom;
  double right;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27[8];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v2 = *(_BYTE *)(a2 + 1);
  v3 = *(_BYTE *)(a2 + 2);
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 40);
  v26 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 56);
  v7 = *(double *)(a1 + 152);
  v8 = *(double *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  v12 = *(void **)(a1 + 168);
  v13 = *(double *)(a1 + 176);
  v14 = *(_BYTE *)(a1 + 184);
  v15 = *(_BYTE *)(a1 + 32);
  v27[0] = *(_BYTE *)a2;
  v27[1] = v2;
  v27[2] = v3;
  v16 = *(_OWORD *)(a2 + 24);
  v28 = *(_OWORD *)(a2 + 8);
  v29 = v16;
  v30 = *(_OWORD *)(a2 + 40);
  v31 = v4;
  left = UIEdgeInsetsZero.left;
  bottom = UIEdgeInsetsZero.bottom;
  right = UIEdgeInsetsZero.right;
  v20 = type metadata accessor for ContentLayoutProvider(0);
  v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48));
  ObjectType = swift_getObjectType(v10);
  swift_bridgeObjectRetain(v5);
  swift_unknownObjectRetain(v10);
  return sub_18FB1C(v26, v5, v15, v25, v24, v6, v9, v10, v7, v8, UIEdgeInsetsZero.top, left, bottom, right, v13, v12, v14, v27, v21,
           ObjectType,
           v11);
}

unint64_t sub_190530()
{
  unint64_t result;

  result = qword_3BF640;
  if (!qword_3BF640)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BookContentUserInterfaceStyle, &type metadata for BookContentUserInterfaceStyle);
    atomic_store(result, (unint64_t *)&qword_3BF640);
  }
  return result;
}

void sub_190574(double *a1@<X8>)
{
  *a1 = sub_18CB4C();
}

_QWORD *sub_19059C(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)(v2 + 272) = *result;
  *(_BYTE *)(v2 + 280) = 0;
  return result;
}

void sub_1905B0(double *a1@<X8>)
{
  *a1 = sub_18D060();
}

_QWORD *sub_1905D8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a2 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___gutterWidth;
  *(_QWORD *)v2 = *result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

void sub_1905F8(double *a1@<X8>)
{
  *a1 = sub_18D408();
}

_QWORD *sub_190620(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a2 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___chromeGutterWidth;
  *(_QWORD *)v2 = *result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

uint64_t sub_190640@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18D64C();
  *a1 = result & 1;
  return result;
}

_BYTE *sub_19066C(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___spreadPagesAllowedForViewport) = *result;
  return result;
}

void sub_190684(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_18DA3C();
  *a1 = v2;
}

_QWORD *sub_1906AC(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a2 + OBJC_IVAR____TtC8BookEPUB21ContentLayoutProvider____lazy_storage___semanticSideInset;
  *(_QWORD *)v2 = *result;
  *(_BYTE *)(v2 + 8) = 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for BookContentApplicationForegroundState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_190718 + 4 * byte_2F0165[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19074C + 4 * byte_2F0160[v4]))();
}

uint64_t sub_19074C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190754(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19075CLL);
  return result;
}

uint64_t sub_190768(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x190770);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_190774(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19077C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookContentApplicationForegroundState()
{
  return &type metadata for BookContentApplicationForegroundState;
}

uint64_t storeEnumTagSinglePayload for BookContentUserInterfaceStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1907E4 + 4 * byte_2F016F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_190818 + 4 * byte_2F016A[v4]))();
}

uint64_t sub_190818(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_190820(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x190828);
  return result;
}

uint64_t sub_190834(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x19083CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_190840(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_190848(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookContentUserInterfaceStyle()
{
  return &type metadata for BookContentUserInterfaceStyle;
}

uint64_t dispatch thunk of BookContentLayoutProviding.fixedLayoutSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BookContentLayoutProviding.charactersPerLine(textZoomFactor:fontFamily:contentWidth:isFontBolded:letterSpacing:wordSpacing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(a9 + 200))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t sub_1908A0()
{
  return type metadata accessor for ContentLayoutProvider(0);
}

uint64_t type metadata accessor for ContentLayoutProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_3BF670;
  if (!qword_3BF670)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ContentLayoutProvider);
  return result;
}

uint64_t sub_1908E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[22];

  v4[0] = &unk_2F04C8;
  v4[1] = &unk_2F04E0;
  v4[4] = &unk_2F04C8;
  v4[5] = &unk_2F04C8;
  v4[6] = &unk_2F04C8;
  v4[7] = &unk_2F0510;
  v4[2] = &unk_2F04F8;
  v4[3] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[8] = &unk_2F0528;
  v4[9] = &unk_2F0540;
  v4[10] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[11] = &unk_2F0558;
  v4[12] = &unk_2F0570;
  v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[15] = &unk_2F0588;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[16] = *(_QWORD *)(result - 8) + 64;
    v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[18] = &unk_2F0588;
    v4[19] = &unk_2F0588;
    v4[20] = &unk_2F05A0;
    v4[21] = &unk_2F0588;
    return swift_updateClassMetadata2(a1, 256, 22, v4, a1 + 80);
  }
  return result;
}

uint64_t method lookup function for ContentLayoutProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ContentLayoutProvider);
}

uint64_t dispatch thunk of ContentLayoutProvider.semanticSideInset.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ContentLayoutProvider.withAppliedTheme(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

unint64_t sub_190A0C()
{
  unint64_t result;

  result = qword_3BF8E0;
  if (!qword_3BF8E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_3BF8E0);
  }
  return result;
}

_QWORD *sub_190A50(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_F508C(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

void sub_190B98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[5];
  void *v38;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for BookTheme();
    v5 = sub_34284(&qword_3BFA38, (uint64_t (*)(uint64_t))type metadata accessor for BookTheme, (uint64_t)&protocol conformance descriptor for NSObject);
    isUniquelyReferenced_nonNull_native = (uint64_t)Set.Iterator.init(_cocoa:)(v37, v3, v4, v5);
    v1 = v37[0];
    v35 = v37[1];
    v7 = v37[2];
    v8 = v37[3];
    v9 = v37[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v35 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v32 = v7;
  v34 = (unint64_t)(v7 + 64) >> 6;
  v33 = _swiftEmptyArrayStorage;
LABEL_11:
  v13 = v8;
  v14 = v9;
  while (1)
  {
    if (v1 < 0)
    {
      v25 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
      if (!v25)
        goto LABEL_42;
      v26 = v25;
      v36 = v25;
      v27 = type metadata accessor for BookTheme();
      swift_unknownObjectRetain(v26);
      swift_dynamicCast(&v38, &v36, (char *)&type metadata for Swift.AnyObject + 8, v27, 7);
      v16 = v38;
      swift_unknownObjectRelease(v26);
      v8 = v13;
      v9 = v14;
      if (!v16)
        goto LABEL_42;
      goto LABEL_14;
    }
    if (!v14)
      break;
    v9 = (v14 - 1) & v14;
    v15 = __clz(__rbit64(v14)) | (v13 << 6);
    v8 = v13;
LABEL_13:
    v16 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v16)
      goto LABEL_42;
LABEL_14:
    v17 = objc_msgSend(v16, "identifier", v32);
    v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    v20 = v19;

    v21._countAndFlagsBits = v18;
    v21._object = v20;
    v22 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_378E78, v21);

    swift_bridgeObjectRelease(v20);
    v13 = v8;
    v14 = v9;
    if (v22 < 6)
    {
      v29 = v33;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_433CC(0, v33[2] + 1, 1, v33);
        v29 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v31 = v29[2];
      v30 = v29[3];
      if (v31 >= v30 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_433CC((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
        v29 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v29[2] = v31 + 1;
      v33 = v29;
      *((_BYTE *)v29 + v31 + 32) = v22;
      goto LABEL_11;
    }
  }
  v8 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v8 >= v34)
      goto LABEL_42;
    v23 = *(_QWORD *)(v35 + 8 * v8);
    if (!v23)
    {
      v24 = v13 + 2;
      if (v13 + 2 >= v34)
        goto LABEL_42;
      v23 = *(_QWORD *)(v35 + 8 * v24);
      if (v23)
        goto LABEL_26;
      v24 = v13 + 3;
      if (v13 + 3 >= v34)
        goto LABEL_42;
      v23 = *(_QWORD *)(v35 + 8 * v24);
      if (v23)
        goto LABEL_26;
      v24 = v13 + 4;
      if (v13 + 4 >= v34)
        goto LABEL_42;
      v23 = *(_QWORD *)(v35 + 8 * v24);
      if (v23)
      {
LABEL_26:
        v8 = v24;
      }
      else
      {
        v8 = v13 + 5;
        if (v13 + 5 >= v34)
          goto LABEL_42;
        v23 = *(_QWORD *)(v35 + 8 * v8);
        if (!v23)
        {
          v28 = v13 + 6;
          while (v34 != v28)
          {
            v23 = *(_QWORD *)(v35 + 8 * v28++);
            if (v23)
            {
              v8 = v28 - 1;
              goto LABEL_27;
            }
          }
LABEL_42:
          sub_89AA0(v1);
          return;
        }
      }
    }
LABEL_27:
    v9 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v8 << 6);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_190F2C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(id, void *);
  id v7;
  id v8;

  v6 = *(void (**)(id, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(v8, a3);
  swift_release(v5);

}

void sub_190FA0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _OWORD v37[4];
  _OWORD v38[2];
  _OWORD v39[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_319AC(&qword_3B6688);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v34 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v33 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  swift_retain();
  v35 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v35 << 6);
      goto LABEL_28;
    }
    v11 = v35 + 1;
    if (__OFADD__(v35, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v33)
      goto LABEL_37;
    v12 = *(_QWORD *)(v34 + 8 * v11);
    v13 = v35 + 1;
    if (!v12)
    {
      v13 = v35 + 2;
      if (v35 + 2 >= v33)
        goto LABEL_37;
      v12 = *(_QWORD *)(v34 + 8 * v13);
      if (!v12)
      {
        v13 = v35 + 3;
        if (v35 + 3 >= v33)
          goto LABEL_37;
        v12 = *(_QWORD *)(v34 + 8 * v13);
        if (!v12)
        {
          v13 = v35 + 4;
          if (v35 + 4 >= v33)
            goto LABEL_37;
          v12 = *(_QWORD *)(v34 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v35 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v39[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v39[0];
    *(_QWORD *)&v38[0] = v16;
    v17 = sub_34450(0, (unint64_t *)&qword_3B6F00, UIFont_ptr);
    v18 = v15;
    v19 = v16;
    swift_dynamicCast((char *)v39 + 8, v38, v17, (char *)&type metadata for Any + 8, 7);
    v20 = *(_QWORD *)&v39[0];
    sub_3F180((_OWORD *)((char *)v39 + 8), v37);
    sub_3F180(v37, v39);
    sub_3F180(v39, v38);
    v21 = v3[5];
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;
    Hasher.init(_seed:)(&v36, v21);
    String.hash(into:)(&v36, v22, v24);
    v25 = Hasher._finalize()();
    swift_bridgeObjectRelease(v24);
    v26 = -1 << *((_BYTE *)v3 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)&v7[8 * (v27 >> 6)]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)&v7[8 * (v27 >> 6)])) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)&v7[8 * v28];
      }
      while (v32 == -1);
      v8 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)&v7[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(_QWORD *)(v3[6] + 8 * v8) = v20;
    sub_3F180(v38, (_OWORD *)(v3[7] + 32 * v8));
    ++v3[2];
  }
  v14 = v35 + 5;
  if (v35 + 5 >= v33)
  {
LABEL_37:
    swift_release();
    sub_89AA0(a1);
    return;
  }
  v12 = *(_QWORD *)(v34 + 8 * v14);
  if (v12)
  {
    v13 = v35 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v33)
      goto LABEL_37;
    v12 = *(_QWORD *)(v34 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_191350(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_319AC(&qword_3B6628);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v19 = v18[1];
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v13);
    *(_QWORD *)&v39[0] = *v18;
    *((_QWORD *)&v39[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v31, v39, &type metadata for String, &type metadata for AnyHashable, 7);
    v30 = v20;
    swift_dynamicCast(v34, &v30, &type metadata for Double, (char *)&type metadata for Any + 8, 7);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_3F180(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_3F180(v38, v39);
    sub_3F180(v39, &v35);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v31;
    *(_OWORD *)(v11 + 16) = v32;
    *(_QWORD *)(v11 + 32) = v33;
    result = (uint64_t)sub_3F180(&v35, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_89AA0(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1916FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t i;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  _QWORD *v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD *v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_319AC(&qword_3BFA40);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v40 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v39 = (unint64_t)(63 - v4) >> 6;
  v38 = v3 + 8;
  swift_bridgeObjectRetain(v1);
  i = 0;
  v8 = &type metadata for String;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v18 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v18 >= v39)
    goto LABEL_32;
  v19 = *(_QWORD *)(v40 + 8 * v18);
  v20 = i + 1;
  if (!v19)
  {
    v20 = i + 2;
    if (i + 2 >= v39)
      goto LABEL_32;
    v19 = *(_QWORD *)(v40 + 8 * v20);
    if (!v19)
    {
      v20 = i + 3;
      if (i + 3 >= v39)
        goto LABEL_32;
      v19 = *(_QWORD *)(v40 + 8 * v20);
      if (!v19)
      {
        v20 = i + 4;
        if (i + 4 >= v39)
          goto LABEL_32;
        v19 = *(_QWORD *)(v40 + 8 * v20);
        if (!v19)
        {
          v21 = i + 5;
          if (i + 5 < v39)
          {
            v19 = *(_QWORD *)(v40 + 8 * v21);
            if (v19)
            {
              v20 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v20 = v21 + 1;
              if (__OFADD__(v21, 1))
                goto LABEL_36;
              if (v20 >= v39)
                break;
              v19 = *(_QWORD *)(v40 + 8 * v20);
              ++v21;
              if (v19)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_89AA0(v1);
          return;
        }
      }
    }
  }
LABEL_26:
  v41 = (v19 - 1) & v19;
  v17 = __clz(__rbit64(v19)) + (v20 << 6);
  for (i = v20; ; v17 = __clz(__rbit64(v6)) | (i << 6))
  {
    v22 = 16 * v17;
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v17);
    v25 = *v23;
    v24 = v23[1];
    v26 = (_QWORD *)(*(_QWORD *)(v1 + 56) + v22);
    v27 = v26[1];
    v42[0] = *v26;
    v42[1] = v27;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v27);
    v28 = sub_319AC((uint64_t *)&unk_3BBB20);
    swift_dynamicCast(v43, v42, v8, v28, 7);
    v29 = v43[0];
    v30 = v43[1];
    v31 = sub_3B8A0(v25, v24);
    if ((v32 & 1) != 0)
    {
      v9 = v3[6];
      v10 = v3;
      v11 = 16 * v31;
      v12 = v1;
      v13 = i;
      v14 = v8;
      v15 = (uint64_t *)(v9 + 16 * v31);
      swift_bridgeObjectRelease(v15[1]);
      *v15 = v25;
      v15[1] = v24;
      v16 = (_QWORD *)(v10[7] + v11);
      v3 = v10;
      swift_bridgeObjectRelease(v16[1]);
      *v16 = v29;
      v16[1] = v30;
      v8 = v14;
      i = v13;
      v1 = v12;
      v6 = v41;
      if (!v41)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v38 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    v33 = (uint64_t *)(v3[6] + 16 * v31);
    *v33 = v25;
    v33[1] = v24;
    v34 = (_QWORD *)(v3[7] + 16 * v31);
    *v34 = v29;
    v34[1] = v30;
    v35 = v3[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_34;
    v3[2] = v37;
    v6 = v41;
    if (!v41)
      goto LABEL_11;
LABEL_10:
    v41 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_191A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t *v9;
  _QWORD *v10;
  char *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t *v16;
  uint64_t *v17;
  _QWORD *v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _OWORD v48[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_319AC(&qword_3B66B8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v39 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v38 = (unint64_t)(63 - v4) >> 6;
  v7 = &v45;
  v8 = &v47;
  swift_bridgeObjectRetain(v1);
  v40 = 0;
  v9 = (unint64_t *)&qword_3B5C30;
  v10 = NSObject_ptr;
  v11 = (char *)&type metadata for Any + 8;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v20 = v40 + 1;
  if (__OFADD__(v40, 1))
    goto LABEL_35;
  if (v20 >= v38)
    goto LABEL_32;
  v21 = *(_QWORD *)(v39 + 8 * v20);
  v22 = v40 + 1;
  if (!v21)
  {
    v22 = v40 + 2;
    if (v40 + 2 >= v38)
      goto LABEL_32;
    v21 = *(_QWORD *)(v39 + 8 * v22);
    if (!v21)
    {
      v22 = v40 + 3;
      if (v40 + 3 >= v38)
        goto LABEL_32;
      v21 = *(_QWORD *)(v39 + 8 * v22);
      if (!v21)
      {
        v22 = v40 + 4;
        if (v40 + 4 >= v38)
          goto LABEL_32;
        v21 = *(_QWORD *)(v39 + 8 * v22);
        if (!v21)
        {
          v23 = v40 + 5;
          if (v40 + 5 < v38)
          {
            v21 = *(_QWORD *)(v39 + 8 * v23);
            if (v21)
            {
              v22 = v40 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v38)
                break;
              v21 = *(_QWORD *)(v39 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_89AA0(v1);
          return;
        }
      }
    }
  }
LABEL_26:
  v40 = v22;
  v41 = (v21 - 1) & v21;
  for (i = __clz(__rbit64(v21)) + (v22 << 6); ; i = __clz(__rbit64(v6)) | (v40 << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = v24[1];
    v26 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * i);
    v43 = *v24;
    v44 = v25;
    v42 = v26;
    v27 = sub_34450(0, v9, v10);
    swift_bridgeObjectRetain(v25);
    v28 = v26;
    swift_dynamicCast(v7, &v42, v27, v11, 7);
    v30 = v43;
    v29 = v44;
    sub_3F180(v7, v8);
    sub_3F180(v8, v48);
    sub_3F180(v48, &v46);
    v31 = sub_3B8A0(v30, v29);
    v32 = v31;
    if ((v33 & 1) != 0)
    {
      v12 = v8;
      v13 = v7;
      v14 = v1;
      v15 = v10;
      v16 = v9;
      v17 = (uint64_t *)(v3[6] + 16 * v31);
      swift_bridgeObjectRelease(v17[1]);
      *v17 = v30;
      v17[1] = v29;
      v9 = v16;
      v10 = v15;
      v1 = v14;
      v7 = v13;
      v8 = v12;
      v11 = (char *)&type metadata for Any + 8;
      v18 = (_QWORD *)(v3[7] + 32 * v32);
      sub_34488(v18);
      sub_3F180(&v46, v18);
      v6 = v41;
      if (!v41)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v31;
    v34 = (uint64_t *)(v3[6] + 16 * v31);
    *v34 = v30;
    v34[1] = v29;
    sub_3F180(&v46, (_OWORD *)(v3[7] + 32 * v31));
    v35 = v3[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_34;
    v3[2] = v37;
    v6 = v41;
    if (!v41)
      goto LABEL_11;
LABEL_10:
    v41 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_191DA4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_319AC(&qword_3B6628);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_344A8(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_3F180(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_3F180(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_3F180(v37, v38);
    sub_3F180(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_3F180(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_89AA0(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_192168(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  id v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_319AC(&qword_3B6628);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v30)
      goto LABEL_37;
    v15 = *(_QWORD *)(v31 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v30)
        goto LABEL_37;
      v15 = *(_QWORD *)(v31 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v30)
          goto LABEL_37;
        v15 = *(_QWORD *)(v31 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v30)
            goto LABEL_37;
          v15 = *(_QWORD *)(v31 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v19 = v18[1];
    v20 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v13);
    *(_QWORD *)&v41[0] = *v18;
    *((_QWORD *)&v41[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    v21 = v20;
    swift_dynamicCast(&v33, v41, &type metadata for String, &type metadata for AnyHashable, 7);
    v32 = v21;
    v22 = sub_34450(0, (unint64_t *)&qword_3B5C30, NSObject_ptr);
    swift_dynamicCast(v36, &v32, v22, (char *)&type metadata for Any + 8, 7);
    v37 = v33;
    v38 = v34;
    v39 = v35;
    sub_3F180(v36, v40);
    v33 = v37;
    v34 = v38;
    v35 = v39;
    sub_3F180(v40, v41);
    sub_3F180(v41, &v37);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v23 = -1 << *((_BYTE *)v3 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)&v7[8 * (v24 >> 6)])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)&v7[8 * v25];
      }
      while (v29 == -1);
      v10 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v33;
    *(_OWORD *)(v11 + 16) = v34;
    *(_QWORD *)(v11 + 32) = v35;
    result = (uint64_t)sub_3F180(&v37, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v30)
  {
LABEL_37:
    swift_release();
    sub_89AA0(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v31 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v30)
      goto LABEL_37;
    v15 = *(_QWORD *)(v31 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_192528(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[3];

  v3 = 0;
  v17[2] = a2;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain(v13);
    sub_130310(v17, v12, v13);
    swift_bridgeObjectRelease(v17[1]);
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

void sub_1926A4(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;

  v3 = 0;
  v15 = a2;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    sub_1304BC((uint64_t)&v14, *(_BYTE *)(*(_QWORD *)(a1 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1927FC()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3CF2D8);
  sub_555F0(v0, (uint64_t)qword_3CF2D8);
  return Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEF736B6F6F422E65, 0xD000000000000010, 0x80000000002CF1E0, v1);
}

uint64_t sub_19287C()
{
  id v0;
  id v1;
  uint64_t result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSManagedObjectContext), "initWithConcurrencyType:", 1);
  v1 = objc_allocWithZone((Class)type metadata accessor for BookThemeDatabaseManager());
  result = BookThemeDatabaseManager.init(persistentContainer:managedObjectContext:)(0, v0);
  qword_3BF8F0 = result;
  return result;
}

uint64_t BookThemeDatabaseManager.__allocating_init(persistentContainer:managedObjectContext:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return BookThemeDatabaseManager.init(persistentContainer:managedObjectContext:)(a1, a2);
}

id static BookThemeDatabaseManager.shared.getter()
{
  if (qword_3B58C8 != -1)
    swift_once(&qword_3B58C8, sub_19287C);
  return (id)qword_3BF8F0;
}

uint64_t BookThemeDatabaseManager.init(persistentContainer:managedObjectContext:)(void *a1, void *a2)
{
  char *v2;
  id ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  NSString v31;
  NSString v32;
  id v33;
  _QWORD *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  id v37;
  NSURL *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  NSString v44;
  id v45;
  _QWORD *v46;
  unint64_t v47;
  char *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  os_log_type_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  id v72;
  char *v73;
  id v74;
  void *v75;
  id v76;
  char *v77;
  id v78;
  void *v79;
  id v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t KeyPath;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __n128 v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t result;
  void (*v111)(char *, char *, uint64_t);
  void *v112;
  uint64_t v113;
  id v114;
  id v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  objc_super v138;
  id aBlock[6];

  v115 = a2;
  ObjectType = (id)swift_getObjectType(v2);
  v5 = sub_319AC((uint64_t *)&unk_3B80B0);
  __chkstk_darwin(v5);
  v134 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0);
  v133 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v132 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for NSNotificationCenter.Publisher(0);
  __chkstk_darwin(v120);
  v118 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v117 = (char *)&v111 - v10;
  __chkstk_darwin(v11);
  v116 = (char *)&v111 - v12;
  v123 = sub_319AC(&qword_3BF8F8);
  v121 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v119 = (char *)&v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_319AC(&qword_3BF900);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v122 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_319AC(&qword_3BF908);
  v127 = *(_QWORD *)(v15 - 8);
  v128 = v15;
  __chkstk_darwin(v15);
  v126 = (char *)&v111 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_319AC(&qword_3BF910);
  v130 = *(_QWORD *)(v17 - 8);
  v131 = v17;
  __chkstk_darwin(v17);
  v129 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v19);
  v21 = (char *)&v111 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for URL(0);
  v136 = *(_QWORD **)(v113 - 8);
  v22 = v136[8];
  __chkstk_darwin(v113);
  v23 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v111 - v25;
  *(_QWORD *)&v2[OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_subscribers] = _swiftEmptyArrayStorage;
  v27 = OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_changedThemeTypesSubject;
  v28 = sub_319AC(&qword_3BF928);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48));
  v29 = v2;
  *(_QWORD *)&v2[v27] = PassthroughSubject.init()(v29);
  if (!a1)
  {
    v112 = 0;
    v114 = ObjectType;
    v30 = BookEPUBBundle();
    v31 = String._bridgeToObjectiveC()();
    v32 = String._bridgeToObjectiveC()();
    v33 = objc_msgSend(v30, "URLForResource:withExtension:", v31, v32);

    if (v33)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v33);

      v34 = v136;
      v35 = (void (*)(char *, char *, uint64_t))v136[4];
      v36 = v113;
      v35(v21, v23, v113);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v34[7])(v21, 0, 1, v36);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v34[6])(v21, 1, v36) == 1)
      {
LABEL_14:
        sub_52128((uint64_t)v21, (uint64_t *)&unk_3B8C50);
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000000002CF0D0, "BookEPUB/BookThemeDatabaseManager.swift", 39, 2, 69, 0);
        __break(1u);
        return result;
      }
      v111 = v35;
      v35(v26, v21, v36);
      v37 = objc_allocWithZone((Class)NSManagedObjectModel);
      URL._bridgeToObjectiveC()(v38);
      v40 = v39;
      v41 = objc_msgSend(v37, "initWithContentsOfURL:", v39);

      if (v41)
      {
        v42 = objc_allocWithZone((Class)NSPersistentContainer);
        v43 = v41;
        v44 = String._bridgeToObjectiveC()();
        v45 = objc_msgSend(v42, "initWithName:managedObjectModel:", v44, v43);

        v46 = v136;
        ((void (*)(char *, char *, uint64_t))v136[2])(v23, v26, v36);
        v47 = (*((unsigned __int8 *)v46 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v46 + 80);
        v48 = (char *)swift_allocObject(&unk_386180, v47 + v22);
        *((_QWORD *)v48 + 2) = v45;
        v111(&v48[v47], v23, v36);
        aBlock[4] = sub_193D54;
        aBlock[5] = v48;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_190F2C;
        aBlock[3] = &unk_386198;
        v49 = _Block_copy(aBlock);
        v50 = v45;
        objc_msgSend(v50, "loadPersistentStoresWithCompletionHandler:", v49, swift_release().n128_f64[0]);
        _Block_release(v49);

        ((void (*)(char *, uint64_t))v46[1])(v26, v36);
        *(_QWORD *)&v29[OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_persistentContainer] = v50;
        ObjectType = v114;
        a1 = v112;
        goto LABEL_7;
      }
      __break(1u);
    }
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136[7])(v21, 1, 1, v113);
    goto LABEL_14;
  }
  *(_QWORD *)&v29[OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_persistentContainer] = a1;
LABEL_7:
  v51 = qword_3B58C0;
  v114 = a1;
  if (v51 != -1)
    swift_once(&qword_3B58C0, sub_1927FC);
  v52 = type metadata accessor for Logger(0);
  v53 = sub_555F0(v52, (uint64_t)qword_3CF2D8);
  v54 = Logger.logObject.getter(v53);
  v57 = static os_log_type_t.debug.getter(v54, v55, v56);
  if (os_log_type_enabled(v54, v57))
  {
    v58 = swift_slowAlloc(22, -1);
    v59 = (void *)swift_slowAlloc(64, -1);
    aBlock[0] = v59;
    *(_DWORD *)v58 = 136315394;
    v60 = objc_msgSend((id)objc_opt_self(NSPersistentContainer), "defaultDirectoryURL");
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v60);

    v62 = URL.absoluteString.getter(v61);
    v64 = v63;
    ((void (*)(char *, uint64_t))v136[1])(v23, v113);
    v137 = sub_33524(v62, v64, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v58 + 4);
    swift_bridgeObjectRelease(v64);
    *(_WORD *)(v58 + 12) = 2080;
    v137 = sub_33524(0x6D6568546B6F6F42, 0xE900000000000065, (uint64_t *)aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, &v138, v58 + 14);
    _os_log_impl(&dword_0, v54, v57, "Loaded themes database at %s%s.sqlite", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy(v59, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v58, -1, -1);
  }

  v65 = objc_msgSend(*(id *)&v29[OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_persistentContainer], "persistentStoreCoordinator");
  v66 = v115;
  objc_msgSend(v115, "setPersistentStoreCoordinator:", v65);

  *(_QWORD *)&v29[OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_context] = v66;
  v67 = v66;

  v138.receiver = v29;
  v138.super_class = (Class)ObjectType;
  v68 = objc_msgSendSuper2(&v138, "init");
  v69 = (void *)objc_opt_self(NSNotificationCenter);
  v136 = v68;
  v70 = objc_msgSend(v69, "defaultCenter");
  sub_34450(0, &qword_3BC7B0, NSManagedObjectContext_ptr);
  v71 = (void *)static NSManagedObjectContext.didChangeObjectsNotification.getter();
  v72 = v67;
  v73 = v116;
  NSNotificationCenter.publisher(for:object:)(v71, v67);

  v74 = objc_msgSend(v69, "defaultCenter");
  v75 = (void *)static NSManagedObjectContext.didSaveObjectsNotification.getter();
  v76 = v72;
  v77 = v117;
  NSNotificationCenter.publisher(for:object:)(v75, v67);

  v78 = objc_msgSend(v69, "defaultCenter");
  v79 = (void *)static NSManagedObjectContext.didMergeChangesObjectIDsNotification.getter();
  v80 = v76;
  v81 = v118;
  NSNotificationCenter.publisher(for:object:)(v79, v67);

  v82 = sub_34284((unint64_t *)&qword_3B6B28, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v83 = v119;
  Publishers.Merge3.init(_:_:_:)(v73, v77, v81, v120, v120, v120, v82, v82, v82);
  KeyPath = swift_getKeyPath(&unk_2F0628);
  v85 = sub_3DCC0(&qword_3BF940, &qword_3BF8F8, (uint64_t)&protocol conformance descriptor for Publishers.Merge3<A, B, C>);
  v86 = v122;
  v87 = v123;
  Publisher.map<A>(_:)(KeyPath, v123, v85);
  v88 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v121 + 8))(v83, v87, v88);
  v89 = sub_3DCC0(&qword_3BF948, &qword_3BF900, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v90 = v125;
  v91 = v126;
  Publisher.filter(_:)(sub_194188, 0, v125, v89);
  v92 = (*(uint64_t (**)(char *, uint64_t))(v124 + 8))(v86, v90);
  v93 = v132;
  OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)(v92, 0.01);
  v94 = sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
  aBlock[0] = (id)static OS_dispatch_queue.main.getter(v95);
  v96 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v97 = (uint64_t)v134;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v134, 1, 1, v96);
  v98 = sub_3DCC0(&qword_3BF950, &qword_3BF908, (uint64_t)&protocol conformance descriptor for Publishers.Filter<A>);
  v99 = sub_49FA8();
  v101 = v128;
  v100 = v129;
  Publisher.debounce<A>(for:scheduler:options:)(v93, aBlock, v97, v128, v94, v98, v99);
  sub_52128(v97, (uint64_t *)&unk_3B80B0);

  (*(void (**)(char *, uint64_t))(v133 + 8))(v93, v135);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v91, v101);
  v102 = (char *)v136;
  v103 = *(_QWORD *)((char *)v136 + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_changedThemeTypesSubject);
  v104 = sub_3DCC0(&qword_3BF958, &qword_3BF910, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  swift_retain();
  v105 = v131;
  Publisher<>.sink(receiveValue:)(sub_19419C, v103, v131, v104);
  v106 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v130 + 8))(v100, v105, v106);
  v107 = &v102[OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_subscribers];
  swift_beginAccess(&v102[OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_subscribers], aBlock, 33, 0);
  v108 = sub_319AC(&qword_3B8390);
  v109 = sub_3DCC0((unint64_t *)&unk_3BD170, &qword_3B8390, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v107, v108, v109);
  swift_endAccess(aBlock);
  swift_release();

  return (uint64_t)v102;
}

double sub_193678(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  id v60;
  void **aBlock;
  _QWORD v62[7];

  v60 = a3;
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v50 - v13;
  v15 = type metadata accessor for NSPersistentStore.StoreType(0, v12);
  *(_QWORD *)&result = __chkstk_darwin(v15).n128_u64[0];
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v58 = v19;
    v59 = v16;
    v56 = v9;
    swift_errorRetain(a2);
    if (qword_3B58C0 != -1)
      swift_once(&qword_3B58C0, sub_1927FC);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_555F0(v20, (uint64_t)qword_3CF2D8);
    swift_errorRetain(a2);
    v22 = swift_errorRetain(a2);
    v54 = v21;
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    v25 = os_log_type_enabled(v23, v24);
    v57 = v14;
    v55 = v10;
    if (v25)
    {
      v26 = swift_slowAlloc(12, -1);
      v52 = v15;
      v27 = (uint8_t *)v26;
      v28 = (uint64_t *)swift_slowAlloc(8, -1);
      v53 = v8;
      v51 = a1;
      *(_DWORD *)v27 = 138543362;
      swift_errorRetain(a2);
      v29 = _swift_stdlib_bridgeErrorToNSError(a2);
      aBlock = (void **)v29;
      a1 = v51;
      v8 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v62, v27 + 4);
      *v28 = v29;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl(&dword_0, v23, v24, "BookTheme persistentStore load failed: %{public}@", v27, 0xCu);
      v30 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v28, 1, v30);
      swift_slowDealloc(v28, -1, -1);
      v31 = v27;
      v15 = v52;
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v32 = objc_msgSend(v60, "persistentStoreCoordinator");
    v33 = objc_msgSend(a1, "type");
    v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    v36 = v35;

    v37 = a1;
    v38 = v58;
    NSPersistentStore.StoreType.init(rawValue:)(v34, v36);
    v39 = objc_msgSend(v37, "options");
    v40 = sub_34450(0, (unint64_t *)&qword_3B5C30, NSObject_ptr);
    v41 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v39, &type metadata for String, v40, &protocol witness table for String);

    v42 = sub_192168(v41);
    v43 = swift_bridgeObjectRelease(v41);
    NSPersistentStoreCoordinator.destroyPersistentStore(at:type:options:)(a4, v38, v42, v43);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v15);

    v44 = swift_bridgeObjectRelease(v42);
    v45 = v56;
    v46 = v57;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v57, a4, v7, v44);
    v47 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v48 = swift_allocObject(&unk_386458, v47 + v45);
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v48 + v47, v46, v7);
    v62[3] = sub_197BE8;
    v62[4] = v48;
    aBlock = _NSConcreteStackBlock;
    v62[0] = 1107296256;
    v62[1] = sub_190F2C;
    v62[2] = &unk_386470;
    v49 = _Block_copy(&aBlock);
    objc_msgSend(v60, "loadPersistentStoresWithCompletionHandler:", v49, swift_release().n128_f64[0]);
    _Block_release(v49);
    *(_QWORD *)&result = swift_errorRelease(a2).n128_u64[0];
  }
  return result;
}

uint64_t sub_193CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_193D54(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_193678(a1, a2, *(void **)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_193DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_193DB4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_193DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  _BYTE v26[8];
  uint64_t v27;
  uint64_t v28;

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_3B58C0 != -1)
      swift_once(&qword_3B58C0, sub_1927FC);
    v9 = type metadata accessor for Logger(0);
    sub_555F0(v9, (uint64_t)qword_3CF2D8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    swift_errorRetain(a2);
    v10 = swift_errorRetain(a2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v24 = swift_slowAlloc(64, -1);
      v28 = v24;
      *(_DWORD *)v13 = 136446466;
      v14 = URL.path.getter();
      v16 = v15;
      v27 = sub_33524(v14, v15, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v13 + 4);
      v17 = swift_bridgeObjectRelease(v16);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v17);
      *(_WORD *)(v13 + 12) = 2082;
      swift_getErrorValue(a2, v26, v25);
      v18 = Error.localizedDescription.getter(v25[1], v25[2]);
      v20 = v19;
      v27 = sub_33524(v18, v19, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, &v28, v13 + 14);
      swift_bridgeObjectRelease(v20);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl(&dword_0, v11, v12, "Still unable to load persistentStore at %{public}s: %{public}s", (uint8_t *)v13, 0x16u);
      v21 = v24;
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v13, -1, -1);

      swift_errorRelease(a2);
    }
    else
    {
      v22 = swift_errorRelease(a2);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v22);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
}

void sub_194050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];

  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSInsertedObjectsKey);
  v9 = v0;
  AnyHashable.init<A>(_:)(&v8, &type metadata for String, &protocol witness table for String);
  v1 = sub_1971A8((uint64_t)v10);
  sub_3F14C((uint64_t)v10);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSUpdatedObjectsKey);
  v9 = v2;
  AnyHashable.init<A>(_:)(&v8, &type metadata for String, &protocol witness table for String);
  v3 = sub_1971A8((uint64_t)v10);
  sub_3F14C((uint64_t)v10);
  sub_1926A4(v3, v1);
  v5 = v4;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSDeletedObjectsKey);
  v9 = v6;
  AnyHashable.init<A>(_:)(&v8, &type metadata for String, &protocol witness table for String);
  v7 = sub_1971A8((uint64_t)v10);
  sub_3F14C((uint64_t)v10);
  sub_1926A4(v7, v5);
}

void sub_194160(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_194050();
  *a1 = v2;
}

BOOL sub_194188(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 16) != 0;
}

uint64_t sub_19419C(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  return PassthroughSubject.send(_:)(&v2);
}

void BookThemeDatabaseManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookEPUB.BookThemeDatabaseManager", 33, "init()", 6, 0);
  __break(1u);
}

uint64_t BookThemeDatabaseManager.changedThemeTypesPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC(&qword_3BF928);
  v1 = sub_3DCC0(&qword_3BF960, &qword_3BF928, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

void __swiftcall BookThemeDatabaseManager.loadOverrides(for:)(BookEPUB::BookThemeEntity::Overrides_optional *__return_ptr retstr, BookEPUB::BookThemeType a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  void *v7;
  __int128 v8;
  Swift::Double v9;
  Swift::Double v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  unsigned __int8 v15;
  char v16;
  __int128 v17;
  double v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  double v21;

  v5 = objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_persistentContainer), "viewContext");
  sub_1943BC(a2);
  v7 = v6;

  if (v7)
  {
    sub_13EB8C((uint64_t)&v14);

    v8 = v17;
    v9 = v18;
    v10 = v21;
    v11 = 256;
    if (!v16)
      v11 = 0;
    v12 = v11 | v15;
    v13 = v19 | ((unint64_t)v20 << 8);
    retstr->value.fontFamilyByTable._rawValue = v14;
    *(_QWORD *)&retstr->value.isFontBolded = v12;
  }
  else
  {
    v9 = 0.0;
    v13 = 0;
    v10 = 0.0;
    v8 = 0uLL;
    *(_OWORD *)&retstr->value.fontFamilyByTable._rawValue = 0u;
  }
  *(_OWORD *)&retstr->value.lineHeight = v8;
  retstr->value.wordSpacing = v9;
  *(_QWORD *)&retstr->value.justify = v13;
  retstr->value.marginAdjustment = v10;
}

void sub_1943BC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_194410()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29[14];

  v0 = type metadata accessor for BookTheme();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "entityName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v3 = v2;

  v4 = objc_allocWithZone((Class)NSFetchRequest);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "initWithEntityName:", v5, swift_bridgeObjectRelease(v3).n128_f64[0]);

  sub_34450(0, &qword_3BC760, NSPredicate_ptr);
  v7 = sub_319AC(&qword_3B66F8);
  v8 = swift_allocObject(v7, 72);
  *(_OWORD *)(v8 + 16) = xmmword_2E5F80;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 64) = sub_42298();
  *(_QWORD *)(v8 + 32) = 0x7465697571;
  *(_QWORD *)(v8 + 40) = 0xE500000000000000;
  swift_bridgeObjectRetain(0xE500000000000000);
  v9 = (void *)NSPredicate.init(format:_:)(0xD000000000000010, 0x80000000002CF1C0, v8);
  objc_msgSend(v6, "setPredicate:", v9);

  v10 = ((uint64_t (*)(id, uint64_t))NSManagedObjectContext.fetch<A>(_:))(v6, v0);
  v11 = v10;
  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0)
      v20 = v10;
    else
      v20 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v12 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v11);
    if (v12)
    {
LABEL_3:
      if ((v11 & 0xC000000000000001) != 0)
      {
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
      }
      else
      {
        if (!*(_QWORD *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFF8)))
        {
          __break(1u);
LABEL_23:
          swift_once(&qword_3B58C0, sub_1927FC);
LABEL_7:
          v14 = type metadata accessor for Logger(0);
          sub_555F0(v14, (uint64_t)qword_3CF2D8);
          swift_bridgeObjectRetain(0xE500000000000000);
          v16 = Logger.logObject.getter(v15);
          v17 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v16, v17))
          {
            v18 = (uint8_t *)swift_slowAlloc(12, -1);
            v19 = swift_slowAlloc(32, -1);
            v29[0] = v19;
            *(_DWORD *)v18 = 136315138;
            swift_bridgeObjectRetain(0xE500000000000000);
            v28 = sub_33524(0x7465697571, 0xE500000000000000, v29);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v18 + 4);
            swift_bridgeObjectRelease_n(0xE500000000000000, 3);
            _os_log_impl(&dword_0, v16, v17, "Fetched BookTheme with identifier: %s", v18, 0xCu);
            swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v19, -1, -1);
            swift_slowDealloc(v18, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n(0xE500000000000000, 2);
          }
          return v12;
        }
        v13 = *(id *)(v11 + 32);
      }
      v12 = (uint64_t)v13;
      swift_bridgeObjectRelease(v11);
      if (qword_3B58C0 == -1)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else
  {
    v12 = *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8));
    if (v12)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease(v11);
  if (qword_3B58C0 != -1)
    swift_once(&qword_3B58C0, sub_1927FC);
  v21 = type metadata accessor for Logger(0);
  sub_555F0(v21, (uint64_t)qword_3CF2D8);
  swift_bridgeObjectRetain(0xE500000000000000);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v29[0] = v26;
    *(_DWORD *)v25 = 136315138;
    swift_bridgeObjectRetain(0xE500000000000000);
    v28 = sub_33524(0x7465697571, 0xE500000000000000, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v25 + 4);
    swift_bridgeObjectRelease_n(0xE500000000000000, 3);
    _os_log_impl(&dword_0, v23, v24, "Did not find BookTheme with identifier: %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
  }

  return 0;
}

Swift::Void __swiftcall BookThemeDatabaseManager.saveOverrides(for:)(BookEPUB::BookThemeEntity *a1)
{
  uint64_t v1;
  void *rawValue;
  uint64_t v3;
  Swift::Double marginAdjustment;
  void *v5;
  BookEPUB::BookThemeType themeType;
  __int128 v7;
  __int128 v8;
  id v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  Swift::Double v14;

  rawValue = a1->overrides.value.fontFamilyByTable._rawValue;
  v7 = *(_OWORD *)&a1->overrides.value.letterSpacing;
  v8 = *(_OWORD *)&a1->overrides.value.isFontBolded;
  v3 = *(_QWORD *)&a1->overrides.value.justify;
  marginAdjustment = a1->overrides.value.marginAdjustment;
  v5 = *(void **)(v1 + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_persistentContainer);
  themeType = a1->themeType;
  v9 = objc_msgSend(v5, "viewContext");
  v10 = rawValue;
  v11 = v8;
  v12 = v7;
  v13 = v3;
  v14 = marginAdjustment;
  swift_bridgeObjectRetain(rawValue);
  sub_194BF0((uint64_t)&v10, themeType);
  swift_bridgeObjectRelease(rawValue);

}

void sub_194BF0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_194C68(int a1, char a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  __int16 v38;
  __int16 v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  void *v52;
  uint64_t v53;
  void *ObjCClassFromMetadata;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  NSString v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  uint8_t *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  void *v77;
  void *v78;
  void *v79;
  unsigned int v80;
  id v81;
  id v82;
  id v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  void *v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  __int16 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int16 v111;
  uint64_t v112;

  sub_1943BC(a2);
  if (v45)
  {
    v46 = v45;
    if (v40)
    {
      v102 = v41;
      v106 = v40;
      v107 = v38 & 0x101;
      v108 = v42;
      v109 = v43;
      v110 = v44;
      v111 = v39 & 0xFF01;
      v112 = v101;
      swift_bridgeObjectRetain(v40);
      sub_13EF98(&v106);
      if (qword_3B58C0 != -1)
        swift_once(&qword_3B58C0, sub_1927FC);
      v47 = type metadata accessor for Logger(0);
      sub_555F0(v47, (uint64_t)qword_3CF2D8);
      v48 = swift_bridgeObjectRetain_n(0xE500000000000000, 2);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc(12, -1);
        v52 = (void *)swift_slowAlloc(32, -1);
        v106 = v52;
        *(_DWORD *)v51 = 136315138;
        swift_bridgeObjectRetain(0xE500000000000000);
        v104 = sub_33524(0x7465697571, 0xE500000000000000, (uint64_t *)&v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v51 + 4);
        swift_bridgeObjectRelease_n(0xE500000000000000, 3);
        _os_log_impl(&dword_0, v49, v50, "Updated existing BookTheme with identifier: %s", v51, 0xCu);
        swift_arrayDestroy(v52, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v52, -1, -1);
        swift_slowDealloc(v51, -1, -1);

        v41 = v102;
        goto LABEL_27;
      }
LABEL_24:

      swift_bridgeObjectRelease_n(0xE500000000000000, 2);
      v41 = v102;
      goto LABEL_27;
    }
    v65 = v41;
    objc_msgSend(v41, "deleteObject:", v45);
    if (qword_3B58C0 != -1)
      swift_once(&qword_3B58C0, sub_1927FC);
    v66 = type metadata accessor for Logger(0);
    sub_555F0(v66, (uint64_t)qword_3CF2D8);
    v67 = swift_bridgeObjectRetain_n(0xE500000000000000, 2);
    v68 = Logger.logObject.getter(v67);
    v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc(12, -1);
      v71 = (void *)swift_slowAlloc(32, -1);
      v106 = v71;
      *(_DWORD *)v70 = 136315138;
      swift_bridgeObjectRetain(0xE500000000000000);
      v104 = sub_33524(0x7465697571, 0xE500000000000000, (uint64_t *)&v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v70 + 4);
      swift_bridgeObjectRelease_n(0xE500000000000000, 3);
      _os_log_impl(&dword_0, v68, v69, "Deleted obsolete BookTheme with identifier: %s", v70, 0xCu);
      swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v71, -1, -1);
      swift_slowDealloc(v70, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    }
    v41 = v65;
  }
  else
  {
    if (v40)
    {
      v102 = v41;
      v53 = type metadata accessor for BookTheme();
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v53);
      v55 = objc_msgSend(ObjCClassFromMetadata, "entityName", swift_bridgeObjectRetain(v40).n128_f64[0]);
      if (!v55)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0);
        v57 = v56;
        v55 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v57);
      }
      v46 = objc_msgSend((id)objc_opt_self(NSEntityDescription), "insertNewObjectForEntityForName:inManagedObjectContext:", v55, v102);

      v58 = (void *)swift_dynamicCastClassUnconditional(v46, v53, 0, 0, 0);
      v59 = String._bridgeToObjectiveC()();
      objc_msgSend(v58, "setIdentifier:", v59);

      v106 = v40;
      v107 = v38 & 0x101;
      v108 = v42;
      v109 = v43;
      v110 = v44;
      v111 = v39 & 0xFF01;
      v112 = v101;
      sub_13EF98(&v106);
      if (qword_3B58C0 != -1)
        swift_once(&qword_3B58C0, sub_1927FC);
      v60 = type metadata accessor for Logger(0);
      sub_555F0(v60, (uint64_t)qword_3CF2D8);
      v61 = swift_bridgeObjectRetain_n(0xE500000000000000, 2);
      v49 = Logger.logObject.getter(v61);
      v62 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v49, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc(12, -1);
        v64 = (void *)swift_slowAlloc(32, -1);
        v106 = v64;
        *(_DWORD *)v63 = 136315138;
        swift_bridgeObjectRetain(0xE500000000000000);
        v104 = sub_33524(0x7465697571, 0xE500000000000000, (uint64_t *)&v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v63 + 4);
        swift_bridgeObjectRelease_n(0xE500000000000000, 3);
        _os_log_impl(&dword_0, v49, v62, "Created new BookTheme with identifier: %s", v63, 0xCu);
        swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v64, -1, -1);
        swift_slowDealloc(v63, -1, -1);

        v41 = v102;
        goto LABEL_27;
      }
      goto LABEL_24;
    }
    if (qword_3B58C0 != -1)
      swift_once(&qword_3B58C0, sub_1927FC);
    v72 = type metadata accessor for Logger(0);
    sub_555F0(v72, (uint64_t)qword_3CF2D8);
    v73 = swift_bridgeObjectRetain_n(0xE500000000000000, 2);
    v74 = Logger.logObject.getter(v73);
    v75 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v74, v75))
    {
      v76 = (uint8_t *)swift_slowAlloc(12, -1);
      v77 = v41;
      v78 = (void *)swift_slowAlloc(32, -1);
      v106 = v78;
      *(_DWORD *)v76 = 136315138;
      swift_bridgeObjectRetain(0xE500000000000000);
      v104 = sub_33524(0x7465697571, 0xE500000000000000, (uint64_t *)&v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v76 + 4);
      swift_bridgeObjectRelease_n(0xE500000000000000, 3);
      _os_log_impl(&dword_0, v74, v75, "BookTheme with identifier: %s does not exist and is not wanted", v76, 0xCu);
      swift_arrayDestroy(v78, 1, (char *)&type metadata for Any + 8);
      v79 = v78;
      v41 = v77;
      swift_slowDealloc(v79, -1, -1);
      swift_slowDealloc(v76, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    }
  }
LABEL_27:
  if (!objc_msgSend(v41, "hasChanges"))
  {
LABEL_30:
    swift_bridgeObjectRelease(0xE500000000000000);
    return 1;
  }
  v106 = 0;
  v80 = objc_msgSend(v41, "save:", &v106);
  v81 = v106;
  if (v80)
  {
    v82 = v106;
    goto LABEL_30;
  }
  v84 = v106;
  v85 = _convertNSErrorToError(_:)(v81);

  swift_willThrow(v86);
  if (qword_3B58C0 != -1)
    swift_once(&qword_3B58C0, sub_1927FC);
  v87 = type metadata accessor for Logger(0);
  sub_555F0(v87, (uint64_t)qword_3CF2D8);
  swift_errorRetain(v85);
  swift_bridgeObjectRetain(0xE500000000000000);
  v88 = swift_errorRetain(v85);
  v89 = Logger.logObject.getter(v88);
  v90 = static os_log_type_t.error.getter(v89);
  if (os_log_type_enabled(v89, v90))
  {
    v103 = v41;
    v91 = swift_slowAlloc(22, -1);
    v92 = (uint64_t *)swift_slowAlloc(8, -1);
    v93 = (void *)swift_slowAlloc(32, -1);
    v106 = v93;
    *(_DWORD *)v91 = 136315394;
    swift_bridgeObjectRetain(0xE500000000000000);
    v104 = sub_33524(0x7465697571, 0xE500000000000000, (uint64_t *)&v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v91 + 4);
    swift_bridgeObjectRelease_n(0xE500000000000000, 3);
    *(_WORD *)(v91 + 12) = 2112;
    swift_errorRetain(v85);
    v94 = _swift_stdlib_bridgeErrorToNSError(v85);
    v104 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, &v105, v91 + 14);
    *v92 = v94;
    swift_errorRelease(v85);
    swift_errorRelease(v85);
    _os_log_impl(&dword_0, v89, v90, "Failed to save after updating BookTheme with identifier: %s: %@", (uint8_t *)v91, 0x16u);
    v95 = sub_319AC(&qword_3B8A70);
    swift_arrayDestroy(v92, 1, v95);
    swift_slowDealloc(v92, -1, -1);
    swift_arrayDestroy(v93, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v93, -1, -1);
    v96 = v91;
    v41 = v103;
    swift_slowDealloc(v96, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    swift_errorRelease(v85);
    swift_errorRelease(v85);
  }

  v98 = Logger.logObject.getter(v97);
  v99 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v98, v99))
  {
    v100 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v100 = 0;
    _os_log_impl(&dword_0, v98, v99, "Attempting to recover by rolling back changes", v100, 2u);
    swift_slowDealloc(v100, -1, -1);
  }

  objc_msgSend(v41, "rollback");
  swift_errorRelease(v85);
  return 0;
}

uint64_t BookThemeDatabaseManager.loadOverrides(for:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  return swift_task_switch(sub_195778, 0, 0);
}

uint64_t sub_195778()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = *(_BYTE *)(v0 + 56);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_context);
  v3 = swift_allocObject(&unk_3861D0, 24);
  swift_unknownObjectWeakInit(v3 + 16, v2);
  v4 = swift_allocObject(&unk_3861F8, 25);
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = v1;
  v5 = (_QWORD *)swift_task_alloc(48);
  *(_QWORD *)(v0 + 40) = v5;
  v5[2] = v2;
  v5[3] = sub_1972F8;
  v5[4] = v4;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 48) = v6;
  v7 = sub_319AC(&qword_3BF970);
  *v6 = v0;
  v6[1] = sub_195888;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000013, 0x80000000002CF120, sub_197304, v5, v7);
}

uint64_t sub_195888()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 40);
  v2 = *(_QWORD *)(*v0 + 32);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  swift_release(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

double sub_1958E4@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  double result;
  uint64_t v16;
  unsigned __int8 v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  uint64_t v23;
  _BYTE v24[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong && (v7 = (void *)Strong, sub_1943BC(a2), v9 = v8, v7, v9))
  {
    sub_13EB8C((uint64_t)&v16);

    v10 = v20;
    v11 = v23;
    v12 = 256;
    if (!v18)
      v12 = 0;
    v13 = v12 | v17;
    v14 = v21 | ((unint64_t)v22 << 8);
    *(_QWORD *)a3 = v16;
    *(_QWORD *)(a3 + 8) = v13;
    result = *(double *)&v19;
    *(_OWORD *)(a3 + 16) = v19;
    *(_QWORD *)(a3 + 32) = v10;
    *(_QWORD *)(a3 + 40) = v14;
    *(_QWORD *)(a3 + 48) = v11;
  }
  else
  {
    *(_QWORD *)(a3 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t BookThemeDatabaseManager.loadOverrides(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch(sub_1959D0, 0, 0);
}

uint64_t sub_1959D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = v0[3];
  v2 = *(_QWORD *)(v0[4] + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_context);
  v3 = swift_allocObject(&unk_3861D0, 24);
  swift_unknownObjectWeakInit(v3 + 16, v2);
  v4 = swift_allocObject(&unk_386220, 32);
  v0[5] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  swift_bridgeObjectRetain(v1);
  v5 = (_QWORD *)swift_task_alloc(48);
  v0[6] = v5;
  v5[2] = v2;
  v5[3] = sub_197348;
  v5[4] = v4;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[7] = v6;
  v7 = sub_319AC(&qword_3BF980);
  *v6 = v0;
  v6[1] = sub_195AEC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000000002CF120, sub_197350, v5, v7);
}

uint64_t sub_195AEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  v3 = *(_QWORD *)(*v0 + 40);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_release(v3);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(_QWORD))(v5 + 8))(*(_QWORD *)(v1 + 16));
}

void sub_195B50(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = sub_195BEC(a2);

    sub_1974A8(v8);
    v10 = v9;
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_38E98((uint64_t)_swiftEmptyArrayStorage);
    v10 = v11;
  }
  *a3 = v10;
}

uint64_t sub_195BEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  int isUniquelyReferenced_nonNull_native;
  void *v52;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v1 = sub_190A50(a1);
  v2 = type metadata accessor for BookTheme();
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(v2), "entityName");
  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;

  v6 = objc_allocWithZone((Class)NSFetchRequest);
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "initWithEntityName:", v7, swift_bridgeObjectRelease(v5).n128_f64[0]);

  sub_34450(0, &qword_3BC760, NSPredicate_ptr);
  v9 = sub_319AC(&qword_3B66F8);
  v10 = swift_allocObject(v9, 72);
  *(_OWORD *)(v10 + 16) = xmmword_2E5F80;
  *(_QWORD *)(v10 + 56) = sub_319AC((uint64_t *)&unk_3B8C90);
  *(_QWORD *)(v10 + 64) = sub_3DCC0(&qword_3BFA20, (uint64_t *)&unk_3B8C90, (uint64_t)&protocol conformance descriptor for [A]);
  *(_QWORD *)(v10 + 32) = v1;
  swift_bridgeObjectRetain(v1);
  v11 = (void *)NSPredicate.init(format:_:)(0xD000000000000010, 0x80000000002CF1A0, v10);
  objc_msgSend(v8, "setPredicate:", v11);

  v56 = v8;
  v26 = NSManagedObjectContext.fetch<A>(_:)(v8, v2);
  if (qword_3B58C0 != -1)
    swift_once(&qword_3B58C0, sub_1927FC);
  v27 = type metadata accessor for Logger(0);
  sub_555F0(v27, (uint64_t)qword_3CF2D8);
  swift_bridgeObjectRetain_n(v26, 2);
  swift_bridgeObjectRetain(v1);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter(v29);
  v16 = a1;
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc(22, -1);
    v32 = swift_slowAlloc(32, -1);
    v62 = v32;
    *(_DWORD *)v31 = 134218242;
    v33 = v32;
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v55 = v26;
      else
        v55 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v26);
      v34 = _CocoaArrayWrapper.endIndex.getter(v55);
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      v34 = *(_QWORD *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRelease(v26);
    v61 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v31 + 4);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v31 + 12) = 2080;
    swift_bridgeObjectRetain(v1);
    v36 = Array.description.getter(v35, &type metadata for String);
    v38 = v37;
    swift_bridgeObjectRelease(v1);
    v61 = sub_33524(v36, v38, &v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v31 + 14);
    swift_bridgeObjectRelease_n(v1, 2);
    swift_bridgeObjectRelease(v38);
    _os_log_impl(&dword_0, v29, v30, "Fetched %ld BookThemes with identifiers: %s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v31, -1, -1);

    v16 = a1;
  }
  else
  {

    swift_bridgeObjectRelease_n(v1, 2);
    swift_bridgeObjectRelease_n(v26, 2);
  }
  while (1)
  {
    sub_38D98((uint64_t)_swiftEmptyArrayStorage);
    v60 = v39;
    v59 = *(_QWORD *)(v16 + 16);
    if (!v59)
      break;
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v54 = v26;
      else
        v54 = v26 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRetain(v26);
      v40 = _CocoaArrayWrapper.endIndex.getter(v54);
      swift_bridgeObjectRelease(v26);
    }
    else
    {
      v40 = *(_QWORD *)((char *)&dword_10 + (v26 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v16);
    }
    v41 = 0;
    v58 = v16 + 32;
    v42 = v26;
    while (1)
    {
      v43 = v41 + 1;
      if (__OFADD__(v41, 1))
        break;
      v44 = *(unsigned __int8 *)(v58 + v41);
      if (v40)
      {
        swift_bridgeObjectRetain(v26);
        if ((v26 & 0xC000000000000001) != 0)
          v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v26);
        else
          v45 = *(id *)(v26 + 32);
        v46 = objc_msgSend(v45, "identifier", 0);
        static String._unconditionallyBridgeFromObjectiveC(_:)(v46);

        __asm { BR              X8 }
      }
      swift_bridgeObjectRetain(v60);
      sub_3BA4C(v44);
      v48 = v47;
      v50 = v49;
      swift_bridgeObjectRelease(v60);
      if ((v50 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v60);
        v62 = v60;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_F4268();
          v60 = v62;
        }
        v52 = *(void **)(*(_QWORD *)(v60 + 56) + 8 * v48);
        sub_1890A0(v48, v60);

        swift_bridgeObjectRelease(0x8000000000000000);
      }
      v41 = v43;
      if (v43 == v59)
      {
        swift_bridgeObjectRelease(a1);
        goto LABEL_29;
      }
    }
    __break(1u);
    swift_once(&qword_3B58C0, sub_1927FC);
    v12 = type metadata accessor for Logger(0);
    sub_555F0(v12, (uint64_t)qword_3CF2D8);
    swift_errorRetain(v26);
    swift_bridgeObjectRetain(v40);
    v13 = swift_errorRetain(v26);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    v16 = a1;
    if (os_log_type_enabled(v14, v15))
    {
      v17 = swift_slowAlloc(22, -1);
      v18 = (uint64_t *)swift_slowAlloc(8, -1);
      v19 = swift_slowAlloc(32, -1);
      v62 = v19;
      *(_DWORD *)v17 = 136315394;
      swift_bridgeObjectRetain(v40);
      v21 = Array.description.getter(v20, &type metadata for String);
      v23 = v22;
      swift_bridgeObjectRelease(v40);
      v61 = sub_33524(v21, v23, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v17 + 4);
      swift_bridgeObjectRelease_n(v40, 2);
      swift_bridgeObjectRelease(v23);
      *(_WORD *)(v17 + 12) = 2112;
      swift_errorRetain(v42);
      v24 = _swift_stdlib_bridgeErrorToNSError(v42);
      v61 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v17 + 14);
      *v18 = v24;
      swift_errorRelease(v42);
      swift_errorRelease(v42);
      _os_log_impl(&dword_0, v14, v15, "Failed to fetch BookThemes with identifiers: %s. %@", (uint8_t *)v17, 0x16u);
      v25 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v18, 1, v25);
      v16 = a1;
      swift_slowDealloc(v18, -1, -1);
      swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      swift_errorRelease(v42);
    }
    else
    {
      swift_errorRelease(v26);
      swift_bridgeObjectRelease_n(v40, 2);
      swift_errorRelease(v26);
      swift_errorRelease(v26);

    }
    v26 = (uint64_t)_swiftEmptyArrayStorage;
  }
LABEL_29:
  swift_bridgeObjectRelease(v26);

  return v60;
}

uint64_t sub_1964E4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC(&qword_3BF928);
  v1 = sub_3DCC0(&qword_3BF960, &qword_3BF928, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

void sub_19655C(char a1@<W0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  id v5;
  void *v6;
  void *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  uint64_t v21;

  v5 = objc_msgSend(*(id *)(*v2 + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_persistentContainer), "viewContext");
  sub_1943BC(a1);
  v7 = v6;

  if (v7)
  {
    sub_13EB8C((uint64_t)&v14);

    v8 = v17;
    v9 = v18;
    v10 = v21;
    v11 = 256;
    if (!v16)
      v11 = 0;
    v12 = v11 | v15;
    v13 = v19 | ((unint64_t)v20 << 8);
    *(_QWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v12;
  }
  else
  {
    v9 = 0;
    v13 = 0;
    v10 = 0;
    v8 = 0uLL;
    *(_OWORD *)a2 = 0u;
  }
  *(_OWORD *)(a2 + 16) = v8;
  *(_QWORD *)(a2 + 32) = v9;
  *(_QWORD *)(a2 + 40) = v13;
  *(_QWORD *)(a2 + 48) = v10;
}

uint64_t sub_196634(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v2;
  v7 = swift_task_alloc(dword_3BF96C);
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_6B4A4;
  *(_BYTE *)(v7 + 56) = a2;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v6;
  return swift_task_switch(sub_195778, 0, 0);
}

uint64_t sub_1966A8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_3BF97C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_19670C;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch(sub_1959D0, 0, 0);
}

uint64_t sub_19670C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t BookThemeDatabaseManager.saveOverrides(_:for:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 72) = v2;
  *(_BYTE *)(v3 + 104) = a2;
  sub_19738C(a1, v3 + 16);
  return swift_task_switch(sub_1967A4, 0, 0);
}

uint64_t sub_1967A4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v1 = *(_BYTE *)(v0 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_context);
  v3 = swift_allocObject(&unk_3861D0, 24);
  swift_unknownObjectWeakInit(v3 + 16, v2);
  v4 = swift_allocObject(&unk_386248, 81);
  *(_QWORD *)(v0 + 80) = v4;
  *(_QWORD *)(v4 + 16) = v3;
  sub_19738C(v0 + 16, v4 + 24);
  *(_BYTE *)(v4 + 80) = v1;
  sub_FA4F4((_QWORD *)(v0 + 16));
  v5 = (_QWORD *)swift_task_alloc(48);
  *(_QWORD *)(v0 + 88) = v5;
  v5[2] = v2;
  v5[3] = sub_197414;
  v5[4] = v4;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 96) = v6;
  *v6 = v0;
  v6[1] = sub_1968C8;
  return withCheckedContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000013, 0x80000000002CF120, sub_197424, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1968C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_release();
  swift_task_dealloc(v1);
  return swift_task_switch(sub_196930, 0, 0);
}

uint64_t sub_196930()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_196938(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[56];
  _BYTE v9[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_19738C(a2, (uint64_t)v8);
    sub_194BF0((uint64_t)v8, a3);

  }
}

uint64_t sub_1969B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v2;
  v7 = swift_task_alloc(dword_3BF98C);
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_3F0C0;
  *(_QWORD *)(v7 + 72) = v6;
  *(_BYTE *)(v7 + 104) = a2;
  sub_19738C(a1, v7 + 16);
  return swift_task_switch(sub_1967A4, 0, 0);
}

void sub_196A30(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  __int128 v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 8);
  v7 = *(_OWORD *)(a1 + 32);
  v8 = *(_OWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(*v1 + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_persistentContainer);
  v6 = *(_BYTE *)a1;
  v9 = objc_msgSend(v5, "viewContext");
  v10 = v2;
  v11 = v8;
  v12 = v7;
  v13 = v3;
  v14 = v4;
  swift_bridgeObjectRetain(v2);
  sub_194BF0((uint64_t)&v10, v6);
  swift_bridgeObjectRelease(v2);

}

uint64_t BookThemeDatabaseManager.migrate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch(sub_196AEC, 0, 0);
}

uint64_t sub_196AEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = v0[6];
  v2 = v0[5];
  v3 = *(_QWORD *)(v0[7] + OBJC_IVAR____TtC8BookEPUB24BookThemeDatabaseManager_context);
  v4 = swift_allocObject(&unk_3861D0, 24);
  swift_unknownObjectWeakInit(v4 + 16, v3);
  v5 = (_QWORD *)swift_allocObject(&unk_386270, 40);
  v0[8] = v5;
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v1;
  v6 = swift_allocObject(&unk_386298, 32);
  v0[9] = v6;
  *(_QWORD *)(v6 + 16) = sub_19748C;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc(48);
  v0[10] = v7;
  v7[2] = v3;
  v7[3] = sub_1976E8;
  v7[4] = v6;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[11] = v8;
  v9 = sub_319AC(&qword_3BF998);
  *v8 = v0;
  v8[1] = sub_196C40;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000013, 0x80000000002CF120, sub_19773C, v7, v9);
}

uint64_t sub_196C40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_release();
  swift_task_dealloc(v2);
  *(_QWORD *)(v1 + 96) = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(v1 + 25) = *(_BYTE *)(v1 + 24);
  return swift_task_switch(sub_196CBC, 0, 0);
}

uint64_t sub_196CBC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  if ((*(_BYTE *)(v0 + 25) & 1) != 0)
  {
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 96);
    v1 = sub_319AC(&qword_3B82B8);
    swift_willThrowTypedImpl(v0 + 32, v1, &protocol self-conformance witness table for Error);
  }
  v2 = swift_release();
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_196D40(uint64_t a1, void (*a2)(uint64_t, void *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  __n128 v17;
  unsigned int v18;
  id v19;
  id v20;
  id v21;
  __n128 v22;
  id v23;
  _BYTE v24[24];

  v4 = a1 + 16;
  swift_beginAccess(a1 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = type metadata accessor for BookTheme();
    v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(v7), "entityName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v10 = v9;

    v11 = objc_allocWithZone((Class)NSFetchRequest);
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "initWithEntityName:", v12, swift_bridgeObjectRelease(v10).n128_f64[0]);

    v14 = NSManagedObjectContext.fetch<A>(_:)(v13, v7);
    if (v2)
    {

    }
    else
    {
      v16 = v14;

      a2(v16, v6);
      if (!objc_msgSend(v6, "hasChanges", swift_bridgeObjectRelease(v16).n128_f64[0]))
        goto LABEL_6;
      v23 = 0;
      v18 = objc_msgSend(v6, "save:", &v23);
      v19 = v23;
      if (v18)
      {
        v20 = v23;
        goto LABEL_6;
      }
      v21 = v23;
      _convertNSErrorToError(_:)(v19);

      swift_willThrow(v22);
    }
    objc_msgSend(v6, "rollback", v15);
    swift_willThrow(v17);
LABEL_6:

  }
}

uint64_t sub_196F30(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc(dword_3BF994);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_3F0C0;
  v7[6] = a2;
  v7[7] = v6;
  v7[5] = a1;
  return swift_task_switch(sub_196AEC, 0, 0);
}

void sub_196FA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  _QWORD aBlock[6];

  v22 = a2;
  v14 = sub_319AC(a5);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(v14);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))((char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14, v17);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = swift_allocObject(a6, v18 + v16);
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v19 + v18, (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  aBlock[4] = a7;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_525B8;
  aBlock[3] = a8;
  v20 = _Block_copy(aBlock);
  swift_retain();
  objc_msgSend(v22, "performBlock:", v20, swift_release().n128_f64[0]);
  _Block_release(v20);
}

uint64_t sub_1970E8(void (*a1)(_OWORD *__return_ptr))
{
  uint64_t v1;
  _OWORD v3[3];
  uint64_t v4;
  _OWORD v5[3];
  uint64_t v6;

  a1(v5);
  v3[0] = v5[0];
  v3[1] = v5[1];
  v3[2] = v5[2];
  v4 = v6;
  v1 = sub_319AC(&qword_3BFA28);
  return CheckedContinuation.resume(returning:)(v3, v1);
}

uint64_t sub_19714C(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  a1(&v5);
  v3 = v5;
  v4 = v6;
  v1 = sub_319AC(&qword_3BFA08);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t sub_1971A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    v13 = 0u;
    v14 = 0u;
    goto LABEL_9;
  }
  v3 = v2;
  if (!*(_QWORD *)(v2 + 16) || (v4 = sub_3BB34(a1), (v5 & 1) == 0))
  {
    v13 = 0u;
    v14 = 0u;
    swift_bridgeObjectRelease(v3);
    goto LABEL_9;
  }
  sub_344A8(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v13);
  swift_bridgeObjectRelease(v3);
  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_9:
    sub_52128((uint64_t)&v13, (uint64_t *)&unk_3B96D0);
    goto LABEL_10;
  }
  v6 = sub_319AC(&qword_3BFA30);
  if ((swift_dynamicCast(&v12, &v13, (char *)&type metadata for Any + 8, v6, 6) & 1) == 0)
  {
LABEL_10:
    v9 = _swiftEmptyArrayStorage;
    goto LABEL_11;
  }
  v7 = v12;
  sub_190B98(v12);
  v9 = v8;
  swift_bridgeObjectRelease(v7);
LABEL_11:
  v10 = sub_13527C((uint64_t)v9);
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_1972B0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1972D4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

double sub_1972F8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1958E4(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

void sub_197304(uint64_t a1)
{
  uint64_t v1;

  sub_196FA4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), &qword_3BFA28, (uint64_t)&unk_386408, (uint64_t)sub_197B38, (uint64_t)&unk_386420);
}

uint64_t sub_197340()
{
  return sub_1973DC(32);
}

void sub_197348(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_195B50(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_197350(uint64_t a1)
{
  uint64_t v1;

  sub_196FA4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), &qword_3BFA18, (uint64_t)&unk_3863B8, (uint64_t)sub_197A48, (uint64_t)&unk_3863D0);
}

uint64_t sub_19738C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3BF970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1973D4()
{
  return sub_1973DC(81);
}

uint64_t sub_1973DC(uint64_t a1)
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, a1, 7);
}

void sub_197414()
{
  uint64_t v0;

  sub_196938(*(_QWORD *)(v0 + 16), v0 + 24, *(_BYTE *)(v0 + 80));
}

void sub_197424(uint64_t a1)
{
  uint64_t v1;

  sub_196FA4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), &qword_3BFA10, (uint64_t)&unk_386368, (uint64_t)sub_1979D8, (uint64_t)&unk_386380);
}

uint64_t sub_197460()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_19748C()
{
  uint64_t v0;

  sub_196D40(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t, void *))(v0 + 24));
}

void sub_1974A8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  sub_319AC(&qword_3B6610);
  v2 = static _DictionaryStorage.copy(original:)(a1);
  v3 = (_QWORD *)v2;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v38 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = v2 + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + i);
    v17 = *(id *)(*(_QWORD *)(a1 + 56) + 8 * i);
    sub_13EB8C((uint64_t)&v30);

    v18 = v30;
    v19 = v31;
    v20 = v32;
    v21 = v34;
    v22 = v35;
    v23 = v36;
    v24 = v37;
    v25 = v33;
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_BYTE *)(v3[6] + i) = v16;
    v26 = v3[7] + 56 * i;
    *(_QWORD *)v26 = v18;
    *(_BYTE *)(v26 + 8) = v19;
    *(_BYTE *)(v26 + 9) = v20;
    *(_OWORD *)(v26 + 16) = v25;
    *(_QWORD *)(v26 + 32) = v21;
    *(_BYTE *)(v26 + 40) = v22;
    *(_BYTE *)(v26 + 41) = v23;
    *(_QWORD *)(v26 + 48) = v24;
    v27 = v3[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v29;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return;
    v14 = *(_QWORD *)(v38 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return;
      v14 = *(_QWORD *)(v38 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return;
        v14 = *(_QWORD *)(v38 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return;
  v14 = *(_QWORD *)(v38 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return;
    v14 = *(_QWORD *)(v38 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1976C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1976E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v4);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

void sub_19773C(uint64_t a1)
{
  uint64_t v1;

  sub_196FA4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), &qword_3BFA08, (uint64_t)&unk_386318, (uint64_t)sub_1979B8, (uint64_t)&unk_386330);
}

uint64_t dispatch thunk of BookThemeDatabaseProviding.loadOverrides(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 24);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_6B4A4;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BookThemeDatabaseProviding.loadOverrides(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v7 = *(int **)(a3 + 32);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_197C34;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of BookThemeDatabaseManaging.saveOverrides(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 16);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_6B4A4;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BookThemeDatabaseMigrating.migrate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 8);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_3F0C0;
  return v12(a1, a2, a3, a4);
}

uint64_t type metadata accessor for BookThemeDatabaseManager()
{
  return objc_opt_self(_TtC8BookEPUB24BookThemeDatabaseManager);
}

uint64_t method lookup function for BookThemeDatabaseManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookThemeDatabaseManager);
}

uint64_t sub_1979AC()
{
  return sub_197AC8(&qword_3BFA08);
}

uint64_t sub_1979B8()
{
  return sub_197B4C(&qword_3BFA08, (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_19714C);
}

uint64_t sub_1979CC()
{
  return sub_197AC8(&qword_3BFA10);
}

uint64_t sub_1979D8()
{
  uint64_t v0;
  uint64_t v1;

  sub_319AC(&qword_3BFA10);
  (*(void (**)(void))(v0 + 16))();
  v1 = sub_319AC(&qword_3BFA10);
  return CheckedContinuation.resume(returning:)(v1, v1);
}

uint64_t sub_197A3C()
{
  return sub_197AC8(&qword_3BFA18);
}

uint64_t sub_197A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_319AC(&qword_3BFA18);
  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  v1 = sub_319AC(&qword_3BFA18);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

uint64_t sub_197ABC()
{
  return sub_197AC8(&qword_3BFA28);
}

uint64_t sub_197AC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v2 = sub_319AC(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  v8 = swift_release();
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v8);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_197B38()
{
  return sub_197B4C(&qword_3BFA28, (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_1970E8);
}

uint64_t sub_197B4C(uint64_t *a1, uint64_t (*a2)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_319AC(a1) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v3 + 32) & ~v3));
}

uint64_t sub_197B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_197BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  sub_193DBC(a1, a2, v2 + ((v5 + 16) & ~v5));
}

BOOL CGSize.isLessThan(_:)(double a1, double a2, double a3, double a4)
{
  return a4 < a2 || a3 < a1;
}

double CGSize.union(_:)(uint64_t a1, uint64_t a2, char a3, double a4, double a5)
{
  double v6;
  uint64_t v7;
  uint64_t v8;
  CGRect v10;

  v6 = a4;
  if ((a3 & 1) == 0)
  {
    *(_QWORD *)&v10.size.width = a1;
    *(_QWORD *)&v10.size.height = a2;
    v7 = 0;
    v8 = 0;
    v10.origin.x = 0.0;
    v10.origin.y = 0.0;
    *(CGRect *)(&v6 - 2) = CGRectUnion(*(CGRect *)(&v6 - 2), v10);
  }
  return v6;
}

void sub_197D0C()
{
  __asm { BR              X10 }
}

uint64_t sub_197D5C()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;

  v1._countAndFlagsBits = 0x7465697571;
  v1._object = (void *)0xE500000000000000;
  String.append(_:)(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  v2._countAndFlagsBits = 58;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  if (*(_BYTE *)(v0 + 17))
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if (*(_BYTE *)(v0 + 17))
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v4);
  return v7;
}

uint64_t SnapshotTheme.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t type metadata accessor for SnapshotTheme()
{
  return objc_opt_self(_TtC8BookEPUB13SnapshotTheme);
}

uint64_t method lookup function for SnapshotTheme(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SnapshotTheme);
}

id sub_197E80@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "BKLeftTapTurnToNext");
  *a2 = (_BYTE)result;
  return result;
}

id sub_197EB0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setBKLeftTapTurnToNext:", *a1);
}

uint64_t sub_197EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v6;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3BFAF0);
  sub_555F0(v0, (uint64_t)qword_3BFAF0);
  v6 = type metadata accessor for ReadingSettingsManager();
  v1 = sub_319AC(&qword_3BFFC0);
  v2 = String.init<A>(describing:)(&v6, v1);
  return Logger.init(subsystem:category:)(0xD000000000000019, 0x80000000002CBCD0, v2, v3, v4);
}

void sub_197F58()
{
  __asm { BR              X10 }
}

void sub_197FB0()
{
  uint64_t v0;
  Swift::UInt v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  String.hash(into:)(v0, 0x7465697571, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  if (v2)
    v3 = 1802658148;
  else
    v3 = 0x746867696CLL;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  String.hash(into:)(v0, v3, v4);
  swift_bridgeObjectRelease(v4);
  v5 = BookFontTable.rawValue.getter();
  v7 = v6;
  String.hash(into:)(v0, v5, v6);
  swift_bridgeObjectRelease(v7);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_1980A8()
{
  char *v0;
  char v1;
  char v2;
  uint64_t v3;
  _QWORD v5[9];
  char v6;
  char v7;
  char v8;
  uint64_t v9;

  v1 = v0[1];
  v2 = v0[2];
  v3 = *((_QWORD *)v0 + 1);
  v6 = *v0;
  v7 = v1;
  v8 = v2;
  v9 = v3;
  Hasher.init(_seed:)(v5, 0);
  sub_197F58();
  return Hasher._finalize()();
}

Swift::Int sub_19810C(uint64_t a1)
{
  char *v1;
  char v2;
  char v3;
  uint64_t v4;
  _QWORD v6[9];
  char v7;
  char v8;
  char v9;
  uint64_t v10;

  v2 = v1[1];
  v3 = v1[2];
  v4 = *((_QWORD *)v1 + 1);
  v7 = *v1;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  Hasher.init(_seed:)(v6, a1);
  sub_197F58();
  return Hasher._finalize()();
}

double sub_19816C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  double result;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[8];
  uint64_t v24;
  _BYTE v25[8];
  uint64_t v26;

  v2 = v1;
  v4 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v5) = *(_BYTE *)a1;
  v7 = *(_BYTE *)(a1 + 1);
  v8 = *(_BYTE *)(a1 + 2);
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(v2 + 216);
  v11 = *(_BYTE *)(v2 + 217);
  v12 = *(_BYTE *)(v2 + 218);
  v13 = *(_QWORD *)(v2 + 224);
  *(_BYTE *)(v2 + 216) = *(_BYTE *)a1;
  *(_BYTE *)(v2 + 217) = v7;
  *(_BYTE *)(v2 + 218) = v8;
  *(_QWORD *)(v2 + 224) = v9;
  v25[0] = v10;
  v25[1] = v11;
  v25[2] = v12;
  v26 = v13;
  v23[0] = v5;
  v23[1] = v7;
  v23[2] = v8;
  v24 = v9;
  if (!sub_1A0210((uint64_t)v25, (uint64_t)v23))
  {
    v15 = *(_BYTE *)(v2 + 216);
    v16 = *(_BYTE *)(v2 + 217);
    v17 = *(_BYTE *)(v2 + 218);
    v18 = *(_QWORD *)(v2 + 224);
    v19 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v6, 1, 1, v19);
    type metadata accessor for MainActor(0);
    v20 = swift_retain();
    v21 = static MainActor.shared.getter(v20);
    v22 = swift_allocObject(&unk_386800, 56);
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = &protocol witness table for MainActor;
    *(_QWORD *)(v22 + 32) = v2;
    *(_BYTE *)(v22 + 40) = v15;
    *(_BYTE *)(v22 + 41) = v16;
    *(_BYTE *)(v22 + 42) = v17;
    *(_QWORD *)(v22 + 48) = v18;
    sub_67B40((uint64_t)v6, (uint64_t)&unk_3C0128, v22);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t ReadingSettingsManager.__allocating_init<A>(currentThemePersistence:contentSizeManager:themeDatabaseManager:styleManager:themeAppearanceManager:analyticsProvider:accessibilityStateProvider:userDefaults:hasUsedREIBefore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, char a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  __n128 v19;
  _QWORD v25[6];

  sub_49F1C((uint64_t)a5, (uint64_t)v25);
  v18 = sub_1A1060(a1, a2, a3, a4, v25, a6, a7, a8, a9, 1u, a10, a11, a12, a13, a14);
  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a6);
  swift_release();

  v19 = swift_unknownObjectRelease(a8);
  (*(void (**)(uint64_t, uint64_t, __n128))(*(_QWORD *)(a13 - 8) + 8))(a10, a13, v19);
  sub_34488(a5);
  return v18;
}

uint64_t sub_1983E4(char a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  _BOOL4 v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v4);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v33 = (uint64_t)&v31 - v7;
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - v9;
  v11 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v11);
  v34 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (unsigned __int8 *)&v31 - v14;
  __chkstk_darwin(v16);
  v18 = (unsigned __int8 *)&v31 - v17;
  sub_198934((char *)&v31 - v17);
  sub_1A1298((uint64_t)v18, (uint64_t)v15);
  v19 = *v15;
  if ((a2 & 1) != 0 && (a1 & 1) == 0 && v19 == 4)
  {
    v19 = 0;
    *v15 = 0;
  }
  v20 = (uint64_t)&v15[*(int *)(v11 + 20)];
  sub_B2DD0(v20, (uint64_t)v10);
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v10, 1, v21) == 1;
  sub_52128((uint64_t)v10, &qword_3BFBB0);
  if ((((v19 != 4) ^ v24) & 1) == 0)
  {
    v25 = v33;
    sub_B2DD0(v20, v33);
    v26 = v23((char *)v25, 1, v21);
    v27 = sub_52128(v25, &qword_3BFBB0);
    if (v26 == 1)
    {
      v28 = (uint64_t)v32;
      Date.init(timeIntervalSinceNow:)(v27, -10.0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
      sub_1A1250(v28, v20);
    }
    else
    {
      sub_52128(v20, &qword_3BFBB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    }
  }
  if (!sub_1A0374(v15, v18))
  {
    v29 = v34;
    sub_1A1298((uint64_t)v15, v34);
    sub_19F320(v29);
  }
  sub_1A1150((uint64_t)v18);
  return sub_1A1150((uint64_t)v15);
}

uint64_t sub_19867C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSString v10;
  id v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  _BYTE v23[24];
  uint64_t v24;

  v1 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - v8;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v0, "objectForKey:", v10);

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)(v22);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_5B70C((uint64_t)v22, (uint64_t)v23, (uint64_t *)&unk_3B96D0);
  if (!v24)
    return sub_52128((uint64_t)v23, (uint64_t *)&unk_3B96D0);
  result = swift_dynamicCast(&v21, v23, (char *)&type metadata for Any + 8, &type metadata for UInt, 6);
  if ((result & 1) != 0 && (v21 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_555F0(v13, (uint64_t)qword_3BFAF0);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "LayoutMode is Scroll. Migrating PageNavigationStyle to .scrolling", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    v18 = sub_198934(v9);
    *v9 = 3;
    Date.init(timeIntervalSinceNow:)(v18, -10.0);
    v19 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 0, 1, v19);
    sub_1A1250((uint64_t)v3, (uint64_t)&v9[*(int *)(v4 + 20)]);
    sub_1A1298((uint64_t)v9, (uint64_t)v6);
    sub_19F320((uint64_t)v6);
    return sub_1A1150((uint64_t)v9);
  }
  return result;
}

uint64_t sub_198934@<X0>(char *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  Swift::String v28;

  v2 = v1;
  v4 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = __chkstk_darwin(v7).n128_u64[0];
  v10 = (char *)&v27 - v9;
  v11 = objc_msgSend(v2, "BKPageTurnStyle", v8);
  if (v11)
  {
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v15 = v14;

    v28._countAndFlagsBits = v13;
    v28._object = v15;
    v16 = _s8BookEPUB19PageNavigationStyleO8rawValueACSgSS_tcfC_0(v28);
  }
  else
  {
    v16 = 4;
  }
  v17 = objc_msgSend(v2, "BKPageTurnStyleUserSelectionTimestamp");
  if (v17)
  {
    v18 = v17;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v19 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 0, 1, v19);
  }
  else
  {
    v20 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v10, 1, 1, v20);
  }
  v21 = objc_msgSend(v2, "BKPageTurnStyleReduceMotionEnabledTimestamp");
  if (v21)
  {
    v22 = v21;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v23 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 0, 1, v23);
  }
  else
  {
    v24 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
  }
  *a1 = v16;
  v25 = type metadata accessor for PageNavigationStyleState(0);
  sub_5B70C((uint64_t)v10, (uint64_t)&a1[*(int *)(v25 + 20)], &qword_3BFBB0);
  return sub_5B70C((uint64_t)v6, (uint64_t)&a1[*(int *)(v25 + 24)], &qword_3BFBB0);
}

double sub_198B24@<D0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11;
  char v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _DWORD *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  char v39;
  char v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  os_log_type_t v55;
  uint8_t *v56;
  char v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  double result;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[24];
  _BYTE v69[48];
  uint64_t v70;
  uint64_t v71;
  char v72;
  _QWORD v73[3];
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  char v79;
  __int16 v80;
  char v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;

  v11 = *(_BYTE *)(a1 + 1);
  v12 = *(_BYTE *)(a1 + 2);
  v13 = *(_QWORD *)(a1 + 56);
  LOBYTE(v80) = *(_BYTE *)a1;
  HIBYTE(v80) = v11;
  v81 = v12;
  v14 = *(_OWORD *)(a1 + 24);
  v82 = *(_OWORD *)(a1 + 8);
  v83 = v14;
  v84 = *(_OWORD *)(a1 + 40);
  v85 = v13;
  swift_bridgeObjectRetain(v82);
  BookThemeEntity.sanitizeThemeFont(using:)(a2, &v79);
  if (!v79)
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_555F0(v20, (uint64_t)qword_3BFAF0);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (_DWORD *)swift_slowAlloc(12, -1);
      v74 = swift_slowAlloc(32, -1);
      *v24 = 136446210;
      swift_beginAccess(&v80, v69, 0, 0);
      __asm { BR              X10 }
    }
    goto LABEL_26;
  }
  if (v79 == 1)
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_555F0(v15, (uint64_t)qword_3BFAF0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (_DWORD *)swift_slowAlloc(12, -1);
      v74 = swift_slowAlloc(32, -1);
      *v19 = 136446210;
      swift_beginAccess(&v80, v73, 0, 0);
      __asm { BR              X10 }
    }

    v29 = a3[3];
    v30 = a3[4];
    sub_472D0(a3, v29);
    swift_beginAccess(&v80, v69, 0, 0);
    v75 = v82;
    LOWORD(v74) = v80;
    BYTE2(v74) = v81;
    v76 = v83;
    v77 = v84;
    v78 = v85;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v30 + 24))(&v74, v29, v30);
    goto LABEL_27;
  }
  if (qword_3B58D0 != -1)
    swift_once(&qword_3B58D0, sub_197EC4);
  v64 = a4;
  v65 = a5;
  v25 = type metadata accessor for Logger(0);
  v66 = sub_555F0(v25, (uint64_t)qword_3BFAF0);
  v26 = Logger.logObject.getter(v66);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (_DWORD *)swift_slowAlloc(12, -1);
    v74 = swift_slowAlloc(32, -1);
    *v28 = 136446210;
    swift_beginAccess(&v80, v68, 0, 0);
    __asm { BR              X10 }
  }

  swift_beginAccess(&v80, v73, 1, 0);
  v31 = HIBYTE(v80);
  v32 = v81;
  v33 = a3[3];
  v34 = a3[4];
  sub_472D0(a3, v33);
  (*(void (**)(_BYTE *__return_ptr, _QWORD, uint64_t))(*(_QWORD *)(v34 + 8) + 16))(v69, 0, v33);
  LOBYTE(v74) = 0;
  BYTE1(v74) = v31;
  BYTE2(v74) = v32;
  v75 = *(_OWORD *)v69;
  v76 = *(_OWORD *)&v69[16];
  v77 = *(_OWORD *)&v69[32];
  v78 = v70;
  BookThemeEntity.sanitizeThemeFont(using:)(a2, &v72);
  if (v72)
  {
    if (v72 == 1)
    {
      v36 = Logger.logObject.getter(v35);
      v37 = static os_log_type_t.default.getter(v36);
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_0, v36, v37, "Modifying original theme to use default font.", v38, 2u);
        swift_slowDealloc(v38, -1, -1);
      }

      v39 = BYTE1(v74);
      v40 = BYTE2(v74);
      v41 = v75;
      v42 = v76;
      v67 = v77;
      v62 = v78;
      v63 = *((_QWORD *)&v77 + 1);
      v43 = v82;
      v44 = v74;
      v80 = v74;
      v81 = BYTE2(v74);
      v82 = v75;
      v83 = v76;
      v84 = v77;
      v85 = v78;
      swift_bridgeObjectRelease(v43);
      v45 = a3[3];
      v46 = a3[4];
      sub_472D0(a3, v45);
      v69[0] = v44;
      v69[1] = v39;
      v69[2] = v40;
      *(_OWORD *)&v69[8] = v41;
      *(_OWORD *)&v69[24] = v42;
      *(_QWORD *)&v69[40] = v67;
      v70 = v63;
      v71 = v62;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v46 + 24))(v69, v45, v46);
      ObjectType = swift_getObjectType(v64);
      (*(void (**)(uint64_t, uint64_t))(v65 + 24))(v44, ObjectType);
      goto LABEL_27;
    }
    swift_bridgeObjectRelease(v75);
    v22 = Logger.logObject.getter(v54);
    v55 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_0, v22, v55, "Unable to switch to original theme, default font.", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
    }
LABEL_26:

    goto LABEL_27;
  }
  v48 = Logger.logObject.getter(v35);
  v49 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v50 = 0;
    _os_log_impl(&dword_0, v48, v49, "Adopting original theme without modification.", v50, 2u);
    swift_slowDealloc(v50, -1, -1);
  }

  v51 = v82;
  v52 = v74;
  v80 = v74;
  v81 = BYTE2(v74);
  v82 = v75;
  v83 = v76;
  v84 = v77;
  v85 = v78;
  swift_bridgeObjectRelease(v51);
  v53 = swift_getObjectType(v64);
  (*(void (**)(uint64_t, uint64_t))(v65 + 24))(v52, v53);
LABEL_27:
  swift_beginAccess(&v80, &v74, 0, 0);
  v57 = HIBYTE(v80);
  v58 = v81;
  v59 = v85;
  *(_BYTE *)a6 = v80;
  *(_BYTE *)(a6 + 1) = v57;
  *(_BYTE *)(a6 + 2) = v58;
  v60 = v83;
  *(_OWORD *)(a6 + 8) = v82;
  *(_OWORD *)(a6 + 24) = v60;
  result = *(double *)&v84;
  *(_OWORD *)(a6 + 40) = v84;
  *(_QWORD *)(a6 + 56) = v59;
  return result;
}

uint64_t sub_1994EC()
{
  void *v0;
  uint64_t (*FunctionReplacement)(void);
  NSString v3;
  id v4;

  FunctionReplacement = (uint64_t (*)(void))swift_getFunctionReplacement(&off_3C0170, sub_1994EC);
  if (FunctionReplacement)
    return FunctionReplacement();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v0, "BOOLForKey:", v3);

  return (uint64_t)v4;
}

BookEPUB::ReadingLoupeVisibilityState sub_199568@<W0>(char *a1@<X8>)
{
  void *v1;
  uint64_t (*FunctionReplacement)(void);
  BookEPUB::ReadingLoupeVisibilityState result;
  NSString v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  _QWORD v10[2];
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  FunctionReplacement = (uint64_t (*)(void))swift_getFunctionReplacement(&off_3C0160, sub_199568);
  if (FunctionReplacement)
    return FunctionReplacement();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v1, "objectForKey:", v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v11);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_5B70C((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_3B96D0);
  if (!v13)
  {
    sub_52128((uint64_t)v12, (uint64_t *)&unk_3B96D0);
    goto LABEL_10;
  }
  if (!swift_dynamicCast(v10, v12, (char *)&type metadata for Any + 8, &type metadata for String, 6))
  {
LABEL_10:
    v8 = 0xE600000000000000;
    v7 = 0x6D756964656DLL;
    goto LABEL_11;
  }
  v7 = v10[0];
  v8 = v10[1];
LABEL_11:
  result = ReadingLoupeVisibilityState.init(rawValue:)(*(Swift::String *)&v7).value;
  v9 = v12[0];
  if (v12[0] == 4)
    v9 = 1;
  *a1 = v9;
  return result;
}

uint64_t ReadingSettingsManager.deinit()
{
  uint64_t v0;

  NWPathMonitor.cancel()();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  sub_34488((_QWORD *)(v0 + 48));
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  sub_34488((_QWORD *)(v0 + 120));

  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 176));

  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 208));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ReadingSettingsManager.__deallocating_deinit()
{
  uint64_t v0;

  ReadingSettingsManager.deinit();
  return swift_deallocClassInstance(v0, 280, 7);
}

double sub_199780@<D0>(uint64_t a1@<X8>)
{
  char v2;
  char v3;
  uint64_t v4;
  double result;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  CurrentValueSubject.value.getter(&v6);
  v2 = BYTE1(v6);
  v3 = BYTE2(v6);
  v4 = v10;
  *(_BYTE *)a1 = v6;
  *(_BYTE *)(a1 + 1) = v2;
  *(_BYTE *)(a1 + 2) = v3;
  *(_OWORD *)(a1 + 8) = v7;
  *(_OWORD *)(a1 + 24) = v8;
  result = *(double *)&v9;
  *(_OWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 56) = v4;
  return result;
}

void sub_1997EC(uint64_t a1)
{
  char v1;
  char v2;
  uint64_t v3;
  char v4[8];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v1 = *(_BYTE *)(a1 + 1);
  v2 = *(_BYTE *)(a1 + 2);
  v3 = *(_QWORD *)(a1 + 56);
  v4[0] = *(_BYTE *)a1;
  v4[1] = v1;
  v4[2] = v2;
  v5 = *(_OWORD *)(a1 + 8);
  v6 = *(_OWORD *)(a1 + 24);
  v7 = *(_OWORD *)(a1 + 40);
  v8 = v3;
  swift_bridgeObjectRetain(v5);
  sub_199878(v4);
}

_QWORD *sub_199858@<X0>(_QWORD *a1@<X8>)
{
  return CurrentValueSubject.value.getter(a1);
}

void sub_199878(char *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  char v52;
  _BYTE v53[8];
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  unsigned __int128 v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[48];
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *((_QWORD *)a1 + 1);
  v50 = *((_OWORD *)a1 + 2);
  v51 = *((_OWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 6);
  v7 = *((_QWORD *)a1 + 7);
  type metadata accessor for ReadingSettingsManager();
  LOBYTE(v59) = v2;
  BYTE1(v59) = v3;
  BYTE2(v59) = v4;
  *(_QWORD *)v60 = v5;
  *(_OWORD *)&v60[8] = v51;
  *(_OWORD *)&v60[24] = v50;
  *(_QWORD *)&v60[40] = v6;
  v61 = v7;
  sub_198B24((uint64_t)&v59, *(void **)(v1 + 24), (_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (uint64_t)&v62);
  swift_bridgeObjectRelease(v5);
  v8 = v62;
  v52 = BYTE1(v62);
  v9 = BYTE2(v62);
  v10 = *((_QWORD *)&v63 + 1);
  v47 = v63;
  v11 = v64;
  v12 = *((_QWORD *)&v65 + 1);
  v13 = v65;
  v14 = v66;
  sub_199DD8((unsigned __int8 *)&v62);
  v15 = v13;
  CurrentValueSubject.value.getter(&v62);
  LOWORD(v59) = v62;
  BYTE2(v59) = BYTE2(v62);
  v46 = v63;
  *(_OWORD *)v60 = v63;
  *(_OWORD *)&v60[16] = v64;
  *(_OWORD *)&v60[32] = v65;
  v61 = v66;
  v45 = v8;
  v53[0] = v8;
  v53[1] = v52;
  v53[2] = v9;
  v54 = v47;
  v55 = v10;
  v16 = v10;
  v49 = v14;
  v56 = v11;
  v57 = __PAIR128__(v12, v15);
  v48 = v12;
  v58 = v14;
  v17 = _s8BookEPUB0A11ThemeEntityV2eeoiySbAC_ACtFZ_0((uint64_t)&v59, (uint64_t)v53);
  swift_bridgeObjectRelease(v46);
  if (v17)
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v18 = type metadata accessor for Logger(0);
    sub_555F0(v18, (uint64_t)qword_3BFAF0);
    swift_bridgeObjectRetain(v47);
    v20 = Logger.logObject.getter(v19);
    v23 = static os_log_type_t.debug.getter(v20, v21, v22);
    if (os_log_type_enabled(v20, v23))
    {
      v24 = v15;
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      *(_DWORD *)v25 = 136315138;
      v59 = v26;
      LOBYTE(v62) = v45;
      BYTE1(v62) = v52;
      BYTE2(v62) = v9;
      *(_QWORD *)&v63 = v47;
      *((_QWORD *)&v63 + 1) = v10;
      v64 = v11;
      *(_QWORD *)&v65 = v24;
      *((_QWORD *)&v65 + 1) = v48;
      v66 = v14;
      swift_bridgeObjectRetain(v47);
      v27 = String.init<A>(describing:)(&v62, &type metadata for BookThemeEntity);
      v29 = v28;
      v62 = sub_33524(v27, v28, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v25 + 4);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease_n(v47, 2);
      _os_log_impl(&dword_0, v20, BYTE8(v11), "Skipping publishing identical theme:%s, privacy: .public", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v47, 2);
    }

  }
  else
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v30 = type metadata accessor for Logger(0);
    sub_555F0(v30, (uint64_t)qword_3BFAF0);
    v31 = swift_bridgeObjectRetain_n(v47, 2);
    v32 = Logger.logObject.getter(v31);
    v35 = static os_log_type_t.debug.getter(v32, v33, v34);
    if (os_log_type_enabled(v32, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      *(_DWORD *)v36 = 136315138;
      v59 = v44;
      v37 = v45;
      LOBYTE(v62) = v45;
      v38 = v52;
      BYTE1(v62) = v52;
      BYTE2(v62) = v9;
      *(_QWORD *)&v63 = v47;
      *((_QWORD *)&v63 + 1) = v10;
      v39 = *((_QWORD *)&v11 + 1);
      v64 = v11;
      *(_QWORD *)&v65 = v15;
      *((_QWORD *)&v65 + 1) = v48;
      v66 = v49;
      swift_bridgeObjectRetain(v47);
      v40 = String.init<A>(describing:)(&v62, &type metadata for BookThemeEntity);
      v42 = v41;
      v62 = sub_33524(v40, v41, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v36 + 4);
      swift_bridgeObjectRelease(v42);
      swift_bridgeObjectRelease_n(v47, 2);
      _os_log_impl(&dword_0, v32, v35, "Publishing new theme:%s, privacy: .public", v36, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      v16 = v10;
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v36, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n(v47, 2);

      v39 = *((_QWORD *)&v11 + 1);
      v37 = v45;
      v38 = v52;
    }
    LOBYTE(v62) = v37;
    BYTE1(v62) = v38;
    BYTE2(v62) = v9;
    *(_QWORD *)&v63 = v47;
    *((_QWORD *)&v63 + 1) = v16;
    *(_QWORD *)&v64 = v11;
    *((_QWORD *)&v64 + 1) = v39;
    *(_QWORD *)&v65 = v15;
    *((_QWORD *)&v65 + 1) = v48;
    v66 = v49;
    CurrentValueSubject.value.setter(&v62, v43);
  }
}

double sub_199DD8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  NSString v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v8 = *((_QWORD *)a1 + 5);
  v9 = *((_QWORD *)a1 + 6);
  v10 = *((_QWORD *)a1 + 7);
  v31 = *((_QWORD *)a1 + 2);
  v32 = *a1;
  LOBYTE(v34) = *a1;
  BYTE1(v34) = v3;
  BYTE2(v34) = v4;
  v35 = v5;
  v36 = v31;
  v29 = v7;
  v30 = v6;
  v37 = v6;
  v38 = v7;
  v27 = v9;
  v28 = v8;
  v39 = v8;
  v40 = v9;
  v26 = v10;
  v41 = v10;
  v11 = BookThemeEntity.fontFamily.getter();
  v13 = v12;
  v14 = *(void **)(v1 + 24);
  v15 = objc_msgSend(v14, "font");
  if (!v15)
    goto LABEL_6;
  v16 = v15;
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  v19 = v18;

  if (v17 != v11 || v19 != v13)
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v11, v13, 0);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) != 0)
      goto LABEL_7;
LABEL_6:
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setFont:", v21);

    goto LABEL_7;
  }
  swift_bridgeObjectRelease(v13);
LABEL_7:
  if ((*(_BYTE *)(v2 + 232) & 1) != 0 || (*(_BYTE *)(v2 + 232) = 1, !*(_QWORD *)(v2 + 96)))
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    v22 = *(_QWORD *)(v2 + 104);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 96));
    v24 = 256;
    if (!v3)
      v24 = 0;
    v34 = v24 | v32 | (v4 << 16);
    v35 = v5;
    v36 = v31;
    v37 = v30;
    v38 = v29;
    v39 = v28;
    v40 = v27;
    v41 = v26;
    swift_bridgeObjectRetain(v5);
    CurrentValueSubject.value.getter(&v33);
    (*(void (**)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 16))(2, &v34, v11, v13, v33, 0, ObjectType, v22);
    swift_bridgeObjectRelease(v5);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  return result;
}

uint64_t sub_199FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v1 = sub_319AC(&qword_3BFB08);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(_QWORD *)(v0 + 240);
  v5 = sub_319AC(&qword_3BFB10);
  v6 = sub_3DCC0((unint64_t *)&unk_3BFB18, &qword_3BFB10, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v7 = sub_B6DC0();
  Publisher<>.removeDuplicates()(v5, v6, v7);
  v8 = sub_3DCC0(&qword_3BFB28, &qword_3BFB08, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v9 = Publisher.eraseToAnyPublisher()(v1, v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v9;
}

double sub_19A0FC()
{
  double v1;

  CurrentValueSubject.value.getter(&v1);
  return v1;
}

uint64_t sub_19A12C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC(&qword_3BFB30);
  v1 = sub_3DCC0(&qword_3BFB38, &qword_3BFB30, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t ReadingSettingsManager.readingLoupeActiveSubject.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 256));
}

uint64_t sub_19A1A0()
{
  uint64_t v1;

  CurrentValueSubject.value.getter(&v1);
  return v1;
}

void sub_19A1D0(char a1, __n128 a2)
{
  char v3;

  v3 = a1;
  CurrentValueSubject.value.setter(&v3, a2);
  sub_19A21C(a1);
}

void sub_19A21C(char a1)
{
  void *v1;
  void (*FunctionReplacement)(_QWORD);
  Class isa;
  id v5;

  FunctionReplacement = (void (*)(_QWORD))swift_getFunctionReplacement(&off_3C0148, sub_19A21C);
  if (FunctionReplacement)
  {
    FunctionReplacement(a1 & 1);
  }
  else
  {
    isa = Bool._bridgeToObjectiveC()().super.super.isa;
    v5 = String._bridgeToObjectiveC()();
    objc_msgSend(v1, "setValue:forKey:", isa, v5);

  }
}

void (*sub_19A2BC(uint64_t a1))(uint64_t a1, __n128 a2)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 256);
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v3;
  CurrentValueSubject.value.getter((_QWORD *)(a1 + 17));
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_19A300;
}

void sub_19A300(uint64_t a1, __n128 a2)
{
  char v2;

  v2 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 17) = v2;
  CurrentValueSubject.value.setter(a1 + 17, a2);
  sub_19A21C(v2);
}

uint64_t sub_19A33C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC((uint64_t *)&unk_3B89F0);
  v1 = sub_3DCC0(&qword_3B6990, (uint64_t *)&unk_3B89F0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t ReadingSettingsManager.readingLoupeActiveDimmingSubject.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 264));
}

_QWORD *sub_19A3B0@<X0>(_QWORD *a1@<X8>)
{
  return CurrentValueSubject.value.getter(a1);
}

uint64_t sub_19A3D0(char *a1, __n128 a2)
{
  char v2;
  char v4;
  char v5;

  v5 = *a1;
  v2 = v5;
  CurrentValueSubject.value.setter(&v5, a2);
  v4 = v2;
  return sub_19A420((uint64_t)&v4);
}

uint64_t sub_19A420(uint64_t a1)
{
  uint64_t (*FunctionReplacement)(uint64_t);

  FunctionReplacement = (uint64_t (*)(uint64_t))swift_getFunctionReplacement(&off_3C0138, sub_19A420);
  if (!FunctionReplacement)
    __asm { BR              X10 }
  return FunctionReplacement(a1);
}

void sub_19A494(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  void *v16;
  NSString v17;
  NSString v18;

  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0xE600000000000000);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setValue:forKey:", v17, v18);

}

uint64_t (*sub_19A53C(_QWORD *a1))(uint64_t a1, char a2, __n128 a3)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 264);
  *a1 = v1;
  a1[1] = v2;
  CurrentValueSubject.value.getter(a1 + 2);
  return sub_19A578;
}

uint64_t sub_19A578(uint64_t a1, char a2, __n128 a3)
{
  char v4;
  char *v5;
  char v7;
  char v8;

  v4 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 17) = v4;
  CurrentValueSubject.value.setter(a1 + 17, a3);
  if ((a2 & 1) != 0)
  {
    v7 = v4;
    v5 = &v7;
  }
  else
  {
    v8 = v4;
    v5 = &v8;
  }
  return sub_19A420((uint64_t)v5);
}

uint64_t sub_19A5D8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC(&qword_3BFB40);
  v1 = sub_3DCC0(&qword_3BFB48, &qword_3BFB40, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t ReadingSettingsManager.readingLoupeAllowableSubject.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 272));
}

uint64_t sub_19A64C()
{
  uint64_t v1;

  CurrentValueSubject.value.getter(&v1);
  return v1;
}

uint64_t sub_19A67C(char a1, __n128 a2)
{
  char v3;

  v3 = a1;
  return CurrentValueSubject.value.setter(&v3, a2);
}

uint64_t (*sub_19A6AC(uint64_t a1))(uint64_t a1, __n128 a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + 272);
  CurrentValueSubject.value.getter((_QWORD *)(a1 + 9));
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_19A6EC;
}

uint64_t sub_19A6EC(uint64_t a1, __n128 a2)
{
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a1 + 8);
  return CurrentValueSubject.value.setter(a1 + 9, a2);
}

uint64_t sub_19A714()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC((uint64_t *)&unk_3B89F0);
  v1 = sub_3DCC0(&qword_3B6990, (uint64_t *)&unk_3B89F0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_19A780(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  _DWORD *v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  int v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;

  v37 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v37);
  v2 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - v6;
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - v9;
  __chkstk_darwin(v11);
  v13 = (unsigned __int8 *)&v34 - v12;
  __chkstk_darwin(v14);
  v16 = (unsigned __int8 *)&v34 - v15;
  CurrentValueSubject.value.getter((uint64_t *)((char *)&v34 - v15));
  v17 = sub_1A0374(a1, v16);
  sub_1A1150((uint64_t)v16);
  if (v17)
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v18 = type metadata accessor for Logger(0);
    sub_555F0(v18, (uint64_t)qword_3BFAF0);
    v19 = sub_1A1298((uint64_t)a1, (uint64_t)v4);
    v20 = Logger.logObject.getter(v19);
    v23 = static os_log_type_t.debug.getter(v20, v21, v22);
    if (os_log_type_enabled(v20, v23))
    {
      v24 = (_DWORD *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      *v24 = 136446210;
      __asm { BR              X10 }
    }

    v32 = (uint64_t)v4;
  }
  else
  {
    sub_1A1298((uint64_t)a1, (uint64_t)v16);
    CurrentValueSubject.value.setter(v16, v25);
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v26 = type metadata accessor for Logger(0);
    sub_555F0(v26, (uint64_t)qword_3BFAF0);
    sub_1A1298((uint64_t)a1, (uint64_t)v13);
    sub_1A1298((uint64_t)a1, (uint64_t)v10);
    v27 = sub_1A1298((uint64_t)a1, (uint64_t)v7);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter(v28);
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      v36 = v28;
      v30 = (_DWORD *)swift_slowAlloc(32, -1);
      v34 = swift_slowAlloc(96, -1);
      v38 = v34;
      *v30 = 136446722;
      v31 = *v13;
      v35 = v29;
      __asm { BR              X10 }
    }

    sub_1A1150((uint64_t)v7);
    sub_1A1150((uint64_t)v10);
    v32 = (uint64_t)v13;
  }
  sub_1A1150(v32);
  return sub_1A1150((uint64_t)a1);
}

uint64_t sub_19AD58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  CurrentValueSubject.value.getter(v3);
  v4 = sub_19ADDC(*(unsigned __int8 *)(v0 + 112));
  sub_1A1150((uint64_t)v3);
  return v4;
}

uint64_t sub_19ADDC(int a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  int v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  int v29;

  v29 = a1;
  v2 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v5);
  v28 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - v8;
  __chkstk_darwin(v10);
  v12 = (char *)&v28 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v28 - v18;
  sub_B2DD0((uint64_t)&v1[*(int *)(v2 + 24)], (uint64_t)v12);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v20(v12, 1, v13) == 1)
  {
    sub_52128((uint64_t)v12, &qword_3BFBB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    sub_B2DD0((uint64_t)&v1[*(int *)(v2 + 20)], (uint64_t)v9);
    v22 = v20(v9, 1, v13);
    sub_52128((uint64_t)v9, &qword_3BFBB0);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    sub_1A1298((uint64_t)v1, (uint64_t)v4);
    if (v22 == 1)
    {
      sub_1A1150((uint64_t)v4);
      v23 = *(void (**)(char *, uint64_t))(v14 + 8);
      v23(v16, v13);
      v23(v19, v13);
      return 2;
    }
    v24 = v28;
    sub_B2DD0((uint64_t)&v4[*(int *)(v2 + 20)], v28);
    if (v20((char *)v24, 1, v13) == 1)
    {
      __break(1u);
      JUMPOUT(0x19B114);
    }
    v25 = static Date.> infix(_:_:)(v16, v24);
    sub_1A1150((uint64_t)v4);
    v26 = *(void (**)(char *, uint64_t))(v14 + 8);
    v26(v16, v13);
    v26(v19, v13);
    v26((char *)v24, v13);
    if ((v25 & 1) != 0)
      return 2;
  }
  if (*v1 == 4)
    v21 = 1;
  else
    v21 = *v1;
  if ((v29 & 1) == 0)
    __asm { BR              X9 }
  return v21;
}

uint64_t sub_19B124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v1 = sub_319AC(&qword_3BFB50);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_319AC(&qword_3BFB58);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v0 + 200);
  v9 = *(_BYTE *)(v0 + 112);
  v10 = swift_allocObject(&unk_3864A8, 17);
  *(_BYTE *)(v10 + 16) = v9;
  swift_retain();
  v11 = sub_319AC(&qword_3BFB60);
  v12 = sub_3DCC0(&qword_3BFB68, &qword_3BFB60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher.map<A>(_:)(sub_1A119C, v10, v11, &type metadata for PageNavigationStyle, v12);
  swift_release();
  swift_release();
  v13 = sub_3DCC0((unint64_t *)&unk_3BFB70, &qword_3BFB50, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v14 = sub_177C30();
  Publisher<>.removeDuplicates()(v1, v13, v14);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v15 = sub_3DCC0((unint64_t *)&unk_3BFB80, &qword_3BFB58, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v16 = Publisher.eraseToAnyPublisher()(v5, v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v16;
}

double sub_19B300(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v3 = v2;
  v6 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_319AC(&qword_3BFB90);
  v10 = swift_allocObject(v9, 33);
  *(_OWORD *)(v10 + 16) = xmmword_2E5F80;
  *(_BYTE *)(v10 + 32) = a1;
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  type metadata accessor for MainActor(0);
  swift_retain();
  swift_bridgeObjectRetain(v10);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_3864D0, 49);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v14 + 32) = v3;
  *(_QWORD *)(v14 + 40) = v10;
  *(_BYTE *)(v14 + 48) = a2;
  sub_67B40((uint64_t)v8, (uint64_t)&unk_3BFBA0, v14);
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

uint64_t sub_19B42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(v6 + 104) = a6;
  *(_QWORD *)(v6 + 16) = a4;
  *(_QWORD *)(v6 + 24) = a5;
  v7 = type metadata accessor for Logger(0);
  *(_QWORD *)(v6 + 32) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 40) = v8;
  *(_QWORD *)(v6 + 48) = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 56) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 64) = v10;
  *(_QWORD *)(v6 + 72) = v11;
  return swift_task_switch(sub_19B4C4, v10, v11);
}

uint64_t sub_19B4C4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v10;
  char v11;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  *(_QWORD *)(v0 + 80) = v2;
  swift_getObjectType(v2);
  sub_18308C(&v11);
  *(_BYTE *)(v0 + 105) = v11;
  v3 = v1 + 6;
  v4 = v1[9];
  v5 = v1[10];
  sub_472D0(v3, v4);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = *(int **)(v6 + 32);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  *(_QWORD *)(v0 + 88) = v8;
  *v8 = v0;
  v8[1] = sub_19B56C;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v10)(*(_QWORD *)(v0 + 24), v4, v6);
}

uint64_t sub_19B56C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_19B5C4, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_19B5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  NSString v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  ThemeAppearanceManager.themeVariant.getter();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v0 + 96);
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 24);
    v6 = (unsigned __int8 *)(v5 + 32);
    swift_bridgeObjectRetain(v5);
    v40 = (char *)&type metadata for Any + 8;
    v41 = v4;
    v46 = v0;
    v42 = v3;
    do
    {
      v11 = *v6;
      v9 = v6 + 1;
      v10 = v11;
      if (!*(_QWORD *)(v3 + 16)
        || (sub_3BA4C(v10), (v13 & 1) == 0)
        || (v14 = v9,
            v15 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 56 * v12),
            v16 = *(_QWORD *)(v15 + 16),
            swift_bridgeObjectRetain(v15),
            !v16)
        || (v17 = sub_3B828(*(unsigned __int8 *)(v46 + 105)), (v18 & 1) == 0))
      {
        __asm { BR              X8 }
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 16 * v17 + 8);
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRelease(v15);
      v6 = v14;
      v0 = v46;
      v20 = *(void **)(v46 + 80);
      v21 = String._bridgeToObjectiveC()();
      v22 = objc_msgSend(v20, "fontForFontFamily:", v21, swift_bridgeObjectRelease(v19).n128_f64[0]);

      if (v22)
      {
        if ((objc_msgSend(v22, "isDownloadable") & 1) != 0)
        {
          if (qword_3B56D0 != -1)
            swift_once(&qword_3B56D0, sub_6CEE4);
          v23 = *(_QWORD *)(v46 + 48);
          v24 = *(_QWORD *)(v46 + 32);
          v25 = sub_555F0(v24, (uint64_t)qword_3CEF18);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v23, v25, v24);
          v26 = swift_unknownObjectRetain_n(v22, 2);
          v27 = Logger.logObject.getter(v26);
          v28 = v4;
          v29 = static os_log_type_t.info.getter();
          v45 = v6;
          if (os_log_type_enabled(v27, v29))
          {
            v30 = swift_slowAlloc(12, -1);
            v31 = swift_slowAlloc(32, -1);
            v47 = v31;
            *(_DWORD *)v30 = 136446210;
            v32 = objc_msgSend(v22, "familyName");
            if (!v32)
            {
              swift_unknownObjectRelease(v22);
              __break(1u);
              JUMPOUT(0x19BDA0);
            }
            v33 = v32;
            v0 = v46;
            v43 = *(_QWORD *)(v46 + 32);
            v44 = *(_QWORD *)(v46 + 48);
            v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
            v36 = v35;

            *(_QWORD *)(v30 + 4) = sub_33524(v34, v36, &v47);
            swift_bridgeObjectRelease(v36);
            swift_unknownObjectRelease_n(v22, 2);
            _os_log_impl(&dword_0, v27, v29, "ReadingSettingsManager attempting font download for %{public}s.", (uint8_t *)v30, 0xCu);
            swift_arrayDestroy(v31, 1, v40);
            swift_slowDealloc(v31, -1, -1);
            swift_slowDealloc(v30, -1, -1);

            v4 = v41;
            (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v43);
            v3 = v42;
          }
          else
          {
            v7 = *(_QWORD *)(v46 + 48);
            v8 = *(_QWORD *)(v46 + 32);
            swift_unknownObjectRelease_n(v22, 2);

            (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v7, v8);
            v4 = v28;
          }
          objc_msgSend(v22, "downloadWithAllowCellular:", *(unsigned __int8 *)(v0 + 104), v40);
          v6 = v45;
        }
        swift_unknownObjectRelease(v22);
      }
      --v2;
    }
    while (v2);
    v37 = *(_QWORD *)(v0 + 96);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
    v38 = v37;
  }
  else
  {
    v38 = *(_QWORD *)(v0 + 96);
  }
  swift_bridgeObjectRelease(v38);
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19BE1C()
{
  __n128 v0;
  BOOL v2;
  uint64_t v3;

  CurrentValueSubject.value.getter(&v3);
  v2 = (v3 & 1) == 0;
  return CurrentValueSubject.value.setter(&v2, v0);
}

uint64_t sub_19BE60(char *a1, __n128 a2)
{
  char v3;

  v3 = *a1;
  return CurrentValueSubject.value.setter(&v3, a2);
}

void sub_19BE94()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;

  v15 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v0 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject(&unk_3866C0, 24);
  swift_weakInit(v9 + 16);
  swift_retain();
  sub_899C8((uint64_t)sub_1A241C, v9);
  NWPathMonitor.pathUpdateHandler.setter(sub_1A241C, v9);
  swift_release_n(v9);
  sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v10);
  v16 = _swiftEmptyArrayStorage;
  v11 = sub_34284((unint64_t *)&qword_3B5960, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_319AC((uint64_t *)&unk_3BC520);
  v13 = sub_3DCC0((unint64_t *)&qword_3B5970, (uint64_t *)&unk_3BC520, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v3, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v2, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v15);
  v14 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000034, 0x80000000002CF420, v8, v5, v2, 0);
  NWPathMonitor.start(queue:)(v14);

}

double sub_19C0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  double result;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v28[24];

  v3 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for NWPath.Status(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v10);
  v12 = &v28[-v11 - 8];
  a2 += 16;
  swift_beginAccess(a2, v28, 0, 0);
  Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    v15 = Strong;
    NWPath.status.getter(Strong);
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for NWPath.Status.satisfied(_:), v6);
    v16 = static NWPath.Status.== infix(_:_:)(v12, v9);
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v9, v6);
    v17(v12, v6);
    if ((v16 & 1) != 0)
    {
      if (qword_3B56D0 != -1)
        swift_once(&qword_3B56D0, sub_6CEE4);
      v18 = type metadata accessor for Logger(0);
      v19 = sub_555F0(v18, (uint64_t)qword_3CEF18);
      v20 = Logger.logObject.getter(v19);
      v21 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_0, v20, v21, "ReadingSettingsManager Detected network connection.", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }

      swift_retain();
      NWPathMonitor.cancel()();
      swift_release();
      v23 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
      type metadata accessor for MainActor(0);
      v24 = swift_retain();
      v25 = static MainActor.shared.getter(v24);
      v26 = swift_allocObject(&unk_3867D8, 49);
      *(_QWORD *)(v26 + 16) = v25;
      *(_QWORD *)(v26 + 24) = &protocol witness table for MainActor;
      *(_QWORD *)(v26 + 32) = v15;
      *(_QWORD *)(v26 + 40) = &off_379C20;
      *(_BYTE *)(v26 + 48) = 0;
      sub_67B40((uint64_t)v5, (uint64_t)&unk_3C0118, v26);
      swift_release();
    }
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_19C370(unsigned __int8 *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  __n128 v49;
  uint64_t KeyPath;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  __n128 v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  void (*v67)(_BYTE *, uint64_t);
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  _QWORD *v88;
  __n128 v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __n128 v100;
  __n128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  __n128 v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  uint64_t v127;
  __n128 v128;
  __n128 v129;
  _BYTE *v130;
  void *v131;
  uint64_t v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __n128 v142;
  __n128 v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __n128 v153;
  __n128 v154;
  double result;
  _BYTE v156[12];
  int v157;
  _BYTE *v158;
  uint64_t v159;
  char *v160;
  _QWORD *v161;
  _QWORD *v162;
  _BYTE *v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  uint64_t v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _BYTE *v180;
  uint64_t v181;
  uint64_t v182;
  _BYTE *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _BYTE *v188;
  _BYTE *v189;
  _BYTE *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _BYTE *v197;
  _BYTE *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _BYTE *v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  _BYTE *v207;
  id v208;
  uint64_t v209;
  uint64_t v210;

  v2 = v1;
  v4 = sub_319AC(&qword_3BFFC8);
  v5 = *(_QWORD *)(v4 - 8);
  v204 = v4;
  v205 = v5;
  __chkstk_darwin(v4);
  v203 = &v156[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_319AC(&qword_3BFFD0);
  v8 = *(_QWORD *)(v7 - 8);
  v199 = v7;
  v200 = v8;
  __chkstk_darwin(v7);
  v197 = &v156[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_319AC(&qword_3BFFD8);
  v11 = *(_QWORD *)(v10 - 8);
  v201 = v10;
  v202 = v11;
  __chkstk_darwin(v10);
  v198 = &v156[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v186 = sub_319AC(&qword_3BFB08);
  v187 = *(_QWORD *)(v186 - 8);
  __chkstk_darwin(v186);
  v207 = &v156[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v191 = sub_319AC(&qword_3BFFE0);
  v192 = *(_QWORD *)(v191 - 8);
  __chkstk_darwin(v191);
  v188 = &v156[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_319AC(&qword_3BFFE8);
  v16 = *(_QWORD *)(v15 - 8);
  v193 = v15;
  v194 = v16;
  __chkstk_darwin(v15);
  v189 = &v156[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_319AC((uint64_t *)&unk_3BFFF0);
  v19 = *(_QWORD *)(v18 - 8);
  v195 = v18;
  v196 = v19;
  __chkstk_darwin(v18);
  v190 = &v156[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v184 = sub_319AC(&qword_3B69A8);
  v185 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v183 = &v156[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = sub_319AC(&qword_3C0000);
  __chkstk_darwin(v22);
  v180 = &v156[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v182 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v181 = *(_QWORD *)(v182 - 8);
  __chkstk_darwin(v182);
  v176 = &v156[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v169 = sub_319AC(&qword_3C0008);
  v171 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v167 = &v156[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v174 = sub_319AC((uint64_t *)&unk_3C0010);
  __chkstk_darwin(v174);
  v170 = &v156[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  v166 = &v156[-v28];
  v164 = sub_319AC(&qword_3BA388);
  v165 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v163 = &v156[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v172 = sub_319AC(&qword_3C0020);
  __chkstk_darwin(v172);
  v206 = &v156[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v175 = sub_319AC(&qword_3C0028);
  v177 = *(_QWORD *)(v175 - 8);
  __chkstk_darwin(v175);
  v168 = &v156[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v178 = sub_319AC(&qword_3C0030);
  v179 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v173 = &v156[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v159 = sub_319AC(&qword_3C0038);
  v160 = *(char **)(v159 - 8);
  __chkstk_darwin(v159);
  v158 = &v156[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = sub_319AC(&qword_3C0040);
  v162 = *(_QWORD **)(v34 - 8);
  __chkstk_darwin(v34);
  v36 = &v156[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v157 = *a1;
  v37 = v1[5];
  ObjectType = swift_getObjectType(v1[4]);
  v208 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(ObjectType, v37);
  v210 = ThemeAppearanceManager.themeVariantPublisher.getter();
  v209 = sub_19DE4C();
  v39 = sub_319AC((uint64_t *)&unk_3C0048);
  v40 = sub_319AC((uint64_t *)&unk_3BC530);
  v41 = sub_319AC(&qword_3C0058);
  v42 = sub_3DCC0((unint64_t *)&unk_3C0060, (uint64_t *)&unk_3C0048, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v43 = sub_3DCC0((unint64_t *)&unk_3BD150, (uint64_t *)&unk_3BC530, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v44 = sub_3DCC0(&qword_3C0070, &qword_3C0058, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publishers.CombineLatest3.init(_:_:_:)(&v208, &v210, &v209, v39, v40, v41, v42, v43, v44);
  v45 = swift_allocObject(&unk_3866C0, 24);
  swift_weakInit(v45 + 16);
  v46 = swift_allocObject(&unk_3866E8, 25);
  *(_QWORD *)(v46 + 16) = v45;
  *(_BYTE *)(v46 + 24) = v157;
  v47 = sub_3DCC0(&qword_3C0078, &qword_3C0040, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest3<A, B, C>);
  Publisher<>.sink(receiveValue:)(sub_1A21E8, v46, v34, v47);
  v48 = swift_release();
  ((void (*)(_BYTE *, uint64_t, __n128))v162[1])(v36, v34, v48);
  v49 = swift_beginAccess(v2 + 26, &v208, 33, 0);
  AnyCancellable.store(in:)(v2 + 26, v49);
  swift_endAccess(&v208);
  swift_release();
  v161 = v2;
  KeyPath = swift_getKeyPath(&unk_2F0A38);
  v51 = v158;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(KeyPath, 5);
  swift_release();
  v52 = swift_allocObject(&unk_3866C0, 24);
  swift_weakInit(v52 + 16);
  v53 = sub_3DCC0((unint64_t *)&unk_3C0080, &qword_3C0038, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
  v54 = v159;
  Publisher<>.sink(receiveValue:)(sub_1A21F4, v52, v159, v53);
  v55 = swift_release();
  (*((void (**)(_BYTE *, uint64_t, __n128))v160 + 1))(v51, v54, v55);
  v162 = v2 + 26;
  v56 = swift_beginAccess(v2 + 26, &v208, 33, 0);
  AnyCancellable.store(in:)(v2 + 26, v56);
  swift_endAccess(&v208);
  swift_release();
  v57 = swift_getKeyPath(&unk_2F0A60);
  v58 = v163;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v57, 5);
  swift_release();
  v59 = sub_3DCC0(&qword_3BA3A8, &qword_3BA388, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
  v60 = v164;
  Publisher.map<A>(_:)(address(of:), 0, v164, (char *)&type metadata for () + 8, v59);
  (*(void (**)(_BYTE *, uint64_t))(v165 + 8))(v58, v60);
  v61 = swift_getKeyPath(&off_2F0A88);
  v62 = v167;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v61, 5);
  swift_release();
  v63 = sub_3DCC0((unint64_t *)&unk_3C0090, &qword_3C0008, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
  v64 = v166;
  v65 = v169;
  v160 = (char *)&type metadata for () + 8;
  v66 = v62;
  Publisher.map<A>(_:)(address(of:), 0, v169, (char *)&type metadata for () + 8, v63);
  v67 = *(void (**)(_BYTE *, uint64_t))(v171 + 8);
  v67(v66, v65);
  v68 = swift_getKeyPath(&unk_2F0AB0);
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v68, 5);
  swift_release();
  v69 = v170;
  Publisher.map<A>(_:)(address(of:), 0, v65, (char *)&type metadata for () + 8, v63);
  v67(v66, v65);
  v70 = sub_3DCC0(&qword_3BA3B0, &qword_3C0020, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v71 = sub_3DCC0((unint64_t *)&unk_3C00A0, (uint64_t *)&unk_3C0010, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v72 = v168;
  v73 = Publishers.Merge3.init(_:_:_:)(v206, v64, v69, v172, v174, v174, v70, v71, v71);
  v74 = v176;
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)(v73, 0.1);
  v208 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v75 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v76 = (uint64_t)v180;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v180, 1, 1, v75);
  v77 = sub_34450(0, &qword_3B9B60, NSRunLoop_ptr);
  v78 = sub_3DCC0((unint64_t *)&unk_3C00B0, &qword_3C0028, (uint64_t)&protocol conformance descriptor for Publishers.Merge3<A, B, C>);
  v79 = sub_A9064();
  v80 = v173;
  v81 = v175;
  Publisher.debounce<A>(for:scheduler:options:)(v74, &v208, v76, v175, v77, v78, v79);
  sub_52128(v76, &qword_3C0000);

  (*(void (**)(_BYTE *, uint64_t))(v181 + 8))(v74, v182);
  (*(void (**)(_BYTE *, uint64_t))(v177 + 8))(v72, v81);
  v82 = swift_allocObject(&unk_3866C0, 24);
  v83 = v161;
  swift_weakInit(v82 + 16);
  v84 = swift_allocObject(&unk_386710, 32);
  *(_QWORD *)(v84 + 16) = sub_1A2298;
  *(_QWORD *)(v84 + 24) = v82;
  v85 = sub_3DCC0((unint64_t *)&unk_3C00C0, &qword_3C0030, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v86 = v178;
  Publisher<>.sink(receiveValue:)(sub_542B4, v84, v178, v85);
  v87 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v179 + 8))(v80, v86, v87);
  v88 = v162;
  v89 = swift_beginAccess(v162, &v208, 33, 0);
  AnyCancellable.store(in:)(v88, v89);
  swift_endAccess(&v208);
  swift_release();
  v90 = v83[18];
  v91 = v83[19];
  v92 = v83;
  sub_472D0(v83 + 15, v90);
  v208 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v91 + 16))(v90, v91);
  v93 = sub_319AC((uint64_t *)&unk_3BCEC0);
  v94 = sub_3DCC0((unint64_t *)&unk_3BE700, (uint64_t *)&unk_3BCEC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v95 = v183;
  Publisher.map<A>(_:)(address(of:), 0, v93, v160, v94);
  swift_release();
  v96 = swift_allocObject(&unk_3866C0, 24);
  swift_weakInit(v96 + 16);
  v97 = swift_allocObject(&unk_386738, 32);
  *(_QWORD *)(v97 + 16) = sub_1A22C4;
  *(_QWORD *)(v97 + 24) = v96;
  v98 = sub_3DCC0(&qword_3B69B8, &qword_3B69A8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v99 = v184;
  Publisher<>.sink(receiveValue:)(sub_1A2534, v97, v184, v98);
  v100 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v185 + 8))(v95, v99, v100);
  v101 = swift_beginAccess(v88, &v208, 33, 0);
  AnyCancellable.store(in:)(v88, v101);
  swift_endAccess(&v208);
  swift_release();
  sub_19F130();
  v102 = v92[23];
  v103 = swift_getObjectType(v92[22]);
  v208 = (id)sub_B3344(v103, *(_QWORD *)(v102 + 8));
  v206 = (_BYTE *)v92[30];
  v210 = (uint64_t)v206;
  v104 = sub_319AC(&qword_3BFB10);
  v185 = v104;
  v105 = sub_3DCC0((unint64_t *)&unk_3BFB18, &qword_3BFB10, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v184 = v105;
  v183 = (_BYTE *)sub_B6DC0();
  v106 = v207;
  Publisher<>.removeDuplicates()(v104, v105, v183);
  v182 = sub_3DCC0(&qword_3BFB28, &qword_3BFB08, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v107 = v186;
  v108 = Publisher.eraseToAnyPublisher()(v186, v182);
  v187 = *(_QWORD *)(v187 + 8);
  ((void (*)(_BYTE *, uint64_t))v187)(v106, v107);
  v210 = v108;
  v109 = sub_319AC((uint64_t *)&unk_3BC540);
  v110 = sub_319AC((uint64_t *)&unk_3BE750);
  v111 = sub_3DCC0((unint64_t *)&unk_3C00D0, (uint64_t *)&unk_3BC540, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v112 = sub_3DCC0(&qword_3B9B58, (uint64_t *)&unk_3BE750, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v113 = v188;
  Publishers.CombineLatest.init(_:_:)(&v208, &v210, v109, v110, v111, v112);
  v114 = v92[3];
  v115 = swift_allocObject(&unk_386760, 24);
  *(_QWORD *)(v115 + 16) = v114;
  v116 = swift_allocObject(&unk_386788, 32);
  *(_QWORD *)(v116 + 16) = sub_1A22F0;
  *(_QWORD *)(v116 + 24) = v115;
  v117 = sub_3DCC0(&qword_3C00E0, &qword_3BFFE0, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  swift_unknownObjectRetain(v114);
  v118 = v189;
  v119 = v191;
  Publisher.map<A>(_:)(sub_1A22F8, v116, v191, &type metadata for CGFloat, v117);
  v120 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v192 + 8))(v113, v119, v120);
  v121 = sub_3DCC0(&qword_3C00E8, &qword_3BFFE8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v122 = v190;
  v123 = v193;
  Publisher.removeDuplicates(by:)(sub_19DC78, 0, v193, v121);
  (*(void (**)(_BYTE *, uint64_t))(v194 + 8))(v118, v123);
  v124 = swift_getKeyPath(&unk_2F0AD8);
  v208 = (id)v92[31];
  v125 = v208;
  v126 = sub_3DCC0(&qword_3C00F0, (uint64_t *)&unk_3BFFF0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  swift_retain();
  v127 = v195;
  Publisher<>.assign<A>(to:on:)(v124, &v208, v195, v126);
  swift_release();
  v128 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v196 + 8))(v122, v127, v128);
  v129 = swift_beginAccess(v88, &v208, 33, 0);
  AnyCancellable.store(in:)(v88, v129);
  swift_endAccess(&v208);
  swift_release();
  v130 = v207;
  v208 = v206;
  Publisher<>.removeDuplicates()(v185, v184, v183);
  v131 = (void *)Publisher.eraseToAnyPublisher()(v107, v182);
  ((void (*)(_BYTE *, uint64_t))v187)(v130, v107);
  v208 = v131;
  v132 = swift_getKeyPath(&unk_2F0B18);
  v133 = v197;
  Publisher.map<A>(_:)(v132, v110, v112);
  swift_release();
  swift_release();
  v134 = sub_3DCC0(&qword_3C00F8, &qword_3BFFD0, (uint64_t)&protocol conformance descriptor for Publishers.MapKeyPath<A, B>);
  v136 = v198;
  v135 = v199;
  Publisher<>.removeDuplicates()(v199, v134, &protocol witness table for String);
  (*(void (**)(_BYTE *, uint64_t))(v200 + 8))(v133, v135);
  v137 = swift_allocObject(&unk_3867B0, 32);
  v138 = v92[12];
  v139 = v92[13];
  *(_QWORD *)(v137 + 24) = v139;
  swift_unknownObjectWeakInit(v137 + 16, v138);
  v140 = sub_3DCC0(&qword_3C0100, &qword_3BFFD8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v141 = v201;
  Publisher<>.sink(receiveValue:)(sub_1A23C8, v137, v201, v140);
  v142 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v202 + 8))(v136, v141, v142);
  v143 = swift_beginAccess(v88, &v208, 33, 0);
  AnyCancellable.store(in:)(v88, v143);
  swift_endAccess(&v208);
  swift_release();
  v208 = v125;
  v144 = sub_319AC(&qword_3BFB30);
  v145 = sub_3DCC0(&qword_3BFB38, &qword_3BFB30, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v208 = (id)Publisher.eraseToAnyPublisher()(v144, v145);
  v146 = sub_319AC(&qword_3B9B48);
  v147 = sub_3DCC0((unint64_t *)&unk_3BE780, &qword_3B9B48, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v148 = sub_1A23D0();
  v149 = v203;
  Publisher<>.removeDuplicates()(v146, v147, v148);
  swift_release();
  v150 = swift_allocObject(&unk_3867B0, 32);
  *(_QWORD *)(v150 + 24) = v139;
  swift_unknownObjectWeakInit(v150 + 16, v138);
  v151 = sub_3DCC0(&qword_3C0110, &qword_3BFFC8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v152 = v204;
  Publisher<>.sink(receiveValue:)(sub_1A2414, v150, v204, v151);
  v153 = swift_release();
  (*(void (**)(_BYTE *, uint64_t, __n128))(v205 + 8))(v149, v152, v153);
  v154 = swift_beginAccess(v88, &v208, 33, 0);
  AnyCancellable.store(in:)(v88, v154);
  swift_endAccess(&v208);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

double sub_19D78C(unsigned __int8 *a1, uint64_t a2, char a3)
{
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  _DWORD *v14;
  double result;
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18[3];

  v4 = *a1;
  v5 = a1[1];
  v6 = *((_QWORD *)a1 + 1);
  v7 = a2 + 16;
  if (qword_3B58D0 != -1)
    swift_once(&qword_3B58D0, sub_197EC4);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_555F0(v8, (uint64_t)qword_3BFAF0);
  v10 = Logger.logObject.getter(v9);
  v13 = static os_log_type_t.debug.getter(v10, v11, v12);
  if (os_log_type_enabled(v10, v13))
  {
    v14 = (_DWORD *)swift_slowAlloc(22, -1);
    v18[0] = swift_slowAlloc(64, -1);
    *v14 = 136446466;
    __asm { BR              X9 }
  }

  swift_beginAccess(v7, v18, 0, 0);
  if (swift_weakLoadStrong(v7))
  {
    v16[0] = v4;
    v16[1] = v5;
    v16[2] = a3;
    v17 = v6;
    sub_19816C((uint64_t)v16);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

uint64_t sub_19DA48(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    swift_beginAccess(result + 16, &v6, 1, 0);
    *(_BYTE *)(v5 + 16) = v2;
    return swift_release(v5);
  }
  return result;
}

double sub_19DAB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double result;
  _BYTE v7[24];

  v2 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v2);
  v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v7, 0, 0);
  if (swift_weakLoadStrong(a1))
  {
    sub_198934(v4);
    sub_19A780((unsigned __int8 *)v4);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_19DB5C(uint64_t a1)
{
  uint64_t v1;
  double result;
  _BYTE v3[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v3, 0, 0);
  if (swift_weakLoadStrong(v1))
  {
    sub_19F130();
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

double sub_19DBB0(uint64_t a1, char *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  float v9;
  float v10;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v5 = *a2;
  LOWORD(v12) = *(_WORD *)a2;
  BYTE2(v12) = a2[2];
  v13 = *(_OWORD *)(a2 + 8);
  v14 = *(_OWORD *)(a2 + 24);
  v15 = *(_OWORD *)(a2 + 40);
  v16 = *((_QWORD *)a2 + 7);
  BookThemeEntity.fontFamily.getter();
  v7 = v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(a3, "fontSizeForFont:category:", v8, a1, swift_bridgeObjectRelease(v7).n128_f64[0], v12, v13, v14, v15, v16);
  v10 = v9;

  return dbl_2F0B40[v5] * v10;
}

BOOL sub_19DC78(double *a1, double *a2)
{
  return vabdd_f64(*a1, *a2) < 0.001;
}

uint64_t sub_19DC98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BookThemeEntity.fontFamily.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

double sub_19DD00(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(_QWORD *, uint64_t, uint64_t);
  _QWORD v12[2];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  _BYTE v17[24];

  v4 = *a1;
  v3 = a1[1];
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType(Strong);
    v12[0] = v4;
    v12[1] = v3;
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v16 = 2;
    v11 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain(v3);
    v11(v12, ObjectType, v9);
    swift_bridgeObjectRelease(v3);
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

double sub_19DDB0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  _BYTE v16[24];

  v3 = *a1;
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType(Strong);
    v10 = v3;
    v11 = 0u;
    v12 = 0u;
    v13 = 0u;
    v14 = 0;
    v15 = 4;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 8))(&v10, ObjectType, v8);
    *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_19DE4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = sub_319AC(&qword_3BFF78);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_319AC(&qword_3BFF80);
  v23 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_319AC(&qword_3BFF88);
  v24 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + 6;
  v13 = v0[9];
  v12 = v0[10];
  sub_472D0(v11, v13);
  v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 8))(v13);
  v14 = swift_allocObject(&unk_3866C0, 24);
  swift_weakInit(v14 + 16);
  v15 = sub_319AC(&qword_3BFF90);
  v16 = sub_3DCC0(&qword_3BFF98, &qword_3BFF90, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.filter(_:)(sub_1A21BC, v14, v15, v16);
  swift_release();
  swift_release();
  v25 = 0;
  v17 = sub_3DCC0(&qword_3BFFA0, &qword_3BFF78, (uint64_t)&protocol conformance descriptor for Publishers.Filter<A>);
  Publisher.scan<A>(_:_:)(&v25, sub_19E4B0, 0, v1, &type metadata for Int, v17);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v18 = sub_3DCC0(&qword_3BFFA8, &qword_3BFF80, (uint64_t)&protocol conformance descriptor for Publishers.Scan<A, B>);
  Publisher.prepend(_:)(&off_379BF8, v5, v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  v19 = sub_3DCC0((unint64_t *)&unk_3BFFB0, &qword_3BFF88, (uint64_t)&protocol conformance descriptor for Publishers.Concatenate<A, B>);
  v20 = Publisher.eraseToAnyPublisher()(v8, v19);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
  return v20;
}

uint64_t sub_19E0E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v28, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong && (v5 = *(unsigned __int8 *)(Strong + 216), swift_release(), (sub_1B2184(v5, v2) & 1) != 0))
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_555F0(v6, (uint64_t)qword_3BFAF0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (_DWORD *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *v10 = 136315138;
      __asm { BR              X9 }
    }

    return 1;
  }
  else
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v11 = type metadata accessor for Logger(0);
    sub_555F0(v11, (uint64_t)qword_3BFAF0);
    v12 = swift_bridgeObjectRetain_n(v2, 2);
    v13 = Logger.logObject.getter(v12);
    v16 = static os_log_type_t.debug.getter(v13, v14, v15);
    if (os_log_type_enabled(v13, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      v27 = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = sub_4233C();
      swift_bridgeObjectRetain(v2);
      v21 = Set.description.getter(v20, &type metadata for BookThemeType, v19);
      v23 = v22;
      swift_bridgeObjectRelease(v2);
      v26 = sub_33524(v21, v23, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v17 + 4);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease_n(v2, 2);
      _os_log_impl(&dword_0, v13, v16, "Ignoring change to unwatched theme types '%s'", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v2, 2);
    }

    return 0;
  }
}

_QWORD *sub_19E4B0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

uint64_t sub_19E4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)(v6 + 200) = a5;
  *(_QWORD *)(v6 + 144) = a4;
  *(_QWORD *)(v6 + 152) = a6;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 160) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 168) = v8;
  *(_QWORD *)(v6 + 176) = v9;
  return swift_task_switch(sub_19E538, v8, v9);
}

uint64_t sub_19E538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  int v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v42[8];
  uint64_t v43;
  uint64_t v44[2];

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_DWORD *)(v0 + 200);
  v4 = *(_BYTE *)(v1 + 216);
  v5 = *(_BYTE *)(v1 + 217);
  v6 = *(_BYTE *)(v1 + 218);
  v7 = *(_QWORD *)(v1 + 224);
  v42[0] = v4;
  v42[1] = v5;
  v42[2] = v6;
  v43 = v7;
  LOWORD(v44[0]) = v3 & 0x1FF;
  v8 = (v3 >> 8) & 1;
  BYTE2(v44[0]) = BYTE2(v3);
  v44[1] = v2;
  if (sub_1A0210((uint64_t)v42, (uint64_t)v44))
  {
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_555F0(v9, (uint64_t)qword_3BFAF0);
    *(_QWORD *)(v0 + 184) = v10;
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v39 = *(_QWORD *)(v0 + 152);
      v13 = *(_DWORD *)(v0 + 200);
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      *(_DWORD *)v14 = 136315138;
      v44[0] = v15;
      *(_BYTE *)(v0 + 104) = v13;
      *(_BYTE *)(v0 + 105) = v8;
      *(_BYTE *)(v0 + 106) = BYTE2(v13);
      *(_QWORD *)(v0 + 112) = v39;
      v16 = String.init<A>(describing:)(v0 + 104, &type metadata for ReadingSettingsManager.ThemeSpec);
      v18 = v17;
      *(_QWORD *)(v0 + 136) = sub_33524(v16, v17, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v14 + 4);
      swift_bridgeObjectRelease(v18);
      _os_log_impl(&dword_0, v11, v12, "applyThemeSpec: %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    v19 = *(unsigned int *)(v0 + 200);
    v20 = *(_QWORD **)(v0 + 144);
    v21 = v20[9];
    v22 = v20[10];
    sub_472D0(v20 + 6, v21);
    v23 = *(_QWORD *)(v22 + 8);
    v24 = *(int **)(v23 + 24);
    v41 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v24 + *v24);
    v25 = (_QWORD *)swift_task_alloc(v24[1]);
    *(_QWORD *)(v0 + 192) = v25;
    *v25 = v0;
    v25[1] = sub_19E93C;
    return v41(v0 + 16, v19, v21, v23);
  }
  else
  {
    swift_release();
    if (qword_3B58D0 != -1)
      swift_once(&qword_3B58D0, sub_197EC4);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_555F0(v27, (uint64_t)qword_3BFAF0);
    v29 = Logger.logObject.getter(v28);
    v32 = static os_log_type_t.debug.getter(v29, v30, v31);
    if (os_log_type_enabled(v29, v32))
    {
      v40 = *(_QWORD *)(v0 + 152);
      v33 = *(_DWORD *)(v0 + 200);
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      v35 = swift_slowAlloc(32, -1);
      *(_DWORD *)v34 = 136315138;
      v44[0] = v35;
      *(_BYTE *)(v0 + 88) = v33;
      *(_BYTE *)(v0 + 89) = v8;
      *(_BYTE *)(v0 + 90) = BYTE2(v33);
      *(_QWORD *)(v0 + 96) = v40;
      v36 = String.init<A>(describing:)(v0 + 88, &type metadata for ReadingSettingsManager.ThemeSpec);
      v38 = v37;
      *(_QWORD *)(v0 + 120) = sub_33524(v36, v37, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v34 + 4);
      swift_bridgeObjectRelease(v38);
      _os_log_impl(&dword_0, v29, v32, "applyThemeSpec(): Ignoring stale themeSpec: %s", v34, 0xCu);
      swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v34, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_19E93C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));
  return swift_task_switch(sub_19E988, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_19E988()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  int v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[8];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_DWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 144);
  swift_release();
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 56);
  v37 = *(_QWORD *)(v0 + 48);
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_BYTE *)(v3 + 217);
  v11 = *(_BYTE *)(v3 + 218);
  v12 = *(_QWORD *)(v3 + 224);
  v38[0] = *(_BYTE *)(v3 + 216);
  v38[1] = v10;
  v38[2] = v11;
  v39 = v12;
  LOWORD(v40) = v2 & 0x1FF;
  BYTE2(v40) = BYTE2(v2);
  v41 = v1;
  if (sub_1A0210((uint64_t)v38, (uint64_t)&v40))
  {
    v13 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v13 + 96);
    if (v14)
    {
      v34 = v8;
      v36 = v5;
      v15 = *(_DWORD *)(v0 + 200);
      v16 = *(_QWORD *)(v13 + 104);
      ObjectType = swift_getObjectType(v14);
      v40 = *(_QWORD *)&v15 & 0xFF01FFLL;
      v41 = v4;
      v17 = v37;
      v42 = v36;
      v43 = v6;
      v44 = v7;
      v45 = v37;
      v46 = v34;
      v47 = v9;
      v48 = 1;
      v18 = *(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v16 + 8);
      v19 = swift_bridgeObjectRetain(v4);
      v18(&v40, ObjectType, v16, v19);
      v8 = v34;
      v5 = v36;
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v17 = v37;
    }
    v31 = *(_DWORD *)(v0 + 200);
    LOWORD(v40) = v31 & 0x1FF;
    BYTE2(v40) = BYTE2(v31);
    v41 = v4;
    v42 = v5;
    v43 = v6;
    v44 = v7;
    v45 = v17;
    v46 = v8;
    v47 = v9;
    sub_199878((char *)&v40);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
    v21 = Logger.logObject.getter(v20);
    v24 = static os_log_type_t.debug.getter(v21, v22, v23);
    if (os_log_type_enabled(v21, v24))
    {
      v35 = *(_QWORD *)(v0 + 152);
      v25 = *(_DWORD *)(v0 + 200);
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      *(_DWORD *)v26 = 136315138;
      v40 = v27;
      *(_BYTE *)(v0 + 72) = v25;
      *(_BYTE *)(v0 + 73) = BYTE1(v25) & 1;
      *(_BYTE *)(v0 + 74) = BYTE2(v25);
      *(_QWORD *)(v0 + 80) = v35;
      v28 = String.init<A>(describing:)(v0 + 72, &type metadata for ReadingSettingsManager.ThemeSpec);
      v30 = v29;
      *(_QWORD *)(v0 + 128) = sub_33524(v28, v29, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 128, v0 + 136, v26 + 4);
      swift_bridgeObjectRelease(v30);
      _os_log_impl(&dword_0, v21, v24, "applyThemeSpec(): Ignoring stale fetchTheme() response for spec %s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_19EC28()
{
  uint64_t v0;
  _QWORD v1[9];

  CurrentValueSubject.value.getter(v1);
  v0 = LOBYTE(v1[0]);
  swift_bridgeObjectRelease(v1[1]);
  __asm { BR              X9 }
}

uint64_t sub_19EC98(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_19ED00 + dword_19F01C[v2]))(0x7465697571, a2, 0x6C616E696769726FLL);
}

uint64_t sub_19ED20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  id v19;
  unsigned int v20;
  char v21;
  char v22;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[8];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (a1 == 0x7465697571 && v2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease_n(0xE500000000000000, 2);
    v4 = 0;
  }
  else
  {
    v5 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v2, 0x7465697571, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(0xE500000000000000);
    v4 = 0;
    if ((v5 & 1) == 0)
    {
      v6 = v3[9];
      v7 = v3[10];
      sub_472D0(v3 + 6, v6);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8) + 16))(&v29, v1, v6);
      v8 = v29;
      v9 = v30;
      v10 = v33;
      v26 = v31;
      v27 = v32;
      v12 = v34;
      v11 = v35;
      CurrentValueSubject.value.getter(&v29);
      v13 = BYTE1(v29);
      swift_bridgeObjectRelease(v30);
      CurrentValueSubject.value.getter(v28);
      v14 = BYTE2(v28[0]);
      swift_bridgeObjectRelease(v28[1]);
      v15 = (void *)v3[3];
      LOBYTE(v29) = v1;
      v24 = v14;
      v25 = v13;
      BYTE1(v29) = v13;
      BYTE2(v29) = v14;
      v30 = v8;
      v31 = v9;
      v32 = v26;
      v33 = v27;
      v34 = v10;
      v35 = v12;
      v36 = v11;
      BookThemeEntity.fontFamily.getter();
      v17 = v16;
      v18 = String._bridgeToObjectiveC()();
      v19 = objc_msgSend(v15, "fontForFontFamily:", v18, swift_bridgeObjectRelease(v17).n128_f64[0]);

      if (v19 && (v20 = objc_msgSend(v19, "isAvailable"), swift_unknownObjectRelease(v19), v20))
      {
        swift_bridgeObjectRelease(v8);
        v4 = 1;
      }
      else
      {
        LOBYTE(v29) = v1;
        BYTE1(v29) = v25;
        BYTE2(v29) = v24;
        v30 = v8;
        v31 = v9;
        v32 = v26;
        v33 = v27;
        v34 = v10;
        v35 = v12;
        v36 = v11;
        BookThemeEntity.defaultFontAvailable(using:)();
        v22 = v21;
        swift_bridgeObjectRelease(v8);
        if ((v22 & 1) == 0)
          __asm { BR              X10 }
        v4 = 1;
      }
    }
  }
  return v4 & 1;
}

uint64_t sub_19F04C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v1;
  *(_BYTE *)(v2 + 32) = a1;
  v3 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v2 + 24) = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_19F0BC, v4, v5);
}

uint64_t sub_19F0BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  swift_release();
  sub_19EC28();
  if ((v1 & 1) != 0)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(_QWORD *)(v2 + 40);
    v4 = *(unsigned __int8 *)(v0 + 32);
    ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 32));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24))(v4, ObjectType, v3);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19F130()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;

  v1 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v1);
  v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - v4;
  v6 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v6);
  v8 = (unsigned __int8 *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - v10;
  CurrentValueSubject.value.getter((uint64_t *)((char *)&v23 - v10));
  v12 = (uint64_t)&v11[*(int *)(v6 + 24)];
  sub_B2DD0(v12, (uint64_t)v5);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v13) == 1;
  sub_52128((uint64_t)v5, &qword_3BFBB0);
  v16 = v0[18];
  v17 = v0[19];
  sub_472D0(v0 + 15, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  if (((v15 ^ v18) & 1) == 0)
  {
    if ((v18 & 1) != 0)
    {
      v20 = (uint64_t)v24;
      static Date.now.getter(v19);
      v21 = 0;
    }
    else
    {
      v21 = 1;
      v20 = (uint64_t)v24;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v20, v21, 1, v13);
    sub_1A1250(v20, v12);
    sub_1A1298((uint64_t)v11, (uint64_t)v8);
    sub_19A780(v8);
    sub_1A1298((uint64_t)v11, (uint64_t)v8);
    sub_19F320((uint64_t)v8);
  }
  return sub_1A1150((uint64_t)v11);
}

void sub_19F320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_19F3C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  NSString v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  Class isa;
  Class v10;

  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setBKPageTurnStyle:", v4, swift_bridgeObjectRelease(0xE500000000000000).n128_f64[0]);

  v5 = type metadata accessor for PageNavigationStyleState(0);
  sub_B2DD0(v0 + *(int *)(v5 + 20), v1);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  isa = 0;
  if (v8(v1, 1, v6) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
  }
  objc_msgSend(v2, "setBKPageTurnStyleUserSelectionTimestamp:", isa);

  sub_B2DD0(v0 + *(int *)(v5 + 24), v3);
  if (v8(v3, 1, v6) == 1)
  {
    v10 = 0;
  }
  else
  {
    v10 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v6);
  }
  objc_msgSend(v2, "setBKPageTurnStyleReduceMotionEnabledTimestamp:", v10);

  return sub_1A1150(v0);
}

uint64_t sub_19F530(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v14;

  v2 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v5);
  v7 = (unsigned __int8 *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v14 - v9;
  CurrentValueSubject.value.getter((uint64_t *)((char *)&v14 - v9));
  *v10 = a1;
  static Date.now.getter(v11);
  v12 = type metadata accessor for Date(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v4, 0, 1, v12);
  sub_1A1250((uint64_t)v4, (uint64_t)&v10[*(int *)(v5 + 20)]);
  sub_1A1298((uint64_t)v10, (uint64_t)v7);
  sub_19A780(v7);
  sub_1A1298((uint64_t)v10, (uint64_t)v7);
  sub_19F320((uint64_t)v7);
  return sub_1A1150((uint64_t)v10);
}

double sub_19F684(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v3 = v2;
  v6 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_319AC(&qword_3BFB90);
  v10 = swift_allocObject(v9, 33);
  *(_OWORD *)(v10 + 16) = xmmword_2E5F80;
  *(_BYTE *)(v10 + 32) = a1;
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  type metadata accessor for MainActor(0);
  swift_retain();
  swift_bridgeObjectRetain(v10);
  v13 = static MainActor.shared.getter(v12);
  v14 = swift_allocObject(&unk_386828, 49);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v14 + 32) = v3;
  *(_QWORD *)(v14 + 40) = v10;
  *(_BYTE *)(v14 + 48) = a2;
  sub_67B40((uint64_t)v8, (uint64_t)&unk_3C0130, v14);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void (*sub_19F7BC(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_19A2BC((uint64_t)v2);
  return sub_F9904;
}

void (*sub_19F800(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_19A53C(v2);
  return sub_F9904;
}

void (*sub_19F844(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_19A6AC((uint64_t)v2);
  return sub_F9904;
}

id NSUserDefaults.BKLeftTapTurnToNext.getter()
{
  void *v0;
  NSString v1;
  id v2;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "BOOLForKey:", v1);

  return v2;
}

void NSUserDefaults.BKLeftTapTurnToNext.setter()
{
  void *v0;
  Class isa;
  id v2;

  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setValue:forKey:", isa, v2);

}

Class sub_19FBF8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  Class isa;
  uint64_t v10;

  v2 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1;
  sub_19FCCC((uint64_t)v4);

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return isa;
}

uint64_t sub_19FCCC@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  NSString v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "objectForKey:", v3);

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v9);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_5B70C((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_3B96D0);
  if (v11)
  {
    v5 = type metadata accessor for Date(0);
    v6 = swift_dynamicCast(a1, v10, (char *)&type metadata for Any + 8, v5, 6);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_52128((uint64_t)v10, (uint64_t *)&unk_3B96D0);
    v8 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

void sub_19FDFC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v5 = sub_319AC(&qword_3BFBB0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(a3, v6);
    v9 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  }
  else
  {
    v10 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  }
  v11 = a1;
  sub_19FEE0((uint64_t)v8);

}

uint64_t sub_19FEE0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  Class isa;
  NSString v10;
  uint64_t v12;

  v2 = v1;
  v4 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B2DD0(a1, (uint64_t)v6);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setObject:forKey:", isa, v10);
  swift_unknownObjectRelease(isa);

  return sub_52128(a1, &qword_3BFBB0);
}

void sub_19FFF4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, "BKPageTurnStyle");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1A0058(uint64_t a1, void **a2)
{
  void *v2;
  NSString v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = String._bridgeToObjectiveC()();
  else
    v3 = 0;
  v4 = v3;
  objc_msgSend(v2, "setBKPageTurnStyle:");

}

uint64_t sub_1A00B4@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v4 = objc_msgSend(*a1, *a2);
  if (v4)
  {
    v5 = v4;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v6 = type metadata accessor for Date(0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 0;
  }
  else
  {
    v6 = type metadata accessor for Date(0);
    v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
    v8 = a3;
    v9 = 1;
  }
  return v7(v8, v9, 1, v6);
}

void sub_1A0134(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;

  v8 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_B2DD0(a1, (uint64_t)v10);
  v11 = *a2;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, isa);

}

BOOL sub_1A0210(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v2 = *(unsigned __int8 *)(a1 + 1);
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 1);
  v5 = *(_QWORD *)(a2 + 8);
  sub_3F514(*(_BYTE *)a1);
  if ((v6 & 1) == 0)
    return 0;
  if (v2)
    v7 = 1802658148;
  else
    v7 = 0x746867696CLL;
  if (v2)
    v8 = 0xE400000000000000;
  else
    v8 = 0xE500000000000000;
  if (v4)
    v9 = 1802658148;
  else
    v9 = 0x746867696CLL;
  if (v4)
    v10 = 0xE400000000000000;
  else
    v10 = 0xE500000000000000;
  if (v7 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n(v8, 2);
  }
  else
  {
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, v9, v10, 0);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v10);
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  v14 = BookFontTable.rawValue.getter();
  v16 = v15;
  v18 = BookFontTable.rawValue.getter();
  v19 = v17;
  if (v14 == v18 && v16 == v17)
  {
    swift_bridgeObjectRelease_n(v16, 2);
  }
  else
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v16, v18, v17, 0);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v19);
    result = 0;
    if ((v20 & 1) == 0)
      return result;
  }
  return v3 == v5;
}

BOOL sub_1A0374(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  _BYTE *v48;
  char v49;
  void (*v50)(_BYTE *, uint64_t);
  _BYTE v51[12];
  int v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  unsigned __int8 *v57;
  _BYTE *v58;
  unsigned __int8 *v59;
  uint64_t v60;

  v4 = type metadata accessor for Date(0);
  v60 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = &v51[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_319AC(&qword_3BFF60);
  __chkstk_darwin(v7);
  v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v51[-v11];
  v13 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v13);
  v58 = &v51[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  v19 = &v51[-v18];
  __chkstk_darwin(v20);
  v22 = &v51[-v21];
  __chkstk_darwin(v23);
  v27 = &v51[-v26];
  v59 = a1;
  v28 = *a1;
  v29 = *a2;
  if ((_DWORD)v28 != 4)
  {
    if (v29 != 4)
    {
      v56 = v9;
      v57 = a2;
      v54 = v25;
      v55 = v24;
      __asm { BR              X11 }
    }
    return 0;
  }
  v54 = v25;
  v55 = v24;
  v53 = v6;
  v56 = v9;
  if (v29 == 4)
  {
    v30 = type metadata accessor for PageNavigationStyleState(0);
    sub_B2DD0((uint64_t)&v59[*(int *)(v30 + 20)], (uint64_t)v27);
    v31 = *(int *)(v30 + 20);
    v57 = a2;
    sub_B2DD0((uint64_t)&a2[v31], (uint64_t)v22);
    v32 = (uint64_t)&v12[*(int *)(v7 + 48)];
    sub_B2DD0((uint64_t)v27, (uint64_t)v12);
    sub_B2DD0((uint64_t)v22, v32);
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
    if (v33((uint64_t)v12, 1, v4) == 1)
    {
      sub_52128((uint64_t)v22, &qword_3BFBB0);
      sub_52128((uint64_t)v27, &qword_3BFBB0);
      if (v33(v32, 1, v4) == 1)
      {
        sub_52128((uint64_t)v12, &qword_3BFBB0);
LABEL_13:
        v38 = v55;
        sub_B2DD0((uint64_t)&v59[*(int *)(v30 + 24)], v55);
        v39 = v54;
        sub_B2DD0((uint64_t)&v57[*(int *)(v30 + 24)], v54);
        v40 = (uint64_t)v56;
        v41 = (uint64_t)&v56[*(int *)(v7 + 48)];
        sub_B2DD0(v38, (uint64_t)v56);
        sub_B2DD0(v39, v41);
        if (v33(v40, 1, v4) == 1)
        {
          sub_52128(v39, &qword_3BFBB0);
          sub_52128(v38, &qword_3BFBB0);
          if (v33(v41, 1, v4) == 1)
          {
            sub_52128(v40, &qword_3BFBB0);
            return 1;
          }
        }
        else
        {
          sub_B2DD0(v40, (uint64_t)v58);
          if (v33(v41, 1, v4) != 1)
          {
            v43 = v60;
            v44 = v38;
            v45 = v39;
            v46 = v53;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v53, v41, v4);
            v47 = sub_34284((unint64_t *)&unk_3BFF68, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
            v48 = v58;
            v49 = dispatch thunk of static Equatable.== infix(_:_:)(v58, v46, v4, v47);
            v50 = *(void (**)(_BYTE *, uint64_t))(v43 + 8);
            v50(v46, v4);
            sub_52128(v45, &qword_3BFBB0);
            sub_52128(v44, &qword_3BFBB0);
            v50(v48, v4);
            sub_52128(v40, &qword_3BFBB0);
            return (v49 & 1) != 0;
          }
          sub_52128(v39, &qword_3BFBB0);
          sub_52128(v38, &qword_3BFBB0);
          (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v58, v4);
        }
        v34 = v40;
LABEL_19:
        sub_52128(v34, &qword_3BFF60);
        return 0;
      }
    }
    else
    {
      sub_B2DD0((uint64_t)v12, (uint64_t)v19);
      if (v33(v32, 1, v4) != 1)
      {
        v35 = v53;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v60 + 32))(v53, v32, v4);
        v36 = sub_34284((unint64_t *)&unk_3BFF68, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
        v52 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v35, v4, v36);
        v37 = *(void (**)(_BYTE *, uint64_t))(v60 + 8);
        v37(v35, v4);
        sub_52128((uint64_t)v22, &qword_3BFBB0);
        sub_52128((uint64_t)v27, &qword_3BFBB0);
        v37(v19, v4);
        sub_52128((uint64_t)v12, &qword_3BFBB0);
        if ((v52 & 1) == 0)
          return 0;
        goto LABEL_13;
      }
      sub_52128((uint64_t)v22, &qword_3BFBB0);
      sub_52128((uint64_t)v27, &qword_3BFBB0);
      (*(void (**)(_BYTE *, uint64_t))(v60 + 8))(v19, v4);
    }
    v34 = (uint64_t)v12;
    goto LABEL_19;
  }
  return 0;
}

uint64_t sub_1A0A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, void *a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t ObjectType;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(unint64_t, _QWORD, uint64_t);
  uint64_t v59;
  __n128 v60;
  __n128 v61;
  uint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  _QWORD *v82;
  __int16 v83;
  char v84;
  _BYTE v85[48];
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;

  v16 = v15;
  v79 = a8;
  v82 = a5;
  v74 = a4;
  v80 = a3;
  v75 = a15;
  v78 = a12;
  v72 = a10;
  v73 = a9;
  v21 = type metadata accessor for PageNavigationStyleState(0);
  __chkstk_darwin(v21);
  *(_QWORD *)(v16 + 192) = 0;
  *(_QWORD *)&v81 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = a14;
  v76 = a11;
  v23 = a7;
  v24 = a1;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v25 = a6;
    v26 = a2;
    sub_181934((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v25 = a6;
    v26 = a2;
    v27 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)(v16 + 208) = v27;
  *(_BYTE *)(v16 + 232) = 0;
  v87 = 0;
  v28 = sub_319AC(&qword_3BFB30);
  swift_allocObject(v28, *(unsigned int *)(v28 + 48));
  *(_QWORD *)(v16 + 248) = CurrentValueSubject.init(_:)(&v87);
  LOBYTE(v87) = 0;
  v29 = sub_319AC((uint64_t *)&unk_3B89F0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48));
  *(_QWORD *)(v16 + 256) = CurrentValueSubject.init(_:)(&v87);
  LOBYTE(v87) = 1;
  v30 = sub_319AC(&qword_3BFB40);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48));
  *(_QWORD *)(v16 + 264) = CurrentValueSubject.init(_:)(&v87);
  LOBYTE(v87) = 1;
  swift_allocObject(v29, *(unsigned int *)(v29 + 48));
  *(_QWORD *)(v16 + 272) = CurrentValueSubject.init(_:)(&v87);
  v64 = v72 & 1;
  v31 = v78;
  sub_1983E4(a13 & 1, v72 & 1);
  sub_19867C();
  v63 = v24;
  ObjectType = swift_getObjectType(v24);
  v33 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 16);
  v70 = v26;
  v34 = v33(ObjectType, v26);
  v65 = v34;
  v35 = v23;
  ThemeAppearanceManager.themeVariant.getter();
  v72 = v36 & 1;
  swift_getObjectType(v25);
  sub_18308C((char *)&v87);
  v71 = v87;
  v37 = v82[3];
  v38 = v82[4];
  v39 = v82;
  sub_472D0(v82, v37);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8) + 16))(&v87, v34, v37);
  v40 = v87;
  v69 = v88;
  v68 = v89;
  v66 = *((_QWORD *)&v90 + 1);
  v67 = v90;
  *(_BYTE *)(v16 + 16) = 0;
  v41 = v63;
  *(_QWORD *)(v16 + 32) = v63;
  *(_QWORD *)(v16 + 40) = v26;
  v42 = v80;
  v43 = v74;
  *(_QWORD *)(v16 + 176) = v80;
  *(_QWORD *)(v16 + 184) = v43;
  sub_49F1C((uint64_t)v39, v16 + 48);
  *(_QWORD *)(v16 + 24) = v25;
  v44 = v79;
  *(_QWORD *)(v16 + 88) = v35;
  *(_QWORD *)(v16 + 96) = v44;
  *(_QWORD *)(v16 + 104) = v73;
  *(_BYTE *)(v16 + 112) = v64;
  v45 = v77;
  v46 = v75;
  *(_QWORD *)(v16 + 144) = v77;
  *(_QWORD *)(v16 + 152) = v46;
  v47 = sub_9B1C0((_QWORD *)(v16 + 120));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v47, v76, v45);
  *(_QWORD *)(v16 + 160) = v31;
  swift_unknownObjectRetain(v44);
  v31;
  swift_unknownObjectRetain(v41);
  swift_unknownObjectRetain(v42);
  swift_unknownObjectRetain(v25);
  swift_retain();
  v48 = v81;
  sub_198934((char *)v81);
  v49 = sub_319AC(&qword_3BFB60);
  swift_allocObject(v49, *(unsigned int *)(v49 + 48));
  *(_QWORD *)(v16 + 200) = CurrentValueSubject.init(_:)(v48);
  LOBYTE(v48) = v65;
  *(_BYTE *)(v16 + 216) = v65;
  LOBYTE(v45) = v72;
  *(_BYTE *)(v16 + 217) = v72;
  LOBYTE(v44) = v71;
  *(_BYTE *)(v16 + 218) = v71;
  *(_QWORD *)(v16 + 224) = 0;
  type metadata accessor for ReadingSettingsManager();
  LOBYTE(v83) = v48;
  HIBYTE(v83) = v45;
  v84 = v44;
  *(_QWORD *)v85 = v40;
  *(_OWORD *)&v85[8] = v69;
  *(_OWORD *)&v85[24] = v68;
  *(_QWORD *)&v85[40] = v67;
  v86 = v66;
  sub_198B24((uint64_t)&v83, v25, v39, v41, v70, (uint64_t)&v87);
  swift_bridgeObjectRelease(v40);
  v83 = v87;
  v84 = BYTE2(v87);
  *(_OWORD *)v85 = v88;
  *(_OWORD *)&v85[16] = v89;
  *(_OWORD *)&v85[32] = v90;
  v86 = v91;
  v50 = sub_319AC(&qword_3BFB10);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48));
  *(_QWORD *)(v16 + 240) = CurrentValueSubject.init(_:)(&v83);
  v51 = sub_319AC(&qword_3C0158);
  v52 = type metadata accessor for NWInterface.InterfaceType(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(_QWORD *)(v53 + 72);
  v55 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
  v56 = swift_allocObject(v51, v55 + 2 * v54);
  *(_OWORD *)(v56 + 16) = xmmword_2E5F70;
  v57 = v56 + v55;
  v58 = *(void (**)(unint64_t, _QWORD, uint64_t))(v53 + 104);
  v58(v57, enum case for NWInterface.InterfaceType.cellular(_:), v52);
  v58(v57 + v54, enum case for NWInterface.InterfaceType.loopback(_:), v52);
  v59 = type metadata accessor for NWPathMonitor(0);
  swift_allocObject(v59, *(unsigned int *)(v59 + 48));
  *(_QWORD *)(v16 + 168) = NWPathMonitor.init(prohibitedInterfaceTypes:)(v56);
  sub_19BE94();
  LOBYTE(v87) = v44;
  sub_19C370((unsigned __int8 *)&v87);
  LOBYTE(v52) = sub_1994EC() & 1;
  LOBYTE(v87) = v52;
  CurrentValueSubject.value.setter(&v87, v60);
  sub_19A21C(v52);
  sub_199568((char *)&v87);
  LOBYTE(v52) = v87;
  LOBYTE(v83) = v87;
  CurrentValueSubject.value.setter(&v83, v61);
  LOBYTE(v83) = v52;
  sub_19A420((uint64_t)&v83);
  CurrentValueSubject.value.getter(&v87);
  v83 = v87;
  v84 = BYTE2(v87);
  v81 = v88;
  *(_OWORD *)v85 = v88;
  *(_OWORD *)&v85[16] = v89;
  *(_OWORD *)&v85[32] = v90;
  v86 = v91;
  sub_199DD8((unsigned __int8 *)&v83);
  swift_bridgeObjectRelease(v81);
  sub_34488(v82);
  return v16;
}

uint64_t sub_1A1060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, void *a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v18;

  v18 = type metadata accessor for ReadingSettingsManager();
  swift_allocObject(v18, 280);
  return sub_1A0A04(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t type metadata accessor for PageNavigationStyleState(uint64_t a1)
{
  uint64_t result;

  result = qword_3BFF10;
  if (!qword_3BFF10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PageNavigationStyleState);
  return result;
}

uint64_t sub_1A1150(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PageNavigationStyleState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A118C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1A119C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_19ADDC(*(unsigned __int8 *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_1A11D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc(dword_3BFB9C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_6B4A4;
  return sub_19B42C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1A1250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3BFBB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A1298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageNavigationStyleState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A12DC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  _BYTE v4[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 16, v4, 0, 0);
  *a2 = *(_BYTE *)(v3 + 16);
}

void sub_1A1320(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 16, v4, 1, 0);
  *(_BYTE *)(v3 + 16) = v2;
}

_QWORD *sub_1A1368@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = CurrentValueSubject.value.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_1A13A4(char *a1, __n128 a2)
{
  char v2;
  char v3;

  v3 = *a1;
  v2 = v3;
  CurrentValueSubject.value.setter(&v3, a2);
  sub_19A21C(v2);
}

_QWORD *sub_1A13F0@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = CurrentValueSubject.value.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1A142C(char *a1, __n128 a2)
{
  char v2;
  char v4;
  char v5;

  v5 = *a1;
  v2 = v5;
  CurrentValueSubject.value.setter(&v5, a2);
  v4 = v2;
  return sub_19A420((uint64_t)&v4);
}

_QWORD *sub_1A147C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = CurrentValueSubject.value.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_1A14B8(char *a1, __n128 a2)
{
  char v3;

  v3 = *a1;
  return CurrentValueSubject.value.setter(&v3, a2);
}

id sub_1A14F0@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "BKLeftTapTurnToNext");
  *a2 = (_BYTE)result;
  return result;
}

id sub_1A1520(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setBKLeftTapTurnToNext:", *a1);
}

uint64_t dispatch thunk of ReadingSettingsManaging.changeCurrentThemeType(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v7 = *(int **)(a3 + 24);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_6B4A4;
  return v10(a1, a2, a3);
}

uint64_t type metadata accessor for ReadingSettingsManager()
{
  return objc_opt_self(_TtC8BookEPUB22ReadingSettingsManager);
}

uint64_t method lookup function for ReadingSettingsManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingSettingsManager);
}

uint64_t dispatch thunk of ReadingSettingsManager.currentTheme.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ReadingSettingsManager.readingLoupeActive.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of ReadingSettingsManager.readingLoupeActive.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ReadingSettingsManager.readingLoupeActiveDimming.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of ReadingSettingsManager.readingLoupeAllowable.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ReadingSettingsManager.readingLoupeAllowablePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of ReadingSettingsManager.pageNavigationStylePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of ReadingSettingsManager.attemptDownload(themeType:allowCellularDownload:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of ReadingSettingsManager.toggleReadingLoupe()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of ReadingSettingsManager.updateReadingLoupeDimming(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of ReadingSettingsManager.changeCurrentThemeType(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)(*(_QWORD *)v1 + 648);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_3F0C0;
  return v7(a1);
}

uint64_t dispatch thunk of ReadingSettingsManager.changePageNavigationStyle(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t getEnumTagSinglePayload for ReadingSettingsManager.ThemeSpec(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 1);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingSettingsManager.ThemeSpec(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingSettingsManager.ThemeSpec()
{
  return &type metadata for ReadingSettingsManager.ThemeSpec;
}

uint64_t *sub_1A1754(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Date(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      v13 = sub_319AC(&qword_3BFBB0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = *(int *)(a3 + 24);
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    if (v12(v17, 1, v10))
    {
      v18 = sub_319AC(&qword_3BFBB0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t sub_1A18BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

_BYTE *sub_1A1968(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_319AC(&qword_3BFBB0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  if (v11(v15, 1, v9))
  {
    v16 = sub_319AC(&qword_3BFBB0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

_BYTE *sub_1A1AA4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int v18;
  int v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_319AC(&qword_3BFBB0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = sub_319AC(&qword_3BFBB0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_BYTE *sub_1A1C70(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_319AC(&qword_3BFBB0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 24);
  v14 = &a1[v13];
  v15 = &a2[v13];
  if (v11(v15, 1, v9))
  {
    v16 = sub_319AC(&qword_3BFBB0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

_BYTE *sub_1A1DAC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int v18;
  int v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = sub_319AC(&qword_3BFBB0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = sub_319AC(&qword_3BFBB0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t sub_1A1F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A1F84);
}

uint64_t sub_1A1F84(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 251)
  {
    if (*a1 <= 4u)
      v4 = 4;
    else
      v4 = *a1;
    v5 = v4 - 4;
    if (*a1 >= 4u)
      return v5;
    else
      return 0;
  }
  else
  {
    v9 = sub_319AC(&qword_3BFBB0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v9);
  }
}

uint64_t sub_1A2008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A2014);
}

_BYTE *sub_1A2014(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 251)
  {
    *result = a2 + 4;
  }
  else
  {
    v7 = sub_319AC(&qword_3BFBB0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1A2088(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = &unk_2F0990;
  sub_1A20FC(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = v5;
    swift_initStructMetadata(a1, 256, 3, &v4, a1 + 16);
  }
}

void sub_1A20FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3BFF20)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3BFF20);
  }
}

unint64_t sub_1A2154()
{
  unint64_t result;

  result = qword_3BFF58;
  if (!qword_3BFF58)
  {
    result = swift_getWitnessTable(&unk_2F09D0, &type metadata for ReadingSettingsManager.ThemeSpec);
    atomic_store(result, (unint64_t *)&qword_3BFF58);
  }
  return result;
}

uint64_t sub_1A2198()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1A21BC(uint64_t *a1)
{
  uint64_t v1;

  return sub_19E0E4(a1, v1);
}

uint64_t sub_1A21C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

double sub_1A21E8(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_19D78C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1A21F4(char *a1)
{
  uint64_t v1;

  return sub_19DA48(a1, v1);
}

const char *sub_1A21FC()
{
  return "BKPageTurnStyle";
}

const char *sub_1A2210()
{
  return "BKPageTurnStyleUserSelectionTimestamp";
}

uint64_t sub_1A221C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A00B4(a1, (SEL *)&selRef_BKPageTurnStyleUserSelectionTimestamp, a2);
}

void sub_1A2238(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1A0134(a1, a2, a3, a4, (SEL *)&selRef_setBKPageTurnStyleUserSelectionTimestamp_);
}

const char *sub_1A2254()
{
  return "BKPageTurnStyleReduceMotionEnabledTimestamp";
}

uint64_t sub_1A2260@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A00B4(a1, (SEL *)&selRef_BKPageTurnStyleReduceMotionEnabledTimestamp, a2);
}

void sub_1A227C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1A0134(a1, a2, a3, a4, (SEL *)&selRef_setBKPageTurnStyleReduceMotionEnabledTimestamp_);
}

double sub_1A2298()
{
  uint64_t v0;

  return sub_19DAB4(v0);
}

uint64_t sub_1A22A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1A22C4()
{
  uint64_t v0;

  return sub_19DB5C(v0);
}

uint64_t sub_1A22CC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

double sub_1A22F0(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_19DBB0(a1, a2, *(void **)(v2 + 16));
}

void sub_1A22F8(_QWORD *a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  *a2 = (*(double (**)(_QWORD, _QWORD *))(v2 + 16))(*a1, a1 + 1);
}

void *sub_1A2328()
{
  return &protocol witness table for Never;
}

double sub_1A2334@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  CurrentValueSubject.value.getter(&v3);
  result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1A236C(unint64_t *a1, __n128 a2)
{
  unint64_t v3;

  v3 = *a1;
  a2.n128_u64[0] = v3;
  return CurrentValueSubject.value.setter(&v3, a2);
}

uint64_t sub_1A23A4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

double sub_1A23C8(uint64_t *a1)
{
  uint64_t v1;

  return sub_19DD00(a1, v1);
}

unint64_t sub_1A23D0()
{
  unint64_t result;

  result = qword_3C0108;
  if (!qword_3C0108)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_3C0108);
  }
  return result;
}

double sub_1A2414(uint64_t *a1)
{
  uint64_t v1;

  return sub_19DDB0(a1, v1);
}

double sub_1A241C(uint64_t a1)
{
  uint64_t v1;

  return sub_19C0D4(a1, v1);
}

uint64_t sub_1A2428()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1A2454(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(unsigned __int8 *)(v1 + 40);
  v8 = *(unsigned __int8 *)(v1 + 41);
  v9 = *(unsigned __int8 *)(v1 + 42);
  v10 = *(_QWORD *)(v1 + 48);
  if (v8)
    v11 = 256;
  else
    v11 = 0;
  v12 = v11 | v7 | (v9 << 16);
  v13 = (_QWORD *)swift_task_alloc(dword_3C0124);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_3F0C0;
  return sub_19E4C8(a1, v4, v5, v6, v12, v10);
}

uint64_t sub_1A24F8()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 49, 7);
}

uint64_t RelativeValue.init(base:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for RelativeValue(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v10, a2, a4);
}

uint64_t type metadata accessor for RelativeValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3F27C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RelativeValue);
}

unint64_t RelativeValue.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __n128 v20;
  void (*v21)(char *, uint64_t, uint64_t, __n128);
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void (*v29)(char *, uint64_t);
  Swift::String v30;
  Swift::String v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  char *v41;
  char *v42;
  void *v43;
  Swift::String v44;
  Swift::String v45;
  char *v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;

  v54 = *(_QWORD *)(a1 + 24);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(a1);
  v47 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v51 = (char *)&v47 - v5;
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v47 - v18;
  *(_QWORD *)&v55 = 0;
  *((_QWORD *)&v55 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  v20 = swift_bridgeObjectRelease(*((_QWORD *)&v55 + 1));
  v58 = 0xD000000000000014;
  v59 = 0x80000000002C7350;
  v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  v21(v19, v1, v13, v20);
  v49 = sub_319AC(&qword_3B8C40);
  v22 = swift_dynamicCast(&v55, v19, v13, v49, 6);
  v50 = v1;
  if (v22)
  {
    v23 = *((_QWORD *)&v56 + 1);
    v24 = v57;
    sub_472D0(&v55, *((uint64_t *)&v56 + 1));
    v25 = dispatch thunk of CustomDebugStringConvertible.debugDescription.getter(v23, v24);
    v27 = v26;
    sub_34488(&v55);
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v48(v11, v1, a1);
    if (v27)
      goto LABEL_6;
  }
  else
  {
    v57 = 0;
    v55 = 0u;
    v56 = 0u;
    sub_1A2968((uint64_t)&v55);
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v48(v11, v1, a1);
  }
  ((void (*)(char *, char *, uint64_t))v21)(v16, v11, v13);
  v25 = String.init<A>(describing:)(v16, v13);
  v27 = v28;
LABEL_6:
  v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  v29(v11, a1);
  v30._countAndFlagsBits = v25;
  v30._object = v27;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v27);
  v31._countAndFlagsBits = 0x3A65756C6176202CLL;
  v31._object = (void *)0xE900000000000020;
  String.append(_:)(v31);
  v33 = v50;
  v32 = v51;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  v35 = v54;
  v34(v51, v50 + *(int *)(a1 + 36), v54);
  if (!swift_dynamicCast(&v55, v32, v35, v49, 6))
  {
    v57 = 0;
    v55 = 0u;
    v56 = 0u;
    sub_1A2968((uint64_t)&v55);
    v41 = v53;
    v48(v53, v33, a1);
LABEL_10:
    v42 = v47;
    v34(v47, (uint64_t)&v41[*(int *)(a1 + 36)], v35);
    v38 = String.init<A>(describing:)(v42, v35);
    v40 = v43;
    goto LABEL_11;
  }
  v36 = *((_QWORD *)&v56 + 1);
  v37 = v57;
  sub_472D0(&v55, *((uint64_t *)&v56 + 1));
  v38 = dispatch thunk of CustomDebugStringConvertible.debugDescription.getter(v36, v37);
  v40 = v39;
  sub_34488(&v55);
  v41 = v53;
  v48(v53, v33, a1);
  if (!v40)
    goto LABEL_10;
LABEL_11:
  v29(v41, a1);
  v44._countAndFlagsBits = v38;
  v44._object = v40;
  String.append(_:)(v44);
  swift_bridgeObjectRelease(v40);
  v45._countAndFlagsBits = 41;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  return v58;
}

uint64_t sub_1A2968(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_319AC(&qword_3B8C48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static RelativeValue<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;

  if ((dispatch thunk of static Equatable.== infix(_:_:)(a1, a2, a3, a5) & 1) == 0)
    return 0;
  v12 = type metadata accessor for RelativeValue(0, a3, a4, v11);
  return dispatch thunk of static Equatable.== infix(_:_:)(a1 + *(int *)(v12 + 36), a2 + *(int *)(v12 + 36), a4, a6) & 1;
}

uint64_t RelativeValue.base.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t RelativeValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t RelativeValue.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*RelativeValue.value.modify())()
{
  return address(of:);
}

uint64_t sub_1A2A94(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 1702060386 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1702060386, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65756C6176, 0xE500000000000000, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A2B6C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 1702060386;
}

BOOL sub_1A2B98(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static LocationMovement.Direction.== infix(_:_:)(*a1, *a2);
}

Swift::Int sub_1A2BAC()
{
  char *v0;

  return ContentScrollSupportScrollOrientation.hashValue.getter(*v0);
}

void sub_1A2BBC(uint64_t a1)
{
  char *v1;

  LocationMovement.Direction.hash(into:)(a1, *v1);
}

Swift::Int sub_1A2BCC(uint64_t a1)
{
  char *v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, a1);
  LocationMovement.Direction.hash(into:)((uint64_t)v3, *v1);
  return Hasher._finalize()();
}

uint64_t sub_1A2C10()
{
  char *v0;

  return sub_1A2B6C(*v0);
}

uint64_t sub_1A2C20@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A2A94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A2C4C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_59FEC();
  *a1 = result;
  return result;
}

uint64_t sub_1A2C74(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2F0E58, a1);
  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1A2CA8(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_2F0E58, a1);
  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t RelativeValue<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v26 = a4;
  v24 = a6;
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v22 = a2;
  v23 = v7;
  v9 = type metadata accessor for RelativeValue.CodingKeys(255, v8, v7, a4);
  WitnessTable = swift_getWitnessTable(&unk_2F0E58, v9);
  v11 = type metadata accessor for KeyedEncodingContainer(0, v9, WitnessTable);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v22 - v13;
  v15 = a1[3];
  v16 = a1[4];
  sub_472D0(a1, v15);
  v17 = v15;
  v18 = v25;
  dispatch thunk of Encoder.container<A>(keyedBy:)(v9, v9, WitnessTable, v17, v16);
  v29 = 0;
  v19 = v27;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v18, &v29, v11, v8, v26);
  if (!v19)
  {
    v20 = v18 + *(int *)(v22 + 36);
    v28 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v28, v11, v23, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t type metadata accessor for RelativeValue.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3F27C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RelativeValue.CodingKeys);
}

uint64_t RelativeValue<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t WitnessTable;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;

  v37 = a6;
  v38 = a5;
  v43 = a4;
  v36 = *(_QWORD *)(a3 - 8);
  __chkstk_darwin(a1);
  v41 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v11);
  v44 = (uint64_t *)((char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = type metadata accessor for RelativeValue.CodingKeys(255, v13, v14, v15);
  WitnessTable = swift_getWitnessTable(&unk_2F0E58, v16);
  v47 = type metadata accessor for KeyedDecodingContainer(0, v16, WitnessTable);
  v39 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v19 = (char *)&v35 - v18;
  v45 = a2;
  v42 = a3;
  v21 = type metadata accessor for RelativeValue(0, a2, a3, v20);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v35 - v23;
  v26 = a1[3];
  v25 = a1[4];
  sub_472D0(a1, v26);
  v46 = v19;
  v27 = v48;
  dispatch thunk of Decoder.container<A>(keyedBy:)(v16, v16, WitnessTable, v26, v25);
  if (v27)
    return sub_34488(a1);
  v28 = v39;
  v29 = v40;
  v48 = v22;
  v30 = v24;
  v31 = v41;
  v32 = v42;
  v50 = 0;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v44, v45, &v50, v47, v45, v43);
  (*(void (**)(char *, _QWORD *, uint64_t))(v29 + 32))(v30, v44, v45);
  v49 = 1;
  KeyedDecodingContainer.decode<A>(_:forKey:)(v31, v32, &v49, v47, v32, v38);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v46, v47);
  (*(void (**)(char *, _QWORD *, uint64_t))(v36 + 32))(&v30[*(int *)(v21 + 36)], v31, v32);
  v33 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 16))(v37, v30, v21);
  sub_34488(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v30, v21);
}

uint64_t sub_1A30F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return RelativeValue<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8), *(_QWORD *)(a3 - 24), a4);
}

uint64_t sub_1A3118(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return RelativeValue<>.encode(to:)(a1, a2, a3, *(_QWORD *)(a3 - 16), a5, *(_QWORD *)(a3 - 32));
}

uint64_t sub_1A3134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static RelativeValue<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), *(_QWORD *)(a4 - 8), *(_QWORD *)(a4 - 16));
}

uint64_t RelativeValue<>.hash(into:)(uint64_t a1, uint64_t a2)
{
  dispatch thunk of Hashable.hash(into:)(a1, *(_QWORD *)(a2 + 16));
  return dispatch thunk of Hashable.hash(into:)(a1, *(_QWORD *)(a2 + 24));
}

Swift::Int RelativeValue<>.hashValue.getter(uint64_t a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  dispatch thunk of Hashable.hash(into:)(v3, *(_QWORD *)(a1 + 16));
  dispatch thunk of Hashable.hash(into:)(v3, *(_QWORD *)(a1 + 24));
  return Hasher._finalize()();
}

Swift::Int sub_1A3200(uint64_t a1)
{
  return RelativeValue<>.hashValue.getter(a1);
}

uint64_t sub_1A320C(uint64_t a1, uint64_t a2)
{
  return RelativeValue<>.hash(into:)(a1, a2);
}

Swift::Int sub_1A3218(uint64_t a1, uint64_t a2)
{
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  RelativeValue<>.hash(into:)((uint64_t)v4, a2);
  return Hasher._finalize()();
}

uint64_t RelativeValue.description.getter(uint64_t a1)
{
  uint64_t v1;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;

  _StringGuts.grow(_:)(34);
  v3._object = (void *)0x80000000002C7350;
  v3._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v3);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v1, *(_QWORD *)(a1 + 16));
  v4._countAndFlagsBits = 0x3A65756C6176202CLL;
  v4._object = (void *)0xE900000000000020;
  String.append(_:)(v4);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v1 + *(int *)(a1 + 36), *(_QWORD *)(a1 + 24));
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return 0;
}

uint64_t sub_1A3330(uint64_t a1)
{
  return swift_getWitnessTable(&protocol conformance descriptor for <> RelativeValue<A, B>, a1);
}

uint64_t sub_1A3374(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 24));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1A3400(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain(v13);
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_1A34D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1A3528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A3594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A3600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A366C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1A36D8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A37B4 + 4 * byte_2F0B98[v17 - 1]))();
}

void sub_1A3830(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = &dword_4;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = &dword_0 + 1;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t sub_1A3A30(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A3A7C + 4 * byte_2F0BAB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A3AB0 + 4 * byte_2F0BA6[v4]))();
}

uint64_t sub_1A3AB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A3AB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A3AC0);
  return result;
}

uint64_t sub_1A3ACC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A3AD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A3AD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A3AE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A3AEC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2F0E30, a1);
}

uint64_t sub_1A3AFC(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2F0DA0, a1);
}

uint64_t sub_1A3B0C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_2F0DC8, a1);
}

uint64_t HistoryEntity.init(cfi:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  UUID.init()(a1);
  v6 = type metadata accessor for HistoryEntity(0);
  result = Date.init()(v6);
  v8 = a3 + *(int *)(v6 + 20);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = 0;
  return result;
}

uint64_t type metadata accessor for HistoryEntity(uint64_t a1)
{
  uint64_t result;

  result = qword_3C0308;
  if (!qword_3C0308)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for HistoryEntity);
  return result;
}

uint64_t HistoryEntity.init(pageOffset:ordinal:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  UUID.init()(a1);
  v6 = type metadata accessor for HistoryEntity(0);
  result = Date.init()(v6);
  v8 = a3 + *(int *)(v6 + 20);
  *(_QWORD *)v8 = a2;
  *(_QWORD *)(v8 + 8) = a1;
  *(_BYTE *)(v8 + 16) = 1;
  return result;
}

uint64_t HistoryEntity.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = v1 + *(int *)(type metadata accessor for HistoryEntity(0) + 20);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_BYTE *)(v3 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  return sub_1396D0(v4, v5, v6);
}

uint64_t HistoryEntity.dateCreated.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for HistoryEntity(0) + 24);
  v4 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1A3C98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess(*a2 + 16, v6, 1, 0);
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1A3CF4()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 16));
}

BOOL sub_1A3D28()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *(_QWORD *)(v0 + 24);
  swift_beginAccess(v0 + 16, v3, 0, 0);
  return v1 == *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t NavigationHistoryController.__allocating_init()()
{
  uint64_t v0;
  uint64_t result;

  result = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(result + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t NavigationHistoryController.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 24) = 0;
  return result;
}

double sub_1A3DB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  unint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  double result;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];

  v2 = v1;
  v4 = type metadata accessor for HistoryEntity(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v43 - v9;
  v11 = *(_QWORD *)(v1 + 24);
  v12 = (unint64_t *)(v2 + 16);
  swift_beginAccess(v2 + 16, v47, 0, 0);
  if (v11 == *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
    goto LABEL_8;
  v44 = *(_QWORD *)(v2 + 16);
  v46 = v11;
  v13 = sub_319AC(&qword_3C0298);
  v14 = sub_1A51D0();
  if ((Collection.validate(index:)(&v46, v13, v14) & 1) == 0)
    goto LABEL_8;
  v15 = *(_QWORD *)(v2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
  v17 = v16 - v15;
  if (__OFSUB__(v16, v15))
  {
    __break(1u);
    goto LABEL_18;
  }
  swift_beginAccess(v2 + 16, &v44, 33, 0);
  sub_1A4224(v17);
  swift_endAccess(&v44);
  if (qword_3B58D8 != -1)
LABEL_18:
    swift_once(&qword_3B58D8, sub_1A49E8);
  v18 = type metadata accessor for Logger(0);
  v19 = sub_555F0(v18, (uint64_t)qword_3C0280);
  v20 = Logger.logObject.getter(v19);
  v23 = static os_log_type_t.debug.getter(v20, v21, v22);
  if (os_log_type_enabled(v20, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v24 = 134217984;
    v44 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v24 + 4);
    _os_log_impl(&dword_0, v20, v23, "Trim last %ld history entities", v24, 0xCu);
    swift_slowDealloc(v24, -1, -1);
  }

LABEL_8:
  sub_1A521C(a1, (uint64_t)v10);
  swift_beginAccess(v2 + 16, &v44, 33, 0);
  v25 = *v12;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  *v12 = v25;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v25 = sub_434C4(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
    *v12 = v25;
  }
  v28 = *(_QWORD *)(v25 + 16);
  v27 = *(_QWORD *)(v25 + 24);
  if (v28 >= v27 >> 1)
  {
    v25 = sub_434C4(v27 > 1, v28 + 1, 1, v25);
    *v12 = v25;
  }
  *(_QWORD *)(v25 + 16) = v28 + 1;
  sub_183000((uint64_t)v10, v25+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v28);
  v29 = *(_QWORD *)(v2 + 16);
  swift_endAccess(&v44);
  *(_QWORD *)(v2 + 24) = *(_QWORD *)(v29 + 16);
  if (qword_3B58D8 != -1)
    swift_once(&qword_3B58D8, sub_1A49E8);
  v30 = type metadata accessor for Logger(0);
  sub_555F0(v30, (uint64_t)qword_3C0280);
  sub_1A521C(a1, (uint64_t)v7);
  v31 = swift_retain_n(v2);
  v32 = Logger.logObject.getter(v31);
  v35 = static os_log_type_t.debug.getter(v32, v33, v34);
  if (os_log_type_enabled(v32, v35))
  {
    v36 = swift_slowAlloc(22, -1);
    v37 = swift_slowAlloc(32, -1);
    v44 = v37;
    *(_DWORD *)v36 = 136315394;
    v38 = HistoryEntity.description.getter();
    v40 = v39;
    v46 = sub_33524(v38, v39, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v36 + 4);
    swift_bridgeObjectRelease(v40);
    sub_1A5260((uint64_t)v7);
    *(_WORD *)(v36 + 12) = 2048;
    v41 = *(_QWORD *)(v2 + 24);
    swift_release();
    v46 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v36 + 14);
    swift_release();
    _os_log_impl(&dword_0, v32, v35, "Appended %s - position at: %ld", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v36, -1, -1);

  }
  else
  {
    swift_release();
    sub_1A5260((uint64_t)v7);

    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

unint64_t sub_1A4224(unint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  BOOL v3;

  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
      v3 = v2 >= result;
      result = v2 - result;
      if (v3)
        return sub_89558(result, v2);
    }
    __break(1u);
  }
  return result;
}

void sub_1A424C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD v15[3];
  uint64_t v16;
  _BYTE v17[24];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 24);
  swift_beginAccess(v1 + 16, v17, 0, 0);
  if (v2 == *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
    return;
  v15[0] = *(_QWORD *)(v1 + 16);
  v16 = v2;
  v3 = sub_319AC(&qword_3C0298);
  v4 = sub_1A51D0();
  if ((Collection.validate(index:)(&v16, v3, v4) & 1) == 0)
    return;
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_10;
  }
  swift_beginAccess(v1 + 16, v15, 33, 0);
  sub_1A4224(v7);
  swift_endAccess(v15);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  if (qword_3B58D8 != -1)
LABEL_10:
    swift_once(&qword_3B58D8, sub_1A49E8);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_555F0(v8, (uint64_t)qword_3C0280);
  v10 = Logger.logObject.getter(v9);
  v13 = static os_log_type_t.debug.getter(v10, v11, v12);
  if (os_log_type_enabled(v10, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_0, v10, v13, "Clearing out forward history entities", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

}

double sub_1A43CC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[24];

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v45 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_319AC(&qword_3C02A8);
  __chkstk_darwin(v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for HistoryEntity(0);
  v13 = *(_QWORD *)(v12 - 8);
  v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v44(a2, 1, 1, v12);
  swift_beginAccess(v3 + 16, v48, 0, 0);
  v14 = *(_QWORD *)(v3 + 16);
  v15 = *(_QWORD *)(v14 + 16);
  v43 = v12;
  if (v15)
  {
    v42 = a2;
    v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v17 = *(_QWORD *)(v13 + 72);
    swift_bridgeObjectRetain(v14);
    v18 = 0;
    while ((static UUID.== infix(_:_:)(v14 + v16, a1) & 1) == 0)
    {
      ++v18;
      v16 += v17;
      if (v15 == v18)
      {
        swift_bridgeObjectRelease(v14);
        a2 = v42;
        v12 = v43;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease(v14);
    *(_QWORD *)(v3 + 24) = v18;
    v32 = *(_QWORD *)(v3 + 16);
    if (v18 >= *(_QWORD *)(v32 + 16))
    {
      __break(1u);
    }
    else
    {
      sub_1A521C(v32 + v16, (uint64_t)v11);
      v33 = v42;
      sub_1A529C(v42);
      v44((uint64_t)v11, 0, 1, v43);
      sub_1A52DC((uint64_t)v11, v33);
      if (qword_3B58D8 == -1)
        goto LABEL_14;
    }
    swift_once(&qword_3B58D8, sub_1A49E8);
LABEL_14:
    v34 = type metadata accessor for Logger(0);
    sub_555F0(v34, (uint64_t)qword_3C0280);
    v35 = swift_retain();
    v36 = Logger.logObject.getter(v35);
    v39 = static os_log_type_t.debug.getter(v36, v37, v38);
    if (os_log_type_enabled(v36, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v40 = 134217984;
      v47 = *(_QWORD *)(v3 + 24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v40 + 4);
      swift_release();
      _os_log_impl(&dword_0, v36, v39, "Move position to: %ld", v40, 0xCu);
      swift_slowDealloc(v40, -1, -1);

    }
    else
    {

      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
    return result;
  }
LABEL_6:
  if (qword_3B58D8 != -1)
    swift_once(&qword_3B58D8, sub_1A49E8);
  v19 = type metadata accessor for Logger(0);
  sub_555F0(v19, (uint64_t)qword_3C0280);
  v20 = v45;
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 16))(v8, a1, v6);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v25 = swift_slowAlloc(32, -1);
    v47 = v25;
    *(_DWORD *)v24 = 136315138;
    v26 = sub_17CAB4();
    v27 = dispatch thunk of CustomStringConvertible.description.getter(v6, v26);
    v29 = v28;
    v46 = sub_33524(v27, v28, &v47);
    v12 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v24 + 4);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v8, v6, v30);
    _os_log_impl(&dword_0, v22, v23, "Attempted to move to an uuid that does not exist (%s)", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  }
  sub_1A529C(a2);
  v44(a2, 1, 1, v12);
  return result;
}

void sub_1A4828(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[2];
  _BYTE v10[24];

  swift_beginAccess(v1 + 16, v10, 0, 0);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = __OFADD__(v3, 1);
  v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 16);
    v9[0] = v5;
    v9[1] = v6;
    v7 = sub_319AC(&qword_3C0298);
    v8 = sub_1A51D0();
    Collection.subscript.getter(a1, v9, v7, v8);
  }
}

void sub_1A48B0(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[2];
  _BYTE v10[24];

  swift_beginAccess(v1 + 16, v10, 0, 0);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 16);
    v9[0] = v5;
    v9[1] = v6;
    v7 = sub_319AC(&qword_3C0298);
    v8 = sub_1A51D0();
    Collection.subscript.getter(a1, v9, v7, v8);
  }
}

uint64_t sub_1A4938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  swift_beginAccess(v1 + 16, v11, 0, 0);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(type metadata accessor for HistoryEntity(0) - 8);
    v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain(v3);
    v8 = v4 - 1;
    do
    {
      v9 = v8;
      LOBYTE(v4) = static UUID.== infix(_:_:)(v6, a1);
      if ((v4 & 1) != 0)
        break;
      v8 = v9 - 1;
      v6 += v7;
    }
    while (v9);
    swift_bridgeObjectRelease(v3);
  }
  return v4 & 1;
}

uint64_t sub_1A49E8()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3C0280);
  sub_555F0(v0, (uint64_t)qword_3C0280);
  return Logger.init(subsystem:category:)(0xD000000000000019, 0x80000000002CBCD0, 0xD00000000000001BLL, 0x80000000002F1000, v1);
}

uint64_t Stack.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return v0;
}

uint64_t Stack.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 32, 7);
}

BOOL sub_1A4AA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 24);
  swift_beginAccess(v1 + 16, v4, 0, 0);
  return v2 == *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
}

double sub_1A4AF0(uint64_t a1)
{
  return sub_1A3DB0(a1);
}

void sub_1A4B10()
{
  sub_1A424C();
}

double sub_1A4B30@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A43CC(a1, a2);
}

void sub_1A4B50(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[2];
  _BYTE v12[24];

  v3 = *v1;
  v4 = (uint64_t *)(*v1 + 16);
  swift_beginAccess(v4, v12, 0, 0);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v8 = *v4;
    v11[0] = v7;
    v11[1] = v8;
    v9 = sub_319AC(&qword_3C0298);
    v10 = sub_1A51D0();
    Collection.subscript.getter(a1, v11, v9, v10);
  }
}

void sub_1A4BDC(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v11[2];
  _BYTE v12[24];

  v3 = *v1;
  v4 = (uint64_t *)(*v1 + 16);
  swift_beginAccess(v4, v12, 0, 0);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = __OFSUB__(v5, 1);
  v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v8 = *v4;
    v11[0] = v7;
    v11[1] = v8;
    v9 = sub_319AC(&qword_3C0298);
    v10 = sub_1A51D0();
    Collection.subscript.getter(a1, v11, v9, v10);
  }
}

uint64_t sub_1A4C68(uint64_t a1)
{
  return sub_1A4938(a1) & 1;
}

uint64_t sub_1A4C8C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 16, v3, 0, 0);
  return swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
}

unint64_t HistoryEntity.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  void *object;
  Swift::String v5;
  uint64_t v6;
  unint64_t v7;
  Swift::String v8;
  void *v9;
  Swift::String v10;
  uint64_t v12;
  char v13;

  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease(0xE000000000000000);
  v1 = v0 + *(int *)(type metadata accessor for HistoryEntity(0) + 20);
  v2 = *(_QWORD *)v1;
  v12 = *(_QWORD *)(v1 + 8);
  v13 = *(_BYTE *)(v1 + 16);
  sub_1396D0(*(_QWORD *)v1, v12, v13);
  v3._countAndFlagsBits = HistoryEntity.Location.description.getter();
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  sub_1396C0(v2, v12, v13);
  v5._countAndFlagsBits = 0x203A64697575202CLL;
  v5._object = (void *)0xE800000000000000;
  String.append(_:)(v5);
  v6 = type metadata accessor for UUID(0);
  v7 = sub_17CAB4();
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  v9 = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return 0xD000000000000018;
}

unint64_t HistoryEntity.Location.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  Swift::String v5;
  unint64_t v7;

  v1 = *(_QWORD *)v0;
  v2 = *(void **)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    v7 = 0;
    _StringGuts.grow(_:)(40);
    v3._countAndFlagsBits = 0xD000000000000025;
    v3._object = (void *)0x80000000002CF4C0;
    String.append(_:)(v3);
    sub_656C4();
  }
  else
  {
    _StringGuts.grow(_:)(31);
    swift_bridgeObjectRelease(0xE000000000000000);
    v7 = 0xD00000000000001CLL;
    v4._countAndFlagsBits = v1;
    v4._object = v2;
    String.append(_:)(v4);
  }
  v5._countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return v7;
}

uint64_t _s8BookEPUB13HistoryEntityV8LocationO2eeoiySbAE_AEtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 16))
    {
      sub_1396C0(*a1, v2, 1);
      sub_1396C0(v6, v5, 1);
      v9 = v3 == v6 && v2 == v5;
      return v9 & 1;
    }
LABEL_11:
    sub_1396D0(v6, v5, v7);
    sub_1396C0(v3, v2, v4);
    sub_1396C0(v6, v5, v7);
    v9 = 0;
    return v9 & 1;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    swift_bridgeObjectRetain(a1[1]);
    goto LABEL_11;
  }
  if (v3 == v6 && v2 == v5)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(*a1, v2, v6, v5, 0);
  sub_1396D0(v6, v5, 0);
  sub_1396D0(v3, v2, 0);
  sub_1396C0(v3, v2, 0);
  sub_1396C0(v6, v5, 0);
  return v9 & 1;
}

uint64_t _s8BookEPUB13HistoryEntityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v16;

  if ((static UUID.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for HistoryEntity(0);
  v5 = *(int *)(v4 + 20);
  v7 = *(_QWORD *)(a1 + v5);
  v6 = *(_QWORD *)(a1 + v5 + 8);
  v8 = *(_BYTE *)(a1 + v5 + 16);
  v9 = (_QWORD *)(a2 + v5);
  v11 = *v9;
  v10 = v9[1];
  v12 = *((_BYTE *)v9 + 16);
  if ((v8 & 1) == 0)
  {
    if ((v9[2] & 1) == 0)
    {
      if (v7 == v11 && v6 == v10)
      {
        sub_1396D0(v7, v6, 0);
        sub_1396D0(v7, v6, 0);
        sub_1396C0(v7, v6, 0);
        sub_1396C0(v7, v6, 0);
        return static Date.== infix(_:_:)(a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24));
      }
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v6, *v9, v9[1], 0);
      sub_1396D0(v11, v10, 0);
      sub_1396D0(v7, v6, 0);
      sub_1396C0(v7, v6, 0);
      sub_1396C0(v11, v10, 0);
      if ((v16 & 1) != 0)
        return static Date.== infix(_:_:)(a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24));
      return 0;
    }
    swift_bridgeObjectRetain_n(v6, 2);
LABEL_12:
    sub_1396D0(v11, v10, v12);
    sub_1396C0(v7, v6, v8);
    sub_1396C0(v11, v10, v12);
    sub_1396C0(v7, v6, v8);
    return 0;
  }
  if ((v9[2] & 1) == 0)
    goto LABEL_12;
  sub_1396C0(v7, v6, 1);
  sub_1396C0(v11, v10, 1);
  if (v7 != v11 || v6 != v10)
    return 0;
  return static Date.== infix(_:_:)(a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24));
}

unint64_t sub_1A51D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3C02A0;
  if (!qword_3C02A0)
  {
    v1 = sub_31A38(&qword_3C0298);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3C02A0);
  }
  return result;
}

uint64_t sub_1A521C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HistoryEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5260(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HistoryEntity(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A529C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_319AC(&qword_3C02A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A52DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3C02A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5324@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 16, v6, 0, 0);
  v4 = *(_QWORD *)(v3 + 16);
  *a2 = v4;
  return swift_bridgeObjectRetain(v4);
}

uint64_t *initializeBufferWithCopyOfBuffer for HistoryEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = *((_QWORD *)v10 + 1);
    v13 = v10[16];
    sub_1396D0(*(_QWORD *)v10, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t destroy for HistoryEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_1396C0(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 20) + 16));
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for HistoryEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1396D0(*(_QWORD *)v9, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = *(int *)(a3 + 24);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t assignWithCopy for HistoryEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  sub_1396D0(*(_QWORD *)v9, v11, v12);
  v13 = *(_QWORD *)v8;
  v14 = *(_QWORD *)(v8 + 8);
  v15 = *(_BYTE *)(v8 + 16);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  sub_1396C0(v13, v14, v15);
  v16 = *(int *)(a3 + 24);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for HistoryEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for HistoryEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 16);
  v11 = *(_QWORD *)v8;
  v12 = *(_QWORD *)(v8 + 8);
  v13 = *(_BYTE *)(v8 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = v10;
  sub_1396C0(v11, v12, v13);
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A5784);
}

uint64_t sub_1A5784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for HistoryEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A5834);
}

uint64_t sub_1A5834(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
      return result;
    }
    v10 = type metadata accessor for Date(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1A58D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = &unk_2F0FE0;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t destroy for HistoryEntity.Location(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 16);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 != 1)
    return swift_bridgeObjectRelease(*(_QWORD *)(result + 8));
  return result;
}

uint64_t _s8BookEPUB13HistoryEntityV8LocationOwCP_0(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;

  v3 = *(unsigned __int8 *)(a2 + 16);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_bridgeObjectRetain(v4);
    LOBYTE(v3) = 0;
  }
  *(_BYTE *)(a1 + 16) = v3;
  return a1;
}

uint64_t assignWithCopy for HistoryEntity.Location(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 != 1)
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v5 = *(unsigned __int8 *)(a2 + 16);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = 1;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v6;
      *(_BYTE *)(a1 + 16) = 0;
      swift_bridgeObjectRetain(v6);
    }
  }
  return a1;
}

uint64_t assignWithTake for HistoryEntity.Location(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 != 1)
      swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v5 = *(unsigned __int8 *)(a2 + 16);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = v5 == 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryEntity.Location(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HistoryEntity.Location(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5B7C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 16);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1A5B98(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HistoryEntity.Location()
{
  return &type metadata for HistoryEntity.Location;
}

uint64_t type metadata accessor for NavigationHistoryController()
{
  return objc_opt_self(_TtC8BookEPUB27NavigationHistoryController);
}

uint64_t method lookup function for NavigationHistoryController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for NavigationHistoryController);
}

uint64_t dispatch thunk of NavigationHistoryController.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of NavigationHistoryController.move(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Stack.pop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

BOOL BEBookLayoutMode.isScroll.getter(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

unint64_t BEBookLayoutMode.sanitized.getter(unint64_t result)
{
  if (result <= 1)
    return 1;
  return result;
}

uint64_t BEBookLayoutMode.string.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];

  result = 0x6465767265736572;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6465676170;
      break;
    case 2:
      result = 0x6C61636974726576;
      break;
    case 3:
      result = 0xD000000000000011;
      break;
    default:
      v10[1] = v2;
      v10[2] = v1;
      v10[3] = v3;
      v10[4] = v4;
      v8 = a1;
      type metadata accessor for BookLayoutMode(0);
      v10[0] = v8;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v9, v10, v9, &type metadata for UInt);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1A5CF4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3C0458);
  sub_555F0(v0, (uint64_t)qword_3C0458);
  sub_523DC();
  v1 = OS_os_log.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEF736B6F6F422E65, 0xD000000000000024, 0x80000000002CF5E0);
  return Logger.init(_:)(v1);
}

uint64_t BookLayoutModeManager.__allocating_init(bookEntity:readingSettingsProvider:userDefaults:analyticsProvider:)(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;

  v13 = swift_allocObject(v6, 177);
  BookLayoutModeManager.init(bookEntity:readingSettingsProvider:userDefaults:analyticsProvider:)(a1, a2, a3, a4, a5, a6);
  return v13;
}

uint64_t BookLayoutModeManager.init(bookEntity:readingSettingsProvider:userDefaults:analyticsProvider:)(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t inited;
  id v16;
  unint64_t v17;
  Class isa;
  char v19;
  __int128 v20;
  __int128 v21;
  uint64_t ObjectType;
  uint64_t (*v23)(uint64_t, uint64_t);
  char v24;
  __n128 v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[184];

  v7 = v6;
  *(_BYTE *)(v7 + 80) = 0;
  *(_QWORD *)(v7 + 88) = 0;
  sub_49F1C((uint64_t)a1, v7 + 16);
  *(_QWORD *)(v7 + 56) = a4;
  *(_QWORD *)(v7 + 64) = a5;
  *(_QWORD *)(v7 + 72) = a6;
  v14 = sub_319AC((uint64_t *)&unk_3B9360);
  inited = swift_initStackObject(v14, v40);
  *(_OWORD *)(inited + 16) = xmmword_2E6940;
  strcpy((char *)(inited + 32), "BKEpubLayout");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_QWORD *)(inited + 72) = &type metadata for UInt;
  *(_QWORD *)(inited + 80) = 0xD000000000000016;
  *(_QWORD *)(inited + 48) = 1;
  *(_QWORD *)(inited + 88) = 0x80000000002CF550;
  *(_QWORD *)(inited + 96) = 1;
  *(_QWORD *)(inited + 120) = &type metadata for UInt;
  *(_QWORD *)(inited + 128) = 0x79614C4644504B42;
  *(_QWORD *)(inited + 168) = &type metadata for UInt;
  *(_QWORD *)(inited + 136) = 0xEB0000000074756FLL;
  *(_QWORD *)(inited + 144) = 1;
  swift_unknownObjectRetain(a5);
  v16 = a4;
  v17 = sub_37F24(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v16, "registerDefaults:", isa, swift_bridgeObjectRelease(v17).n128_f64[0]);

  sub_49F1C((uint64_t)a1, (uint64_t)&v37);
  v19 = *(_BYTE *)(v7 + 80);
  v35 = 0u;
  v36 = 0u;
  *((_QWORD *)&v39 + 1) = v16;
  v20 = v38;
  *(_OWORD *)(v7 + 128) = v37;
  *(_OWORD *)(v7 + 144) = v20;
  *(_BYTE *)(v7 + 176) = v19;
  *(_OWORD *)(v7 + 160) = v39;
  v21 = v36;
  *(_OWORD *)(v7 + 96) = v35;
  *(_OWORD *)(v7 + 112) = v21;
  ObjectType = swift_getObjectType(a2);
  v23 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 48);
  v34 = v16;
  v24 = v23(ObjectType, a3);
  sub_1A6124(v24);
  if (a5)
  {
    swift_unknownObjectRetain(a5);
    sub_1A6B1C((_QWORD *)(v7 + 16));
    v27 = (v26 & 0xFFFFFFFFFFFFFFFELL) == 2;
    v28 = swift_getObjectType(a5);
    v35 = xmmword_2ED1B0;
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    (*(void (**)(_BOOL8, __int128 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(a6 + 16))(v27, &v35, 0, 0, 0, 1, v28, a6);
    v25 = swift_unknownObjectRelease(a5);
  }
  *(_QWORD *)&v35 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 56))(ObjectType, a3, v25);
  v29 = swift_allocObject(&unk_386B20, 24);
  swift_weakInit(v29 + 16);
  v30 = sub_319AC(&qword_3BE760);
  v31 = sub_3DCC0(&qword_3BE768, &qword_3BE760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v32 = Publisher<>.sink(receiveValue:)(sub_1A6B14, v29, v30, v31);
  swift_unknownObjectRelease(a2);

  swift_unknownObjectRelease(a5);
  swift_release();
  sub_34488(a1);
  swift_release();
  *(_QWORD *)(v7 + 88) = v32;
  swift_release();
  return v7;
}

void sub_1A6124(char a1)
{
  __asm { BR              X10 }
}

void sub_1A6174()
{
  _QWORD *v0;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6564696C73, 0xE500000000000000, 0x6E696C6C6F726373, 0xE900000000000067, 0);
  swift_bridgeObjectRelease(0xE500000000000000);
  if ((v2 & 1) == 0 || (sub_1A6B1C(v0 + 2), (v3 & 0xFFFFFFFFFFFFFFFELL) == 2))
    __asm { BR              X10 }
  if (qword_3B58E0 != -1)
    swift_once(&qword_3B58E0, sub_1A5CF4);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_555F0(v4, (uint64_t)qword_3C0458);
  v6 = Logger.logObject.getter(v5);
  v9 = static os_log_type_t.debug.getter(v6, v7, v8);
  if (os_log_type_enabled(v6, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_0, v6, v9, "PageNavigation:scrolling <-> LayoutMode:paged mismatched. Updating layout mode to scrolling", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = v0[5];
  v12 = v0[6];
  sub_472D0(v0 + 2, v11);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 136))(v11, v12) & 1) != 0)
    v13 = 2;
  else
    v13 = 3;
  sub_1A64BC(v13);
}

double sub_1A6454(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  double result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  if (swift_weakLoadStrong(v3))
  {
    sub_1A6124(v2);
    *(_QWORD *)&result = swift_release().n128_u64[0];
  }
  return result;
}

void sub_1A64B0()
{
  uint64_t v0;

  sub_1A6B1C((_QWORD *)(v0 + 16));
}

void sub_1A64BC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;

  v2 = v1;
  sub_1A6B1C(v2 + 2);
  if (v4 != a1)
  {
    UInt._bridgeToObjectiveC()();
    v5 = v2[5];
    v6 = v2[6];
    sub_472D0(v2 + 2, v5);
    v7 = (char *)&loc_1A656C + 4 * byte_2F105C[(*(unsigned __int8 (**)(uint64_t, uint64_t))(v6 + 104))(v5, v6)];
    __asm { BR              X10 }
  }
}

uint64_t sub_1A6724()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*v0)
  {
    v1 = *v0;
  }
  else
  {
    v2 = v0;
    sub_1A6B1C(v0 + 4);
    v6 = v3;
    v4 = sub_319AC(&qword_3C0470);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48));
    v1 = CurrentValueSubject.init(_:)(&v6);
    *v2 = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1A67A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(v0 + 8))
  {
    v1 = *(_QWORD *)(v0 + 8);
  }
  else
  {
    v2 = v0;
    sub_1A6B1C((_QWORD *)(v0 + 32));
    v6 = v3;
    v4 = sub_319AC(&qword_3C0470);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48));
    v1 = CurrentValueSubject.init(_:)(&v6);
    *(_QWORD *)(v2 + 8) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1A6824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    sub_1A6B1C((_QWORD *)(v0 + 32));
    v6 = v3;
    v4 = sub_319AC(&qword_3C0470);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48));
    v1 = CurrentValueSubject.init(_:)(&v6);
    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1A68A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    v2 = v0;
    sub_1A6B1C((_QWORD *)(v0 + 32));
    v6 = v3;
    v4 = sub_319AC(&qword_3C0470);
    swift_allocObject(v4, *(unsigned int *)(v4 + 48));
    v1 = CurrentValueSubject.init(_:)(&v6);
    *(_QWORD *)(v2 + 24) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

void sub_1A6924()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = v0[5];
  v2 = v0[6];
  sub_472D0(v0 + 2, v1);
  v3 = (char *)sub_1A697C + 4 * byte_2F1064[(*(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1A697C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  swift_beginAccess(v0 + 96, v6, 33, 0);
  v1 = sub_1A6724();
  swift_endAccess(v6);
  v6[0] = v1;
  v2 = sub_319AC(&qword_3C0470);
  v3 = sub_3DCC0(&qword_3C0478, &qword_3C0470, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v4 = Publisher.eraseToAnyPublisher()(v2, v3);
  swift_release();
  return v4;
}

uint64_t BookLayoutModeManager.deinit()
{
  uint64_t v0;

  sub_34488((_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release();
  sub_1A6CE8(v0 + 96);
  return v0;
}

uint64_t BookLayoutModeManager.__deallocating_deinit()
{
  uint64_t v0;

  sub_34488((_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release();
  sub_1A6CE8(v0 + 96);
  return swift_deallocClassInstance(v0, 177, 7);
}

uint64_t sub_1A6AF0()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1A6B14(char *a1)
{
  uint64_t v1;

  return sub_1A6454(a1, v1);
}

void sub_1A6B1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = a1[3];
  v2 = a1[4];
  sub_472D0(a1, v1);
  v3 = (char *)&loc_1A6B88
     + *((int *)qword_1A6CD8 + (*(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 104))(v1, v2));
  __asm { BR              X10 }
}

uint64_t sub_1A6B98()
{
  _QWORD *v0;
  void *v1;
  NSString v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  _QWORD v12[4];
  _QWORD v13[12];

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "objectForKey:", v2, swift_bridgeObjectRelease(0xEC00000074756F79).n128_f64[0]);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)(v12);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_4E234((uint64_t)v12, (uint64_t)v13);
  if (v13[3])
  {
    if ((swift_dynamicCast(&v11, v13, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) != 0)
    {
      v4 = v11;
      goto LABEL_9;
    }
  }
  else
  {
    sub_4E27C((uint64_t)v13);
  }
  v4 = 1;
LABEL_9:
  v5 = v0[3];
  v6 = v0[4];
  sub_472D0(v0, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 136))(v5, v6);
  v8 = 2;
  if ((v7 & 1) == 0)
    v8 = 3;
  if (v4 <= 1)
    v9 = 1;
  else
    v9 = v4;
  if ((v4 & 0xFFFFFFFFFFFFFFFELL) == 2)
    return v8;
  else
    return v9;
}

uint64_t sub_1A6CE8(uint64_t a1)
{
  destroy for BookLayoutModeManager.LayoutSubjects(a1);
  return a1;
}

uint64_t type metadata accessor for BookLayoutModeManager()
{
  return objc_opt_self(_TtC8BookEPUB21BookLayoutModeManager);
}

uint64_t method lookup function for BookLayoutModeManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookLayoutModeManager);
}

uint64_t dispatch thunk of BookLayoutModeManager.__allocating_init(bookEntity:readingSettingsProvider:userDefaults:analyticsProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of SearchViewModel.searchResults.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

void destroy for BookLayoutModeManager.LayoutSubjects(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_34488((_QWORD *)(a1 + 32));

}

uint64_t initializeWithCopy for BookLayoutModeManager.LayoutSubjects(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  void *v12;
  id v13;

  v4 = *a2;
  v5 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = a2[2];
  v7 = a2[3];
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v8 = a2 + 4;
  v9 = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 56) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  v11(a1 + 32, v8, v10);
  v12 = (void *)a2[9];
  *(_QWORD *)(a1 + 72) = v12;
  *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
  v13 = v12;
  return a1;
}

uint64_t assignWithCopy for BookLayoutModeManager.LayoutSubjects(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  sub_1019A8((_QWORD *)(a1 + 32), (_QWORD *)(a2 + 32));
  v4 = *(void **)(a2 + 72);
  v5 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v4;
  v6 = v4;

  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

__n128 initializeWithTake for BookLayoutModeManager.LayoutSubjects(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BookLayoutModeManager.LayoutSubjects(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  sub_34488((_QWORD *)(a1 + 32));
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;

  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookLayoutModeManager.LayoutSubjects(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookLayoutModeManager.LayoutSubjects(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookLayoutModeManager.LayoutSubjects()
{
  return &type metadata for BookLayoutModeManager.LayoutSubjects;
}

id sub_1A708C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThemeOptionsDataManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ThemeOptionsDataManager()
{
  return objc_opt_self(_TtC8BookEPUB23ThemeOptionsDataManager);
}

void sub_1A7114()
{
  qword_3C05E8 = 0x404B000000000000;
}

double PageFooterLabelMinWidth.getter()
{
  return sub_1A716C(&qword_3B58E8, (uint64_t)&qword_3C05E8);
}

void sub_1A7140()
{
  qword_3C05F0 = 0x403C000000000000;
}

double PageFooterLabelMinHeight.getter()
{
  return sub_1A716C(&qword_3B58F0, (uint64_t)&qword_3C05F0);
}

double sub_1A716C(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

id sub_1A72E8(uint64_t a1)
{
  return sub_1AA5F8(a1, type metadata accessor for RoundedContainerView);
}

unint64_t sub_1A72F8()
{
  unint64_t result;

  result = qword_3C0600;
  if (!qword_3C0600)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BookContentHeaderStyle, &type metadata for BookContentHeaderStyle);
    atomic_store(result, (unint64_t *)&qword_3C0600);
  }
  return result;
}

uint64_t type metadata accessor for RoundedContainerView()
{
  return objc_opt_self(_TtC8BookEPUB20RoundedContainerView);
}

uint64_t storeEnumTagSinglePayload for BookContentHeaderStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A73A8 + 4 * byte_2F1195[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A73DC + 4 * byte_2F1190[v4]))();
}

uint64_t sub_1A73DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A73E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A73ECLL);
  return result;
}

uint64_t sub_1A73F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A7400);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A7404(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A740C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookContentHeaderStyle()
{
  return &type metadata for BookContentHeaderStyle;
}

id sub_1A7428(uint64_t a1, char a2)
{
  void *v2;
  double v3;

  *(_BYTE *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isHeaderVisible) = a2;
  v2 = *(void **)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerView);
  v3 = 0.0;
  if ((a2 & 1) != 0)
    v3 = 1.0;
  return objc_msgSend(v2, "setAlpha:", v3);
}

void sub_1A745C(uint64_t a1, char a2)
{
  *(_BYTE *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerStyle) = a2 & 1;
  sub_1A88B0();
}

uint64_t sub_1A748C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  __n128 v17;
  unint64_t v19;
  unint64_t v20;
  _BYTE v21[24];

  v2 = v1;
  v4 = sub_319AC(&qword_3C0738);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v19 - v8;
  v10 = v2 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView____lazy_storage___logger;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView____lazy_storage___logger, v21, 0, 0);
  sub_1AA8A8(v10, (uint64_t)v9);
  v11 = type metadata accessor for Logger(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v9, v11);
  sub_1AA8F0((uint64_t)v9);
  v19 = 0;
  v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(v20);
  v19 = 0xD000000000000014;
  v20 = 0x80000000002CF980;
  v13 = v2 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_name;
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_name);
  v15 = *(void **)(v13 + 8);
  swift_bridgeObjectRetain(v15);
  v16._countAndFlagsBits = v14;
  v16._object = v15;
  String.append(_:)(v16);
  v17 = swift_bridgeObjectRelease(v15);
  Logger.init(subsystem:category:)(0xD000000000000018, 0x80000000002CCAB0, v19, v20, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v7, a1, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  swift_beginAccess(v10, &v19, 33, 0);
  sub_1AA930((uint64_t)v7, v10);
  return swift_endAccess(&v19);
}

void sub_1A7678(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  _OWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  _QWORD *v57;
  void *v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  void *v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  Class isa;
  uint64_t v90;
  uint64_t v92;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  objc_super v98;

  v6 = &v5[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_theme];
  *v6 = xmmword_2ED1B0;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v5[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isHeaderVisible] = 0;
  v5[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerStyle] = 0;
  v5[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isFooterVisible] = 0;
  v7 = &v5[OBJC_IVAR____TtC8BookEPUB19BookContentHostView____lazy_storage___logger];
  v8 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v5;
  *(_QWORD *)&v5[v9] = objc_msgSend(v10, "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelBackgroundViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabels] = _swiftEmptyArrayStorage;
  v12 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentViewLayoutGuide;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v13 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView;
  v14 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setAlignment:", 3);
  objc_msgSend(v14, "setAxis:", 0);
  objc_msgSend(v14, "setDistribution:", 4);
  *(_QWORD *)&v11[v13] = v14;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelHeightConstraint] = 0;
  v15 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerView;
  v16 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v16, "setAxis:", 0);
  objc_msgSend(v16, "setAlignment:", 0);
  objc_msgSend(v16, "setDistribution:", 1);
  *(_QWORD *)&v11[v15] = v16;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerLeadingConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerTrailingConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageBottomConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentTopConstraint] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentBottomConstraint] = 0;
  v17 = &v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_name];
  *v17 = a1;
  v17[1] = a2;
  v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_allowHeaderText] = a3;
  v18 = &v11[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerText];
  *v18 = a4;
  v18[1] = a5;

  v98.receiver = v11;
  v98.super_class = (Class)type metadata accessor for BookContentHostView(0);
  v19 = (char *)objc_msgSendSuper2(&v98, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v20 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentViewLayoutGuide;
  v21 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentViewLayoutGuide];
  objc_msgSend(v19, "addLayoutGuide:", v21);
  v22 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerView;
  v23 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerView];
  objc_msgSend(v23, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "addSubview:", v23);
  v24 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView;
  v25 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView];
  objc_msgSend(v25, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v19, "addSubview:", v25);
  v26 = objc_msgSend(v21, "topAnchor");
  v27 = objc_msgSend(v19, "topAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  v96 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentTopConstraint;
  v29 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentTopConstraint];
  *(_QWORD *)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentTopConstraint] = v28;

  v30 = objc_msgSend(v19, "bottomAnchor");
  v94 = v20;
  v31 = objc_msgSend(*(id *)&v19[v20], "bottomAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  v33 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentBottomConstraint;
  v34 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentBottomConstraint];
  *(_QWORD *)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentBottomConstraint] = v32;

  v35 = objc_msgSend(*(id *)&v19[v22], "leadingAnchor");
  v36 = objc_msgSend(v19, "leadingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  v38 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerLeadingConstraint;
  v39 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerLeadingConstraint];
  *(_QWORD *)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerLeadingConstraint] = v37;

  v40 = objc_msgSend(v19, "trailingAnchor");
  v90 = v22;
  v41 = objc_msgSend(*(id *)&v19[v22], "trailingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  v43 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerTrailingConstraint;
  v44 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerTrailingConstraint];
  *(_QWORD *)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerTrailingConstraint] = v42;

  v45 = objc_msgSend(v19, "bottomAnchor");
  v46 = objc_msgSend(*(id *)&v19[v24], "bottomAnchor");
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:", v46);

  v48 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageBottomConstraint;
  v49 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageBottomConstraint];
  *(_QWORD *)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageBottomConstraint] = v47;

  v92 = v24;
  v50 = objc_msgSend(*(id *)&v19[v24], "heightAnchor");
  v51 = objc_msgSend(v50, "constraintEqualToConstant:", 0.0);

  v52 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelHeightConstraint;
  v53 = *(void **)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelHeightConstraint];
  *(_QWORD *)&v19[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelHeightConstraint] = v51;

  v54 = sub_319AC((uint64_t *)&unk_3B8440);
  v55 = swift_allocObject(v54, 120, 7);
  *(_OWORD *)(v55 + 16) = xmmword_2F1300;
  v56 = *(void **)&v19[v96];
  if (!v56)
  {
    __break(1u);
    goto LABEL_9;
  }
  v57 = (_QWORD *)v55;
  v97 = v48;
  *(_QWORD *)(v55 + 32) = v56;
  v58 = *(void **)&v19[v33];
  if (!v58)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(_QWORD *)(v55 + 40) = v58;
  v59 = *(void **)&v19[v94];
  v60 = v56;
  v61 = v58;
  v62 = objc_msgSend(v59, "leadingAnchor");
  v63 = objc_msgSend(v19, "leadingAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  v57[6] = v64;
  v65 = objc_msgSend(v19, "trailingAnchor");
  v66 = objc_msgSend(*(id *)&v19[v94], "trailingAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  v57[7] = v67;
  v68 = *(void **)&v19[v38];
  if (!v68)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v57[8] = v68;
  v69 = *(void **)&v19[v43];
  if (!v69)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v57[9] = v69;
  v70 = *(void **)&v19[v94];
  v71 = v68;
  v72 = v69;
  v73 = objc_msgSend(v70, "topAnchor");
  v74 = objc_msgSend(*(id *)&v19[v90], "bottomAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:constant:", v74, 15.0);

  v57[10] = v75;
  v76 = objc_msgSend(*(id *)&v19[v92], "leadingAnchor");
  v77 = objc_msgSend(v19, "leadingAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  v57[11] = v78;
  v79 = objc_msgSend(v19, "trailingAnchor");
  v80 = objc_msgSend(*(id *)&v19[v92], "trailingAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  v57[12] = v81;
  v82 = *(void **)&v19[v97];
  if (!v82)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v57[13] = v82;
  v83 = *(void **)&v19[v52];
  if (v83)
  {
    v84 = (void *)objc_opt_self(NSLayoutConstraint);
    v57[14] = v83;
    specialized Array._endMutation()(v84);
    sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
    v85 = v82;
    v86 = v83;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v84, "activateConstraints:", isa, swift_bridgeObjectRelease(v57).n128_f64[0]);

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1A7F64(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  Class isa;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  Class v28;
  id v29;

  v2 = v1;
  v4 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView;
  v5 = *(void **)&v1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView];
  sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
  v29 = v5;
  if ((static NSObject.== infix(_:_:)() & 1) != 0)
  {

  }
  else
  {
    isa = (Class)objc_msgSend(v29, "constraints");
    if (!isa)
    {
      v7 = sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
      v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v7);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v8);
    }
    v9 = (void *)objc_opt_self(NSLayoutConstraint);
    objc_msgSend(v9, "deactivateConstraints:", isa);

    objc_msgSend(v29, "removeFromSuperview");
    v10 = *(void **)&v2[v4];
    *(_QWORD *)&v2[v4] = a1;
    v11 = a1;

    objc_msgSend(*(id *)&v2[v4], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v2, "addSubview:", v11);
    objc_msgSend(v2, "sendSubviewToBack:", v11);
    v12 = sub_319AC((uint64_t *)&unk_3B8440);
    v13 = swift_allocObject(v12, 64, 7);
    *(_OWORD *)(v13 + 16) = xmmword_2E74C0;
    v14 = objc_msgSend(v11, "topAnchor");
    v15 = *(void **)&v2[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentViewLayoutGuide];
    v16 = objc_msgSend(v15, "topAnchor");
    v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v13 + 32) = v17;
    v18 = objc_msgSend(v11, "leadingAnchor");
    v19 = objc_msgSend(v15, "leadingAnchor");
    v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

    *(_QWORD *)(v13 + 40) = v20;
    v21 = objc_msgSend(v11, "trailingAnchor");
    v22 = objc_msgSend(v15, "trailingAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    *(_QWORD *)(v13 + 48) = v23;
    v24 = objc_msgSend(v11, "bottomAnchor");
    v25 = objc_msgSend(v15, "bottomAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    *(_QWORD *)(v13 + 56) = v26;
    specialized Array._endMutation()(v27);
    sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
    v28 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "activateConstraints:", v28, swift_bridgeObjectRelease(v13).n128_f64[0]);

  }
}

void sub_1A82D8(unsigned __int8 *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const UIFontTextStyle *v17;
  id v18;
  void *v19;
  void *v20;
  NSString *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v50;
  uint64_t v51;
  char *v52;
  UIFontTextStyle v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  uint64_t v63;

  v51 = *a1;
  v50 = a1[1];
  v2 = a1[2];
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 3);
  v6 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a1 + 5);
  v8 = *((_QWORD *)a1 + 6);
  v9 = *((_QWORD *)a1 + 7);
  BookThemeEntity.backgroundColor.getter();
  v11 = v10;
  objc_msgSend(v52, "setBackgroundColor:", v10);

  v42 = v2;
  v43 = v9;
  v47 = v4;
  v48 = v3;
  v46 = v6;
  v44 = v8;
  v45 = v7;
  v60 = (id)sub_8A220();
  v62 = v12;
  v63 = v13;
  v14 = *(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels];
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v29 = *(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels];
    else
      v29 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels]);
    v15 = _CocoaArrayWrapper.endIndex.getter(v29);
    if (!v15)
      goto LABEL_15;
  }
  else
  {
    v15 = *(_QWORD *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels]);
    if (!v15)
      goto LABEL_15;
  }
  sub_34450(0, (unint64_t *)&qword_3B7328, UIColor_ptr);
  v59 = (id)objc_opt_self(UIFontDescriptor);
  v57 = (id)objc_opt_self(UIFont);
  v58 = (id)objc_opt_self(UITraitCollection);
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  v16 = 0;
  v54 = v14 & 0xC000000000000001;
  v17 = &UIFontTextStyleSubheadline;
  if ((a2 & 1) != 0)
    v17 = &UIFontTextStyleFootnote;
  v53 = *v17;
  v55 = v15;
  v56 = v14;
  do
  {
    if (v54)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
    else
      v18 = *(id *)(v14 + 8 * v16 + 32);
    v19 = v18;
    ++v16;
    objc_msgSend(v18, "setOverrideUserInterfaceStyle:", v60);
    swift_retain(v63);
    v20 = (void *)UIColor.init(_:)();
    objc_msgSend(v19, "setTextColor:", v20);

    v21 = v53;
    v22 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", v21);
    v23 = objc_msgSend(v59, "preferredFontDescriptorWithTextStyle:", v21);
    objc_msgSend(v23, "pointSize");
    v24 = objc_msgSend(v57, "systemFontOfSize:weight:");
    v25 = objc_msgSend(v58, "traitCollectionWithPreferredContentSizeCategory:", UIContentSizeCategoryExtraExtraExtraLarge);
    v26 = objc_msgSend(v57, "preferredFontForTextStyle:compatibleWithTraitCollection:", v21, v25);

    objc_msgSend(v26, "pointSize");
    v27 = objc_msgSend(v22, "scaledFontForFont:maximumPointSize:", v24);

    objc_msgSend(v19, "setFont:", v27);
    v28 = objc_msgSend(v19, "layer");
    objc_msgSend(v28, "setCompositingFilter:", v62);

    v14 = v56;
  }
  while (v55 != v16);
LABEL_15:
  swift_bridgeObjectRelease(v14);
  if ((a2 & 1) != 0)
  {
    sub_34450(0, (unint64_t *)&qword_3B7328, UIColor_ptr);
    BookThemeEntity.secondaryButtonStyle.getter();
    swift_release();
    v61 = (id)UIColor.init(_:)();
    v30 = 1.0;
  }
  else
  {
    v61 = 0;
    v30 = 0.0;
  }
  v31 = *(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelBackgroundViews];
  if ((unint64_t)v31 >> 62)
  {
    if (v31 < 0)
      v37 = *(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelBackgroundViews];
    else
      v37 = v31 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelBackgroundViews]);
    v32 = _CocoaArrayWrapper.endIndex.getter(v37);
    if (v32)
    {
LABEL_20:
      if (v32 >= 1)
      {
        v33 = 0;
        do
        {
          if ((v31 & 0xC000000000000001) != 0)
            v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v31);
          else
            v34 = *(id *)(v31 + 8 * v33 + 32);
          v35 = v34;
          ++v33;
          objc_msgSend(v34, "setAlpha:", v30);
          v36 = objc_msgSend(v35, "superview");
          objc_msgSend(v36, "setBackgroundColor:", v61);

        }
        while (v32 != v33);
        goto LABEL_30;
      }
LABEL_34:
      __break(1u);
      return;
    }
  }
  else
  {
    v32 = *(_QWORD *)((char *)&dword_10 + (v31 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(*(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelBackgroundViews]);
    if (v32)
      goto LABEL_20;
  }
LABEL_30:
  swift_bridgeObjectRelease(v31);
  v38 = 256;
  if (!v50)
    v38 = 0;
  v39 = (uint64_t *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_theme];
  v40 = *(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_theme];
  v41 = *(_QWORD *)&v52[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_theme + 8];
  *v39 = v38 | v51 | (v42 << 16);
  v39[1] = v48;
  v39[2] = v47;
  v39[3] = v5;
  v39[4] = v46;
  v39[5] = v45;
  v39[6] = v44;
  v39[7] = v43;
  swift_bridgeObjectRetain(v48);
  sub_15C888(v40, v41);
  sub_1A88B0();

  swift_release();
}

void sub_1A88B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  __int128 v11;
  void *v12;
  id v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_theme);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_theme + 8);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerStyle) & 1) == 0)
  {
    if (v3 != 1)
    {
      v9 = *v2;
      v10 = (unint64_t)*v2 >> 16;
      LOBYTE(v26) = *v2;
      BYTE1(v26) = BYTE1(v9) & 1;
      BYTE2(v26) = v10;
      v27 = v3;
      v11 = *((_OWORD *)v2 + 2);
      v28 = *((_OWORD *)v2 + 1);
      v29 = v11;
      v30 = *((_OWORD *)v2 + 3);
      BookThemeEntity.secondaryLabelColor.getter();
      v13 = v12;
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  if (v3 == 1)
  {
LABEL_10:
    v13 = 0;
    goto LABEL_16;
  }
  v4 = *v2;
  if (*v2 == 1)
  {
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    *(_QWORD *)&v29 = sub_57158;
    *((_QWORD *)&v29 + 1) = 0;
    v26 = _NSConcreteStackBlock;
    v27 = 1107296256;
    *(_QWORD *)&v28 = sub_57168;
    *((_QWORD *)&v28 + 1) = &unk_386CA8;
    v14 = _Block_copy(&v26);
    v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithTraits:", v14);
    _Block_release(v14);
    swift_release(*((_QWORD *)&v29 + 1));
    if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1) & 1) != 0)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    goto LABEL_15;
  }
  v5 = *v2 & 0x100;
  if (*v2)
  {
    v15 = *((_OWORD *)v2 + 1);
    v16 = *((_OWORD *)v2 + 2);
    v17 = *((_OWORD *)v2 + 3);
    LOBYTE(v26) = *v2;
    BYTE1(v26) = (unsigned __int16)(v4 & 0x100) >> 8;
    BYTE2(v26) = BYTE2(v4);
    v27 = v3;
    v28 = v15;
    v29 = v16;
    v30 = v17;
    BookThemeEntity.textColor.getter();
    v13 = v18;
    goto LABEL_16;
  }
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  if (!v5)
  {
    *(_QWORD *)&v29 = sub_57148;
    *((_QWORD *)&v29 + 1) = 0;
    v26 = _NSConcreteStackBlock;
    v27 = 1107296256;
    *(_QWORD *)&v28 = sub_57168;
    *((_QWORD *)&v28 + 1) = &unk_386CF8;
    v7 = _Block_copy(&v26);
    v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithTraits:", v7);
    _Block_release(v7);
    swift_release(*((_QWORD *)&v29 + 1));
    if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1) & 1) != 0)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    goto LABEL_15;
  }
  *(_QWORD *)&v29 = sub_57158;
  *((_QWORD *)&v29 + 1) = 0;
  v26 = _NSConcreteStackBlock;
  v27 = 1107296256;
  *(_QWORD *)&v28 = sub_57168;
  *((_QWORD *)&v28 + 1) = &unk_386CD0;
  v19 = _Block_copy(&v26);
  v8 = objc_msgSend((id)objc_opt_self(UITraitCollection), "traitCollectionWithTraits:", v19);
  _Block_release(v19);
  swift_release(*((_QWORD *)&v29 + 1));
  if ((swift_isEscapingClosureAtFileLocation(0, "", 0, 0, 0, 1) & 1) == 0)
  {
LABEL_15:
    v13 = objc_msgSend(v6, "resolvedColorWithTraitCollection:", v8);

LABEL_16:
    v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabels);
    if ((unint64_t)v20 >> 62)
    {
      if (v20 < 0)
        v25 = v20;
      else
        v25 = v20 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v20);
      v21 = _CocoaArrayWrapper.endIndex.getter(v25);
      if (v21)
        goto LABEL_18;
    }
    else
    {
      v21 = *(_QWORD *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(v20);
      if (v21)
      {
LABEL_18:
        if (v21 >= 1)
        {
          for (i = 0; i != v21; ++i)
          {
            if ((v20 & 0xC000000000000001) != 0)
              v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v20);
            else
              v23 = *(id *)(v20 + 8 * i + 32);
            v24 = v23;
            objc_msgSend(v23, "setTextColor:", v13, v26, v27, v28, v29, v30);

          }
          goto LABEL_28;
        }
        __break(1u);
        goto LABEL_30;
      }
    }
LABEL_28:

    swift_bridgeObjectRelease(v20);
    return;
  }
LABEL_32:
  __break(1u);
}

void sub_1A8CF8(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE v26[16];
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;

  v3 = v2;
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1A748C((uint64_t)v9);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v13 = 134217984;
    v28 = (_QWORD *)a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v13 + 4);
    _os_log_impl(&dword_0, v11, v12, "Regenerating page labels for columnCount: %ld", v13, 0xCu);
    swift_slowDealloc(v13, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v27 = _swiftEmptyArrayStorage;
  v28 = _swiftEmptyArrayStorage;
  if (qword_3B58E8 != -1)
    swift_once(&qword_3B58E8, sub_1A7114);
  v14 = *(double *)&qword_3C05E8;
  if (qword_3B58F0 != -1)
    swift_once(&qword_3B58F0, sub_1A7140);
  v15 = *(double *)&qword_3C05F0;
  v16 = objc_msgSend(objc_allocWithZone((Class)CATransition), "init");
  objc_msgSend(v16, "setDuration:", 0.25);
  objc_msgSend(v16, "setType:", kCATransitionFade);
  v17 = (void *)objc_opt_self(CAMediaTimingFunction);
  v18 = v16;
  v19 = objc_msgSend(v17, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
  objc_msgSend(v18, "setTimingFunction:", v19);

  objc_msgSend(v18, "setRemovedOnCompletion:", 0);
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v20 = v18;
    v21 = sub_1AA648(0, a1, (uint64_t)v20, &v28, &v27, v14, v15);

    v22 = v28;
    v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels) = v28;
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRelease(v23);
    v24 = v27;
    v25 = *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelBackgroundViews);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelBackgroundViews) = v27;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRelease(v25);
    sub_1A973C((uint64_t)v21, a2);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v24);

    swift_bridgeObjectRelease(v21);
  }
}

void sub_1A9028(uint64_t a1@<X1>, _QWORD *a2@<X2>, _QWORD *a3@<X3>, _QWORD *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  id v11;
  id v12;
  NSString v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  Class isa;
  id v65;
  id v66;

  v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = objc_msgSend(v11, "layer");
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "addAnimation:forKey:", a1, v13);

  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v11, "setTextAlignment:", 1);
  objc_msgSend(v11, "_accessibilitySetIsSpeakThisElement:", 0);
  v14 = v11;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v14);
  v16 = *(_QWORD *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8));
  v15 = *(_QWORD *)((char *)&dword_18 + (*a2 & 0xFFFFFFFFFFFFFF8));
  if (v16 >= v15 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v15 > 1, v16 + 1, 1);
  v17 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
  specialized Array._endMutation()(v17);
  v18 = type metadata accessor for ChromeMaterialBackgroundView();
  v19 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v18)), "init");
  v20 = type metadata accessor for RoundedContainerView();
  v21 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v20)), "init");
  objc_msgSend(v19, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v21, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v21, "addSubview:", v19);
  objc_msgSend(v21, "addSubview:", v14);
  v22 = v19;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  v24 = *(_QWORD *)((char *)&dword_10 + (*a3 & 0xFFFFFFFFFFFFFF8));
  v23 = *(_QWORD *)((char *)&dword_18 + (*a3 & 0xFFFFFFFFFFFFFF8));
  if (v24 >= v23 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
  v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
  specialized Array._endMutation()(v25);
  v66 = (id)objc_opt_self(NSLayoutConstraint);
  v26 = sub_319AC((uint64_t *)&unk_3B8440);
  v27 = swift_allocObject(v26, 128, 7);
  *(_OWORD *)(v27 + 16) = xmmword_2F1310;
  v28 = objc_msgSend(v14, "centerXAnchor");
  v29 = objc_msgSend(v21, "centerXAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v27 + 32) = v30;
  v31 = objc_msgSend(v14, "centerYAnchor");
  v32 = objc_msgSend(v21, "centerYAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v27 + 40) = v33;
  v34 = objc_msgSend(v14, "widthAnchor");
  v35 = objc_msgSend(v34, "constraintGreaterThanOrEqualToConstant:", a5 + -16.0);

  *(_QWORD *)(v27 + 48) = v35;
  v36 = objc_msgSend(v14, "heightAnchor");
  v37 = objc_msgSend(v36, "constraintGreaterThanOrEqualToConstant:", a6);

  *(_QWORD *)(v27 + 56) = v37;
  v38 = objc_msgSend(v21, "heightAnchor");
  v39 = objc_msgSend(v14, "heightAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v27 + 64) = v40;
  v41 = objc_msgSend(v21, "leftAnchor");
  v42 = objc_msgSend(v14, "leftAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, -8.0);

  *(_QWORD *)(v27 + 72) = v43;
  v44 = objc_msgSend(v21, "rightAnchor");
  v45 = objc_msgSend(v14, "rightAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, 8.0);

  *(_QWORD *)(v27 + 80) = v46;
  v47 = objc_msgSend(v21, "topAnchor");
  v48 = objc_msgSend(v14, "topAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v27 + 88) = v49;
  v50 = objc_msgSend(v22, "leadingAnchor");
  v51 = objc_msgSend(v21, "leadingAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v27 + 96) = v52;
  v53 = objc_msgSend(v22, "trailingAnchor");
  v54 = objc_msgSend(v21, "trailingAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

  *(_QWORD *)(v27 + 104) = v55;
  v56 = objc_msgSend(v22, "topAnchor");
  v57 = objc_msgSend(v21, "topAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v27 + 112) = v58;
  v59 = objc_msgSend(v22, "bottomAnchor");
  v60 = objc_msgSend(v21, "bottomAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v27 + 120) = v61;
  specialized Array._endMutation()(v62);
  v63 = v27;
  sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v66, "activateConstraints:", isa, swift_bridgeObjectRelease(v63).n128_f64[0]);

  v65 = v21;
  objc_msgSend(v65, "setClipsToBounds:", 1);

  *a4 = v65;
}

void sub_1A973C(uint64_t a1, double a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;

  v5 = objc_msgSend(v2, "arrangedSubviews");
  v6 = sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v12 = v7;
    else
      v12 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(v7);
    if (!v8)
      goto LABEL_13;
  }
  else
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
    if (!v8)
      goto LABEL_13;
  }
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
    else
      v10 = *(id *)(v7 + 8 * i + 32);
    v11 = v10;
    objc_msgSend(v10, "removeFromSuperview");

  }
LABEL_13:
  swift_bridgeObjectRelease(v7);
  v13 = sub_1A9FB8(a1, a2);
  objc_msgSend(v2, "addArrangedSubview:", v13);

  if (!((unint64_t)a1 >> 62))
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    if (v14)
      goto LABEL_15;
LABEL_25:
    swift_bridgeObjectRelease(a1);
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v14 = _CocoaArrayWrapper.endIndex.getter(v19);
  if (!v14)
    goto LABEL_25;
LABEL_15:
  if (v14 >= 1)
  {
    v15 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a1);
      else
        v16 = *(id *)(a1 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      objc_msgSend(v2, "addArrangedSubview:", v16);
      v18 = sub_1A9FB8(a1, a2);
      objc_msgSend(v2, "addArrangedSubview:", v18);

    }
    while (v14 != v15);
    goto LABEL_25;
  }
LABEL_27:
  __break(1u);
}

void sub_1A9950(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *i;
  id v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;

  if (v1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_allowHeaderText] == 1)
  {
    v3 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabels;
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabels];
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabels];
      else
        v9 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabels]);
      v5 = (char *)_CocoaArrayWrapper.endIndex.getter(v9);
      if (!v5)
        goto LABEL_14;
    }
    else
    {
      v5 = *(char **)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabels]);
      if (!v5)
        goto LABEL_14;
    }
    if ((uint64_t)v5 < 1)
    {
      __break(1u);
      goto LABEL_31;
    }
    for (i = 0; i != v5; i = (char *)i + 1)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v4);
      else
        v7 = *(id *)(v4 + 8 * (_QWORD)i + 32);
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

    }
LABEL_14:
    swift_bridgeObjectRelease(v4);
    if (a1 < 0)
    {
      __break(1u);
    }
    else
    {
      v5 = v1;
      v10 = sub_1AA788(0, a1, (uint64_t)v5);

      v11 = *(_QWORD *)&v1[v3];
      *(_QWORD *)&v1[v3] = v10;
      swift_bridgeObjectRelease(v11);
      a1 = *(_QWORD *)&v1[v3];
      if (!((unint64_t)a1 >> 62))
      {
        v12 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(a1);
        if (v12)
          goto LABEL_17;
        goto LABEL_28;
      }
    }
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (v12)
    {
LABEL_17:
      if (v12 >= 1)
      {
        v13 = 0;
        v14 = *(void **)&v5[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerView];
        do
        {
          if ((a1 & 0xC000000000000001) != 0)
            v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, a1);
          else
            v15 = *(id *)(a1 + 8 * v13 + 32);
          v16 = v15;
          ++v13;
          objc_msgSend(v14, "addArrangedSubview:", v15);

        }
        while (v12 != v13);
        goto LABEL_28;
      }
LABEL_31:
      __break(1u);
      return;
    }
LABEL_28:
    swift_bridgeObjectRelease(a1);
  }
}

id sub_1A9B48@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  id v4;
  double v5;
  double v6;
  id v7;
  NSString v8;
  id result;

  v4 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v4, "setNumberOfLines:", 1);
  objc_msgSend(v4, "setLineBreakMode:", 1);
  LODWORD(v5) = 1132068864;
  objc_msgSend(v4, "setContentHuggingPriority:forAxis:", 0, v5);
  objc_msgSend(v4, "setTextAlignment:", 1);
  LODWORD(v6) = 1132068864;
  objc_msgSend(v4, "setContentCompressionResistancePriority:forAxis:", 0, v6);
  objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
  v7 = sub_644E8((uint64_t)UIFontTextStyleSubheadline, (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge);
  objc_msgSend(v4, "setFont:", v7);

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerText + 8))
    v8 = String._bridgeToObjectiveC()();
  else
    v8 = 0;
  objc_msgSend(v4, "setText:", v8);

  result = objc_msgSend(v4, "_accessibilitySetIsSpeakThisElement:", 0);
  *a2 = v4;
  return result;
}

id sub_1A9CF0()
{
  return sub_1AA5F8(0, (uint64_t (*)(void))type metadata accessor for BookContentHostView);
}

uint64_t sub_1A9E40()
{
  return type metadata accessor for BookContentHostView(0);
}

uint64_t type metadata accessor for BookContentHostView(uint64_t a1)
{
  uint64_t result;

  result = qword_3C06F0;
  if (!qword_3C06F0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookContentHostView);
  return result;
}

void sub_1A9E84(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[21];

  v4[0] = "@";
  v4[1] = &unk_2F1280;
  v4[2] = &unk_2F1280;
  v4[3] = &unk_2F1280;
  sub_1A9F54(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_2F1298;
    v4[6] = &unk_2F1280;
    v4[7] = &unk_2F12B0;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = &unk_2F12C8;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = &unk_2F12C8;
    v4[17] = &unk_2F12C8;
    v4[18] = &unk_2F12C8;
    v4[19] = &unk_2F12C8;
    v4[20] = &unk_2F12C8;
    swift_updateClassMetadata2(a1, 256, 21, v4, a1 + 80);
  }
}

void sub_1A9F54(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3C0700)
  {
    v2 = type metadata accessor for Logger(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3C0700);
  }
}

void sub_1A9FA8()
{
  qword_3C05F8 = 0x4028000000000000;
}

id sub_1A9FB8(uint64_t a1, double a2)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  Class isa;
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  }
  if (v4 <= 1)
    a2 = 0.0;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v5, "setBackgroundColor:", v6);

  v7 = (void *)objc_opt_self(NSLayoutConstraint);
  v8 = sub_319AC((uint64_t *)&unk_3B8440);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_2E6690;
  v10 = objc_msgSend(v5, "widthAnchor");
  v11 = objc_msgSend(v10, "constraintEqualToConstant:", a2);

  *(_QWORD *)(v9 + 32) = v11;
  v12 = objc_msgSend(v5, "heightAnchor");
  if (qword_3B58F8 != -1)
    swift_once(&qword_3B58F8, sub_1A9FA8);
  v13 = objc_msgSend(v12, "constraintEqualToConstant:", *(double *)&qword_3C05F8);

  *(_QWORD *)(v9 + 40) = v13;
  specialized Array._endMutation()(v14);
  sub_34450(0, &qword_3BE540, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "activateConstraints:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  return v5;
}

id sub_1AA210(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSString v14;
  id v15;
  Class isa;
  NSString v17;
  Class v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  id v24;
  Class v25;
  NSString v26;
  id v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  Class v35;
  id v36;
  uint64_t v37;
  objc_super v39;

  v39.receiver = v4;
  v39.super_class = (Class)type metadata accessor for ChromeMaterialBackgroundView();
  v9 = objc_msgSendSuper2(&v39, "initWithFrame:", a1, a2, a3, a4);
  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterGaussianBlur);
  v11 = v10;
  v12 = objc_allocWithZone((Class)CAFilter);
  v13 = v9;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v12, "initWithType:", v14, swift_bridgeObjectRelease(v11).n128_f64[0]);

  isa = Bool._bridgeToObjectiveC()().super.super.isa;
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setValue:forKey:", isa, v17);

  v18 = Double._bridgeToObjectiveC()().super.super.isa;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setValue:forKey:", v18, v19);

  static String._unconditionallyBridgeFromObjectiveC(_:)(kCAFilterColorSaturate);
  v21 = v20;
  v22 = objc_allocWithZone((Class)CAFilter);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v22, "initWithType:", v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v25 = Double._bridgeToObjectiveC()().super.super.isa;
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "setValue:forKey:", v25, v26);

  v27 = objc_msgSend(v13, "layer");
  v28 = objc_opt_self(CABackdropLayer);
  v29 = (void *)swift_dynamicCastObjCClassUnconditional(v27, v28, 0, 0, 0);
  v30 = sub_319AC(&qword_3B84F0);
  v31 = swift_allocObject(v30, 96);
  *(_OWORD *)(v31 + 16) = xmmword_2E5F70;
  v32 = sub_34450(0, &qword_3B84F8, CAFilter_ptr);
  *(_QWORD *)(v31 + 32) = v15;
  *(_QWORD *)(v31 + 88) = v32;
  *(_QWORD *)(v31 + 56) = v32;
  *(_QWORD *)(v31 + 64) = v24;
  v33 = v15;
  v34 = v24;
  v35 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "setFilters:", v35, swift_bridgeObjectRelease(v31).n128_f64[0]);

  v36 = objc_msgSend(v13, "layer");
  v37 = objc_opt_self(CABackdropLayer);
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(v36, v37, 0, 0, 0), "setScale:", 0.25);

  return v13;
}

id sub_1AA5EC(uint64_t a1)
{
  return sub_1AA5F8(a1, type metadata accessor for ChromeMaterialBackgroundView);
}

id sub_1AA5F8(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t type metadata accessor for ChromeMaterialBackgroundView()
{
  return objc_opt_self(_TtC8BookEPUB28ChromeMaterialBackgroundView);
}

char *sub_1AA648(char *result, uint64_t a2, uint64_t a3, _QWORD *a4, _QWORD *a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v15;
  int64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22;
  _QWORD *v23;

  v8 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
    goto LABEL_17;
  v9 = v7;
  v10 = result;
  result = (char *)_swiftEmptyArrayStorage;
  if (v8)
  {
    v23 = _swiftEmptyArrayStorage;
    result = (char *)specialized ContiguousArray.reserveCapacity(_:)(v8);
    if (v8 < 0)
    {
LABEL_18:
      __break(1u);
      return result;
    }
    if (a2 <= (uint64_t)v10)
      v15 = v10;
    else
      v15 = (char *)a2;
    for (i = v15 - v10; ; --i)
    {
      sub_1A9028(a3, a4, a5, &v22, a6, a7);
      if (v9)
        return (char *)swift_release(v23);
      v9 = 0;
      v17 = v22;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v18 = v23[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
      v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v17);
      result = (char *)specialized ContiguousArray._endMutation()(v19);
      if (a2 < (uint64_t)v10)
        break;
      if (!i)
        goto LABEL_16;
      if (!--v8)
        return (char *)v23;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

char *sub_1AA788(char *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v9;
  int64_t i;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
    goto LABEL_17;
  v5 = v3;
  v6 = result;
  result = (char *)_swiftEmptyArrayStorage;
  if (v4)
  {
    v16 = _swiftEmptyArrayStorage;
    result = (char *)specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
LABEL_18:
      __break(1u);
      return result;
    }
    if (a2 <= (uint64_t)v6)
      v9 = v6;
    else
      v9 = (char *)a2;
    for (i = v9 - v6; ; --i)
    {
      v11 = sub_1A9B48(a3, &v15);
      if (v5)
        return (char *)swift_release(v16);
      v5 = 0;
      v12 = v15;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = v16[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      result = (char *)specialized ContiguousArray._endMutation()(v14);
      if (a2 < (uint64_t)v6)
        break;
      if (!i)
        goto LABEL_16;
      if (!--v4)
        return (char *)v16;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_1AA8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3C0738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AA8F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_319AC(&qword_3C0738);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AA930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3C0738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1AA978()
{
  _BYTE *v0;
  _OWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;

  v1 = &v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_theme];
  *v1 = xmmword_2ED1B0;
  v1[1] = 0u;
  v1[2] = 0u;
  v1[3] = 0u;
  v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isHeaderVisible] = 0;
  v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerStyle] = 0;
  v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_isFooterVisible] = 0;
  v2 = &v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView____lazy_storage___logger];
  v3 = type metadata accessor for Logger(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabels] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelBackgroundViews] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabels] = _swiftEmptyArrayStorage;
  v5 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentViewLayoutGuide;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v6 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelContainerView;
  v7 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setAlignment:", 3);
  objc_msgSend(v7, "setAxis:", 0);
  objc_msgSend(v7, "setDistribution:", 4);
  *(_QWORD *)&v0[v6] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageLabelHeightConstraint] = 0;
  v8 = OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerView;
  v9 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v9, "setAxis:", 0);
  objc_msgSend(v9, "setAlignment:", 0);
  objc_msgSend(v9, "setDistribution:", 1);
  *(_QWORD *)&v0[v8] = v9;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerLeadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_headerLabelContainerTrailingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_pageBottomConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentTopConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8BookEPUB19BookContentHostView_contentBottomConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000002C69C0, "BookEPUB/BookContentHostView.swift", 34, 2, 220, 0);
  __break(1u);
}

uint64_t sub_1AABCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1AABDC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

id ExpandedContentRouter.__allocating_init(eventHandler:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  id v8;
  objc_super v10;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler];
  *((_QWORD *)v6 + 1) = 0;
  v7 = swift_unknownObjectWeakInit(v6, 0);
  *(_QWORD *)(v7 + 8) = a2;
  swift_unknownObjectWeakAssign(v7, a1);
  v10.receiver = v5;
  v10.super_class = v2;
  v8 = objc_msgSendSuper2(&v10, "init");
  swift_unknownObjectRelease(a1);
  return v8;
}

id ExpandedContentRouter.init(eventHandler:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v5 = &v2[OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler];
  *((_QWORD *)v5 + 1) = 0;
  v6 = swift_unknownObjectWeakInit(v5, 0);
  *(_QWORD *)(v6 + 8) = a2;
  swift_unknownObjectWeakAssign(v6, a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for ExpandedContentRouter();
  v7 = objc_msgSendSuper2(&v9, "init");
  swift_unknownObjectRelease(a1);
  return v7;
}

uint64_t type metadata accessor for ExpandedContentRouter()
{
  return objc_opt_self(_TtC8BookEPUB21ExpandedContentRouter);
}

void ExpandedContentRouter.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookEPUB.ExpandedContentRouter", 30, "init()", 6, 0);
  __break(1u);
}

id ExpandedContentRouter.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpandedContentRouter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void ExpandedContentRouter.presentAlertController(_:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  v7 = v3 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, a3, ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  else if (a2)
  {
    a2();
  }
}

double ExpandedContentRouter.handleTableOfContentsRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, ObjectType, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

uint64_t ExpandedContentRouter.handleInternalLoadRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  char v8;

  v3 = v1 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    return v8 & 1;
  }
  return result;
}

double ExpandedContentRouter.handleExternalLoadRequest(externalURL:likelyUserInitiated:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v5 = v2 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 32))(a1, a2 & 1, ObjectType, v9);
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

void ExpandedContentRouter.handleUserRequestForFrameToLoadExternalURL(externalURL:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  v7 = v3 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t))(v10 + 40))(a1, a2, a3, ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    a2();
  }
}

Swift::Void __swiftcall ExpandedContentRouter.expandedContentDidDismiss()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  v1 = v0 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v4 + 48))(ObjectType, v4);
    swift_unknownObjectRelease(v3);
  }
}

Swift::String __swiftcall ExpandedContentRouter.stringForCopy(from:)(Swift::String from)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  uint64_t v10;
  void *v11;
  Swift::String result;

  object = from._object;
  countAndFlagsBits = from._countAndFlagsBits;
  v4 = v1 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v4 + 8);
    ObjectType = swift_getObjectType(Strong);
    countAndFlagsBits = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v7 + 56))(countAndFlagsBits, object, ObjectType, v7);
    object = v9;
    swift_unknownObjectRelease(v6);
  }
  else
  {
    swift_bridgeObjectRetain(object);
  }
  v10 = countAndFlagsBits;
  v11 = object;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

void ExpandedContentRouter.share(text:sourceRect:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  _QWORD v16[5];

  v6 = *a3;
  v7 = a3[1];
  v8 = a3[2];
  v9 = a3[3];
  v10 = a3[4];
  v11 = v3 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType(Strong);
    v16[0] = v6;
    v16[1] = v7;
    v16[2] = v8;
    v16[3] = v9;
    v16[4] = v10;
    (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v14 + 64))(a1, a2, v16, ObjectType, v14);
    swift_unknownObjectRelease(v13);
  }
}

void sub_1AB1DC(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  v7 = *v3 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, a3, ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  else if (a2)
  {
    a2();
  }
}

double sub_1AB27C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v3 = *v1 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, ObjectType, v7);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1AB2F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  char v8;

  v3 = *v1 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result);
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, ObjectType, v6);
    swift_unknownObjectRelease(v5);
    return v8 & 1;
  }
  return result;
}

double sub_1AB360(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;

  v5 = *v2 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 32))(a1, a2 & 1, ObjectType, v9);
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

void sub_1AB3EC(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  v7 = *v3 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, void (*)(void), uint64_t, uint64_t, uint64_t))(v10 + 40))(a1, a2, a3, ObjectType, v10);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    a2();
  }
}

double sub_1AB488()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v1 = *v0 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = Strong;
    v5 = *(_QWORD *)(v1 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v5 + 48))(ObjectType, v5);
    *(_QWORD *)&result = swift_unknownObjectRelease(v4).n128_u64[0];
  }
  return result;
}

uint64_t sub_1AB4E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v5 = *v2 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(Strong);
    a1 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, a2, ObjectType, v8);
    swift_unknownObjectRelease(v7);
  }
  else
  {
    swift_bridgeObjectRetain(a2);
  }
  return a1;
}

void sub_1AB57C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  _QWORD v17[5];

  v6 = *v3;
  v7 = *a3;
  v8 = a3[1];
  v9 = a3[2];
  v10 = a3[3];
  v11 = a3[4];
  v12 = v6 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler;
  Strong = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC8BookEPUB21ExpandedContentRouter_eventHandler);
  if (Strong)
  {
    v14 = Strong;
    v15 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType(Strong);
    v17[0] = v7;
    v17[1] = v8;
    v17[2] = v9;
    v17[3] = v10;
    v17[4] = v11;
    (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v15 + 64))(a1, a2, v17, ObjectType, v15);
    swift_unknownObjectRelease(v14);
  }
}

uint64_t dispatch thunk of ExpandedContentEventHandling.stringForCopy(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t method lookup function for ExpandedContentRouter(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ExpandedContentRouter);
}

Swift::Bool __swiftcall BookContentViewController.isPortrait2UP()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  double (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v21, 0, 0);
  v2 = *v1;
  swift_beginAccess(*v1 + 112, v20, 0, 0);
  v3 = *(_QWORD *)(v2 + 112);
  v4 = *(_QWORD *)(v2 + 120);
  ObjectType = swift_getObjectType(v3);
  v6 = *(double (**)(uint64_t, uint64_t, __n128))(v4 + 80);
  v7 = swift_unknownObjectRetain(v3);
  v8 = v6(ObjectType, v4, v7);
  v10 = v9;
  swift_unknownObjectRelease(v3);
  if (v8 >= v10)
    return 0;
  v11 = *v1;
  swift_beginAccess(v11 + 112, v19, 0, 0);
  v13 = *(_QWORD *)(v11 + 112);
  v12 = *(_QWORD *)(v11 + 120);
  v14 = swift_getObjectType(v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 120);
  v16 = swift_unknownObjectRetain(v13);
  v17 = v15(v14, v12, v16);
  swift_unknownObjectRelease(v13);
  return v17 > 1;
}

Swift::Bool __swiftcall BookContentViewController.isLandscape2UP()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  double (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  double v8;
  double v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v21, 0, 0);
  v2 = *v1;
  swift_beginAccess(*v1 + 112, v20, 0, 0);
  v3 = *(_QWORD *)(v2 + 112);
  v4 = *(_QWORD *)(v2 + 120);
  ObjectType = swift_getObjectType(v3);
  v6 = *(double (**)(uint64_t, uint64_t, __n128))(v4 + 80);
  v7 = swift_unknownObjectRetain(v3);
  v8 = v6(ObjectType, v4, v7);
  v10 = v9;
  swift_unknownObjectRelease(v3);
  if (v8 < v10)
    return 0;
  v12 = *v1;
  swift_beginAccess(v12 + 112, v19, 0, 0);
  v14 = *(_QWORD *)(v12 + 112);
  v13 = *(_QWORD *)(v12 + 120);
  v15 = swift_getObjectType(v14);
  v16 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 120);
  v17 = swift_unknownObjectRetain(v14);
  v18 = v16(v15, v13, v17);
  swift_unknownObjectRelease(v14);
  return v18 > 1;
}

Swift::Bool __swiftcall BookContentViewController.isPortrait1UP()()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  double (*v6)(uint64_t, uint64_t, __n128);
  __n128 v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController, v21, 0, 0);
  v2 = *v1;
  swift_beginAccess(*v1 + 112, v20, 0, 0);
  v3 = *(_QWORD *)(v2 + 112);
  v4 = *(_QWORD *)(v2 + 120);
  ObjectType = swift_getObjectType(v3);
  v6 = *(double (**)(uint64_t, uint64_t, __n128))(v4 + 80);
  v7 = swift_unknownObjectRetain(v3);
  v8 = v6(ObjectType, v4, v7);
  v10 = v9;
  swift_unknownObjectRelease(v3);
  if (v8 >= v10)
    return 0;
  v11 = *v1;
  swift_beginAccess(v11 + 112, v19, 0, 0);
  v13 = *(_QWORD *)(v11 + 112);
  v12 = *(_QWORD *)(v11 + 120);
  v14 = swift_getObjectType(v13);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 120);
  v16 = swift_unknownObjectRetain(v13);
  v17 = v15(v14, v12, v16);
  swift_unknownObjectRelease(v13);
  return v17 == 1;
}

Swift::Bool __swiftcall BookContentViewController.isSnapshotAllowed()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t, __n128);
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double (*v30)(uint64_t, uint64_t, __n128);
  __n128 v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  int v42;
  id v43;
  id v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double (*v56)(uint64_t, uint64_t, __n128);
  __n128 v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, __n128);
  __n128 v66;
  uint64_t v67;
  _BOOL4 v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double (*v77)(uint64_t, uint64_t, __n128);
  __n128 v78;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double (*v88)(uint64_t, uint64_t, __n128);
  __n128 v89;
  double v90;
  double v91;
  double v92;
  _BOOL4 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t, __n128);
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  double (*v105)(uint64_t, uint64_t, __n128);
  __n128 v106;
  double v107;
  double v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  os_log_type_t v113;
  char v114[24];
  char v115[24];
  char v116[24];
  char v117[24];
  char v118[24];
  char v119[28];
  _BOOL4 v120;
  _BOOL4 v121;
  int v122;
  char v123[24];
  _BOOL4 v124;
  int v125;
  int v126;
  _BYTE v127[20];
  char v128[24];
  char v129[24];
  char v130[24];
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD v134[6];

  v1 = v0;
  v2 = (uint64_t)&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity];
  swift_beginAccess(&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_bookEntity], v130, 0, 0);
  sub_1127B0(v2, (uint64_t)&v131);
  if (v132)
  {
    sub_3F1CC(&v131, (uint64_t)v134);
    v3 = &v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController];
    swift_beginAccess(&v0[OBJC_IVAR____TtC8BookEPUB25BookContentViewController_contentLayoutController], v129, 0, 0);
    v4 = *(_QWORD *)v3;
    swift_beginAccess(*(_QWORD *)v3 + 112, v128, 0, 0);
    v5 = *(_QWORD *)(v4 + 112);
    v6 = *(_QWORD *)(v4 + 120);
    ObjectType = swift_getObjectType(v5);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v6 + 24);
    v9 = swift_unknownObjectRetain(v5);
    if (v8(ObjectType, v6, v9) != 1)
      goto LABEL_7;
    v10 = *(_QWORD *)v3;
    swift_beginAccess(*(_QWORD *)v3 + 112, v118, 0, 0);
    v11 = *(_QWORD *)(v10 + 112);
    v12 = *(_QWORD *)(v10 + 120);
    v13 = swift_getObjectType(v11);
    v14 = *(double (**)(uint64_t, uint64_t, __n128))(v12 + 80);
    v15 = swift_unknownObjectRetain(v11);
    v16 = v14(v13, v12, v15);
    v18 = v17;
    swift_unknownObjectRelease(v11);
    if (v16 < v18)
    {
      v19 = *(_QWORD *)v3;
      swift_beginAccess(*(_QWORD *)v3 + 112, v114, 0, 0);
      v20 = *(_QWORD *)(v19 + 112);
      v21 = *(_QWORD *)(v19 + 120);
      v22 = swift_getObjectType(v20);
      v23 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v21 + 120);
      v24 = swift_unknownObjectRetain(v20);
      v25 = v23(v22, v21, v24);
      swift_unknownObjectRelease(v20);
      if (v25 > 1)
        goto LABEL_7;
    }
    v26 = *(_QWORD *)v3;
    swift_beginAccess(*(_QWORD *)v3 + 112, v117, 0, 0);
    v27 = *(_QWORD *)(v26 + 112);
    v28 = *(_QWORD *)(v26 + 120);
    v29 = swift_getObjectType(v27);
    v30 = *(double (**)(uint64_t, uint64_t, __n128))(v28 + 80);
    v31 = swift_unknownObjectRetain(v27);
    v32 = v30(v29, v28, v31);
    v34 = v33;
    swift_unknownObjectRelease(v27);
    if (v32 < v34)
      goto LABEL_16;
    v35 = *(_QWORD *)v3;
    swift_beginAccess(*(_QWORD *)v3 + 112, v116, 0, 0);
    v36 = *(_QWORD *)(v35 + 112);
    v37 = *(_QWORD *)(v35 + 120);
    v38 = swift_getObjectType(v36);
    v39 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v37 + 120);
    v40 = swift_unknownObjectRetain(v36);
    v41 = v39(v38, v37, v40);
    swift_unknownObjectRelease(v36);
    if (v41 != 1)
    {
LABEL_16:
      v73 = *(_QWORD *)v3;
      swift_beginAccess(*(_QWORD *)v3 + 112, v115, 0, 0);
      v74 = *(_QWORD *)(v73 + 112);
      v75 = *(_QWORD *)(v73 + 120);
      v76 = swift_getObjectType(v74);
      v77 = *(double (**)(uint64_t, uint64_t, __n128))(v75 + 48);
      v78 = swift_unknownObjectRetain(v74);
      v79 = v77(v76, v75, v78);
      v81 = v80;
      swift_unknownObjectRelease(v74);
      sub_49F1C((uint64_t)v134, (uint64_t)&v131);
      if (v79 / v81 >= 0.4)
      {
        v82 = v132;
        v83 = v133;
        sub_472D0(&v131, v132);
        v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 200))(v82, v83) ^ 1;
        goto LABEL_9;
      }
    }
    else
    {
LABEL_7:
      sub_49F1C((uint64_t)v134, (uint64_t)&v131);
    }
    LOBYTE(v42) = 0;
LABEL_9:
    sub_34488(&v131);
    sub_49F1C((uint64_t)v134, (uint64_t)&v131);
    v43 = v1;
    swift_unknownObjectRetain_n(v5, 2);
    v44 = v43;
    v45 = Logger.logObject.getter(v44);
    v48 = static os_log_type_t.debug.getter(v45, v46, v47);
    if (os_log_type_enabled(v45, v48))
    {
      v113 = v48;
      v49 = swift_slowAlloc(38, -1);
      *(_DWORD *)v49 = 67110400;
      v126 = v42 & 1;
      v50 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, v127, v49 + 4);
      *(_WORD *)(v49 + 8) = 1024;
      v51 = v8(ObjectType, v6, v50);
      swift_unknownObjectRelease(v5);
      v126 = v51 == 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, v127, v49 + 10);
      swift_unknownObjectRelease(v5);
      *(_WORD *)(v49 + 14) = 1024;
      v52 = *(_QWORD *)v3;
      swift_beginAccess(*(_QWORD *)v3 + 112, &v126, 0, 0);
      v53 = *(_QWORD *)(v52 + 112);
      v54 = *(_QWORD *)(v52 + 120);
      v55 = swift_getObjectType(v53);
      v56 = *(double (**)(uint64_t, uint64_t, __n128))(v54 + 80);
      v57 = swift_unknownObjectRetain(v53);
      v58 = v56(v55, v54, v57);
      v60 = v59;
      swift_unknownObjectRelease(v53);
      if (v58 >= v60)
      {

        v68 = 1;
      }
      else
      {
        v61 = *(_QWORD *)v3;
        swift_beginAccess(*(_QWORD *)v3 + 112, v119, 0, 0);
        v62 = *(_QWORD *)(v61 + 112);
        v63 = *(_QWORD *)(v61 + 120);
        v64 = swift_getObjectType(v62);
        v65 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v63 + 120);
        v66 = swift_unknownObjectRetain(v62);
        v67 = v65(v64, v63, v66);

        swift_unknownObjectRelease(v62);
        v68 = v67 < 2;
      }
      v124 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, &v125, v49 + 16);

      *(_WORD *)(v49 + 20) = 1024;
      v84 = *(_QWORD *)v3;
      swift_beginAccess(*(_QWORD *)v3 + 112, &v124, 0, 0);
      v85 = *(_QWORD *)(v84 + 112);
      v86 = *(_QWORD *)(v84 + 120);
      v87 = swift_getObjectType(v85);
      v88 = *(double (**)(uint64_t, uint64_t, __n128))(v86 + 80);
      v89 = swift_unknownObjectRetain(v85);
      v90 = v88(v87, v86, v89);
      v92 = v91;
      swift_unknownObjectRelease(v85);
      if (v90 >= v92)
      {
        v94 = *(_QWORD *)v3;
        swift_beginAccess(*(_QWORD *)v3 + 112, v123, 0, 0);
        v95 = *(_QWORD *)(v94 + 112);
        v96 = *(_QWORD *)(v94 + 120);
        v97 = swift_getObjectType(v95);
        v98 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v96 + 120);
        v99 = swift_unknownObjectRetain(v95);
        v100 = v98(v97, v96, v99);

        swift_unknownObjectRelease(v95);
        v93 = v100 != 1;
      }
      else
      {

        v93 = 1;
      }
      v121 = v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, &v122, v49 + 22);

      *(_WORD *)(v49 + 26) = 1024;
      v101 = *(_QWORD *)v3;
      swift_beginAccess(v101 + 112, &v121, 0, 0);
      v102 = *(_QWORD *)(v101 + 112);
      v103 = *(_QWORD *)(v101 + 120);
      v104 = swift_getObjectType(v102);
      v105 = *(double (**)(uint64_t, uint64_t, __n128))(v103 + 48);
      v106 = swift_unknownObjectRetain(v102);
      v107 = v105(v104, v103, v106);
      v109 = v108;

      swift_unknownObjectRelease(v102);
      v120 = v107 / v109 >= 0.4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v49 + 28);

      *(_WORD *)(v49 + 32) = 1024;
      v110 = v132;
      v111 = v133;
      sub_472D0(&v131, v132);
      LODWORD(v110) = ((*(uint64_t (**)(uint64_t, uint64_t))(v111 + 200))(v110, v111) & 1) == 0;
      sub_34488(&v131);
      v120 = v110;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v120, &v121, v49 + 34);
      _os_log_impl(&dword_0, v45, v113, "Can we snapshot? %{BOOL}d. All must be true: isPaged?%{BOOL}d, !isPortrait2UP? %{BOOL}d, !isLandscape1UP? %{BOOL}d, !isExtremeAspectRatio? %{BOOL}d, !isSample? %{BOOL}d", (uint8_t *)v49, 0x26u);
      swift_slowDealloc(v49, -1, -1);
      swift_unknownObjectRelease(v5);

    }
    else
    {
      sub_34488(&v131);

      swift_unknownObjectRelease_n(v5, 3);
    }
    sub_34488(v134);
    return v42 & 1;
  }
  v69 = sub_55650((uint64_t)&v131);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.error.getter(v70);
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v72 = 0;
    _os_log_impl(&dword_0, v70, v71, "Cannot snapshot without a bookEntity", v72, 2u);
    swift_slowDealloc(v72, -1, -1);
  }

  LOBYTE(v42) = 0;
  return v42 & 1;
}

_QWORD *sub_1AC140(uint64_t a1)
{
  int64_t v2;
  _QWORD *result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_F5114(0, v2, 0);
    result = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v6 = *v4;
      v4 += 3;
      v5 = v6;
      v9 = result;
      v8 = result[2];
      v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_F5114(v7 > 1, v8 + 1, 1);
        result = v9;
      }
      result[2] = v8 + 1;
      result[v8 + 4] = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1AC1FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t updated;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3C0770);
  sub_555F0(v0, (uint64_t)qword_3C0770);
  updated = type metadata accessor for BookThemeImportAndUpdateOperation(0);
  v1 = sub_319AC(&qword_3C09B0);
  v2 = String.init<A>(describing:)(&updated, v1);
  return Logger.init(subsystem:category:)(0xD000000000000019, 0x80000000002CBCD0, v2, v3, v4);
}

uint64_t sub_1AC294(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t result;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __n128 v39;
  void (*v40)(_BYTE *, uint64_t, __n128);
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __n128 v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  unsigned int v51;
  double v52;
  _BYTE v53[24];
  uint64_t v54;

  v51 = a3;
  v7 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v7);
  v9 = &v45[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v45[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __chkstk_darwin(v14);
  v17 = &v45[-v16];
  result = static Task<>.checkCancellation()(v15);
  if (!v4)
  {
    v49 = v13;
    v50 = v17;
    v48 = a2;
    v19 = *(void **)(v3 + 64);
    objc_msgSend(v19, "lock");
    v20 = v3 + OBJC_IVAR____TtC8BookEPUB33BookThemeImportAndUpdateOperation_startTime;
    swift_beginAccess(v20, v53, 0, 0);
    sub_B2DD0(v20, (uint64_t)v9);
    objc_msgSend(v19, "unlock");
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      return sub_B2E18((uint64_t)v9);
    }
    else
    {
      v21 = v10;
      v22 = v11;
      v23 = *(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32);
      v24 = v50;
      v25 = v23(v50, v9, v10);
      if (Date.timeIntervalSinceNow.getter(v25) <= -10.0)
      {
        if (qword_3B5900 != -1)
          swift_once(&qword_3B5900, sub_1AC1FC);
        v26 = type metadata accessor for Logger(0);
        sub_555F0(v26, (uint64_t)qword_3C0770);
        v27 = v49;
        v28 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 16))(v49, v24, v21);
        v29 = Logger.logObject.getter(v28);
        v30 = static os_log_type_t.error.getter(v29);
        v31 = v30;
        v32 = os_log_type_enabled(v29, v30);
        v33 = v51;
        if (v32)
        {
          v34 = swift_slowAlloc(22, -1);
          v47 = swift_slowAlloc(32, -1);
          v54 = v47;
          *(_DWORD *)v34 = 136315394;
          v46 = v31;
          v35 = StaticString.description.getter(a1, v48, v33);
          v37 = v36;
          v52 = COERCE_DOUBLE(sub_33524(v35, v36, &v54));
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v34 + 4);
          swift_bridgeObjectRelease(v37);
          *(_WORD *)(v34 + 12) = 2048;
          v52 = -Date.timeIntervalSinceNow.getter(v38);
          v24 = v50;
          v39 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, v53, v34 + 14);
          v40 = *(void (**)(_BYTE *, uint64_t, __n128))(v22 + 8);
          v40(v27, v21, v39);
          _os_log_impl(&dword_0, v29, (os_log_type_t)v46, "Detected time out in %s; elapsed time: %f",
            (uint8_t *)v34,
            0x16u);
          v41 = v47;
          swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v41, -1, -1);
          swift_slowDealloc(v34, -1, -1);
        }
        else
        {
          v40 = *(void (**)(_BYTE *, uint64_t, __n128))(v22 + 8);
          ((void (*)(_BYTE *, uint64_t))v40)(v27, v21);
        }

        v42 = type metadata accessor for CancellationError(0);
        v43 = sub_1B0908();
        swift_allocError(v42, v43, 0, 0);
        v44.n128_f64[0] = CancellationError.init()();
        swift_willThrow(v44);
        return ((uint64_t (*)(_BYTE *, uint64_t))v40)(v24, v21);
      }
      else
      {
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v22 + 8))(v24, v10);
      }
    }
  }
  return result;
}

_QWORD *BookThemeImportAndUpdateOperation.__allocating_init<A>(migrator:userDefaults:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  swift_allocObject(v4, *(unsigned int *)(v4 + 48));
  v9 = sub_1B0498(a1, a2, a3, a4);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  return v9;
}

_QWORD *BookThemeImportAndUpdateOperation.init<A>(migrator:userDefaults:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;

  v7 = sub_1B0498(a1, a2, a3, a4);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  return v7;
}

uint64_t sub_1AC714()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch(sub_1AC72C, 0, 0);
}

uint64_t sub_1AC72C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1AE014();
  v1 = (_QWORD *)swift_task_alloc(dword_3C0794);
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_1AC944;
  return sub_1AD018();
}

uint64_t sub_1AC944()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1AC9B0, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1AC9B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;

  v1 = *(_QWORD *)(v0 + 40);
  if (qword_3B5900 != -1)
    swift_once(&qword_3B5900, sub_1AC1FC);
  v2 = type metadata accessor for Logger(0);
  sub_555F0(v2, (uint64_t)qword_3C0770);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    swift_errorRetain(v1);
    v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4);
    *v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v4, v5, "Import failed, error: %@", v6, 0xCu);
    v9 = sub_319AC(&qword_3B8A70);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  swift_willThrow(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1ACB6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  Class isa;
  NSString v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  if (qword_3B5900 != -1)
    swift_once(&qword_3B5900, sub_1AC1FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_555F0(v4, (uint64_t)qword_3C0770);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v12 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v8 + 4);
    _os_log_impl(&dword_0, v6, v7, "Saving last-import version: %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = *(void **)(v2 + 56);
  isa = Int._bridgeToObjectiveC()().super.super.isa;
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setValue:forKey:", isa, v11);

}

void sub_1ACCC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64x2_t v11;
  int64x2_t *v12;
  unint64_t v13;
  int64x2_t v14;
  int8x16_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t *v18;
  int64_t v19;
  int64_t v20;
  _BYTE v21[104];

  v1 = sub_319AC(&qword_3BBE20);
  inited = swift_initStackObject(v1, v21);
  *(_OWORD *)(inited + 16) = xmmword_2E6940;
  v3 = swift_allocObject(&unk_386EA0, 32);
  *(_QWORD *)(v3 + 16) = &unk_3C0978;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(inited + 32) = 3;
  *(_QWORD *)(inited + 40) = &unk_3C0980;
  *(_QWORD *)(inited + 48) = v3;
  v4 = swift_allocObject(&unk_386EC8, 32);
  *(_QWORD *)(v4 + 16) = &unk_3C0988;
  *(_QWORD *)(v4 + 24) = v0;
  *(_QWORD *)(inited + 56) = 5;
  *(_QWORD *)(inited + 64) = &unk_3C0990;
  *(_QWORD *)(inited + 72) = v4;
  v5 = swift_allocObject(&unk_386EF0, 32);
  *(_QWORD *)(v5 + 16) = &unk_3C0998;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(inited + 80) = 6;
  *(_QWORD *)(inited + 88) = &unk_3C09A0;
  *(_QWORD *)(inited + 96) = v5;
  swift_retain_n(v0);
  v6 = sub_1AC140(inited);
  swift_bridgeObjectRelease(inited);
  v7 = v6[2];
  if (v7)
  {
    v8 = v6[4];
    v9 = v7 - 1;
    if (v7 != 1)
    {
      if (v7 < 5)
      {
        v10 = 1;
        goto LABEL_8;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFCLL | 1;
      v11 = vdupq_n_s64(v8);
      v12 = (int64x2_t *)(v6 + 7);
      v13 = v9 & 0xFFFFFFFFFFFFFFFCLL;
      v14 = v11;
      do
      {
        v11 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v11, v12[-1]), (int8x16_t)v11, (int8x16_t)v12[-1]);
        v14 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v14, *v12), (int8x16_t)v14, *(int8x16_t *)v12);
        v12 += 2;
        v13 -= 4;
      }
      while (v13);
      v15 = vbslq_s8((int8x16_t)vcgtq_s64(v11, v14), (int8x16_t)v11, (int8x16_t)v14);
      v16 = vextq_s8(v15, v15, 8uLL).u64[0];
      v8 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v15.i64[0], v16), *(int8x8_t *)v15.i8, (int8x8_t)v16);
      if (v9 != (v9 & 0xFFFFFFFFFFFFFFFCLL))
      {
LABEL_8:
        v17 = v7 - v10;
        v18 = &v6[v10 + 4];
        do
        {
          v20 = *v18++;
          v19 = v20;
          if (v8 <= v20)
            v8 = v19;
          --v17;
        }
        while (v17);
      }
    }
    swift_bridgeObjectRelease(v6);
    return;
  }
  swift_bridgeObjectRelease(v6);
  __break(1u);
}

uint64_t sub_1ACE8C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_6B4A4;
  return v5();
}

uint64_t sub_1ACEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[104];

  v1 = sub_319AC(&qword_3BBE20);
  inited = swift_initStackObject(v1, v12);
  *(_OWORD *)(inited + 16) = xmmword_2E6940;
  v3 = swift_allocObject(&unk_386E28, 32);
  *(_QWORD *)(v3 + 16) = &unk_3C0930;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(inited + 32) = 3;
  v4 = inited + 32;
  *(_QWORD *)(inited + 40) = &unk_3C0940;
  *(_QWORD *)(inited + 48) = v3;
  v5 = swift_allocObject(&unk_386E50, 32);
  *(_QWORD *)(v5 + 16) = &unk_3C0950;
  *(_QWORD *)(v5 + 24) = v0;
  *(_QWORD *)(inited + 56) = 5;
  *(_QWORD *)(inited + 64) = &unk_3C0958;
  *(_QWORD *)(inited + 72) = v5;
  v6 = swift_allocObject(&unk_386E78, 32);
  *(_QWORD *)(v6 + 16) = &unk_3C0968;
  *(_QWORD *)(v6 + 24) = v0;
  *(_QWORD *)(inited + 80) = 6;
  *(_QWORD *)(inited + 88) = &unk_3C0970;
  *(_QWORD *)(inited + 96) = v6;
  swift_retain_n(v0);
  sub_1B02D0(inited, v0);
  v8 = v7;
  swift_setDeallocating(inited);
  v9 = *(_QWORD *)(inited + 16);
  v10 = sub_319AC(&qword_3BBE28);
  swift_arrayDestroy(v4, v9, v10);
  return v8;
}

uint64_t sub_1AD018()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1[10] = v0;
  v2 = type metadata accessor for CancellationError(0);
  v1[11] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[12] = v3;
  v4 = (*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[13] = swift_task_alloc(v4);
  v1[14] = swift_task_alloc(v4);
  return swift_task_switch(sub_1AD088, 0, 0);
}

uint64_t sub_1AD088()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSString v9;
  unsigned __int8 v10;
  NSString v11;
  id v12;
  uint64_t v13;
  NSString v14;
  unsigned int v15;
  NSString v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  _QWORD *v27;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  NSString v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  int *v45;
  uint64_t (*v46)(void);
  uint64_t v47[2];

  v1 = *(void **)(*(_QWORD *)(v0 + 80) + 56);
  *(_QWORD *)(v0 + 120) = v1;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "integerForKey:", v2);

  if (qword_3B5900 != -1)
    swift_once(&qword_3B5900, sub_1AC1FC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_555F0(v4, (uint64_t)qword_3C0770);
  *(_QWORD *)(v0 + 128) = v5;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    *(_QWORD *)(v0 + 56) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v8 + 4);
    _os_log_impl(&dword_0, v6, v7, "Last imported version: %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v1, "BOOLForKey:", v9);

  if ((v10 & 1) != 0
    || (v11 = String._bridgeToObjectiveC()(),
        v12 = objc_msgSend(v1, "integerForKey:", v11),
        v11,
        sub_1ACCC8(),
        v13 < (uint64_t)v12))
  {
    v14 = String._bridgeToObjectiveC()();
    v15 = objc_msgSend(v1, "BOOLForKey:", v14);

    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v1, "integerForKey:", v16);

    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(38, -1);
      v44 = v17;
      v22 = swift_slowAlloc(64, -1);
      v47[0] = v22;
      *(_DWORD *)v21 = 136315906;
      *(_QWORD *)(v0 + 48) = sub_33524(0x657365522E494552, 0xEF73656D65685474, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v21 + 4);
      *(_WORD *)(v21 + 12) = 1024;
      *(_DWORD *)(v0 + 232) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 236, v21 + 14);
      *(_WORD *)(v21 + 18) = 2080;
      *(_QWORD *)(v0 + 64) = sub_33524(0xD000000000000036, 0x80000000002CFA70, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72, v21 + 20);
      *(_WORD *)(v21 + 28) = 2048;
      *(_QWORD *)(v0 + 72) = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v21 + 30);
      _os_log_impl(&dword_0, v19, v20, "Resetting all themes! %s: %{BOOL}d, %s: %ld", (uint8_t *)v21, 0x26u);
      swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }

    v23 = *(_QWORD **)(v0 + 80);
    v24 = v23[5];
    v25 = v23[6];
    sub_472D0(v23 + 2, v24);
    v26 = *(int **)(v25 + 8);
    v45 = (int *)((char *)v26 + *v26);
    v27 = (_QWORD *)swift_task_alloc(v26[1]);
    *(_QWORD *)(v0 + 136) = v27;
    *v27 = v0;
    v27[1] = sub_1AD6CC;
    return ((uint64_t (*)(void (*)(uint64_t, void *), _QWORD, uint64_t, uint64_t))v45)(sub_1AE270, 0, v24, v25);
  }
  else
  {
    v29 = (_QWORD *)sub_1ACEE0();
    *(_QWORD *)(v0 + 152) = v29;
    v30 = v29[2];
    *(_QWORD *)(v0 + 160) = v30;
    if (v30)
    {
      *(_QWORD *)(v0 + 168) = 0;
      v31 = v29[4];
      *(_QWORD *)(v0 + 176) = v31;
      v32 = (int *)v29[5];
      *(_QWORD *)(v0 + 184) = v29[6];
      swift_retain();
      sub_1AC294((uint64_t)"runInternal()", 13, 2u);
      v35 = *(void **)(v0 + 120);
      v36 = String._bridgeToObjectiveC()();
      v37 = objc_msgSend(v35, "integerForKey:", v36);
      *(_QWORD *)(v0 + 192) = v37;

      v39 = Logger.logObject.getter(v38);
      v40 = static os_log_type_t.default.getter(v39);
      if (os_log_type_enabled(v39, v40))
      {
        v42 = swift_slowAlloc(22, -1);
        *(_DWORD *)v42 = 134218240;
        *(_QWORD *)(v42 + 4) = v37;
        *(_WORD *)(v42 + 12) = 2048;
        *(_QWORD *)(v42 + 14) = v31;
        _os_log_impl(&dword_0, v39, v40, "Performing migration from %ld to %ld", (uint8_t *)v42, 0x16u);
        swift_slowDealloc(v42, -1, -1);
      }

      v46 = (uint64_t (*)(void))((char *)v32 + *v32);
      v43 = (_QWORD *)swift_task_alloc(v32[1]);
      *(_QWORD *)(v0 + 200) = v43;
      *v43 = v0;
      v43[1] = sub_1AD948;
      return v46();
    }
    else
    {
      v33 = *(_QWORD *)(v0 + 104);
      v34 = *(_QWORD *)(v0 + 112);
      swift_bridgeObjectRelease(v29);
      swift_task_dealloc(v34);
      swift_task_dealloc(v33);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_1AD6CC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*v1 + 136);
  v3 = *v1;
  *(_QWORD *)(v3 + 144) = v0;
  swift_task_dealloc(v2);
  if (!v0)
    return swift_task_switch(sub_1AD748, 0, 0);
  v4 = *(_QWORD *)(v3 + 104);
  swift_task_dealloc(*(_QWORD *)(v3 + 112));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1AD748()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  void *v12;
  NSString v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(void);

  sub_1ACB6C(0);
  v1 = v0[18];
  v2 = (_QWORD *)sub_1ACEE0();
  v0[19] = v2;
  v3 = v2[2];
  v0[20] = v3;
  if (!v3)
  {
    v9 = v0[13];
    v10 = v0[14];
    swift_bridgeObjectRelease(v2);
    swift_task_dealloc(v10);
    swift_task_dealloc(v9);
    v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  v0[21] = 0;
  v4 = v2[4];
  v0[22] = v4;
  v5 = (int *)v2[5];
  v0[23] = v2[6];
  swift_retain();
  sub_1AC294((uint64_t)"runInternal()", 13, 2u);
  if (v1)
  {
    v6 = v0[19];
    swift_release();
    swift_bridgeObjectRelease(v6);
    v7 = v0[13];
    swift_task_dealloc(v0[14]);
    swift_task_dealloc(v7);
    v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  v12 = (void *)v0[15];
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "integerForKey:", v13);
  v0[24] = v14;

  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    *(_DWORD *)v18 = 134218240;
    *(_QWORD *)(v18 + 4) = v14;
    *(_WORD *)(v18 + 12) = 2048;
    *(_QWORD *)(v18 + 14) = v4;
    _os_log_impl(&dword_0, v16, v17, "Performing migration from %ld to %ld", (uint8_t *)v18, 0x16u);
    swift_slowDealloc(v18, -1, -1);
  }

  v20 = (uint64_t (*)(void))((char *)v5 + *v5);
  v19 = (_QWORD *)swift_task_alloc(v5[1]);
  v0[25] = v19;
  *v19 = v0;
  v19[1] = sub_1AD948;
  return v20();
}

uint64_t sub_1AD948()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 200);
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v2 + 152));
    swift_release();
    v4 = sub_1ADBE0;
  }
  else
  {
    swift_release();
    v4 = sub_1AD9D0;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1AD9D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void *v14;
  NSString v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(void);

  v1 = v0[20];
  v2 = v0[21] + 1;
  sub_1ACB6C(v0[22]);
  if (v2 == v1)
  {
    v3 = v0[13];
    v4 = v0[14];
    swift_bridgeObjectRelease(v0[19]);
    swift_task_dealloc(v4);
    swift_task_dealloc(v3);
    v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  v6 = v0[26];
  v7 = v0[21] + 1;
  v0[21] = v7;
  v8 = (_QWORD *)(v0[19] + 24 * v7);
  v9 = v8[4];
  v0[22] = v9;
  v10 = (int *)v8[5];
  v0[23] = v8[6];
  swift_retain();
  sub_1AC294((uint64_t)"runInternal()", 13, 2u);
  if (v6)
  {
    v11 = v0[19];
    swift_release();
    swift_bridgeObjectRelease(v11);
    v12 = v0[13];
    swift_task_dealloc(v0[14]);
    swift_task_dealloc(v12);
    v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  v14 = (void *)v0[15];
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "integerForKey:", v15);
  v0[24] = v16;

  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    *(_DWORD *)v20 = 134218240;
    *(_QWORD *)(v20 + 4) = v16;
    *(_WORD *)(v20 + 12) = 2048;
    *(_QWORD *)(v20 + 14) = v9;
    _os_log_impl(&dword_0, v18, v19, "Performing migration from %ld to %ld", (uint8_t *)v20, 0x16u);
    swift_slowDealloc(v20, -1, -1);
  }

  v22 = (uint64_t (*)(void))((char *)v10 + *v10);
  v21 = (_QWORD *)swift_task_alloc(v10[1]);
  v0[25] = v21;
  *v21 = v0;
  v21[1] = sub_1AD948;
  return v22();
}

uint64_t sub_1ADBE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  _QWORD *v31;
  uint64_t v32;
  int *v33;

  v1 = *(_QWORD *)(v0 + 208);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  swift_errorRetain(v1);
  v4 = sub_319AC(&qword_3B82B8);
  if (swift_dynamicCast(v2, v0 + 16, v4, v3, 0))
  {
    v5 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    v9 = swift_errorRelease(*(_QWORD *)(v0 + 208));
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 32))(v5, v6, v7, v9);
    v10 = sub_1B0908();
    swift_allocError(v7, v10, 0, 0);
    v12.n128_f64[0] = (*(double (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v5, v7);
    swift_willThrow(v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
    swift_errorRelease(*(_QWORD *)(v0 + 16));
    v14 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 112));
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 16));
    sub_1AC294((uint64_t)"runInternal()", 13, 2u);
    v13 = *(_QWORD *)(v0 + 208);
    swift_errorRetain(v13);
    v16 = swift_errorRetain(v13);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 208);
    if (v19)
    {
      v21 = *(_QWORD *)(v0 + 192);
      v32 = *(_QWORD *)(v0 + 176);
      v22 = swift_slowAlloc(32, -1);
      v23 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v22 = 134218498;
      *(_QWORD *)(v0 + 24) = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v22 + 4);
      *(_WORD *)(v22 + 12) = 2048;
      *(_QWORD *)(v0 + 32) = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v22 + 14);
      *(_WORD *)(v22 + 22) = 2112;
      swift_errorRetain(v20);
      v24 = _swift_stdlib_bridgeErrorToNSError(v20);
      *(_QWORD *)(v0 + 40) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v22 + 24);
      *v23 = v24;
      swift_errorRelease(v20);
      swift_errorRelease(v20);
      _os_log_impl(&dword_0, v17, v18, "Migration from %ld to %ld failed: %@. Attempting to recover by deleting all themes.", (uint8_t *)v22, 0x20u);
      v25 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v23, 1, v25);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      swift_errorRelease(*(_QWORD *)(v0 + 208));
      swift_errorRelease(v20);
    }
    v26 = *(_QWORD **)(v0 + 80);

    v27 = v26 + 2;
    v28 = v26[5];
    v29 = v26[6];
    sub_472D0(v27, v28);
    v30 = *(int **)(v29 + 8);
    v33 = (int *)((char *)v30 + *v30);
    v31 = (_QWORD *)swift_task_alloc(v30[1]);
    *(_QWORD *)(v0 + 216) = v31;
    *v31 = v0;
    v31[1] = sub_1ADF20;
    return ((uint64_t (*)(void (*)(uint64_t, void *), _QWORD, uint64_t, uint64_t))v33)(sub_1AE270, 0, v28, v29);
  }
}

uint64_t sub_1ADF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_1ADFD0;
  else
    v3 = sub_1ADF84;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_1ADF84()
{
  uint64_t v0;
  uint64_t v1;

  swift_willThrow();
  v1 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ADFD0()
{
  uint64_t v0;
  uint64_t v1;

  swift_errorRelease(*(_QWORD *)(v0 + 208));
  v1 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1AE014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  __n128 v22;
  _BYTE v23[24];
  _BYTE v24[24];

  v1 = sub_319AC(&qword_3BFBB0);
  __chkstk_darwin(v1);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v5 = __chkstk_darwin(v4).n128_u64[0];
  v7 = &v23[-v6];
  v8 = *(void **)(v0 + 64);
  objc_msgSend(v8, "lock", v5);
  v9 = v0 + OBJC_IVAR____TtC8BookEPUB33BookThemeImportAndUpdateOperation_startTime;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB33BookThemeImportAndUpdateOperation_startTime, v24, 0, 0);
  sub_B2DD0(v9, (uint64_t)v7);
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10);
  v13 = sub_B2E18((uint64_t)v7);
  if (v12 == 1)
  {
    Date.init()(v13);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v3, 0, 1, v10);
    swift_beginAccess(v9, v23, 33, 0);
    sub_1A1250((uint64_t)v3, v9);
    swift_endAccess(v23);
    return objc_msgSend(v8, "unlock");
  }
  else
  {
    objc_msgSend(v8, "unlock");
    if (qword_3B5900 != -1)
      swift_once(&qword_3B5900, sub_1AC1FC);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_555F0(v15, (uint64_t)qword_3C0770);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.error.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_0, v17, v18, "Import failed, an import is already in progress", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    v20 = type metadata accessor for CancellationError(0);
    v21 = sub_1B0908();
    swift_allocError(v20, v21, 0, 0);
    v22.n128_f64[0] = CancellationError.init()();
    return (id)swift_willThrow(v22);
  }
}

void sub_1AE270(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v2 = a1;
  if (!((unint64_t)a1 >> 62))
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(a1);
    if (v3)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (a1 < 0)
    v20 = a1;
  else
    v20 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v3 = _CocoaArrayWrapper.endIndex.getter(v20);
  if (!v3)
    goto LABEL_18;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
    v21 = v2;
    do
    {
      if (v5)
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v6 = *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      if (qword_3B5900 != -1)
        swift_once(&qword_3B5900, sub_1AC1FC);
      v8 = type metadata accessor for Logger(0);
      sub_555F0(v8, (uint64_t)qword_3C0770);
      v9 = v7;
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter(v10);
      if (os_log_type_enabled(v10, v11))
      {
        v22 = swift_slowAlloc(12, -1);
        v23 = swift_slowAlloc(32, -1);
        v25 = v23;
        *(_DWORD *)v22 = 136315138;
        v12 = objc_msgSend(v9, "identifier");
        v13 = v5;
        v14 = v3;
        v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v17 = v16;

        v18 = v15;
        v3 = v14;
        v5 = v13;
        *(_QWORD *)(v22 + 4) = sub_33524(v18, v17, &v25);
        v19 = v17;
        v2 = v21;
        swift_bridgeObjectRelease(v19);

        _os_log_impl(&dword_0, v10, v11, "Deleting theme %s", (uint8_t *)v22, 0xCu);
        swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v22, -1, -1);
      }
      else
      {

      }
      ++v4;
      objc_msgSend(a2, "deleteObject:", v9);

    }
    while (v3 != v4);
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_1AE4FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_3C07E4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_6B4A4;
  v3[24] = a1;
  return swift_task_switch(sub_1AE634, 0, 0);
}

uint64_t sub_1AE55C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_3C07EC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_3F0C0;
  v3[2] = a1;
  return swift_task_switch(sub_1AF528, 0, 0);
}

uint64_t sub_1AE5BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_3C07F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_6B4A4;
  v3[2] = a1;
  return swift_task_switch(sub_1AFC80, 0, 0);
}

uint64_t sub_1AE61C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 192) = v0;
  return swift_task_switch(sub_1AE634, 0, 0);
}

uint64_t sub_1AE634()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t inited;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(void (*)(unint64_t, uint64_t), uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[24];
  v2 = sub_319AC(&qword_3C0920);
  inited = swift_initStackObject(v2, v0 + 2);
  *(_OWORD *)(inited + 16) = xmmword_2F13B0;
  *(_QWORD *)(inited + 32) = 0x6F5F31656D656874;
  *(_QWORD *)(inited + 40) = 0xEF65646972726576;
  *(_QWORD *)(inited + 48) = sub_388B0((uint64_t)&off_379C70);
  *(_QWORD *)(inited + 56) = 0x6F5F32656D656874;
  *(_QWORD *)(inited + 64) = 0xEF65646972726576;
  *(_QWORD *)(inited + 72) = sub_388B0((uint64_t)&off_379CB0);
  *(_QWORD *)(inited + 80) = 0x6F5F33656D656874;
  *(_QWORD *)(inited + 88) = 0xEF65646972726576;
  *(_QWORD *)(inited + 96) = sub_388B0((uint64_t)&off_379CF0);
  *(_QWORD *)(inited + 104) = 0x6F5F34656D656874;
  *(_QWORD *)(inited + 112) = 0xEF65646972726576;
  *(_QWORD *)(inited + 120) = sub_388B0((uint64_t)&off_379D30);
  *(_QWORD *)(inited + 128) = 0x6F5F35656D656874;
  *(_QWORD *)(inited + 136) = 0xEF65646972726576;
  *(_QWORD *)(inited + 144) = sub_388B0((uint64_t)&off_379D70);
  *(_QWORD *)(inited + 152) = 0x6F5F36656D656874;
  *(_QWORD *)(inited + 160) = 0xEF65646972726576;
  *(_QWORD *)(inited + 168) = sub_388B0((uint64_t)&off_379DB0);
  v4 = sub_39000(inited);
  v5 = v1 + 2;
  v6 = v1[5];
  v7 = v1[6];
  sub_472D0(v5, v6);
  v8 = swift_allocObject(&unk_386E00, 24);
  v0[25] = v8;
  *(_QWORD *)(v8 + 16) = v4;
  v9 = *(int **)(v7 + 8);
  v12 = (uint64_t (*)(void (*)(unint64_t, uint64_t), uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  v0[26] = v10;
  *v10 = v0;
  v10[1] = sub_1AE808;
  return v12(sub_1B073C, v8, v6, v7);
}

uint64_t sub_1AE808()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v5;

  v2 = *(_QWORD *)(*v1 + 208);
  v3 = *v1;
  *(_QWORD *)(v3 + 216) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1AE87C, 0, 0);
  v5 = swift_release();
  return (*(uint64_t (**)(__n128))(v3 + 8))(v5);
}

uint64_t sub_1AE87C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 200));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1AE8B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  BOOL v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *isa;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int64_t v38;
  char v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  BOOL v53;
  BOOL v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int64_t v99;
  id v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  _QWORD *v107;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_110;
  v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  while (v4)
  {
    v105 = 0;
    v96 = v3 & 0xC000000000000001;
    v91 = v3 + 32;
    v92 = v3 & 0xFFFFFFFFFFFFFF8;
    v94 = v4;
    v95 = v3;
    while (1)
    {
      if (v96)
      {
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v105, v3);
      }
      else
      {
        if (v105 >= *(_QWORD *)(v92 + 16))
          goto LABEL_107;
        v5 = *(id *)(v91 + 8 * v105);
      }
      v6 = __OFADD__(v105++, 1);
      if (v6)
        break;
      v100 = v5;
      v7 = objc_msgSend(v5, "identifier");
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v10 = v9;

      v11._countAndFlagsBits = 0x6469727265766F5FLL;
      v11._object = (void *)0xE900000000000065;
      if (!String.hasSuffix(_:)(v11))
      {
        if (qword_3B5900 != -1)
          swift_once(&qword_3B5900, sub_1AC1FC);
        v21 = type metadata accessor for Logger(0);
        sub_555F0(v21, (uint64_t)qword_3C0770);
        swift_bridgeObjectRetain(v10);
        isa = Logger.logObject.getter(v22);
        v24 = static os_log_type_t.default.getter(isa);
        if (os_log_type_enabled(isa, v24))
        {
          v25 = swift_slowAlloc(12, -1);
          v26 = swift_slowAlloc(32, -1);
          v107 = (_QWORD *)v26;
          *(_DWORD *)v25 = 136315138;
          swift_bridgeObjectRetain(v10);
          *(_QWORD *)(v25 + 4) = sub_33524(v8, v10, (uint64_t *)&v107);
          swift_bridgeObjectRelease_n(v10, 3);
          _os_log_impl(&dword_0, isa, v24, "Skipping non-override theme '%s'", (uint8_t *)v25, 0xCu);
          v27 = (char *)&type metadata for Any + 8;
          v28 = v26;
          goto LABEL_28;
        }

        swift_bridgeObjectRelease_n(v10, 2);
LABEL_5:

        goto LABEL_6;
      }
      if (!*(_QWORD *)(a3 + 16))
        goto LABEL_24;
      swift_bridgeObjectRetain(v10);
      v12 = sub_3B8A0(v8, v10);
      if ((v13 & 1) == 0)
      {
        swift_bridgeObjectRelease(v10);
LABEL_24:
        if (qword_3B5900 != -1)
          swift_once(&qword_3B5900, sub_1AC1FC);
        v29 = type metadata accessor for Logger(0);
        sub_555F0(v29, (uint64_t)qword_3C0770);
        swift_bridgeObjectRetain(v10);
        isa = Logger.logObject.getter(v30);
        v31 = static os_log_type_t.error.getter(isa);
        if (os_log_type_enabled(isa, v31))
        {
          v25 = swift_slowAlloc(12, -1);
          v26 = swift_slowAlloc(32, -1);
          v107 = (_QWORD *)v26;
          *(_DWORD *)v25 = 136315138;
          swift_bridgeObjectRetain(v10);
          *(_QWORD *)(v25 + 4) = sub_33524(v8, v10, (uint64_t *)&v107);
          swift_bridgeObjectRelease_n(v10, 3);
          _os_log_impl(&dword_0, isa, v31, "Skipping invalid theme with unrecognized identifier: %s", (uint8_t *)v25, 0xCu);
          v28 = v26;
          v27 = (char *)&type metadata for Any + 8;
LABEL_28:
          swift_arrayDestroy(v28, 1, v27);
          swift_slowDealloc(v26, -1, -1);
          swift_slowDealloc(v25, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n(v10, 2);
        }

        goto LABEL_5;
      }
      v14 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12);
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v10);
      if (qword_3B5900 != -1)
        swift_once(&qword_3B5900, sub_1AC1FC);
      v15 = type metadata accessor for Logger(0);
      sub_555F0(v15, (uint64_t)qword_3C0770);
      swift_bridgeObjectRetain(v10);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.default.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc(12, -1);
        v20 = swift_slowAlloc(32, -1);
        v107 = (_QWORD *)v20;
        *(_DWORD *)v19 = 136315138;
        swift_bridgeObjectRetain(v10);
        *(_QWORD *)(v19 + 4) = sub_33524(v8, v10, (uint64_t *)&v107);
        swift_bridgeObjectRelease_n(v10, 3);
        _os_log_impl(&dword_0, v17, v18, "Migrating theme %s to V3", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v10, 2);
      }

      v32 = objc_msgSend(v100, "fontsByLanguage");
      if (v32)
      {
        v3 = (uint64_t)v32;
        v33 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v32, &type metadata for String, &type metadata for String, &protocol witness table for String);

        v103 = v33;
        if (*(_QWORD *)(v33 + 16))
        {
          v34 = (_QWORD *)v33;
          v98 = v33 + 64;
          v35 = 1 << *(_BYTE *)(v33 + 32);
          if (v35 < 64)
            v36 = ~(-1 << v35);
          else
            v36 = -1;
          v37 = v36 & *(_QWORD *)(v33 + 64);
          v99 = (unint64_t)(v35 + 63) >> 6;
          swift_bridgeObjectRetain(v33);
          v38 = 0;
          v97 = v14;
          while (1)
          {
            do
            {
LABEL_41:
              if (v37)
              {
                v41 = __clz(__rbit64(v37));
                v37 &= v37 - 1;
                v42 = v41 | (v38 << 6);
              }
              else
              {
                v43 = v38 + 1;
                if (__OFADD__(v38, 1))
                {
                  __break(1u);
                  goto LABEL_106;
                }
                if (v43 >= v99)
                  goto LABEL_101;
                v44 = *(_QWORD *)(v98 + 8 * v43);
                ++v38;
                if (!v44)
                {
                  v38 = v43 + 1;
                  if (v43 + 1 >= v99)
                    goto LABEL_101;
                  v44 = *(_QWORD *)(v98 + 8 * v38);
                  if (!v44)
                  {
                    v38 = v43 + 2;
                    if (v43 + 2 >= v99)
                      goto LABEL_101;
                    v44 = *(_QWORD *)(v98 + 8 * v38);
                    if (!v44)
                    {
                      v45 = v43 + 3;
                      if (v45 >= v99)
                      {
LABEL_101:
                        swift_release();
                        swift_bridgeObjectRelease(v14);
                        isa = Dictionary._bridgeToObjectiveC()().super.isa;
                        objc_msgSend(v100, "setFontsByLanguage:", isa, swift_bridgeObjectRelease(v34).n128_f64[0]);

                        goto LABEL_5;
                      }
                      v44 = *(_QWORD *)(v98 + 8 * v45);
                      if (!v44)
                      {
                        while (1)
                        {
                          v38 = v45 + 1;
                          if (__OFADD__(v45, 1))
                            goto LABEL_108;
                          if (v38 >= v99)
                            goto LABEL_101;
                          v44 = *(_QWORD *)(v98 + 8 * v38);
                          ++v45;
                          if (v44)
                            goto LABEL_56;
                        }
                      }
                      v38 = v45;
                    }
                  }
                }
LABEL_56:
                v37 = (v44 - 1) & v44;
                v42 = __clz(__rbit64(v44)) + (v38 << 6);
              }
              v46 = 16 * v42;
              v47 = (uint64_t *)(*(_QWORD *)(v103 + 48) + v46);
              v48 = *v47;
              v49 = v47[1];
              v50 = (uint64_t *)(*(_QWORD *)(v103 + 56) + v46);
              v51 = *v50;
              v3 = v50[1];
              v52 = *v50 == 0x206F63696C627550 && v3 == 0xEC00000074786554;
              if (v52
                || (_stringCompareWithSmolCheck(_:_:expecting:)(0x206F63696C627550, 0xEC00000074786554, v51, v3, 0) & 1) != 0)
              {
                break;
              }
              v53 = v51 == 0x5420616C656E6143 && v3 == 0xEB00000000747865;
              if (v53
                || (_stringCompareWithSmolCheck(_:_:expecting:)(0x5420616C656E6143, 0xEB00000000747865, v51, v3, 0) & 1) != 0)
              {
                break;
              }
              v54 = v51 == 0x20616D69786F7250 && v3 == 0xEC00000061766F4ELL;
            }
            while (!v54
                 && (_stringCompareWithSmolCheck(_:_:expecting:)(0x20616D69786F7250, 0xEC00000061766F4ELL, v51, v3, 0) & 1) == 0);
            v55 = *(_QWORD *)(v14 + 16);
            swift_bridgeObjectRetain(v49);
            if (v55)
            {
              swift_bridgeObjectRetain(v49);
              v56 = sub_3B8A0(v48, v49);
              if ((v57 & 1) != 0)
              {
                v58 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 16 * v56);
                v59 = v58[1];
                v104 = *v58;
                swift_bridgeObjectRetain(v59);
              }
              else
              {
                v104 = 0;
                v59 = 0;
              }
              v60 = v14;
              swift_bridgeObjectRelease(v49);
            }
            else
            {
              v60 = v14;
              v104 = 0;
              v59 = 0;
            }
            swift_bridgeObjectRetain_n(v59, 2);
            v61 = swift_bridgeObjectRetain_n(v49, 2);
            v62 = Logger.logObject.getter(v61);
            v63 = static os_log_type_t.default.getter(v62);
            v106 = v48;
            if (os_log_type_enabled(v62, v63))
            {
              v101 = v37;
              v64 = swift_slowAlloc(22, -1);
              v65 = v48;
              v66 = swift_slowAlloc(64, -1);
              v107 = (_QWORD *)v66;
              *(_DWORD *)v64 = 136315394;
              swift_bridgeObjectRetain(v49);
              *(_QWORD *)(v64 + 4) = sub_33524(v65, v49, (uint64_t *)&v107);
              swift_bridgeObjectRelease_n(v49, 3);
              *(_WORD *)(v64 + 12) = 2080;
              if (v59)
                v67 = v104;
              else
                v67 = 7104878;
              v68 = v38;
              v69 = v34;
              if (v59)
                v70 = v59;
              else
                v70 = 0xE300000000000000;
              swift_bridgeObjectRetain(v59);
              *(_QWORD *)(v64 + 14) = sub_33524(v67, v70, (uint64_t *)&v107);
              v71 = v70;
              v34 = v69;
              v38 = v68;
              swift_bridgeObjectRelease(v71);
              swift_bridgeObjectRelease_n(v59, 2);
              _os_log_impl(&dword_0, v62, v63, "Resetting font for language '%s' to default (%s)", (uint8_t *)v64, 0x16u);
              swift_arrayDestroy(v66, 2, (char *)&type metadata for Any + 8);
              v14 = v97;
              swift_slowDealloc(v66, -1, -1);
              v72 = v64;
              v37 = v101;
              swift_slowDealloc(v72, -1, -1);

              if (v59)
              {
LABEL_86:
                v3 = v37;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
                v107 = v34;
                v102 = v49;
                v75 = sub_3B8A0(v106, v49);
                v76 = v34[2];
                v77 = (v74 & 1) == 0;
                v78 = v76 + v77;
                if (__OFADD__(v76, v77))
                  goto LABEL_109;
                v79 = v74;
                if (v34[3] >= v78)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                  {
                    v37 = v3;
                    if ((v74 & 1) == 0)
                      goto LABEL_90;
                  }
                  else
                  {
                    sub_F37EC();
                    v34 = v107;
                    v37 = v3;
                    if ((v79 & 1) == 0)
                      goto LABEL_90;
                  }
                }
                else
                {
                  sub_EFEEC(v78, isUniquelyReferenced_nonNull_native);
                  v34 = v107;
                  v80 = sub_3B8A0(v106, v102);
                  if ((v79 & 1) != (v81 & 1))
                    goto LABEL_116;
                  v75 = v80;
                  v37 = v3;
                  if ((v79 & 1) == 0)
                  {
LABEL_90:
                    v34[(v75 >> 6) + 8] |= 1 << v75;
                    v82 = (uint64_t *)(v34[6] + 16 * v75);
                    v3 = v102;
                    *v82 = v106;
                    v82[1] = v102;
                    v83 = (uint64_t *)(v34[7] + 16 * v75);
                    *v83 = v104;
                    v83[1] = v59;
                    v84 = v34[2];
                    v6 = __OFADD__(v84, 1);
                    v85 = v84 + 1;
                    if (v6)
                    {
                      __break(1u);
LABEL_116:
                      KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
                      __break(1u);
                      return;
                    }
                    v34[2] = v85;
                    swift_bridgeObjectRetain(v102);
                    goto LABEL_98;
                  }
                }
                v88 = (uint64_t *)(v34[7] + 16 * v75);
                swift_bridgeObjectRelease(v88[1]);
                *v88 = v104;
                v88[1] = v59;
                v3 = v102;
LABEL_98:
                swift_bridgeObjectRelease(0x8000000000000000);
                swift_bridgeObjectRelease(v3);
                v14 = v97;
                goto LABEL_41;
              }
            }
            else
            {
              swift_bridgeObjectRelease_n(v49, 2);
              swift_bridgeObjectRelease_n(v59, 2);

              v14 = v60;
              if (v59)
                goto LABEL_86;
            }
            swift_bridgeObjectRetain(v34);
            v3 = sub_3B8A0(v106, v49);
            v40 = v39;
            swift_bridgeObjectRelease(v34);
            if ((v40 & 1) != 0)
            {
              v86 = swift_isUniquelyReferenced_nonNull_native(v34);
              v107 = v34;
              if ((v86 & 1) == 0)
              {
                sub_F37EC();
                v34 = v107;
              }
              swift_bridgeObjectRelease(*(_QWORD *)(v34[6] + 16 * v3 + 8));
              v87 = *(_QWORD *)(v34[7] + 16 * v3 + 8);
              sub_188CF8(v3, (uint64_t)v34);
              swift_bridgeObjectRelease(0x8000000000000000);
              swift_bridgeObjectRelease(v49);
              swift_bridgeObjectRelease(v87);
            }
            else
            {
              swift_bridgeObjectRelease(v49);
            }
          }
        }

        swift_bridgeObjectRelease(v14);
        v89 = v33;
      }
      else
      {

        v89 = v14;
      }
      swift_bridgeObjectRelease(v89);
LABEL_6:
      v3 = v95;
      if (v105 == v94)
        goto LABEL_114;
    }
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    if (v3 < 0)
      v90 = v3;
    else
      v90 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v90);
  }
LABEL_114:
  swift_bridgeObjectRelease(v3);
}

uint64_t sub_1AF510()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_1AF528, 0, 0);
}

uint64_t sub_1AF528()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  Swift::Int v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  v2 = sub_388B0((uint64_t)&off_379DF0);
  v3 = sub_182D64((uint64_t)&off_379ED0);
  swift_arrayDestroy(&unk_379EF0, 6, &type metadata for String);
  v4 = v1 + 2;
  v5 = v1[5];
  v6 = v1[6];
  sub_472D0(v4, v5);
  v7 = swift_allocObject(&unk_386DD8, 32);
  v0[3] = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v3;
  v8 = *(int **)(v6 + 8);
  v11 = (uint64_t (*)(void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc(v8[1]);
  v0[4] = v9;
  *v9 = v0;
  v9[1] = sub_1AF61C;
  return v11(sub_1B0724, v7, v5, v6);
}

uint64_t sub_1AF61C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v5;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1AF690, 0, 0);
  v5 = swift_release();
  return (*(uint64_t (**)(__n128))(v3 + 8))(v5);
}

uint64_t sub_1AF690()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1AF6C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v6 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v41 = a1;
    else
      v41 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v41);
    if (v7)
      goto LABEL_3;
LABEL_34:
    swift_bridgeObjectRelease(v6);
    return;
  }
  v7 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  if (!v7)
    goto LABEL_34;
LABEL_3:
  if (v7 >= 1)
  {
    v8 = 0;
    v48 = v6 & 0xC000000000000001;
    v44 = a3;
    v45 = v6;
    v47 = v7;
    v42 = a4;
    while (1)
    {
      if (v48)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v6);
      else
        v9 = *(id *)(v6 + 8 * v8 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, "identifier");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      if (*(_QWORD *)(a3 + 16))
      {
        swift_bridgeObjectRetain(v14);
        v15 = sub_3B8A0(v12, v14);
        if ((v16 & 1) != 0)
        {
          v17 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v15);
          v18 = v17[1];
          v43 = *v17;
          swift_bridgeObjectRetain(v18);
          swift_bridgeObjectRelease(v14);
          if (qword_3B5900 != -1)
            swift_once(&qword_3B5900, sub_1AC1FC);
          v19 = type metadata accessor for Logger(0);
          sub_555F0(v19, (uint64_t)qword_3C0770);
          swift_bridgeObjectRetain_n(v18, 2);
          swift_bridgeObjectRetain(v14);
          v21 = Logger.logObject.getter(v20);
          v22 = static os_log_type_t.default.getter(v21);
          if (os_log_type_enabled(v21, v22))
          {
            v23 = swift_slowAlloc(22, -1);
            v24 = swift_slowAlloc(64, -1);
            v49 = v24;
            *(_DWORD *)v23 = 136315394;
            swift_bridgeObjectRetain(v14);
            *(_QWORD *)(v23 + 4) = sub_33524(v12, v14, &v49);
            swift_bridgeObjectRelease_n(v14, 3);
            *(_WORD *)(v23 + 12) = 2080;
            swift_bridgeObjectRetain(v18);
            *(_QWORD *)(v23 + 14) = sub_33524(v43, v18, &v49);
            swift_bridgeObjectRelease_n(v18, 3);
            _os_log_impl(&dword_0, v21, v22, "Migrating override theme %s identifier to %s", (uint8_t *)v23, 0x16u);
            swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
            v25 = v24;
            a4 = v42;
            swift_slowDealloc(v25, -1, -1);
            v26 = v23;
            v7 = v47;
            swift_slowDealloc(v26, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v14, 2);
            swift_bridgeObjectRelease_n(v18, 2);
          }

          v6 = v45;
          v40 = String._bridgeToObjectiveC()();
          objc_msgSend(v10, "setIdentifier:", v40, swift_bridgeObjectRelease(v18).n128_f64[0]);

          a3 = v44;
          goto LABEL_7;
        }
        swift_bridgeObjectRelease(v14);
      }
      if ((sub_1B2050(v12, v14, a4) & 1) != 0)
      {
        if (qword_3B5900 != -1)
          swift_once(&qword_3B5900, sub_1AC1FC);
        v27 = type metadata accessor for Logger(0);
        sub_555F0(v27, (uint64_t)qword_3C0770);
        swift_bridgeObjectRetain(v14);
        v29 = Logger.logObject.getter(v28);
        v30 = static os_log_type_t.default.getter(v29);
        if (os_log_type_enabled(v29, v30))
        {
          v31 = swift_slowAlloc(12, -1);
          v32 = swift_slowAlloc(32, -1);
          v49 = v32;
          *(_DWORD *)v31 = 136315138;
          swift_bridgeObjectRetain(v14);
          *(_QWORD *)(v31 + 4) = sub_33524(v12, v14, &v49);
          swift_bridgeObjectRelease_n(v14, 3);
          _os_log_impl(&dword_0, v29, v30, "Deleting parent theme %s", (uint8_t *)v31, 0xCu);
          v33 = v32;
          v34 = (char *)&type metadata for Any + 8;
LABEL_27:
          swift_arrayDestroy(v33, 1, v34);
          v38 = v32;
          a3 = v44;
          swift_slowDealloc(v38, -1, -1);
          v39 = v31;
          v6 = v45;
          swift_slowDealloc(v39, -1, -1);
          goto LABEL_6;
        }
      }
      else
      {
        if (qword_3B5900 != -1)
          swift_once(&qword_3B5900, sub_1AC1FC);
        v35 = type metadata accessor for Logger(0);
        sub_555F0(v35, (uint64_t)qword_3C0770);
        swift_bridgeObjectRetain(v14);
        v29 = Logger.logObject.getter(v36);
        v37 = static os_log_type_t.error.getter(v29);
        if (os_log_type_enabled(v29, v37))
        {
          v31 = swift_slowAlloc(12, -1);
          v32 = swift_slowAlloc(32, -1);
          v49 = v32;
          *(_DWORD *)v31 = 136315138;
          swift_bridgeObjectRetain(v14);
          *(_QWORD *)(v31 + 4) = sub_33524(v12, v14, &v49);
          swift_bridgeObjectRelease_n(v14, 3);
          _os_log_impl(&dword_0, v29, v37, "Found theme with invalid identifier '%s'! Deleting it", (uint8_t *)v31, 0xCu);
          v34 = (char *)&type metadata for Any + 8;
          v33 = v32;
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease_n(v14, 2);
LABEL_6:

      v7 = v47;
      objc_msgSend(a2, "deleteObject:", v10);
LABEL_7:
      ++v8;

      if (v7 == v8)
        goto LABEL_34;
    }
  }
  __break(1u);
}

uint64_t sub_1AFC68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch(sub_1AFC80, 0, 0);
}

uint64_t sub_1AFC80()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t (*v10)(void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[2];
  v2 = sub_388B0((uint64_t)&off_379F50);
  v3 = v1 + 2;
  v4 = v1[5];
  v5 = v1[6];
  sub_472D0(v3, v4);
  v6 = swift_allocObject(&unk_386DB0, 24);
  v0[3] = v6;
  *(_QWORD *)(v6 + 16) = v2;
  v7 = *(int **)(v5 + 8);
  v10 = (uint64_t (*)(void (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v0[4] = v8;
  *v8 = v0;
  v8[1] = sub_1AFD48;
  return v10(sub_1B06E0, v6, v4, v5);
}

uint64_t sub_1AFD48()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 32);
  v3 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_1B0968, 0, 0);
  swift_release(*(_QWORD *)(v3 + 24));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_1AFDBC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v39;
  uint64_t v40;

  v4 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v33 = a1;
    else
      v33 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v33);
    if (v5)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease(v4);
    return;
  }
  v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a1);
  if (!v5)
    goto LABEL_28;
LABEL_3:
  if (v5 >= 1)
  {
    v6 = 0;
    v39 = v4 & 0xC000000000000001;
    v36 = v5;
    v37 = a3;
    v34 = v4;
    while (1)
    {
      if (v39)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      else
        v7 = *(id *)(v4 + 8 * v6 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, "identifier");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      if (!*(_QWORD *)(a3 + 16))
        goto LABEL_18;
      swift_bridgeObjectRetain(v12);
      v13 = sub_3B8A0(v10, v12);
      if ((v14 & 1) == 0)
        break;
      v15 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v13);
      v16 = v15[1];
      v35 = *v15;
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRelease(v12);
      if (qword_3B5900 != -1)
        swift_once(&qword_3B5900, sub_1AC1FC);
      v17 = type metadata accessor for Logger(0);
      sub_555F0(v17, (uint64_t)qword_3C0770);
      swift_bridgeObjectRetain_n(v16, 2);
      swift_bridgeObjectRetain(v12);
      v19 = Logger.logObject.getter(v18);
      v20 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc(22, -1);
        v22 = swift_slowAlloc(64, -1);
        v40 = v22;
        *(_DWORD *)v21 = 136315394;
        swift_bridgeObjectRetain(v12);
        *(_QWORD *)(v21 + 4) = sub_33524(v10, v12, &v40);
        swift_bridgeObjectRelease_n(v12, 3);
        *(_WORD *)(v21 + 12) = 2080;
        swift_bridgeObjectRetain(v16);
        *(_QWORD *)(v21 + 14) = sub_33524(v35, v16, &v40);
        swift_bridgeObjectRelease_n(v16, 3);
        _os_log_impl(&dword_0, v19, v20, "Migrating theme %s to %s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy(v22, 2, (char *)&type metadata for Any + 8);
        v23 = v22;
        v4 = v34;
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v21, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n(v12, 2);
        swift_bridgeObjectRelease_n(v16, 2);
      }

      v32 = String._bridgeToObjectiveC()();
      objc_msgSend(v8, "setIdentifier:", v32, swift_bridgeObjectRelease(v16).n128_f64[0]);

      v5 = v36;
      a3 = v37;
LABEL_7:
      ++v6;

      if (v5 == v6)
        goto LABEL_28;
    }
    swift_bridgeObjectRelease(v12);
LABEL_18:
    if (qword_3B5900 != -1)
      swift_once(&qword_3B5900, sub_1AC1FC);
    v24 = type metadata accessor for Logger(0);
    sub_555F0(v24, (uint64_t)qword_3C0770);
    swift_bridgeObjectRetain(v12);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(12, -1);
      v29 = swift_slowAlloc(32, -1);
      v40 = v29;
      *(_DWORD *)v28 = 136315138;
      swift_bridgeObjectRetain(v12);
      *(_QWORD *)(v28 + 4) = sub_33524(v10, v12, &v40);
      swift_bridgeObjectRelease_n(v12, 3);
      _os_log_impl(&dword_0, v26, v27, "Found theme with invalid identifier '%s'! Deleting it", (uint8_t *)v28, 0xCu);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      v30 = v29;
      v5 = v36;
      swift_slowDealloc(v30, -1, -1);
      v31 = v28;
      a3 = v37;
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(v12, 2);
    }

    objc_msgSend(a2, "deleteObject:", v8);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t BookThemeImportAndUpdateOperation.deinit()
{
  uint64_t v0;

  sub_34488((_QWORD *)(v0 + 16));

  sub_B2E18(v0 + OBJC_IVAR____TtC8BookEPUB33BookThemeImportAndUpdateOperation_startTime);
  return v0;
}

uint64_t BookThemeImportAndUpdateOperation.__deallocating_deinit()
{
  uint64_t v0;

  sub_34488((_QWORD *)(v0 + 16));

  sub_B2E18(v0 + OBJC_IVAR____TtC8BookEPUB33BookThemeImportAndUpdateOperation_startTime);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_1B02D0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  __int128 *i;
  uint64_t v10;
  void *v11;
  NSString v12;
  id v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  __int128 v21;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = a1 + 40;
    v5 = -(uint64_t)v2;
    v6 = _swiftEmptyArrayStorage;
    v18 = a1 + 40;
    v19 = *(_QWORD *)(a1 + 16);
    do
    {
      v20 = v6;
      if (v3 <= v2)
        v7 = v2;
      else
        v7 = v3;
      v8 = -(uint64_t)v7;
      for (i = (__int128 *)(v4 + 24 * v3++); ; i = (__int128 *)((char *)i + 24))
      {
        if (v8 + v3 == 1)
        {
          __break(1u);
          return;
        }
        v10 = *((_QWORD *)i - 1);
        v11 = *(void **)(a2 + 56);
        v21 = *i;
        swift_retain_n(*((_QWORD *)i + 1));
        v12 = String._bridgeToObjectiveC()();
        v13 = objc_msgSend(v11, "integerForKey:", v12);
        swift_release();

        if ((uint64_t)v13 < v10)
          break;
        swift_release();
        ++v3;
        if (v5 + v3 == 1)
          return;
      }
      v6 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v20) & 1) == 0)
      {
        sub_F53C8(0, v20[2] + 1, 1);
        v6 = v20;
      }
      v14 = v21;
      v16 = v6[2];
      v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        sub_F53C8(v15 > 1, v16 + 1, 1);
        v14 = v21;
        v6 = v20;
      }
      v6[2] = v16 + 1;
      v17 = &v6[3 * v16];
      v17[4] = v10;
      *(_OWORD *)(v17 + 5) = v14;
      v4 = v18;
      v2 = v19;
    }
    while (v5 + v3);
  }
}

_QWORD *sub_1B0498(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  NSString v13;

  v4[8] = objc_msgSend(objc_allocWithZone((Class)NSLock), "init");
  v9 = (char *)v4 + OBJC_IVAR____TtC8BookEPUB33BookThemeImportAndUpdateOperation_startTime;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v4[5] = a3;
  v4[6] = a4;
  v11 = sub_9B1C0(v4 + 2);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v11, a1, a3);
  v4[7] = a2;
  v12 = a2;
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "removeObjectForKey:", v13);

  return v4;
}

uint64_t sub_1B0584()
{
  return type metadata accessor for BookThemeImportAndUpdateOperation(0);
}

uint64_t type metadata accessor for BookThemeImportAndUpdateOperation(uint64_t a1)
{
  uint64_t result;

  result = qword_3C07C8;
  if (!qword_3C07C8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookThemeImportAndUpdateOperation);
  return result;
}

void sub_1B05C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_2F1418;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1A20FC(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

uint64_t method lookup function for BookThemeImportAndUpdateOperation(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookThemeImportAndUpdateOperation);
}

uint64_t dispatch thunk of BookThemeImportAndUpdateOperation.__allocating_init<A>(migrator:userDefaults:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BookThemeImportAndUpdateOperation.run()()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)(*(_QWORD *)v0 + 160);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc(v2[1]);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_6B4A4;
  return v5();
}

uint64_t sub_1B06BC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1B06E0(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1AFDBC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1B06F8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1B0724(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1AF6C4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1B073C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AE8B0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1B0754()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_3C092C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_6B4A4;
  return sub_1AE4FC(v0);
}

uint64_t sub_1B079C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B07C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_3C093C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_6B4A4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_3C0938 + dword_3C0938))(a1, v4);
}

uint64_t sub_1B0830()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_3C094C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_6B4A4;
  return sub_1AE55C(v0);
}

uint64_t sub_1B0878()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_3C0964);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_6B4A4;
  return sub_1AE5BC(v0);
}

uint64_t sub_1B08C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc(dword_3C094C);
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_3F0C0;
  return sub_1AE55C(v0);
}

unint64_t sub_1B0908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3C09A8;
  if (!qword_3C09A8)
  {
    v1 = type metadata accessor for CancellationError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for CancellationError, v1);
    atomic_store(result, (unint64_t *)&qword_3C09A8);
  }
  return result;
}

uint64_t Publisher.asSignal()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject(&unk_386F20, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  Publisher.map<A>(_:)(address(of:), v4, a1, (char *)&type metadata for () + 8, a2);
  return swift_release(v4);
}

uint64_t Publisher<>.switchToLatestOrPause<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t WitnessTable;
  uint64_t v19;
  _QWORD v21[2];

  v21[1] = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a4);
  v10 = swift_getAssociatedTypeWitness(255, a4);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a4, a2, v10, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
  v12 = type metadata accessor for AnyPublisher(255, AssociatedTypeWitness, v10, AssociatedConformanceWitness);
  v13 = type metadata accessor for Publishers.Map(0, a1, v12, a3);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)v21 - v15;
  v17 = (_QWORD *)swift_allocObject(&unk_386F48, 48);
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  Publisher.map<A>(_:)(sub_1B14D0, v17, a1, v12, a3);
  swift_release();
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Publishers.Map<A, B>, v13);
  v19 = swift_getWitnessTable(&protocol conformance descriptor for AnyPublisher<A, B>, v12);
  Publisher<>.switchToLatest()(v13, WitnessTable, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

double Publisher<>.failIfNotOnMain(_:function:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  double result;

  v17 = swift_allocObject(&unk_386F70, 104);
  *(_QWORD *)(v17 + 16) = a10;
  *(_QWORD *)(v17 + 24) = a11;
  *(_QWORD *)(v17 + 32) = a6;
  *(_QWORD *)(v17 + 40) = a7;
  *(_BYTE *)(v17 + 48) = a8;
  *(_QWORD *)(v17 + 56) = a3;
  *(_QWORD *)(v17 + 64) = a4;
  *(_BYTE *)(v17 + 72) = a5;
  *(_QWORD *)(v17 + 80) = a9;
  *(_QWORD *)(v17 + 88) = a1;
  *(_QWORD *)(v17 + 96) = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a11);
  swift_bridgeObjectRetain(a2);
  Publisher.map<A>(_:)(sub_1B1500, v17, a10, AssociatedTypeWitness, a11);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1B0C80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B0C90()
{
  uint64_t v0;
  __n128 v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3C09B8);
  sub_555F0(v0, (uint64_t)qword_3C09B8);
  return Logger.init(subsystem:category:)(0xD000000000000018, 0x80000000002CCAB0, 0x656873696C627550, 0xEA00000000007372, v1);
}

uint64_t Publisher<>.withPreviousValue(current:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, __n128);
  uint64_t v15;
  __n128 v16;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, AssociatedTypeWitness, AssociatedTypeWitness, "previous current ", 0);
  v8 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = __chkstk_darwin(TupleTypeMetadata2);
  v11 = (char *)&v18 - v10;
  v13 = (char *)&v18 + *(int *)(v12 + 48) - v10;
  v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16);
  v14((char *)&v18 - v10, a1, AssociatedTypeWitness, v9);
  ((void (*)(char *, uint64_t, uint64_t))v14)(v13, a1, AssociatedTypeWitness);
  v15 = swift_allocObject(&unk_386F98, 32);
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  Publisher.scan<A>(_:_:)(v11, sub_1B1550, v15, a2, TupleTypeMetadata2, a3);
  v16 = swift_release();
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v8 + 8))(v11, TupleTypeMetadata2, v16);
}

uint64_t sub_1B0E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, AssociatedTypeWitness, AssociatedTypeWitness, "previous current ", 0);
  v9 = __chkstk_darwin(TupleTypeMetadata2);
  v11 = (char *)&v19 - v10;
  v12 = *(int *)(v9 + 48);
  v13 = (char *)(a4 + v12);
  v14 = &v11[v12];
  v15 = a1 + v12;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v17(v11, a1, AssociatedTypeWitness);
  v17(v14, v15, AssociatedTypeWitness);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v14, AssociatedTypeWitness);
  v17(v13, a2, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v11, AssociatedTypeWitness);
}

uint64_t sub_1B0F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13)
{
  Swift::String v22;
  void *object;
  Swift::String v24;
  Swift::String v25;
  void *v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  Swift::String v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t AssociatedTypeWitness;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];

  if ((objc_msgSend((id)objc_opt_self(NSThread), "isMainThread") & 1) != 0)
    goto LABEL_9;
  v41 = a1;
  v43[0] = 0;
  v43[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(100);
  v22._countAndFlagsBits = StaticString.description.getter(a2, a3, a4);
  object = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(object);
  v24._countAndFlagsBits = 32;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = StaticString.description.getter(a5, a6, a7);
  v26 = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v26);
  v27._countAndFlagsBits = 32;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  v42 = a8;
  v28._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  v29 = v28._object;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v29);
  v30._object = (void *)0x80000000002CC0F0;
  v30._countAndFlagsBits = 0xD00000000000005CLL;
  String.append(_:)(v30);
  v31 = 0xE000000000000000;
  if (a11)
  {
    swift_bridgeObjectRetain(a11);
    swift_bridgeObjectRelease(0xE000000000000000);
    v31 = a11;
    if (!BEIsInternalInstall())
      goto LABEL_4;
LABEL_11:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, a10, v31, "BookEPUB/Publisher+Additions.swift", 34, 2, 50, 0);
    __break(1u);
    goto LABEL_12;
  }
  a10 = v43[0];
  if (BEIsInternalInstall())
    goto LABEL_11;
LABEL_4:
  if (qword_3B5908 != -1)
LABEL_12:
    swift_once(&qword_3B5908, sub_1B0C90);
  v33 = type metadata accessor for Logger(0);
  sub_555F0(v33, (uint64_t)qword_3C09B8);
  swift_bridgeObjectRetain(v31);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = swift_slowAlloc(32, -1);
    v43[0] = v38;
    *(_DWORD *)v37 = 136315138;
    swift_bridgeObjectRetain(v31);
    v42 = sub_33524(a10, v31, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v37 + 4);
    swift_bridgeObjectRelease_n(v31, 3);
    _os_log_impl(&dword_0, v35, v36, "%s", v37, 0xCu);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v31, 2);
  }
  a1 = v41;
LABEL_9:
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a9, a1, AssociatedTypeWitness);
}

uint64_t sub_1B12CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t WitnessTable;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v24 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a3);
  v8 = swift_getAssociatedTypeWitness(255, a3);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(a3, a2, v8, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
  v23 = AssociatedTypeWitness;
  v10 = type metadata accessor for Empty(0, AssociatedTypeWitness, v8, AssociatedConformanceWitness);
  v22 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v21 - v11;
  v13 = type metadata accessor for Optional(0, a2);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - v15, a1, v13);
  v17 = *(_QWORD *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    Empty.init(completeImmediately:)(0, v23, v8, AssociatedConformanceWitness);
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Empty<A, B>, v10);
    v19 = Publisher.eraseToAnyPublisher()(v10, WitnessTable);
    result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  }
  else
  {
    v19 = Publisher.eraseToAnyPublisher()(a2, a3);
    result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v16, a2);
  }
  *v24 = v19;
  return result;
}

uint64_t sub_1B14C0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1B14D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B12CC(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1B14DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_1B1500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B0F70(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(unsigned __int8 *)(v2 + 72), *(_QWORD *)(v2 + 80), a2, *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1B1540()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B1550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1B0E54(a1, a2, *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1B1558(_QWORD *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for Publishers.Map(255, *a1, (char *)&type metadata for () + 8, a1[1]);
  return swift_getWitnessTable(&protocol conformance descriptor for Publishers.Map<A, B>, v1);
}

uint64_t sub_1B158C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;

  v1 = *a1;
  v2 = a1[1];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, AssociatedTypeWitness, AssociatedTypeWitness, "previous current ", 0);
  v5 = type metadata accessor for Publishers.Scan(255, v1, TupleTypeMetadata2, v2);
  return swift_getWitnessTable(&protocol conformance descriptor for Publishers.Scan<A, B>, v5);
}

uint64_t sub_1B1604(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  v1 = *a1;
  v2 = a1[1];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v2);
  v4 = type metadata accessor for Publishers.Map(255, v1, AssociatedTypeWitness, v2);
  return swift_getWitnessTable(&protocol conformance descriptor for Publishers.Map<A, B>, v4);
}

uint64_t sub_1B1660(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t WitnessTable;
  uint64_t v17;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, v4);
  v6 = swift_getAssociatedTypeWitness(255, v4);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v4, v2, v6, &protocol requirements base descriptor for Publisher, &associated conformance descriptor for Publisher.Publisher.Failure: Error);
  v8 = type metadata accessor for AnyPublisher(255, AssociatedTypeWitness, v6, AssociatedConformanceWitness);
  v14 = type metadata accessor for Publishers.Map(255, v1, v8, v3);
  v15 = v6;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for Publishers.Map<A, B>, v14);
  v17 = AssociatedConformanceWitness;
  v9 = type metadata accessor for Publishers.SetFailureType(255, &v14);
  v10 = swift_getWitnessTable(&protocol conformance descriptor for AnyPublisher<A, B>, v8);
  v11 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.SetFailureType<A, B>, v9);
  v14 = v8;
  v15 = v9;
  WitnessTable = v10;
  v17 = v11;
  v12 = type metadata accessor for Publishers.SwitchToLatest(255, &v14);
  return swift_getWitnessTable(&protocol conformance descriptor for Publishers.SwitchToLatest<A, B>, v12);
}

char *sub_1B17A8()
{
  id v0;
  id v1;
  char *result;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = objc_allocWithZone((Class)type metadata accessor for SearchRecentsPersistence());
  result = sub_1B1850(v0);
  qword_3C09D0 = (uint64_t)result;
  return result;
}

id static SearchRecentsPersistence.shared.getter()
{
  if (qword_3B5910 != -1)
    swift_once(&qword_3B5910, sub_1B17A8);
  return (id)qword_3C09D0;
}

uint64_t SearchRecentsPersistence.publisher.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_publisher));
}

char *sub_1B1850(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  char v16[24];
  objc_super v17;

  v3 = OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_publisher;
  v4 = sub_319AC(&qword_3B8300);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48));
  v5 = v1;
  *(_QWORD *)&v1[v3] = PassthroughSubject.init()();
  v6 = OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_stringStack;
  v7 = sub_319AC(&qword_3BC350);
  v8 = swift_allocObject(v7, 32);
  *(_QWORD *)(v8 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v8 + 24) = 10;
  *(_QWORD *)&v5[v6] = v8;
  *(_QWORD *)&v5[OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_userDefaults] = a1;
  v9 = a1;

  v17.receiver = v5;
  v17.super_class = (Class)type metadata accessor for SearchRecentsPersistence();
  v10 = (char *)objc_msgSendSuper2(&v17, "init");
  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_stringStack];
  v12 = v10;
  swift_retain();
  v13 = sub_1B1978();
  swift_beginAccess(v11 + 16, v16, 1, 0);
  v14 = *(_QWORD *)(v11 + 16);
  *(_QWORD *)(v11 + 16) = v13;
  swift_release();

  swift_bridgeObjectRelease(v14);
  return v12;
}

_QWORD *sub_1B1978()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  id v3;
  uint64_t v4;
  uint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_userDefaults);
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v1, "objectForKey:", v2);

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)(v7);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_4E234((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    v4 = sub_319AC((uint64_t *)&unk_3B8C90);
    if ((swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
      return (_QWORD *)v6;
  }
  else
  {
    sub_4E27C((uint64_t)v8);
  }
  return _swiftEmptyArrayStorage;
}

void sub_1B1A68(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  void *v19;
  uint64_t v20;
  Class isa;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];

  v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (v3)
  {
    v4 = v2;
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_stringStack);
    swift_beginAccess(v7 + 16, v25, 0, 0);
    v8 = *(_QWORD **)(v7 + 16);
    v9 = v8[2];
    if (!v9)
      goto LABEL_19;
    v10 = v8[4];
    v11 = v8[5];
    v12 = v10 == a1 && v11 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, a1, a2, 0) & 1) != 0)
      return;
    if (v9 == 1)
    {
LABEL_19:
      sub_FFE98(a1, a2);
      v19 = *(void **)(v4 + OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_userDefaults);
      v20 = *(_QWORD *)(v7 + 16);
      swift_bridgeObjectRetain(v20);
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v20);
      v22 = String._bridgeToObjectiveC()();
      objc_msgSend(v19, "setObject:forKey:", isa, v22);

      v23 = *(_QWORD *)(v7 + 16);
      v24 = v23;
      swift_bridgeObjectRetain(v23);
      PassthroughSubject.send(_:)(&v24);
      swift_bridgeObjectRelease(v23);
      return;
    }
    v13 = v8 + 7;
    v14 = 1;
    while (1)
    {
      v15 = v14 + 1;
      if (__OFADD__(v14, 1))
        break;
      v16 = *(v13 - 1);
      v17 = *v13;
      v18 = v16 == a1 && v17 == a2;
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, a1, a2, 0) & 1) != 0)
        return;
      v13 += 2;
      ++v14;
      if (v15 == v9)
        goto LABEL_19;
    }
    __break(1u);
  }
}

uint64_t sub_1B1C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  Class isa;
  NSString v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_stringStack);
  swift_beginAccess(v1 + 16, v10, 1, 0);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v2);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8BookEPUB24SearchRecentsPersistence_userDefaults);
  v4 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain(v4);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setObject:forKey:", isa, v6);

  v7 = *(_QWORD *)(v1 + 16);
  v9 = v7;
  swift_bridgeObjectRetain(v7);
  PassthroughSubject.send(_:)(&v9);
  return swift_bridgeObjectRelease(v7);
}

void SearchRecentsPersistence.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookEPUB.SearchRecentsPersistence", 33, "init()", 6, 0);
  __break(1u);
}

id SearchRecentsPersistence.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchRecentsPersistence();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SearchRecentsPersistence()
{
  return objc_opt_self(_TtC8BookEPUB24SearchRecentsPersistence);
}

uint64_t method lookup function for SearchRecentsPersistence(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SearchRecentsPersistence);
}

uint64_t dispatch thunk of SearchRecentsPersistence.add(searchTerm:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of SearchRecentsPersistence.clearSearchTerms()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 8])();
}

void sub_1B1E4C(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  __n128 v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v9 = *(_QWORD **)(v4 + 24);
  if (__OFADD__(v9, 1))
  {
    __break(1u);
  }
  else
  {
    v5 = a2;
    v6 = a1;
    v7 = *a3;
    *(_QWORD *)(v4 + 24) = (char *)v9 + 1;
    v10 = qword_3B5918;
    swift_bridgeObjectRetain(a2);
    if (v10 == -1)
      goto LABEL_3;
  }
  swift_once(&qword_3B5918, sub_1B29FC);
LABEL_3:
  v11 = type metadata accessor for Logger(0);
  sub_555F0(v11, (uint64_t)qword_3C0A18);
  v12 = swift_bridgeObjectRetain(v5);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    v21 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v15 + 4);
    swift_bridgeObjectRelease(v5);
    _os_log_impl(&dword_0, v13, v14, "Adding selection %ld", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(v5);
  }
  swift_bridgeObjectRetain(v5);
  CurrentValueSubject.value.getter(&v21);
  v16 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
    v16 = sub_42758(0, v16[2] + 1, 1, v16);
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
    v16 = sub_42758((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
  v16[2] = v19 + 1;
  v20 = &v16[4 * v19];
  v20[4] = v9;
  v20[5] = v6;
  v20[6] = v5;
  *((_BYTE *)v20 + 56) = v7;
  v21 = v16;
  CurrentValueSubject.value.setter(&v21, v17);
  swift_bridgeObjectRelease(v5);
  *a4 = v9;
}

uint64_t sub_1B2050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  _QWORD v20[9];

  if (*(_QWORD *)(a3 + 16))
  {
    Hasher.init(_seed:)(v20, *(_QWORD *)(a3 + 40));
    String.hash(into:)(v20, a1, a2);
    v6 = Hasher._finalize()();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = v11[1];
      v13 = *v11 == a1 && v12 == a2;
      if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v11, v12, a1, a2, 0) & 1) != 0)
        return 1;
      v15 = ~v7;
      v16 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
      {
        while (1)
        {
          v17 = (_QWORD *)(v10 + 16 * v16);
          v18 = v17[1];
          v19 = *v17 == a1 && v18 == a2;
          if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
            break;
          result = 0;
          v16 = (v16 + 1) & v15;
          if (((*(_QWORD *)(v9 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1B2184(char a1, uint64_t a2)
{
  _QWORD v4[9];

  if (*(_QWORD *)(a2 + 16))
  {
    Hasher.init(_seed:)(v4, *(_QWORD *)(a2 + 40));
    __asm { BR              X10 }
  }
  return 0;
}

BOOL sub_1B245C(Swift::UInt a1, uint64_t a2)
{
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[9];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  Hasher.init(_seed:)(v13, *(_QWORD *)(a2 + 40));
  Hasher._combine(_:)(a1);
  v4 = Hasher._finalize()();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

_QWORD *SelectionInfo.id.setter(_QWORD *result)
{
  _QWORD *v1;

  *v1 = *result;
  return result;
}

_BYTE *SelectionInfo.lifecycle.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = *result;
  return result;
}

BookEPUB::SelectionInfo::PresentationLifecycle_optional __swiftcall SelectionInfo.PresentationLifecycle.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  Swift::Int v5;
  BookEPUB::SelectionInfo::PresentationLifecycle_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_37A030, v3);
  result.value = swift_bridgeObjectRelease(object);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *v4 = v7;
  return result;
}

uint64_t SelectionInfo.PresentationLifecycle.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x614D746E65696C63;
}

uint64_t sub_1B260C(char *a1, char *a2)
{
  return sub_4014C(*a1, *a2);
}

Swift::Int sub_1B2618()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0xD000000000000012;
  else
    v2 = 0x614D746E65696C63;
  if (v1)
    v3 = 0x80000000002C5C10;
  else
    v3 = 0xED0000646567616ELL;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1B26A8(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000012;
  else
    v2 = 0x614D746E65696C63;
  if (*v1)
    v3 = 0x80000000002C5C10;
  else
    v3 = 0xED0000646567616ELL;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1B2714(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0xD000000000000012;
  else
    v3 = 0x614D746E65696C63;
  if (v2)
    v4 = 0x80000000002C5C10;
  else
    v4 = 0xED0000646567616ELL;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

BookEPUB::SelectionInfo::PresentationLifecycle_optional sub_1B27A0(Swift::String *a1)
{
  return SelectionInfo.PresentationLifecycle.init(rawValue:)(*a1);
}

void sub_1B27AC(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x614D746E65696C63;
  if (*v1)
    v2 = 0xD000000000000012;
  v3 = 0x80000000002C5C10;
  if (!*v1)
    v3 = 0xED0000646567616ELL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t SelectionInfo.documentOrdinal.getter()
{
  uint64_t v0;

  return String.cfiSpineIndex.getter(*(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

uint64_t SelectionInfo.annotationUUID.getter()
{
  Swift::String v0;
  void *object;
  _QWORD v3[2];

  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v3, "SelectionInfo-");
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  return v3[0];
}

uint64_t SelectionInfo.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  Swift::String v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v11;
  _QWORD v12[2];

  v2 = *v0;
  v1 = v0[1];
  v3 = (void *)v0[2];
  v4 = *((_BYTE *)v0 + 24);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(49);
  v5._object = (void *)0x80000000002CFBD0;
  v5._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v5);
  v11 = v2;
  _print_unlocked<A, B>(_:_:)(&v11, v12, &type metadata for SelectionInfo.ID, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v6._countAndFlagsBits = 0x203A696663202C22;
  v6._object = (void *)0xE900000000000022;
  String.append(_:)(v6);
  swift_bridgeObjectRetain(v3);
  v7._countAndFlagsBits = v1;
  v7._object = v3;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v3);
  v8._countAndFlagsBits = 0x636566696C202C22;
  v8._object = (void *)0xEE00203A656C6379;
  String.append(_:)(v8);
  LOBYTE(v11) = v4;
  _print_unlocked<A, B>(_:_:)(&v11, v12, &type metadata for SelectionInfo.PresentationLifecycle, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v9._countAndFlagsBits = 41;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  return v12[0];
}

uint64_t sub_1B29FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v6;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3C0A18);
  sub_555F0(v0, (uint64_t)qword_3C0A18);
  v6 = type metadata accessor for BookContentSelectionHighlightController();
  v1 = sub_319AC(&qword_3C0B20);
  v2 = String.init<A>(describing:)(&v6, v1);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000000002C7150, v2, v3, v4);
}

double sub_1B2A90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);

  v2 = v1;
  v4 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContinuousClock.Instant(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v23 - v12;
  if ((sub_1B3760(a1, *(_QWORD *)(v1 + 56)) & 1) == 0 && !*(_QWORD *)(v1 + 64))
  {
    if ((*(_BYTE *)(v1 + 48) & 1) != 0)
    {
      return sub_1B2F54(a1);
    }
    else
    {
      v15 = *(_QWORD *)(v1 + 32);
      static ContinuousClock.now.getter();
      ContinuousClock.Instant.advanced(by:)(v15);
      v26 = *(void (**)(char *, uint64_t))(v8 + 8);
      v26(v10, v7);
      v16 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
      v25 = swift_allocObject(&unk_387150, 24);
      swift_weakInit(v25 + 16);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
      type metadata accessor for MainActor(0);
      swift_retain();
      swift_bridgeObjectRetain(a1);
      v18 = static MainActor.shared.getter(v17);
      v19 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v23 = v18;
      v24 = (v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
      v20 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
      v21 = swift_allocObject(&unk_387178, v20 + 8);
      *(_QWORD *)(v21 + 16) = v23;
      *(_QWORD *)(v21 + 24) = &protocol witness table for MainActor;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v21 + v19, v10, v7);
      *(_QWORD *)(v21 + v24) = v25;
      *(_QWORD *)(v21 + v20) = a1;
      swift_release();
      v22 = sub_6057C((uint64_t)v6, (uint64_t)&unk_3C0B10, v21);
      v26(v13, v7);
      *(_QWORD *)(v2 + 64) = v22;
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_1B2D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v7 = type metadata accessor for ContinuousClock(0);
  v6[11] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[12] = v8;
  v6[13] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[14] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[15] = v10;
  v6[16] = v11;
  return swift_task_switch(sub_1B2D98, v10, v11);
}

uint64_t sub_1B2D98(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;

  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  ContinuousClock.init()(a1);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to static Task<>.sleep<A>(until:tolerance:clock:)[1]);
  *(_QWORD *)(v1 + 136) = v2;
  v3 = sub_1B7E2C();
  *v2 = v1;
  v2[1] = sub_1B2E18;
  return static Task<>.sleep<A>(until:tolerance:clock:)(*(_QWORD *)(v1 + 64), v1 + 40, *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 88), v3);
}

uint64_t sub_1B2E18()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2[12] + 8))(v2[13], v2[11]);
  if (v0)
    v4 = sub_1B2F18;
  else
    v4 = sub_1B2E9C;
  return swift_task_switch(v4, v2[15], v2[16]);
}

uint64_t sub_1B2E9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release();
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  if (swift_weakLoadStrong(v1))
  {
    sub_1B2F54(*(_QWORD *)(v0 + 80));
    swift_release();
  }
  swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B2F18()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1B2F54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  _QWORD *v17;
  int64_t v18;
  int v19;
  int v20;
  char v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  __n128 v34;
  double result;
  _QWORD v36[4];
  uint64_t v37;
  int v38;
  uint8_t *v39;
  NSObject *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;

  v2 = v1;
  if (*(_QWORD *)(v2 + 64))
  {
    swift_retain();
    sub_319AC(&qword_3B82B8);
    Task.cancel()();
    swift_release();
  }
  *(_QWORD *)(v2 + 64) = 0;
  swift_release();
  v4 = *(_QWORD *)(v2 + 56);
  if (*(_QWORD *)(v4 + 16) <= *(_QWORD *)(a1 + 16) >> 3)
  {
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(v4);
    sub_1B525C(v4);
    swift_bridgeObjectRelease(v4);
    v6 = (_QWORD *)a1;
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(v4);
    v6 = sub_1B5E04(v5, a1);
    swift_bridgeObjectRelease(v4);
  }
  if (qword_3B5918 != -1)
    goto LABEL_24;
  while (1)
  {
    v7 = type metadata accessor for Logger(0);
    sub_555F0(v7, (uint64_t)qword_3C0A18);
    v8 = swift_bridgeObjectRetain_n(v6, 2);
    v9 = Logger.logObject.getter(v8);
    v12 = static os_log_type_t.debug.getter(v9, v10, v11);
    if (!os_log_type_enabled(v9, (os_log_type_t)v12))
    {

      swift_bridgeObjectRelease_n(v6, 2);
      goto LABEL_20;
    }
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v14 = swift_slowAlloc(32, -1);
    v15 = v14;
    v43 = (_QWORD *)v14;
    *(_DWORD *)v13 = 136315138;
    v16 = v6[2];
    v17 = _swiftEmptyArrayStorage;
    if (!v16)
      break;
    v37 = v14;
    v38 = v12;
    v39 = v13;
    v40 = v9;
    v41 = v2;
    v42 = _swiftEmptyArrayStorage;
    sub_F5114(0, v16, 0);
    v17 = _swiftEmptyArrayStorage;
    v18 = sub_1B72D4((uint64_t)v6);
    v20 = v19;
    v22 = v21 & 1;
    while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *((_BYTE *)v6 + 32))
    {
      if (((*(_QWORD *)((char *)v6 + (((unint64_t)v18 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v18) & 1) == 0)
        goto LABEL_22;
      if (*((_DWORD *)v6 + 9) != v20)
        goto LABEL_23;
      v2 = *(_QWORD *)(v6[6] + 8 * v18);
      v42 = v17;
      v24 = v17[2];
      v23 = v17[3];
      if (v24 >= v23 >> 1)
      {
        sub_F5114(v23 > 1, v24 + 1, 1);
        v17 = v42;
      }
      v17[2] = v24 + 1;
      v17[v24 + 4] = v2;
      v25 = sub_1B7374(v18, v20, v22 & 1, (uint64_t)v6);
      v18 = v25;
      v20 = v26;
      v22 = v27 & 1;
      if (!--v16)
      {
        sub_1B7EA4(v25, v26, v27 & 1);
        v9 = v40;
        v13 = v39;
        LOBYTE(v12) = v38;
        v15 = v37;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_once(&qword_3B5918, sub_1B29FC);
  }
LABEL_19:
  v28 = Array.description.getter(v17, &type metadata for Int);
  v30 = v29;
  swift_bridgeObjectRelease(v17);
  v42 = (_QWORD *)sub_33524(v28, v30, (uint64_t *)&v43);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v13 + 4);
  swift_bridgeObjectRelease_n(v6, 2);
  swift_bridgeObjectRelease(v30);
  _os_log_impl(&dword_0, v9, (os_log_type_t)v12, "Finished displaying selections: %s", v13, 0xCu);
  swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v15, -1, -1);
  swift_slowDealloc(v13, -1, -1);

LABEL_20:
  v43 = v6;
  v31 = CurrentValueSubject.value.getter(&v42);
  __chkstk_darwin(v31);
  v36[2] = &v43;
  sub_52418((uint64_t (*)(_QWORD *))sub_1B7E74, (uint64_t)v36, v32);
  v42 = v33;
  CurrentValueSubject.value.setter(&v42, v34);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_1B3360()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 64))
  {
    swift_retain();
    sub_319AC(&qword_3B82B8);
    Task.cancel()();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release();
  return swift_deallocClassInstance(v0, 72, 7);
}

double sub_1B33E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;

  v2 = v1;
  CurrentValueSubject.value.getter(&v9);
  v4 = v9;
  swift_bridgeObjectRetain(a1);
  v6 = sub_1B7AF0(v5, v4);
  swift_bridgeObjectRelease(v4);
  v7 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v2 + 56) = v6;
  sub_1B2A90(v7);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t sub_1B345C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a5 + 16);
  if (!v5)
    return 1;
  v8 = (uint64_t *)(a5 + 32);
  while (1)
  {
    v9 = *v8++;
    if (v9 == a1)
      break;
    if (!--v5)
      return 1;
  }
  if (qword_3B5918 != -1)
    swift_once(&qword_3B5918, sub_1B29FC);
  v11 = type metadata accessor for Logger(0);
  sub_555F0(v11, (uint64_t)qword_3C0A18);
  v12 = swift_bridgeObjectRetain(a3);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    v16 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v15 + 4);
    swift_bridgeObjectRelease(a3);
    _os_log_impl(&dword_0, v13, v14, "Removing selection %ld", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a3);
  }
  return 0;
}

BOOL sub_1B35BC(Swift::UInt a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  Swift::UInt v16;
  uint64_t v17;

  v7 = sub_1B245C(a1, a5);
  if (v7)
  {
    if (qword_3B5918 != -1)
      swift_once(&qword_3B5918, sub_1B29FC);
    v8 = type metadata accessor for Logger(0);
    sub_555F0(v8, (uint64_t)qword_3C0A18);
    swift_bridgeObjectRetain(a3);
    v10 = Logger.logObject.getter(v9);
    v13 = static os_log_type_t.debug.getter(v10, v11, v12);
    if (os_log_type_enabled(v10, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v14 = 134217984;
      v16 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v14 + 4);
      swift_bridgeObjectRelease(a3);
      _os_log_impl(&dword_0, v10, v13, "Removing selection %ld", v14, 0xCu);
      swift_slowDealloc(v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(a3);
    }
  }
  return !v7;
}

uint64_t sub_1B3710()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_319AC(&qword_3BB478);
  v1 = sub_1B7EB0();
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

Swift::Int sub_1B3760(Swift::Int result, uint64_t a2)
{
  Swift::Int v3;
  int64_t v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  Swift::UInt v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[9];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_24;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v4 = v13 + 3;
    if (v13 + 3 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_24;
    v15 = v13 + 4;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_35;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_24;
      }
    }
    v4 = v15;
LABEL_24:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    Hasher.init(_seed:)(v21, *(_QWORD *)(a2 + 40));
    Hasher._combine(_:)(v16);
    result = Hasher._finalize()();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_QWORD *)(v19 + 8 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_QWORD *)(v19 + 8 * v18) == v16)
      goto LABEL_7;
  }
}

void sub_1B3954()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_319AC(&qword_3BD8D0);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_1B3AE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  sub_319AC(&qword_3BD958);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_28;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
      {
        v9 = v24 + 2;
        if (v24 + 2 >= v13)
          goto LABEL_28;
        v25 = *(_QWORD *)(v6 + 8 * v9);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 48 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = v17[2];
    v20 = v17[3];
    v21 = v17[4];
    v22 = v17[5];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = *v17;
    v23[1] = v18;
    v23[2] = v19;
    v23[3] = v20;
    v23[4] = v21;
    v23[5] = v22;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v22);
  }
  v26 = v24 + 3;
  if (v26 >= v13)
    goto LABEL_28;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_1B3CC4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_319AC(&qword_3BD990);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_1B3E74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_319AC(&qword_3BD960);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_1B4004()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_319AC(&qword_3C0B18);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release();
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1B4198(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = *v2;
  v5 = static Hasher._hash(seed:_:)(*(_QWORD *)(*v2 + 40), a1);
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v11 = *v2;
  v15 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B3954();
    v11 = v15;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_1B47C8(v7);
  v13 = *v2;
  *v2 = v15;
  swift_bridgeObjectRelease(v13);
  return v12;
}

double sub_1B42A0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double result;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[9];

  v4 = *v2;
  Hasher.init(_seed:)(v42, *(_QWORD *)(*v2 + 40));
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v10 = a1[4];
  v9 = a1[5];
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v6);
  String.hash(into:)(v42, v5, v6);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRetain(v8);
  v41 = v7;
  String.hash(into:)(v42, v7, v8);
  v40 = v8;
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRetain(v9);
  v39 = v10;
  String.hash(into:)(v42, v10, v9);
  v38 = v9;
  swift_bridgeObjectRelease(v9);
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v4 + 32);
  v13 = v11 & ~v12;
  v37 = v4;
  v14 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v15 = ~v12;
    v16 = *(_QWORD *)(v4 + 48);
    while (1)
    {
      v17 = (_QWORD *)(v16 + 48 * v13);
      v18 = v17[1];
      v19 = v17[2];
      v20 = v17[3];
      v21 = v17[4];
      v22 = v17[5];
      v23 = *v17 == v5 && v18 == v6;
      if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, v5, v6, 0) & 1) != 0)
      {
        v24 = v19 == v41 && v20 == v40;
        if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, v41, v40, 0) & 1) != 0)
        {
          v25 = v21 == v39 && v22 == v38;
          if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v39, v38, 0) & 1) != 0)
            break;
        }
      }
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_22;
    }
    swift_bridgeObjectRelease(v37);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v35);
    v27 = *v35;
    v42[0] = *v35;
    *v35 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1B3AE8();
      v27 = v42[0];
    }
    v28 = *(_QWORD *)(v27 + 48) + 48 * v13;
    v29 = *(_OWORD *)v28;
    v30 = *(_OWORD *)(v28 + 16);
    v32 = *(_QWORD *)(v28 + 32);
    v31 = *(_QWORD *)(v28 + 40);
    *(_OWORD *)a2 = v29;
    *(_OWORD *)(a2 + 16) = v30;
    *(_QWORD *)(a2 + 32) = v32;
    *(_QWORD *)(a2 + 40) = v31;
    sub_1B494C(v13);
    v33 = *v35;
    *v35 = v42[0];
    *(_QWORD *)&result = swift_bridgeObjectRelease(v33).n128_u64[0];
  }
  else
  {
LABEL_22:
    swift_bridgeObjectRelease(v37);
    result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1B4510(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  _QWORD v22[9];

  v5 = *v2;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v22, a1, a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = v10[1];
  v12 = *v10 == a1 && v11 == a2;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
  {
    v17 = ~v7;
    do
    {
      v8 = (v8 + 1) & v17;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v18 = (_QWORD *)(v9 + 16 * v8);
      v19 = v18[1];
      v20 = *v18 == a1 && v19 == a2;
    }
    while (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, a1, a2, 0) & 1) == 0);
  }
  swift_bridgeObjectRelease(v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v14 = *v2;
  v22[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B3CC4();
    v14 = v22[0];
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v8);
  sub_1B4BC0(v8);
  v16 = *v2;
  *v2 = v22[0];
  swift_bridgeObjectRelease(v16);
  return v15;
}

void sub_1B469C(Swift::UInt a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v15[9];

  v5 = *v2;
  Hasher.init(_seed:)(v15, *(_QWORD *)(*v2 + 40));
  Hasher._combine(_:)(a1);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_9:
    *(_QWORD *)a2 = 0;
    v14 = 1;
    goto LABEL_10;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a1)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_9;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v12 = *v2;
  v15[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1B4004();
    v12 = v15[0];
  }
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v8);
  sub_1B4D84(v8);
  v13 = *v2;
  *v2 = v15[0];
  swift_bridgeObjectRelease(v13);
  v14 = 0;
LABEL_10:
  *(_BYTE *)(a2 + 8) = v14;
}

unint64_t sub_1B47C8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(v3);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = static Hasher._hash(seed:_:)(*(_QWORD *)(v3 + 40), *v11) & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1B494C(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  __int128 *v25;
  __int128 *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v30 = v3;
      v31 = v4;
      do
      {
        v12 = *(_QWORD *)(v3 + 40);
        v13 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 48 * v6);
        v14 = *v13;
        v15 = v13[1];
        v16 = v7;
        v18 = v13[2];
        v17 = v13[3];
        v20 = v13[4];
        v19 = v13[5];
        Hasher.init(_seed:)(v32, v12);
        swift_bridgeObjectRetain_n(v15, 2);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v19);
        String.hash(into:)(v32, v14, v15);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRetain(v17);
        String.hash(into:)(v32, v18, v17);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRetain(v19);
        String.hash(into:)(v32, v20, v19);
        swift_bridgeObjectRelease(v19);
        v21 = Hasher._finalize()();
        swift_bridgeObjectRelease(v19);
        v22 = v17;
        v7 = v16;
        swift_bridgeObjectRelease(v22);
        swift_bridgeObjectRelease(v15);
        v23 = v21 & v16;
        if (v2 >= (uint64_t)v9)
        {
          if (v23 < v9)
          {
            v3 = v30;
            v4 = v31;
          }
          else
          {
            v3 = v30;
            v4 = v31;
            if (v2 >= v23)
              goto LABEL_12;
          }
        }
        else
        {
          v3 = v30;
          v4 = v31;
          if (v23 >= v9 || v2 >= v23)
          {
LABEL_12:
            v24 = *(_QWORD *)(v3 + 48);
            v25 = (__int128 *)(v24 + 48 * v2);
            v26 = (__int128 *)(v24 + 48 * v6);
            if (v2 != v6 || (v2 = v6, v25 >= v26 + 3))
            {
              v10 = *v26;
              v11 = v26[2];
              v25[1] = v26[1];
              v25[2] = v11;
              *v25 = v10;
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v27 = *(_QWORD *)(v3 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v29;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1B4BC0(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD v21[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v21, *(_QWORD *)(v3 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v21, v11, v12);
        v13 = Hasher._finalize()();
        swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9)
            goto LABEL_5;
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(v3 + 48);
          v16 = (_OWORD *)(v15 + 16 * v2);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1B4D84(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::UInt v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)(v18, *(_QWORD *)(v3 + 40));
        Hasher._combine(_:)(v10);
        v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_QWORD *)(v12 + 8 * v2);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1B4F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[6];
  _OWORD v18[3];

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      goto LABEL_24;
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        goto LABEL_24;
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          goto LABEL_24;
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            goto LABEL_24;
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (_OWORD *)(*(_QWORD *)(a1 + 48) + 48 * v10);
    v13 = v11[1];
    v12 = v11[2];
    v18[0] = *v11;
    v18[1] = v13;
    v18[2] = v12;
    sub_1398A4(v18);
    sub_1B42A0((uint64_t *)v18, (uint64_t)v17);
    sub_44914(v17[0], v17[1], v17[2], v17[3], v17[4], v17[5]);
    sub_1398EC(v18);
  }
  v16 = v14 + 4;
  if (v16 >= v7)
  {
LABEL_24:
    swift_release();
    return;
  }
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void sub_1B50C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v7)
      goto LABEL_24;
    v17 = *(_QWORD *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      v8 = v16 + 1;
      if (v16 + 1 >= v7)
        goto LABEL_24;
      v17 = *(_QWORD *)(v3 + 8 * v8);
      if (!v17)
      {
        v8 = v16 + 2;
        if (v16 + 2 >= v7)
          goto LABEL_24;
        v17 = *(_QWORD *)(v3 + 8 * v8);
        if (!v17)
        {
          v8 = v16 + 3;
          if (v16 + 3 >= v7)
            goto LABEL_24;
          v17 = *(_QWORD *)(v3 + 8 * v8);
          if (!v17)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v17 - 1) & v17;
    v10 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain(v13);
    sub_1B4510(v12, v13);
    v15 = v14;
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v15);
  }
  v18 = v16 + 4;
  if (v18 >= v7)
  {
LABEL_24:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)(v3 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v17 = *(_QWORD *)(v3 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void sub_1B525C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_24;
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_24;
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            goto LABEL_24;
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_1B469C(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10), (uint64_t)&v14);
  }
  v13 = v11 + 4;
  if (v13 >= v7)
  {
LABEL_24:
    swift_release();
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void *sub_1B53CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  uint64_t isStackAllocationSafe;
  uint64_t v38;
  char v39;
  unsigned int v40;
  unint64_t v41;
  uint64_t v42;
  size_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[9];
  uint64_t v60[5];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v3 = *(_QWORD *)(a1 + 56);
    v50 = a1 + 56;
    v4 = -1 << *(_BYTE *)(a1 + 32);
    v48 = ~v4;
    if (-v4 < 64)
      v5 = ~(-1 << -(char)v4);
    else
      v5 = -1;
    v6 = v5 & v3;
    v49 = (unint64_t)(63 - v4) >> 6;
    v55 = (char *)(a2 + 56);
    v7 = swift_bridgeObjectRetain(a1);
    v8 = 0;
    v52 = v2;
    v51 = v7;
    while (1)
    {
      if (v6)
      {
        v53 = (v6 - 1) & v6;
        v54 = v8;
        v9 = __clz(__rbit64(v6)) | (v8 << 6);
      }
      else
      {
        v10 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          goto LABEL_51;
        }
        if (v10 >= v49)
          goto LABEL_49;
        v11 = *(_QWORD *)(v50 + 8 * v10);
        v12 = v8 + 1;
        if (!v11)
        {
          v12 = v8 + 2;
          if (v8 + 2 >= v49)
            goto LABEL_49;
          v11 = *(_QWORD *)(v50 + 8 * v12);
          if (!v11)
          {
            v12 = v8 + 3;
            if (v8 + 3 >= v49)
              goto LABEL_49;
            v11 = *(_QWORD *)(v50 + 8 * v12);
            if (!v11)
            {
              v12 = v8 + 4;
              if (v8 + 4 >= v49)
                goto LABEL_49;
              v11 = *(_QWORD *)(v50 + 8 * v12);
              if (!v11)
              {
                v13 = v8 + 5;
                if (v8 + 5 >= v49)
                {
LABEL_49:
                  sub_89AA0(v7);
                  return (void *)v2;
                }
                v11 = *(_QWORD *)(v50 + 8 * v13);
                if (!v11)
                {
                  while (1)
                  {
                    v12 = v13 + 1;
                    if (__OFADD__(v13, 1))
                      break;
                    if (v12 >= v49)
                      goto LABEL_49;
                    v11 = *(_QWORD *)(v50 + 8 * v12);
                    ++v13;
                    if (v11)
                      goto LABEL_24;
                  }
LABEL_51:
                  __break(1u);
                }
                v12 = v8 + 5;
              }
            }
          }
        }
LABEL_24:
        v53 = (v11 - 1) & v11;
        v9 = __clz(__rbit64(v11)) + (v12 << 6);
        v54 = v12;
      }
      v14 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 48 * v9);
      v15 = *v14;
      v16 = v14[1];
      v18 = v14[2];
      v17 = v14[3];
      v19 = v14[4];
      v20 = v14[5];
      Hasher.init(_seed:)(v59, *(_QWORD *)(v2 + 40));
      swift_bridgeObjectRetain_n(v16, 2);
      swift_bridgeObjectRetain(v17);
      swift_bridgeObjectRetain(v20);
      v21 = v15;
      String.hash(into:)(v59, v15, v16);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRetain(v17);
      v57 = v18;
      String.hash(into:)(v59, v18, v17);
      v58 = v17;
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRetain(v20);
      v56 = v19;
      String.hash(into:)(v59, v19, v20);
      v22 = v20;
      swift_bridgeObjectRelease(v20);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v2 + 32);
      v25 = v23 & ~v24;
      if (((*(_QWORD *)&v55[(v25 >> 3) & 0xFFFFFFFFFFFFF8] >> v25) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v58);
      swift_bridgeObjectRelease(v16);
      v2 = v52;
      v7 = v51;
      v8 = v54;
      v6 = v53;
    }
    v26 = ~v24;
    v27 = *(_QWORD *)(v52 + 48);
    while (1)
    {
      v28 = (_QWORD *)(v27 + 48 * v25);
      v29 = v28[1];
      v30 = v28[2];
      v31 = v28[3];
      v33 = v28[4];
      v32 = v28[5];
      v34 = *v28 == v21 && v29 == v16;
      if (v34 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v21, v16, 0) & 1) != 0)
      {
        v35 = v30 == v57 && v31 == v58;
        if (v35 || (_stringCompareWithSmolCheck(_:_:expecting:)(v30, v31, v57, v58, 0) & 1) != 0)
        {
          v36 = v33 == v56 && v32 == v22;
          if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(v33, v32, v56, v22, 0) & 1) != 0)
            break;
        }
      }
      v25 = (v25 + 1) & v26;
      if (((*(_QWORD *)&v55[(v25 >> 3) & 0xFFFFFFFFFFFFF8] >> v25) & 1) == 0)
        goto LABEL_6;
    }
    v60[0] = v51;
    v60[1] = v50;
    v60[2] = v48;
    v60[3] = v54;
    v60[4] = v53;
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v16);
    v38 = v52;
    v39 = *(_BYTE *)(v52 + 32);
    v40 = v39 & 0x3F;
    v41 = (1 << v39) + 63;
    v42 = v41 >> 6;
    v43 = 8 * (v41 >> 6);
    if (v40 <= 0xD
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v41 >> 6), 8), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v48 - ((v43 + 15) & 0x3FFFFFFFFFFFFFF0), v55, v43);
      sub_1B61AC((unint64_t *)((char *)&v48 - ((v43 + 15) & 0x3FFFFFFFFFFFFFF0)), v42, v38, v25, v60);
      v2 = v44;
      swift_release();
      sub_89AA0(v60[0]);
    }
    else
    {
      v45 = (void *)swift_slowAlloc(v43, -1);
      memcpy(v45, v55, v43);
      sub_1B61AC((unint64_t *)v45, v42, v52, v25, v60);
      v2 = v46;
      swift_release();
      sub_89AA0(v60[0]);
      swift_slowDealloc(v45, -1, -1);
    }
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  return (void *)v2;
}

void *sub_1B599C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t isStackAllocationSafe;
  char v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  size_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD v44[9];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v43 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v41 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v42 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain(a1);
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v42)
          goto LABEL_47;
        v13 = *(_QWORD *)(v43 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v42)
            goto LABEL_47;
          v13 = *(_QWORD *)(v43 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v42)
              goto LABEL_47;
            v13 = *(_QWORD *)(v43 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v42)
                goto LABEL_47;
              v13 = *(_QWORD *)(v43 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v42)
                {
LABEL_47:
                  sub_89AA0(a1);
                  return (void *)v2;
                }
                v13 = *(_QWORD *)(v43 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v42)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v43 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      Hasher.init(_seed:)(v44, *(_QWORD *)(v2 + 40));
      swift_bridgeObjectRetain(v17);
      String.hash(into:)(v44, v18, v17);
      v19 = Hasher._finalize()();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease(v17);
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = v23[1];
    v25 = *v23 == v18 && v24 == v17;
    if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v23, v24, v18, v17, 0) & 1) != 0)
    {
      swift_bridgeObjectRelease(v17);
      v45 = a1;
      v46 = v43;
      v47 = v41;
      v48 = v9;
      v49 = v7;
    }
    else
    {
      v26 = ~v20;
      do
      {
        v21 = (v21 + 1) & v26;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v27 = (_QWORD *)(v22 + 16 * v21);
        v28 = v27[1];
        v29 = *v27 == v18 && v28 == v17;
      }
      while (!v29 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v27, v28, v18, v17, 0) & 1) == 0);
      v45 = a1;
      v46 = v43;
      v47 = v41;
      v48 = v9;
      v49 = v7;
      swift_bridgeObjectRelease(v17);
    }
    v31 = *(_BYTE *)(v2 + 32);
    v32 = v31 & 0x3F;
    v33 = (1 << v31) + 63;
    v34 = v33 >> 6;
    v35 = 8 * (v33 >> 6);
    if (v32 < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v33 >> 6), 8), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v41 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v35);
      sub_1B6560((unint64_t *)((char *)&v41 - ((v35 + 15) & 0x3FFFFFFFFFFFFFF0)), v34, v2, v21, &v45);
      v37 = v36;
      swift_release();
      sub_89AA0(v45);
    }
    else
    {
      v38 = (void *)swift_slowAlloc(v35, -1);
      memcpy(v38, (const void *)(v2 + 56), v35);
      sub_1B6560((unint64_t *)v38, v34, v2, v21, &v45);
      v37 = v39;
      swift_release();
      sub_89AA0(v45);
      swift_slowDealloc(v38, -1, -1);
    }
    return (void *)v37;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

void *sub_1B5E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  Swift::Int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  Swift::Int v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[9];
  uint64_t v35[5];

  v2 = a2;
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v33 = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10)
            goto LABEL_35;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_35;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_35;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_35;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    swift_bridgeObjectRetain(a1);
                    sub_89AA0(v31);
                    return (void *)v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_35;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_37:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
        Hasher.init(_seed:)(v34, *(_QWORD *)(v2 + 40));
        Hasher._combine(_:)(v18);
        v19 = Hasher._finalize()();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(_QWORD *)(v22 + 8 * v21) == v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(_QWORD *)(v22 + 8 * v21) == v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v35[0] = a1;
    v35[1] = v6;
    v35[2] = v33;
    v35[3] = v4;
    v35[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    swift_bridgeObjectRetain(a1);
    if (v23 < 0x81
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v24, 8), (_DWORD)isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      v27 = (char *)&v32 - v26;
      memcpy((char *)&v32 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_1B683C((Swift::Int)v27, v23, v2, v21, v35);
      swift_release();
      sub_89AA0(v35[0]);
    }
    else
    {
      v29 = (void *)swift_slowAlloc(v24, -1);
      memcpy(v29, (const void *)(v2 + 56), v24);
      v28 = sub_1B683C((Swift::Int)v29, v23, v2, v21, v35);
      swift_release();
      sub_89AA0(v35[0]);
      swift_slowDealloc(v29, -1, -1);
    }
    return (void *)v28;
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
}

void sub_1B61AC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  _QWORD *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[9];
  uint64_t v51;

  v5 = a3;
  v6 = *(_QWORD *)(a3 + 16);
  v44 = a5;
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v47 = a3 + 56;
  while (2)
  {
    v42 = v7;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v8 = a5[4];
        if (v8)
        {
          v10 = (v8 - 1) & v8;
          v11 = __clz(__rbit64(v8)) | (v9 << 6);
        }
        else
        {
          v12 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_49;
          }
          v13 = (unint64_t)(a5[2] + 64) >> 6;
          if (v12 >= v13)
          {
            v12 = a5[3];
LABEL_45:
            a5[3] = v12;
            a5[4] = 0;
            swift_retain();
            sub_1B6AB0(a1, a2, v42, v5);
            return;
          }
          v14 = a5[1];
          v15 = *(_QWORD *)(v14 + 8 * v12);
          if (!v15)
          {
            if (v9 + 2 >= v13)
              goto LABEL_45;
            v15 = *(_QWORD *)(v14 + 8 * (v9 + 2));
            if (v15)
            {
              v12 = v9 + 2;
            }
            else
            {
              if (v9 + 3 >= v13)
              {
                v12 = v9 + 2;
                goto LABEL_45;
              }
              v15 = *(_QWORD *)(v14 + 8 * (v9 + 3));
              if (v15)
              {
                v12 = v9 + 3;
              }
              else
              {
                v12 = v9 + 4;
                if (v9 + 4 >= v13)
                {
                  v12 = v9 + 3;
                  goto LABEL_45;
                }
                v15 = *(_QWORD *)(v14 + 8 * v12);
                if (!v15)
                {
                  v12 = v13 - 1;
                  v16 = v9 + 5;
                  while (v13 != v16)
                  {
                    v15 = *(_QWORD *)(v14 + 8 * v16++);
                    if (v15)
                    {
                      v12 = v16 - 1;
                      goto LABEL_21;
                    }
                  }
                  goto LABEL_45;
                }
              }
            }
          }
LABEL_21:
          v10 = (v15 - 1) & v15;
          v11 = __clz(__rbit64(v15)) + (v12 << 6);
          v9 = v12;
        }
        v17 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 48 * v11);
        v18 = *v17;
        v19 = v17[1];
        v21 = v17[2];
        v20 = v17[3];
        v23 = v17[4];
        v22 = v17[5];
        a5[3] = v9;
        a5[4] = v10;
        Hasher.init(_seed:)(v50, *(_QWORD *)(v5 + 40));
        swift_bridgeObjectRetain_n(v19, 2);
        swift_bridgeObjectRetain(v20);
        swift_bridgeObjectRetain(v22);
        v24 = v18;
        String.hash(into:)(v50, v18, v19);
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRetain(v20);
        v49 = v21;
        String.hash(into:)(v50, v21, v20);
        v51 = v20;
        swift_bridgeObjectRelease(v20);
        swift_bridgeObjectRetain(v22);
        v48 = v23;
        String.hash(into:)(v50, v23, v22);
        v25 = v22;
        swift_bridgeObjectRelease(v22);
        v26 = Hasher._finalize()();
        v27 = -1 << *(_BYTE *)(v5 + 32);
        v28 = v26 & ~v27;
        if (((*(_QWORD *)(v47 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) != 0)
          break;
LABEL_3:
        swift_bridgeObjectRelease(v25);
        swift_bridgeObjectRelease(v51);
        swift_bridgeObjectRelease(v19);
        a5 = v44;
        v5 = a3;
      }
      v46 = ~v27;
      v29 = *(_QWORD *)(v5 + 48);
      while (1)
      {
        v30 = (_QWORD *)(v29 + 48 * v28);
        v31 = v30[1];
        v32 = v30[2];
        v33 = v30[3];
        v34 = v30[4];
        v35 = v30[5];
        v36 = *v30 == v24 && v31 == v19;
        if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v30, v31, v24, v19, 0) & 1) != 0)
        {
          v37 = v32 == v49 && v33 == v51;
          if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v49, v51, 0) & 1) != 0)
          {
            v38 = v34 == v48 && v35 == v25;
            if (v38 || (_stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v48, v25, 0) & 1) != 0)
              break;
          }
        }
        v28 = (v28 + 1) & v46;
        if (((*(_QWORD *)(v47 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease(v19);
      v39 = (v28 >> 3) & 0x1FFFFFFFFFFFFFF8;
      a5 = v44;
      v40 = *(unint64_t *)((char *)a1 + v39);
      *(unint64_t *)((char *)a1 + v39) = v40 & ~(1 << v28);
      v5 = a3;
    }
    while ((v40 & (1 << v28)) == 0);
    v7 = v42 - 1;
    if (__OFSUB__(v42, 1))
    {
LABEL_49:
      __break(1u);
      return;
    }
    if (v42 != 1)
      continue;
    break;
  }
}

void sub_1B6560(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t i;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v39;
  _QWORD v41[9];
  uint64_t v42;

  v7 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v42 = a3 + 56;
  while (2)
  {
    v39 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  sub_1B6DD8(a1, a2, v39, a3);
                  return;
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        Hasher.init(_seed:)(v41, *(_QWORD *)(a3 + 40));
        swift_bridgeObjectRetain(v20);
        String.hash(into:)(v41, v21, v20);
        v22 = Hasher._finalize()();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v42 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        swift_bridgeObjectRelease(v20);
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = v28[1];
      v30 = *v28 == v21 && v29 == v20;
      if (!v30 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v28, v29, v21, v20, 0) & 1) == 0)
      {
        v32 = ~v23;
        for (i = v24 + 1; ; i = v34 + 1)
        {
          v34 = i & v32;
          if (((*(_QWORD *)(v42 + (((i & v32) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v32)) & 1) == 0)
            break;
          v35 = (_QWORD *)(v27 + 16 * v34);
          v36 = v35[1];
          v37 = *v35 == v21 && v36 == v20;
          if (v37 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v35, v36, v21, v20, 0) & 1) != 0)
          {
            swift_bridgeObjectRelease(v20);
            v25 = v34 >> 6;
            v26 = 1 << v34;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      swift_bridgeObjectRelease(v20);
LABEL_29:
      v31 = a1[v25];
      a1[v25] = v31 & ~v26;
    }
    while ((v26 & v31) == 0);
    v8 = v39 - 1;
    if (__OFSUB__(v39, 1))
    {
LABEL_45:
      __break(1u);
      return;
    }
    if (v39 != 1)
      continue;
    break;
  }
}

Swift::Int sub_1B683C(Swift::Int result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  Swift::UInt v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  int64_t v31;
  uint64_t v34[9];

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (1)
  {
    v15 = a5[3];
    v16 = a5[4];
    if (!v16)
      break;
    v17 = (v16 - 1) & v16;
    v18 = __clz(__rbit64(v16)) | (v15 << 6);
LABEL_16:
    v25 = *(_QWORD *)(*(_QWORD *)(*a5 + 48) + 8 * v18);
    a5[3] = v15;
    a5[4] = v17;
    Hasher.init(_seed:)(v34, *(_QWORD *)(a3 + 40));
    Hasher._combine(_:)(v25);
    result = Hasher._finalize()();
    v26 = -1 << *(_BYTE *)(a3 + 32);
    v27 = result & ~v26;
    v11 = v27 >> 6;
    v12 = 1 << v27;
    if (((1 << v27) & *(_QWORD *)(v10 + 8 * (v27 >> 6))) != 0)
    {
      v28 = *(_QWORD *)(a3 + 48);
      if (*(_QWORD *)(v28 + 8 * v27) == v25)
      {
LABEL_3:
        v13 = v11;
        v14 = v7[v11];
        v7[v13] = v14 & ~v12;
        if ((v12 & v14) != 0)
        {
          if (__OFSUB__(v9--, 1))
            goto LABEL_36;
          if (!v9)
            return (Swift::Int)&_swiftEmptySetSingleton;
        }
      }
      else
      {
        for (i = v27 + 1; ; i = v30 + 1)
        {
          v30 = i & ~v26;
          if (((*(_QWORD *)(v10 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
            break;
          if (*(_QWORD *)(v28 + 8 * v30) == v25)
          {
            v11 = v30 >> 6;
            v12 = 1 << v30;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v19 = v15 + 1;
  if (!__OFADD__(v15, 1))
  {
    v20 = (unint64_t)(a5[2] + 64) >> 6;
    v21 = a5[3];
    if (v19 >= v20)
      goto LABEL_33;
    v22 = a5[1];
    v23 = *(_QWORD *)(v22 + 8 * v19);
    if (v23)
      goto LABEL_15;
    v24 = v15 + 2;
    v21 = v15 + 1;
    if (v15 + 2 >= v20)
      goto LABEL_33;
    v23 = *(_QWORD *)(v22 + 8 * v24);
    if (!v23)
    {
      v21 = v15 + 2;
      if (v15 + 3 >= v20)
        goto LABEL_33;
      v23 = *(_QWORD *)(v22 + 8 * (v15 + 3));
      if (v23)
      {
        v19 = v15 + 3;
        goto LABEL_15;
      }
      v24 = v15 + 4;
      v21 = v15 + 3;
      if (v15 + 4 >= v20)
        goto LABEL_33;
      v23 = *(_QWORD *)(v22 + 8 * v24);
      if (!v23)
      {
        v19 = v15 + 5;
        v21 = v15 + 4;
        if (v15 + 5 >= v20)
          goto LABEL_33;
        v23 = *(_QWORD *)(v22 + 8 * v19);
        if (!v23)
        {
          v21 = v20 - 1;
          v31 = v15 + 6;
          while (v20 != v31)
          {
            v23 = *(_QWORD *)(v22 + 8 * v31++);
            if (v23)
            {
              v19 = v31 - 1;
              goto LABEL_15;
            }
          }
LABEL_33:
          a5[3] = v21;
          a5[4] = 0;
          swift_retain();
          return sub_1B706C(v7, a2, v9, a3);
        }
        goto LABEL_15;
      }
    }
    v19 = v24;
LABEL_15:
    v17 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v19 << 6);
    v15 = v19;
    goto LABEL_16;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

Swift::Int sub_1B6AB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[9];

  v4 = a4;
  if (!a3)
  {
    v7 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (Swift::Int)v7;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_319AC(&qword_3BD958);
  result = static _SetStorage.allocate(capacity:)(v5);
  v7 = (_QWORD *)result;
  if (a2 < 1)
    v8 = 0;
  else
    v8 = *a1;
  v9 = 0;
  v10 = result + 56;
  v35 = v4;
  while (1)
  {
    if (v8)
    {
      v36 = (v8 - 1) & v8;
      v37 = v9;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_24;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_39;
    if (v12 >= a2)
      goto LABEL_36;
    v13 = a1[v12];
    v14 = v9 + 1;
    if (!v13)
    {
      v14 = v9 + 2;
      if (v9 + 2 >= a2)
        goto LABEL_36;
      v13 = a1[v14];
      if (!v13)
      {
        v14 = v9 + 3;
        if (v9 + 3 >= a2)
          goto LABEL_36;
        v13 = a1[v14];
        if (!v13)
          break;
      }
    }
LABEL_23:
    v36 = (v13 - 1) & v13;
    v37 = v14;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_24:
    v16 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 48 * v11);
    v17 = *v16;
    v18 = v16[1];
    v19 = v16[2];
    v20 = v16[3];
    v22 = v16[4];
    v21 = v16[5];
    Hasher.init(_seed:)(v38, v7[5]);
    swift_bridgeObjectRetain_n(v18, 2);
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v21);
    String.hash(into:)(v38, v17, v18);
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRetain(v20);
    String.hash(into:)(v38, v19, v20);
    swift_bridgeObjectRelease(v20);
    swift_bridgeObjectRetain(v21);
    String.hash(into:)(v38, v22, v21);
    swift_bridgeObjectRelease(v21);
    result = Hasher._finalize()();
    v23 = -1 << *((_BYTE *)v7 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v10 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v10 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v10 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = (_QWORD *)(v7[6] + 48 * v26);
    *v31 = v17;
    v31[1] = v18;
    v31[2] = v19;
    v31[3] = v20;
    v31[4] = v22;
    v31[5] = v21;
    ++v7[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4 = v35;
    v8 = v36;
    v9 = v37;
    if (!v5)
      goto LABEL_36;
  }
  v15 = v9 + 4;
  if (v9 + 4 >= a2)
    goto LABEL_36;
  v13 = a1[v15];
  if (v13)
  {
    v14 = v9 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= a2)
      goto LABEL_36;
    v13 = a1[v14];
    ++v15;
    if (v13)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_1B6DD8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  _QWORD v32[9];

  v4 = a4;
  if (!a3)
  {
    v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (Swift::Int)v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_319AC(&qword_3BD990);
  result = static _SetStorage.allocate(capacity:)(v5);
  v8 = (_QWORD *)result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    Hasher.init(_seed:)(v32, v8[5]);
    swift_bridgeObjectRetain(v19);
    String.hash(into:)(v32, v18, v19);
    result = Hasher._finalize()();
    v20 = -1 << *((_BYTE *)v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(v8[6] + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_1B706C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  Swift::Int result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  Swift::UInt v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;
  uint64_t v29[9];

  v4 = a4;
  if (!a3)
  {
    v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (Swift::Int)v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_319AC(&qword_3C0B18);
  result = static _SetStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    Hasher.init(_seed:)(v29, v9[5]);
    Hasher._combine(_:)(v18);
    result = Hasher._finalize()();
    v19 = -1 << *((_BYTE *)v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(v9[6] + 8 * v22) = v18;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1B72D4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1B7374(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t _s8BookEPUB13SelectionInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  if (*(_QWORD *)a1 == *(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v5 = *(_QWORD *)(a1 + 16);
    v6 = *(unsigned __int8 *)(a1 + 24);
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(unsigned __int8 *)(a2 + 24);
    v10 = v4 == v7 && v5 == v8;
    if (v10 || (v11 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v7, v8, 0) & 1) != 0))
    {
      if (v6)
        v12 = 0xD000000000000012;
      else
        v12 = 0x614D746E65696C63;
      if (v6)
        v13 = 0x80000000002C5C10;
      else
        v13 = 0xED0000646567616ELL;
      if (v9)
        v14 = 0xD000000000000012;
      else
        v14 = 0x614D746E65696C63;
      if (v9)
        v15 = 0x80000000002C5C10;
      else
        v15 = 0xED0000646567616ELL;
      if (v12 == v14 && v13 == v15)
      {
        v11 = 1;
        v15 = v13;
      }
      else
      {
        v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v13, v14, v15, 0);
      }
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v15);
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

unint64_t sub_1B755C()
{
  unint64_t result;

  result = qword_3C0A30;
  if (!qword_3C0A30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SelectionInfo.ID, &type metadata for SelectionInfo.ID);
    atomic_store(result, (unint64_t *)&qword_3C0A30);
  }
  return result;
}

unint64_t sub_1B75A4()
{
  unint64_t result;

  result = qword_3C0A38;
  if (!qword_3C0A38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SelectionInfo.PresentationLifecycle, &type metadata for SelectionInfo.PresentationLifecycle);
    atomic_store(result, (unint64_t *)&qword_3C0A38);
  }
  return result;
}

unint64_t sub_1B75EC()
{
  unint64_t result;

  result = qword_3C0A40;
  if (!qword_3C0A40)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SelectionInfo.ID, &type metadata for SelectionInfo.ID);
    atomic_store(result, (unint64_t *)&qword_3C0A40);
  }
  return result;
}

uint64_t destroy for SelectionInfo(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
}

uint64_t initializeWithCopy for SelectionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for SelectionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for SelectionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SelectionInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelectionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SelectionInfo()
{
  return &type metadata for SelectionInfo;
}

ValueMetadata *type metadata accessor for SelectionInfo.ID()
{
  return &type metadata for SelectionInfo.ID;
}

uint64_t storeEnumTagSinglePayload for SelectionInfo.PresentationLifecycle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B780C + 4 * byte_2F14A7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B7840 + 4 * byte_2F14A2[v4]))();
}

uint64_t sub_1B7840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B7850);
  return result;
}

uint64_t sub_1B785C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B7864);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B7868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B7870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SelectionInfo.PresentationLifecycle()
{
  return &type metadata for SelectionInfo.PresentationLifecycle;
}

uint64_t type metadata accessor for BookContentSelectionHighlightController()
{
  return objc_opt_self(_TtC8BookEPUB39BookContentSelectionHighlightController);
}

void sub_1B78AC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  _BYTE *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _BYTE *v19;
  char v20;
  uint64_t v24;

  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = (_BYTE *)(a4 + 56);
  while (1)
  {
LABEL_4:
    while (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v6 << 6);
      v15 = *(_QWORD *)(a4 + 16);
      if (v15)
        goto LABEL_21;
    }
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v11)
      goto LABEL_32;
    v17 = *(_QWORD *)(v7 + 8 * v16);
    ++v6;
    if (!v17)
    {
      v6 = v16 + 1;
      if (v16 + 1 >= v11)
        goto LABEL_32;
      v17 = *(_QWORD *)(v7 + 8 * v6);
      if (!v17)
      {
        v6 = v16 + 2;
        if (v16 + 2 >= v11)
          goto LABEL_32;
        v17 = *(_QWORD *)(v7 + 8 * v6);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v10 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v6 << 6);
    v15 = *(_QWORD *)(a4 + 16);
    if (v15)
    {
LABEL_21:
      v19 = v12;
      while (*((_QWORD *)v19 - 3) != *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14))
      {
        v19 += 32;
        if (!--v15)
          goto LABEL_4;
      }
      if ((*v19 & 1) != 0)
      {
        swift_bridgeObjectRelease(0x80000000002C5C10);
LABEL_29:
        *(unint64_t *)((char *)a1 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        if (__OFADD__(v24++, 1))
        {
          __break(1u);
LABEL_32:
          swift_retain();
          sub_1B706C(a1, a2, v24, a3);
          return;
        }
      }
      else
      {
        v20 = _stringCompareWithSmolCheck(_:_:expecting:)(0x614D746E65696C63, 0xED0000646567616ELL, 0xD000000000000012, 0x80000000002C5C10, 0);
        swift_bridgeObjectRelease(0xED0000646567616ELL);
        if ((v20 & 1) != 0)
          goto LABEL_29;
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v11)
    goto LABEL_32;
  v17 = *(_QWORD *)(v7 + 8 * v18);
  if (v17)
  {
    v6 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v11)
      goto LABEL_32;
    v17 = *(_QWORD *)(v7 + 8 * v6);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
}

uint64_t sub_1B7AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n(a2, 2);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(v8, 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain(a2);
    sub_1B78AC((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_release();
    v12 = swift_bridgeObjectRelease(a2);
    if (v2)
      swift_willThrow(v12);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v8, -1);
    bzero(v13, v8);
    swift_bridgeObjectRetain(a2);
    sub_1B78AC((unint64_t *)v13, v7, a1, a2);
    v11 = v14;
    swift_release();
    swift_bridgeObjectRelease(a2);
    swift_slowDealloc(v13, -1, -1);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  return v11;
}

uint64_t sub_1B7CB4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1B7CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  __n128 v8;

  v1 = type metadata accessor for ContinuousClock.Instant(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v8);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1B7D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for ContinuousClock.Instant(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_3C0B0C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_3F0C0;
  return sub_1B2D00(a1, v7, v8, v9, v10, v11);
}

unint64_t sub_1B7E2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3B82C8;
  if (!qword_3B82C8)
  {
    v1 = type metadata accessor for ContinuousClock(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ContinuousClock, v1);
    atomic_store(result, (unint64_t *)&qword_3B82C8);
  }
  return result;
}

BOOL sub_1B7E74(uint64_t a1)
{
  uint64_t v1;

  return sub_1B35BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), **(_QWORD **)(v1 + 16));
}

uint64_t sub_1B7EA4(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

unint64_t sub_1B7EB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3C0B28;
  if (!qword_3C0B28)
  {
    v1 = sub_31A38(&qword_3BB478);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_3C0B28);
  }
  return result;
}

_QWORD *sub_1B7EFC(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v13[5];
  _QWORD *v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v14 = _swiftEmptyArrayStorage;
    sub_F5380(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      ObjectType = swift_getObjectType(v5);
      v8 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(v6 + 40);
      v9 = swift_unknownObjectRetain(v5);
      v8(v13, ObjectType, v6, v9);
      swift_unknownObjectRelease(v5);
      v14 = v2;
      v11 = v2[2];
      v10 = v2[3];
      if (v11 >= v10 >> 1)
      {
        sub_F5380(v10 > 1, v11 + 1, 1);
        v2 = v14;
      }
      v2[2] = v11 + 1;
      sub_1B9D7C((uint64_t)v13, (uint64_t)&v2[5 * v11 + 4]);
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_1B8004(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v16 = _swiftEmptyArrayStorage;
    sub_F51A8(0, v1, 0);
    v4 = a1 + 32;
    do
    {
      v5 = *(_QWORD *)(v4 + 24);
      if (v5)
      {
        sub_1B9D34(v4, (uint64_t)v13);
        v6 = v14;
        v7 = v15;
        sub_472D0(v13, v14);
        v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
        sub_34488(v13);
      }
      else
      {
        v8 = 0;
      }
      v2 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_F51A8(0, v2[2] + 1, 1);
        v2 = v16;
      }
      v10 = v2[2];
      v9 = v2[3];
      if (v10 >= v9 >> 1)
      {
        sub_F51A8(v9 > 1, v10 + 1, 1);
        v2 = v16;
      }
      v2[2] = v10 + 1;
      v11 = &v2[2 * v10];
      v11[4] = v8;
      *((_BYTE *)v11 + 40) = v5 == 0;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_1B8148(void (*a1)(uint64_t *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v8;
  _QWORD *v9;
  _QWORD *v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  char v21;
  _OWORD v22[2];
  uint64_t v23;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a3);
  v23 = a3;
  v8 = (__int128 *)(a3 + 48);
  v9 = _swiftEmptyArrayStorage;
  do
  {
    v11 = *v8;
    v22[0] = *(v8 - 1);
    v22[1] = v11;
    a1(&v18, v22);
    if (v4)
    {
      swift_bridgeObjectRelease(v9);
      swift_bridgeObjectRelease(v23);
      return v9;
    }
    if ((v21 & 1) == 0)
    {
      v12 = v18;
      v16 = v20;
      v17 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = sub_42500(0, v9[2] + 1, 1, v9);
      v14 = v9[2];
      v13 = v9[3];
      if (v14 >= v13 >> 1)
        v9 = sub_42500((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
      v9[2] = v14 + 1;
      v10 = &v9[5 * v14];
      v10[4] = v12;
      *(_OWORD *)(v10 + 5) = v17;
      *(_OWORD *)(v10 + 7) = v16;
    }
    v8 += 2;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease(v23);
  return v9;
}

unint64_t ContentLoadingDocument.shortDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  _QWORD v18[2];
  unint64_t v19;
  unint64_t v20;

  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = 0;
  v20 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease(v20);
  v19 = 0xD000000000000021;
  v20 = 0x80000000002CFCD0;
  v18[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 0x203A6C7275202CLL;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  v12 = URL.lastPathComponent.getter(v11);
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15._countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v14);
  v16._countAndFlagsBits = 62;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  return v19;
}

uint64_t sub_1B841C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(a1 + 40))();
  *a2 = result;
  return result;
}

uint64_t sub_1B8444()
{
  uint64_t v0;

  return ((uint64_t (*)(const __CFString *))((char *)sub_1B8468 + 4
                                                                          * byte_2F1710[*(unsigned __int8 *)(v0 + 8)]))(CFSTR("BEWebProcessPluginCurrentPageNumberParameterKey"));
}

uint64_t sub_1B8468()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginPageCountParameterKey"));
}

uint64_t sub_1B8474()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginAnnotationParameterKey"));
}

uint64_t sub_1B8480()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginIsBookmarkedStateParameterKey"));
}

uint64_t sub_1B848C()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginOperationsParameterKey"));
}

uint64_t sub_1B8498()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginIsSpreadAtChapterBorderKey"));
}

uint64_t sub_1B84A4()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginRTLParameterKey"));
}

uint64_t sub_1B84B0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginPaginatedParameterKey"));
}

uint64_t sub_1B84BC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginIsTextHorizontalParameterKey"));
}

uint64_t sub_1B84C8()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginBookLayoutParameterKey"));
}

uint64_t sub_1B84D4()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginHasVisibleControlsParameterKey"));
}

uint64_t sub_1B84E0()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginHeightParameterKey"));
}

uint64_t sub_1B84EC()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginWidthParameterKey"));
}

uint64_t sub_1B84F8()
{
  _QWORD *v0;

  if (*v0)
    return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginMessageParameterKey"));
  else
    return static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BEWebProcessPluginIdentifierParameterKey"));
}

uint64_t ContentLoading.shortDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  Swift::String v6;
  void *object;
  Swift::String v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  Swift::String v18;
  Swift::String v19;

  _StringGuts.grow(_:)(42);
  swift_bridgeObjectRelease(0xE000000000000000);
  ObjectType = swift_getObjectType(v2);
  v6._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(object);
  v8._countAndFlagsBits = 0x3A646564616F6C20;
  v8._object = (void *)0xE900000000000020;
  String.append(_:)(v8);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  v10 = (v9 & 1) == 0;
  if ((v9 & 1) != 0)
    v11 = 1702195828;
  else
    v11 = 0x65736C6166;
  if (v10)
    v12 = 0xE500000000000000;
  else
    v12 = 0xE400000000000000;
  v13 = v12;
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease(v12);
  v14._countAndFlagsBits = 0x6C616E6964726F20;
  v14._object = (void *)0xE900000000000020;
  String.append(_:)(v14);
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17._countAndFlagsBits = 0x746E65746E6F6320;
  v17._object = (void *)0xEE00203A77656956;
  String.append(_:)(v17);

  v18._object = (void *)0x80000000002CFD00;
  v18._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v18);
  v19._countAndFlagsBits = 62;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  return 60;
}

_QWORD *sub_1B86F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat *v20;
  _QWORD *v21;
  CGFloat *v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  unint64_t v31;
  unint64_t v32;
  _QWORD v34[4];
  _QWORD v35[5];
  _QWORD v36[5];
  char v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  v34[2] = a3;
  v34[3] = a4;
  v7 = sub_1B8148((void (*)(uint64_t *__return_ptr, _OWORD *))sub_1B9C44, (uint64_t)v34, a1);
  if ((a2 & 1) != 0)
  {
    v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "bounds");
      v35[0] = v9;
      v35[1] = v10;
      v35[2] = v11;
      v35[3] = v12;
      v35[4] = v13;
      (*(void (**)(_QWORD *__return_ptr, _QWORD *, uint64_t, uint64_t))(a4 + 288))(v36, v35, a3, a4);
      if ((v37 & 1) != 0)
      {

      }
      else
      {
        v14 = v7[2];
        if (v14)
        {
          v15 = v36[0];
          v17 = *(double *)&v36[3];
          v16 = *(double *)&v36[4];
          v19 = *(double *)&v36[1];
          v18 = *(double *)&v36[2];
          swift_bridgeObjectRetain(v7);
          v20 = (CGFloat *)(v7 + 8);
          v21 = _swiftEmptyArrayStorage;
          do
          {
            if (*((_QWORD *)v20 - 4) == v15)
            {
              v24 = *(v20 - 1);
              v23 = *v20;
              v26 = *(v20 - 3);
              v25 = *(v20 - 2);
              v38.origin.x = v26;
              v38.origin.y = v25;
              v38.size.width = v24;
              v38.size.height = *v20;
              v41.origin.x = v19;
              v41.origin.y = v18;
              v41.size.width = v17;
              v41.size.height = v16;
              if (CGRectIntersectsRect(v38, v41))
              {
                v39.origin.x = v26;
                v39.origin.y = v25;
                v39.size.width = v24;
                v39.size.height = v23;
                v42.origin.x = v19;
                v42.origin.y = v18;
                v42.size.width = v17;
                v42.size.height = v16;
                v40 = CGRectIntersection(v39, v42);
                x = v40.origin.x;
                y = v40.origin.y;
                width = v40.size.width;
                height = v40.size.height;
                if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
                  v21 = sub_42500(0, v21[2] + 1, 1, v21);
                v32 = v21[2];
                v31 = v21[3];
                if (v32 >= v31 >> 1)
                  v21 = sub_42500((_QWORD *)(v31 > 1), v32 + 1, 1, v21);
                v21[2] = v32 + 1;
                v22 = (CGFloat *)&v21[5 * v32];
                *((_QWORD *)v22 + 4) = v15;
                v22[5] = x;
                v22[6] = y;
                v22[7] = width;
                v22[8] = height;
              }
            }
            v20 += 5;
            --v14;
          }
          while (v14);

          swift_bridgeObjectRelease_n(v7, 2);
          return v21;
        }
        else
        {
          swift_bridgeObjectRelease(v7);

          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return v7;
}

void sub_1B892C()
{
  __asm { BR              X10 }
}

unint64_t sub_1B8964()
{
  _QWORD *v0;
  char v1;
  id v2;
  unint64_t result;

  v2 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v1 & 1);
  result = sub_1B9DC4();
  v0[3] = result;
  *v0 = v2;
  return result;
}

_QWORD *Array<A>.ordinals()(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v1 = sub_1B7EFC(a1);
  v2 = sub_1B8004((uint64_t)v1);
  swift_bridgeObjectRelease(v1);
  return v2;
}

uint64_t ContentLoadingDocument.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  Swift::String v12;
  Swift::String v13;
  void *v14;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  Swift::String v24;
  Swift::String v25;
  void *v26;
  Swift::String v27;
  unint64_t v28;
  Swift::String v29;
  void *v30;
  __n128 v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v4 = type metadata accessor for URL(0);
  v33 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = 0;
  v36 = 0xE000000000000000;
  _StringGuts.grow(_:)(126);
  v7._countAndFlagsBits = 60;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 0xD000000000000016;
  v8._object = (void *)0x80000000002F1720;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 0x7361202020200A3ELL;
  v9._object = (void *)0xEF203A4449746573;
  String.append(_:)(v9);
  v10._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  v12._countAndFlagsBits = 0x657268202020200ALL;
  v12._object = (void *)0xEB00000000203A66;
  String.append(_:)(v12);
  v13._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v14 = v13._object;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v14);
  v15._countAndFlagsBits = 0xD000000000000011;
  v15._object = (void *)0x80000000002CFD20;
  String.append(_:)(v15);
  v16._countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  v17 = v16._object;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v17);
  v18._countAndFlagsBits = 0x64726F202020200ALL;
  v18._object = (void *)0xEE00203A6C616E69;
  String.append(_:)(v18);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v20 = v19._object;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v20);
  v21._countAndFlagsBits = 0xD00000000000001ALL;
  v21._object = (void *)0x80000000002CFD40;
  String.append(_:)(v21);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt, &protocol witness table for UInt);
  v23 = v22._object;
  String.append(_:)(v22);
  swift_bridgeObjectRelease(v23);
  v24._object = (void *)0x80000000002CD000;
  v24._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v24);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  v25._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v26 = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(v26);
  v27._countAndFlagsBits = 0x6C7275202020200ALL;
  v27._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v27);
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  v28 = sub_1B9768();
  v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v28);
  v30 = v29._object;
  String.append(_:)(v29);
  v31 = swift_bridgeObjectRelease(v30);
  (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v6, v4, v31);
  return v35;
}

BOOL static _ContentLoadingSelection.== infix(_:_:)(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a2[1];
  v8 = a2[2];
  v9 = v4 == *a2 && v5 == v7;
  return (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v7, 0) & 1) != 0) && sub_65864(v6, v8);
}

uint64_t sub_1B8E30(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a4;
  *(_BYTE *)(v6 + 128) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = static MainActor.shared.getter();
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 80) = v8;
  *(_QWORD *)(v6 + 88) = v9;
  return swift_task_switch(sub_1B8EAC, v8, v9);
}

uint64_t sub_1B8EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v9 = *(_OWORD *)(v0 + 40);
  v4 = static MainActor.shared.getter();
  *(_QWORD *)(v0 + 96) = v4;
  v5 = swift_task_alloc(64);
  *(_QWORD *)(v0 + 104) = v5;
  *(_OWORD *)(v5 + 16) = v9;
  *(_QWORD *)(v5 + 32) = v1;
  *(_QWORD *)(v5 + 40) = v3;
  *(_QWORD *)(v5 + 48) = v2;
  v6 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 112) = v6;
  v7 = sub_319AC(&qword_3BE1C8);
  *v6 = v0;
  v6[1] = sub_1B8F94;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, v4, &protocol witness table for MainActor, 0xD00000000000001ELL, 0x80000000002CFDA0, sub_1B9C34, v5, v7);
}

uint64_t sub_1B8F94()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1B9080;
  }
  else
  {
    v7 = v2[13];
    swift_release(v2[12]);
    swift_task_dealloc(v7);
    v4 = v2[10];
    v5 = v2[11];
    v6 = sub_1B9008;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1B9008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_BYTE *)(v0 + 128);
  swift_release(*(_QWORD *)(v0 + 72));
  v4 = *(_QWORD *)(v0 + 16);
  v5 = sub_1B86F4(v4, v3, v2, v1);
  v6 = swift_bridgeObjectRelease(v4);
  return (*(uint64_t (**)(_QWORD *, __n128))(v0 + 8))(v5, v6);
}

uint64_t sub_1B9080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1B90C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  uint64_t v18;

  v18 = a5;
  v10 = sub_319AC(&qword_3C0B48);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_387458, v14 + v12, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t, char), uint64_t, uint64_t, uint64_t))(a6 + 248))(a3, a4, sub_1B9CE4, v15, v18, a6);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1B91D8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v5 = a1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain();
    v4 = sub_319AC(&qword_3C0B48);
    return CheckedContinuation.resume(throwing:)(&v5, v4);
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v2 = sub_319AC(&qword_3C0B48);
    return CheckedContinuation.resume(returning:)(&v5, v2);
  }
}

uint64_t ContentLoading.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::String v5;
  uint64_t ObjectType;
  Swift::String v7;
  void *object;
  Swift::String v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Swift::String v15;
  void *v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  Swift::String v26;
  Swift::String v27;
  char v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v36 = 0;
  v37 = 0xE000000000000000;
  _StringGuts.grow(_:)(80);
  v40 = 0;
  v41 = 0xE000000000000000;
  v5._countAndFlagsBits = 60;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  ObjectType = swift_getObjectType(v2);
  v7._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._object = (void *)0x80000000002CFD60;
  v9._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v9);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 40))(&v36, a1, a2);
  v10 = v38;
  if (v38)
  {
    v11 = v39;
    sub_472D0(&v36, v38);
    v10 = ContentLoadingDocument.description.getter(v10, v11);
    v13 = v12;
    sub_34488(&v36);
  }
  else
  {
    sub_107030((uint64_t)&v36);
    v13 = 0;
  }
  v36 = v10;
  v37 = v13;
  v14 = sub_319AC((uint64_t *)&unk_3BBB20);
  v15._countAndFlagsBits = String.init<A>(describing:)(&v36, v14);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  v17._countAndFlagsBits = 0xD000000000000016;
  v17._object = (void *)0x80000000002CFD80;
  String.append(_:)(v17);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  if (v18)
  {
    v20 = v18;
    v21 = v19;
    v22 = swift_getObjectType(v18);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 184))(v22, v21);
    v25 = v24;
    swift_unknownObjectRelease(v20);
  }
  else
  {
    v25 = (void *)0xE600000000000000;
    v23 = 0x7D656E6F6E7BLL;
  }
  v26._countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v25);
  v27._countAndFlagsBits = 0x616F6C202020200ALL;
  v27._object = (void *)0xED0000203A646564;
  String.append(_:)(v27);
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  v29 = (v28 & 1) == 0;
  if ((v28 & 1) != 0)
    v30 = 1702195828;
  else
    v30 = 0x65736C6166;
  if (v29)
    v31 = 0xE500000000000000;
  else
    v31 = 0xE400000000000000;
  v32 = v31;
  String.append(_:)(*(Swift::String *)&v30);
  swift_bridgeObjectRelease(v31);
  v33._countAndFlagsBits = 0xD000000000000012;
  v33._object = (void *)0x80000000002C86D0;
  String.append(_:)(v33);

  v34._countAndFlagsBits = 0xD00000000000001BLL;
  v34._object = (void *)0x80000000002CFD00;
  String.append(_:)(v34);
  return v40;
}

uint64_t _s8BookEPUB31ContentLoadingAccessibilityKeysO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  double v4;
  int v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;

  v2 = *(uint64_t *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(double *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  v6 = sub_319AC(&qword_3C0B50);
  if (!v3)
  {
    if (!v5)
    {
      v7 = *(double *)&v2 == v4;
LABEL_8:
      v8 = v7;
      return v8 & 1;
    }
    goto LABEL_12;
  }
  if (!v5)
    goto LABEL_12;
  if (v5 == 1)
  {
    if (v3 == 1)
    {
LABEL_5:
      v7 = *(double *)&v2 == v4;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
    goto LABEL_12;
  v8 = 0;
  if (v3 == 2 || v5 == 2)
    return v8 & 1;
  if (v5 == 3)
  {
    v8 = ((v2 & 1) == 0) ^ LOBYTE(v4);
    if (v3 != 3)
      v8 = 0;
    return v8 & 1;
  }
  if (v3 == 3)
  {
LABEL_12:
    v8 = 0;
    return v8 & 1;
  }
  if (v5 == 4)
  {
    if (v3 == 4)
      return sub_657A0((_QWORD *)v2, *(_QWORD **)&v4);
    goto LABEL_12;
  }
  if (v3 == 4)
    goto LABEL_12;
  if (v5 == 5)
  {
    if (v3 != 5)
      goto LABEL_12;
LABEL_27:
    v8 = ((v2 & 1) == 0) ^ LOBYTE(v4);
    return v8 & 1;
  }
  if (v3 == 5)
    goto LABEL_12;
  if (v5 == 6)
  {
    if (v3 != 6)
      goto LABEL_12;
    goto LABEL_27;
  }
  if (v3 == 6)
    goto LABEL_12;
  if (v5 == 7)
  {
    if (v3 != 7)
      goto LABEL_12;
    goto LABEL_27;
  }
  v10 = v6;
  if (v3 == 7)
    goto LABEL_12;
  if (v5 == 8)
  {
    if (v3 != 8)
      goto LABEL_12;
    goto LABEL_27;
  }
  if (v3 == 8)
    goto LABEL_12;
  if (v5 == 9)
  {
    if (v3 != 9)
      goto LABEL_12;
    goto LABEL_27;
  }
  if (v3 == 9)
    goto LABEL_12;
  if (v5 == 10)
  {
    if (v3 != 10)
      goto LABEL_12;
    goto LABEL_27;
  }
  if (v3 == 10)
    goto LABEL_12;
  if (v5 == 13 && v4 == 0.0 && v3 == 13 && *(double *)&v2 == 0.0)
    goto LABEL_53;
  if (v3 == 13 && *(double *)&v2 == 0.0)
    goto LABEL_12;
  if (v5 == 13)
  {
    if (v4 == 0.0)
      goto LABEL_12;
    if (*(_QWORD *)&v4 == 1 && v3 == 13 && v2 == 1)
    {
LABEL_53:
      v8 = 1;
      return v8 & 1;
    }
  }
  if (v3 == 13 && v2 == 1)
    goto LABEL_12;
  if (v5 == 11)
  {
    if (v3 == 11)
      goto LABEL_5;
    if (v3 == 12)
      goto LABEL_12;
  }
  else if (v5 == 12)
  {
    if (v3 == 11)
      goto LABEL_12;
    if (v3 == 12)
      goto LABEL_5;
  }
  else
  {
    if (v5 == 13 && *(_QWORD *)&v4 == 1)
      goto LABEL_12;
    sub_3F1E4(v2, v3);
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v10, v10);
  __break(1u);
  return result;
}

unint64_t sub_1B9768()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3B8C68;
  if (!qword_3B8C68)
  {
    v1 = type metadata accessor for URL(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_3B8C68);
  }
  return result;
}

unint64_t sub_1B97B4()
{
  unint64_t result;

  result = qword_3C0B30;
  if (!qword_3C0B30)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentLoadingResult, &type metadata for ContentLoadingResult);
    atomic_store(result, (unint64_t *)&qword_3C0B30);
  }
  return result;
}

unint64_t sub_1B97FC()
{
  unint64_t result;

  result = qword_3C0B38;
  if (!qword_3C0B38)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentLoadingError, &type metadata for ContentLoadingError);
    atomic_store(result, &qword_3C0B38);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ContentLoadingAccessibilityKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_3F1E4(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ContentLoadingAccessibilityKeys(uint64_t a1)
{
  return sub_86CB8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for ContentLoadingAccessibilityKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_3F1E4(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_86CB8(v5, v6);
  return a1;
}

uint64_t assignWithTake for ContentLoadingAccessibilityKeys(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_86CB8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentLoadingAccessibilityKeys(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF3 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 243);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 0xD)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentLoadingAccessibilityKeys(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 243;
    if (a3 >= 0xF3)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xF3)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1B99AC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 0xCu)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 13);
}

uint64_t sub_1B99C4(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xD)
  {
    *(_QWORD *)result = a2 - 13;
    LOBYTE(a2) = 13;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContentLoadingAccessibilityKeys()
{
  return &type metadata for ContentLoadingAccessibilityKeys;
}

uint64_t dispatch thunk of ContentLoadingDocument.pageProgressDirection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))() & 1;
}

uint64_t storeEnumTagSinglePayload for ContentLoadingResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B9A5C + 4 * byte_2F1731[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B9A90 + 4 * byte_2F172C[v4]))();
}

uint64_t sub_1B9A90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B9A98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B9AA0);
  return result;
}

uint64_t sub_1B9AAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B9AB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B9AB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B9AC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentLoadingResult()
{
  return &type metadata for ContentLoadingResult;
}

uint64_t storeEnumTagSinglePayload for ContentLoadingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B9B28 + 4 * byte_2F173B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B9B5C + 4 * byte_2F1736[v4]))();
}

uint64_t sub_1B9B5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B9B64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B9B6CLL);
  return result;
}

uint64_t sub_1B9B78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B9B80);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B9B84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B9B8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentLoadingError()
{
  return &type metadata for ContentLoadingError;
}

ValueMetadata *type metadata accessor for _ContentLoadingSelection()
{
  return &type metadata for _ContentLoadingSelection;
}

uint64_t dispatch thunk of ContentLoading.ordinal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContentLoading.init(layoutProvider:contentMediator:paginatingService:stylesheetProvider:contentLoaderViewReusePool:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 152))();
}

uint64_t dispatch thunk of ContentLoading.load(document:layoutProvider:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 200))();
}

uint64_t dispatch thunk of ContentLoading.reloadDocument(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 208))();
}

uint64_t dispatch thunk of ContentLoading.updateStyle(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 216))();
}

uint64_t dispatch thunk of ContentLoading.move(to:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 224))();
}

uint64_t dispatch thunk of ContentLoading.selectText(cfi:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 240))();
}

uint64_t dispatch thunk of ContentLoading.rects(from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 248))();
}

uint64_t dispatch thunk of ContentLoading.updateAccessibilityValue(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of ContentLoading.updateImageFiltering(theme:filterMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 328))();
}

uint64_t dispatch thunk of ContentLoading.dismissInteractionMenus()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

double sub_1B9C34(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B90C8(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_1B9C44(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, double, double, double, double))(*(_QWORD *)(v1 + 24) + 264))(*(_QWORD *)(v1 + 16), *a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1B9C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_319AC(&qword_3C0B48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1B9CE4(uint64_t a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_319AC(&qword_3C0B48);
  return sub_1B91D8(a1, v3);
}

uint64_t sub_1B9D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3B8990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B9D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_319AC(&qword_3B8990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1B9DC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3B8EF0;
  if (!qword_3B8EF0)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_3B8EF0);
  }
  return result;
}

_QWORD *sub_1B9E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = a1;
  v3 = type metadata accessor for SearchResultEntity(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = *(_QWORD *)(v4 + 72);
  v18 = v3;
  swift_bridgeObjectRetain(v2);
  v6 = _swiftEmptyArrayStorage;
  v16 = v2;
  do
  {
    v8 = (uint64_t *)(v2 + v5 + *(int *)(v18 + 28));
    v9 = v8[1];
    if (v9)
    {
      v10 = v8[2];
      v11 = v8[3];
      v12 = v8[4];
      v20 = *v8;
      v19 = v8[5];
      sub_44870(*v8, v9, v10, v11, v12, v19);
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_43050(0, v6[2] + 1, 1, v6);
      v14 = v6[2];
      v13 = v6[3];
      if (v14 >= v13 >> 1)
        v6 = sub_43050((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
      v6[2] = v14 + 1;
      v7 = &v6[6 * v14];
      v7[4] = v20;
      v7[5] = v9;
      v7[6] = v10;
      v7[7] = v11;
      v7[8] = v12;
      v7[9] = v19;
      v2 = v16;
    }
    v5 += v17;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease(v2);
  return v6;
}

uint64_t SearchViewModel.__allocating_init(searchText:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48));
  SearchViewModel.init(searchText:)(a1, a2);
  return v5;
}

uint64_t sub_1B9FC4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_39F48(a1, (uint64_t)&unk_2F1C80, (uint64_t)&unk_2F1CA8, a2);
}

uint64_t sub_1B9FD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2F1C80);
  v5 = swift_getKeyPath(&unk_2F1CA8);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1BA050@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA224(a1, (uint64_t)&unk_2F19B0, (uint64_t)&unk_2F19D8, a2);
}

uint64_t sub_1BA064(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA2B0(a1, a2, a3, a4, (uint64_t)&unk_2F19B0, (uint64_t)&unk_2F19D8);
}

uint64_t sub_1BA078()
{
  return sub_1BA330((uint64_t)&unk_2F19B0, (uint64_t)&unk_2F19D8);
}

uint64_t sub_1BA08C(char a1)
{
  return sub_1BA3AC(a1, (uint64_t)&unk_2F19B0, (uint64_t)&unk_2F19D8);
}

uint64_t (*sub_1BA0A0(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F19B0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F19D8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BA118()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__becomeFirstResponder, (uint64_t *)&unk_3B8E70);
}

uint64_t sub_1BA12C(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3B8E20, &OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__becomeFirstResponder, (uint64_t *)&unk_3B8E70);
}

void (*sub_1BA148(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3B8E20);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__becomeFirstResponder;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC((uint64_t *)&unk_3B8E70);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

uint64_t sub_1BA210@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA224(a1, (uint64_t)&unk_2F19F8, (uint64_t)&unk_2F1A20, a2);
}

uint64_t sub_1BA224@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath);
  swift_release(v8);
  result = swift_release(KeyPath);
  *a4 = v10;
  return result;
}

uint64_t sub_1BA29C(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA2B0(a1, a2, a3, a4, (uint64_t)&unk_2F19F8, (uint64_t)&unk_2F1A20);
}

uint64_t sub_1BA2B0(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t sub_1BA31C()
{
  return sub_1BA330((uint64_t)&unk_2F19F8, (uint64_t)&unk_2F1A20);
}

uint64_t sub_1BA330(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t sub_1BA398(char a1)
{
  return sub_1BA3AC(a1, (uint64_t)&unk_2F19F8, (uint64_t)&unk_2F1A20);
}

uint64_t sub_1BA3AC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;
  char v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  swift_retain(v3);
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

uint64_t (*sub_1BA414(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F19F8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1A20);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BA48C()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__resignFirstResponder, (uint64_t *)&unk_3B8E70);
}

uint64_t sub_1BA4A0(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3B8E20, &OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__resignFirstResponder, (uint64_t *)&unk_3B8E70);
}

void (*sub_1BA4BC(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3B8E20);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__resignFirstResponder;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC((uint64_t *)&unk_3B8E70);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

uint64_t sub_1BA584()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState_isFirstResponder);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState_isFirstResponder, v3, 0, 0);
  return *v1;
}

void sub_1BA5C8(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState_isFirstResponder);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = a1;
}

uint64_t (*sub_1BA610(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState_isFirstResponder, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t SearchBarResponderState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__becomeFirstResponder;
  v2 = sub_319AC((uint64_t *)&unk_3B8E70);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__resignFirstResponder, v2);
  return v0;
}

uint64_t SearchBarResponderState.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__becomeFirstResponder;
  v2 = sub_319AC((uint64_t *)&unk_3B8E70);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__resignFirstResponder, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1BA730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SearchBarResponderState(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

BOOL static SearchViewModel.LoadingDetail.== infix(_:_:)(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
  {
    if (a1)
    {
      if (a1 == 1)
      {
        if ((a4 & 1) != 0 && a3 == 1)
          return 1;
      }
      else if ((a4 & 1) != 0 && a3 >= 2)
      {
        return 1;
      }
    }
    else if ((a4 & 1) != 0 && !a3)
    {
      return 1;
    }
  }
  else if ((a4 & 1) == 0)
  {
    return a1 == a3;
  }
  return 0;
}

BOOL sub_1BA7CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  BOOL v4;
  char v6;
  char v7;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if (*((_BYTE *)a1 + 8) != 1)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1)
        v7 = *(_BYTE *)(a2 + 8);
      else
        v7 = 0;
      return (v7 & 1) != 0;
    }
    v4 = v3 == 1;
  }
  else
  {
    v4 = v3 == 0;
  }
  if (v4)
    v6 = *(_BYTE *)(a2 + 8);
  else
    v6 = 0;
  return (v6 & 1) != 0;
}

uint64_t sub_1BA830()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2F1A40);
  v2 = swift_getKeyPath(&unk_2F1A68);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1BA8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  KeyPath = swift_getKeyPath(&unk_2F1A40);
  v6 = swift_getKeyPath(&unk_2F1A68);
  v8[0] = a1;
  v8[1] = a2;
  swift_retain(v2);
  return static Published.subscript.setter(v8, v2, KeyPath, v6);
}

uint64_t (*sub_1BA918(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F1A40);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1A68);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BA990()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchText, &qword_3B5CD0);
}

uint64_t sub_1BA9A4(uint64_t a1)
{
  return sub_3A41C(a1, (uint64_t *)&unk_3B82E0, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchText, &qword_3B5CD0);
}

void (*sub_1BA9C0(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC((uint64_t *)&unk_3B82E0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchText;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3B5CD0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

BOOL sub_1BAA88()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;

  KeyPath = swift_getKeyPath(&unk_2F1A40);
  v2 = swift_getKeyPath(&unk_2F1A68);
  static Published.subscript.getter(&v7, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  v4 = v7;
  v3 = v8;
  swift_bridgeObjectRelease(v8);
  v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v5 = v4 & 0xFFFFFFFFFFFFLL;
  return v5 == 0;
}

uint64_t sub_1BAB18@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_39F48(a1, (uint64_t)&unk_2F1A88, (uint64_t)&unk_2F1AB0, a2);
}

void sub_1BAB2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2F1A88);
  v5 = swift_getKeyPath(&unk_2F1AB0);
  v6 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain();
  static Published.subscript.setter(&v6, v3, KeyPath, v5);
  sub_1BD3C8();
}

uint64_t sub_1BABA8()
{
  return sub_3A05C((uint64_t)&unk_2F1A88, (uint64_t)&unk_2F1AB0);
}

void sub_1BABBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_2F1A88);
  v4 = swift_getKeyPath(&unk_2F1AB0);
  v5 = a1;
  swift_retain();
  static Published.subscript.setter(&v5, v1, KeyPath, v4);
  sub_1BD3C8();
}

void (*sub_1BAC2C(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;

  v3 = a1 + 1;
  a1[2] = v1;
  KeyPath = swift_getKeyPath(&unk_2F1A88);
  swift_getKeyPath(&unk_2F1AB0);
  static Published.subscript.getter(v3, v1, KeyPath);
  swift_release();
  swift_release();
  *a1 = a1[1];
  return sub_1BACB8;
}

void sub_1BACB8(_QWORD *a1, char a2)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;

  v4 = *a1;
  KeyPath = swift_getKeyPath(&unk_2F1A88);
  v6 = swift_getKeyPath(&unk_2F1AB0);
  a1[1] = v4;
  v7 = a1[2];
  swift_retain();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(v4);
    static Published.subscript.setter(a1 + 1, v7, KeyPath, v6);
    sub_1BD3C8();
    swift_bridgeObjectRelease(*a1);
  }
  else
  {
    static Published.subscript.setter(a1 + 1, v7, KeyPath, v6);
    sub_1BD3C8();
  }
}

uint64_t sub_1BAD88()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchResults, &qword_3C0B80);
}

uint64_t sub_1BAD9C(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3C0B88, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchResults, &qword_3C0B80);
}

void (*sub_1BADB8(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3C0B88);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchResults;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3C0B80);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

uint64_t sub_1BAE80@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2F1AD0);
  v5 = swift_getKeyPath(&unk_2F1AF8);
  static Published.subscript.getter(&v7, v3, KeyPath);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_1BAEFC(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2F1AD0);
  v5 = swift_getKeyPath(&unk_2F1AF8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1BAF6C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2F1AD0);
  v2 = swift_getKeyPath(&unk_2F1AF8);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1BAFDC(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  char v6;

  KeyPath = swift_getKeyPath(&unk_2F1AD0);
  v4 = swift_getKeyPath(&unk_2F1AF8);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t (*sub_1BB048(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F1AD0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1AF8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BB0C0()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingTitle, &qword_3C0B98);
}

uint64_t sub_1BB0D4(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3C0BA0, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingTitle, &qword_3C0B98);
}

void (*sub_1BB0F0(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3C0BA0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingTitle;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3C0B98);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

uint64_t sub_1BB1B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2F1B18);
  v5 = swift_getKeyPath(&unk_2F1B40);
  static Published.subscript.getter(&v8, v3, KeyPath);
  swift_release(v5);
  result = swift_release(KeyPath);
  v7 = v9;
  *(_QWORD *)a2 = v8;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_1BB23C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_2F1B18);
  v6 = swift_getKeyPath(&unk_2F1B40);
  v8 = v2;
  v9 = v3;
  swift_retain(v4);
  return static Published.subscript.setter(&v8, v4, KeyPath, v6);
}

uint64_t sub_1BB2BC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2F1B18);
  v2 = swift_getKeyPath(&unk_2F1B40);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1BB330(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v8;
  char v9;

  KeyPath = swift_getKeyPath(&unk_2F1B18);
  v6 = swift_getKeyPath(&unk_2F1B40);
  v8 = a1;
  v9 = a2 & 1;
  swift_retain(v2);
  return static Published.subscript.setter(&v8, v2, KeyPath, v6);
}

uint64_t (*sub_1BB3B0(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F1B18);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1B40);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BB428()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingDetail, &qword_3C0BB0);
}

uint64_t sub_1BB43C(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3C0BB8, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingDetail, &qword_3C0BB0);
}

void (*sub_1BB458(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3C0BB8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingDetail;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3C0BB0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

double sub_1BB520@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  char v7;
  double result;
  __int128 v9;
  uint64_t v10;
  char v11;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2F1B60);
  v5 = swift_getKeyPath(&unk_2F1B88);
  static Published.subscript.getter(&v9, v3, KeyPath);
  swift_release(v5);
  swift_release(KeyPath);
  v6 = v10;
  v7 = v11;
  result = *(double *)&v9;
  *(_OWORD *)a2 = v9;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  return result;
}

uint64_t sub_1BB5AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t KeyPath;
  uint64_t v8;
  _QWORD v10[3];
  unsigned __int8 v11;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *a2;
  v6 = *(_BYTE *)(a1 + 24);
  KeyPath = swift_getKeyPath(&unk_2F1B60);
  v8 = swift_getKeyPath(&unk_2F1B88);
  v10[0] = v2;
  v10[1] = v3;
  v10[2] = v4;
  v11 = v6;
  sub_1BE5C4(v2, v3, v4, v6);
  swift_retain();
  return static Published.subscript.setter(v10, v5, KeyPath, v8);
}

uint64_t sub_1BB650()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2F1B60);
  v2 = swift_getKeyPath(&unk_2F1B88);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1BB6C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v10;
  _QWORD v12[3];
  char v13;

  KeyPath = swift_getKeyPath(&unk_2F1B60);
  v10 = swift_getKeyPath(&unk_2F1B88);
  v12[0] = a1;
  v12[1] = a2;
  v12[2] = a3;
  v13 = a4;
  swift_retain(v4);
  return static Published.subscript.setter(v12, v4, KeyPath, v10);
}

uint64_t (*sub_1BB758(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F1B60);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1B88);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BB7D0()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchPage, &qword_3C0BC8);
}

uint64_t sub_1BB7E4(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3C0BD0, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchPage, &qword_3C0BC8);
}

void (*sub_1BB800(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3C0BD0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchPage;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3C0BC8);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

uint64_t sub_1BB8C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BBA9C(a1, (uint64_t)&unk_2F1BA8, (uint64_t)&unk_2F1BD0, a2);
}

uint64_t sub_1BB8DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BBB14(a1, a2, a3, a4, (uint64_t)&unk_2F1BA8, (uint64_t)&unk_2F1BD0);
}

uint64_t sub_1BB8F0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BBC10((uint64_t)&unk_2F1BA8, (uint64_t)&unk_2F1BD0, a1);
}

uint64_t sub_1BB904(uint64_t a1)
{
  return sub_1BBC80(a1, (uint64_t)&unk_2F1BA8, (uint64_t)&unk_2F1BD0);
}

uint64_t (*sub_1BB918(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F1BA8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1BD0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BB990()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__wikipediaLink, &qword_3C0BE0);
}

uint64_t sub_1BB9A4(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3C0BE8, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__wikipediaLink, &qword_3C0BE0);
}

void (*sub_1BB9C0(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3C0BE8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__wikipediaLink;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3C0BE0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

uint64_t sub_1BBA88@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BBA9C(a1, (uint64_t)&unk_2F1BF0, (uint64_t)&unk_2F1C18, a2);
}

uint64_t sub_1BBA9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(a4, v6, KeyPath);
  swift_release(v8);
  return swift_release(KeyPath);
}

uint64_t sub_1BBB00(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BBB14(a1, a2, a3, a4, (uint64_t)&unk_2F1BF0, (uint64_t)&unk_2F1C18);
}

uint64_t sub_1BBB14(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v20;

  v10 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v20 - v14;
  sub_AA740(a1, (uint64_t)&v20 - v14);
  v16 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v18 = swift_getKeyPath(a6);
  sub_AA740((uint64_t)v15, (uint64_t)v12);
  swift_retain();
  static Published.subscript.setter(v12, v16, KeyPath, v18);
  return sub_AA788((uint64_t)v15);
}

uint64_t sub_1BBBFC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BBC10((uint64_t)&unk_2F1BF0, (uint64_t)&unk_2F1C18, a1);
}

uint64_t sub_1BBC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = swift_getKeyPath(a2);
  static Published.subscript.getter(a3, v3, KeyPath);
  swift_release(v7);
  return swift_release(KeyPath);
}

uint64_t sub_1BBC6C(uint64_t a1)
{
  return sub_1BBC80(a1, (uint64_t)&unk_2F1BF0, (uint64_t)&unk_2F1C18);
}

uint64_t sub_1BBC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v13;

  v7 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2);
  v11 = swift_getKeyPath(a3);
  sub_AA740(a1, (uint64_t)v9);
  swift_retain();
  static Published.subscript.setter(v9, v3, KeyPath, v11);
  return sub_AA788(a1);
}

uint64_t (*sub_1BBD38(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F1BF0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1C18);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BBDB0()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__webSearchLink, &qword_3C0BE0);
}

uint64_t sub_1BBDC4(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3C0BE8, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__webSearchLink, &qword_3C0BE0);
}

void (*sub_1BBDE0(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3C0BE8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__webSearchLink;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3C0BE0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

uint64_t sub_1BBEA8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_2F1C38);
  v5 = swift_getKeyPath(&unk_2F1C60);
  static Published.subscript.getter(&v7, v3, KeyPath);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_1BBF24(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_2F1C38);
  v5 = swift_getKeyPath(&unk_2F1C60);
  v7 = v2;
  swift_retain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1BBF9C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_2F1C38);
  v2 = swift_getKeyPath(&unk_2F1C60);
  static Published.subscript.getter(&v4, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1BC00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_2F1C38);
  v4 = swift_getKeyPath(&unk_2F1C60);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t (*sub_1BC078(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F1C38);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1C60);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BC0F0()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__responderState, &qword_3C0C00);
}

uint64_t sub_1BC104(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3C0C08, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__responderState, &qword_3C0C00);
}

void (*sub_1BC120(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3C0C08);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__responderState;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3C0C00);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

uint64_t sub_1BC1E8()
{
  return sub_3A05C((uint64_t)&unk_2F1C80, (uint64_t)&unk_2F1CA8);
}

uint64_t sub_1BC1FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_2F1C80);
  v4 = swift_getKeyPath(&unk_2F1CA8);
  v6 = a1;
  swift_retain(v1);
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t (*sub_1BC268(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_2F1C80);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_2F1CA8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_37800;
}

uint64_t sub_1BC2E0()
{
  return sub_3A39C(&OBJC_IVAR____TtC8BookEPUB15SearchViewModel__recentSearchTexts, &qword_3C0C18);
}

uint64_t sub_1BC2F4(uint64_t a1)
{
  return sub_3A41C(a1, &qword_3C0C20, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__recentSearchTexts, &qword_3C0C18);
}

void (*sub_1BC310(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_319AC(&qword_3C0C20);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel__recentSearchTexts;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_319AC(&qword_3C0C18);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_378FC;
}

double sub_1BC3D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  char v8[24];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_layoutManager);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_layoutManager) = a1;
  swift_retain();
  if (v3)
  {
    if (a1 && v3 == a1)
      goto LABEL_4;
  }
  else if (!a1)
  {
LABEL_4:
    swift_release();
    *(_QWORD *)&result = swift_release().n128_u64[0];
    return result;
  }
  v5 = sub_382C8((uint64_t)_swiftEmptyArrayStorage);
  v6 = (unint64_t *)(v1 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_alignedPassageCache);
  swift_beginAccess(v6, v8, 1, 0);
  v7 = *v6;
  *v6 = v5;
  swift_release();
  swift_release();
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

uint64_t SearchViewModel.init(searchText:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[2];
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;

  v67 = a1;
  v68 = a2;
  v3 = sub_319AC(&qword_3C0C18);
  v65 = *(_QWORD *)(v3 - 8);
  v66 = v3;
  __chkstk_darwin(v3);
  v64 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_319AC(&qword_3C0C00);
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  __chkstk_darwin(v5);
  v61 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_319AC(&qword_3C0BE0);
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  __chkstk_darwin(v7);
  v58 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v57);
  v56 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  v13 = sub_319AC(&qword_3C0BC8);
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  __chkstk_darwin(v13);
  v53 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_319AC(&qword_3C0BB0);
  v51 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_319AC(&qword_3C0B98);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_319AC(&qword_3C0B80);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchResults;
  v70 = _swiftEmptyArrayStorage;
  v26 = sub_319AC(&qword_3C0C28);
  Published.init(initialValue:)(&v70, v26);
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v24, v21);
  v27 = v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingTitle;
  LOBYTE(v70) = 0;
  Published.init(initialValue:)(&v70, &type metadata for SearchViewModel.LoadingTitle);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v27, v20, v17);
  v28 = v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingDetail;
  v70 = 0;
  LOBYTE(v71) = 1;
  Published.init(initialValue:)(&v70, &type metadata for SearchViewModel.LoadingDetail);
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v28, v16, v52);
  v29 = v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchPage;
  v70 = 0;
  v71 = 0;
  v72 = 0;
  v73 = -1;
  v30 = sub_319AC(&qword_3C0C30);
  v31 = v53;
  Published.init(initialValue:)(&v70, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v29, v31, v55);
  v32 = v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__wikipediaLink;
  v33 = type metadata accessor for URL(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v34(v12, 1, 1, v33);
  v35 = v56;
  sub_AA740((uint64_t)v12, v56);
  v37 = v57;
  v36 = v58;
  Published.init(initialValue:)(v35, v57);
  sub_AA788((uint64_t)v12);
  v38 = v60;
  v39 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 32);
  v39(v32, v36, v60);
  v40 = v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__webSearchLink;
  v34(v12, 1, 1, v33);
  sub_AA740((uint64_t)v12, v35);
  Published.init(initialValue:)(v35, v37);
  sub_AA788((uint64_t)v12);
  v39(v40, v36, v38);
  v41 = v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__responderState;
  v42 = type metadata accessor for SearchBarResponderState(0);
  v43 = swift_allocObject(v42, *(unsigned int *)(v42 + 48));
  LOBYTE(v70) = 0;
  Published.init(initialValue:)(&v70, &type metadata for Bool);
  LOBYTE(v70) = 0;
  Published.init(initialValue:)(&v70, &type metadata for Bool);
  *(_BYTE *)(v43 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState_isFirstResponder) = 0;
  v70 = (_QWORD *)v43;
  v44 = v61;
  Published.init(initialValue:)(&v70, v42);
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v41, v44, v63);
  v45 = v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__recentSearchTexts;
  v70 = _swiftEmptyArrayStorage;
  v46 = sub_319AC((uint64_t *)&unk_3B8C90);
  v47 = v64;
  Published.init(initialValue:)(&v70, v46);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v45, v47, v66);
  v48 = OBJC_IVAR____TtC8BookEPUB15SearchViewModel_alignedPassageCache;
  *(_QWORD *)(v2 + v48) = sub_382C8((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_layoutManager) = 0;
  swift_beginAccess(v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchText, &v70, 33, 0);
  v69[0] = v67;
  v69[1] = v68;
  Published.init(initialValue:)(v69, &type metadata for String);
  swift_endAccess(&v70);
  return v2;
}

BOOL sub_1BCA70()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[3];
  unsigned __int8 v7;

  KeyPath = swift_getKeyPath(&unk_2F1AD0);
  swift_getKeyPath(&unk_2F1AF8);
  static Published.subscript.getter(v6, v0, KeyPath);
  swift_release();
  swift_release();
  if (LOBYTE(v6[0]))
    return 1;
  v2 = swift_getKeyPath(&unk_2F1B60);
  swift_getKeyPath(&unk_2F1B88);
  static Published.subscript.getter(v6, v0, v2);
  swift_release();
  swift_release();
  LODWORD(v2) = v7;
  sub_1BD768(v6[0], v6[1], v6[2], v7);
  if ((_DWORD)v2 != 255)
    return 1;
  v4 = swift_getKeyPath(&unk_2F1A88);
  swift_getKeyPath(&unk_2F1AB0);
  static Published.subscript.getter(v6, v0, v4);
  swift_release();
  swift_release();
  v5 = *(_QWORD *)(v6[0] + 16);
  swift_bridgeObjectRelease(v6[0]);
  return v5 != 0;
}

BOOL sub_1BCBA4()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_2F1C80);
  v2 = swift_getKeyPath(&unk_2F1CA8);
  static Published.subscript.getter(&v5, v0, KeyPath);
  swift_release(v2);
  swift_release(KeyPath);
  v3 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRelease(v5);
  return v3 != 0;
}

_QWORD *sub_1BCC24@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  __int128 v7;
  __int128 v8;

  v3 = *(_QWORD *)(*result + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_layoutManager);
  if (v3)
  {
    v8 = *(_OWORD *)(v3 + 16);
    v4 = *(void **)(v3 + 32);
    v5 = *(void **)(v3 + 40);
    v6 = v4;
    result = v5;
    v7 = v8;
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v7 = 0uLL;
  }
  *(_OWORD *)a2 = v7;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

void sub_1BCC94(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4[4];

  v1 = a1[1];
  v2 = (void *)a1[2];
  v3 = (void *)a1[3];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = (uint64_t)v2;
  v4[3] = (uint64_t)v3;
  sub_1BD7AC(v4[0], v1, v2, v3);
  sub_1BCD48(v4);
}

id sub_1BCCDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id result;
  __int128 v8;
  __int128 v9;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_layoutManager);
  if (v3)
  {
    v9 = *(_OWORD *)(v3 + 16);
    v4 = *(void **)(v3 + 32);
    v5 = *(void **)(v3 + 40);
    v6 = v4;
    result = v5;
    v8 = v9;
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v8 = 0uLL;
  }
  *(_OWORD *)a1 = v8;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

void sub_1BCD48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  _QWORD v30[4];

  v2 = *a1;
  v3 = a1[1];
  v5 = (void *)a1[2];
  v4 = (void *)a1[3];
  v6 = *(uint64_t **)(v1 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_layoutManager);
  if (v6)
  {
    v8 = v6[2];
    v7 = v6[3];
    v10 = (void *)v6[4];
    v9 = (void *)v6[5];
    v11 = v10;
    v12 = v9;
    if (v5)
    {
      if (v11)
      {
        v29 = v8;
        v13 = v2;
        if (*(double *)&v2 == *(double *)&v8 && v3 == v7)
        {
          v28 = v12;
          sub_BEAC0();
          v19 = v5;
          v20 = v2;
          v21 = v4;
          v17 = v19;
          v18 = v21;
          v22 = v11;
          v15 = v20;
          v7 = v3;
          if ((static NSObject.== infix(_:_:)(v17, v22) & 1) != 0)
          {
            v23 = static NSObject.== infix(_:_:)(v18, v28);
            sub_1BD780(v29, v3, v10, v9);

            sub_1BD780(v15, v3, v5, v4);
            if ((v23 & 1) != 0)
              goto LABEL_21;
            goto LABEL_20;
          }
        }
        else
        {
          sub_1BD7AC(v2, v3, v5, v4);
          sub_1BD7AC(v2, v3, v5, v4);
          v15 = v2;
        }
        sub_1BD780(v29, v7, v10, v9);

        sub_1BD780(v15, v3, v5, v4);
        v18 = v4;
        v17 = v5;
LABEL_20:
        v30[0] = v13;
        v30[1] = v3;
        v30[2] = v17;
        v30[3] = v18;
        v24 = type metadata accessor for SearchResultLayoutManager();
        swift_allocObject(v24, 72);
        v25 = v17;
        v26 = v18;
        v27 = SearchResultLayoutManager.init(configuration:)((uint64_t)v30);
        sub_1BC3D8(v27);
LABEL_21:
        sub_1BD780(v15, v3, v5, v4);
        return;
      }
      v16 = v8;
LABEL_15:
      v13 = v2;
      v17 = v5;
      v15 = v2;
      v18 = v4;
      sub_1BD780(v15, v3, v5, v4);
      sub_1BD780(v16, v7, 0, v9);
      goto LABEL_20;
    }
    if (v11)
    {
      sub_1BD780(v2, v3, 0, v4);
      sub_1BD780(v8, v7, v10, v9);
      sub_1BC3D8(0);
    }
  }
  else if (v5)
  {
    v16 = 0;
    v7 = 0;
    v9 = 0;
    goto LABEL_15;
  }
}

void (*sub_1BD004(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  __int128 v9;
  __int128 v11;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_layoutManager);
  if (v4)
  {
    v11 = *(_OWORD *)(v4 + 16);
    v5 = *(void **)(v4 + 32);
    v6 = *(void **)(v4 + 40);
    v7 = v5;
    v8 = v6;
    v9 = v11;
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v9 = 0uLL;
  }
  *(_OWORD *)v3 = v9;
  v3[2] = v5;
  v3[3] = v6;
  return sub_1BD090;
}

void sub_1BD090(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8[4];

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  v6 = (void *)v3[2];
  v7 = (void *)v3[3];
  v8[0] = v4;
  v8[1] = v5;
  v8[2] = (uint64_t)v6;
  v8[3] = (uint64_t)v7;
  if ((a2 & 1) != 0)
  {
    sub_1BD7AC(v4, v5, v6, v7);
    sub_1BCD48(v8);
    sub_1BD780(*v3, v3[1], (void *)v3[2], (void *)v3[3]);
  }
  else
  {
    sub_1BCD48(v8);
  }
  free(v3);
}

void sub_1BD100(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[24];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v3 = v2;
  v5 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SearchResultEntity(0) + 28));
  v6 = *v5;
  v7 = v5[1];
  v8 = v5[2];
  v9 = v5[3];
  v10 = v5[4];
  v11 = v5[5];
  if (v7)
  {
    *(_QWORD *)&v39 = *v5;
    *((_QWORD *)&v39 + 1) = v7;
    *(_QWORD *)&v40 = v8;
    *((_QWORD *)&v40 + 1) = v9;
    *(_QWORD *)&v41 = v10;
    *((_QWORD *)&v41 + 1) = v11;
    v12 = (_QWORD *)(v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_alignedPassageCache);
    swift_beginAccess(v2 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_alignedPassageCache, v35, 0, 0);
    v13 = *v12;
    if (*(_QWORD *)(*v12 + 16))
    {
      sub_44870(v6, v7, v8, v9, v10, v11);
      sub_44870(v6, v7, v8, v9, v10, v11);
      swift_bridgeObjectRetain(v13);
      v14 = sub_3B984((uint64_t *)&v39);
      if ((v15 & 1) != 0)
      {
        v16 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 48 * v14);
        v17 = v16[3];
        v27 = v16[2];
        v29 = *v16;
        v18 = v16[5];
        v23 = v16[1];
        v25 = v16[4];
        swift_bridgeObjectRetain(v23);
        swift_bridgeObjectRetain(v17);
        swift_bridgeObjectRetain(v18);
        swift_bridgeObjectRelease(v13);
        sub_44914(v6, v7, v8, v9, v10, v11);
        sub_44914(v6, v7, v8, v9, v10, v11);
        v8 = v27;
        v6 = v29;
        v7 = v23;
        v10 = v25;
        v9 = v17;
        v11 = v18;
        goto LABEL_9;
      }
      swift_bridgeObjectRelease(v13);
      sub_44914(v6, v7, v8, v9, v10, v11);
    }
    else
    {
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v11);
    }
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_layoutManager))
    {
      v36 = v39;
      v37 = v40;
      v38 = v41;
      swift_retain();
      sub_BE448(&v36, &v32);
      v36 = v32;
      v37 = v33;
      v38 = v34;
      v28 = v33;
      v30 = v32;
      v24 = v34;
      v26 = *((_QWORD *)&v32 + 1);
      v21 = *((_QWORD *)&v34 + 1);
      v22 = *((_QWORD *)&v33 + 1);
      swift_beginAccess(v12, &v32, 33, 0);
      sub_1398A4(&v36);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
      v31 = *v12;
      *v12 = 0x8000000000000000;
      sub_17E074(&v36, (uint64_t *)&v39, isUniquelyReferenced_nonNull_native);
      v20 = *v12;
      *v12 = v31;
      swift_bridgeObjectRelease(v20);
      sub_44914(v6, v7, v8, v9, v10, v11);
      swift_endAccess(&v32);
      swift_release();
      v8 = v28;
      v6 = v30;
      v10 = v24;
      v7 = v26;
      v11 = v21;
      v9 = v22;
    }
  }
LABEL_9:
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v8;
  a2[3] = v9;
  a2[4] = v10;
  a2[5] = v11;
}

void sub_1BD3C8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  _BYTE v38[24];
  char v39[32];
  _OWORD v40[3];

  KeyPath = swift_getKeyPath(&unk_2F1A88);
  swift_getKeyPath(&unk_2F1AB0);
  static Published.subscript.getter(v40, v0, KeyPath);
  swift_release();
  swift_release();
  v2 = *(_QWORD *)&v40[0];
  v3 = sub_1B9E04(*(uint64_t *)&v40[0]);
  swift_bridgeObjectRelease(v2);
  v4 = sub_13513C((uint64_t)v3);
  swift_bridgeObjectRelease(v3);
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_alignedPassageCache);
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_alignedPassageCache, v39, 0, 0);
  v6 = swift_bridgeObjectRetain(*v5);
  sub_11A48C(v6);
  if (*(_QWORD *)(v4 + 16) <= *(_QWORD *)(v7 + 16) >> 3)
  {
    *(_QWORD *)&v40[0] = v7;
    sub_1B4F2C(v4);
    swift_bridgeObjectRelease(v4);
    v8 = *(_BYTE **)&v40[0];
  }
  else
  {
    v8 = sub_1B53CC(v4, v7);
    swift_bridgeObjectRelease(v4);
  }
  v9 = 0;
  v10 = v8 + 56;
  v11 = 1 << v8[32];
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *((_QWORD *)v8 + 7);
  v36 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_25;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v16 >= v36)
      goto LABEL_29;
    v17 = *(_QWORD *)&v10[8 * v16];
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v36)
        goto LABEL_29;
      v17 = *(_QWORD *)&v10[8 * v9];
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v36)
          goto LABEL_29;
        v17 = *(_QWORD *)&v10[8 * v9];
        if (!v17)
          break;
      }
    }
LABEL_24:
    v13 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_25:
    v19 = (_OWORD *)(*((_QWORD *)v8 + 6) + 48 * v15);
    v21 = v19[1];
    v20 = v19[2];
    v40[0] = *v19;
    v40[1] = v21;
    v40[2] = v20;
    swift_beginAccess(v5, v38, 33, 0);
    v22 = *v5;
    sub_1398A4(v40);
    swift_bridgeObjectRetain(v22);
    v23 = sub_3B984((uint64_t *)v40);
    v25 = v24;
    swift_bridgeObjectRelease(v22);
    if ((v25 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
      v27 = *v5;
      v37 = *v5;
      *v5 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_F303C();
        v27 = v37;
      }
      v28 = (_QWORD *)(*(_QWORD *)(v27 + 48) + 48 * v23);
      v29 = v28[3];
      v30 = v28[5];
      swift_bridgeObjectRelease(v28[1]);
      swift_bridgeObjectRelease(v29);
      swift_bridgeObjectRelease(v30);
      v31 = (_QWORD *)(*(_QWORD *)(v27 + 56) + 48 * v23);
      v32 = v31[1];
      v33 = v31[3];
      v34 = v31[5];
      sub_188A64(v23, v27);
      v35 = *v5;
      *v5 = v27;
      swift_bridgeObjectRelease(v35);
      sub_1398EC(v40);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v34);
    }
    else
    {
      sub_1398EC(v40);
    }
    swift_endAccess(v38);
  }
  v18 = v16 + 3;
  if (v18 >= v36)
  {
LABEL_29:
    swift_release();
    return;
  }
  v17 = *(_QWORD *)&v10[8 * v18];
  if (v17)
  {
    v9 = v18;
    goto LABEL_24;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v36)
      goto LABEL_29;
    v17 = *(_QWORD *)&v10[8 * v9];
    ++v18;
    if (v17)
      goto LABEL_24;
  }
LABEL_31:
  __break(1u);
}

uint64_t type metadata accessor for SearchBarResponderState(uint64_t a1)
{
  return sub_3E7A8(a1, qword_3C0C78, (uint64_t)&nominal type descriptor for SearchBarResponderState);
}

uint64_t sub_1BD768(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_AA70C(result, a2, a3, a4 & 1);
  return result;
}

void sub_1BD780(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a3)
  {

  }
}

id sub_1BD7AC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v4;
  id result;

  if (a3)
  {
    v4 = a3;
    return a4;
  }
  return result;
}

uint64_t SearchViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchText;
  v2 = sub_319AC(&qword_3B5CD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchResults;
  v4 = sub_319AC(&qword_3C0B80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingTitle;
  v6 = sub_319AC(&qword_3C0B98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingDetail;
  v8 = sub_319AC(&qword_3C0BB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchPage;
  v10 = sub_319AC(&qword_3C0BC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__wikipediaLink;
  v12 = sub_319AC(&qword_3C0BE0);
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__webSearchLink, v12);
  v14 = v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__responderState;
  v15 = sub_319AC(&qword_3C0C00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel__recentSearchTexts;
  v17 = sub_319AC(&qword_3C0C18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB15SearchViewModel_alignedPassageCache));
  swift_release();
  return v0;
}

uint64_t SearchViewModel.__deallocating_deinit()
{
  uint64_t v0;

  SearchViewModel.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1BD9B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SearchViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t static SearchPage.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  return sub_1BDA24(a1, a2, a3, a4 & 1, a5, a6, a7, a8 & 1);
}

uint64_t sub_1BDA00(uint64_t a1, uint64_t a2)
{
  return sub_1BDA24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t sub_1BDA24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;

  if ((a4 & 1) != 0)
  {
    if ((a8 & 1) != 0)
    {
      if (a1 != a5 || a2 != a6)
        return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0);
      return 1;
    }
  }
  else
  {
    v8 = 0;
    if ((a8 & 1) != 0 || a1 != a5)
      return v8;
    if (a3)
    {
      if (a7 && (a2 == a6 && a3 == a7 || (_stringCompareWithSmolCheck(_:_:expecting:)(a2, a3, a6, a7, 0) & 1) != 0))
        return 1;
    }
    else
    {
      if (!a7)
        return 1;
      sub_AA70C(a1, a2, 0, 0);
    }
  }
  return 0;
}

unint64_t sub_1BDAD0()
{
  unint64_t result;

  result = qword_3C0C48;
  if (!qword_3C0C48)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchViewModel.LoadingTitle, &type metadata for SearchViewModel.LoadingTitle);
    atomic_store(result, (unint64_t *)&qword_3C0C48);
  }
  return result;
}

uint64_t sub_1BDB14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__becomeFirstResponder, (uint64_t *)&unk_3B8E70);
}

uint64_t sub_1BDB38(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3B8E20, &OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__becomeFirstResponder, (uint64_t *)&unk_3B8E70);
}

uint64_t sub_1BDB64(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__resignFirstResponder, (uint64_t *)&unk_3B8E70);
}

uint64_t sub_1BDB88(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3B8E20, &OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState__resignFirstResponder, (uint64_t *)&unk_3B8E70);
}

void sub_1BDBB4(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState_isFirstResponder);
  swift_beginAccess(v3, v4, 0, 0);
  *a2 = *v3;
}

void sub_1BDC04(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC8BookEPUB23SearchBarResponderState_isFirstResponder);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
}

uint64_t sub_1BDC58(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchText, &qword_3B5CD0);
}

uint64_t sub_1BDC7C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, (uint64_t *)&unk_3B82E0, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchText, &qword_3B5CD0);
}

uint64_t sub_1BDCA8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchResults, &qword_3C0B80);
}

uint64_t sub_1BDCCC(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3C0B88, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchResults, &qword_3C0B80);
}

uint64_t sub_1BDCF8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingTitle, &qword_3C0B98);
}

uint64_t sub_1BDD1C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3C0BA0, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingTitle, &qword_3C0B98);
}

uint64_t sub_1BDD48(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingDetail, &qword_3C0BB0);
}

uint64_t sub_1BDD6C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3C0BB8, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__loadingDetail, &qword_3C0BB0);
}

uint64_t sub_1BDD98(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchPage, &qword_3C0BC8);
}

uint64_t sub_1BDDBC(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3C0BD0, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__searchPage, &qword_3C0BC8);
}

uint64_t sub_1BDDE8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__wikipediaLink, &qword_3C0BE0);
}

uint64_t sub_1BDE0C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3C0BE8, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__wikipediaLink, &qword_3C0BE0);
}

uint64_t sub_1BDE38(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__webSearchLink, &qword_3C0BE0);
}

uint64_t sub_1BDE5C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3C0BE8, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__webSearchLink, &qword_3C0BE0);
}

uint64_t sub_1BDE88(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__responderState, &qword_3C0C00);
}

uint64_t sub_1BDEAC(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3C0C08, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__responderState, &qword_3C0C00);
}

uint64_t sub_1BDED8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_3A204(a1, a2, a3, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__recentSearchTexts, &qword_3C0C18);
}

uint64_t sub_1BDEFC(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_3A270(a1, a2, a3, a4, &qword_3C0C20, &OBJC_IVAR____TtC8BookEPUB15SearchViewModel__recentSearchTexts, &qword_3C0C18);
}

uint64_t sub_1BDF30()
{
  return type metadata accessor for SearchBarResponderState(0);
}

void sub_1BDF38(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_3E56C(319, (unint64_t *)&qword_3B5ED8, (uint64_t)&type metadata for Bool);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    v4[2] = &unk_2F1E28;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

uint64_t method lookup function for SearchBarResponderState(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SearchBarResponderState);
}

uint64_t dispatch thunk of SearchBarResponderState.$becomeFirstResponder.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of SearchBarResponderState.$resignFirstResponder.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t sub_1BDFE4()
{
  return type metadata accessor for SearchViewModel(0);
}

uint64_t type metadata accessor for SearchViewModel(uint64_t a1)
{
  return sub_3E7A8(a1, (uint64_t *)&unk_3C0DB0, (uint64_t)&nominal type descriptor for SearchViewModel);
}

void sub_1BE000(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;

  sub_3E56C(319, (unint64_t *)&unk_3B6068, (uint64_t)&type metadata for String);
  if (v3 <= 0x3F)
  {
    v18[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_3E8E4(319, &qword_3C0DC0, &qword_3C0C28);
    if (v5 <= 0x3F)
    {
      v18[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_3E56C(319, &qword_3C0DC8, (uint64_t)&type metadata for SearchViewModel.LoadingTitle);
      if (v7 <= 0x3F)
      {
        v18[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_3E56C(319, &qword_3C0DD0, (uint64_t)&type metadata for SearchViewModel.LoadingDetail);
        if (v9 <= 0x3F)
        {
          v18[3] = *(_QWORD *)(v8 - 8) + 64;
          sub_3E8E4(319, &qword_3C0DD8, &qword_3C0C30);
          if (v11 <= 0x3F)
          {
            v18[4] = *(_QWORD *)(v10 - 8) + 64;
            sub_3E8E4(319, &qword_3C0DE0, (uint64_t *)&unk_3B8C50);
            if (v13 <= 0x3F)
            {
              v19 = *(_QWORD *)(v12 - 8) + 64;
              v20 = v19;
              sub_1BE344(319);
              if (v15 <= 0x3F)
              {
                v21 = *(_QWORD *)(v14 - 8) + 64;
                sub_3E8E4(319, (unint64_t *)&unk_3C0DF0, (uint64_t *)&unk_3B8C90);
                if (v17 <= 0x3F)
                {
                  v22 = *(_QWORD *)(v16 - 8) + 64;
                  v23 = (char *)&value witness table for Builtin.BridgeObject + 64;
                  v24 = &unk_2F1E60;
                  swift_updateClassMetadata2(a1, 256, 11, v18, a1 + 80);
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for SearchViewModel(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SearchViewModel);
}

uint64_t dispatch thunk of SearchViewModel.searchText.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of SearchViewModel.$searchResults.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of SearchViewModel.$searchResults.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of SearchViewModel.loadingTitle.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of SearchViewModel.$loadingTitle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of SearchViewModel.$loadingTitle.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of SearchViewModel.loadingDetail.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of SearchViewModel.loadingDetail.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 328))(a1, a2 & 1);
}

uint64_t dispatch thunk of SearchViewModel.$loadingDetail.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of SearchViewModel.$loadingDetail.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of SearchViewModel.searchPage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of SearchViewModel.$searchPage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of SearchViewModel.$searchPage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of SearchViewModel.wikipediaLink.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of SearchViewModel.wikipediaLink.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of SearchViewModel.$wikipediaLink.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of SearchViewModel.$webSearchLink.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of SearchViewModel.$webSearchLink.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of SearchViewModel.$webSearchLink.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of SearchViewModel.responderState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of SearchViewModel.$responderState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of SearchViewModel.$responderState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of SearchViewModel.recentSearchTexts.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of SearchViewModel.recentSearchTexts.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of SearchViewModel.$recentSearchTexts.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of SearchViewModel.$recentSearchTexts.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of SearchViewModel.__allocating_init(searchText:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 656))();
}

uint64_t dispatch thunk of SearchViewModel.layoutManagerConfiguration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of SearchViewModel.layoutManagerConfiguration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of SearchViewModel.alignedPassage(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

void sub_1BE344(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_3C0DE8)
  {
    v2 = type metadata accessor for SearchBarResponderState(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_3C0DE8);
  }
}

uint64_t storeEnumTagSinglePayload for SearchViewModel.LoadingTitle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BE3E4 + 4 * byte_2F19A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BE418 + 4 * asc_2F19A0[v4]))();
}

uint64_t sub_1BE418(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BE420(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BE428);
  return result;
}

uint64_t sub_1BE434(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BE43CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BE440(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BE448(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SearchViewModel.LoadingTitle()
{
  return &type metadata for SearchViewModel.LoadingTitle;
}

ValueMetadata *type metadata accessor for SearchViewModel.LoadingDetail()
{
  return &type metadata for SearchViewModel.LoadingDetail;
}

uint64_t sub_1BE474(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_bridgeObjectRetain(a2);
  else
    return swift_bridgeObjectRetain(a3);
}

uint64_t destroy for SearchPage(uint64_t a1)
{
  return sub_AA70C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for SearchPage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BE474(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for SearchPage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BE474(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_AA70C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for SearchPage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_AA70C(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1BE5A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SearchPage()
{
  return &type metadata for SearchPage;
}

uint64_t sub_1BE5C4(uint64_t result, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 != 255)
    return sub_1BE474(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_1BE5F0(unint64_t a1)
{
  uint64_t result;
  Swift::String v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  if (a1 < 5)
    return qword_2F1EA0[a1];
  v6 = 0;
  v7 = 0xE000000000000000;
  _StringGuts.grow(_:)(46);
  v3._object = (void *)0x80000000002D01D0;
  v3._countAndFlagsBits = 0xD00000000000002CLL;
  String.append(_:)(v3);
  v5 = a1;
  type metadata accessor for BEWebViewFactoryPaginationMode(0);
  _print_unlocked<A, B>(_:_:)(&v5, &v6, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v6, v7, "BookEPUB/BEWebViewFactoryPaginationOptions.swift", 48, 2, 25, 0);
  __break(1u);
  return result;
}

id sub_1BE6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t (*v11)(uint64_t, uint64_t);
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  double (*v16)(uint64_t, uint64_t);
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  double v24;
  char v25;
  id result;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;

  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
  v12 = v11(a3, a5);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 128))(a4, a6);
  if (v12 >= 2)
  {
    if (v12 - 2 >= 2)
    {
      type metadata accessor for BookLayoutMode(0);
      v30 = v12;
      result = (id)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v27, &v30, v27, &type metadata for UInt);
      __break(1u);
      return result;
    }
    v29 = 0;
  }
  else
  {
    v14 = 2;
    if ((v13 & 1) != 0)
      v14 = 3;
    v29 = v14;
  }
  v28 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 152))(a4, a6);
  v15 = v11(a3, a5);
  v16 = *(double (**)(uint64_t, uint64_t))(a5 + 48);
  v17 = v16(a3, a5);
  v19 = v18;
  v20 = (*(double (**)(uint64_t, uint64_t))(a5 + 64))(a3, a5);
  v21 = v16(a3, a5);
  v22 = 0.0;
  if (!(*(unsigned __int8 (**)(uint64_t, uint64_t))(a6 + 104))(a4, a6))
    v22 = (*(double (**)(uint64_t, uint64_t))(a5 + 176))(a3, a5);
  v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6));
  v24 = (*(double (**)(uint64_t, uint64_t))(a5 + 144))(a3, a5);
  (*(void (**)(uint64_t, uint64_t))(a6 + 160))(a4, a6);
  return objc_msgSend(v23, "initWithMode:usePaginationLineGrid:respectPageBreaks:isHorizontalScroll:contentLayoutSize:gapBetweenPages:viewportWidth:fixedLayoutSize:pageLength:fontSize:developerExtrasEnabled:", v29, 0, v28 & 1, v15 == 3, v25 & 1, v17, v19, v20, v21, 0.0, 0.0, v22, v24);
}

BookEPUB::MultipleColumnMode_optional __swiftcall MultipleColumnMode.init(rawValue:)(Swift::Int16 rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue;
  if ((unsigned __int16)rawValue >= 3u)
    v2 = 3;
  *v1 = v2;
  return (BookEPUB::MultipleColumnMode_optional)rawValue;
}

uint64_t MultipleColumnMode.localizedName.getter()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = BookEPUBBundle();
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

_UNKNOWN **static MultipleColumnMode.allCases.getter()
{
  return &off_37A080;
}

unint64_t sub_1BEA30()
{
  unint64_t result;

  result = qword_3C10E0;
  if (!qword_3C10E0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MultipleColumnMode, &type metadata for MultipleColumnMode);
    atomic_store(result, (unint64_t *)&qword_3C10E0);
  }
  return result;
}

Swift::Int sub_1BEA74()
{
  unsigned __int8 *v0;
  Swift::UInt16 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1BEAB8()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1BEAE0(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt16 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BookEPUB::MultipleColumnMode_optional sub_1BEB20(Swift::Int16 *a1)
{
  return MultipleColumnMode.init(rawValue:)(*a1);
}

void sub_1BEB28(_WORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

unint64_t sub_1BEB38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3C10E8;
  if (!qword_3C10E8)
  {
    v1 = sub_31A38(&qword_3C10F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3C10E8);
  }
  return result;
}

void sub_1BEB84(_QWORD *a1@<X8>)
{
  *a1 = &off_37A0A8;
}

void *sub_1BEB94()
{
  return &protocol witness table for Int16;
}

uint64_t storeEnumTagSinglePayload for MultipleColumnMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BEBEC + 4 * byte_2F1ED5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BEC20 + 4 * byte_2F1ED0[v4]))();
}

uint64_t sub_1BEC20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BEC28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BEC30);
  return result;
}

uint64_t sub_1BEC3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BEC44);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BEC48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BEC50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MultipleColumnMode()
{
  return &type metadata for MultipleColumnMode;
}

void UIGestureRecognizer.be_allowedTouchTypes.setter(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  Class isa;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v6 = *v4++;
      v7 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v6);
      if (v7)
      {
        v8 = v7;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
        v10 = *(_QWORD *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        v9 = *(_QWORD *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8));
        if (v10 >= v9 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
        v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v8);
        specialized Array._endMutation()(v5);
      }
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease(a1);
  sub_1B9DC4();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setAllowedTouchTypes:", isa, swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_f64[0]);

}

void UIGestureRecognizer.be_allowedTouchTypes.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = objc_msgSend(v0, "allowedTouchTypes");
  v2 = sub_1B9DC4();
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v3 & 0xFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease_n(v3, 2);
    return;
  }
  if (v3 < 0)
    v12 = v3;
  else
    v12 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v4)
    goto LABEL_18;
LABEL_3:
  if (v4 >= 1)
  {
    v5 = 0;
    v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      else
        v7 = *(id *)(v3 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, "integerValue");

      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
        v6 = sub_436E4(0, v6[2] + 1, 1, v6);
      v11 = v6[2];
      v10 = v6[3];
      if (v11 >= v10 >> 1)
        v6 = sub_436E4((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
      ++v5;
      v6[2] = v11 + 1;
      v6[v11 + 4] = v9;
    }
    while (v4 != v5);
    goto LABEL_18;
  }
  __break(1u);
}

void (*UIGestureRecognizer.be_allowedTouchTypes.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  UIGestureRecognizer.be_allowedTouchTypes.getter();
  *a1 = v3;
  return sub_1BEF5C;
}

void sub_1BEF5C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(*a1);
    UIGestureRecognizer.be_allowedTouchTypes.setter(v3);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    UIGestureRecognizer.be_allowedTouchTypes.setter(*a1);
  }
}

void sub_1BEFA0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  UIGestureRecognizer.be_allowedTouchTypes.getter();
  *a1 = v2;
}

void sub_1BEFC8(_QWORD *a1)
{
  uint64_t v1;

  swift_bridgeObjectRetain(*a1);
  UIGestureRecognizer.be_allowedTouchTypes.setter(v1);
}

void BookThemeType.localizedTitle.getter(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BF01C()
{
  id v0;
  NSString v1;
  NSString v2;
  id v3;
  uint64_t v4;

  v0 = BookEPUBBundle();
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend(v0, "localizedStringForKey:value:table:", v1, v2, 0);

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  return v4;
}

uint64_t BookThemeType.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BF1A8 + 4 * byte_2F2010[a1]))(0x6C616E696769726FLL, 0xE800000000000000);
}

uint64_t sub_1BF1A8()
{
  return 0x7465697571;
}

uint64_t sub_1BF1BC()
{
  return 0x7265706170;
}

uint64_t sub_1BF1D0()
{
  return 1684828002;
}

uint64_t sub_1BF1E0()
{
  return 1835819363;
}

uint64_t sub_1BF1F0()
{
  return 0x7375636F66;
}

_UNKNOWN **static BookThemeType.allCases.getter()
{
  return &off_379C48;
}

uint64_t BookThemeType.sortOrder.getter(uint64_t a1)
{
  uint64_t result;
  char v2;

  result = sub_E64B8(a1, (uint64_t)&off_37A0D0);
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1BF234(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BF288@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BF2FC + 4 * byte_2F201C[a1]))(0x7465697571);
}

uint64_t sub_1BF2FC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7465697571 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7465697571, 0xE500000000000000, 0);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE500000000000000);
  return v2 & 1;
}

void sub_1BF3C4()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1BF410()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x7465697571, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

void sub_1BF494()
{
  __asm { BR              X10 }
}

uint64_t sub_1BF4D0(uint64_t a1)
{
  String.hash(into:)(a1, 0x7465697571, 0xE500000000000000);
  return swift_bridgeObjectRelease(0xE500000000000000);
}

void sub_1BF540(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1BF588()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x7465697571, 0xE500000000000000);
  swift_bridgeObjectRelease(0xE500000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1BF60C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8BookEPUB0A9ThemeTypeO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BF638()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BF668 + 4 * byte_2F2034[*v0]))();
}

void sub_1BF668(_QWORD *a1@<X8>)
{
  *a1 = 0x7465697571;
  a1[1] = 0xE500000000000000;
}

void sub_1BF680(_QWORD *a1@<X8>)
{
  *a1 = 0x7265706170;
  a1[1] = 0xE500000000000000;
}

void sub_1BF698(_QWORD *a1@<X8>)
{
  *a1 = 1684828002;
  a1[1] = 0xE400000000000000;
}

void sub_1BF6AC(_QWORD *a1@<X8>)
{
  *a1 = 1835819363;
  a1[1] = 0xE400000000000000;
}

void sub_1BF6C0(_QWORD *a1@<X8>)
{
  *a1 = 0x7375636F66;
  a1[1] = 0xE500000000000000;
}

void sub_1BF6D8(_QWORD *a1@<X8>)
{
  *a1 = &off_379C48;
}

uint64_t BookThemeType.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BF71C + 4 * byte_2F203A[a1]))(0x6C616E696769726FLL, 0xE800000000000000);
}

uint64_t sub_1BF71C()
{
  return 0x7465697571;
}

uint64_t sub_1BF730()
{
  return 0x7265706170;
}

uint64_t sub_1BF744()
{
  return 1684828002;
}

uint64_t sub_1BF754()
{
  return 1835819363;
}

uint64_t sub_1BF764()
{
  return 0x7375636F66;
}

uint64_t sub_1BF778()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BF7A8 + 4 * byte_2F2040[*v0]))(0x6C616E696769726FLL, 0xE800000000000000);
}

uint64_t sub_1BF7A8()
{
  return 0x7465697571;
}

uint64_t sub_1BF7BC()
{
  return 0x7265706170;
}

uint64_t sub_1BF7D0()
{
  return 1684828002;
}

uint64_t sub_1BF7E0()
{
  return 1835819363;
}

uint64_t sub_1BF7F0()
{
  return 0x7375636F66;
}

unint64_t _s8BookEPUB0A9ThemeTypeO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_378E78, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 6)
    return 6;
  else
    return v3;
}

unint64_t sub_1BF850()
{
  unint64_t result;

  result = qword_3C10F8;
  if (!qword_3C10F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BookThemeType, &type metadata for BookThemeType);
    atomic_store(result, (unint64_t *)&qword_3C10F8);
  }
  return result;
}

unint64_t sub_1BF898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_3C1100;
  if (!qword_3C1100)
  {
    v1 = sub_31A38(&qword_3C1108);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_3C1100);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BookThemeType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BF930 + 4 * byte_2F204B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BF964 + 4 * byte_2F2046[v4]))();
}

uint64_t sub_1BF964(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BF96C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BF974);
  return result;
}

uint64_t sub_1BF980(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BF988);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BF98C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BF994(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookThemeType()
{
  return &type metadata for BookThemeType;
}

char *sub_1BF9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  objc_class *v8;
  id v17;

  v17 = objc_allocWithZone(v8);
  return sub_1C006C(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1BFA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v5 + 72) = a5;
  *(_QWORD *)(v5 + 24) = a4;
  v6 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 32) = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 48) = v8;
  return swift_task_switch(sub_1BFAA8, v7, v8);
}

uint64_t sub_1BFAA8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t ObjectType;
  int *v4;
  _QWORD *v5;
  int *v7;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_settingsManager);
  v2 = v1[1];
  ObjectType = swift_getObjectType(*v1);
  v4 = *(int **)(v2 + 24);
  v7 = (int *)((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc(v4[1]);
  *(_QWORD *)(v0 + 56) = v5;
  *v5 = v0;
  v5[1] = sub_1BFB34;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v7)(*(unsigned __int8 *)(v0 + 72), ObjectType, v2);
}

uint64_t sub_1BFB34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 56);
  *(_QWORD *)(*v1 + 64) = v0;
  swift_task_dealloc(v3);
  if (v0)
    v4 = sub_1BFB94;
  else
    v4 = sub_D1768;
  return swift_task_switch(v4, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_1BFB94()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  _DWORD *v5;

  swift_release();
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v0 + 72);
    v5 = (_DWORD *)swift_slowAlloc(12, -1);
    swift_slowAlloc(32, -1);
    *v5 = 136446210;
    __asm { BR              X9 }
  }
  swift_errorRelease(*(_QWORD *)(v0 + 64));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BFD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v19;
  _BYTE v20[24];
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24[18];

  v23 = 0;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_paginationService + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_paginationService));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_locationProvider + 8);
  v4 = swift_getObjectType(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_locationProvider));
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 16))(v24, v4, v3);
  sub_49900((uint64_t)v24);
  v5 = v24[0];
  v6 = BookPaginationEntity.document(for:)(v24[0]);
  if (v6)
  {
    v7 = (unsigned __int8 *)(v6 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_isVerticalDocument);
    swift_beginAccess(v6 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_isVerticalDocument, v20, 0, 0);
    v8 = *v7;
    v23 = *v7;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc(22, -1);
      v13 = swift_slowAlloc(32, -1);
      v21 = v13;
      *(_DWORD *)v12 = 134218242;
      v19 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20, v12 + 4);
      *(_WORD *)(v12 + 12) = 2080;
      if (v8)
        v14 = 0x6C61636974726576;
      else
        v14 = 0x746E6F7A69726F68;
      if (v8)
        v15 = 0xE800000000000000;
      else
        v15 = 0xEA00000000006C61;
      v19 = sub_33524(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20, v12 + 14);
      swift_bridgeObjectRelease(v15);
      _os_log_impl(&dword_0, v10, v11, "document at %ld has %s text", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    swift_release();
  }
  else
  {
    v10 = Logger.logObject.getter(0);
    v16 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v17 = 134217984;
      v21 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v17 + 4);
      _os_log_impl(&dword_0, v10, v16, "Cannot find document at current ordinal: %ld", v17, 0xCu);
      swift_slowDealloc(v17, -1, -1);
    }
  }

  swift_release();
  swift_beginAccess(&v23, &v21, 0, 0);
  return v23;
}

char *sub_1C006C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  __n128 v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  objc_class *v29;
  id v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD v80[3];
  objc_super v81;

  v68 = a7;
  v78 = a6;
  v79 = a5;
  v75 = a4;
  v72 = a2;
  v15 = sub_319AC(&qword_3B8E20);
  v16 = *(_QWORD *)(v15 - 8);
  v76 = v15;
  v77 = v16;
  __chkstk_darwin(v15);
  v74 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_319AC(&qword_3C1190);
  v19 = *(_QWORD *)(v18 - 8);
  v69 = v18;
  v70 = v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = &v8[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_delegate];
  *((_QWORD *)v22 + 1) = 0;
  swift_unknownObjectWeakInit(v22, 0);
  v23 = v8;
  Logger.init(subsystem:category:)(0xD000000000000019, 0x80000000002CBCD0, 0xD00000000000001ALL, 0x80000000002F21B0, v24);
  *(_QWORD *)&v23[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_subscribers] = _swiftEmptyArrayStorage;
  v25 = &v23[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_paginationService];
  v71 = a1;
  *(_QWORD *)v25 = a1;
  *((_QWORD *)v25 + 1) = a2;
  v26 = &v23[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_locationProvider];
  v73 = a3;
  *(_QWORD *)v26 = a3;
  *((_QWORD *)v26 + 1) = a4;
  v27 = &v23[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_settingsManager];
  v28 = v79;
  *(_QWORD *)v27 = v79;
  *((_QWORD *)v27 + 1) = a8;
  sub_49F1C((uint64_t)a6, (uint64_t)&v23[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_themeDatabaseManager]);
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRetain(a3);
  swift_unknownObjectRetain(v28);

  v29 = (objc_class *)type metadata accessor for ReadingSettingsDataManager(0);
  v81.receiver = v23;
  v81.super_class = v29;
  v30 = objc_msgSendSuper2(&v81, "init");
  v31 = *(_QWORD *)(a8 + 8);
  v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 24);
  v33 = (char *)v30;
  v34 = v68;
  v80[0] = v32(v68, v31);
  v35 = sub_319AC((uint64_t *)&unk_3BE750);
  v36 = sub_3DCC0(&qword_3B9B58, (uint64_t *)&unk_3BE750, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v37 = sub_B6DC0();
  Publisher<>.removeDuplicates()(v35, v36, v37);
  swift_release();
  v38 = swift_allocObject(&unk_387B28, 24);
  swift_unknownObjectWeakInit(v38 + 16, v33);
  v39 = sub_3DCC0(&qword_3C1198, &qword_3C1190, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v40 = v69;
  Publisher<>.sink(receiveValue:)(sub_1C1214, v38, v69, v39);
  v41 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v70 + 8))(v21, v40, v41);
  v42 = &v33[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_subscribers];
  swift_beginAccess(&v33[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_subscribers], v80, 33, 0);
  v43 = sub_319AC(&qword_3B8390);
  v44 = sub_3DCC0((unint64_t *)&unk_3BD170, &qword_3B8390, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v42, v43, v44);
  swift_endAccess(v80);
  v45 = swift_release();
  v80[0] = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v31 + 56))(v34, v31, v45);
  v46 = swift_allocObject(&unk_387B28, 24);
  swift_unknownObjectWeakInit(v46 + 16, v33);
  v47 = sub_319AC(&qword_3BE760);
  v48 = sub_3DCC0(&qword_3BE768, &qword_3BE760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.sink(receiveValue:)(sub_1C121C, v46, v47, v48);
  swift_release();
  swift_release();
  swift_beginAccess(v42, v80, 33, 0);
  AnyCancellable.store<A>(in:)(v42, v43, v44);
  swift_endAccess(v80);
  swift_release();
  v49 = v78[3];
  v50 = v78[4];
  sub_472D0(v78, v49);
  v80[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v50 + 8) + 8))(v49);
  v51 = swift_allocObject(&unk_387B28, 24);
  swift_unknownObjectWeakInit(v51 + 16, v33);
  v52 = sub_319AC(&qword_3BFF90);
  v53 = sub_3DCC0(&qword_3BFF98, &qword_3BFF90, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.sink(receiveValue:)(sub_1C1224, v51, v52, v53);
  swift_release();
  swift_release();
  swift_beginAccess(v42, v80, 33, 0);
  AnyCancellable.store<A>(in:)(v42, v43, v44);
  swift_endAccess(v80);
  swift_release();
  v54 = v71;
  ObjectType = swift_getObjectType(v71);
  v56 = v74;
  (*(void (**)(uint64_t))(v72 + 40))(ObjectType);
  v57 = swift_allocObject(&unk_387B28, 24);
  swift_unknownObjectWeakInit(v57 + 16, v33);
  v58 = sub_3DCC0(&qword_3B8100, &qword_3B8E20, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v59 = v76;
  Publisher<>.sink(receiveValue:)(sub_1C122C, v57, v76, v58);
  v60 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v77 + 8))(v56, v59, v60);
  swift_beginAccess(v42, v80, 33, 0);
  AnyCancellable.store<A>(in:)(v42, v43, v44);
  swift_endAccess(v80);
  swift_release();
  v61 = v73;
  v62 = swift_getObjectType(v73);
  v80[0] = (*(uint64_t (**)(uint64_t))(v75 + 48))(v62);
  v63 = swift_allocObject(&unk_387B28, 24);
  swift_unknownObjectWeakInit(v63 + 16, v33);
  v64 = sub_319AC(&qword_3B7298);
  v65 = sub_3DCC0(&qword_3BE7B0, &qword_3B7298, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.sink(receiveValue:)(sub_1C122C, v63, v64, v65);
  swift_release();
  swift_release();
  swift_beginAccess(v42, v80, 33, 0);
  AnyCancellable.store<A>(in:)(v42, v43, v44);
  swift_endAccess(v80);
  swift_release();

  swift_unknownObjectRelease(v54);
  swift_unknownObjectRelease(v61);
  swift_unknownObjectRelease(v79);
  sub_34488(v78);
  return v33;
}

double sub_1C0738(char *a1, uint64_t a2)
{
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  double result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v19 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v8 = *((_QWORD *)a1 + 5);
  v18 = *((_QWORD *)a1 + 6);
  v9 = a2 + 16;
  v10 = *((_QWORD *)a1 + 7);
  swift_beginAccess(a2 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_delegate);

    if (v14)
    {
      v15 = swift_unknownObjectWeakLoadStrong(v14 + OBJC_IVAR____TtC8BookEPUB25ReadingSettingsInteractor_delegate);
      if (v15)
      {
        v16 = v15;
        LOBYTE(v20) = v19;
        BYTE1(v20) = v2;
        BYTE2(v20) = v3;
        *((_QWORD *)&v20 + 1) = v4;
        v21 = v5;
        v22 = v6;
        v23 = v7;
        v24 = v8;
        v25 = v18;
        v26 = v10;
        sub_E3220(&v20);
        swift_unknownObjectRelease(v14);
        v17 = v16;
      }
      else
      {
        v17 = v14;
      }
      *(_QWORD *)&result = swift_unknownObjectRelease(v17).n128_u64[0];
    }
  }
  return result;
}

double sub_1C0840(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = Logger.logObject.getter(Strong);
    v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (_DWORD *)swift_slowAlloc(12, -1);
      swift_slowAlloc(32, -1);
      *v9 = 136446210;
      __asm { BR              X9 }
    }

    v10 = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_delegate]);
    if (v10)
    {
      v11 = v10;
      v12 = swift_unknownObjectWeakLoadStrong(v10 + OBJC_IVAR____TtC8BookEPUB25ReadingSettingsInteractor_delegate);
      if (v12)
      {
        v13 = v12;
        sub_E2F80(v2);

        swift_unknownObjectRelease(v11);
        v14 = v13;
      }
      else
      {

        v14 = v11;
      }
      *(_QWORD *)&result = swift_unknownObjectRelease(v14).n128_u64[0];
    }
    else
    {

    }
  }
  return result;
}

double sub_1C0A54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  double result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE v17[24];

  v3 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v3);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_delegate);

    if (v9)
    {
      v10 = swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC8BookEPUB25ReadingSettingsInteractor_delegate);
      if (v10)
      {
        v11 = v10;
        v12 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
        type metadata accessor for MainActor(0);
        v13 = swift_retain();
        v14 = static MainActor.shared.getter(v13);
        v15 = (_QWORD *)swift_allocObject(&unk_387B50, 40);
        v15[2] = v14;
        v15[3] = &protocol witness table for MainActor;
        v15[4] = v11;
        sub_67B40((uint64_t)v5, (uint64_t)&unk_3BBB10, (uint64_t)v15);
        swift_unknownObjectRelease(v9);
        swift_release();
        *(_QWORD *)&result = swift_release().n128_u64[0];
      }
      else
      {
        *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
      }
    }
  }
  return result;
}

double sub_1C0BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  char *v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_paginationService + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(Strong
                                               + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_paginationService));
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6) & 1) != 0
      && (v8 = swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_delegate])) != 0)
    {
      v9 = v8;
      v10 = sub_1BFD74();
      v11 = swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC8BookEPUB25ReadingSettingsInteractor_delegate);
      if (v11)
      {
        v12 = v11;
        sub_E3770(v10 & 1);

        swift_unknownObjectRelease(v9);
        v13 = v12;
      }
      else
      {

        v13 = v9;
      }
      *(_QWORD *)&result = swift_unknownObjectRelease(v13).n128_u64[0];
    }
    else
    {

    }
  }
  return result;
}

uint64_t sub_1C0CA0(char a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 64) = a1;
  *(_BYTE *)(v3 + 65) = *a2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 24) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  *(_QWORD *)(v3 + 32) = v5;
  *(_QWORD *)(v3 + 40) = v6;
  return swift_task_switch(sub_1C0D18, v5, v6);
}

uint64_t sub_1C0D18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  int *v8;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8BookEPUB26ReadingSettingsDataManager_themeDatabaseManager);
  v2 = v1[3];
  v3 = v1[4];
  sub_472D0(v1, v2);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(int **)(v4 + 32);
  v8 = (int *)((char *)v5 + *v5);
  v6 = (_QWORD *)swift_task_alloc(v5[1]);
  *(_QWORD *)(v0 + 48) = v6;
  *v6 = v0;
  v6[1] = sub_1C0DAC;
  return ((uint64_t (*)(_UNKNOWN **, uint64_t, uint64_t))v8)(&off_379540, v2, v4);
}

uint64_t sub_1C0DAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 48);
  *(_QWORD *)(*v1 + 56) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1C0E04, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1C0E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD *v4;
  char v5;
  char v6;
  __int128 v7;
  char *v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  __n128 v31;
  char v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;

  swift_release();
  v1 = 6;
  v37 = v0;
  v36 = *(_QWORD *)(v0 + 56);
  sub_F529C(0, 6, 0);
  v2 = v36;
  v3 = &byte_379560;
  v4 = _swiftEmptyArrayStorage;
  do
  {
    v6 = *v3++;
    v5 = v6;
    v7 = 0uLL;
    if (*(_QWORD *)(v2 + 16))
    {
      v8 = v3;
      v9 = v5;
      sub_3BA4C(v5);
      if ((v11 & 1) != 0)
      {
        v2 = v36;
        v12 = *(_QWORD *)(v36 + 56) + 56 * v10;
        v13 = *(_QWORD *)v12;
        v14 = *(unsigned __int8 *)(v12 + 8);
        v15 = *(unsigned __int8 *)(v12 + 9);
        v34 = *(_OWORD *)(v12 + 16);
        v16 = *(_QWORD *)(v12 + 32);
        v17 = *(unsigned __int8 *)(v12 + 40);
        v18 = *(unsigned __int8 *)(v12 + 41);
        v19 = *(_QWORD *)(v12 + 48);
        v20 = 256;
        if (!v15)
          v20 = 0;
        v21 = v20 | v14;
        v22 = v17 | (v18 << 8);
        swift_bridgeObjectRetain(v13);
        v23 = v16;
        v7 = v34;
        v0 = v37;
        v3 = v8;
        v5 = v9;
      }
      else
      {
        v13 = 0;
        v21 = 0;
        v23 = 0;
        v22 = 0;
        v19 = 0;
        v2 = v36;
        v0 = v37;
        v3 = v8;
        v5 = v9;
        v7 = 0uLL;
      }
    }
    else
    {
      v13 = 0;
      v21 = 0;
      v23 = 0;
      v22 = 0;
      v19 = 0;
    }
    v38 = v4;
    v25 = v4[2];
    v24 = v4[3];
    if (v25 >= v24 >> 1)
    {
      v33 = v5;
      v29 = v3;
      v35 = v7;
      v30 = v23;
      sub_F529C(v24 > 1, v25 + 1, 1);
      v23 = v30;
      v7 = v35;
      v5 = v33;
      v3 = v29;
      v2 = v36;
      v0 = v37;
      v4 = v38;
    }
    v26 = *(_BYTE *)(v0 + 65);
    v27 = *(_BYTE *)(v0 + 64) & 1;
    v4[2] = v25 + 1;
    v28 = &v4[8 * v25];
    *((_BYTE *)v28 + 32) = v5;
    *((_BYTE *)v28 + 33) = v27;
    *((_BYTE *)v28 + 34) = v26;
    v28[5] = v13;
    v28[6] = v21;
    *(_OWORD *)(v28 + 7) = v7;
    v28[9] = v23;
    v28[10] = v22;
    v28[11] = v19;
    --v1;
  }
  while (v1);
  v31 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(_QWORD *, __n128))(v0 + 8))(v4, v31);
}

id sub_1C103C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadingSettingsDataManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1C1110()
{
  return type metadata accessor for ReadingSettingsDataManager(0);
}

uint64_t type metadata accessor for ReadingSettingsDataManager(uint64_t a1)
{
  uint64_t result;

  result = qword_3C1170;
  if (!qword_3C1170)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadingSettingsDataManager);
  return result;
}

uint64_t sub_1C1154(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_2F21F0;
  v4[1] = &unk_2F2208;
  v4[2] = &unk_2F2208;
  v4[3] = &unk_2F2208;
  v4[4] = &unk_2F2220;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1C11F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1C1214(char *a1)
{
  uint64_t v1;

  return sub_1C0738(a1, v1);
}

double sub_1C121C(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1C0840(a1, v1);
}

double sub_1C1224(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0A54(a1, v1);
}

double sub_1C122C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C0BB8(a1, v1);
}

uint64_t sub_1C1234()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1C1260@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;

  if (!result)
    goto LABEL_28;
  v3 = result;
  v17 = 7368564;
  v18 = 0xE300000000000000;
  AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_3BB34((uint64_t)v19), (v5 & 1) != 0))
  {
    sub_344A8(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_3F14C((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_27;
  result = swift_dynamicCast(&v17, &v20, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((result & 1) == 0)
    goto LABEL_28;
  v6 = v17;
  v17 = 1952867692;
  v18 = 0xE400000000000000;
  AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v7 = sub_3BB34((uint64_t)v19), (v8 & 1) != 0))
  {
    sub_344A8(*(_QWORD *)(v3 + 56) + 32 * v7, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_3F14C((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_27;
  result = swift_dynamicCast(&v17, &v20, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((result & 1) == 0)
    goto LABEL_28;
  v9 = v17;
  v17 = 0x6874646977;
  v18 = 0xE500000000000000;
  AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v10 = sub_3BB34((uint64_t)v19), (v11 & 1) != 0))
  {
    sub_344A8(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_3F14C((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    goto LABEL_27;
  result = swift_dynamicCast(&v17, &v20, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((result & 1) == 0)
  {
LABEL_28:
    v9 = 0;
    v6 = 0;
    v12 = 0;
    v16 = 0;
    v15 = 1;
    goto LABEL_29;
  }
  v12 = v17;
  v17 = 0x746867696568;
  v18 = 0xE600000000000000;
  AnyHashable.init<A>(_:)(&v17, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v13 = sub_3BB34((uint64_t)v19), (v14 & 1) != 0))
  {
    sub_344A8(*(_QWORD *)(v3 + 56) + 32 * v13, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_3F14C((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
  {
LABEL_27:
    result = sub_4E27C((uint64_t)&v20);
    goto LABEL_28;
  }
  result = swift_dynamicCast(&v17, &v20, (char *)&type metadata for Any + 8, &type metadata for Double, 6);
  if ((result & 1) == 0)
    goto LABEL_28;
  v15 = 0;
  v16 = v17;
LABEL_29:
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v16;
  *(_BYTE *)(a2 + 32) = v15;
  return result;
}

uint64_t BookContentLayoutController.contentLoader(ordinal:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  char v12;
  _QWORD v14[5];

  CurrentValueSubject.value.getter(v14);
  v2 = v14[0];
  v3 = v14[3];
  swift_unknownObjectRelease(v14[1]);
  swift_unknownObjectRelease(v3);
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(v2);
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType(v6);
      v9 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 24);
      v10 = swift_unknownObjectRetain(v6);
      v11 = v9(ObjectType, v7, v10);
      if ((v12 & 1) == 0 && v11 == a1)
      {
        swift_bridgeObjectRelease_n(v2, 2);
        return v6;
      }
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n(v2, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
  }
  return 0;
}

uint64_t sub_1C1610(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_319AC(&qword_3B82B8);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_1C1690(uint64_t a1, unint64_t a2)
{
  int64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v2 = a2;
  if (a2 >> 62)
  {
LABEL_36:
    if (v2 < 0)
      v15 = v2;
    else
      v15 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v15);
    if (!((unint64_t)a1 >> 62))
      goto LABEL_3;
LABEL_40:
    v21 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
    goto LABEL_4;
  }
  v4 = *(_QWORD *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a1);
  if ((unint64_t)a1 >> 62)
    goto LABEL_40;
LABEL_3:
  v21 = a1 & 0xFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
LABEL_4:
  sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
  v6 = 0;
  v7 = 0;
  v19 = v2 & 0xFFFFFFFFFFFFFF8;
  v20 = v2 & 0xC000000000000001;
  v17 = v2;
  v18 = v2 + 32;
  v2 = a1 & 0xC000000000000001;
  while (1)
  {
    if (v7 == v4)
    {
      v8 = 0;
      v9 = 0;
      v7 = v4;
      if (v5 == v6)
        goto LABEL_27;
      goto LABEL_14;
    }
    if (v20)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v17);
    }
    else
    {
      if ((v7 & 0x8000000000000000) != 0)
        goto LABEL_33;
      if (v7 >= *(_QWORD *)(v19 + 16))
        goto LABEL_34;
      v10 = *(id *)(v18 + 8 * v7);
    }
    v8 = v10;
    if (__OFADD__(v7++, 1))
      goto LABEL_35;
    if (v5 == v6)
      break;
LABEL_14:
    if (v2)
    {
      v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
    }
    else
    {
      if (v6 >= *(_QWORD *)(v21 + 16))
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v12 = *(id *)(a1 + 8 * v6 + 32);
    }
    v9 = v12;
    if (__OFADD__(v6, 1))
      goto LABEL_32;
    if (!v8)
      goto LABEL_27;
    if (!v12)
      goto LABEL_25;
    v13 = static NSObject.== infix(_:_:)(v8, v12);

    ++v6;
    if ((v13 & 1) == 0)
    {
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(a1);
      return 0;
    }
  }
  if (v10)
  {
LABEL_25:
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(a1);

    return 0;
  }
  v9 = 0;
LABEL_27:
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(a1);
  if (v9)
  {

    return 0;
  }
  return 1;
}

BOOL sub_1C18E8(_BOOL8 result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  _BYTE *v5;
  char *v6;
  char v7;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(result + 16);
  v4 = 0;
  if (!v2)
    return v4 == v3;
  v5 = (_BYTE *)(a2 + 40);
  v6 = (char *)(result + 40);
  while (v4 < v2)
  {
    if (v3 == v4)
      return 0;
    v7 = *v6;
    if ((*v5 & 1) != 0)
    {
      if (!*v6)
        return 0;
    }
    else
    {
      if (*((_QWORD *)v5 - 1) != *((_QWORD *)v6 - 1))
        v7 = 1;
      if ((v7 & 1) != 0)
        return 0;
    }
    ++v4;
    v5 += 16;
    v6 += 16;
    if (v2 == v4)
      return v4 == v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, __n128);
  __n128 v8;
  _QWORD v10[5];

  CurrentValueSubject.value.getter(v10);
  v0 = v10[0];
  v1 = v10[3];
  swift_unknownObjectRelease(v10[1]);
  swift_unknownObjectRelease(v1);
  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain(v0);
    v3 = (uint64_t *)(v0 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      ObjectType = swift_getObjectType(v4);
      v7 = *(void (**)(uint64_t, uint64_t, __n128))(v5 + 256);
      v8 = swift_unknownObjectRetain(v4);
      v7(ObjectType, v5, v8);
      swift_unknownObjectRelease(v4);
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(v0);
  }
  return swift_bridgeObjectRelease(v0);
}

uint64_t sub_1C1A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[7] = v4;
  v3[8] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[9] = v5;
  v3[10] = v6;
  return swift_task_switch(sub_1C1A90, v5, v6);
}

uint64_t sub_1C1A90()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;

  v1 = String.cfiSpineIndex.getter(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  if ((v2 & 1) == 0)
  {
    v3 = v1;
    v4 = BookContentLayoutController.contentLoader(ordinal:)(v1);
    *(_QWORD *)(v0 + 88) = v4;
    if (v4)
    {
      v6 = v4;
      v7 = v5;
      v9 = *(_QWORD *)(v0 + 32);
      v8 = *(_QWORD *)(v0 + 40);
      v10 = static MainActor.shared.getter(v4);
      *(_QWORD *)(v0 + 96) = v10;
      v11 = (_QWORD *)swift_task_alloc(48);
      *(_QWORD *)(v0 + 104) = v11;
      v11[2] = v6;
      v11[3] = v7;
      v11[4] = v9;
      v11[5] = v8;
      v12 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
      *(_QWORD *)(v0 + 112) = v12;
      *v12 = v0;
      v12[1] = sub_1C1DA4;
      return withCheckedContinuation<A>(isolation:function:_:)(v0 + 120, v10, &protocol witness table for MainActor, 0x63287463656C6573, 0xEC000000293A6966, sub_1D578C, v11, &type metadata for Bool);
    }
    swift_release(*(_QWORD *)(v0 + 64));
    v16 = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v16, v25))
      goto LABEL_10;
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v26 = 134217984;
    *(_QWORD *)(v0 + 24) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v26 + 4);
    _os_log_impl(&dword_0, v16, v25, "No loader for ordinal %ld", v26, 0xCu);
    v23 = v26;
LABEL_9:
    swift_slowDealloc(v23, -1, -1);
LABEL_10:

    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v14 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 64));
  v15 = swift_bridgeObjectRetain_n(v14, 2);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter();
  v18 = os_log_type_enabled(v16, v17);
  v19 = *(_QWORD *)(v0 + 40);
  if (v18)
  {
    v20 = *(_QWORD *)(v0 + 32);
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v27 = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain(v19);
    *(_QWORD *)(v0 + 16) = sub_33524(v20, v19, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v21 + 4);
    swift_bridgeObjectRelease_n(v19, 3);
    _os_log_impl(&dword_0, v16, v17, "Unable to extract ordinal from cfi '%s'", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    v23 = v21;
    goto LABEL_9;
  }

  swift_bridgeObjectRelease_n(v19, 2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1C1DA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  v3 = *(_QWORD *)(*v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1C1E0C, *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_1C1E0C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release(*(_QWORD *)(v0 + 64));
  v2 = swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(*(unsigned __int8 *)(v0 + 120), v2);
}

uint64_t sub_1C1E4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  CurrentValueSubject.value.getter(&v19);
  v2 = v19;
  v3 = v22;
  swift_unknownObjectRelease(v20);
  swift_unknownObjectRelease(v3);
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(v2 + 40);
    while (1)
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType(v6);
      v9 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v7 + 144);
      v10 = swift_unknownObjectRetain(v6);
      v9(&v19, ObjectType, v7, v10);
      v11 = v20;
      if (v20)
        break;
      swift_unknownObjectRelease(v6);
      v5 += 2;
      if (!--v4)
        goto LABEL_5;
    }
    v14 = v21;
    v15 = v19;
    v16 = swift_bridgeObjectRelease(v2);
    (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(ObjectType, v7, v16);
    swift_unknownObjectRelease(v6);
    v17 = type metadata accessor for BookContentLayoutController.Selection(0);
    v18 = (_QWORD *)(a1 + *(int *)(v17 + 20));
    *v18 = v15;
    v18[1] = v11;
    v18[2] = v14;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 0, 1, v17);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease(v2);
    v12 = type metadata accessor for BookContentLayoutController.Selection(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

double BookContentLayoutController.Selection.rects.getter()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = type metadata accessor for BookContentLayoutController.Selection(0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(*(_QWORD *)(v0 + *(int *)(v1 + 20) + 16)).n128_u64[0];
  return result;
}

uint64_t BookContentLayoutController.Selection.text.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for BookContentLayoutController.Selection(0) + 20));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

__n128 BookContentLayoutController.__allocating_init(currentLocationProvider:currentLocationController:bookEntity:contentHostEnvironmentProvider:contentLayoutProvider:imageFilterMode:lineGuideEnabled:reloadAction:paginationProvider:pageNumberProvider:stylesheetProvider:configuration:currentContentLocation:contentLoadingClass:snapshotLoadingClass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19, unsigned __int8 *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t ObjectType;
  __n128 result;

  ObjectType = swift_getObjectType(a14);
  sub_1D355C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a16, a17, a18, a19, a20,
    a21,
    a22,
    a23,
    a24,
    v24,
    ObjectType,
    a15);
  return result;
}

uint64_t BookContentLayoutController.updateHandlers(webMessageHandler:eventHandler:navigationEventHandler:citationHandler:alertHandler:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v17 = *(_QWORD *)(v10 + 312);
  if (result)
  {
    v18 = result;
    v19 = v17 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_webMessageHandler;
    *(_QWORD *)(v19 + 8) = a2;
    result = swift_unknownObjectWeakAssign(v19, v18);
  }
  if (a3)
  {
    v20 = v17 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_eventHandler;
    *(_QWORD *)(v20 + 8) = a4;
    result = swift_unknownObjectWeakAssign(v20, a3);
  }
  if (a5)
  {
    v21 = v17 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_navigationEventHandler;
    *(_QWORD *)(v21 + 8) = a6;
    result = swift_unknownObjectWeakAssign(v21, a5);
  }
  if (a7)
  {
    v22 = v17 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_citationHandler;
    *(_QWORD *)(v22 + 8) = a8;
    result = swift_unknownObjectWeakAssign(v22, a7);
  }
  if (a9)
  {
    v23 = v17 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_alertHandler;
    *(_QWORD *)(v17 + OBJC_IVAR____TtC8BookEPUB22ContentMessageMediator_alertHandler + 8) = a10;
    return swift_unknownObjectWeakAssign(v23, a9);
  }
  return result;
}

uint64_t sub_1C21C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 40) = a2;
  *(_QWORD *)(v4 + 48) = v3;
  *(_BYTE *)(v4 + 112) = a3;
  *(_QWORD *)(v4 + 32) = a1;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 56) = static MainActor.shared.getter();
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = v7;
  return swift_task_switch(sub_1C2234, v6, v7);
}

uint64_t sub_1C2234()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  __n128 v9;

  v1 = String.cfiSpineIndex.getter(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  if ((v2 & 1) != 0
    || (v3 = BookContentLayoutController.contentLoader(ordinal:)(v1), (*(_QWORD *)(v0 + 80) = v3) == 0))
  {
    v9 = swift_release(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v9);
  }
  else
  {
    v5 = v4;
    ObjectType = swift_getObjectType(v3);
    v7 = (_QWORD *)swift_task_alloc(dword_3C0B44);
    *(_QWORD *)(v0 + 88) = v7;
    *v7 = v0;
    v7[1] = sub_1C22E4;
    return sub_1B8E30(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 112), ObjectType, v5);
  }
}

uint64_t sub_1C22E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  *(_QWORD *)(*(_QWORD *)v2 + 96) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[8];
    v7 = v4[9];
    v8 = sub_1C239C;
  }
  else
  {
    v4[13] = a1;
    v6 = v4[8];
    v7 = v4[9];
    v8 = sub_1C2358;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1C2358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 80);
  swift_release(*(_QWORD *)(v0 + 56));
  v3 = swift_unknownObjectRelease(v2);
  return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v1, v3);
}

uint64_t sub_1C239C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRetain(v2);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain(v2);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 32);
    v9 = swift_slowAlloc(22, -1);
    v17 = (uint64_t *)swift_slowAlloc(8, -1);
    v18 = swift_slowAlloc(32, -1);
    v20 = v18;
    *(_DWORD *)v9 = 136315394;
    swift_bridgeObjectRetain(v7);
    *(_QWORD *)(v0 + 16) = sub_33524(v8, v7, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4);
    swift_bridgeObjectRelease_n(v7, 3);
    *(_WORD *)(v9 + 12) = 2112;
    v10 = _convertErrorToNSError(_:)(v6);
    *(_QWORD *)(v0 + 24) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v9 + 14);
    *v17 = v10;
    swift_errorRelease(v6);
    swift_errorRelease(v6);
    _os_log_impl(&dword_0, v4, v5, "Failed to get rects for CFI %s: %@", (uint8_t *)v9, 0x16u);
    v11 = sub_319AC(&qword_3B8A70);
    swift_arrayDestroy(v17, 1, v11);
    swift_slowDealloc(v17, -1, -1);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v9, -1, -1);
    swift_errorRelease(v6);

    v12 = swift_unknownObjectRelease(v19);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 96);
    v14 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 40);
    swift_errorRelease(v13);

    swift_unknownObjectRelease(v14);
    swift_bridgeObjectRelease_n(v15, 2);
    swift_errorRelease(v13);
    swift_errorRelease(v13);
  }
  return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v12);
}

uint64_t sub_1C2608(unint64_t *a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  char v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  Swift::String v16;
  void *object;
  Swift::String v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22[5];
  uint64_t v23;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v21 = *a1;
  v6 = sub_1C34BC(&v21);
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    ObjectType = swift_getObjectType(v6);
    v21 = v1;
    v22[0] = v2;
    v22[1] = v3;
    v22[2] = v4;
    v22[3] = v5;
    v11 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v9 + 136))(&v21, ObjectType, v9);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    v12 = Logger.logObject.getter(0);
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      *(_DWORD *)v14 = 136315138;
      v23 = v15;
      v21 = 0;
      v22[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v22[0]);
      v21 = 0xD000000000000011;
      v22[0] = 0x80000000002C85D0;
      v22[4] = v1;
      v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v16._object;
      String.append(_:)(v16);
      swift_bridgeObjectRelease(object);
      v18._countAndFlagsBits = 41;
      v18._object = (void *)0xE100000000000000;
      String.append(_:)(v18);
      v19 = v22[0];
      v21 = sub_33524(v21, v22[0], &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v14 + 4);
      swift_bridgeObjectRelease(v19);
      _os_log_impl(&dword_0, v12, v13, "Unable to present edit menu: no loader for %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    v11 = 0;
  }
  return v11 & 1;
}

void BookContentLayoutController.peripheralAccessoryView(at:)(uint64_t *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];

  v1 = *a1;
  v2 = *((double *)a1 + 1);
  v3 = *((double *)a1 + 2);
  CurrentValueSubject.value.getter(v10);
  v4 = v10[0];
  v5 = v10[3];
  swift_unknownObjectRelease(v10[1]);
  swift_unknownObjectRelease(v5);
  swift_unknownObjectRetain(v1);
  v6 = (uint64_t)sub_1D4674(v4, v1, v2, v3);
  swift_bridgeObjectRelease(v4);
  swift_unknownObjectRelease(v1);
  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v8 = v6;
    else
      v8 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v6);
    if (!v9)
      goto LABEL_6;
  }
  else if (!*(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8)))
  {
LABEL_6:
    swift_bridgeObjectRelease(v6);
    return;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
    goto LABEL_6;
  }
  if (*(_QWORD *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFF8)))
  {
    v7 = *(id *)(v6 + 32);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t BookContentLayoutController.contentLoader(containing:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  void *v14;
  BOOL v15;
  _QWORD v17[3];
  _QWORD v18[5];

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  CurrentValueSubject.value.getter(v18);
  v4 = v18[0];
  v5 = v18[3];
  swift_unknownObjectRelease(v18[1]);
  swift_unknownObjectRelease(v5);
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(v4);
    v7 = (uint64_t *)(v4 + 40);
    do
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      ObjectType = swift_getObjectType(v8);
      v11 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v9 + 48);
      v12 = swift_unknownObjectRetain(v8);
      v13 = v11(ObjectType, v9, v12);
      if (v13)
      {
        v14 = (void *)v13;
        swift_getObjectType(v13);
        v17[0] = v1;
        v17[1] = v2;
        v17[2] = v3;
        v15 = UICoordinateSpace.contains(_:)((uint64_t)v17);

        if (v15)
        {
          swift_bridgeObjectRelease_n(v4, 2);
          return v8;
        }
      }
      swift_unknownObjectRelease(v8);
      v7 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease_n(v4, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v4);
  }
  return 0;
}

uint64_t BookContentLayoutController.contentLoader(associatedWith:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  void *v12;
  id v13;
  char v14;
  uint64_t v16;
  _QWORD v17[5];

  CurrentValueSubject.value.getter(v17);
  v2 = v17[0];
  v3 = v17[3];
  swift_unknownObjectRelease(v17[1]);
  swift_unknownObjectRelease(v3);
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(v2);
    v16 = v2;
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType(v6);
      v9 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 48);
      v10 = swift_unknownObjectRetain(v6);
      v11 = v9(ObjectType, v7, v10);
      if (v11)
      {
        v12 = (void *)v11;
        sub_34450(0, (unint64_t *)&qword_3B8CB0, UIView_ptr);
        v13 = a1;
        v14 = static NSObject.== infix(_:_:)(v12, v13);

        if ((v14 & 1) != 0)
        {
          swift_bridgeObjectRelease_n(v16, 2);
          return v6;
        }
      }
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n(v16, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
  }
  return 0;
}

void BookContentLayoutController.convertRectToWindow(_:fromOrdinal:)(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  id v32;
  double x;
  double y;
  double width;
  double height;
  id v37;
  double v38;
  double v39;
  double v40;
  double v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  CGRect v47;
  CGRect v48;

  v12 = BookContentLayoutController.contentLoader(ordinal:)(a1);
  if (v12)
  {
    v14 = v12;
    v15 = v13;
    ObjectType = swift_getObjectType(v12);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 48))(ObjectType, v15);
    if (v17)
    {
      v18 = (id)v17;
      v19 = objc_opt_self(WKWebView);
      v20 = swift_dynamicCastObjCClass(v18, v19);
      if (v20)
      {
        v21 = (void *)v20;
        v18 = v18;
        v22 = objc_msgSend(v18, "window");
        if (v22)
        {
          v23 = v22;
          objc_msgSend(v21, "be_convertPointFromContentsToView:", a3, a4);
          v25 = v24;
          v27 = v26;
          objc_msgSend(v21, "be_convertPointFromContentsToView:", a3 + a5, a4 + a6);
          v29 = v28 - v25;
          v31 = v30 - v27;
          v32 = v18;
          v47.origin.x = v25;
          v47.origin.y = v27;
          v47.size.width = v29;
          v47.size.height = v31;
          v48 = CGRectStandardize(v47);
          x = v48.origin.x;
          y = v48.origin.y;
          width = v48.size.width;
          height = v48.size.height;
          v37 = v23;
          objc_msgSend(v21, "convertRect:toCoordinateSpace:", v37, x, y, width, height);
          a3 = v38;
          a4 = v39;
          a5 = v40;
          a6 = v41;

          swift_unknownObjectRelease(v14);
          goto LABEL_13;
        }
        swift_unknownObjectRelease(v14);

      }
      else
      {
        swift_unknownObjectRelease(v14);
      }

    }
    else
    {
      swift_unknownObjectRelease(v14);
    }
  }
  v42 = Logger.logObject.getter(v12);
  v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v44 = 134217984;
    v45 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v44 + 4);
    swift_slowDealloc(v44, -1, -1);
  }

LABEL_13:
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(_BYTE *)(a2 + 32) = 0;
}

uint64_t sub_1C2E28(uint64_t *a1)
{
  return sub_1C2E4C(a1, sub_1D34D0, (uint64_t (*)(_QWORD *))sub_F76F4);
}

uint64_t sub_1C2E4C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

double sub_1C2EC4(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v12;
  double result;
  uint64_t v14;

  *(_BYTE *)(v1[34] + 104) = a1;
  v14 = v1[40];
  v3 = v1[16];
  swift_bridgeObjectRetain(v14);
  v4 = swift_bridgeObjectRetain(v3);
  sub_66808(v4);
  v5 = *(_QWORD *)(v14 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain(v14);
    v6 = (uint64_t *)(v14 + 40);
    v7 = a1 & 1;
    do
    {
      v8 = *(v6 - 1);
      v9 = *v6;
      ObjectType = swift_getObjectType(v8);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 336);
      v12 = swift_unknownObjectRetain(v8);
      v11(v7, ObjectType, v9, v12);
      swift_unknownObjectRelease(v8);
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(v14);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

uint64_t sub_1C2F90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C2FD0 + 4 * byte_2F2250[a1]))(0x436F5474756F6261, 0xED000065676E6168);
}

unint64_t sub_1C2FD0()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1C3038()
{
  return 0xD000000000000013;
}

uint64_t BookContentLayoutController.LayoutState.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C3084 + 4 * byte_2F2256[*v0]))(0x64696C61766E69, 0xE700000000000000);
}

uint64_t sub_1C3084()
{
  return 0x436F5474756F6261;
}

uint64_t sub_1C30A8()
{
  return 0x676E69676E616863;
}

uint64_t sub_1C30C0()
{
  return 1701736292;
}

uint64_t sub_1C30D0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for Logger(0);
  sub_55F54(v0, qword_3C11A0);
  sub_555F0(v0, (uint64_t)qword_3C11A0);
  sub_34450(0, (unint64_t *)&qword_3B80A0, OS_os_log_ptr);
  v1 = OS_os_log.init(subsystem:category:)(0xD000000000000013, 0x80000000002C6E50, 0xD000000000000022, 0x80000000002D0440);
  return Logger.init(_:)(v1);
}

uint64_t BookContentLayoutController.PartialContent.visibleLoaderWithSelection()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *i;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain_n(*v0, 2);
  for (i = (uint64_t *)(v1 + 40); ; i += 2)
  {
    v4 = *(i - 1);
    v5 = *i;
    ObjectType = swift_getObjectType(v4);
    v7 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v5 + 144);
    v8 = swift_unknownObjectRetain(v4);
    v7(&v11, ObjectType, v5, v8);
    v9 = v12;
    sub_86ABC(v11, v12, v13);
    if (v9)
      break;
    swift_unknownObjectRelease(v4);
    if (!--v2)
    {
      swift_bridgeObjectRelease_n(v1, 2);
      return 0;
    }
  }
  swift_bridgeObjectRelease_n(v1, 2);
  return v4;
}

uint64_t sub_1C3244()
{
  return 0;
}

_QWORD *sub_1C3250@<X0>(_QWORD *a1@<X8>)
{
  return CurrentValueSubject.value.getter(a1);
}

uint64_t type metadata accessor for BookContentLayoutController.Selection(uint64_t a1)
{
  return sub_3E7A8(a1, qword_3C15A0, (uint64_t)&nominal type descriptor for BookContentLayoutController.Selection);
}

uint64_t sub_1C3284@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 80, v8, 0, 0);
  v5 = *(_QWORD *)(v3 + 80);
  v4 = *(_QWORD *)(v3 + 88);
  v6 = swift_allocObject(&unk_387F90, 32);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1D567C;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

double sub_1C32F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject(&unk_387F68, 32);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess(*a2 + 80, v8, 1, 0);
  *(_QWORD *)(v6 + 80) = sub_1D567C;
  *(_QWORD *)(v6 + 88) = v5;
  swift_retain();
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

uint64_t sub_1C337C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + 80, v3, 0, 0);
  v1 = *(_QWORD *)(v0 + 80);
  swift_retain(*(_QWORD *)(v0 + 88));
  return v1;
}

uint64_t sub_1C33C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  swift_beginAccess(v2 + 80, v7, 1, 0);
  v5 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return swift_release(v5);
}

uint64_t (*sub_1C3414(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 80, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1C3450()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC(&qword_3B7290);
  v1 = sub_3DCC0((unint64_t *)&unk_3BE730, &qword_3B7290, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_1C34BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];

  v1 = *a1;
  CurrentValueSubject.value.getter(v18);
  v2 = v18[0];
  v3 = v18[3];
  swift_unknownObjectRelease(v18[1]);
  swift_unknownObjectRelease(v3);
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(v2);
    v5 = (uint64_t *)(v2 + 40);
    do
    {
      v6 = *(v5 - 1);
      v7 = *v5;
      ObjectType = swift_getObjectType(v6);
      v9 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, __n128))(v7 + 40);
      v10 = swift_unknownObjectRetain(v6);
      v9(v15, ObjectType, v7, v10);
      if (v16)
      {
        v11 = v17;
        sub_472D0(v15, v16);
        sub_1B841C(v11, &v14);
        v12 = v14;
        sub_34488(v15);
        if (v12 == v1)
        {
          swift_bridgeObjectRelease_n(v2, 2);
          return v6;
        }
      }
      else
      {
        sub_52128((uint64_t)v15, &qword_3B8990);
      }
      swift_unknownObjectRelease(v6);
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n(v2, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
  }
  return 0;
}

void sub_1C360C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18[3];
  uint64_t v19;
  uint64_t v20;

  v3 = *a1;
  v5 = *((double *)a1 + 1);
  v4 = *((double *)a1 + 2);
  v18[0] = *a1;
  v6 = sub_1C34BC(v18);
  if (v6)
  {
    v8 = v6;
    v9 = v7;
    ObjectType = swift_getObjectType(v6);
    v18[0] = v3;
    *(double *)&v18[1] = v5;
    *(double *)&v18[2] = v4;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 280))(v18, ObjectType, v9);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    v11 = Logger.logObject.getter(0);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v14 = swift_slowAlloc(64, -1);
      v18[0] = v14;
      *(_DWORD *)v13 = 136315394;
      v19 = sub_33524(0x54747265766E6F63, 0xEF293A5F2849556FLL, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v13 + 4);
      *(_WORD *)(v13 + 12) = 2080;
      v15 = sub_5D6E8(v3, v5, v4);
      v17 = v16;
      v19 = sub_33524(v15, v16, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v13 + 14);
      swift_bridgeObjectRelease(v17);
      _os_log_impl(&dword_0, v11, v12, "%s Unable to find loader for point: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }

    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
}

double sub_1C37FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  __int128 v10;
  double result;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;

  v4 = *(_OWORD *)(a1 + 16);
  v22[0] = *(_OWORD *)a1;
  v22[1] = v4;
  v23 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v19[0] = *(_QWORD *)&v22[0];
  v5 = sub_1C34BC((uint64_t *)v19);
  if (v5)
  {
    v7 = v5;
    v8 = v6;
    ObjectType = swift_getObjectType(v5);
    v10 = *(_OWORD *)(a1 + 16);
    v19[0] = *(_OWORD *)a1;
    v19[1] = v10;
    v20 = *(_QWORD *)(a1 + 32);
    (*(void (**)(_OWORD *, uint64_t, uint64_t))(v8 + 296))(v19, ObjectType, v8);
    *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  }
  else
  {
    v12 = Logger.logObject.getter(0);
    v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc(22, -1);
      v15 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v19[0] = v15;
      *(_DWORD *)v14 = 136315394;
      v21 = sub_33524(0x54747265766E6F63, 0xEF293A5F2849556FLL, (uint64_t *)v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v14 + 4);
      *(_WORD *)(v14 + 12) = 2080;
      v16 = sub_5D4E8();
      v18 = v17;
      v21 = sub_33524(v16, v17, (uint64_t *)v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v14 + 14);
      swift_bridgeObjectRelease(v18);
      _os_log_impl(&dword_0, v12, v13, "%s Unable to find loader for rect: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy(v15, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }

    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_1C39F8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  CurrentValueSubject.value.getter(&v19);
  v6 = v19;
  v7 = v22;
  swift_unknownObjectRelease(v20);
  swift_unknownObjectRelease(v7);
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain(v6);
    v9 = (uint64_t *)(v6 + 40);
    do
    {
      v10 = *(v9 - 1);
      v11 = *v9;
      ObjectType = swift_getObjectType(v10);
      v13 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 48);
      v14 = swift_unknownObjectRetain(v10);
      v15 = v13(ObjectType, v11, v14);
      if (v15)
      {
        v16 = (void *)v15;
        swift_getObjectType(v15);
        v18[0] = v3;
        v18[1] = v4;
        v18[2] = v5;
        v17 = UICoordinateSpace.contains(_:)((uint64_t)v18);

        if (v17)
        {
          swift_bridgeObjectRelease_n(v6, 2);
          v19 = v3;
          v20 = v4;
          v21 = v5;
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 272))(&v19, ObjectType, v11);
          swift_unknownObjectRelease(v10);
          return;
        }
      }
      swift_unknownObjectRelease(v10);
      v9 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease(v6);
  }
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
}

BOOL sub_1C3B4C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[18];
  _BYTE v24[24];

  v1 = v0;
  swift_beginAccess(v0 + 14, v24, 0, 0);
  v2 = v0[14];
  v3 = v1[15];
  ObjectType = swift_getObjectType(v2);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 120);
  v6 = swift_unknownObjectRetain(v2);
  v7 = v5(ObjectType, v3, v6);
  swift_unknownObjectRelease(v2);
  if (v7 >= 2)
  {
    v8 = v1[3];
    v9 = swift_getObjectType(v1[2]);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 16))(v23, v9, v8);
    sub_49900((uint64_t)v23);
    if (!v23[1])
    {
      v11 = v23[0];
      v12 = v1 + 28;
      v14 = v1[31];
      v13 = v1[32];
      sub_472D0(v12, v14);
      v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 64))(v14, v13);
      v16 = v15;
      if (*(_QWORD *)(v15 + 16))
      {
        sub_49F1C(v15 + 32, (uint64_t)&v20);
      }
      else
      {
        v22 = 0;
        v20 = 0u;
        v21 = 0u;
      }
      swift_bridgeObjectRelease(v16);
      v17 = *((_QWORD *)&v21 + 1);
      if (*((_QWORD *)&v21 + 1))
      {
        v18 = v22;
        sub_472D0(&v20, *((uint64_t *)&v21 + 1));
        v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
        sub_34488(&v20);
        return v11 == v19;
      }
      sub_52128((uint64_t)&v20, &qword_3BD428);
    }
  }
  return 0;
}

uint64_t sub_1C3CB4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(uint64_t, uint64_t, __n128);
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[18];
  _BYTE v32[24];

  v1 = v0;
  swift_beginAccess(v0 + 14, v32, 0, 0);
  v2 = v0[14];
  v3 = v1[15];
  ObjectType = swift_getObjectType(v2);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v3 + 120);
  v6 = swift_unknownObjectRetain(v2);
  v7 = v5(ObjectType, v3, v6);
  swift_unknownObjectRelease(v2);
  if (v7 < 2)
    return 0;
  v8 = v1[3];
  v9 = swift_getObjectType(v1[2]);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 16))(v31, v9, v8);
  v10 = v31[0];
  v11 = v31[1];
  v12 = v1[31];
  v13 = v1[32];
  sub_472D0(v1 + 28, v12);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 64))(v12, v13);
  v15 = v14;
  v16 = *(_QWORD *)(v14 + 16);
  if (v16)
  {
    sub_49F1C(v14 + 40 * v16 - 8, (uint64_t)&v28);
  }
  else
  {
    v30 = 0;
    v28 = 0u;
    v29 = 0u;
  }
  swift_bridgeObjectRelease(v15);
  v17 = *((_QWORD *)&v29 + 1);
  if (!*((_QWORD *)&v29 + 1))
  {
    sub_52128((uint64_t)&v28, &qword_3BD428);
    goto LABEL_11;
  }
  v18 = v30;
  sub_472D0(&v28, *((uint64_t *)&v29 + 1));
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v17, v18);
  sub_34488(&v28);
  if (v10 != v19)
  {
LABEL_11:
    sub_49900((uint64_t)v31);
    return 0;
  }
  v21 = v1[6];
  v20 = v1[7];
  v22 = swift_getObjectType(v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v22, v20);
  v24 = BookPaginationEntity.document(for:)(v10);
  swift_release(v23);
  result = sub_49900((uint64_t)v31);
  if (!v24)
    return 0;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    v26 = (uint64_t *)(v24 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
    swift_beginAccess(v24 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, &v28, 0, 0);
    v27 = *v26;
    swift_release(v24);
    return v11 + 1 == v27;
  }
  return result;
}

uint64_t sub_1C3EA0()
{
  if (sub_1C3B4C())
    return 1;
  else
    return sub_1C3CB4();
}

double sub_1C3EC4(uint64_t a1)
{
  uint64_t v1;

  swift_unknownObjectWeakAssign(*(_QWORD *)(v1 + 272) + 56, a1);
  return sub_1C3EE4();
}

double sub_1C3EE4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  __n128 v32;
  void *v33;
  uint64_t KeyPath;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  __n128 v39;
  uint64_t v40;
  double result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  __n128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  _QWORD v55[3];

  v1 = v0;
  v2 = sub_319AC(&qword_3C1620);
  v52 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v51 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_319AC(&qword_3C0038);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v53 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_319AC(&qword_3BD910);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v0 + 25;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 25);
  if (Strong)
  {
    v12 = Strong;
    v50 = v5;
    v13 = v4;
    v14 = v2;
    v15 = v1[26];
    ObjectType = swift_getObjectType(Strong);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 112))(ObjectType, v15);
    swift_unknownObjectRelease(v12);
    v55[0] = v17;
    v18 = sub_319AC((uint64_t *)&unk_3BE7D0);
    v19 = sub_3DCC0(&qword_3BD918, (uint64_t *)&unk_3BE7D0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v20 = sub_1396F0();
    Publisher<>.removeDuplicates()(v18, v19, v20);
    v2 = v14;
    v4 = v13;
    v5 = v50;
    swift_release();
    v21 = swift_allocObject(&unk_387DB0, 24);
    swift_weakInit(v21 + 16);
    v22 = sub_3DCC0(&qword_3BD928, &qword_3BD910, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    Publisher<>.sink(receiveValue:)(sub_1D56F0, v21, v7, v22);
    v23 = swift_release();
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v10, v7, v23);
    v24 = swift_beginAccess(v1 + 61, v55, 33, 0);
    AnyCancellable.store(in:)(v1 + 61, v24);
    swift_endAccess(v55);
    swift_release();
  }
  v25 = v1[3];
  v26 = swift_getObjectType(v1[2]);
  v55[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 48))(v26, v25);
  v27 = swift_unownedRetainStrong(v1);
  swift_unownedRetain(v27);
  swift_release();
  v28 = swift_allocObject(&unk_388030, 24);
  *(_QWORD *)(v28 + 16) = v1;
  v29 = sub_319AC(&qword_3B7298);
  v30 = sub_3DCC0(&qword_3BE7B0, &qword_3B7298, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher<>.sink(receiveValue:)(sub_1D571C, v28, v29, v30);
  swift_release();
  swift_release();
  v31 = swift_beginAccess(v1 + 61, v55, 33, 0);
  AnyCancellable.store(in:)(v1 + 61, v31);
  swift_endAccess(v55);
  swift_release();
  sub_34450(0, &qword_3BA5C8, NSUserDefaults_ptr);
  v33 = (void *)static NSUserDefaults.booksAppGroup.getter(v32);
  KeyPath = swift_getKeyPath(&unk_2F2700);
  v35 = v53;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(KeyPath, 5);

  swift_release();
  v36 = swift_allocObject(&unk_387DB0, 24);
  swift_weakInit(v36 + 16);
  v37 = sub_3DCC0((unint64_t *)&unk_3C0080, &qword_3C0038, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
  Publisher<>.sink(receiveValue:)(sub_1D5774, v36, v4, v37);
  v38 = swift_release();
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v35, v4, v38);
  v39 = swift_beginAccess(v1 + 61, v55, 33, 0);
  AnyCancellable.store(in:)(v1 + 61, v39);
  swift_endAccess(v55);
  swift_release();
  v40 = swift_unknownObjectWeakLoadStrong(v54);
  if (v40)
  {
    v42 = v40;
    v43 = objc_opt_self(UIView);
    if (swift_dynamicCastObjCClass(v42, v43))
    {
      v44 = swift_getKeyPath(&unk_2F2730);
      v45 = v51;
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v44, 5);
      swift_release();
      v46 = swift_allocObject(&unk_387DB0, 24);
      swift_weakInit(v46 + 16);
      v47 = sub_3DCC0(&qword_3C1628, &qword_3C1620, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
      Publisher<>.sink(receiveValue:)(sub_1D5784, v46, v2, v47);
      v48 = swift_release();
      (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v45, v2, v48);
      v49 = swift_beginAccess(v1 + 61, v55, 33, 0);
      AnyCancellable.store(in:)(v1 + 61, v49);
      swift_endAccess(v55);
      swift_unknownObjectRelease(v42);
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v42).n128_u64[0];
    }
  }
  return result;
}

double sub_1C4410(__int128 *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  double result;
  _BYTE v9[24];

  v3 = *a2;
  swift_beginAccess(*a2 + 112, v9, 1, 0);
  v4 = *(_QWORD *)(v3 + 112);
  v5 = *(_QWORD *)(v3 + 120);
  v6 = *a1;
  *(_OWORD *)(v3 + 112) = *a1;
  v7 = v6;
  swift_unknownObjectRetain_n(v6, 2);
  sub_1C448C(v4, v5);
  swift_unknownObjectRelease(v4);
  *(_QWORD *)&result = swift_unknownObjectRelease(v7).n128_u64[0];
  return result;
}

void sub_1C448C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, __n128);
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, __n128);
  __n128 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  dispatch_group_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, void (*)(uint64_t), uint64_t, _QWORD, uint64_t);
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(void ***__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(unint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(__n128);
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  _QWORD *v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  void **v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  unint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  char v121[32];

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v95 = *(_QWORD *)(v6 - 8);
  v96 = v6;
  __chkstk_darwin(v6);
  v94 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v92 = *(_QWORD *)(v8 - 8);
  v93 = v8;
  __chkstk_darwin(v8);
  v91 = (char *)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType(a1);
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 184);
  *(_QWORD *)&v99 = ObjectType;
  v12 = v11(ObjectType, a2);
  v14 = v13;
  swift_beginAccess(v2 + 112, v121, 0, 0);
  v15 = *(_QWORD *)(v2 + 112);
  v16 = *(_QWORD *)(v3 + 120);
  v17 = swift_getObjectType(*(_QWORD *)(v3 + 112));
  v18 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v16 + 184);
  v19 = swift_unknownObjectRetain(v15);
  v20 = v18(v17, v16, v19);
  v22 = v21;
  swift_unknownObjectRelease(v15);
  v23 = v12 == v20 && v14 == v22;
  v100 = v3;
  if (v23)
  {
    swift_bridgeObjectRelease_n(v14, 2);
  }
  else
  {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v20, v22, 0);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v22);
    if ((v24 & 1) == 0)
    {
      v25 = *(_QWORD *)(v3 + 112);
      v26 = *(_QWORD *)(v3 + 120);
      v27 = swift_getObjectType(v25);
      v28 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v26 + 24);
      v29 = swift_unknownObjectRetain(v25);
      v30 = v28(v27, v26, v29);
      swift_unknownObjectRelease(v25);
      if (v30 >= 4)
      {
        type metadata accessor for BookLayoutMode(0);
        v116 = v30;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v89, &v116, v89, &type metadata for UInt);
        __break(1u);
      }
      else
      {
        *(_BYTE *)(v3 + 305) = 0x101u >> (8 * v30);
        v31 = *(_QWORD *)(v3 + 272);
        v32 = *(_QWORD *)(v31 + 112);
        v33 = *(_OWORD *)(v3 + 112);
        *(_OWORD *)(v31 + 112) = v33;
        swift_unknownObjectRetain(v33);
        swift_unknownObjectRelease(v32);
        v35 = *(_QWORD *)(v3 + 112);
        v34 = *(_QWORD *)(v3 + 120);
        swift_unknownObjectRetain(v35);
        sub_1C5784(v36, v34);
        LOBYTE(v34) = v37;
        swift_unknownObjectRelease(v35);
        if ((v34 & 1) != 0)
        {
          v38 = dispatch_group_create();
          CurrentValueSubject.value.getter(&v116);
          v39 = v116;
          v40 = v118;
          swift_unknownObjectRelease(v117);
          swift_unknownObjectRelease(v40);
          v116 = *(_QWORD *)(v3 + 320);
          v41 = *(_QWORD *)(v3 + 128);
          swift_bridgeObjectRetain(v116);
          swift_bridgeObjectRetain(v41);
          sub_66808(v41);
          v42 = v116;
          sub_1D3E2C(v116, v39);
          v44 = v43;
          swift_bridgeObjectRelease(v42);
          swift_bridgeObjectRelease(v39);
          v45 = swift_allocObject(&unk_387D88, 17, 7);
          *(_BYTE *)(v45 + 16) = 1;
          v46 = *(_QWORD *)(v44 + 16);
          *(_QWORD *)&v98 = v45;
          if (v46)
          {
            swift_bridgeObjectRetain(v44);
            v97 = v38;
            v90 = v44;
            v47 = (uint64_t *)(v44 + 40);
            v48 = v97;
            do
            {
              v49 = *(v47 - 1);
              v50 = *v47;
              swift_unknownObjectRetain(v49);
              dispatch_group_enter(v48);
              *(_QWORD *)&v99 = swift_getObjectType(v49);
              v52 = *(_QWORD *)(v3 + 112);
              v51 = *(_QWORD *)(v3 + 120);
              v53 = swift_allocObject(&unk_387FB8, 32, 7);
              *(_QWORD *)(v53 + 16) = v98;
              *(_QWORD *)(v53 + 24) = v48;
              v54 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t), uint64_t, _QWORD, uint64_t))(v50 + 208);
              swift_retain();
              swift_unknownObjectRetain(v52);
              v55 = v48;
              v54(v52, v51, sub_1D56B0, v53, v99, v50);
              v3 = v100;
              swift_unknownObjectRelease(v49);
              swift_unknownObjectRelease(v52);
              swift_release();
              v47 += 2;
              --v46;
            }
            while (v46);
            v44 = v90;
            swift_bridgeObjectRelease(v90);
            v38 = v97;
            v45 = v98;
          }
          swift_bridgeObjectRelease(v44);
          sub_555CC((uint64_t)&v111);
          sub_5B70C(v3 + 328, (uint64_t)&v116, &qword_3B8DF0);
          sub_5B70C((uint64_t)&v111, v3 + 328, &qword_3B8DF0);
          sub_13E5D0((uint64_t)&v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
          sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
          v100 = static OS_dispatch_queue.main.getter();
          v56 = swift_allocObject(&unk_387DB0, 24, 7);
          swift_weakInit(v56 + 16, v3);
          v57 = swift_allocObject(&unk_387FE0, 32, 7);
          *(_QWORD *)(v57 + 16) = v56;
          *(_QWORD *)(v57 + 24) = v45;
          *((_QWORD *)&v108 + 1) = sub_1D56E8;
          *(_QWORD *)&v109 = v57;
          v106 = _NSConcreteStackBlock;
          *(_QWORD *)&v107 = 1107296256;
          *((_QWORD *)&v107 + 1) = sub_525B8;
          *(_QWORD *)&v108 = &unk_387FF8;
          v58 = _Block_copy(&v106);
          swift_retain();
          swift_retain();
          v59 = v91;
          static DispatchQoS.unspecified.getter(v60);
          v101 = _swiftEmptyArrayStorage;
          v61 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v62 = sub_319AC(&qword_3B96F0);
          v63 = sub_3DCC0((unint64_t *)&qword_3B8510, &qword_3B96F0, (uint64_t)&protocol conformance descriptor for [A]);
          v64 = v94;
          v65 = v96;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v101, v62, v63, v96, v61);
          v66 = (void *)v100;
          OS_dispatch_group.notify(qos:flags:queue:execute:)(v59, v64, v100, v58);

          _Block_release(v58);
          (*(void (**)(char *, uint64_t))(v95 + 8))(v64, v65);
          (*(void (**)(char *, uint64_t))(v92 + 8))(v59, v93);
          swift_release();
          swift_release();
          swift_release();
        }
      }
      return;
    }
  }
  sub_1C4C60(5u);
  (*(void (**)(unint64_t *__return_ptr, _QWORD, uint64_t))(a2 + 160))(&v116, v99, a2);
  LOWORD(v111) = v116;
  BYTE2(v111) = BYTE2(v116);
  v99 = v117;
  v112 = v117;
  v113 = v118;
  v114 = v119;
  v115 = v120;
  v67 = *(_QWORD *)(v3 + 112);
  v68 = *(_QWORD *)(v3 + 120);
  v69 = swift_getObjectType(v67);
  v70 = v3;
  v71 = *(void (**)(void ***__return_ptr, uint64_t, uint64_t, __n128))(v68 + 160);
  v72 = swift_unknownObjectRetain(v67);
  v71(&v106, v69, v68, v72);
  swift_unknownObjectRelease(v67);
  LOWORD(v101) = (_WORD)v106;
  BYTE2(v101) = BYTE2(v106);
  v98 = v107;
  v102 = v107;
  v103 = v108;
  v104 = v109;
  v105 = v110;
  LOBYTE(v67) = _s8BookEPUB0A11ThemeEntityV2eeoiySbAC_ACtFZ_0((uint64_t)&v111, (uint64_t)&v101);
  swift_bridgeObjectRelease(v98);
  swift_bridgeObjectRelease(v99);
  if ((v67 & 1) == 0)
  {
    v73 = *(_QWORD *)(v70 + 112);
    v74 = *(_QWORD *)(v70 + 120);
    v75 = swift_getObjectType(v73);
    v76 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v74 + 160);
    v77 = swift_unknownObjectRetain(v73);
    v76(&v116, v75, v74, v77);
    swift_unknownObjectRelease(v73);
    LOWORD(v111) = v116;
    BYTE2(v111) = BYTE2(v116);
    v99 = v117;
    v112 = v117;
    v113 = v118;
    v114 = v119;
    v115 = v120;
    sub_1C892C((unsigned __int8 *)&v111, *(_BYTE *)(v70 + 96));
    v111 = *(_QWORD *)(v70 + 320);
    v78 = *(_QWORD *)(v70 + 128);
    swift_bridgeObjectRetain(v111);
    v79 = swift_bridgeObjectRetain(v78);
    sub_66808(v79);
    v80 = v111;
    v81 = *(_QWORD *)(v111 + 16);
    if (v81)
    {
      v82 = v70;
      swift_bridgeObjectRetain(v111);
      v83 = (uint64_t *)(v80 + 40);
      do
      {
        v84 = *(v83 - 1);
        v85 = *v83;
        swift_getObjectType(v84);
        v86 = *(_QWORD *)(v82 + 112);
        v87 = *(void (**)(__n128))(v85 + 216);
        swift_unknownObjectRetain(v84);
        v88 = swift_unknownObjectRetain(v86);
        v87(v88);
        v82 = v100;
        swift_unknownObjectRelease(v84);
        swift_unknownObjectRelease(v86);
        v83 += 2;
        --v81;
      }
      while (v81);
      swift_bridgeObjectRelease(v80);
    }
    swift_bridgeObjectRelease(v80);
    swift_bridgeObjectRelease(v99);
  }
}

void sub_1C4C60(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _DWORD *v7;

  v2 = v1;
  v3 = a1;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_internalState) != a1)
  {
    v4 = swift_retain_n(v1, 2);
    v5 = Logger.logObject.getter(v4);
    v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (_DWORD *)swift_slowAlloc(22, -1);
      swift_slowAlloc(64, -1);
      *v7 = 136315394;
      __asm { BR              X9 }
    }
    swift_release_n(v2, 2);

  }
  __asm { BR              X9 }
}

void sub_1C4F4C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_layoutState) = 1;
  v2 = 1;
  CurrentValueSubject.send(_:)(&v2);
  *(_BYTE *)(v0 + v1) = 0;
  sub_1C7BD8();
}

void sub_1C55F0()
{
  JUMPOUT(0x1C5634);
}

void sub_1C5784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(void ***__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v16;
  void **v17;
  uint64_t v18;
  void *v19;
  __n128 v20;
  unint64_t v21;
  void **v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD *, __n128);
  __n128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  dispatch_group_t v64;
  void (*v65)(uint64_t, uint64_t, void (*)(_BYTE *), _QWORD *, uint64_t, _QWORD *);
  NSObject *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  dispatch_group_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  __n128 v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  dispatch_group_t v96;
  _QWORD *v97;
  _BYTE *v98;
  uint64_t v99;
  void **v100;
  uint64_t v101;
  void **v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  char v107[8];
  _QWORD v108[8];
  void **aBlock;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  char v114[8];

  v3 = v2;
  v93 = a2;
  v95 = a1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for DispatchQoS(0);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v81 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for UUID(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4C60(0);
  v96 = dispatch_group_create();
  v10 = swift_allocObject(&unk_387D88, 17, 7);
  v94 = v10;
  *(_BYTE *)(v10 + 16) = 1;
  v11 = v10 + 16;
  swift_beginAccess(v2 + 112, v114, 0, 0);
  v12 = *(_QWORD *)(v2 + 112);
  v13 = *(_QWORD *)(v3 + 120);
  ObjectType = swift_getObjectType(v12);
  v15 = *(void (**)(void ***__return_ptr, uint64_t, uint64_t, __n128))(v13 + 160);
  v16 = swift_unknownObjectRetain(v12);
  v15(&aBlock, ObjectType, v13, v16);
  swift_unknownObjectRelease(v12);
  LOWORD(v108[0]) = (_WORD)aBlock;
  BYTE2(v108[0]) = BYTE2(aBlock);
  v103 = v110;
  *(_OWORD *)&v108[1] = v110;
  *(_OWORD *)&v108[3] = v111;
  *(_OWORD *)&v108[5] = v112;
  v108[7] = v113;
  sub_1C892C((unsigned __int8 *)v108, *(_BYTE *)(v3 + 96));
  swift_bridgeObjectRelease(v103);
  sub_1C4C60(1u);
  CurrentValueSubject.value.getter(&aBlock);
  v17 = aBlock;
  v18 = v111;
  swift_unknownObjectRelease(v110);
  swift_unknownObjectRelease(v18);
  v19 = v17[2];
  v98 = (_BYTE *)v11;
  *(_QWORD *)&v103 = v19;
  v84 = v5;
  if (v19)
  {
    v79 = v7;
    v80 = v4;
    v97 = (_QWORD *)(v3 + 224);
    v92 = v3 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_log;
    v102 = v17 + 4;
    v20 = swift_beginAccess(v11, v107, 0, 0);
    v21 = 0;
    v20.n128_u64[0] = 136315650;
    v86 = v20;
    v85 = (char *)&type metadata for Any + 8;
    v99 = v3;
    v100 = v17;
    while (1)
    {
      if (v21 >= (unint64_t)v17[2])
      {
        __break(1u);
        return;
      }
      v22 = &v102[2 * v21];
      v23 = *v22;
      v24 = v22[1];
      v25 = swift_getObjectType(*v22);
      v26 = (uint64_t (*)(uint64_t, _QWORD *, __n128))v24[3];
      v27 = swift_unknownObjectRetain(v23);
      v28 = v26(v25, v24, v27);
      if ((v29 & 1) == 0)
      {
        v30 = v28;
        v101 = v25;
        v31 = *(_QWORD *)(v3 + 248);
        v32 = *(_QWORD *)(v3 + 256);
        sub_472D0(v97, v31);
        v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 64))(v31, v32);
        v34 = v33;
        v35 = *(_QWORD *)(v33 + 16);
        if (v35)
        {
          v36 = v33 + 32;
          while (1)
          {
            sub_49F1C(v36, (uint64_t)&v104);
            v37 = v105;
            v38 = v106;
            sub_472D0(&v104, v105);
            if ((*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38) == v30)
              break;
            sub_34488(&v104);
            v36 += 40;
            if (!--v35)
              goto LABEL_11;
          }
          sub_3F1CC(&v104, (uint64_t)v108);
        }
        else
        {
LABEL_11:
          memset(v108, 0, 40);
        }
        swift_bridgeObjectRelease(v34);
        v39 = v98;
        v17 = v100;
        if (!v108[3])
        {
          swift_unknownObjectRelease(v23);
          sub_52128((uint64_t)v108, &qword_3BD428);
          v3 = v99;
          goto LABEL_4;
        }
        sub_3F1CC((__int128 *)v108, (uint64_t)&aBlock);
        v3 = v99;
        if (*v39 == 1)
        {
          dispatch_group_enter(v96);
          sub_49F1C((uint64_t)&aBlock, (uint64_t)v108);
          swift_unknownObjectRetain_n(v23, 2);
          v40 = v95;
          v41 = swift_unknownObjectRetain_n(v95, 2);
          v42 = Logger.logObject.getter(v41);
          v43 = static os_log_type_t.debug.getter();
          v44 = v43;
          if (os_log_type_enabled(v42, v43))
          {
            v45 = swift_slowAlloc(32, -1);
            v91 = swift_slowAlloc(64, -1);
            *(_QWORD *)&v104 = v91;
            *(_DWORD *)v45 = v86.n128_u32[0];
            v46 = v87;
            ((void (*)(uint64_t, _QWORD *))v24[1])(v101, v24);
            v47 = sub_34284((unint64_t *)&qword_3B6870, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
            v90 = v44;
            v48 = v89;
            v49 = dispatch thunk of CustomStringConvertible.description.getter(v89, v47);
            v51 = v50;
            (*(void (**)(char *, uint64_t))(v88 + 8))(v46, v48);
            *(_QWORD *)(v45 + 4) = sub_33524(v49, v51, (uint64_t *)&v104);
            swift_unknownObjectRelease_n(v23, 2);
            swift_bridgeObjectRelease(v51);
            *(_WORD *)(v45 + 12) = 2048;
            v52 = *(_OWORD *)&v108[3];
            v53 = v40;
            sub_472D0(v108, v108[3]);
            v54 = (*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v52 + 1) + 16))(v52, *((_QWORD *)&v52 + 1));
            sub_34488(v108);
            *(_QWORD *)(v45 + 14) = v54;
            *(_WORD *)(v45 + 22) = 2080;
            v55 = swift_getObjectType(v40);
            v56 = v93;
            v57 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 184))(v55, v93);
            v59 = v58;
            *(_QWORD *)(v45 + 24) = sub_33524(v57, v58, (uint64_t *)&v104);
            swift_unknownObjectRelease_n(v53, 2);
            swift_bridgeObjectRelease(v59);
            _os_log_impl(&dword_0, v42, (os_log_type_t)v90, "reloadAndPaginateVisibleLoaders: loaderID:%s ordinal:%ld with #contentConfig:%s", (uint8_t *)v45, 0x20u);
            v60 = v91;
            swift_arrayDestroy(v91, 2, v85);
            swift_slowDealloc(v60, -1, -1);
            v61 = v45;
            v3 = v99;
            swift_slowDealloc(v61, -1, -1);

          }
          else
          {
            sub_34488(v108);
            swift_unknownObjectRelease_n(v40, 2);
            swift_unknownObjectRelease_n(v23, 2);

            v56 = v93;
          }
          v62 = swift_allocObject(&unk_387DB0, 24, 7);
          swift_weakInit(v62 + 16, v3);
          sub_49F1C((uint64_t)&aBlock, (uint64_t)v108);
          v63 = (_QWORD *)swift_allocObject(&unk_387E28, 80, 7);
          v63[2] = v62;
          sub_3F1CC((__int128 *)v108, (uint64_t)(v63 + 3));
          v64 = v96;
          v63[8] = v94;
          v63[9] = v64;
          v65 = (void (*)(uint64_t, uint64_t, void (*)(_BYTE *), _QWORD *, uint64_t, _QWORD *))v24[26];
          swift_retain();
          swift_retain();
          v66 = v64;
          v65(v95, v56, sub_1D52AC, v63, v101, v24);
          swift_unknownObjectRelease(v23);
          swift_release();
          sub_34488(&aBlock);
          swift_release();
          v17 = v100;
          goto LABEL_4;
        }
        sub_34488(&aBlock);
      }
      swift_unknownObjectRelease(v23);
LABEL_4:
      if (++v21 == (_QWORD)v103)
      {
        swift_bridgeObjectRelease(v17);
        v4 = v80;
        v7 = v79;
        goto LABEL_23;
      }
    }
  }
  swift_bridgeObjectRelease(v17);
LABEL_23:
  sub_34450(0, (unint64_t *)&qword_3B96E0, OS_dispatch_queue_ptr);
  v67 = (void *)static OS_dispatch_queue.main.getter();
  v68 = swift_allocObject(&unk_387DB0, 24, 7);
  swift_weakInit(v68 + 16, v3);
  v69 = swift_allocObject(&unk_387DD8, 32, 7);
  v70 = v94;
  *(_QWORD *)(v69 + 16) = v68;
  *(_QWORD *)(v69 + 24) = v70;
  *((_QWORD *)&v111 + 1) = sub_1D5250;
  *(_QWORD *)&v112 = v69;
  aBlock = _NSConcreteStackBlock;
  *(_QWORD *)&v110 = 1107296256;
  *((_QWORD *)&v110 + 1) = sub_525B8;
  *(_QWORD *)&v111 = &unk_387DF0;
  v71 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v72 = v81;
  static DispatchQoS.unspecified.getter(v73);
  v108[0] = _swiftEmptyArrayStorage;
  v74 = sub_34284((unint64_t *)&qword_3B8500, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v75 = sub_319AC(&qword_3B96F0);
  v76 = sub_3DCC0((unint64_t *)&qword_3B8510, &qword_3B96F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v108, v75, v76, v4, v74);
  v77 = v96;
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v72, v7, v67, v71);
  _Block_release(v71);

  (*(void (**)(char *, uint64_t))(v84 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v72, v83);
  swift_release();
  swift_release();
  swift_beginAccess(v98, &aBlock, 0, 0);
  swift_release();
}

void sub_1C6140(uint64_t a1, uint64_t a2, dispatch_group_t group)
{
  _BYTE v5[24];

  if (*(_BYTE *)(a1 + 1) == 1)
  {
    swift_beginAccess(a2 + 16, v5, 1, 0);
    *(_BYTE *)(a2 + 16) = 0;
  }
  dispatch_group_leave(group);
}

double sub_1C6194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[144];
  _BYTE v27[24];
  _BYTE v28[24];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v28, 0, 0);
  if (swift_weakLoadStrong(a1))
  {
    swift_beginAccess(a2 + 16, v27, 0, 0);
    if ((*(_BYTE *)(a2 + 16) & 1) != 0)
    {
      v9 = Logger.logObject.getter(v8);
      v10 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_0, v9, v10, "#updateVisibleContent call from contentLayoutProvider.didSet", v11, 2u);
        swift_slowDealloc(v11, -1, -1);
      }

      sub_555CC((uint64_t)v26);
      sub_5B70C((uint64_t)v26, (uint64_t)&v20, &qword_3B8DF0);
      sub_1C641C((uint64_t)&v20, 0.0, 0.0, 1, &v23);
      v12 = v23;
      v20 = v23;
      v18 = v24;
      v19 = v25;
      v21 = v24;
      v22 = v25;
      sub_1C6DB0(&v20);
      swift_bridgeObjectRelease(v12);
      swift_release();
      swift_unknownObjectRelease(v18);
      *(_QWORD *)&result = swift_unknownObjectRelease(v19).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  else
  {
    if (qword_3B5698 != -1)
      swift_once(&qword_3B5698, sub_52378);
    v14 = Logger.init(_:)((id)qword_3CEEF0);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_0, v15, v16, "Missing self in group notify.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void sub_1C641C(uint64_t a1@<X0>, double a2@<X1>, double a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double (*v44)(uint64_t, uint64_t, __n128);
  __n128 v45;
  CGFloat v46;
  double v47;
  double v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint8_t *v53;
  uint8_t *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  double v97;
  __int128 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  __int128 v107;
  uint64_t v108;
  uint64_t *v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _OWORD v117[2];
  uint64_t v118[5];
  char v119[24];
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  _BYTE v127[26];
  _BYTE v128[144];
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  _BYTE v137[26];

  v6 = v5;
  sub_5B70C(a1, (uint64_t)v128, &qword_3B8DF0);
  sub_5B70C((uint64_t)v128, (uint64_t)&v129, &qword_3B8DF0);
  v109 = a5;
  v97 = a2;
  v106 = a4;
  if (sub_49B20((uint64_t)&v129) == 1)
  {
    v11 = v5[3];
    ObjectType = swift_getObjectType(v5[2]);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v11 + 16))(&v120, ObjectType, v11);
    sub_49BD8((uint64_t)&v120);
    v13 = sub_49BD8((uint64_t)&v120);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      v118[0] = v17;
      *(_DWORD *)v16 = 136315138;
      v115 = v125;
      v116 = v126;
      v117[0] = *(_OWORD *)v127;
      *(_OWORD *)((char *)v117 + 10) = *(_OWORD *)&v127[10];
      v112 = v122;
      v113 = v123;
      v114 = v124;
      *((_QWORD *)&v110 + 1) = *((_QWORD *)&v120 + 1);
      v111 = v121;
      v18 = Location.description.getter();
      v20 = v19;
      *(_QWORD *)&v110 = sub_33524(v18, v19, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8, v16 + 4);
      swift_bridgeObjectRelease(v20);
      sub_49900((uint64_t)&v120);
      sub_49900((uint64_t)&v120);
      _os_log_impl(&dword_0, v14, v15, "updatedVisibleContent using currentLocationProvider.currentLocation:%s", v16, 0xCu);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {

      sub_49900((uint64_t)&v120);
      sub_49900((uint64_t)&v120);
    }
    v23 = v127[25];
    v25 = v126;
    v24 = *(_OWORD *)v127;
    v26 = *(_QWORD *)&v127[16];
    v27 = v127[24];
    v28 = *((_QWORD *)&v124 + 1);
    v29 = v124;
    v30 = v125;
    v31 = BYTE8(v125);
    v21 = *((_QWORD *)&v123 + 1);
    v32 = v123;
    v34 = *((_QWORD *)&v121 + 1);
    v33 = v121;
    v36 = *((_QWORD *)&v122 + 1);
    v35 = v122;
    v38 = *((_QWORD *)&v120 + 1);
    v37 = v120;
    if ((v106 & 1) != 0)
    {
LABEL_11:
      v92 = v37;
      v93 = v33;
      v90 = v35;
      v91 = v34;
      v96 = v21;
      v101 = v36;
      v104 = v32;
      v95 = v23;
      v107 = v24;
      v98 = v25;
      v94 = v26;
      v89 = v27;
      v39 = v28;
      v40 = v29;
      swift_beginAccess(v6 + 14, v119, 0, 0);
      v41 = v6[14];
      v42 = v6[15];
      v43 = swift_getObjectType(v41);
      v44 = *(double (**)(uint64_t, uint64_t, __n128))(v42 + 80);
      v45 = swift_unknownObjectRetain(v41);
      v46 = v44(v43, v42, v45);
      v48 = v47;
      swift_unknownObjectRelease(v41);
      v35 = v90;
      v34 = v91;
      v37 = v92;
      v33 = v93;
      v29 = v40;
      v28 = v39;
      v27 = v89;
      v26 = v94;
      v25 = v98;
      v24 = v107;
      v23 = v95;
      v36 = v101;
      v32 = v104;
      v21 = v96;
      goto LABEL_20;
    }
  }
  else
  {
    v21 = *((_QWORD *)&v133 + 1);
    v100 = *((_QWORD *)&v132 + 1);
    v103 = v133;
    if (!(_QWORD)v133)
      goto LABEL_8;
    v22 = BYTE7(v133) & 0xF;
    if ((v133 & 0x2000000000000000) == 0)
      v22 = *((_QWORD *)&v132 + 1) & 0xFFFFFFFFFFFFLL;
    if (!v22)
    {
      sub_5B70C((uint64_t)v128, (uint64_t)&v120, &qword_3B8DF0);
      v49 = sub_49BD8((uint64_t)&v120);
      v50 = Logger.logObject.getter(v49);
      v51 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = v21;
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl(&dword_0, v50, v51, "Requested CFI was empty!", v53, 2u);
        v54 = v53;
        v21 = v52;
        swift_slowDealloc(v54, -1, -1);
      }

    }
    else
    {
LABEL_8:
      sub_5B70C((uint64_t)v128, (uint64_t)&v120, &qword_3B8DF0);
      sub_49BD8((uint64_t)&v120);
    }
    sub_5B70C((uint64_t)v128, (uint64_t)&v120, &qword_3B8DF0);
    sub_13E5D0((uint64_t)v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_13E59C);
    v55 = sub_49BD8((uint64_t)&v120);
    v56 = Logger.logObject.getter(v55);
    v57 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc(12, -1);
      v59 = swift_slowAlloc(32, -1);
      v118[0] = v59;
      *(_DWORD *)v58 = 136315138;
      v115 = v135;
      v116 = v136;
      v117[0] = *(_OWORD *)v137;
      *(_OWORD *)((char *)v117 + 10) = *(_OWORD *)&v137[10];
      v112 = v132;
      v113 = v133;
      v114 = v134;
      *((_QWORD *)&v110 + 1) = v130;
      v111 = v131;
      v60 = Location.description.getter();
      v62 = v61;
      *(_QWORD *)&v110 = sub_33524(v60, v61, v118);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8, v58 + 4);
      swift_bridgeObjectRelease(v62);
      sub_13E5D0((uint64_t)v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
      sub_13E5D0((uint64_t)v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
      _os_log_impl(&dword_0, v56, v57, "updatedVisibleContent using provided currentLocation:%s", v58, 0xCu);
      swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1, -1);
      swift_slowDealloc(v58, -1, -1);

    }
    else
    {

      sub_13E5D0((uint64_t)v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
      sub_13E5D0((uint64_t)v128, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
    }
    v23 = v137[25];
    v25 = v136;
    v24 = *(_OWORD *)v137;
    v26 = *(_QWORD *)&v137[16];
    v27 = v137[24];
    v28 = *((_QWORD *)&v134 + 1);
    v30 = v135;
    v31 = BYTE8(v135);
    v34 = *((_QWORD *)&v131 + 1);
    v33 = v131;
    v29 = v134;
    v35 = v132;
    v37 = v129;
    v38 = v130;
    v36 = v100;
    v32 = v103;
    if ((v106 & 1) != 0)
      goto LABEL_11;
  }
  v46 = v97;
  v48 = a3;
LABEL_20:
  *(_QWORD *)&v120 = v37;
  *((_QWORD *)&v120 + 1) = v38;
  *(_QWORD *)&v121 = v33;
  *((_QWORD *)&v121 + 1) = v34;
  *(_QWORD *)&v122 = v35;
  *((_QWORD *)&v122 + 1) = v36;
  *(_QWORD *)&v123 = v32;
  *((_QWORD *)&v123 + 1) = v21;
  *(_QWORD *)&v124 = v29;
  *((_QWORD *)&v124 + 1) = v28;
  *(_QWORD *)&v125 = v30;
  BYTE8(v125) = v31;
  v126 = v25;
  *(_OWORD *)v127 = v24;
  *(_QWORD *)&v127[16] = v26;
  v127[24] = v27;
  v127[25] = v23;
  sub_1CB10C(v37, v6[27]);
  swift_bridgeObjectRelease(v63);
  v117[0] = *(_OWORD *)v127;
  *(_OWORD *)((char *)v117 + 10) = *(_OWORD *)&v127[10];
  v112 = v122;
  v113 = v123;
  v115 = v125;
  v116 = v126;
  v114 = v124;
  v110 = v120;
  v111 = v121;
  sub_49BD8((uint64_t)&v120);
  sub_1CB634((uint64_t)&v110, (uint64_t)v118, v46, v48);
  sub_49900((uint64_t)&v120);
  v64 = v118[0];
  v65 = v118[1];
  v66 = v118[2];
  v67 = v118[3];
  v108 = v118[4];
  v117[0] = *(_OWORD *)v127;
  *(_OWORD *)((char *)v117 + 10) = *(_OWORD *)&v127[10];
  v112 = v122;
  v113 = v123;
  v115 = v125;
  v116 = v126;
  v114 = v124;
  v110 = v120;
  v111 = v121;
  sub_49BD8((uint64_t)&v120);
  v68 = swift_bridgeObjectRetain(v64);
  sub_1C9EB8(v68, &v110);
  sub_49900((uint64_t)&v120);
  swift_bridgeObjectRetain_n(v64, 2);
  sub_49BD8((uint64_t)&v120);
  v69 = swift_bridgeObjectRetain(v64);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v70, v71))
  {
    v105 = v65;
    v72 = swift_slowAlloc(42, -1);
    v102 = v66;
    v99 = swift_slowAlloc(96, -1);
    v118[0] = v99;
    *(_DWORD *)v72 = 136315906;
    v117[0] = *(_OWORD *)v127;
    *(_OWORD *)((char *)v117 + 10) = *(_OWORD *)&v127[10];
    v112 = v122;
    v113 = v123;
    v115 = v125;
    v116 = v126;
    v114 = v124;
    v110 = v120;
    v111 = v121;
    v73 = Location.description.getter();
    v75 = v74;
    *(_QWORD *)&v110 = sub_33524(v73, v74, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8, v72 + 4);
    swift_bridgeObjectRelease(v75);
    sub_49900((uint64_t)&v120);
    sub_49900((uint64_t)&v120);
    *(_WORD *)(v72 + 12) = 2080;
    v76 = CGSize.debugDescription.getter(v46, v48);
    v78 = v77;
    *(_QWORD *)&v110 = sub_33524(v76, v77, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8, v72 + 14);
    swift_bridgeObjectRelease(v78);
    *(_WORD *)(v72 + 22) = 2048;
    v79 = *(_QWORD *)(v64 + 16);
    swift_bridgeObjectRelease(v64);
    *(_QWORD *)&v110 = v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8, v72 + 24);
    swift_bridgeObjectRelease(v64);
    *(_WORD *)(v72 + 32) = 2080;
    v80 = v67;
    v81 = sub_1B7EFC(v64);
    v82 = sub_1B8004((uint64_t)v81);
    swift_bridgeObjectRelease(v81);
    v83 = sub_319AC((uint64_t *)&unk_3BE7E0);
    v84 = Array.description.getter(v82, v83);
    v86 = v85;
    swift_bridgeObjectRelease(v82);
    v87 = v84;
    v67 = v80;
    *(_QWORD *)&v110 = sub_33524(v87, v86, v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v110, (char *)&v110 + 8, v72 + 34);
    swift_bridgeObjectRelease_n(v64, 2);
    swift_bridgeObjectRelease(v86);
    _os_log_impl(&dword_0, v70, v71, "Updated visible content for location: %s & size: %s - %ld: ordinals %s", (uint8_t *)v72, 0x2Au);
    swift_arrayDestroy(v99, 3, (char *)&type metadata for Any + 8);
    v66 = v102;
    swift_slowDealloc(v99, -1, -1);
    v88 = v72;
    v65 = v105;
    swift_slowDealloc(v88, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(v64);
    sub_49900((uint64_t)&v120);
    sub_49900((uint64_t)&v120);
    swift_bridgeObjectRelease_n(v64, 3);
  }
  *v109 = v64;
  v109[1] = v65;
  v109[2] = v66;
  v109[3] = v67;
  v109[4] = v108;
}

uint64_t sub_1C6DB0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t result;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _OWORD v40[3];

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  CurrentValueSubject.value.getter(&v33);
  v7 = v33;
  v8 = *((_QWORD *)&v34 + 1);
  swift_unknownObjectRelease(*((_QWORD *)&v33 + 1));
  swift_unknownObjectRelease(v8);
  v9 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease(v7);
  v10 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)&v33 = v2;
  *((_QWORD *)&v33 + 1) = v3;
  *(_QWORD *)&v34 = v5;
  *((_QWORD *)&v34 + 1) = v4;
  *(_QWORD *)&v35 = v6;
  swift_unknownObjectRetain(v4);
  swift_bridgeObjectRetain(v2);
  v11 = swift_unknownObjectRetain(v3);
  result = CurrentValueSubject.value.setter(&v33, v11);
  if (v9 != v10)
  {
    v13 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 16));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v13 + 16))(&v33, ObjectType, v13);
    if (qword_3B5920 != -1)
      swift_once(&qword_3B5920, sub_1C30D0);
    v15 = type metadata accessor for Logger(0);
    sub_555F0(v15, (uint64_t)qword_3C11A0);
    sub_49BD8((uint64_t)&v33);
    v16 = sub_49BD8((uint64_t)&v33);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(32, -1);
      v23 = swift_slowAlloc(32, -1);
      v24 = v23;
      *(_QWORD *)&v25 = v9;
      *(_DWORD *)v19 = 134218498;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, (char *)&v25 + 8, v19 + 4);
      *(_WORD *)(v19 + 12) = 2048;
      *(_QWORD *)&v25 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, (char *)&v25 + 8, v19 + 14);
      *(_WORD *)(v19 + 22) = 2080;
      v31 = v39;
      v32[0] = v40[0];
      *(_OWORD *)((char *)v32 + 10) = *(_OWORD *)((char *)v40 + 10);
      v27 = v35;
      v28 = v36;
      v29 = v37;
      v30 = v38;
      v25 = v33;
      v26 = v34;
      v20 = Location.description.getter();
      v22 = v21;
      *(_QWORD *)&v25 = sub_33524(v20, v21, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, (char *)&v25 + 8, v19 + 24);
      swift_bridgeObjectRelease(v22);
      sub_49900((uint64_t)&v33);
      sub_49900((uint64_t)&v33);
      _os_log_impl(&dword_0, v17, v18, "#updateVisibleContent Visible Loader Count changed from %ld to %ld -- adjusting offsets for location:%s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v19, -1, -1);

    }
    else
    {
      sub_49900((uint64_t)&v33);
      sub_49900((uint64_t)&v33);

    }
    v31 = v39;
    v32[0] = v40[0];
    *(_OWORD *)((char *)v32 + 10) = *(_OWORD *)((char *)v40 + 10);
    v27 = v35;
    v28 = v36;
    v29 = v37;
    v30 = v38;
    v25 = v33;
    v26 = v34;
    sub_1C9EB8(v2, &v25);
    return sub_49900((uint64_t)&v33);
  }
  return result;
}

double sub_1C70B0()
{
  uint64_t v0;
  double result;
  _BYTE v2[24];

  swift_beginAccess(v0 + 112, v2, 0, 0);
  *(_QWORD *)&result = swift_unknownObjectRetain(*(_QWORD *)(v0 + 112)).n128_u64[0];
  return result;
}

double sub_1C70F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];

  swift_beginAccess(v2 + 112, v8, 1, 0);
  v5 = *(_QWORD *)(v2 + 112);
  v6 = *(_QWORD *)(v2 + 120);
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  swift_unknownObjectRetain(a1);
  sub_1C448C(v5, v6);
  swift_unknownObjectRelease(v5);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*sub_1C7168(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  char *v3;
  __int128 v4;

  v3 = (char *)malloc(0x30uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 5) = v1;
  swift_beginAccess(v1 + 112, v3, 1, 0);
  v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v3 + 24) = v4;
  swift_unknownObjectRetain(v4);
  return sub_1C71D4;
}

void sub_1C71D4(uint64_t a1, char a2)
{
  void *v3;
  __int128 *v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(void **)a1;
  v4 = (__int128 *)(*(_QWORD *)a1 + 24);
  v5 = *v4;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(_QWORD *)(v6 + 112);
  v8 = *(_QWORD *)(v6 + 120);
  *(_OWORD *)(v6 + 112) = *v4;
  v9 = v5;
  swift_unknownObjectRetain(v5);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain(v9);
    sub_1C448C(v7, v8);
    swift_unknownObjectRelease(v9);
    swift_unknownObjectRelease(v7);
    v7 = *(_QWORD *)v4;
  }
  else
  {
    sub_1C448C(v7, v8);
    swift_unknownObjectRelease(v9);
  }
  swift_unknownObjectRelease(v7);
  free(v3);
}

__n128 BookContentLayoutController.init(currentLocationProvider:currentLocationController:bookEntity:contentHostEnvironmentProvider:contentLayoutProvider:imageFilterMode:lineGuideEnabled:reloadAction:paginationProvider:pageNumberProvider:stylesheetProvider:configuration:currentContentLocation:contentLoadingClass:snapshotLoadingClass:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19, unsigned __int8 *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t ObjectType;
  __n128 result;

  ObjectType = swift_getObjectType(a14);
  sub_1D3674(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a16, a17, a18, a19, a20,
    a21,
    a22,
    a23,
    a24,
    v24,
    ObjectType,
    a15);
  return result;
}

uint64_t BookContentLayoutController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];
  _BYTE v9[144];

  swift_beginAccess(v0 + 488, v8, 0, 0);
  v1 = *(_QWORD *)(v0 + 488);
  swift_bridgeObjectRetain(v1);
  sub_7245C(v2);
  swift_bridgeObjectRelease(v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 48));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  swift_release();
  swift_release();
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 112));
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
  swift_unknownObjectRelease(v3);
  swift_unknownObjectRelease(v4);
  sub_47418(v0 + 200);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 216));
  sub_34488((_QWORD *)(v0 + 224));
  swift_release();
  swift_release();

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 320));
  sub_5B70C(v0 + 328, (uint64_t)v9, &qword_3B8DF0);
  sub_13E5D0((uint64_t)v9, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 472));
  swift_release();
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 488));
  v5 = v0 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_log;
  v6 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  return v0;
}

uint64_t BookContentLayoutController.__deallocating_deinit()
{
  uint64_t v0;

  BookContentLayoutController.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_1C74DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57[13];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v52 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - v8;
  v10 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 16))(v57, ObjectType, v10);
  sub_49900((uint64_t)v57);
  v12 = *(_QWORD *)(v1 + 296);
  v13 = *(_BYTE *)(v1 + 304);
  v14 = *(_BYTE *)(v1 + 305);
  v53 = *(_OWORD *)(v1 + 280);
  v54 = v12;
  v55 = v13;
  v56 = v14;
  PreloadConfiguration.sorted(loaders:currentDocumentOrdinal:)(a1, v57[0]);
  v16 = v15;
  swift_bridgeObjectRelease(a1);
  v41 = v2;
  v17 = *(_QWORD *)(v2 + 320);
  v47 = *(_QWORD *)(v17 + 16);
  if (v47)
  {
    v18 = *(_QWORD *)(v16 + 16);
    v46 = v17 + 32;
    swift_bridgeObjectRetain(v17);
    v19 = 0;
    v50 = v16;
    v44 = (uint64_t *)(v16 + 40);
    v43 = v17;
    v42 = v18;
    while (v19 < *(_QWORD *)(v17 + 16))
    {
      v22 = (_QWORD *)(v46 + 16 * v19);
      v23 = *v22;
      v24 = v22[1];
      v25 = swift_getObjectType(*v22);
      v26 = *(void (**)(uint64_t, uint64_t, __n128))(v24 + 8);
      v27 = swift_unknownObjectRetain(v23);
      v51 = v25;
      v26(v25, v24, v27);
      if (v18)
      {
        v45 = v24;
        v48 = v23;
        v49 = v19;
        swift_bridgeObjectRetain(v50);
        v28 = v44;
        while (1)
        {
          v30 = *(v28 - 1);
          v29 = *v28;
          v31 = swift_getObjectType(v30);
          v32 = *(void (**)(uint64_t, uint64_t, __n128))(v29 + 8);
          v33 = swift_unknownObjectRetain(v30);
          v32(v31, v29, v33);
          v34 = sub_34284(&qword_3C1618, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v35 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v9, v4, v34);
          v21 = *(void (**)(char *, uint64_t))(v52 + 8);
          v21(v6, v4);
          swift_unknownObjectRelease(v30);
          if ((v35 & 1) != 0)
            break;
          v28 += 2;
          if (!--v18)
          {
            swift_bridgeObjectRelease(v50);
            v17 = v43;
            v18 = v42;
            v19 = v49;
            v23 = v48;
            v24 = v45;
            goto LABEL_3;
          }
        }
        swift_unknownObjectRelease(v48);
        v20 = swift_bridgeObjectRelease(v50);
        v17 = v43;
        v18 = v42;
        v19 = v49;
      }
      else
      {
LABEL_3:
        (*(void (**)(uint64_t, uint64_t))(v24 + 184))(v51, v24);
        v20 = swift_unknownObjectRelease(v23);
        v21 = *(void (**)(char *, uint64_t))(v52 + 8);
      }
      ++v19;
      ((void (*)(char *, uint64_t, __n128))v21)(v9, v4, v20);
      if (v19 == v47)
      {
        swift_bridgeObjectRelease(v17);
        v36 = v41;
        v17 = *(_QWORD *)(v41 + 320);
        v16 = v50;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    v36 = v41;
LABEL_14:
    *(_QWORD *)(v36 + 320) = v16;
    swift_bridgeObjectRelease(v17);
    v37 = *(_QWORD *)(v36 + 320);
    swift_retain();
    v38 = swift_bridgeObjectRetain(v37);
    v39 = sub_1D40F4(v38, v36);
    swift_bridgeObjectRelease(v37);
    swift_release();
    v40 = *(_QWORD *)(v36 + 472);
    *(_QWORD *)(v36 + 472) = v39;
    swift_bridgeObjectRelease(v40);
  }
}

uint64_t sub_1C7890()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC(&qword_3C11C0);
  v1 = sub_3DCC0(&qword_3C11C8, &qword_3C11C0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_1C78FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v3 = sub_319AC(&qword_3C11D0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_319AC(&qword_3C11D8);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v1 + 480);
  v11 = sub_319AC(&qword_3C11C0);
  v12 = sub_3DCC0(&qword_3C11C8, &qword_3C11C0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = Publisher.eraseToAnyPublisher()(v11, v12);
  v13 = swift_allocObject(&unk_387B80, 24);
  *(_QWORD *)(v13 + 16) = a1;
  v14 = sub_319AC(&qword_3C0058);
  v15 = sub_3DCC0(&qword_3C0070, &qword_3C0058, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.filter(_:)(sub_1D47AC, v13, v14, v15);
  swift_release();
  swift_release();
  v16 = sub_3DCC0(&qword_3C11E0, &qword_3C11D0, (uint64_t)&protocol conformance descriptor for Publishers.Filter<A>);
  Publisher.map<A>(_:)(address(of:), 0, v3, (char *)&type metadata for () + 8, v16);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v17 = sub_3DCC0(&qword_3C11E8, &qword_3C11D8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v18 = Publisher.eraseToAnyPublisher()(v7, v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v18;
}

void sub_1C7B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v4 = a1 + 16;
  swift_beginAccess(a1 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType(Strong);
    v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(ObjectType, v7);
    LOBYTE(v7) = v10;
    swift_unknownObjectRelease(v6);
    if ((v7 & 1) == 0)
    {
      v11 = a2 + 16;
      swift_beginAccess(v11, v15, 0, 0);
      v12 = swift_weakLoadStrong(v11);
      if (v12)
      {
        v13 = v12;
        v14 = v9;
        PassthroughSubject.send(_:)(&v14);
        swift_release(v13);
      }
    }
  }
}

void sub_1C7BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  _DWORD *v6;
  NSObject *oslog;

  v1 = v0;
  v2 = swift_retain_n(v0);
  oslog = Logger.logObject.getter(v2);
  v5 = static os_log_type_t.debug.getter(oslog, v3, v4);
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (_DWORD *)swift_slowAlloc(12, -1);
    swift_slowAlloc(32, -1);
    *v6 = 136315138;
    __asm { BR              X10 }
  }
  swift_release_n(v0);

}

void sub_1C7CE0()
{
  JUMPOUT(0x1C7D48);
}

void sub_1C7CF8()
{
  JUMPOUT(0x1C7D48);
}

void sub_1C7D10()
{
  JUMPOUT(0x1C7D24);
}

void sub_1C7D30()
{
  JUMPOUT(0x1C7D48);
}

uint64_t sub_1C7E04()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_319AC(&qword_3BCF10);
  v1 = sub_3DCC0(&qword_3BCF18, &qword_3BCF10, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_1C7E78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for BookContentLayoutController(0);
  result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t BookContentLayoutController.contentLoaderWithVisibleAccessory(at:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[3];
  _QWORD v17[5];

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  CurrentValueSubject.value.getter(v17);
  v4 = v17[0];
  v5 = v17[3];
  swift_unknownObjectRelease(v17[1]);
  swift_unknownObjectRelease(v5);
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(v4);
    for (i = (uint64_t *)(v4 + 40); ; i += 2)
    {
      v8 = *(i - 1);
      v9 = *i;
      ObjectType = swift_getObjectType(v8);
      v16[0] = v1;
      v16[1] = v2;
      v16[2] = v3;
      v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v9 + 176);
      v12 = swift_unknownObjectRetain(v8);
      v13 = v11(v16, ObjectType, v9, v12);
      if (v13)
        break;
      swift_unknownObjectRelease(v8);
      if (!--v6)
      {
        swift_bridgeObjectRelease_n(v4, 2);
        return 0;
      }
    }
    v14 = (void *)v13;
    swift_bridgeObjectRelease_n(v4, 2);

  }
  else
  {
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  return v8;
}

uint64_t sub_1C7FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[15] = a4;
  v5[16] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[17] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[18] = v7;
  v5[19] = v8;
  return swift_task_switch(sub_1C8028, v7, v8);
}

uint64_t sub_1C8028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t, __n128);
  __n128 v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v27;
  uint64_t v28;
  id v29;

  v1 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(*(_QWORD *)(v1 + 272) + 128) = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v1 + 320);
  *(_QWORD *)(v0 + 160) = v2;
  v3 = *(_QWORD *)(v2 + 16);
  *(_QWORD *)(v0 + 168) = v3;
  if (!v3)
  {
LABEL_11:
    swift_release();
    v21 = *(_QWORD *)(v0 + 120);
    swift_beginAccess(v21 + 112, v0 + 80, 0, 0);
    v22 = *(_QWORD *)(v21 + 112);
    v23 = *(_QWORD *)(v21 + 120);
    swift_unknownObjectRetain(v22);
    sub_1C5784(v24, v23);
    v25 = swift_unknownObjectRelease(v22);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v25);
  }
  *(_QWORD *)(v0 + 176) = OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_log;
  swift_bridgeObjectRetain(v2);
  v4 = 0;
  while (1)
  {
    *(_QWORD *)(v0 + 184) = v4;
    v5 = *(_QWORD *)(v0 + 160) + 16 * v4;
    v6 = *(_QWORD *)(v5 + 32);
    *(_QWORD *)(v0 + 192) = v6;
    v7 = *(_QWORD *)(v5 + 40);
    ObjectType = swift_getObjectType(v6);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v7 + 48);
    v10 = swift_unknownObjectRetain(v6);
    v11 = v9(ObjectType, v7, v10);
    *(_QWORD *)(v0 + 200) = v11;
    if (v11)
      break;
LABEL_7:
    v15 = ((uint64_t (*)(uint64_t, uint64_t))v9)(ObjectType, v7);
    if (v15)
    {
      v17 = (void *)v15;
      v18 = v16;
      v19 = *(_QWORD *)(v0 + 128);
      v20 = swift_getObjectType(v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 288))(v19, v20, v18);

    }
    swift_unknownObjectRelease(v6);
    v4 = *(_QWORD *)(v0 + 184) + 1;
    if (v4 == *(_QWORD *)(v0 + 168))
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
      goto LABEL_11;
    }
  }
  v12 = (void *)v11;
  v13 = objc_opt_self(WKWebView);
  v14 = swift_dynamicCastObjCClass(v12, v13);
  if (!v14)
  {

    goto LABEL_7;
  }
  v27 = v14;
  v28 = *(_QWORD *)(v0 + 128);
  v29 = objc_msgSend((id)objc_opt_self(BEContentBlockingRules), "sharedInstance");
  *(_QWORD *)(v0 + 208) = v29;
  *(_QWORD *)(v0 + 56) = v0 + 224;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1C827C;
  *(_QWORD *)(v0 + 112) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_1C1610;
  *(_QWORD *)(v0 + 104) = &unk_387D60;
  objc_msgSend(v29, "applyContentBlockingRule:toWebView:completion:", v28, v27, v0 + 80);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_1C827C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 216) = v2;
  if (v2)
    v3 = sub_1C8524;
  else
    v3 = sub_1C82D8;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 152));
}

uint64_t sub_1C82D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;

  v2 = *(void **)(v0 + 200);
  v1 = *(void **)(v0 + 208);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 192));

  v3 = *(_QWORD *)(v0 + 184) + 1;
  if (v3 == *(_QWORD *)(v0 + 168))
  {
LABEL_2:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 160));
    swift_release();
    v4 = *(_QWORD *)(v0 + 120);
    swift_beginAccess(v4 + 112, v0 + 80, 0, 0);
    v5 = *(_QWORD *)(v4 + 112);
    v6 = *(_QWORD *)(v4 + 120);
    swift_unknownObjectRetain(v5);
    sub_1C5784(v7, v6);
    v8 = swift_unknownObjectRelease(v5);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
  }
  while (1)
  {
    *(_QWORD *)(v0 + 184) = v3;
    v10 = *(_QWORD *)(v0 + 160) + 16 * v3;
    v11 = *(_QWORD *)(v10 + 32);
    *(_QWORD *)(v0 + 192) = v11;
    v12 = *(_QWORD *)(v10 + 40);
    ObjectType = swift_getObjectType(v11);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 48);
    v15 = swift_unknownObjectRetain(v11);
    v16 = v14(ObjectType, v12, v15);
    *(_QWORD *)(v0 + 200) = v16;
    if (v16)
      break;
LABEL_8:
    v20 = ((uint64_t (*)(uint64_t, uint64_t))v14)(ObjectType, v12);
    if (v20)
    {
      v22 = (void *)v20;
      v23 = v21;
      v24 = *(_QWORD *)(v0 + 128);
      v25 = swift_getObjectType(v20);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 288))(v24, v25, v23);

    }
    swift_unknownObjectRelease(v11);
    v3 = *(_QWORD *)(v0 + 184) + 1;
    if (v3 == *(_QWORD *)(v0 + 168))
      goto LABEL_2;
  }
  v17 = (void *)v16;
  v18 = objc_opt_self(WKWebView);
  v19 = swift_dynamicCastObjCClass(v17, v18);
  if (!v19)
  {

    goto LABEL_8;
  }
  v26 = v19;
  v27 = *(_QWORD *)(v0 + 128);
  v28 = objc_msgSend((id)objc_opt_self(BEContentBlockingRules), "sharedInstance");
  *(_QWORD *)(v0 + 208) = v28;
  *(_QWORD *)(v0 + 56) = v0 + 224;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1C827C;
  *(_QWORD *)(v0 + 112) = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_1C1610;
  *(_QWORD *)(v0 + 104) = &unk_387D60;
  objc_msgSend(v28, "applyContentBlockingRule:toWebView:completion:", v27, v26, v0 + 80);
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_1C8524(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t (*v26)(uint64_t, uint64_t, __n128);
  __n128 v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;

  v3 = *(void **)(v1 + 208);
  v2 = *(_QWORD *)(v1 + 216);
  swift_willThrow(a1);

  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v1 + 216);
  v9 = *(_QWORD *)(v1 + 192);
  v10 = *(void **)(v1 + 200);
  if (v7)
  {
    v11 = swift_slowAlloc(12, -1);
    v12 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 138543362;
    swift_errorRetain(v8);
    v13 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v11 + 4) = v13;
    *v12 = v13;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl(&dword_0, v5, v6, "Failed to apply content blocking rules: %{public}@", (uint8_t *)v11, 0xCu);
    v14 = sub_319AC(&qword_3B8A70);
    swift_arrayDestroy(v12, 1, v14);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    swift_errorRelease(v8);
    swift_unknownObjectRelease(v9);
  }
  else
  {

    swift_errorRelease(v8);
    swift_unknownObjectRelease(v9);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
  }
  v15 = *(_QWORD *)(v1 + 184) + 1;
  if (v15 == *(_QWORD *)(v1 + 168))
  {
LABEL_5:
    swift_bridgeObjectRelease(*(_QWORD *)(v1 + 160));
    swift_release();
    v16 = *(_QWORD *)(v1 + 120);
    swift_beginAccess(v16 + 112, v1 + 80, 0, 0);
    v17 = *(_QWORD *)(v16 + 112);
    v18 = *(_QWORD *)(v16 + 120);
    swift_unknownObjectRetain(v17);
    sub_1C5784(v19, v18);
    v20 = swift_unknownObjectRelease(v17);
    return (*(uint64_t (**)(__n128))(v1 + 8))(v20);
  }
  while (1)
  {
    *(_QWORD *)(v1 + 184) = v15;
    v22 = *(_QWORD *)(v1 + 160) + 16 * v15;
    v23 = *(_QWORD *)(v22 + 32);
    *(_QWORD *)(v1 + 192) = v23;
    v24 = *(_QWORD *)(v22 + 40);
    ObjectType = swift_getObjectType(v23);
    v26 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v24 + 48);
    v27 = swift_unknownObjectRetain(v23);
    v28 = v26(ObjectType, v24, v27);
    *(_QWORD *)(v1 + 200) = v28;
    if (v28)
      break;
LABEL_11:
    v32 = ((uint64_t (*)(uint64_t, uint64_t))v26)(ObjectType, v24);
    if (v32)
    {
      v34 = (void *)v32;
      v35 = v33;
      v36 = *(_QWORD *)(v1 + 128);
      v37 = swift_getObjectType(v32);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 288))(v36, v37, v35);

    }
    swift_unknownObjectRelease(v23);
    v15 = *(_QWORD *)(v1 + 184) + 1;
    if (v15 == *(_QWORD *)(v1 + 168))
      goto LABEL_5;
  }
  v29 = (void *)v28;
  v30 = objc_opt_self(WKWebView);
  v31 = swift_dynamicCastObjCClass(v29, v30);
  if (!v31)
  {

    goto LABEL_11;
  }
  v38 = v31;
  v39 = *(_QWORD *)(v1 + 128);
  v40 = objc_msgSend((id)objc_opt_self(BEContentBlockingRules), "sharedInstance");
  *(_QWORD *)(v1 + 208) = v40;
  *(_QWORD *)(v1 + 56) = v1 + 224;
  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = sub_1C827C;
  *(_QWORD *)(v1 + 112) = swift_continuation_init(v1 + 16, 1);
  *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
  *(_QWORD *)(v1 + 88) = 0x40000000;
  *(_QWORD *)(v1 + 96) = sub_1C1610;
  *(_QWORD *)(v1 + 104) = &unk_387D60;
  objc_msgSend(v40, "applyContentBlockingRule:toWebView:completion:", v39, v38, v1 + 80);
  return swift_continuation_await(v1 + 16);
}

uint64_t sub_1C88A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C88D8 + 4 * byte_2F2260[*v0]))(0x64696C61766E69, 0xE700000000000000);
}

uint64_t sub_1C88D8()
{
  return 0x436F5474756F6261;
}

uint64_t sub_1C88FC()
{
  return 0x676E69676E616863;
}

uint64_t sub_1C8914()
{
  return 1701736292;
}

uint64_t sub_1C8924()
{
  unsigned __int8 *v0;

  return sub_1C2F90(*v0);
}

double sub_1C892C(unsigned __int8 *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, uint64_t, uint64_t, uint64_t, __n128);
  __n128 v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v7 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v9 = *((_QWORD *)a1 + 3);
  v8 = *((_QWORD *)a1 + 4);
  v10 = *((_QWORD *)a1 + 5);
  v11 = *((_QWORD *)a1 + 6);
  v12 = *((_QWORD *)a1 + 7);
  v34 = v11;
  v35 = v10;
  v33 = v12;
  if ((a2 & 1) != 0)
  {
    LOBYTE(v37) = *a1;
    BYTE1(v37) = v4;
    BYTE2(v37) = v5;
    v38 = v7;
    v39 = v6;
    v40 = v9;
    v41 = v8;
    v42 = v10;
    v43 = v11;
    v44 = v12;
    v13 = BookThemeEntity.hasDarkBackground.getter() & 1;
  }
  else
  {
    v13 = 0;
  }
  v32 = v13;
  *(_QWORD *)(v2[34] + 96) = v13;
  v37 = v2[40];
  v14 = v2[16];
  swift_bridgeObjectRetain(v37);
  v15 = swift_bridgeObjectRetain(v14);
  sub_66808(v15);
  v16 = v37;
  v17 = *(_QWORD *)(v37 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain(v37);
    v29 = v37;
    v30 = v8;
    v18 = (uint64_t *)(v37 + 40);
    v31 = v9;
    do
    {
      v19 = *(v18 - 1);
      v20 = *v18;
      ObjectType = swift_getObjectType(v19);
      LOBYTE(v37) = v3;
      BYTE1(v37) = v4;
      BYTE2(v37) = v5;
      v38 = v7;
      v39 = v6;
      v40 = v9;
      v41 = v30;
      v42 = v35;
      v43 = v34;
      v44 = v33;
      v21 = v6;
      v22 = v7;
      v23 = v5;
      v24 = v4;
      v25 = v3;
      v26 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t, __n128))(v20 + 328);
      v27 = swift_unknownObjectRetain(v19);
      v26(&v37, v32, ObjectType, v20, v27);
      v3 = v25;
      v4 = v24;
      v5 = v23;
      v7 = v22;
      v6 = v21;
      v9 = v31;
      swift_unknownObjectRelease(v19);
      v18 += 2;
      --v17;
    }
    while (v17);
    v16 = v29;
    swift_bridgeObjectRelease(v29);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  return result;
}

void sub_1C8AC0(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[1] == 1)
  {
    if (*a1 == 1)
    {
      swift_beginAccess(a4 + 16, &v25, 1, 0);
      *(_BYTE *)(a4 + 16) = 0;
    }
    else
    {
      swift_beginAccess(a2 + 16, v29, 0, 0);
      Strong = swift_weakLoadStrong(a2 + 16);
      if (Strong)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, Strong + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_log, v10);
        swift_release();
        v15 = sub_49F1C(a3, (uint64_t)&v25);
        v16 = Logger.logObject.getter(v15);
        v17 = static os_log_type_t.error.getter();
        v18 = v17;
        if (os_log_type_enabled(v16, v17))
        {
          v24 = v18;
          v19 = (uint8_t *)swift_slowAlloc(12, -1);
          *(_DWORD *)v19 = 134217984;
          v23 = v19 + 4;
          v21 = v27;
          v20 = v28;
          sub_472D0(&v25, v27);
          v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v21, v20);
          sub_34488(&v25);
          v25 = v22;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v23);
          _os_log_impl(&dword_0, v16, (os_log_type_t)v24, "Reload loader ordinal:%ld error", v19, 0xCu);
          swift_slowDealloc(v19, -1, -1);
        }
        else
        {
          sub_34488(&v25);
        }

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }
    }
  }
  dispatch_group_leave(a5);
}

double sub_1C8CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[7];
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[26];
  _BYTE v46[24];
  _BYTE v47[40];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v47, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_1C4C60(2u);
    swift_beginAccess(a2 + 16, v46, 0, 0);
    if (*(_BYTE *)(a2 + 16) != 1)
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
      return result;
    }
    v7 = swift_retain_n(v6, 2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = swift_slowAlloc(32, -1);
      v30 = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = *(_QWORD *)(v6 + 24);
      ObjectType = swift_getObjectType(*(_QWORD *)(v6 + 16));
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v12 + 16))(v36, ObjectType, v12);
      v14 = Location.description.getter();
      v16 = v15;
      v44 = v36[6];
      *(_OWORD *)v45 = v37[0];
      *(_OWORD *)&v45[10] = *(_OWORD *)((char *)v37 + 10);
      v40 = v36[2];
      v41 = v36[3];
      v42 = v36[4];
      v43 = v36[5];
      v38 = v36[0];
      v39 = v36[1];
      sub_49900((uint64_t)&v38);
      *(_QWORD *)&v36[0] = sub_33524(v14, v16, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v36, (char *)v36 + 8, v10 + 4);
      swift_release_n(v6);
      swift_bridgeObjectRelease(v16);
      _os_log_impl(&dword_0, v8, v9, "#updateVisibleContent call from reloadAndPaginateVisibleLoaders currentLocation:%s", v10, 0xCu);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      swift_release_n(v6);
    }

    sub_555CC((uint64_t)v36);
    sub_5B70C((uint64_t)v36, (uint64_t)&v30, &qword_3B8DF0);
    sub_1C641C((uint64_t)&v30, 0.0, 0.0, 1, &v33);
    v17 = v33;
    v30 = v33;
    v28 = v34;
    v29 = v35;
    v31 = v34;
    v32 = v35;
    sub_1C6DB0(&v30);
    v18 = *(_QWORD *)(v6 + 24);
    v19 = swift_getObjectType(*(_QWORD *)(v6 + 16));
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v18 + 16))(&v38, v19, v18);
    if (*((_QWORD *)&v39 + 1))
    {
      v20 = sub_49900((uint64_t)&v38);
    }
    else
    {
      v21 = v41;
      v20 = sub_49900((uint64_t)&v38);
      if (!v21 && (v45[25] & 1) == 0)
      {
        v25 = Logger.logObject.getter(v20);
        v26 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v27 = 0;
          _os_log_impl(&dword_0, v25, v26, "#layoutState - transitioning to navigatedToPageOffset since we do not have a requested location", v27, 2u);
          swift_slowDealloc(v27, -1, -1);
        }

        sub_1C4C60(4u);
        swift_release();
        goto LABEL_14;
      }
    }
    v22 = Logger.logObject.getter(v20);
    v23 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "#layoutState - skipping transition to navigatedToPageOffset since we have a requested location", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }
    swift_release();

LABEL_14:
    swift_bridgeObjectRelease(v17);
    swift_unknownObjectRelease(v28);
    *(_QWORD *)&result = swift_unknownObjectRelease(v29).n128_u64[0];
  }
  return result;
}

double sub_1C90E8(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(_OWORD *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[7];
  _OWORD v27[2];
  _OWORD v28[7];
  _OWORD v29[2];
  _BYTE v30[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v30, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(Strong + 320);
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain(*(_QWORD *)(Strong + 320));
      v9 = (uint64_t *)(v7 + 40);
      do
      {
        v10 = *(v9 - 1);
        v11 = *v9;
        ObjectType = swift_getObjectType(v10);
        LOBYTE(v28[0]) = v2;
        v13 = *(void (**)(_OWORD *, uint64_t, uint64_t, __n128))(v11 + 192);
        v14 = swift_unknownObjectRetain(v10);
        v13(v28, ObjectType, v11, v14);
        swift_unknownObjectRelease(v10);
        v9 += 2;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease(v7);
    }
    if (v2 == 1)
    {
      v15 = *(_QWORD *)(v6 + 24);
      v16 = swift_getObjectType(*(_QWORD *)(v6 + 16));
      (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v15 + 16))(v26, v16, v15);
      v28[6] = v26[6];
      v29[0] = v27[0];
      *(_OWORD *)((char *)v29 + 10) = *(_OWORD *)((char *)v27 + 10);
      v28[2] = v26[2];
      v28[3] = v26[3];
      v28[4] = v26[4];
      v28[5] = v26[5];
      v28[0] = v26[0];
      v28[1] = v26[1];
      address(of:)(v28);
      sub_5B70C((uint64_t)v28, (uint64_t)&v20, &qword_3B8DF0);
      sub_1C641C((uint64_t)&v20, 0.0, 0.0, 1, &v23);
      sub_49900((uint64_t)v26);
      v17 = v23;
      v18 = v24;
      v19 = v25;
      v20 = v23;
      v21 = v24;
      v22 = v25;
      sub_1C6DB0(&v20);
      swift_bridgeObjectRelease(v17);
      swift_release();
      swift_unknownObjectRelease(v18);
      *(_QWORD *)&result = swift_unknownObjectRelease(v19).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_release().n128_u64[0];
    }
  }
  return result;
}

void sub_1C92B0(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[18];
  uint64_t v75;
  _QWORD v76[4];
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[3];
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _OWORD v92[3];

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v63 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v63 - v12;
  v14 = a1[6];
  v15 = a1[7];
  v16 = a1[4];
  v90 = a1[5];
  v91 = v14;
  v92[0] = v15;
  *(_OWORD *)((char *)v92 + 10) = *(__int128 *)((char *)a1 + 122);
  v17 = a1[3];
  v87 = a1[2];
  v88 = v17;
  v89 = v16;
  v18 = a1[1];
  v85 = *a1;
  v86 = v18;
  swift_unownedRetainStrong(a2);
  LODWORD(a1) = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_internalState);
  swift_release();
  swift_unownedRetainStrong(a2);
  if (a1 >= 2)
  {
    v72 = (uint64_t)v10;
    CurrentValueSubject.value.getter(&v77);
    swift_release();
    v27 = v77;
    v28 = *((_QWORD *)&v78 + 1);
    swift_unknownObjectRelease(*((_QWORD *)&v77 + 1));
    swift_unknownObjectRelease(v28);
    v29 = sub_1B7EFC(v27);
    v70 = sub_1B8004((uint64_t)v29);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRelease(v29);
    swift_unownedRetainStrong(a2);
    v68 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v68(v13, a2 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_log, v4);
    swift_release();
    sub_49BD8((uint64_t)&v85);
    v30 = sub_49BD8((uint64_t)&v85);
    v31 = Logger.logObject.getter(v30);
    v32 = v5;
    v33 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v31, v33))
    {
      v71 = v32;
      v34 = swift_slowAlloc(12, -1);
      v69 = 0;
      v35 = (uint8_t *)v34;
      v67 = swift_slowAlloc(32, -1);
      v74[0] = v67;
      v73 = v4;
      *(_DWORD *)v35 = 136315138;
      v66 = (uint64_t)(v35 + 4);
      v83 = v91;
      v84[0] = v92[0];
      *(_OWORD *)((char *)v84 + 10) = *(_OWORD *)((char *)v92 + 10);
      v79 = v87;
      v80 = v88;
      v81 = v89;
      v82 = v90;
      v77 = v85;
      v78 = v86;
      v36 = Location.description.getter();
      v38 = v37;
      *(_QWORD *)&v77 = sub_33524(v36, v37, v74);
      v4 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, (char *)&v77 + 8, v66);
      swift_bridgeObjectRelease(v38);
      sub_49900((uint64_t)&v85);
      sub_49900((uint64_t)&v85);
      _os_log_impl(&dword_0, v31, v33, "#updateVisibleContent call from currentLocationProvider.currentLocationPublisher with location:%s", v35, 0xCu);
      v39 = v67;
      swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1, -1);
      swift_slowDealloc(v35, -1, -1);

      v40 = *(void (**)(char *, uint64_t))(v71 + 8);
    }
    else
    {
      sub_49900((uint64_t)&v85);
      sub_49900((uint64_t)&v85);

      v40 = *(void (**)(char *, uint64_t))(v32 + 8);
    }
    v40(v13, v4);
    swift_unownedRetainStrong(a2);
    v83 = v91;
    v84[0] = v92[0];
    *(_OWORD *)((char *)v84 + 10) = *(_OWORD *)((char *)v92 + 10);
    v79 = v87;
    v80 = v88;
    v81 = v89;
    v82 = v90;
    v77 = v85;
    v78 = v86;
    address(of:)(&v77);
    sub_5B70C((uint64_t)&v77, (uint64_t)v74, &qword_3B8DF0);
    sub_49BD8((uint64_t)&v85);
    sub_1C641C((uint64_t)v74, 0.0, 0.0, 1, &v75);
    swift_release();
    sub_49900((uint64_t)&v85);
    v71 = v76[0];
    v41 = v76[2];
    v66 = v76[3];
    v67 = v76[1];
    v69 = v75;
    v42 = sub_1B7EFC(v75);
    v43 = sub_1B8004((uint64_t)v42);
    swift_bridgeObjectRelease(v42);
    v44 = v85;
    v45 = v43[2];
    v46 = v72;
    if (v45)
    {
      v47 = v43 + 5;
      while ((*v47 & 1) != 0 || *((_QWORD *)v47 - 1) != (_QWORD)v85)
      {
        v47 += 16;
        if (!--v45)
          goto LABEL_14;
      }
    }
    else
    {
LABEL_14:
      v65 = v41;
      swift_unownedRetainStrong(a2);
      v68((char *)v46, a2 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_log, v4);
      swift_release();
      sub_49BD8((uint64_t)&v85);
      swift_bridgeObjectRetain(v43);
      sub_49BD8((uint64_t)&v85);
      swift_bridgeObjectRetain(v43);
      v49 = Logger.logObject.getter(v48);
      v50 = static os_log_type_t.error.getter(v49);
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc(22, -1);
        v73 = v4;
        v52 = v51;
        v64 = swift_slowAlloc(32, -1);
        v74[0] = v64;
        *(_DWORD *)v52 = 136315394;
        swift_bridgeObjectRetain(v43);
        v53 = sub_319AC((uint64_t *)&unk_3BE7E0);
        v54 = Array.description.getter(v43, v53);
        v68 = (void (*)(char *, uint64_t, uint64_t))v40;
        v56 = v55;
        swift_bridgeObjectRelease(v43);
        v75 = sub_33524(v54, v56, v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v52 + 4);
        swift_bridgeObjectRelease_n(v43, 2);
        swift_bridgeObjectRelease(v56);
        *(_WORD *)(v52 + 12) = 2048;
        sub_49900((uint64_t)&v85);
        v75 = v44;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v52 + 14);
        sub_49900((uint64_t)&v85);
        _os_log_impl(&dword_0, v49, v50, "Our new ordinals %s does not contain our current location ordinal %ld", (uint8_t *)v52, 0x16u);
        v57 = v64;
        swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v57, -1, -1);
        swift_slowDealloc(v52, -1, -1);

        ((void (*)(uint64_t, uint64_t))v68)(v72, v73);
      }
      else
      {
        sub_49900((uint64_t)&v85);
        swift_bridgeObjectRelease_n(v43, 2);
        sub_49900((uint64_t)&v85);

        v40((char *)v46, v4);
      }
      v41 = v65;
    }
    v58 = v70;
    v59 = sub_1C18E8((_BOOL8)v43, (uint64_t)v70);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v43);
    if (v59)
    {
      swift_bridgeObjectRelease(v69);
      v60 = v71;
    }
    else
    {
      swift_unownedRetainStrong(a2);
      v61 = v69;
      v62 = v71;
      v74[0] = v69;
      v74[1] = v71;
      v74[2] = v67;
      v74[3] = v41;
      v74[4] = v66;
      sub_1C6DB0(v74);
      swift_bridgeObjectRelease(v61);
      swift_release();
      v60 = v62;
    }
    swift_unknownObjectRelease(v60);
    swift_unknownObjectRelease(v41);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_log, v4);
    swift_release();
    sub_49BD8((uint64_t)&v85);
    swift_unownedRetain(a2);
    sub_49BD8((uint64_t)&v85);
    v19 = swift_unownedRetain(a2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      v71 = v5;
      v73 = v4;
      v22 = swift_slowAlloc(22, -1);
      v72 = swift_slowAlloc(64, -1);
      v74[0] = v72;
      *(_DWORD *)v22 = 136315394;
      v83 = v91;
      v84[0] = v92[0];
      *(_OWORD *)((char *)v84 + 10) = *(_OWORD *)((char *)v92 + 10);
      v79 = v87;
      v80 = v88;
      v81 = v89;
      v82 = v90;
      v77 = v85;
      v78 = v86;
      v23 = Location.description.getter();
      v25 = v24;
      *(_QWORD *)&v77 = sub_33524(v23, v24, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, (char *)&v77 + 8, v22 + 4);
      swift_bridgeObjectRelease(v25);
      sub_49900((uint64_t)&v85);
      sub_49900((uint64_t)&v85);
      *(_WORD *)(v22 + 12) = 2080;
      swift_unownedRetainStrong(a2);
      v26 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_layoutState);
      swift_release();
      __asm { BR              X9 }
    }
    sub_49900((uint64_t)&v85);
    sub_49900((uint64_t)&v85);
    swift_unownedRelease(a2);
    swift_unownedRelease(a2);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

double sub_1C9BF4(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17[8];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  _BYTE v27[24];
  _BYTE v28[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v28, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    swift_beginAccess(Strong + 112, v27, 0, 0);
    v7 = *(_QWORD *)(v6 + 112);
    v8 = *(_QWORD *)(v6 + 120);
    ObjectType = swift_getObjectType(v7);
    v10 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, __n128))(v8 + 160);
    v11 = swift_unknownObjectRetain(v7);
    v10(&v22, ObjectType, v8, v11);
    swift_unknownObjectRelease(v7);
    v12 = v22;
    v13 = BYTE1(v22);
    v14 = BYTE2(v22);
    v15 = v26;
    *(_BYTE *)(v6 + 96) = v2;
    v17[0] = v12;
    v17[1] = v13;
    v17[2] = v14;
    v16 = v23;
    v18 = v23;
    v19 = v24;
    v20 = v25;
    v21 = v15;
    sub_1C892C(v17, v2);
    swift_release();
    *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
  }
  return result;
}

void sub_1C9D04(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  uint64_t v4;
  uint64_t Strong;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[144];
  _BYTE v19[24];

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a1 + 24);
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v19, 0, 0);
  Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    v6 = Logger.logObject.getter(Strong);
    v7 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_0, v6, v7, "#updateVisibleContent call from contentHostEnvironmentProvider.publisher", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

    sub_555CC((uint64_t)v18);
    sub_5B70C((uint64_t)v18, (uint64_t)&v12, &qword_3B8DF0);
    sub_1C641C((uint64_t)&v12, v2, v3, 0, &v15);
    v9 = v15;
    v12 = v15;
    v10 = v16;
    v13 = v16;
    v11 = v17;
    v14 = v17;
    sub_1C6DB0(&v12);
    swift_bridgeObjectRelease(v9);
    swift_release();
    swift_unknownObjectRelease(v10);
    swift_unknownObjectRelease(v11);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002CLL, 0x80000000002D04A0, "BookEPUB/BookContentLayoutController.swift", 42, 2, 793, 0);
    __break(1u);
  }
}

double sub_1C9EB8(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  __int128 v11;
  BookEPUB::PageLocation v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, _QWORD);
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  uint64_t (*v88)(uint64_t, _QWORD);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, __n128);
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  __n128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  double result;
  NSObject *v142;
  uint64_t v143;
  NSObject *log;
  os_log_type_t loga;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  os_log_type_t type;
  os_log_type_t typea[8];
  __int128 v154;
  char v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  _OWORD v164[2];
  uint64_t v165;
  __int128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169[3];
  uint64_t v170;
  uint64_t v171;
  char v172[32];
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  _BYTE v180[26];
  BookEPUB::SpreadPaginationEntity_optional v181;

  v4 = a2[7];
  v179 = a2[6];
  *(_OWORD *)v180 = v4;
  *(_OWORD *)&v180[10] = *(__int128 *)((char *)a2 + 122);
  v5 = a2[3];
  v175 = a2[2];
  v176 = v5;
  v6 = a2[5];
  v177 = a2[4];
  v178 = v6;
  v7 = a2[1];
  v173 = *a2;
  v174 = v7;
  v8 = *(_QWORD *)(v2 + 56);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 48));
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  v11 = v173;
  v157 = v173;
  v12.documentOrdinal = (Swift::Int)&v157;
  v181 = BookPaginationEntity.spread(containing:)(v12);
  v13 = v169[0];
  if (v169[0])
  {
    v14 = v169[2];
  }
  else
  {
    v166 = v11;
    v181.value.columns._rawValue = &v166;
    BookPaginationEntity.adjustedSpread(containing:)(*(BookEPUB::PageLocation *)&v181.value.columns._rawValue);
    v13 = v157;
    v14 = v158;
  }
  v15 = swift_bridgeObjectRetain(v13);
  v16 = sub_572E0(v15);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease_n(v13, 2);
  v151 = *(_QWORD *)(a1 + 16);
  if (v151)
  {
    v149 = v10;
    v146 = v148 + 28;
    v147 = (uint64_t)v16;
    swift_bridgeObjectRetain(a1);
    swift_beginAccess(v148 + 14, v172, 0, 0);
    v17 = 0;
    v150 = a1;
    while (1)
    {
      v22 = qword_3B5920;
      v154 = *(_OWORD *)(a1 + 16 * v17 + 32);
      v23 = v154;
      swift_unknownObjectRetain(v154);
      if (v22 != -1)
        swift_once(&qword_3B5920, sub_1C30D0);
      v24 = type metadata accessor for Logger(0);
      sub_555F0(v24, (uint64_t)qword_3C11A0);
      swift_unknownObjectRetain(v154);
      sub_49BD8((uint64_t)&v173);
      swift_unknownObjectRetain(v154);
      v25 = sub_49BD8((uint64_t)&v173);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc(22, -1);
        v29 = swift_slowAlloc(64, -1);
        v169[0] = v29;
        *(_DWORD *)v28 = 136315394;
        v163 = v179;
        v164[0] = *(_OWORD *)v180;
        *(_OWORD *)((char *)v164 + 10) = *(_OWORD *)&v180[10];
        v159 = v175;
        v160 = v176;
        v161 = v177;
        v162 = v178;
        v157 = v173;
        v158 = v174;
        v30 = Location.description.getter();
        v32 = v31;
        *(_QWORD *)&v157 = sub_33524(v30, v31, v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v28 + 4);
        swift_bridgeObjectRelease(v32);
        sub_49900((uint64_t)&v173);
        sub_49900((uint64_t)&v173);
        *(_WORD *)(v28 + 12) = 2080;
        v33 = swift_getObjectType(v154);
        *(_QWORD *)&v157 = (*(uint64_t (**)(uint64_t, _QWORD))(*((_QWORD *)&v154 + 1) + 24))(v33, *((_QWORD *)&v154 + 1));
        BYTE8(v157) = v34 & 1;
        v35 = sub_319AC((uint64_t *)&unk_3BE7E0);
        v36 = String.init<A>(describing:)(&v157, v35);
        v38 = v37;
        *(_QWORD *)&v157 = sub_33524(v36, v37, v169);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v28 + 14);
        swift_unknownObjectRelease_n(v154, 2);
        swift_bridgeObjectRelease(v38);
        _os_log_impl(&dword_0, v26, v27, "BookContentLayoutController.updateContentOffsetFor to currentLocation:%s Loader view: %s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy(v29, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v29, -1, -1);
        swift_slowDealloc(v28, -1, -1);

      }
      else
      {
        sub_49900((uint64_t)&v173);
        sub_49900((uint64_t)&v173);

        swift_unknownObjectRelease_n(v154, 2);
      }
      v39 = swift_getObjectType(v154);
      v40 = *(uint64_t (**)(uint64_t, _QWORD))(*((_QWORD *)&v154 + 1) + 48);
      v41 = v40(v39, *((_QWORD *)&v154 + 1));
      if (v41)
      {
        v42 = (id)v41;
        (*(void (**)(__int128 *__return_ptr, uint64_t, _QWORD))(*((_QWORD *)&v154 + 1) + 40))(&v157, v39, *((_QWORD *)&v154 + 1));
        if (*((_QWORD *)&v158 + 1))
        {
          sub_3F1CC(&v157, (uint64_t)v169);
          v43 = v170;
          v44 = v171;
          sub_472D0(v169, v170);
          v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 40))(v43, v44);
          v46 = *(_QWORD *)(v149 + 104);
          if (*(_QWORD *)(v46 + 16) && (v47 = sub_3B7F8(v45), (v48 & 1) != 0))
          {
            v49 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v47);
            KeyPath = swift_getKeyPath(&unk_2F2658);
            swift_getKeyPath(&unk_2F2680);
            v51 = swift_retain();
            static Published.subscript.getter(&v157, v51, KeyPath);
            swift_release();
            swift_release();
            if (v157 == 1)
            {
              v155 = v180[25];
              if (*((_QWORD *)&v174 + 1))
              {
                sub_49F1C((uint64_t)v169, (uint64_t)&v166);
                goto LABEL_40;
              }
              if ((_QWORD)v176)
                v80 = 1;
              else
                v80 = v180[25];
              sub_49F1C((uint64_t)v169, (uint64_t)&v166);
              if ((v80 & 1) != 0)
              {
LABEL_40:
                v81 = v49;
                v82 = v167;
                v83 = v168;
                sub_472D0(&v166, v167);
                v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 40))(v82, v83);
                sub_34488(&v166);
                if (v84 == (_QWORD)v11)
                {
                  v85 = objc_opt_self(WKWebView);
                  v86 = swift_dynamicCastObjCClass(v42, v85);
                  if (v86)
                  {
                    v87 = v86;
                    v88 = *(uint64_t (**)(uint64_t, _QWORD))(*((_QWORD *)&v154 + 1) + 72);
                    v42 = v42;
                    if ((v88(v39, *((_QWORD *)&v154 + 1)) & 1) != 0)
                    {
                      v163 = v179;
                      v164[0] = *(_OWORD *)v180;
                      *(_OWORD *)((char *)v164 + 10) = *(_OWORD *)&v180[10];
                      v159 = v175;
                      v160 = v176;
                      v161 = v177;
                      v162 = v178;
                      v157 = v173;
                      v158 = v174;
                      sub_1CED8C(v81, v87, v23, &v157, v39, *((uint64_t *)&v154 + 1));
                      swift_release();
                      swift_unknownObjectRelease(v23);

                      goto LABEL_63;
                    }
                    sub_49BD8((uint64_t)&v173);
                    v131 = sub_49BD8((uint64_t)&v173);
                    v132 = Logger.logObject.getter(v131);
                    v133 = static os_log_type_t.info.getter();
                    if (os_log_type_enabled(v132, v133))
                    {
                      v134 = (uint8_t *)swift_slowAlloc(12, -1);
                      v135 = swift_slowAlloc(32, -1);
                      v165 = v135;
                      *(_DWORD *)v134 = 136315138;
                      v163 = v179;
                      v164[0] = *(_OWORD *)v180;
                      *(_OWORD *)((char *)v164 + 10) = *(_OWORD *)&v180[10];
                      v159 = v175;
                      v160 = v176;
                      v161 = v177;
                      v162 = v178;
                      v157 = v173;
                      v158 = v174;
                      v136 = Location.description.getter();
                      v138 = v137;
                      *(_QWORD *)&v157 = sub_33524(v136, v137, &v165);
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v134 + 4);
                      swift_bridgeObjectRelease(v138);
                      sub_49900((uint64_t)&v173);
                      sub_49900((uint64_t)&v173);
                      _os_log_impl(&dword_0, v132, v133, "BookContentLayoutController.updateContentOffsetFor Skipping request to currentLocation:%s. loader.contentLoaded = false", v134, 0xCu);
                      swift_arrayDestroy(v135, 1, (char *)&type metadata for Any + 8);
                      swift_slowDealloc(v135, -1, -1);
                      swift_slowDealloc(v134, -1, -1);
                      swift_unknownObjectRelease(v23);
                      swift_release();

                      goto LABEL_63;
                    }
                    swift_release();

                    sub_49900((uint64_t)&v173);
                    sub_49900((uint64_t)&v173);

LABEL_27:
                    swift_unknownObjectRelease(v23);
LABEL_8:
                    a1 = v150;
                    sub_34488(v169);
                    goto LABEL_9;
                  }
                }
              }
              else
              {
                v81 = v49;
                sub_34488(&v166);
              }
              v89 = v148[14];
              v90 = v148[15];
              v91 = swift_getObjectType(v89);
              v92 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v90 + 24);
              v93 = swift_unknownObjectRetain(v89);
              v94 = v92(v91, v90, v93);
              swift_unknownObjectRelease(v89);
              if (v94 == 1)
              {
                v95 = v81;
                sub_55784(v147, (uint64_t)&v157);
                if ((BYTE8(v158) & 1) != 0)
                {
                  sub_49BD8((uint64_t)&v173);
                  swift_retain();
                  swift_retain();
                  sub_49BD8((uint64_t)&v173);
                  swift_retain();
                  v96 = swift_retain();
                  v97 = Logger.logObject.getter(v96);
                  v98 = static os_log_type_t.error.getter();
                  if (os_log_type_enabled(v97, v98))
                  {
                    v99 = swift_slowAlloc(32, -1);
                    v156 = swift_slowAlloc(64, -1);
                    v165 = v156;
                    *(_DWORD *)v99 = 136315650;
                    type = v98;
                    v163 = v179;
                    v164[0] = *(_OWORD *)v180;
                    *(_OWORD *)((char *)v164 + 10) = *(_OWORD *)&v180[10];
                    v159 = v175;
                    v160 = v176;
                    v161 = v177;
                    v162 = v178;
                    v157 = v173;
                    v158 = v174;
                    log = v97;
                    v100 = Location.description.getter();
                    v102 = v101;
                    *(_QWORD *)&v157 = sub_33524(v100, v101, &v165);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v99 + 4);
                    swift_bridgeObjectRelease(v102);
                    sub_49900((uint64_t)&v173);
                    sub_49900((uint64_t)&v173);
                    *(_WORD *)(v99 + 12) = 2048;
                    v103 = *(_QWORD *)(v81 + 16);
                    swift_release();
                    *(_QWORD *)&v157 = v103;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v99 + 14);
                    swift_release();
                    *(_WORD *)(v99 + 22) = 2082;
                    v104 = v148[31];
                    v105 = v148[32];
                    sub_472D0(v146, v104);
                    v106 = (*(uint64_t (**)(uint64_t, uint64_t))(v105 + 24))(v104, v105);
                    v108 = v107;
                    *(_QWORD *)&v157 = sub_33524(v106, v107, &v165);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v99 + 24);
                    swift_release_n(v148);
                    swift_bridgeObjectRelease(v108);
                    _os_log_impl(&dword_0, log, type, "BookContentLayoutController.updateContentOffsets\n    updating to location:%s\n    ** UNABLE TO DETERMINE CONTENT OFFSET **\n    documentOrdinal:%ld\n    for:%{public}s", (uint8_t *)v99, 0x20u);
                    swift_arrayDestroy(v156, 2, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v156, -1, -1);
                    swift_slowDealloc(v99, -1, -1);

                  }
                  else
                  {
                    swift_release();
                    sub_49900((uint64_t)&v173);
                    sub_49900((uint64_t)&v173);

                    swift_release_n(v148);
                    swift_release();
                  }
                }
                else
                {
                  v111 = *((_QWORD *)&v157 + 1);
                  v109 = v157;
                  v110 = v158;
                  sub_49BD8((uint64_t)&v173);
                  swift_retain();
                  swift_retain();
                  sub_49BD8((uint64_t)&v173);
                  swift_retain();
                  v112 = swift_retain();
                  v113 = Logger.logObject.getter(v112);
                  v114 = static os_log_type_t.info.getter();
                  if (os_log_type_enabled(v113, v114))
                  {
                    loga = v114;
                    v115 = swift_slowAlloc(42, -1);
                    v143 = swift_slowAlloc(64, -1);
                    v165 = v143;
                    *(_DWORD *)v115 = 136315906;
                    *(_QWORD *)typea = v109;
                    v163 = v179;
                    v164[0] = *(_OWORD *)v180;
                    *(_OWORD *)((char *)v164 + 10) = *(_OWORD *)&v180[10];
                    v159 = v175;
                    v160 = v176;
                    v161 = v177;
                    v162 = v178;
                    v157 = v173;
                    v158 = v174;
                    v142 = v113;
                    v116 = Location.description.getter();
                    v118 = v117;
                    *(_QWORD *)&v157 = sub_33524(v116, v117, &v165);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v115 + 4);
                    swift_bridgeObjectRelease(v118);
                    sub_49900((uint64_t)&v173);
                    sub_49900((uint64_t)&v173);
                    *(_WORD *)(v115 + 12) = 2050;
                    *(_QWORD *)&v157 = v111;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v115 + 14);
                    *(_WORD *)(v115 + 22) = 2048;
                    v119 = *(_QWORD *)(v95 + 16);
                    swift_release();
                    *(_QWORD *)&v157 = v119;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v115 + 24);
                    swift_release();
                    *(_WORD *)(v115 + 32) = 2082;
                    v120 = v148[31];
                    v121 = v148[32];
                    sub_472D0(v146, v120);
                    v122 = *(uint64_t (**)(uint64_t, uint64_t))(v121 + 24);
                    v123 = v121;
                    v109 = *(_QWORD *)typea;
                    v124 = v122(v120, v123);
                    v126 = v125;
                    *(_QWORD *)&v157 = sub_33524(v124, v125, &v165);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, (char *)&v157 + 8, v115 + 34);
                    swift_release_n(v148);
                    swift_bridgeObjectRelease(v126);
                    _os_log_impl(&dword_0, v142, loga, "BookContentLayoutController.updateContentOffsets\n    updating to location:%s\n    moving to offset:%{public}f\n    documentOrdinal:%ld\n    for:%{public}s", (uint8_t *)v115, 0x2Au);
                    swift_arrayDestroy(v143, 2, (char *)&type metadata for Any + 8);
                    swift_slowDealloc(v143, -1, -1);
                    swift_slowDealloc(v115, -1, -1);

                  }
                  else
                  {
                    swift_release();
                    sub_49900((uint64_t)&v173);
                    sub_49900((uint64_t)&v173);

                    swift_release_n(v148);
                    v127 = swift_release();
                  }
                  *(_QWORD *)&v157 = v109;
                  *((_QWORD *)&v157 + 1) = v111;
                  *(_QWORD *)&v158 = v110;
                  (*(void (**)(__int128 *, void (*)(char), _QWORD, uint64_t, _QWORD, __n128))(*((_QWORD *)&v154 + 1) + 224))(&v157, sub_1D1BE0, 0, v39, *((_QWORD *)&v154 + 1), v127);
                }
                v139 = v170;
                v140 = v171;
                sub_472D0(v169, v170);
                if ((*(uint64_t (**)(uint64_t, uint64_t))(v140 + 40))(v139, v140) == (_QWORD)v11)
                  goto LABEL_61;
              }
              else
              {
                sub_49F1C((uint64_t)v169, (uint64_t)&v157);
                if ((v155 & 1) != 0)
                {
                  swift_unknownObjectRelease(v23);
                  swift_release();

                  sub_34488(&v157);
                  goto LABEL_8;
                }
                v128 = *((_QWORD *)&v158 + 1);
                v129 = v159;
                sub_472D0(&v157, *((uint64_t *)&v158 + 1));
                v130 = (*(uint64_t (**)(uint64_t, uint64_t))(v129 + 40))(v128, v129);
                sub_34488(&v157);
                if (v130 == (_QWORD)v11)
LABEL_61:
                  sub_1C4C60(4u);
              }
              swift_unknownObjectRelease(v23);
              swift_release();
LABEL_63:

              goto LABEL_8;
            }
            v74 = sub_49F1C((uint64_t)v169, (uint64_t)&v157);
            v63 = Logger.logObject.getter(v74);
            v75 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v63, v75))
            {
              v76 = swift_slowAlloc(12, -1);
              *(_DWORD *)v76 = 134217984;
              v77 = *((_QWORD *)&v158 + 1);
              v78 = v159;
              sub_472D0(&v157, *((uint64_t *)&v158 + 1));
              v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 40))(v77, v78);
              sub_34488(&v157);
              *(_QWORD *)(v76 + 4) = v79;
              _os_log_impl(&dword_0, v63, v75, "Document ordinal %ld is not paginated yet!  We are not going to adjust our document offset.", (uint8_t *)v76, 0xCu);
              swift_slowDealloc(v76, -1, -1);
              swift_unknownObjectRelease(v154);
              swift_release();
              goto LABEL_7;
            }
            sub_34488(&v157);

            swift_release();
          }
          else
          {
            v62 = sub_49F1C((uint64_t)v169, (uint64_t)&v157);
            v63 = Logger.logObject.getter(v62);
            v64 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v63, v64))
            {
              v18 = swift_slowAlloc(12, -1);
              *(_DWORD *)v18 = 134217984;
              v19 = *((_QWORD *)&v158 + 1);
              v20 = v159;
              sub_472D0(&v157, *((uint64_t *)&v158 + 1));
              v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
              sub_34488(&v157);
              *(_QWORD *)(v18 + 4) = v21;
              _os_log_impl(&dword_0, v63, v64, "Failed to get associated paginated document for ordinal %ld", (uint8_t *)v18, 0xCu);
              swift_slowDealloc(v18, -1, -1);
              swift_unknownObjectRelease(v154);
LABEL_7:

              goto LABEL_8;
            }
            sub_34488(&v157);

          }
          goto LABEL_27;
        }
        sub_52128((uint64_t)&v157, &qword_3B8990);
        v65 = swift_unknownObjectRetain_n(v154, 2);
        v66 = Logger.logObject.getter(v65);
        v67 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v66, v67))
        {

          goto LABEL_32;
        }
        v68 = swift_slowAlloc(12, -1);
        v69 = swift_slowAlloc(32, -1);
        v169[0] = v69;
        *(_DWORD *)v68 = 136315138;
        v157 = v154;
        swift_unknownObjectRetain(v154);
        v70 = sub_319AC(&qword_3B67F8);
        v71 = String.init<A>(describing:)(&v157, v70);
        v73 = v72;
        *(_QWORD *)(v68 + 4) = sub_33524(v71, v72, v169);
        swift_unknownObjectRelease_n(v154, 2);
        swift_bridgeObjectRelease(v73);
        _os_log_impl(&dword_0, v66, v67, "Loader %s did not have a document!", (uint8_t *)v68, 0xCu);
        swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v69, -1, -1);
        swift_slowDealloc(v68, -1, -1);
        swift_unknownObjectRelease(v154);

        a1 = v150;
      }
      else
      {
        v52 = swift_unknownObjectRetain_n(v154, 2);
        v53 = Logger.logObject.getter(v52);
        v54 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v53, v54))
        {

LABEL_32:
          swift_unknownObjectRelease_n(v154, 3);
          a1 = v150;
          goto LABEL_9;
        }
        v55 = swift_slowAlloc(12, -1);
        v56 = swift_slowAlloc(32, -1);
        v169[0] = v56;
        *(_DWORD *)v55 = 136315138;
        *(_QWORD *)&v157 = v40(v39, *((_QWORD *)&v154 + 1));
        *((_QWORD *)&v157 + 1) = v57;
        v58 = sub_319AC(&qword_3B8A30);
        v59 = String.init<A>(describing:)(&v157, v58);
        v61 = v60;
        *(_QWORD *)(v55 + 4) = sub_33524(v59, v60, v169);
        swift_unknownObjectRelease_n(v154, 2);
        swift_bridgeObjectRelease(v61);
        swift_arrayDestroy(v56, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v55, -1, -1);
        swift_unknownObjectRelease(v154);

        a1 = v150;
      }
LABEL_9:
      if (v151 == ++v17)
      {
        swift_bridgeObjectRelease(v147);
        swift_release();
        *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
        return result;
      }
    }
  }
  swift_bridgeObjectRelease(v16);
  *(_QWORD *)&result = swift_release().n128_u64[0];
  return result;
}

void sub_1CB10C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double v35;
  BOOL v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD v49[2];
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v7 = *(_QWORD *)(v2 + 280);
    v6 = *(_QWORD *)(v2 + 288);
    v8 = *(_BYTE *)(v2 + 305);
    v9 = sub_E6454(a1, a2);
    if ((v10 & 1) == 0)
    {
      v11 = v9;
      v12 = Logger.logObject.getter(v9);
      v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        v47 = v7;
        v48 = a1;
        v14 = v6;
        v15 = swift_slowAlloc(22, -1);
        *(_DWORD *)v15 = 134218240;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v15 + 4);
        *(_WORD *)(v15 + 12) = 2048;
        v48 = v11;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v15 + 14);
        _os_log_impl(&dword_0, v12, v13, "preloading content for document ordinal %ld index %ld", (uint8_t *)v15, 0x16u);
        v16 = v15;
        v6 = v14;
        v7 = v47;
        swift_slowDealloc(v16, -1, -1);
      }

      if ((v8 & 1) != 0)
      {
        CurrentValueSubject.value.getter(&v48);
        v17 = v48;
        v18 = v50;
        swift_unknownObjectRelease(v49[0]);
        swift_unknownObjectRelease(v18);
        v19 = *(_QWORD *)(v17 + 16);
        swift_bridgeObjectRelease(v17);
        v20 = 0;
        v21 = v19 - 1;
        goto LABEL_16;
      }
      CurrentValueSubject.value.getter(&v48);
      v17 = v48;
      v19 = v50;
      swift_unknownObjectRelease(v49[0]);
      swift_unknownObjectRelease(v19);
      v34 = *(_QWORD *)(v17 + 16);
      swift_bridgeObjectRelease(v17);
      v35 = floor((double)v34 * 0.5);
      if ((~*(_QWORD *)&v35 & 0x7FF0000000000000) != 0)
      {
        if (v35 > -9.22337204e18)
        {
          if (v35 < 9.22337204e18)
          {
            v21 = (uint64_t)v35;
            v20 = (uint64_t)v35;
LABEL_16:
            v36 = __OFSUB__(v11, v20);
            v37 = v11 - v20;
            if (v36)
            {
              __break(1u);
            }
            else
            {
              v36 = __OFSUB__(v37, v7);
              v38 = v37 - v7;
              if (!v36)
              {
                v36 = __OFADD__(v11, v21);
                v39 = v11 + v21;
                if (!v36)
                {
                  v36 = __OFADD__(v39, v6);
                  v40 = v39 + v6;
                  if (!v36)
                  {
                    if (v40 >= v38)
                    {
                      if (v38 < 0)
                      {
                        v38 = 0;
                        v17 = 0;
                        v19 = v3;
                        if ((uint64_t)v3 <= v40)
                          goto LABEL_26;
                      }
                      else
                      {
                        if ((uint64_t)(v3 - 1) < v38)
                          v38 = v3 - 1;
                        v19 = v3;
                        v17 = v38;
                        if ((uint64_t)v3 <= v40)
                        {
LABEL_26:
                          if (v3 >= v19 && v3 >= v17)
                          {
                            v41 = type metadata accessor for __ContiguousArrayStorageBase(0);
                            v42 = swift_bridgeObjectRetain(a2);
                            v43 = swift_unknownObjectRetain_n(v42, 2);
                            v44 = (_QWORD *)swift_dynamicCastClass(v43, v41);
                            if (!v44)
                            {
                              swift_bridgeObjectRelease(a2);
                              v44 = _swiftEmptyArrayStorage;
                            }
                            v45 = v44[2];
                            swift_release();
                            if (v45 == v19 - v17)
                            {
                              v46 = (char *)swift_dynamicCastClass(a2, v41);
                              if (!v46)
                              {
                                swift_bridgeObjectRelease(a2);
                                v46 = (char *)_swiftEmptyArrayStorage;
                              }
                              goto LABEL_33;
                            }
LABEL_44:
                            swift_bridgeObjectRelease(a2);
                            v46 = sub_F4F08(a2, a2 + 32, v17, (2 * v19) | 1);
LABEL_33:
                            swift_bridgeObjectRelease(a2);
                            sub_1CCE94((uint64_t)v46);
                            return;
                          }
LABEL_43:
                          __break(1u);
                          goto LABEL_44;
                        }
                      }
                      v19 = (v40 & ~(v40 >> 63)) + 1;
                      v17 = v38;
                      goto LABEL_26;
                    }
LABEL_42:
                    __break(1u);
                    goto LABEL_43;
                  }
LABEL_41:
                  __break(1u);
                  goto LABEL_42;
                }
LABEL_40:
                __break(1u);
                goto LABEL_41;
              }
            }
            __break(1u);
            goto LABEL_40;
          }
          goto LABEL_47;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_47:
      __break(1u);
      return;
    }
    v25 = swift_bridgeObjectRetain_n(a2, 2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(22, -1);
      v29 = swift_slowAlloc(32, -1);
      v48 = v29;
      *(_DWORD *)v28 = 134218242;
      v51 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v28 + 4);
      *(_WORD *)(v28 + 12) = 2080;
      v30 = swift_bridgeObjectRetain(a2);
      v31 = Array.description.getter(v30, &type metadata for Int);
      v33 = v32;
      swift_bridgeObjectRelease(a2);
      v51 = sub_33524(v31, v33, (uint64_t *)&v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v28 + 14);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v33);
      _os_log_impl(&dword_0, v26, v27, "Failed to get documentIndex for ordinal: %ld in validOrdinals: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a2, 2);
    }

  }
  else
  {
    v22 = Logger.logObject.getter(a1);
    v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_0, v22, v23, "No current Valid Ordinals!", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

  }
}

void sub_1CB634(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, double a4@<D1>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double (*v24)(uint64_t, uint64_t, __n128);
  __n128 v25;
  CGFloat v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, __n128);
  __n128 v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _OWORD v70[2];
  _BYTE v71[24];
  uint64_t v72;
  _BYTE v73[32];

  v5 = v4;
  v11 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  swift_beginAccess(v4 + 14, v73, 0, 0);
  v12 = v4[14];
  v13 = v5[15];
  ObjectType = swift_getObjectType(v12);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v13 + 24);
  v16 = swift_unknownObjectRetain(v12);
  v17 = v15(ObjectType, v13, v16);
  swift_unknownObjectRelease(v12);
  if ((v17 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    v62 = v11;
    v63 = v10;
    v18 = *(_OWORD *)(a1 + 96);
    v68 = *(_OWORD *)(a1 + 80);
    v69 = v18;
    v70[0] = *(_OWORD *)(a1 + 112);
    *(_OWORD *)((char *)v70 + 10) = *(_OWORD *)(a1 + 122);
    v19 = *(_OWORD *)(a1 + 32);
    v64 = *(_OWORD *)(a1 + 16);
    v65 = v19;
    v20 = *(_OWORD *)(a1 + 64);
    v66 = *(_OWORD *)(a1 + 48);
    v67 = v20;
    v21 = v5[14];
    v22 = v5[15];
    v23 = swift_getObjectType(v21);
    v24 = *(double (**)(uint64_t, uint64_t, __n128))(v22 + 48);
    v25 = swift_unknownObjectRetain(v21);
    v26 = v24(v23, v22, v25);
    v28 = v27;
    swift_unknownObjectRelease(v21);
    sub_1CBA68(&v62, a2, v26, v28, a3, a4);
    return;
  }
  v29 = v5[14];
  v30 = v5[15];
  v31 = swift_getObjectType(v29);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v30 + 120);
  v33 = swift_unknownObjectRetain(v29);
  v34 = v32(v31, v30, v33);
  swift_unknownObjectRelease(v29);
  v35 = v5[7];
  v36 = swift_getObjectType(v5[6]);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v35);
  v37 = BookPaginationEntity.document(for:)(v11);
  swift_release();
  v61 = v11;
  if (!v37)
    goto LABEL_13;
  v38 = (_QWORD *)(v37 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
  swift_beginAccess(v37 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v71, 0, 0);
  v39 = *v38 - v10;
  if (__OFSUB__(*v38, v10))
  {
    __break(1u);
    goto LABEL_18;
  }
  v40 = v34 - v39;
  if (__OFSUB__(v34, v39))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!sub_1C3B4C())
  {
    v41 = sub_1C3CB4();
    swift_release();
    if ((v41 & 1) != 0)
    {
      v34 = 1;
      goto LABEL_13;
    }
    v42 = v40 & ~(v40 >> 63);
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (!v43)
    {
      if (v44 < v34)
        v34 = v44;
      goto LABEL_13;
    }
LABEL_19:
    __break(1u);
    return;
  }
  swift_release();
  v34 = 1;
LABEL_13:
  v45 = v5[3];
  v46 = swift_getObjectType(v5[2]);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v45 + 40))(&v62, v46, v45);
  v47 = v62;
  v48 = v63;
  v49 = v64;
  v50 = sub_5B864(v62, v63, v64);
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v51, v52))
  {
    v60 = a2;
    v53 = swift_slowAlloc(22, -1);
    v59 = swift_slowAlloc(32, -1);
    v72 = v59;
    *(_DWORD *)v53 = 136315394;
    v62 = v47;
    v63 = v48;
    *(_QWORD *)&v64 = v49;
    sub_5B864(v47, v48, v49);
    v54 = sub_319AC((uint64_t *)&unk_3BC050);
    v55 = String.init<A>(describing:)(&v62, v54);
    v57 = v56;
    v62 = sub_33524(v55, v56, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v53 + 4);
    swift_bridgeObjectRelease(v57);
    sub_5B838(v47, v48, v49);
    sub_5B838(v47, v48, v49);
    *(_WORD *)(v53 + 12) = 2048;
    v62 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63, v53 + 14);
    _os_log_impl(&dword_0, v51, v52, "Current #spread %s at time of calculating numberOfControllersNeeded:%ld", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    v58 = v53;
    a2 = v60;
    swift_slowDealloc(v58, -1, -1);

  }
  else
  {

    sub_5B838(v47, v48, v49);
    sub_5B838(v47, v48, v49);
  }
  sub_1CC080(v34, v61, a2);
}

void sub_1CBA68(uint64_t *a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, double a4@<D1>, CGFloat a5@<D2>, double a6@<D3>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  void (*v24)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double (*v57)(uint64_t, uint64_t, __n128);
  __n128 v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t, __n128);
  __n128 v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  _BYTE v83[24];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD v91[2];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _OWORD v99[2];
  _QWORD v100[3];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103[7];

  v7 = v6;
  v82 = *a1;
  CurrentValueSubject.value.getter(&v92);
  v12 = v92;
  v13 = *((_QWORD *)&v93 + 1);
  swift_unknownObjectRelease(*((_QWORD *)&v92 + 1));
  swift_unknownObjectRelease(v13);
  v14 = *(_QWORD *)(v12 + 16);
  swift_bridgeObjectRelease(v12);
  v15 = a4;
  v16 = a3;
  if (v14)
  {
    CurrentValueSubject.value.getter(v103);
    v17 = v103[0];
    v18 = v103[3];
    swift_unknownObjectRelease(v103[1]);
    swift_unknownObjectRelease(v18);
    v19 = *(_QWORD *)(v17 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain(v17);
      v79 = v17;
      v20 = (uint64_t *)(v17 + 40);
      v15 = 0.0;
      v16 = 0.0;
      while (1)
      {
        v22 = *(v20 - 1);
        v21 = *v20;
        ObjectType = swift_getObjectType(v22);
        v24 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v21 + 40);
        v25 = swift_unknownObjectRetain(v22);
        v24(&v92, ObjectType, v21, v25);
        if (*((_QWORD *)&v93 + 1))
          break;
        sub_52128((uint64_t)&v92, &qword_3B8990);
        swift_unknownObjectRelease(v22);
        v15 = a3;
        v16 = a4;
LABEL_5:
        v20 += 2;
        if (!--v19)
        {
          v17 = v79;
          swift_bridgeObjectRelease(v79);
          goto LABEL_22;
        }
      }
      sub_3F1CC(&v92, (uint64_t)v100);
      v26 = *(_QWORD *)(v7 + 56);
      v27 = swift_getObjectType(*(_QWORD *)(v7 + 48));
      v28 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v27, v26) + 104);
      if (*(_QWORD *)(v28 + 16) && (v29 = sub_3B7F8(v82), (v30 & 1) != 0))
      {
        v31 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * v29);
        swift_retain();
        swift_release();
        v32 = v101;
        v33 = v102;
        sub_472D0(v100, v101);
        v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 56))(v32, v33);
        v35 = (uint64_t *)(v31 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
        swift_beginAccess(v31 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v83, 0, 0);
        v36 = *v35;
        swift_release();
        if (v36 <= v34)
          v36 = v34;
      }
      else
      {
        swift_release();
        v37 = v101;
        v38 = v102;
        sub_472D0(v100, v101);
        v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 56))(v37, v38);
      }
      v39 = v101;
      v40 = v102;
      sub_472D0(v100, v101);
      v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 40))(v39, v40);
      if (v41 == v82)
      {
        v42 = *(_QWORD *)(v7 + 24);
        v43 = swift_getObjectType(*(_QWORD *)(v7 + 16));
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v42 + 16))(&v84, v43, v42);
        v97 = v89;
        v98 = v90;
        v99[0] = v91[0];
        *(_OWORD *)((char *)v99 + 10) = *(_OWORD *)((char *)v91 + 10);
        v94 = v86;
        v95 = v87;
        v96 = v88;
        v92 = v84;
        v93 = v85;
        sub_49900((uint64_t)&v92);
        if (__OFSUB__(v36, *((_QWORD *)&v92 + 1)))
        {
          __break(1u);
          return;
        }
        v44 = (double)(v36 - *((_QWORD *)&v92 + 1));
      }
      else
      {
        v45 = a3;
        v46 = a4;
        if (v82 >= v41)
        {
LABEL_19:
          v16 = v16 + v45;
          v15 = v15 + v46;
          sub_34488(v100);
          swift_unknownObjectRelease(v22);
          goto LABEL_5;
        }
        v44 = (double)v36;
      }
      v46 = v44 * a4;
      v45 = v44 * a3;
      goto LABEL_19;
    }
    v16 = 0.0;
    v15 = 0.0;
LABEL_22:
    swift_bridgeObjectRelease(v17);
  }
  v47 = *(_QWORD *)(v7 + 296);
  v48 = *(_BYTE *)(v7 + 304);
  v49 = *(_BYTE *)(v7 + 305);
  v92 = *(_OWORD *)(v7 + 280);
  *(_QWORD *)&v93 = v47;
  BYTE8(v93) = v48;
  BYTE9(v93) = v49;
  v50 = *(_QWORD *)(v7 + 320);
  v51 = swift_bridgeObjectRetain(v50);
  PreloadConfiguration.sorted(loaders:currentDocumentOrdinal:)(v51, v82);
  v53 = v52;
  swift_bridgeObjectRelease(v50);
  swift_beginAccess(v7 + 112, &v92, 0, 0);
  v54 = *(_QWORD *)(v7 + 112);
  v55 = *(_QWORD *)(v7 + 120);
  v56 = swift_getObjectType(v54);
  v57 = *(double (**)(uint64_t, uint64_t, __n128))(v55 + 64);
  v58 = swift_unknownObjectRetain(v54);
  v59 = v57(v56, v55, v58);
  swift_unknownObjectRelease(v54);
  v60 = *(_QWORD *)(v7 + 112);
  v61 = *(_QWORD *)(v7 + 120);
  v62 = swift_getObjectType(v60);
  v63 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v61 + 24);
  v64 = swift_unknownObjectRetain(v60);
  v65 = v63(v62, v61, v64);
  swift_unknownObjectRelease(v60);
  v66 = sub_1CC490(v65, v53, a5, a6, a3, a4, v59, v16, v15);
  swift_bridgeObjectRelease(v53);
  v67 = *(_QWORD *)(v7 + 24);
  v68 = swift_getObjectType(*(_QWORD *)(v7 + 16));
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v67 + 40))(&v84, v68, v67);
  v69 = v84;
  v70 = v85;
  v71 = sub_5B864(v84, *((uint64_t *)&v84 + 1), v85);
  v72 = Logger.logObject.getter(v71);
  v73 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v72, v73))
  {
    v74 = swift_slowAlloc(22, -1);
    v80 = swift_slowAlloc(32, -1);
    v103[0] = v80;
    *(_DWORD *)v74 = 136315394;
    v84 = v69;
    *(_QWORD *)&v85 = v70;
    sub_5B864(v69, *((uint64_t *)&v69 + 1), v70);
    v75 = sub_319AC((uint64_t *)&unk_3BC050);
    v76 = String.init<A>(describing:)(&v84, v75);
    v78 = v77;
    *(_QWORD *)&v84 = sub_33524(v76, v77, v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, (char *)&v84 + 8, v74 + 4);
    swift_bridgeObjectRelease(v78);
    sub_5B838(v69, *((uint64_t *)&v69 + 1), v70);
    sub_5B838(v69, *((uint64_t *)&v69 + 1), v70);
    *(_WORD *)(v74 + 12) = 2048;
    *(_QWORD *)&v84 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, (char *)&v84 + 8, v74 + 14);
    _os_log_impl(&dword_0, v72, v73, "Current #spread %s at time of calculating numberOfControllersNeeded:%ld", (uint8_t *)v74, 0x16u);
    swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1, -1);
    swift_slowDealloc(v74, -1, -1);

  }
  else
  {

    sub_5B838(v69, *((uint64_t *)&v69 + 1), v70);
    sub_5B838(v69, *((uint64_t *)&v69 + 1), v70);
  }
  sub_1CC080(v66, v82, a2);
}

__n128 sub_1CC080@<Q0>(int64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(__int128 *__return_ptr, uint64_t, unint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  __n128 result;
  uint64_t v46;
  __n128 v47;
  __n128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;

  v4 = a2;
  v5 = a3;
  v6 = (__int128 *)(v3 + 280);
  *(_QWORD *)(v3 + 296) = a1;
  v7 = *(_QWORD *)(v3 + 320);
  v8 = _swiftEmptyArrayStorage;
  v52 = _swiftEmptyArrayStorage;
  v9 = *(_QWORD *)(v7 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain(v7);
    for (i = 0; i != v9; ++i)
    {
      v47 = *(__n128 *)(v7 + 16 * i + 32);
      v11 = *(_QWORD *)(v7 + 16 * i + 32);
      ObjectType = swift_getObjectType(v11);
      v13 = *(void (**)(__int128 *__return_ptr, uint64_t, unint64_t, __n128))(v47.n128_u64[1] + 40);
      v14 = swift_unknownObjectRetain(v11);
      v13(&v49, ObjectType, v47.n128_u64[1], v14);
      v15 = v51;
      sub_52128((uint64_t)&v49, &qword_3B8990);
      if (v15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
          sub_F51F0(0, v8[2] + 1, 1);
        v8 = v52;
        v17 = v52[2];
        v16 = v52[3];
        if (v17 >= v16 >> 1)
        {
          sub_F51F0(v16 > 1, v17 + 1, 1);
          v8 = v52;
        }
        v8[2] = v17 + 1;
        *(__n128 *)&v8[2 * v17 + 4] = v47;
      }
      else
      {
        swift_unknownObjectRelease(v11);
      }
    }
    swift_bridgeObjectRelease(v7);
    v18 = a1;
    v19 = v46;
    v20 = *(_QWORD *)(v46 + 296);
    v4 = a2;
    v5 = a3;
  }
  else
  {
    v19 = v3;
    v18 = a1;
    v20 = a1;
  }
  if (v8[2] >= v18)
    v21 = v18;
  else
    v21 = v8[2];
  v22 = *(_BYTE *)(v19 + 304);
  v23 = *((_BYTE *)v6 + 25);
  v49 = *v6;
  v50 = v20;
  LOBYTE(v51) = v22;
  BYTE1(v51) = v23;
  PreloadConfiguration.sorted(loaders:currentDocumentOrdinal:)((uint64_t)v8, v4);
  v25 = v24;
  swift_release();
  if ((v21 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (*(_QWORD *)(v25 + 16) < v21)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRelease(v25);
    v31 = sub_F4D88(v25, v7, 0, (2 * v21) | 1);
    goto LABEL_23;
  }
  v7 = v25 + 32;
  v26 = type metadata accessor for __ContiguousArrayStorageBase(0);
  v27 = swift_bridgeObjectRetain(v25);
  v28 = swift_unknownObjectRetain_n(v27, 2);
  v29 = (_QWORD *)swift_dynamicCastClass(v28, v26);
  if (!v29)
  {
    swift_bridgeObjectRelease(v25);
    v29 = _swiftEmptyArrayStorage;
  }
  v30 = v29[2];
  swift_release();
  if (v30 != v21)
    goto LABEL_37;
  v31 = (_QWORD *)swift_dynamicCastClass(v25, v26);
  if (!v31)
  {
    swift_bridgeObjectRelease(v25);
    v31 = _swiftEmptyArrayStorage;
  }
LABEL_23:
  swift_bridgeObjectRelease(v25);
  *(_QWORD *)&v49 = v31;
  swift_retain();
  sub_1C2E4C((uint64_t *)&v49, (uint64_t (*)(uint64_t))sub_1D3548, (uint64_t (*)(_QWORD *))sub_1D1EF0);
  swift_release();
  v32 = v49;
  v33 = *(_QWORD *)(v25 + 16);
  if (v21 >= v33)
  {
    v36 = 0;
    v37 = 0;
    v48 = 0u;
  }
  else
  {
    v48 = *(__n128 *)(v7 + 16 * v21);
    v34 = *(_QWORD *)(v7 + 16 * v21);
    if (v4 < 1 || v21 + 1 >= v33)
    {
      v36 = 0;
      v37 = 0;
    }
    else
    {
      v35 = (uint64_t *)(v7 + 16 * (v21 + 1));
      v36 = *v35;
      v37 = v35[1];
      swift_unknownObjectRetain(v34);
      v34 = v36;
    }
    swift_unknownObjectRetain(v34);
  }
  swift_bridgeObjectRelease(v25);
  if (!*(_QWORD *)(v32 + 16))
  {
    v39 = Logger.logObject.getter(v38);
    v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc(22, -1);
      *(_DWORD *)v41 = 134218240;
      *(_QWORD *)&v49 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 8, v41 + 4);
      *(_WORD *)(v41 + 12) = 2048;
      *(_QWORD *)&v49 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, (char *)&v49 + 8, v41 + 14);
      _os_log_impl(&dword_0, v39, v40, "Requested loaders empty for number of controllers: %ld around ordinal: %ld", (uint8_t *)v41, 0x16u);
      swift_slowDealloc(v41, -1, -1);
    }

  }
  *(_QWORD *)v5 = v32;
  *(_QWORD *)(v5 + 8) = v36;
  *(_QWORD *)(v5 + 16) = v37;
  result = v48;
  *(__n128 *)(v5 + 24) = v48;
  return result;
}

uint64_t sub_1CC490(uint64_t a1, uint64_t a2, CGFloat a3, double a4, CGFloat a5, double a6, double a7, CGFloat a8, CGFloat a9)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t (**v29)();
  _BOOL4 v30;
  uint64_t (**v31)();
  int v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjectType;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v48;
  double v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, __n128);
  __n128 v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _BYTE v75[24];
  _BYTE v76[24];
  double v77[3];
  CGFloat v78;
  _QWORD v79[2];
  _QWORD v80[2];
  CGSize v81;
  CGSize v82;

  v20 = (_QWORD *)type metadata accessor for Logger(0);
  v71 = *(v20 - 1);
  __chkstk_darwin(v20);
  v73 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82.width = 0.0;
  v82.height = 0.0;
  v81.width = a8;
  v81.height = a9;
  if (CGSizeEqualToSize(v81, v82))
  {
    v80[0] = 0;
    swift_bridgeObjectRetain(a2);
    v22 = 0;
  }
  else
  {
    v22 = 1;
    v80[0] = 1;
    v23 = a2;
    v24 = *(_QWORD *)(a2 + 16);
    a2 = v24 != 0;
    v25 = type metadata accessor for __ContiguousArrayStorageBase(0);
    v26 = swift_bridgeObjectRetain(v23);
    v27 = swift_unknownObjectRetain_n(v26, 2);
    v10 = v23;
    v28 = (_QWORD *)swift_dynamicCastClass(v27, v25);
    if (!v28)
    {
      swift_bridgeObjectRelease(v23);
      v28 = _swiftEmptyArrayStorage;
    }
    v9 = v28[2];
    swift_release();
    if (v9 != v24 - a2)
      goto LABEL_71;
    a2 = swift_dynamicCastClass(v10, v25);
    swift_bridgeObjectRelease(v10);
    if (!a2)
    {
      swift_bridgeObjectRelease(v10);
      a2 = (uint64_t)_swiftEmptyArrayStorage;
    }
LABEL_8:
    v22 = 1;
  }
  v29 = (uint64_t (**)())&unk_2F26A0;
  if ((a1 | 2) == 3)
  {
    v29 = &off_2F26C0;
    v30 = a1 != 1;
  }
  else
  {
    v30 = 0;
  }
  if (a1 == 2)
    v31 = (uint64_t (**)())&unk_2F26A0;
  else
    v31 = v29;
  v32 = a1 == 2 || v30;
  KeyPath = swift_getKeyPath(v31);
  v78 = a5;
  *(double *)v79 = a6;
  swift_getAtKeyPath(v77, &v78, KeyPath);
  a6 = v77[0];
  v78 = a3;
  *(double *)v79 = a4;
  swift_getAtKeyPath(v77, &v78, KeyPath);
  a4 = v77[0];
  v78 = a8;
  *(CGFloat *)v79 = a9;
  swift_getAtKeyPath(v77, &v78, KeyPath);
  a9 = v77[0];
  if (v77[0] >= a4 || a6 == 0.0)
  {
    swift_bridgeObjectRelease(a2);
    swift_release();
    if (v32)
      return v22 | 2;
    else
      return v22;
  }
  v70 = v32;
  v24 = *(_QWORD *)(a2 + 16);
  if (!v24)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_39;
  }
  v74 = KeyPath;
  v69 = v20;
  v67 = v24 + v22;
  v34 = v22 ^ 0x7FFFFFFFFFFFFFFFLL;
  v68 = a2;
  v20 = (_QWORD *)(a2 + 40);
  ++v22;
  while (1)
  {
    v10 = *(v20 - 1);
    v35 = *v20;
    ObjectType = swift_getObjectType(v10);
    v9 = *(_QWORD *)(v35 + 72);
    v37 = swift_unknownObjectRetain(v10);
    a2 = v10;
    if ((((uint64_t (*)(uint64_t, uint64_t, __n128))v9)(ObjectType, v35, v37) & 1) == 0)
      goto LABEL_27;
    a2 = v10;
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 48))(ObjectType, v35);
    if (!v38
      || (a2 = v38,
          v40 = v39,
          v41 = swift_getObjectType(v38),
          v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 64))(v41, v40),
          v44 = v43,
          v9 = v45,
          (id)a2,
          (v9 & 1) != 0))
    {
LABEL_27:
      swift_unknownObjectRelease(v10);
      v46 = a6;
      if (a1 != 1)
        goto LABEL_29;
LABEL_28:
      v46 = v46 + v46 / a6 * a7;
      goto LABEL_29;
    }
    v78 = *(double *)&v42;
    v79[0] = v44;
    swift_getAtKeyPath(v77, &v78, v74);
    swift_unknownObjectRelease(v10);
    v46 = v77[0];
    if (a1 == 1)
      goto LABEL_28;
LABEL_29:
    if (!v34)
      goto LABEL_70;
    a9 = a9 + v46;
    if (a4 <= a9)
      break;
    --v34;
    v20 += 2;
    ++v22;
    if (!--v24)
    {
      swift_bridgeObjectRelease(v68);
      v22 = v67;
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRelease(v68);
LABEL_38:
  v80[0] = v22;
  v20 = v69;
LABEL_39:
  if (a9 == 0.0)
  {
    v22 = 0;
    v80[0] = 0;
  }
  if (a9 < a4)
  {
    while (1)
    {
      v48 = v22 + 1;
      if (__OFADD__(v22, 1))
        break;
      a9 = a6 + a9;
      ++v22;
      if (a9 >= a4)
      {
        v80[0] = v48;
        v22 = v48;
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    swift_bridgeObjectRelease(v10);
    a2 = (uint64_t)sub_F4D88(v10, v10 + 32, a2, v22 | (2 * v24));
    swift_bridgeObjectRelease(v10);
    goto LABEL_8;
  }
LABEL_45:
  if (v70)
  {
    v49 = (a4 + a4) / a6;
    if ((~*(_QWORD *)&v49 & 0x7FF0000000000000) != 0)
    {
      if (v49 > -9.22337204e18)
      {
        if (v49 < 9.22337204e18)
        {
          v50 = (uint64_t)v49;
          if ((uint64_t)v49 <= 2)
            v50 = 2;
          v51 = __OFADD__(v22, v50);
          v52 = v22 + v50;
          if (!v51)
          {
            v80[0] = v52;
            goto LABEL_53;
          }
LABEL_75:
          __break(1u);
LABEL_76:
          swift_once(&qword_3B5698, sub_52378);
LABEL_61:
          v59 = Logger.init(_:)((id)qword_3CEEF0);
          v60 = Logger.logObject.getter(v59);
          v61 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = v20;
            v63 = swift_slowAlloc(22, -1);
            *(_DWORD *)v63 = 134218240;
            swift_beginAccess(v80, v75, 0, 0);
            v78 = *(double *)v80;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79, v63 + 4);
            *(_WORD *)(v63 + 12) = 2048;
            v78 = *(double *)&v9;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v79, v63 + 14);
            _os_log_impl(&dword_0, v60, v61, "Calculated needing %ld controllers in paged layout. Clamping to max count %ld", (uint8_t *)v63, 0x16u);
            v64 = v63;
            v20 = v62;
            swift_slowDealloc(v64, -1, -1);
          }

          v65 = swift_release();
          (*(void (**)(char *, _QWORD *, __n128))(v71 + 8))(v73, v20, v65);
          goto LABEL_65;
        }
LABEL_74:
        __break(1u);
        goto LABEL_75;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_74;
  }
LABEL_53:
  if (a1 == 1)
  {
    v53 = v72;
    if (sub_1C3B4C() || (sub_1C3CB4() & 1) != 0)
    {
      v9 = 1;
    }
    else
    {
      swift_beginAccess(v53 + 112, v77, 0, 0);
      v54 = *(_QWORD *)(v53 + 112);
      v55 = *(_QWORD *)(v53 + 120);
      v56 = swift_getObjectType(v54);
      v57 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v55 + 120);
      v58 = swift_unknownObjectRetain(v54);
      v9 = v57(v56, v55, v58);
      swift_unknownObjectRelease(v54);
    }
    if (v9 < v80[0])
    {
      if (qword_3B5698 != -1)
        goto LABEL_76;
      goto LABEL_61;
    }
    swift_release();
LABEL_65:
    swift_beginAccess(v80, v76, 1, 0);
    v66 = v80[0];
    if (v9 < v80[0])
      v66 = v9;
    v80[0] = v66;
  }
  else
  {
    swift_release();
  }
  swift_beginAccess(v80, &v78, 0, 0);
  return v80[0];
}

void sub_1CCB4C(unint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t (*v30)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *oslog;
  char v37[24];

  if ((a2 & 1) != 0)
  {
    v3 = (_QWORD *)v2[40];
    v5 = v3[2];
    goto LABEL_9;
  }
  v6 = v2[35];
  v7 = v2[37];
  v8 = __OFADD__(v7, v6);
  v9 = v7 + v6;
  if (v8)
  {
    __break(1u);
    goto LABEL_28;
  }
  v10 = v2[36];
  v8 = __OFADD__(v9, v10);
  v11 = v9 + v10;
  if (v8)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v3 = (_QWORD *)v2[40];
  v5 = v3[2];
  if (v11 == v5)
  {
    oslog = Logger.logObject.getter(a1);
    v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_0, oslog, v12, "no need to adjust Content Controllers, we already have the needed amount", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

    return;
  }
LABEL_9:
  if ((uint64_t)v5 > (uint64_t)a1)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      v14 = type metadata accessor for __ContiguousArrayStorageBase(0);
      v15 = swift_bridgeObjectRetain(v3);
      v16 = swift_unknownObjectRetain_n(v15, 2);
      v17 = (_QWORD *)swift_dynamicCastClass(v16, v14);
      if (!v17)
      {
        swift_bridgeObjectRelease(v3);
        v17 = _swiftEmptyArrayStorage;
      }
      v18 = v17[2];
      swift_release();
      if (v18 == a1)
      {
        v19 = (_QWORD *)swift_dynamicCastClass(v3, v14);
        if (!v19)
        {
          swift_bridgeObjectRelease(v3);
          v19 = _swiftEmptyArrayStorage;
        }
        goto LABEL_16;
      }
LABEL_30:
      swift_bridgeObjectRelease(v3);
      v19 = sub_F4D88((uint64_t)v3, (uint64_t)(v3 + 4), 0, (2 * a1) | 1);
LABEL_16:
      swift_bridgeObjectRelease(v3);
      sub_1C74DC((uint64_t)v19);
      return;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v5 >= a1)
  {
    swift_bridgeObjectRetain(v3);
  }
  else
  {
    v20 = v2[22];
    v35 = v2[6];
    v33 = v2[33];
    v34 = v2[7];
    v30 = *(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 152);
    v31 = v2[34];
    swift_bridgeObjectRetain(v3);
    swift_beginAccess(v2 + 14, v37, 0, 0);
    v32 = v2;
    do
    {
      v21 = v2[14];
      v22 = v2[15];
      v23 = (void *)v2[39];
      swift_unknownObjectRetain(v21);
      v24 = v23;
      swift_unknownObjectRetain(v35);
      swift_retain();
      swift_retain();
      v25 = v30(v21, v22, v23, v35, v34, v33, v31);
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        v3 = sub_43188(0, v3[2] + 1, 1, v3);
      v27 = v3[2];
      v26 = v3[3];
      v28 = v27 + 1;
      if (v27 >= v26 >> 1)
        v3 = sub_43188((_QWORD *)(v26 > 1), v27 + 1, 1, v3);
      v3[2] = v28;
      v29 = &v3[2 * v27];
      v29[4] = v25;
      v29[5] = v20;
      v2 = v32;
    }
    while (v28 < a1);
  }
  sub_1C74DC((uint64_t)v3);
}

void sub_1CCE94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t ObjectType;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  void (*v84)(uint64_t *, _QWORD, __n128);
  uint64_t v85;
  __n128 v86;
  __n128 v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  _BYTE v98[24];
  uint64_t v99;
  _BYTE v100[24];
  uint64_t v101[5];
  _BYTE v102[32];
  _QWORD *v103;
  _QWORD *v104;

  v2 = v1;
  v4 = swift_bridgeObjectRetain_n(a1, 2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    v101[0] = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = Array.debugDescription.getter(a1, &type metadata for Int);
    v11 = v10;
    v99 = sub_33524(v9, v10, v101);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v7 + 4);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v11);
    _os_log_impl(&dword_0, v5, v6, "loading documents in range %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a1, 2);
  }

  v103 = _swiftEmptyArrayStorage;
  v104 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(a1);
  v12 = swift_retain();
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(22, -1);
    *(_DWORD *)v15 = 134218240;
    v101[0] = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, &v101[1], v15 + 4);
    swift_bridgeObjectRelease(a1);
    *(_WORD *)(v15 + 12) = 2048;
    v101[0] = *(_QWORD *)(*(_QWORD *)(v2 + 320) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, &v101[1], v15 + 14);
    swift_release();
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease(a1);
  }

  v16 = *(_QWORD *)(a1 + 16);
  sub_1CCB4C(v16, 0);
  v17 = *(_QWORD *)(v2 + 320);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 320));
    v19 = 0;
    do
    {
      v20 = v17 + 16 * v19++;
      *(_OWORD *)v101 = *(_OWORD *)(v20 + 32);
      v21 = v101[0];
      swift_unknownObjectRetain(v101[0]);
      sub_1CDAB8(v101, a1, v2, &v104, (uint64_t *)&v103);
      swift_unknownObjectRelease(v21);
    }
    while (v18 != v19);
    swift_bridgeObjectRelease(v17);
  }
  v96 = (_QWORD *)v2;
  swift_bridgeObjectRetain(a1);
  v94 = a1;
  if (v16)
  {
    v22 = 0;
    v23 = a1 + 32;
    v24 = _swiftEmptyArrayStorage;
    v25 = v104;
    while (2)
    {
      if (v22 <= v16)
        v26 = v16;
      else
        v26 = v22;
      while (1)
      {
        if (v22 == v26)
          goto LABEL_65;
        v27 = *(_QWORD *)(v23 + 8 * v22++);
        v28 = v25[2];
        if (!v28)
          goto LABEL_25;
        if (v25[4] != v27)
          break;
LABEL_16:
        if (v22 == v16)
          goto LABEL_32;
      }
      if (v28 != 1)
      {
        v29 = 5;
        while (1)
        {
          v30 = v29 - 3;
          if (__OFADD__(v29 - 4, 1))
            break;
          if (v25[v29] == v27)
            goto LABEL_16;
          ++v29;
          if (v30 == v28)
            goto LABEL_25;
        }
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        return;
      }
LABEL_25:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v24);
      v101[0] = (uint64_t)v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_F5114(0, v24[2] + 1, 1);
        v24 = (_QWORD *)v101[0];
      }
      v33 = v24[2];
      v32 = v24[3];
      if (v33 >= v32 >> 1)
      {
        sub_F5114(v32 > 1, v33 + 1, 1);
        v24 = (_QWORD *)v101[0];
      }
      v24[2] = v33 + 1;
      v24[v33 + 4] = v27;
      if (v22 != v16)
        continue;
      break;
    }
  }
  else
  {
    v24 = _swiftEmptyArrayStorage;
  }
LABEL_32:
  swift_bridgeObjectRelease(v94);
  v34 = v96;
  v35 = v96[31];
  v36 = v96[32];
  sub_472D0(v96 + 28, v35);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 64))(v35, v36);
  swift_retain();
  v97 = sub_134698(v37, (uint64_t)v24);
  swift_bridgeObjectRelease(v37);
  swift_release();
  v38 = swift_bridgeObjectRetain_n(v24, 2);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(12, -1);
    v42 = swift_slowAlloc(32, -1);
    v101[0] = v42;
    *(_DWORD *)v41 = 136315138;
    v43 = swift_bridgeObjectRetain(v24);
    v44 = Array.description.getter(v43, &type metadata for Int);
    v46 = v45;
    swift_release();
    v99 = sub_33524(v44, v46, v101);
    v34 = v96;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v41 + 4);
    swift_release_n(v24);
    swift_bridgeObjectRelease(v46);
    _os_log_impl(&dword_0, v39, v40, "Requesting load for ordinals: %s", v41, 0xCu);
    swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v41, -1, -1);
  }
  else
  {
    swift_release_n(v24);
  }

  v47 = v24[2];
  if (v97[2])
  {
    swift_release();
    if (v47)
    {
      v48 = v103;
      v49 = v97[2];
      v95 = v49;
      if (v103[2] < v49)
      {
        swift_bridgeObjectRetain(v94);
        swift_retain();
        v50 = swift_bridgeObjectRetain(v97);
        v51 = Logger.logObject.getter(v50);
        v52 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v51, v52))
        {
          v53 = swift_slowAlloc(42, -1);
          *(_DWORD *)v53 = 134218752;
          v101[0] = v95;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, &v101[1], v53 + 4);
          swift_bridgeObjectRelease(v97);
          *(_WORD *)(v53 + 12) = 2048;
          v101[0] = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, &v101[1], v53 + 14);
          swift_bridgeObjectRelease(v94);
          *(_WORD *)(v53 + 22) = 2048;
          swift_beginAccess(&v103, v98, 0, 0);
          v54 = v103;
          v101[0] = v103[2];
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, &v101[1], v53 + 24);
          *(_WORD *)(v53 + 32) = 2048;
          v101[0] = *(_QWORD *)(v34[40] + 16);
          v48 = v54;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, &v101[1], v53 + 34);
          swift_release();
          _os_log_impl(&dword_0, v51, v52, "Attempting to load an additional %ld (%ld total documents) when we only have %ld loaders available (%ld total loaders) for loading new content.", (uint8_t *)v53, 0x2Au);
          v55 = v53;
          v49 = v95;
          swift_slowDealloc(v55, -1, -1);
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease(v94);
          swift_bridgeObjectRelease(v97);
        }

      }
      if (v48[2])
      {
        v73 = v48[2];
        swift_bridgeObjectRetain(v48);
        swift_beginAccess(&v103, v102, 0, 0);
        v74 = 0;
        v75 = (uint64_t)(v97 + 4);
        v93 = v48;
        v76 = v48 + 5;
        do
        {
          v77 = *(v76 - 1);
          if (v74 >= v49)
          {
            swift_unknownObjectRetain(*(v76 - 1));
            v89 = Logger.logObject.getter(v88);
            v90 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v89, v90))
            {
              v91 = swift_slowAlloc(22, -1);
              *(_DWORD *)v91 = 134218240;
              *(_QWORD *)(v91 + 4) = v74;
              *(_WORD *)(v91 + 12) = 2048;
              *(_QWORD *)(v91 + 14) = v103[2];
              _os_log_impl(&dword_0, v89, v90, "ContentLayoutController.loadDocuments -- We have more loadersToReuse than needed. Loader index: %ld is not needed when we calculated %ld items available to be reused", (uint8_t *)v91, 0x16u);
              swift_slowDealloc(v91, -1, -1);
            }
            swift_unknownObjectRelease(v77);

          }
          else
          {
            if (v74 >= v97[2])
              goto LABEL_66;
            v78 = *v76;
            sub_49F1C(v75, (uint64_t)v101);
            swift_unknownObjectRetain(v77);
            sub_1CDF4C(v101, v77, v78);
            ObjectType = swift_getObjectType(v77);
            v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 80))(ObjectType, v78);
            v80 = swift_allocObject(&unk_387DB0, 24, 7);
            swift_weakInit(v80 + 16, v34);
            v81 = sub_319AC((uint64_t *)&unk_3BCEC0);
            v82 = sub_3DCC0((unint64_t *)&unk_3BE700, (uint64_t *)&unk_3BCEC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
            Publisher<>.sink(receiveValue:)(sub_1D553C, v80, v81, v82);
            v49 = v95;
            swift_release();
            v83 = swift_release();
            v84 = (void (*)(uint64_t *, _QWORD, __n128))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, __n128))(v78 + 112))(&v99, ObjectType, v78, v83);
            AnyCancellable.store(in:)(v85, v86);
            v34 = v96;
            v87 = swift_release();
            v84(&v99, 0, v87);
            swift_unknownObjectRelease(v77);
            sub_34488(v101);
          }
          ++v74;
          v76 += 2;
          v75 += 40;
        }
        while (v73 != v74);
        swift_bridgeObjectRelease(v97);
        v92 = v93;
      }
      else
      {
        v92 = v97;
      }
      swift_bridgeObjectRelease(v92);
      goto LABEL_63;
    }
  }
  else
  {
    if (v47)
    {
      swift_retain_n(v24, 2);
      v56 = swift_bridgeObjectRetain_n(v97, 2);
      v57 = Logger.logObject.getter(v56);
      v58 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = swift_slowAlloc(22, -1);
        v60 = swift_slowAlloc(64, -1);
        v101[0] = v60;
        *(_DWORD *)v59 = 136315394;
        swift_bridgeObjectRetain(v97);
        v61 = sub_319AC((uint64_t *)&unk_3BBDF0);
        v62 = Array.description.getter(v97, v61);
        v64 = v63;
        swift_bridgeObjectRelease(v97);
        v99 = sub_33524(v62, v64, v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v59 + 4);
        swift_bridgeObjectRelease_n(v97, 2);
        swift_bridgeObjectRelease(v64);
        *(_WORD *)(v59 + 12) = 2080;
        v65 = swift_bridgeObjectRetain(v24);
        v66 = Array.description.getter(v65, &type metadata for Int);
        v68 = v67;
        swift_release();
        v99 = sub_33524(v66, v68, v101);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v99, v100, v59 + 14);
        swift_release_n(v24);
        swift_bridgeObjectRelease(v68);
        _os_log_impl(&dword_0, v57, v58, "Mismatch between documents to load - documentsToLoad: %s ordinalsToLoad: %s", (uint8_t *)v59, 0x16u);
        swift_arrayDestroy(v60, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v60, -1, -1);
        swift_slowDealloc(v59, -1, -1);
      }
      else
      {
        swift_release_n(v24);
        swift_bridgeObjectRelease_n(v97, 2);
      }

    }
    swift_release();
  }
  swift_bridgeObjectRelease(v97);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v72 = 0;
    _os_log_impl(&dword_0, v70, v71, "No ordinals or documents to load", v72, 2u);
    swift_slowDealloc(v72, -1, -1);
  }

LABEL_63:
  swift_bridgeObjectRelease(v103);
  swift_bridgeObjectRelease(v104);
}

uint64_t sub_1CDAB8(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t *__return_ptr, uint64_t, _QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[16];
  uint64_t v49;
  uint64_t v50;

  v43 = *(_OWORD *)a1;
  v7 = *a1;
  ObjectType = swift_getObjectType(*a1);
  v9 = *(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*((_QWORD *)&v43 + 1) + 40);
  v9(&v47, ObjectType, *((_QWORD *)&v43 + 1));
  v10 = v49;
  sub_52128((uint64_t)&v47, &qword_3B8990);
  v9((uint64_t *)&v44, ObjectType, *((_QWORD *)&v43 + 1));
  if (v45)
  {
    sub_3F1CC(&v44, (uint64_t)&v47);
    v12 = v49;
    v11 = v50;
    sub_472D0(&v47, v49);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v12, v11);
    if ((sub_6CE80(v13, a2) & 1) != 0)
    {
      v14 = sub_49F1C((uint64_t)&v47, (uint64_t)&v44);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v17 = 134217984;
        v18 = v45;
        v19 = v46;
        sub_472D0(&v44, v45);
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19);
        sub_34488(&v44);
        *(_QWORD *)&v44 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 8, v17 + 4);
        _os_log_impl(&dword_0, v15, v16, "Content Loader is already configured for document ordinal %ld", v17, 0xCu);
        swift_slowDealloc(v17, -1, -1);
      }
      else
      {
        sub_34488(&v44);
      }

      v35 = v49;
      v36 = v50;
      sub_472D0(&v47, v49);
      v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
      v38 = (_QWORD *)*a4;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a4);
      *a4 = v38;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v38 = sub_42AAC(0, v38[2] + 1, 1, v38);
        *a4 = v38;
      }
      v41 = v38[2];
      v40 = v38[3];
      if (v41 >= v40 >> 1)
        v38 = sub_42AAC((_QWORD *)(v40 > 1), v41 + 1, 1, v38);
      v38[2] = v41 + 1;
      v38[v41 + 4] = v37;
      *a4 = v38;
      return sub_34488(&v47);
    }
    sub_34488(&v47);
  }
  else
  {
    result = sub_52128((uint64_t)&v44, &qword_3B8990);
    if (v10)
      return result;
  }
  v22 = swift_unknownObjectRetain_n(v7, 2);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v44 = v26;
    *(_DWORD *)v25 = 136315138;
    v47 = (*(uint64_t (**)(uint64_t, _QWORD))(*((_QWORD *)&v43 + 1) + 24))(ObjectType, *((_QWORD *)&v43 + 1));
    v48[0] = v27 & 1;
    v28 = sub_319AC((uint64_t *)&unk_3BE7E0);
    v29 = String.init<A>(describing:)(&v47, v28);
    v31 = v30;
    v47 = sub_33524(v29, v30, (uint64_t *)&v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v25 + 4);
    swift_unknownObjectRelease_n(v7, 2);
    swift_bridgeObjectRelease(v31);
    _os_log_impl(&dword_0, v23, v24, "Loader for ordinal %s is available for reuse", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n(v7, 2);
  }

  v32 = (_QWORD *)*a5;
  swift_unknownObjectRetain(v7);
  result = swift_isUniquelyReferenced_nonNull_native(v32);
  *a5 = (uint64_t)v32;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_43188(0, v32[2] + 1, 1, v32);
    v32 = (_QWORD *)result;
    *a5 = result;
  }
  v34 = v32[2];
  v33 = v32[3];
  if (v34 >= v33 >> 1)
  {
    result = (uint64_t)sub_43188((_QWORD *)(v33 > 1), v34 + 1, 1, v32);
    v32 = (_QWORD *)result;
    *a5 = result;
  }
  v32[2] = v34 + 1;
  *(_OWORD *)&v32[2 * v34 + 4] = v43;
  return result;
}

uint64_t sub_1CDF4C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (**v17)(_QWORD, _QWORD);
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *, uint64_t, uint64_t, void (*)(unsigned __int8 *), uint64_t, uint64_t, uint64_t);
  _BYTE v31[24];
  __int128 v32[2];
  uint64_t v33;
  _QWORD v34[5];
  _BYTE v35[144];

  v4 = v3;
  v8 = *(_QWORD *)(v3 + 56);
  ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 48));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  v10 = a1[3];
  v11 = a1[4];
  sub_472D0(a1, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  v13 = BookPaginationEntity.document(for:)(v12);
  swift_release();
  if (v13)
  {
    v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
    swift_beginAccess(v13 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v31, 0, 0);
    v15 = *v14;
    swift_release();
  }
  else
  {
    v15 = 0;
  }
  v16 = a1[3];
  v17 = (uint64_t (**)(_QWORD, _QWORD))a1[4];
  v18 = sub_472D0(a1, v16);
  v19 = sub_49F1C(v4 + 224, (uint64_t)v34);
  v20 = __chkstk_darwin(v19);
  v22 = &v31[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, _QWORD *, uint64_t, __n128))(v23 + 16))(v22, v18, v16, v20);
  ContentLoaderDocument.init<A>(book:document:pageCount:)(v34, (uint64_t)v22, v15, v16, v17, (uint64_t)v35);
  v34[3] = &type metadata for ContentLoaderDocument;
  v34[4] = &protocol witness table for ContentLoaderDocument;
  v34[0] = swift_allocObject(&unk_387E78, 152, 7);
  sub_184938((uint64_t)v35, v34[0] + 16);
  v24 = swift_getObjectType(a2);
  swift_beginAccess(v4 + 112, &v33, 0, 0);
  v26 = *(_QWORD *)(v4 + 112);
  v25 = *(_QWORD *)(v4 + 120);
  v27 = swift_allocObject(&unk_387DB0, 24, 7);
  swift_weakInit(v27 + 16, v4);
  sub_49F1C((uint64_t)v34, (uint64_t)v32);
  v28 = swift_allocObject(&unk_387EA0, 64, 7);
  *(_QWORD *)(v28 + 16) = v27;
  sub_3F1CC(v32, v28 + 24);
  v29 = *(void (**)(_QWORD *, uint64_t, uint64_t, void (*)(unsigned __int8 *), uint64_t, uint64_t, uint64_t))(a3 + 200);
  swift_unknownObjectRetain(v26);
  swift_retain();
  v29(v34, v26, v25, sub_1D55B4, v28, v24, a3);
  swift_release();
  swift_release();
  swift_unknownObjectRelease(v26);
  sub_34488(v34);
  return sub_18496C((uint64_t)v35);
}

void sub_1CE1D0(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t ObjectType;
  _QWORD *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[7];
  _OWORD v27[2];
  _OWORD v28[7];
  _OWORD v29[2];
  _BYTE v30[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v30, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if (v2)
    {
      v6 = OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_internalState;
      if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_internalState) >= 2u)
      {
        v11 = *(_QWORD *)(Strong + 24);
        ObjectType = swift_getObjectType(*(_QWORD *)(Strong + 16));
        v13 = (*(_QWORD *(**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v28, ObjectType, v11);
        v14 = Logger.logObject.getter(v13);
        v15 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v16 = 0;
          _os_log_impl(&dword_0, v14, v15, "#updateVisibleContent call from loader.contentLoadedPublisher.", v16, 2u);
          swift_slowDealloc(v16, -1, -1);
        }

        v26[5] = v28[5];
        v26[6] = v28[6];
        v27[0] = v29[0];
        *(_OWORD *)((char *)v27 + 10) = *(_OWORD *)((char *)v29 + 10);
        v26[1] = v28[1];
        v26[2] = v28[2];
        v26[3] = v28[3];
        v26[4] = v28[4];
        v26[0] = v28[0];
        address(of:)(v26);
        sub_5B70C((uint64_t)v26, (uint64_t)&v20, &qword_3B8DF0);
        sub_1C641C(&v23, &v20, 0, 0, 1);
        sub_49900((uint64_t)v28);
        v17 = v23;
        v20 = v23;
        v18 = v24;
        v19 = v25;
        v21 = v24;
        v22 = v25;
        sub_1C6DB0(&v20);
        swift_bridgeObjectRelease(v17);
        swift_release();
        swift_unknownObjectRelease(v18);
        swift_unknownObjectRelease(v19);
      }
      else
      {
        v7 = swift_retain_n(Strong, 2);
        v8 = Logger.logObject.getter(v7);
        v9 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (_DWORD *)swift_slowAlloc(12, -1);
          *(_QWORD *)&v28[0] = swift_slowAlloc(32, -1);
          *v10 = 136315138;
          __asm { BR              X10 }
        }
        swift_release_n(v5);

      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_1CE5A4(__int128 *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t (*v35)(uint64_t, uint64_t, __n128);
  __n128 v36;
  unint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[136];
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char v56;
  _BYTE v57[24];
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v3 = v2;
  v5 = a1[1];
  v58 = *a1;
  v59 = v5;
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v60 = v7;
  v8 = *(_QWORD *)a1;
  v9 = *((_QWORD *)a1 + 1);
  v10 = *((_QWORD *)a1 + 2);
  v50 = v6;
  v11 = Logger.logObject.getter(a1);
  v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v48 = v10;
    v13 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = v7;
    v14 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v53 = v14;
    *(_DWORD *)v13 = 136315138;
    v15 = sub_5D4E8();
    v17 = v16;
    v51 = sub_33524(v15, v16, (uint64_t *)&v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v13 + 4);
    swift_bridgeObjectRelease(v17);
    _os_log_impl(&dword_0, v11, v12, "#requestedLoc Found:%s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    v18 = v14;
    v7 = v46;
    swift_slowDealloc(v18, -1, -1);
    v19 = v13;
    v10 = v48;
    swift_slowDealloc(v19, -1, -1);
  }

  sub_1C4C60(3u);
  v53 = v58;
  v54 = v59;
  v55 = v60;
  v20 = sub_ADEB8((double *)&v53);
  if (v20)
  {
    v21 = *(_QWORD *)(v20 + 16);
    swift_release();
  }
  else
  {
    v22 = Logger.logObject.getter(0);
    v23 = static os_log_type_t.error.getter();
    v49 = v10;
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = v7;
      v25 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v53 = v25;
      *(_DWORD *)v24 = 136315138;
      v26 = sub_5D4E8();
      v28 = v27;
      v51 = sub_33524(v26, v27, (uint64_t *)&v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v52, v24 + 4);
      swift_bridgeObjectRelease(v28);
      _os_log_impl(&dword_0, v22, v23, "Unable to find paginatedPage for #requestedLoc rect:%s", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      v29 = v25;
      v7 = v47;
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    v30 = *((double *)&v58 + 1);
    v31 = *(double *)&v59;
    swift_beginAccess(v3 + 14, v57, 0, 0);
    v32 = v3[14];
    v33 = v3[15];
    ObjectType = swift_getObjectType(v32);
    v35 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v33 + 24);
    v36 = swift_unknownObjectRetain(v32);
    v37 = v35(ObjectType, v33, v36);
    swift_unknownObjectRelease(v32);
    v21 = sub_1CEA24(v37, v30, v31);
    v38 = Logger.logObject.getter(v21);
    v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v40 = 134217984;
      *(_QWORD *)&v53 = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, (char *)&v53 + 8, v40 + 4);
      _os_log_impl(&dword_0, v38, v39, "#requestedLoc Fulfilling requested location with estimated page offset: %ld", v40, 0xCu);
      swift_slowDealloc(v40, -1, -1);
    }

    v10 = v49;
  }
  v41 = v3[5];
  v42 = swift_getObjectType(v3[4]);
  v43 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)&v53 = v8;
  *((_QWORD *)&v53 + 1) = v9;
  *(_QWORD *)&v54 = v10;
  *((_QWORD *)&v54 + 1) = v50;
  v55 = v7;
  v56 = 0;
  (*(void (**)(uint64_t, uint64_t, _QWORD, __int128 *, uint64_t, uint64_t))(v41 + 128))(v43, v21, 0, &v53, v42, v41);
  sub_555CC((uint64_t)&v51);
  v44 = (uint64_t)(v3 + 41);
  sub_5B70C(v44, (uint64_t)&v53, &qword_3B8DF0);
  sub_5B70C((uint64_t)&v51, v44, &qword_3B8DF0);
  return sub_13E5D0((uint64_t)&v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
}

uint64_t sub_1CEA24(unint64_t a1, double a2, double a3)
{
  uint64_t v3;
  double *v4;
  double v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  if (a1 < 2 || a1 == 3)
  {
    v4 = (double *)(v3 + 24);
    goto LABEL_6;
  }
  if (a1 == 2)
  {
    v4 = (double *)(v3 + 32);
    a2 = a3;
LABEL_6:
    v5 = CGFloat.floor.getter(a2 / *v4);
    if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) != 0)
    {
      if (v5 > -9.22337204e18)
      {
        if (v5 < 9.22337204e18)
          return (uint64_t)v5;
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  v7 = a1;
  type metadata accessor for BookLayoutMode(0);
  v9 = v7;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v8, &v9, v8, &type metadata for UInt);
  __break(1u);
  return result;
}

uint64_t sub_1CEAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37[24];
  _BYTE v38[144];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;

  v4 = v3;
  v8 = *(_QWORD *)a3;
  v7 = *(_QWORD *)(a3 + 8);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v11 = *(_QWORD *)(a3 + 32);
  v36 = *(_BYTE *)(a3 + 40);
  sub_1C4C60(3u);
  v12 = sub_AE39C(a1);
  if (v12)
  {
    v13 = v12;
    v14 = v11;
    v15 = *(_QWORD *)(v3 + 40);
    ObjectType = swift_getObjectType(*(_QWORD *)(v3 + 32));
    v17 = *(_QWORD *)(a2 + 16);
    v18 = *(_QWORD *)(v13 + 16);
    v39 = v8;
    v40 = v7;
    v41 = v10;
    v42 = v9;
    v43 = v14;
    v44 = v36;
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t *, uint64_t, uint64_t))(v15 + 128))(v17, v18, 0, &v39, ObjectType, v15);
    swift_release();
  }
  else
  {
    v35 = v9;
    v19 = swift_retain_n(a2, 2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter();
    v22 = v10;
    v23 = v7;
    v24 = v8;
    if (os_log_type_enabled(v20, v21))
    {
      v34 = v11;
      v25 = swift_slowAlloc(32, -1);
      *(_DWORD *)v25 = 134218496;
      v39 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v25 + 4);
      *(_WORD *)(v25 + 12) = 2048;
      v39 = *(_QWORD *)(a2 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v25 + 14);
      *(_WORD *)(v25 + 22) = 2048;
      v26 = (uint64_t *)(a2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
      swift_beginAccess(a2 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v37, 0, 0);
      v27 = *v26;
      swift_release();
      v39 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v25 + 24);
      swift_release();
      _os_log_impl(&dword_0, v20, v21, "Unable to find page for #requestedLoc pageOffset%ld in ordinal:%ld pageCount:%ld", (uint8_t *)v25, 0x20u);
      v28 = v25;
      v11 = v34;
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      swift_release_n(a2, 2);
    }

    v29 = *(_QWORD *)(v4 + 40);
    v30 = swift_getObjectType(*(_QWORD *)(v4 + 32));
    v31 = *(_QWORD *)(a2 + 16);
    v39 = v24;
    v40 = v23;
    v41 = v22;
    v42 = v35;
    v43 = v11;
    v44 = v36;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t *, uint64_t, uint64_t))(v29 + 128))(v31, 0, 1, &v39, v30, v29);
  }
  sub_555CC((uint64_t)v38);
  v32 = v4 + 328;
  sub_5B70C(v32, (uint64_t)&v39, &qword_3B8DF0);
  sub_5B70C((uint64_t)v38, v32, &qword_3B8DF0);
  return sub_13E5D0((uint64_t)&v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
}

void sub_1CED8C(uint64_t a1, NSObject *a2, uint64_t a3, __int128 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint8_t *v57;
  NSObject *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  NSObject *v62;
  NSObject *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  double v74;
  NSObject *v75;
  id v76;
  void *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t ObjectType;
  uint64_t (*v90)(uint64_t, uint64_t, __n128);
  __n128 v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  double v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  double *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  double v124;
  double v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, __n128);
  __n128 v130;
  uint64_t v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  NSObject *v141;
  os_log_type_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  NSObject *v148;
  os_log_type_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  NSObject *v155;
  os_log_type_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  NSObject *v165;
  os_log_type_t v166;
  uint8_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  NSObject *v171;
  os_log_type_t v172;
  uint8_t *v173;
  uint64_t v174;
  NSObject *v175;
  uint64_t v176;
  void (*v177)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v178;
  char *v179;
  unint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  NSObject *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  _BYTE v193[136];
  uint64_t v194;
  _OWORD v195[7];
  _OWORD v196[3];
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  _OWORD v204[2];
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  _OWORD v212[2];
  uint64_t v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  _OWORD v221[2];
  _OWORD v222[7];
  _OWORD v223[2];
  _BYTE v224[144];
  uint64_t v225;
  uint64_t v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  _OWORD v234[3];

  v183 = a3;
  v184 = a6;
  v182 = a5;
  v189 = a1;
  v8 = sub_319AC(&qword_3B8450);
  __chkstk_darwin(v8);
  v181 = (char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = sub_319AC((uint64_t *)&unk_3B8C50);
  __chkstk_darwin(v186);
  v185 = (char *)&v175 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v175 - v16;
  v18 = a4[3];
  v229 = a4[2];
  v230 = v18;
  v19 = a4[6];
  v20 = a4[7];
  v21 = a4[4];
  v232 = a4[5];
  v233 = v19;
  v234[0] = v20;
  *(_OWORD *)((char *)v234 + 10) = *(__int128 *)((char *)a4 + 122);
  v231 = v21;
  v22 = a4[1];
  v227 = *a4;
  v228 = v22;
  v23 = v230;
  v187 = *((_QWORD *)&v229 + 1);
  if ((_QWORD)v230)
    v24 = *((_QWORD *)&v229 + 1);
  else
    v24 = 0;
  if ((_QWORD)v230)
    v25 = v230;
  else
    v25 = 0xE000000000000000;
  swift_bridgeObjectRetain_n(v230, 2);
  v190 = String.redactedCFI.getter(v24, v25);
  v27 = v26;
  v188 = a2;
  v28 = -[NSObject URL](a2, "URL");
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v17, 1, 1, v10);
LABEL_12:
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v25);
    sub_52128((uint64_t)v17, (uint64_t *)&unk_3B8C50);
    v32 = swift_bridgeObjectRetain(v27);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v205 = v36;
      *(_DWORD *)v35 = 136446210;
      swift_bridgeObjectRetain(v27);
      v225 = sub_33524(v190, v27, (uint64_t *)&v205);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, &v226, v35 + 4);
      swift_bridgeObjectRelease_n(v27, 3);
      _os_log_impl(&dword_0, v33, v34, "webView.url nil, skipping #requestedLoc:%{public}s", v35, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      v37 = (uint64_t)v35;
LABEL_14:
      swift_slowDealloc(v37, -1, -1);
LABEL_47:

      return;
    }
LABEL_46:
    swift_bridgeObjectRelease_n(v27, 2);
    goto LABEL_47;
  }
  v29 = v28;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v28);

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v13, v10);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v30(v17, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10) == 1)
    goto LABEL_12;
  v177 = v30;
  v180 = v27;
  sub_52128((uint64_t)v17, (uint64_t *)&unk_3B8C50);
  v222[5] = v232;
  v222[6] = v233;
  v223[0] = v234[0];
  *(_OWORD *)((char *)v223 + 10) = *(_OWORD *)((char *)v234 + 10);
  v222[2] = v229;
  v222[3] = v230;
  v222[4] = v231;
  v222[0] = v227;
  v222[1] = v228;
  address(of:)(v222);
  v31 = v191;
  v178 = v191 + 41;
  sub_5B70C((uint64_t)(v191 + 41), (uint64_t)v224, &qword_3B8DF0);
  sub_5B70C((uint64_t)v222, (uint64_t)&v214, &qword_3B8DF0);
  sub_5B70C((uint64_t)v224, (uint64_t)&v225, &qword_3B8DF0);
  if (sub_49B20((uint64_t)&v225) == 1)
  {
    v203 = v220;
    v204[0] = v221[0];
    *(_OWORD *)((char *)v204 + 10) = *(_OWORD *)((char *)v221 + 10);
    v199 = v216;
    v200 = v217;
    v201 = v218;
    v202 = v219;
    v197 = v214;
    v198 = v215;
    sub_49BD8((uint64_t)&v227);
    sub_49BD8((uint64_t)&v227);
    sub_49900((uint64_t)&v197);
    sub_5B70C((uint64_t)v222, (uint64_t)&v205, &qword_3B8DF0);
    sub_5B70C((uint64_t)v224, (uint64_t)&v213, &qword_3B8DF0);
    sub_1D52C4((uint64_t *)&v205);
    goto LABEL_18;
  }
  sub_5B70C((uint64_t)v224, (uint64_t)&v197, &qword_3B8DF0);
  v195[6] = v203;
  v196[0] = v204[0];
  *(_OWORD *)((char *)v196 + 10) = *(_OWORD *)((char *)v204 + 10);
  v195[2] = v199;
  v195[3] = v200;
  v195[4] = v201;
  v195[5] = v202;
  v195[0] = v197;
  v195[1] = v198;
  sub_49BD8((uint64_t)&v227);
  sub_49BD8((uint64_t)&v227);
  v38 = _s8BookEPUB8LocationV2eeoiySbAC_ACtFZ_0((uint64_t)&v214, (uint64_t)v195);
  v210 = v219;
  v211 = v220;
  v212[0] = v221[0];
  *(_OWORD *)((char *)v212 + 10) = *(_OWORD *)((char *)v221 + 10);
  v207 = v216;
  v208 = v217;
  v209 = v218;
  v205 = v214;
  v206 = v215;
  sub_49900((uint64_t)&v205);
  sub_49900((uint64_t)&v227);
  if ((v38 & 1) != 0)
  {
    swift_bridgeObjectRelease(v25);
    swift_bridgeObjectRelease(v23);
    swift_retain_n(v31, 2);
    v27 = v180;
    v39 = swift_bridgeObjectRetain(v180);
    v33 = Logger.logObject.getter(v39);
    v40 = v31;
    v41 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v33, v41))
    {
      v42 = swift_slowAlloc(22, -1);
      v43 = swift_slowAlloc(64, -1);
      v194 = v43;
      *(_DWORD *)v42 = 136446466;
      swift_bridgeObjectRetain(v27);
      *(_QWORD *)&v195[0] = sub_33524(v190, v27, &v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v195, (char *)v195 + 8, v42 + 4);
      swift_bridgeObjectRelease_n(v27, 3);
      *(_WORD *)(v42 + 12) = 2080;
      sub_5B70C((uint64_t)v178, (uint64_t)v195, &qword_3B8DF0);
      sub_5B70C((uint64_t)v195, (uint64_t)&v192, &qword_3B8DF0);
      sub_13E5D0((uint64_t)v195, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_13E59C);
      v44 = sub_319AC(&qword_3B8DF0);
      v45 = String.init<A>(describing:)(&v192, v44);
      v47 = v46;
      v192 = sub_33524(v45, v46, &v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193, v42 + 14);
      swift_release_n(v40, 2);
      swift_bridgeObjectRelease(v47);
      _os_log_impl(&dword_0, v33, v41, "Skipping handleRequestedLocation to #requestedLoc:%{public}s requestedLocationInFlight: %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      v37 = v42;
      goto LABEL_14;
    }
    swift_release_n(v40, 2);
    goto LABEL_46;
  }
LABEL_18:
  v48 = (char *)v31 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_log;
  sub_49BD8((uint64_t)&v227);
  v49 = sub_49BD8((uint64_t)&v227);
  v179 = v48;
  v50 = Logger.logObject.getter(v49);
  v51 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(12, -1);
    v53 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v214 = v53;
    *(_DWORD *)v52 = 136446210;
    v176 = (uint64_t)(v52 + 4);
    v211 = v233;
    v212[0] = v234[0];
    *(_OWORD *)((char *)v212 + 10) = *(_OWORD *)((char *)v234 + 10);
    v207 = v229;
    v208 = v230;
    v209 = v231;
    v210 = v232;
    v205 = v227;
    v206 = v228;
    v54 = Location.description.getter();
    v56 = v55;
    *(_QWORD *)&v205 = sub_33524(v54, v55, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v205, (char *)&v205 + 8, v176);
    swift_bridgeObjectRelease(v56);
    sub_49900((uint64_t)&v227);
    sub_49900((uint64_t)&v227);
    _os_log_impl(&dword_0, v50, v51, "Capturing #requestedLoc inFlight as %{public}s", v52, 0xCu);
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    v57 = v52;
    v31 = v191;
    swift_slowDealloc(v57, -1, -1);

  }
  else
  {

    sub_49900((uint64_t)&v227);
    sub_49900((uint64_t)&v227);
  }
  v58 = v188;
  v59 = (uint64_t)v178;
  sub_5B70C((uint64_t)v178, (uint64_t)&v205, &qword_3B8DF0);
  sub_5B70C((uint64_t)v222, v59, &qword_3B8DF0);
  sub_49BD8((uint64_t)&v227);
  sub_13E5D0((uint64_t)&v205, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
  v60 = v180;
  swift_bridgeObjectRetain_n(v180, 2);
  v61 = v189;
  swift_retain_n(v189, 2);
  swift_retain_n(v31, 2);
  v62 = v58;
  v63 = Logger.logObject.getter(v62);
  v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, (os_log_type_t)v64))
  {
    LODWORD(v178) = v64;
    v188 = v63;
    v65 = v61;
    v66 = swift_slowAlloc(42, -1);
    v176 = swift_slowAlloc(96, -1);
    *(_QWORD *)&v214 = v176;
    *(_DWORD *)v66 = 136446978;
    swift_bridgeObjectRetain(v60);
    *(_QWORD *)&v197 = sub_33524(v190, v60, (uint64_t *)&v214);
    v175 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, (char *)&v197 + 8, v66 + 4);
    swift_bridgeObjectRelease_n(v60, 3);
    *(_WORD *)(v66 + 12) = 2048;
    v67 = *(_QWORD *)(v65 + 16);
    swift_release();
    *(_QWORD *)&v197 = v67;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, (char *)&v197 + 8, v66 + 14);
    swift_release();
    *(_WORD *)(v66 + 22) = 2082;
    v68 = v31 + 28;
    v69 = v31[31];
    v70 = v191[32];
    sub_472D0(v68, v69);
    v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 24))(v69, v70);
    v73 = v72;
    *(_QWORD *)&v197 = sub_33524(v71, v72, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, (char *)&v197 + 8, v66 + 24);
    swift_release_n(v191, 2);
    *(_QWORD *)&v74 = swift_bridgeObjectRelease(v73).n128_u64[0];
    *(_WORD *)(v66 + 32) = 2080;
    v75 = v175;
    v76 = -[NSObject URL](v175, "URL", v74);
    if (v76)
    {
      v77 = v76;
      v78 = v185;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v76);

      v79 = 0;
    }
    else
    {
      v79 = 1;
      v78 = v185;
    }
    v80 = v186;
    v81 = v188;
    v177(v78, v79, 1, v10);
    v82 = String.init<A>(describing:)(v78, v80);
    v84 = v83;
    *(_QWORD *)&v197 = sub_33524(v82, v83, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v197, (char *)&v197 + 8, v66 + 34);

    swift_bridgeObjectRelease(v84);
    _os_log_impl(&dword_0, v81, (os_log_type_t)v178, "handleRequestedLocation to #requestedLoc requestedCFI:%{public}s documentOrdinal:%ld for:%{public}s webView.url:%s", (uint8_t *)v66, 0x2Au);
    v85 = v176;
    swift_arrayDestroy(v176, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v85, -1, -1);
    swift_slowDealloc(v66, -1, -1);

    v61 = v189;
    v31 = v191;
  }
  else
  {

    swift_release_n(v31, 2);
    swift_bridgeObjectRelease_n(v60, 2);

    swift_release_n(v61, 2);
  }
  v86 = *(_QWORD *)(v61 + 16);
  swift_beginAccess(v31 + 14, &v197, 0, 0);
  v87 = v31[14];
  v88 = v31[15];
  ObjectType = swift_getObjectType(v87);
  v90 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v88 + 24);
  v91 = swift_unknownObjectRetain(v87);
  v92 = (char *)v90(ObjectType, v88, v91);
  swift_unknownObjectRelease(v87);
  if ((_QWORD)v23)
  {
    v93 = BYTE7(v23) & 0xF;
    v94 = v187;
    if ((v23 & 0x2000000000000000) == 0)
      v93 = v187 & 0xFFFFFFFFFFFFLL;
    v95 = v180;
    if (v93)
    {
      v96 = type metadata accessor for TaskPriority(0);
      v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56);
      v191 = (_QWORD *)v86;
      v98 = (uint64_t)v181;
      v97(v181, 1, 1, v96);
      type metadata accessor for MainActor(0);
      swift_retain(v61);
      swift_retain(v31);
      v99 = v183;
      swift_unknownObjectRetain(v183);
      v101 = static MainActor.shared.getter(v100);
      v102 = swift_allocObject(&unk_387E50, 144, 7);
      *(_QWORD *)(v102 + 16) = v101;
      *(_QWORD *)(v102 + 24) = &protocol witness table for MainActor;
      v103 = v184;
      *(_QWORD *)(v102 + 32) = v182;
      *(_QWORD *)(v102 + 40) = v103;
      *(_QWORD *)(v102 + 48) = v99;
      *(_QWORD *)(v102 + 56) = v94;
      *(_QWORD *)(v102 + 64) = v23;
      *(_QWORD *)(v102 + 72) = v31;
      *(_QWORD *)(v102 + 80) = v190;
      *(_QWORD *)(v102 + 88) = v95;
      *(_QWORD *)(v102 + 96) = v94;
      *(_OWORD *)(v102 + 104) = v23;
      *(_QWORD *)(v102 + 120) = v92;
      *(_QWORD *)(v102 + 128) = v61;
      *(_QWORD *)(v102 + 136) = v191;
      sub_67B40(v98, (uint64_t)&unk_3C15F0, v102);
      swift_release();
      return;
    }
    swift_bridgeObjectRelease(v180);
    swift_bridgeObjectRelease(v23);
    v104 = v23;
  }
  else
  {
    swift_bridgeObjectRelease(v180);
    v104 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease(v104);
  v105 = *((_QWORD *)&v228 + 1);
  if (!*((_QWORD *)&v228 + 1))
  {
    if (BYTE9(v234[1]) == 1)
    {
      v126 = v31[14];
      v127 = v31[15];
      v128 = swift_getObjectType(v126);
      v129 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v127 + 24);
      v130 = swift_unknownObjectRetain(v126);
      v131 = v129(v128, v127, v130);
      swift_unknownObjectRelease(v126);
      if ((v131 & 0xFFFFFFFFFFFFFFFELL) == 2)
      {
        sub_1C4C60(3u);
        sub_49BD8((uint64_t)&v227);
        v132 = sub_49BD8((uint64_t)&v227);
        v133 = Logger.logObject.getter(v132);
        v134 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v133, v134))
        {
          v135 = (uint8_t *)swift_slowAlloc(12, -1);
          v136 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v195[0] = v136;
          *(_DWORD *)v135 = 136315138;
          v220 = v233;
          v221[0] = v234[0];
          *(_OWORD *)((char *)v221 + 10) = *(_OWORD *)((char *)v234 + 10);
          v216 = v229;
          v217 = v230;
          v218 = v231;
          v219 = v232;
          v214 = v227;
          v215 = v228;
          v137 = Location.description.getter();
          v139 = v138;
          *(_QWORD *)&v214 = sub_33524(v137, v138, (uint64_t *)v195);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v214, (char *)&v214 + 8, v135 + 4);
          swift_bridgeObjectRelease(v139);
          sub_49900((uint64_t)&v227);
          sub_49900((uint64_t)&v227);
          swift_arrayDestroy(v136, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v136, -1, -1);
          swift_slowDealloc(v135, -1, -1);

        }
        else
        {

          sub_49900((uint64_t)&v227);
          sub_49900((uint64_t)&v227);
        }
        return;
      }
      v92 = (char *)*((_QWORD *)&v227 + 1);
      v152 = (uint64_t *)(v61 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
      swift_beginAccess(v61 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, v195, 0, 0);
      if ((uint64_t)v92 < *v152)
      {
        *(_QWORD *)&v216 = 0;
        v214 = 0u;
        v215 = 0u;
        BYTE8(v216) = 1;
        v153 = (uint64_t)v92;
LABEL_68:
        sub_1CEAE4(v153, v61, (uint64_t)&v214);
        return;
      }
      swift_retain_n(v61, 2);
      sub_49BD8((uint64_t)&v227);
      swift_retain(v61);
      sub_49BD8((uint64_t)&v227);
      v154 = swift_retain(v61);
      v155 = Logger.logObject.getter(v154);
      v156 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v155, v156))
      {
        v157 = swift_slowAlloc(32, -1);
        *(_DWORD *)v157 = 134218496;
        sub_49900((uint64_t)&v227);
        *(_QWORD *)&v214 = v92;
        v92 = (char *)&v214 + 8;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v214, (char *)&v214 + 8, v157 + 4);
        sub_49900((uint64_t)&v227);
        *(_WORD *)(v157 + 12) = 2048;
        v158 = *v152;
        swift_release();
        *(_QWORD *)&v214 = v158;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v214, (char *)&v214 + 8, v157 + 14);
        swift_release();
        *(_WORD *)(v157 + 22) = 2048;
        swift_release();
        *(_QWORD *)&v214 = v86;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v214, (char *)&v214 + 8, v157 + 24);
        swift_release();
        _os_log_impl(&dword_0, v155, v156, "#requestedLoc Unable to fulfill page offset %ld we only have %ld pages for ordinal %ld.", (uint8_t *)v157, 0x20u);
        swift_slowDealloc(v157, -1, -1);

      }
      else
      {
        swift_release_n(v61, 2);
        sub_49900((uint64_t)&v227);

        sub_49900((uint64_t)&v227);
        swift_release_n(v61, 2);
      }
      v159 = (uint64_t *)(v61 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages);
      swift_beginAccess(v61 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pages, &v192, 0, 0);
      v160 = *v159;
      if ((unint64_t)v160 >> 62)
      {
        if (v160 < 0)
          v169 = v160;
        else
          v169 = v160 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v160);
        v161 = _CocoaArrayWrapper.endIndex.getter(v169);
        if (v161)
        {
LABEL_83:
          v162 = v161 - 1;
          if (__OFSUB__(v161, 1))
          {
            __break(1u);
          }
          else if ((v160 & 0xC000000000000001) == 0)
          {
            if ((v162 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v162 < *(_QWORD *)((char *)&dword_10 + (v160 & 0xFFFFFFFFFFFFF8)))
            {
              v163 = *(_QWORD *)(v160 + 8 * v162 + 32);
              swift_retain(v163);
              goto LABEL_88;
            }
            __break(1u);
            goto LABEL_103;
          }
          v163 = specialized _ArrayBuffer._getElementSlowPath(_:)(v162, v160);
LABEL_88:
          swift_bridgeObjectRelease(v160);
          v164 = swift_retain(v163);
          v165 = Logger.logObject.getter(v164);
          v166 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v165, v166))
          {
            v167 = (uint8_t *)swift_slowAlloc(12, -1);
            *(_DWORD *)v167 = 134217984;
            *(_QWORD *)&v214 = *(_QWORD *)(v163 + 16);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v214, (char *)&v214 + 8, v167 + 4);
            swift_release();
            _os_log_impl(&dword_0, v165, v166, "#requestedLoc Moving to last page %ld", v167, 0xCu);
            swift_slowDealloc(v167, -1, -1);
          }
          else
          {
            swift_release();
          }

          v168 = *(_QWORD *)(v163 + 16);
          *(_QWORD *)&v216 = 0;
          v214 = 0u;
          v215 = 0u;
          BYTE8(v216) = 1;
          sub_1CEAE4(v168, v61, (uint64_t)&v214);
LABEL_79:
          swift_release();
          return;
        }
      }
      else
      {
        v161 = *(_QWORD *)((char *)&dword_10 + (v160 & 0xFFFFFFFFFFFFF8));
        swift_bridgeObjectRetain(v160);
        if (v161)
          goto LABEL_83;
      }
      swift_bridgeObjectRelease(v160);
      v171 = Logger.logObject.getter(v170);
      v172 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v171, v172))
      {
        v173 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v173 = 0;
        swift_slowDealloc(v173, -1, -1);
      }

      *(_QWORD *)&v216 = 0;
      v214 = 0u;
      v215 = 0u;
    }
    else
    {
      sub_49BD8((uint64_t)&v227);
      v140 = sub_49BD8((uint64_t)&v227);
      v141 = Logger.logObject.getter(v140);
      v142 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v141, v142))
      {
        v143 = swift_slowAlloc(22, -1);
        v144 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v214 = v144;
        *(_DWORD *)v143 = 136315394;
        if ((_QWORD)v23)
          v145 = v187;
        else
          v145 = 0x7475776C6F6CLL;
        if ((_QWORD)v23)
          v146 = v23;
        else
          v146 = 0xE600000000000000;
        swift_bridgeObjectRetain(v23);
        *(_QWORD *)&v195[0] = sub_33524(v145, v146, (uint64_t *)&v214);
        v61 = v189;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v195, (char *)v195 + 8, v143 + 4);
        swift_bridgeObjectRelease(v146);
        sub_49900((uint64_t)&v227);
        sub_49900((uint64_t)&v227);
        *(_WORD *)(v143 + 12) = 2048;
        *(_QWORD *)&v195[0] = v86;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v195, (char *)v195 + 8, v143 + 14);
        _os_log_impl(&dword_0, v141, v142, "#requestedLoc: We should make sure that %s is visible in our current document %ld!", (uint8_t *)v143, 0x16u);
        swift_arrayDestroy(v144, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v144, -1, -1);
        swift_slowDealloc(v143, -1, -1);

      }
      else
      {

        sub_49900((uint64_t)&v227);
        sub_49900((uint64_t)&v227);
      }
      *(_QWORD *)&v216 = 0;
      v214 = 0u;
      v215 = 0u;
    }
    BYTE8(v216) = 1;
    v153 = 0;
    goto LABEL_68;
  }
  v106 = v228;
  v107 = *(double *)&v229;
  v108 = (uint64_t *)(v61 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName);
  swift_beginAccess(v61 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_anchorEntitiesByName, v195, 0, 0);
  v109 = *v108;
  swift_bridgeObjectRetain_n(v105, 2);
  v110 = swift_bridgeObjectRetain(v109);
  sub_1D4470(v110, v106, v105);
  v112 = v111;
  v114 = v113;
  swift_bridgeObjectRelease(v105);
  swift_bridgeObjectRelease(v109);
  if (v114)
  {
    v115 = *v108;
    if (*(_QWORD *)(v115 + 16))
    {
      swift_bridgeObjectRetain(v115);
      v116 = sub_3B8A0(v112, v114);
      if ((v117 & 1) != 0)
      {
        v118 = *(_QWORD *)(*(_QWORD *)(v115 + 56) + 8 * v116);
        swift_retain(v118);
        swift_bridgeObjectRelease(v114);
        swift_bridgeObjectRelease(v115);
        v119 = *(_QWORD *)(v118 + 32);
        swift_retain(v118);
        v120 = (double *)swift_bridgeObjectRetain(v119);
        sub_4A1C8(v120, (uint64_t)&v214);
        swift_bridgeObjectRelease(v119);
        if ((BYTE8(v216) & 1) == 0)
        {
          v121 = v214;
          v122 = v216;
          v123 = *((_QWORD *)&v215 + 1);
          v124 = *(double *)&v215;
          v125 = *((double *)&v214 + 1);
          swift_release();
          switch((unint64_t)v92)
          {
            case 0uLL:
            case 1uLL:
              swift_bridgeObjectRelease(v105);
              goto LABEL_78;
            case 2uLL:
              swift_bridgeObjectRelease(v105);
              if (v124 - v107 > 0.0)
                v124 = v124 - v107;
              else
                v124 = 0.0;
              goto LABEL_78;
            case 3uLL:
              swift_bridgeObjectRelease(v105);
              if (v107 + v125 > 0.0)
                v125 = v107 + v125;
              else
                v125 = 0.0;
LABEL_78:
              *(_QWORD *)&v214 = v121;
              *((double *)&v214 + 1) = v125;
              *(double *)&v215 = v124;
              *((_QWORD *)&v215 + 1) = v123;
              *(_QWORD *)&v216 = v122;
              sub_1CE5A4(&v214, v61);
              goto LABEL_79;
            default:
              goto LABEL_104;
          }
        }
LABEL_103:
        __break(1u);
LABEL_104:
        type metadata accessor for BookLayoutMode(0);
        *(_QWORD *)&v214 = v92;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v174, &v214, v174, &type metadata for UInt);
        __break(1u);
        JUMPOUT(0x1D0528);
      }
      swift_bridgeObjectRelease(v114);
    }
    else
    {
      v115 = v114;
    }
    swift_bridgeObjectRelease(v115);
  }
  v147 = swift_bridgeObjectRetain(v105);
  v148 = Logger.logObject.getter(v147);
  v149 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v148, v149))
  {
    v150 = swift_slowAlloc(22, -1);
    v151 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v214 = v151;
    *(_DWORD *)v150 = 136315394;
    swift_bridgeObjectRetain(v105);
    v192 = sub_33524(v106, v105, (uint64_t *)&v214);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193, v150 + 4);
    swift_bridgeObjectRelease_n(v105, 3);
    *(_WORD *)(v150 + 12) = 2048;
    v192 = v86;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v192, v193, v150 + 14);
    _os_log_impl(&dword_0, v148, v149, "#requestedLoc anchor '%s' was not found in current document %ld", (uint8_t *)v150, 0x16u);
    swift_arrayDestroy(v151, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v151, -1, -1);
    swift_slowDealloc(v150, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v105, 2);
  }

  *(_QWORD *)&v216 = 0;
  v214 = 0u;
  v215 = 0u;
  BYTE8(v216) = 1;
  sub_1CEAE4(0, v61, (uint64_t)&v214);
}

uint64_t sub_1D0538(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v9 + 824) = v17;
  *(_OWORD *)(v9 + 808) = v16;
  *(double *)(v9 + 800) = a1;
  *(_QWORD *)(v9 + 792) = v15;
  *(_QWORD *)(v9 + 784) = a9;
  *(_QWORD *)(v9 + 776) = a8;
  *(_QWORD *)(v9 + 768) = a7;
  *(_QWORD *)(v9 + 760) = a6;
  v12 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 832) = v12;
  *(_QWORD *)(v9 + 840) = static MainActor.shared.getter(v12);
  v13 = (_QWORD *)swift_task_alloc(dword_3C0B44);
  *(_QWORD *)(v9 + 848) = v13;
  *v13 = v9;
  v13[1] = sub_1D0600;
  return sub_1B8E30(a6, a7, 0, v18, v19);
}

uint64_t sub_1D0600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 848);
  v3[107] = a1;
  v3[108] = v1;
  swift_task_dealloc(v4);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v3[104], &protocol witness table for MainActor);
  if (v1)
    v7 = sub_1D116C;
  else
    v7 = sub_1D0694;
  return swift_task_switch(v7, v6, v5);
}

uint64_t sub_1D0694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  double v6;
  double v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  char v98;

  v1 = *(_QWORD *)(v0 + 856);
  swift_release();
  v2 = *(_QWORD *)(v0 + 856);
  if (!*(_QWORD *)(v1 + 16))
  {
    v93 = v0 + 704;
    v9 = *(_QWORD *)(v0 + 792);
    swift_bridgeObjectRelease(v2);
    v10 = swift_bridgeObjectRetain_n(v9, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    v13 = os_log_type_enabled(v11, v12);
    v14 = *(_QWORD *)(v0 + 792);
    if (v13)
    {
      v15 = *(_QWORD *)(v0 + 784);
      v16 = (uint8_t *)swift_slowAlloc(12, -1);
      v17 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v95 = v17;
      *(_DWORD *)v16 = 136446210;
      swift_bridgeObjectRetain(v14);
      *(_QWORD *)(v0 + 752) = sub_33524(v15, v14, (uint64_t *)&v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 752, v0 + 760, v16 + 4);
      swift_bridgeObjectRelease_n(v14, 3);
      swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1, -1);
      swift_slowDealloc(v16, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v14, 2);
    }
    v18 = sub_1D54F8();
    v19 = swift_allocError(&type metadata for EmptyRectsError, v18, 0, 0);
    swift_willThrow(v20);
    v21 = *(_QWORD *)(v0 + 792);
    swift_bridgeObjectRetain(v21);
    swift_errorRetain(v19);
    swift_bridgeObjectRetain(v21);
    v22 = swift_errorRetain(v19);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    v25 = os_log_type_enabled(v23, v24);
    v26 = *(_QWORD *)(v0 + 792);
    v92 = v0 + 680;
    if (v25)
    {
      v27 = *(_QWORD *)(v0 + 784);
      v28 = swift_slowAlloc(22, -1);
      v29 = (uint64_t *)swift_slowAlloc(8, -1);
      v91 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v95 = v91;
      *(_DWORD *)v28 = 136446466;
      swift_bridgeObjectRetain(v26);
      *(_QWORD *)(v0 + 704) = sub_33524(v27, v26, (uint64_t *)&v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v93, v0 + 712, v28 + 4);
      swift_bridgeObjectRelease_n(v26, 3);
      *(_WORD *)(v28 + 12) = 2112;
      swift_errorRetain(v19);
      v30 = _swift_stdlib_bridgeErrorToNSError(v19);
      *(_QWORD *)(v0 + 712) = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 712, v0 + 720, v28 + 14);
      *v29 = v30;
      swift_errorRelease(v19);
      swift_errorRelease(v19);
      _os_log_impl(&dword_0, v23, v24, "Failed to get rect for #requestedLoc CFI: %{public}s - %@. Will retry if content was not loaded", (uint8_t *)v28, 0x16u);
      v31 = sub_319AC(&qword_3B8A70);
      swift_arrayDestroy(v29, 1, v31);
      swift_slowDealloc(v29, -1, -1);
      swift_arrayDestroy(v91, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v28, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v26, 2);
      swift_errorRelease(v19);
      swift_errorRelease(v19);
    }
    v32 = (void *)_convertErrorToNSError(_:)(v19);
    v33 = (char *)objc_msgSend(v32, "code");

    if (v33 == (_BYTE *)&dword_4 + 1)
    {
      v35 = v0 + 304;
      v36 = v0 + 448;
      v37 = Logger.logObject.getter(v34);
      v38 = static os_log_type_t.error.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        swift_slowDealloc(v39, -1, -1);
      }
      v40 = *(_QWORD *)(v0 + 792);
      v41 = *(_QWORD *)(v0 + 768);

      swift_bridgeObjectRetain_n(v40, 2);
      v42 = swift_bridgeObjectRetain_n(v41, 2);
      v43 = Logger.logObject.getter(v42);
      v46 = static os_log_type_t.debug.getter(v43, v44, v45);
      if (os_log_type_enabled(v43, v46))
      {
        v90 = *(_QWORD *)(v0 + 824);
        v47 = *(_QWORD *)(v0 + 792);
        v48 = *(_QWORD *)(v0 + 784);
        v49 = *(_QWORD *)(v0 + 768);
        v87 = *(_QWORD *)(v0 + 760);
        v88 = v0 + 696;
        v50 = swift_slowAlloc(32, -1);
        v89 = swift_slowAlloc(32, -1);
        *(_QWORD *)&v95 = v89;
        *(_DWORD *)v50 = 136446722;
        swift_bridgeObjectRetain(v47);
        *(_QWORD *)(v0 + 680) = sub_33524(v48, v47, (uint64_t *)&v95);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v92, v0 + 688, v50 + 4);
        swift_bridgeObjectRelease_n(v47, 3);
        *(_WORD *)(v50 + 12) = 2048;
        v51 = String.cfiSpineIndex.getter(v87, v49);
        v53 = v52;
        swift_bridgeObjectRelease(v49);
        if ((v53 & 1) != 0)
          v54 = -1;
        else
          v54 = v51;
        *(_QWORD *)(v0 + 688) = v54;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 688, v88, v50 + 14);
        swift_bridgeObjectRelease(v49);
        *(_WORD *)(v50 + 22) = 2048;
        v36 = v0 + 448;
        *(_QWORD *)(v0 + 696) = v90;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v88, v93, v50 + 24);
        _os_log_impl(&dword_0, v43, v46, "Attempted to get rect for %{public}s which should be run in ordinal %ld and was run in %ld", (uint8_t *)v50, 0x20u);
        swift_arrayDestroy(v89, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v89, -1, -1);
        v55 = v50;
        v35 = v0 + 304;
        swift_slowDealloc(v55, -1, -1);

      }
      else
      {
        v84 = *(_QWORD *)(v0 + 792);
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 768), 2);

        swift_bridgeObjectRelease_n(v84, 2);
      }
      v85 = *(_QWORD *)(v0 + 816);
      v86 = *(_QWORD *)(v0 + 776);
      v97 = 0;
      v95 = 0u;
      v96 = 0u;
      v98 = 1;
      sub_1CEAE4(0, v85, (uint64_t)&v95);
      sub_555CC(v35);
      v86 += 328;
      sub_5B70C(v86, v36, &qword_3B8DF0);
      sub_5B70C(v35, v86, &qword_3B8DF0);
      sub_13E5D0(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
    }
    else
    {
      v56 = *(_QWORD *)(v0 + 776);
      sub_555CC(v0 + 160);
      v56 += 328;
      sub_5B70C(v56, v0 + 16, &qword_3B8DF0);
      sub_5B70C(v0 + 160, v56, &qword_3B8DF0);
      sub_13E5D0(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
      swift_errorRetain(v19);
      v57 = swift_errorRetain(v19);
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.error.getter(v58);
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc(12, -1);
        v61 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v60 = 138412290;
        swift_errorRetain(v19);
        v62 = _swift_stdlib_bridgeErrorToNSError(v19);
        *(_QWORD *)(v0 + 672) = v62;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 672, v92, v60 + 4);
        *v61 = v62;
        swift_errorRelease(v19);
        swift_errorRelease(v19);
        _os_log_impl(&dword_0, v58, v59, "#requestedLoc Unknown JS Error: %@.", v60, 0xCu);
        v63 = sub_319AC(&qword_3B8A70);
        swift_arrayDestroy(v61, 1, v63);
        swift_slowDealloc(v61, -1, -1);
        swift_slowDealloc(v60, -1, -1);
        swift_errorRelease(v19);

        return (*(uint64_t (**)(__n128))(v0 + 8))(v64);
      }
      swift_errorRelease(v19);

      swift_errorRelease(v19);
    }
    v64 = swift_errorRelease(v19);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v64);
  }
  v3 = *(_QWORD *)(v0 + 808);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v0 + 632) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v0 + 648) = v5;
  *(_QWORD *)(v0 + 664) = v4;
  swift_bridgeObjectRelease(v2);
  v6 = *(double *)(v0 + 640);
  v7 = *(double *)(v0 + 648);
  v8 = *(_OWORD *)(v0 + 656);
  if (v3 >= 2)
  {
    if (v3 == 2)
    {
      v7 = v7 - *(double *)(v0 + 800);
      if (v7 <= 0.0)
        v7 = 0.0;
    }
    else
    {
      if (v3 != 3)
      {
        v81 = *(_QWORD *)(v0 + 808);
        type metadata accessor for BookLayoutMode(0);
        *(_QWORD *)(v0 + 720) = v81;
        return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v82, v0 + 720, v82, &type metadata for UInt);
      }
      v6 = v6 + *(double *)(v0 + 800);
      if (v6 <= 0.0)
        v6 = 0.0;
    }
  }
  v65 = *(_QWORD *)(v0 + 816);
  v66 = *(_QWORD *)(v0 + 792);
  *(_QWORD *)(v0 + 592) = *(_QWORD *)(v0 + 632);
  *(double *)(v0 + 600) = v6;
  *(double *)(v0 + 608) = v7;
  *(_OWORD *)(v0 + 616) = v8;
  v67 = *(_OWORD *)(v0 + 608);
  v95 = *(_OWORD *)(v0 + 592);
  v96 = v67;
  v97 = *(_QWORD *)(v0 + 624);
  sub_1CE5A4(&v95, v65);
  v68 = swift_bridgeObjectRetain_n(v66, 2);
  v69 = Logger.logObject.getter(v68);
  v70 = static os_log_type_t.default.getter(v69);
  v71 = os_log_type_enabled(v69, v70);
  v72 = *(_QWORD *)(v0 + 792);
  if (v71)
  {
    v73 = *(_QWORD *)(v0 + 784);
    v74 = swift_slowAlloc(32, -1);
    v94 = swift_slowAlloc(96, -1);
    *(_QWORD *)&v95 = v94;
    *(_DWORD *)v74 = 136446722;
    swift_bridgeObjectRetain(v72);
    *(_QWORD *)(v0 + 728) = sub_33524(v73, v72, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 728, v0 + 736, v74 + 4);
    swift_bridgeObjectRelease_n(v72, 3);
    *(_WORD *)(v74 + 12) = 2080;
    v75 = sub_5D4E8();
    v77 = v76;
    *(_QWORD *)(v0 + 736) = sub_33524(v75, v76, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 736, v0 + 744, v74 + 14);
    swift_bridgeObjectRelease(v77);
    *(_WORD *)(v74 + 22) = 2080;
    v78 = sub_80898();
    v80 = v79;
    *(_QWORD *)(v0 + 744) = sub_33524(v78, v79, (uint64_t *)&v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 744, v0 + 752, v74 + 24);
    swift_bridgeObjectRelease(v80);
    _os_log_impl(&dword_0, v69, v70, "CFI should be visible: #requestedLoc:%{public}s, adjustedRect:%s, webRect:%s", (uint8_t *)v74, 0x20u);
    swift_arrayDestroy(v94, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v94, -1, -1);
    swift_slowDealloc(v74, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v72, 2);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v64);
}

uint64_t sub_1D116C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[2];
  uint64_t v58;
  char v59;

  v56 = v0 + 680;
  swift_release();
  v1 = *(_QWORD *)(v0 + 864);
  v2 = *(_QWORD *)(v0 + 792);
  swift_bridgeObjectRetain(v2);
  swift_errorRetain(v1);
  swift_bridgeObjectRetain(v2);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(_QWORD *)(v0 + 792);
    v7 = *(_QWORD *)(v0 + 784);
    v8 = swift_slowAlloc(22, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v57[0] = v10;
    *(_DWORD *)v8 = 136446466;
    swift_bridgeObjectRetain(v6);
    *(_QWORD *)(v0 + 704) = sub_33524(v7, v6, (uint64_t *)v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 704, v0 + 712, v8 + 4);
    swift_bridgeObjectRelease_n(v6, 3);
    *(_WORD *)(v8 + 12) = 2112;
    swift_errorRetain(v1);
    v11 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(_QWORD *)(v0 + 712) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 712, v0 + 720, v8 + 14);
    *v9 = v11;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl(&dword_0, v4, v5, "Failed to get rect for #requestedLoc CFI: %{public}s - %@. Will retry if content was not loaded", (uint8_t *)v8, 0x16u);
    v12 = sub_319AC(&qword_3B8A70);
    swift_arrayDestroy(v9, 1, v12);
    swift_slowDealloc(v9, -1, -1);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {
    v13 = *(_QWORD *)(v0 + 792);

    swift_bridgeObjectRelease_n(v13, 2);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }
  v14 = (void *)_convertErrorToNSError(_:)(v1);
  v15 = (char *)objc_msgSend(v14, "code");

  if (v15 == (_BYTE *)&dword_4 + 1)
  {
    v17 = v0 + 304;
    v18 = v0 + 448;
    v19 = Logger.logObject.getter(v16);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      swift_slowDealloc(v21, -1, -1);
    }
    v22 = *(_QWORD *)(v0 + 792);
    v23 = *(_QWORD *)(v0 + 768);

    swift_bridgeObjectRetain_n(v22, 2);
    v24 = swift_bridgeObjectRetain_n(v23, 2);
    v25 = Logger.logObject.getter(v24);
    v28 = static os_log_type_t.debug.getter(v25, v26, v27);
    if (os_log_type_enabled(v25, v28))
    {
      v53 = v0 + 696;
      v54 = *(_QWORD *)(v0 + 824);
      v29 = *(_QWORD *)(v0 + 792);
      v55 = v1;
      v30 = *(_QWORD *)(v0 + 784);
      v31 = *(_QWORD *)(v0 + 768);
      v52 = *(_QWORD *)(v0 + 760);
      v32 = swift_slowAlloc(32, -1);
      v33 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v57[0] = v33;
      *(_DWORD *)v32 = 136446722;
      swift_bridgeObjectRetain(v29);
      *(_QWORD *)(v0 + 680) = sub_33524(v30, v29, (uint64_t *)v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v56, v0 + 688, v32 + 4);
      swift_bridgeObjectRelease_n(v29, 3);
      *(_WORD *)(v32 + 12) = 2048;
      v34 = String.cfiSpineIndex.getter(v52, v31);
      LOBYTE(v29) = v35;
      swift_bridgeObjectRelease(v31);
      if ((v29 & 1) != 0)
        v36 = -1;
      else
        v36 = v34;
      *(_QWORD *)(v0 + 688) = v36;
      v18 = v0 + 448;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 688, v53, v32 + 14);
      swift_bridgeObjectRelease(v31);
      *(_WORD *)(v32 + 22) = 2048;
      v1 = v55;
      *(_QWORD *)(v0 + 696) = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v53, v0 + 704, v32 + 24);
      _os_log_impl(&dword_0, v25, v28, "Attempted to get rect for %{public}s which should be run in ordinal %ld and was run in %ld", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      v37 = v32;
      v17 = v0 + 304;
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {
      v48 = *(_QWORD *)(v0 + 792);
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 768), 2);

      swift_bridgeObjectRelease_n(v48, 2);
    }
    v49 = *(_QWORD *)(v0 + 816);
    v50 = *(_QWORD *)(v0 + 776);
    v58 = 0;
    memset(v57, 0, sizeof(v57));
    v59 = 1;
    sub_1CEAE4(0, v49, (uint64_t)v57);
    sub_555CC(v17);
    v50 += 328;
    sub_5B70C(v50, v18, &qword_3B8DF0);
    sub_5B70C(v17, v50, &qword_3B8DF0);
    sub_13E5D0(v18, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
    goto LABEL_17;
  }
  v38 = *(_QWORD *)(v0 + 776);
  sub_555CC(v0 + 160);
  v38 += 328;
  sub_5B70C(v38, v0 + 16, &qword_3B8DF0);
  sub_5B70C(v0 + 160, v38, &qword_3B8DF0);
  sub_13E5D0(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_49BA4);
  swift_errorRetain(v1);
  v39 = swift_errorRetain(v1);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.error.getter(v40);
  if (!os_log_type_enabled(v40, v41))
  {
    swift_errorRelease(v1);

    swift_errorRelease(v1);
LABEL_17:
    v47 = swift_errorRelease(v1);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v47);
  }
  v42 = (uint8_t *)swift_slowAlloc(12, -1);
  v43 = (uint64_t *)swift_slowAlloc(8, -1);
  *(_DWORD *)v42 = 138412290;
  swift_errorRetain(v1);
  v44 = v1;
  v45 = _swift_stdlib_bridgeErrorToNSError(v1);
  *(_QWORD *)(v0 + 672) = v45;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 672, v56, v42 + 4);
  *v43 = v45;
  swift_errorRelease(v44);
  swift_errorRelease(v44);
  _os_log_impl(&dword_0, v40, v41, "#requestedLoc Unknown JS Error: %@.", v42, 0xCu);
  v46 = sub_319AC(&qword_3B8A70);
  swift_arrayDestroy(v43, 1, v46);
  swift_slowDealloc(v43, -1, -1);
  swift_slowDealloc(v42, -1, -1);
  swift_errorRelease(v44);

  return (*(uint64_t (**)(__n128))(v0 + 8))(v47);
}

void sub_1D1834(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[24];

  v4 = *a1;
  v5 = a1[1];
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v41, 0, 0);
  if (swift_weakLoadStrong(v6))
  {
    if ((v5 & 1) != 0)
    {
      v7 = sub_49F1C(a3, (uint64_t)v38);
      v8 = Logger.logObject.getter(v7);
      v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc(22, -1);
        v11 = (uint64_t *)swift_slowAlloc(8, -1);
        v12 = swift_slowAlloc(32, -1);
        v37 = v12;
        *(_DWORD *)v10 = 136315394;
        v13 = v39;
        v14 = v40;
        sub_472D0(v38, v39);
        v15 = ContentLoadingDocument.shortDescription.getter(v13, v14);
        v17 = v16;
        v36 = sub_33524(v15, v16, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v10 + 4);
        swift_bridgeObjectRelease(v17);
        sub_34488(v38);
        *(_WORD *)(v10 + 12) = 2112;
        v18 = sub_1D55C0();
        v19 = swift_allocError(&type metadata for ContentLoadingError, v18, 0, 0);
        *v20 = v4;
        v21 = _swift_stdlib_bridgeErrorToNSError(v19);
        v36 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v10 + 14);
        *v11 = v21;
        _os_log_impl(&dword_0, v8, v9, "Error loading document %s error:%@", (uint8_t *)v10, 0x16u);
        v22 = sub_319AC(&qword_3B8A70);
        swift_arrayDestroy(v11, 1, v22);
        swift_slowDealloc(v11, -1, -1);
        swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
        v23 = v12;
LABEL_7:
        swift_slowDealloc(v23, -1, -1);
        swift_slowDealloc(v10, -1, -1);
        swift_release();

        return;
      }
    }
    else
    {
      v24 = sub_49F1C(a3, (uint64_t)v38);
      v8 = Logger.logObject.getter(v24);
      v25 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v8, v25))
      {
        v10 = swift_slowAlloc(22, -1);
        v26 = swift_slowAlloc(64, -1);
        v37 = v26;
        *(_DWORD *)v10 = 136315394;
        v27 = v39;
        v28 = v40;
        sub_472D0(v38, v39);
        v29 = ContentLoadingDocument.shortDescription.getter(v27, v28);
        v31 = v30;
        v36 = sub_33524(v29, v30, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v10 + 4);
        swift_bridgeObjectRelease(v31);
        sub_34488(v38);
        *(_WORD *)(v10 + 12) = 2080;
        LOWORD(v36) = v4;
        v32 = sub_319AC(&qword_3C1610);
        v33 = String.init<A>(describing:)(&v36, v32);
        v35 = v34;
        v36 = sub_33524(v33, v34, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v10 + 14);
        swift_bridgeObjectRelease(v35);
        _os_log_impl(&dword_0, v8, v25, "Successful load of document %s result:%s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy(v26, 2, (char *)&type metadata for Any + 8);
        v23 = v26;
        goto LABEL_7;
      }
    }
    swift_release();

    sub_34488(v38);
  }
}

void sub_1D1BE0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if ((a1 & 1) == 0)
  {
    if (qword_3B5920 != -1)
      swift_once(&qword_3B5920, sub_1C30D0);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_555F0(v1, (uint64_t)qword_3C11A0);
    oslog = Logger.logObject.getter(v2);
    v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_0, oslog, v3, "Movement failed!", v4, 2u);
      swift_slowDealloc(v4, -1, -1);
    }

  }
}

double BookContentLayoutController.Selection.loaderSelection.getter@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BookContentLayoutController.Selection(0) + 20));
  v4 = v3[1];
  v5 = v3[2];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  swift_bridgeObjectRetain(v4);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v5).n128_u64[0];
  return result;
}

__n128 BookContentLayoutController.Selection.loaderSelection.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 result;

  v3 = *a1;
  v4 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BookContentLayoutController.Selection(0) + 20));
  v5 = v4[1];
  swift_bridgeObjectRelease(v4[2]);
  swift_bridgeObjectRelease(v5);
  *v4 = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v4 + 1) = result;
  return result;
}

uint64_t (*BookContentLayoutController.Selection.loaderSelection.modify())(_QWORD)
{
  type metadata accessor for BookContentLayoutController.Selection(0);
  return address(of:);
}

double sub_1D1D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  uint64_t v18;

  v18 = a5;
  v9 = sub_319AC(&qword_3C1638);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  ObjectType = swift_getObjectType(a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = *(unsigned __int8 *)(v10 + 80);
  v14 = (v13 + 16) & ~v13;
  v15 = swift_allocObject(&unk_388058, v14 + v11, v13 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a3 + 240))(a4, v18, sub_1D57FC, v15, ObjectType, a3);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_1D1E8C(uint64_t a1)
{
  uint64_t v1;
  BOOL v3;
  _BYTE v4[40];

  sub_5B70C(a1, (uint64_t)v4, &qword_3C1640);
  v3 = (v4[32] & 1) == 0;
  v1 = sub_319AC(&qword_3C1638);
  return CheckedContinuation.resume(returning:)(&v3, v1);
}

void sub_1D1EF0(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  void (*v23)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v46;
  uint64_t v47;
  __int128 *v48;
  Swift::Int v49;
  Swift::Int v50;
  __int128 *v51;
  __int128 v52;
  Swift::Int v53;
  uint64_t v54;
  __int128 v55;
  Swift::Int v56;
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  char *v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  Swift::Int v132;
  Swift::Int v133;
  Swift::Int v134;
  Swift::Int v135;
  _BOOL4 v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  Swift::Int v140;
  Swift::Int v141;
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD v148[3];
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_150;
    if (v3)
      sub_1D293C(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_158;
  v132 = v4;
  v139 = v1;
  v128 = a1;
  if (v3 < 2)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v138 = (char *)&_swiftEmptyArrayStorage[4];
    v131 = _swiftEmptyArrayStorage;
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
LABEL_116:
      if (v12 >= 2)
      {
        v121 = *v128;
        do
        {
          v122 = v12 - 2;
          if (v12 < 2)
            goto LABEL_145;
          if (!v121)
            goto LABEL_157;
          v123 = *(_QWORD *)&v9[16 * v122 + 32];
          v124 = *(_QWORD *)&v9[16 * v12 + 24];
          sub_1D2B3C((char *)(v121 + 16 * v123), (char *)(v121 + 16 * *(_QWORD *)&v9[16 * v12 + 16]), v121 + 16 * v124, v138);
          if (v139)
            break;
          if (v124 < v123)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_1D34BC((uint64_t)v9);
          if (v122 >= *((_QWORD *)v9 + 2))
            goto LABEL_147;
          v125 = &v9[16 * v122 + 32];
          *(_QWORD *)v125 = v123;
          *((_QWORD *)v125 + 1) = v124;
          v126 = *((_QWORD *)v9 + 2);
          if (v12 > v126)
            goto LABEL_148;
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v126 - v12));
          *((_QWORD *)v9 + 2) = v126 - 1;
          v12 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease(v9);
      v131[2] = 0;
      swift_bridgeObjectRelease(v131);
      return;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_319AC(&qword_3B67F8);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)(v8 + 16) = v6;
    v131 = (_QWORD *)v8;
    v138 = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v129 = *a1 + 40;
  v130 = *a1 - 16;
  v9 = (char *)_swiftEmptyArrayStorage;
  v134 = v3;
  v151 = *a1;
  while (2)
  {
    v13 = v10;
    v14 = v10 + 1;
    v135 = v10;
    if (v10 + 1 >= v3)
      goto LABEL_44;
    v15 = (uint64_t *)(v11 + 16 * v14);
    v16 = v11;
    v17 = *v15;
    v18 = v15[1];
    v19 = (uint64_t *)(v16 + 16 * v13);
    v20 = *v19;
    v21 = v19[1];
    ObjectType = swift_getObjectType(v17);
    v23 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v18 + 40);
    swift_unknownObjectRetain(v17);
    v24 = swift_unknownObjectRetain(v20);
    v23(&v145, ObjectType, v18, v24);
    if (!v146)
    {
      sub_52128((uint64_t)&v145, &qword_3B8990);
LABEL_21:
      swift_unknownObjectRelease(v17);
      swift_unknownObjectRelease(v20);
      v136 = 0;
      goto LABEL_22;
    }
    sub_3F1CC(&v145, (uint64_t)v148);
    v25 = swift_getObjectType(v20);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v21 + 40))(&v143, v25, v21);
    if (!v144)
    {
      sub_52128((uint64_t)&v143, &qword_3B8990);
      sub_34488(v148);
      goto LABEL_21;
    }
    sub_3F1CC(&v143, (uint64_t)&v145);
    v26 = v149;
    v27 = v150;
    sub_472D0(v148, v149);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 40))(v26, v27);
    v30 = v146;
    v29 = v147;
    sub_472D0(&v145, v146);
    v136 = v28 < (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 40))(v30, v29);
    sub_34488(&v145);
    sub_34488(v148);
    swift_unknownObjectRelease(v17);
    swift_unknownObjectRelease(v20);
LABEL_22:
    v11 = v151;
    v13 = v135;
    v14 = v135 + 2;
    if (v135 + 2 >= v3)
      goto LABEL_35;
    v31 = (uint64_t *)(v129 + 16 * v135);
    while (1)
    {
      v140 = v14;
      v41 = *(v31 - 1);
      v40 = *v31;
      v42 = *(v31 - 3);
      v43 = *(v31 - 2);
      v44 = swift_getObjectType(v41);
      v45 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v40 + 40);
      swift_unknownObjectRetain(v41);
      v46 = swift_unknownObjectRetain(v42);
      v45(&v145, v44, v40, v46);
      if (!v146)
      {
        sub_52128((uint64_t)&v145, &qword_3B8990);
LABEL_30:
        swift_unknownObjectRelease(v41);
        swift_unknownObjectRelease(v42);
        if (v136)
        {
          v3 = v134;
          v13 = v135;
          v14 = v140;
          goto LABEL_36;
        }
        goto LABEL_25;
      }
      sub_3F1CC(&v145, (uint64_t)v148);
      v47 = swift_getObjectType(v42);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v43 + 40))(&v143, v47, v43);
      if (!v144)
      {
        sub_52128((uint64_t)&v143, &qword_3B8990);
        sub_34488(v148);
        goto LABEL_30;
      }
      sub_3F1CC(&v143, (uint64_t)&v145);
      v32 = v149;
      v33 = v150;
      sub_472D0(v148, v149);
      v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 40))(v32, v33);
      v35 = v146;
      v36 = v147;
      sub_472D0(&v145, v146);
      v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 40);
      v38 = v36;
      v11 = v151;
      v39 = v34 >= v37(v35, v38);
      sub_34488(&v145);
      sub_34488(v148);
      swift_unknownObjectRelease(v41);
      swift_unknownObjectRelease(v42);
      if (((v136 ^ v39) & 1) == 0)
        break;
LABEL_25:
      v14 = v140 + 1;
      v31 += 2;
      if (v134 == v140 + 1)
      {
        v3 = v134;
        v14 = v134;
        goto LABEL_34;
      }
    }
    v3 = v134;
    v14 = v140;
LABEL_34:
    v13 = v135;
LABEL_35:
    if (v136)
    {
LABEL_36:
      if (v14 < v13)
        goto LABEL_151;
      if (v13 < v14)
      {
        v48 = (__int128 *)(v130 + 16 * v14);
        v49 = v14;
        v50 = v13;
        v51 = (__int128 *)(v11 + 16 * v13);
        do
        {
          if (v50 != --v49)
          {
            if (!v11)
              goto LABEL_156;
            v52 = *v51;
            *v51 = *v48;
            *v48 = v52;
          }
          ++v50;
          --v48;
          ++v51;
        }
        while (v50 < v49);
      }
    }
LABEL_44:
    if (v14 >= v3)
      goto LABEL_67;
    if (__OFSUB__(v14, v13))
      goto LABEL_149;
    if (v14 - v13 >= v132)
    {
LABEL_67:
      if (v14 < v13)
        goto LABEL_144;
      if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
        v9 = sub_1D3038(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
      v72 = *((_QWORD *)v9 + 2);
      v71 = *((_QWORD *)v9 + 3);
      v12 = v72 + 1;
      v141 = v14;
      if (v72 >= v71 >> 1)
        v9 = sub_1D3038((char *)(v71 > 1), v72 + 1, 1, v9);
      *((_QWORD *)v9 + 2) = v12;
      v73 = v9 + 32;
      v74 = &v9[16 * v72 + 32];
      *(_QWORD *)v74 = v135;
      *((_QWORD *)v74 + 1) = v14;
      if (!v72)
      {
        v12 = 1;
LABEL_14:
        v3 = v134;
        v10 = v141;
        if (v141 >= v134)
          goto LABEL_116;
        continue;
      }
      while (1)
      {
        v75 = v12 - 1;
        if (v12 >= 4)
        {
          v80 = &v73[16 * v12];
          v81 = *((_QWORD *)v80 - 8);
          v82 = *((_QWORD *)v80 - 7);
          v86 = __OFSUB__(v82, v81);
          v83 = v82 - v81;
          if (v86)
            goto LABEL_133;
          v85 = *((_QWORD *)v80 - 6);
          v84 = *((_QWORD *)v80 - 5);
          v86 = __OFSUB__(v84, v85);
          v78 = v84 - v85;
          v79 = v86;
          if (v86)
            goto LABEL_134;
          v87 = v12 - 2;
          v88 = &v73[16 * v12 - 32];
          v90 = *(_QWORD *)v88;
          v89 = *((_QWORD *)v88 + 1);
          v86 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          if (v86)
            goto LABEL_136;
          v86 = __OFADD__(v78, v91);
          v92 = v78 + v91;
          if (v86)
            goto LABEL_139;
          if (v92 >= v83)
          {
            v110 = &v73[16 * v75];
            v112 = *(_QWORD *)v110;
            v111 = *((_QWORD *)v110 + 1);
            v86 = __OFSUB__(v111, v112);
            v113 = v111 - v112;
            if (v86)
              goto LABEL_143;
            v103 = v78 < v113;
            goto LABEL_104;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v104 = *((_QWORD *)v9 + 4);
            v105 = *((_QWORD *)v9 + 5);
            v86 = __OFSUB__(v105, v104);
            v97 = v105 - v104;
            v98 = v86;
            goto LABEL_98;
          }
          v77 = *((_QWORD *)v9 + 4);
          v76 = *((_QWORD *)v9 + 5);
          v86 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          v79 = v86;
        }
        if ((v79 & 1) != 0)
          goto LABEL_135;
        v87 = v12 - 2;
        v93 = &v73[16 * v12 - 32];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v96 = __OFSUB__(v94, v95);
        v97 = v94 - v95;
        v98 = v96;
        if (v96)
          goto LABEL_138;
        v99 = &v73[16 * v75];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v86 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v86)
          goto LABEL_141;
        if (__OFADD__(v97, v102))
          goto LABEL_142;
        if (v97 + v102 >= v78)
        {
          v103 = v78 < v102;
LABEL_104:
          if (v103)
            v75 = v87;
          goto LABEL_106;
        }
LABEL_98:
        if ((v98 & 1) != 0)
          goto LABEL_137;
        v106 = &v73[16 * v75];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v86 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v86)
          goto LABEL_140;
        if (v109 < v97)
          goto LABEL_14;
LABEL_106:
        v114 = v75 - 1;
        if (v75 - 1 >= v12)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v11)
          goto LABEL_155;
        v115 = v9;
        v116 = &v73[16 * v114];
        v117 = *(_QWORD *)v116;
        v118 = &v73[16 * v75];
        v119 = *((_QWORD *)v118 + 1);
        sub_1D2B3C((char *)(v11 + 16 * *(_QWORD *)v116), (char *)(v11 + 16 * *(_QWORD *)v118), v11 + 16 * v119, v138);
        if (v139)
        {
          v9 = v115;
          goto LABEL_127;
        }
        if (v119 < v117)
          goto LABEL_130;
        if (v75 > *((_QWORD *)v115 + 2))
          goto LABEL_131;
        *(_QWORD *)v116 = v117;
        *(_QWORD *)&v73[16 * v114 + 8] = v119;
        v120 = *((_QWORD *)v115 + 2);
        if (v75 >= v120)
          goto LABEL_132;
        v9 = v115;
        v12 = v120 - 1;
        memmove(&v73[16 * v75], v118 + 16, 16 * (v120 - 1 - v75));
        *((_QWORD *)v115 + 2) = v120 - 1;
        if (v120 <= 2)
          goto LABEL_14;
      }
    }
    break;
  }
  if (__OFADD__(v13, v132))
    goto LABEL_152;
  if (v13 + v132 >= v3)
    v53 = v3;
  else
    v53 = v13 + v132;
  if (v53 >= v13)
  {
    if (v14 != v53)
    {
      v127 = v9;
      v54 = v130 + 16 * v14;
      v133 = v53;
      do
      {
        v55 = *(_OWORD *)(v11 + 16 * v14);
        v56 = v13;
        v137 = v54;
        while (1)
        {
          v142 = *((_QWORD *)&v55 + 1);
          v57 = v14;
          v58 = *(_QWORD *)v54;
          v59 = *(_QWORD *)(v54 + 8);
          v60 = v55;
          v61 = swift_getObjectType(v55);
          v62 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v142 + 40);
          swift_unknownObjectRetain(v60);
          v63 = swift_unknownObjectRetain(v58);
          v62(&v145, v61, v142, v63);
          if (!v146)
          {
            sub_52128((uint64_t)&v145, &qword_3B8990);
            goto LABEL_55;
          }
          sub_3F1CC(&v145, (uint64_t)v148);
          v64 = swift_getObjectType(v58);
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v59 + 40))(&v143, v64, v59);
          if (!v144)
            break;
          sub_3F1CC(&v143, (uint64_t)&v145);
          v65 = v149;
          v66 = v150;
          sub_472D0(v148, v149);
          v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 40))(v65, v66);
          v68 = v146;
          v69 = v147;
          sub_472D0(&v145, v146);
          v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 40))(v68, v69);
          sub_34488(&v145);
          sub_34488(v148);
          swift_unknownObjectRelease(v60);
          swift_unknownObjectRelease(v58);
          if (v67 >= v70)
            goto LABEL_56;
          v11 = v151;
          if (!v151)
            goto LABEL_154;
          v14 = v57;
          v55 = *(_OWORD *)(v54 + 16);
          *(_OWORD *)(v54 + 16) = *(_OWORD *)v54;
          *(_OWORD *)v54 = v55;
          v54 -= 16;
          if (v57 == ++v56)
            goto LABEL_57;
        }
        sub_52128((uint64_t)&v143, &qword_3B8990);
        sub_34488(v148);
LABEL_55:
        swift_unknownObjectRelease(v60);
        swift_unknownObjectRelease(v58);
LABEL_56:
        v11 = v151;
        v14 = v57;
LABEL_57:
        ++v14;
        v13 = v135;
        v54 = v137 + 16;
      }
      while (v14 != v133);
      v14 = v133;
      v9 = v127;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1D293C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a3 != a2)
  {
    v4 = a3;
    v33 = *a4;
    v5 = v33 + 16 * a3 - 16;
    while (2)
    {
      v6 = *(_OWORD *)(v33 + 16 * v4);
      v7 = a1;
      v23 = v5;
      while (1)
      {
        v24 = *((_QWORD *)&v6 + 1);
        v8 = *(_QWORD *)v5;
        v9 = *(_QWORD *)(v5 + 8);
        v10 = v6;
        ObjectType = swift_getObjectType(v6);
        v12 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v24 + 40);
        swift_unknownObjectRetain(v10);
        v13 = swift_unknownObjectRetain(v8);
        v12(&v27, ObjectType, v24, v13);
        if (!v28)
          break;
        sub_3F1CC(&v27, (uint64_t)v30);
        v14 = swift_getObjectType(v8);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 40))(&v25, v14, v9);
        if (!v26)
        {
          sub_52128((uint64_t)&v25, &qword_3B8990);
          sub_34488(v30);
          goto LABEL_5;
        }
        sub_3F1CC(&v25, (uint64_t)&v27);
        v15 = v31;
        v16 = v32;
        sub_472D0(v30, v31);
        v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 40))(v15, v16);
        v19 = v28;
        v18 = v29;
        sub_472D0(&v27, v28);
        v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v19, v18);
        sub_34488(&v27);
        sub_34488(v30);
        swift_unknownObjectRelease(v10);
        swift_unknownObjectRelease(v8);
        if (v17 >= v20)
          goto LABEL_6;
        if (!v33)
        {
          __break(1u);
          return;
        }
        v6 = *(_OWORD *)(v5 + 16);
        *(_OWORD *)(v5 + 16) = *(_OWORD *)v5;
        *(_OWORD *)v5 = v6;
        v5 -= 16;
        if (v4 == ++v7)
          goto LABEL_6;
      }
      sub_52128((uint64_t)&v27, &qword_3B8990);
LABEL_5:
      swift_unknownObjectRelease(v10);
      swift_unknownObjectRelease(v8);
LABEL_6:
      ++v4;
      v5 = v23 + 16;
      if (v4 == a2)
        return;
      continue;
    }
  }
}

uint64_t sub_1D2B3C(char *__src, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t ObjectType;
  void (*v40)(__int128 *__return_ptr, uint64_t, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t result;
  char *v51;
  char *v53;
  char *v54;
  char *v55;
  char *v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[3];
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;

  v4 = a2;
  v5 = __src;
  v6 = a2 - __src;
  v7 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v7 = a2 - __src;
  v8 = v7 >> 4;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 4;
  v68 = __src;
  v67 = a4;
  if (v8 >= v10 >> 4)
  {
    if (v9 < -15)
      goto LABEL_52;
    if (a4 != a2 || &a2[16 * v11] <= a4)
      memmove(a4, a2, 16 * v11);
    v32 = &a4[16 * v11];
    v66 = v32;
    v68 = v4;
    if (v5 >= v4 || v9 < 16)
    {
LABEL_51:
      sub_1D3294((void **)&v68, (const void **)&v67, &v66);
      return 1;
    }
    v33 = (char *)(a3 - 16);
    v34 = v4;
    v51 = v5;
    while (1)
    {
      v55 = v32;
      v57 = v4;
      v53 = v33 + 16;
      v35 = *((_QWORD *)v32 - 2);
      v36 = *((_QWORD *)v32 - 1);
      v32 -= 16;
      v38 = *((_QWORD *)v34 - 2);
      v37 = *((_QWORD *)v34 - 1);
      v34 -= 16;
      ObjectType = swift_getObjectType(v35);
      v40 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v36 + 40);
      swift_unknownObjectRetain(v35);
      v41 = swift_unknownObjectRetain(v38);
      v40(&v60, ObjectType, v36, v41);
      if (!v61)
        break;
      sub_3F1CC(&v60, (uint64_t)v63);
      v42 = swift_getObjectType(v38);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v37 + 40))(&v58, v42, v37);
      if (!v59)
      {
        sub_52128((uint64_t)&v58, &qword_3B8990);
        sub_34488(v63);
        goto LABEL_44;
      }
      sub_3F1CC(&v58, (uint64_t)&v60);
      v43 = v64;
      v44 = v65;
      sub_472D0(v63, v64);
      v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 40))(v43, v44);
      v47 = v61;
      v46 = v62;
      sub_472D0(&v60, v61);
      v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 40))(v47, v46);
      sub_34488(&v60);
      sub_34488(v63);
      swift_unknownObjectRelease(v35);
      swift_unknownObjectRelease(v38);
      v49 = (unint64_t)v51;
      if (v45 >= v48)
        goto LABEL_45;
      v32 = v55;
      if (v53 != v57 || v33 >= v57)
        *(_OWORD *)v33 = *(_OWORD *)v34;
      v68 = v34;
LABEL_49:
      if ((unint64_t)v34 > v49)
      {
        v33 -= 16;
        v4 = v34;
        if (v32 > a4)
          continue;
      }
      goto LABEL_51;
    }
    sub_52128((uint64_t)&v60, &qword_3B8990);
LABEL_44:
    swift_unknownObjectRelease(v35);
    swift_unknownObjectRelease(v38);
    v49 = (unint64_t)v51;
LABEL_45:
    v66 = v32;
    v34 = v57;
    if (v53 < v55 || v33 >= v55 || v53 != v55)
      *(_OWORD *)v33 = *(_OWORD *)v32;
    goto LABEL_49;
  }
  if (v6 >= -15)
  {
    v12 = a4;
    if (a4 != __src || &__src[16 * v8] <= a4)
      memmove(a4, __src, 16 * v8);
    v54 = &a4[16 * v8];
    v66 = v54;
    if ((unint64_t)v4 < a3 && v6 >= 16)
    {
      while (1)
      {
        v13 = v4;
        v15 = *(_QWORD *)v4;
        v14 = *((_QWORD *)v4 + 1);
        v17 = *(_QWORD *)v12;
        v16 = *((_QWORD *)v12 + 1);
        v18 = swift_getObjectType(v15);
        v19 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, __n128))(v14 + 40);
        swift_unknownObjectRetain(v15);
        v20 = swift_unknownObjectRetain(v17);
        v19(&v60, v18, v14, v20);
        if (!v61)
          break;
        sub_3F1CC(&v60, (uint64_t)v63);
        v21 = swift_getObjectType(v17);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v16 + 40))(&v58, v21, v16);
        if (!v59)
        {
          sub_52128((uint64_t)&v58, &qword_3B8990);
          sub_34488(v63);
          goto LABEL_21;
        }
        sub_3F1CC(&v58, (uint64_t)&v60);
        v22 = v64;
        v23 = v65;
        sub_472D0(v63, v64);
        v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
        v25 = v5;
        v27 = v61;
        v26 = v62;
        sub_472D0(&v60, v61);
        v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 40);
        v29 = v26;
        v5 = v25;
        v30 = v28(v27, v29);
        sub_34488(&v60);
        sub_34488(v63);
        swift_unknownObjectRelease(v15);
        swift_unknownObjectRelease(v17);
        if (v24 >= v30)
          goto LABEL_22;
        v31 = v13 + 16;
        if (v25 < v13 || v25 >= v31 || v25 != v13)
          *(_OWORD *)v25 = *(_OWORD *)v13;
LABEL_25:
        v5 += 16;
        v68 = v5;
        if (v12 < v54)
        {
          v4 = v31;
          if ((unint64_t)v31 < a3)
            continue;
        }
        goto LABEL_51;
      }
      sub_52128((uint64_t)&v60, &qword_3B8990);
LABEL_21:
      swift_unknownObjectRelease(v15);
      swift_unknownObjectRelease(v17);
LABEL_22:
      v31 = v13;
      if (v5 != v12)
        *(_OWORD *)v5 = *(_OWORD *)v12;
      v12 += 16;
      v67 = v12;
      goto LABEL_25;
    }
    goto LABEL_51;
  }
LABEL_52:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_1D3038(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_319AC(&qword_3C1600);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_1D3130(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1D31DC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

char *sub_1D3294(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1D3340(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_1D33FC(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -72)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6])
      return (char *)memmove(result, v3, 72 * v6);
  }
  return result;
}

char *sub_1D34BC(uint64_t a1)
{
  return sub_1D3038(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D34D0(uint64_t a1)
{
  return sub_F5814(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D34E4(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1D34F8(_QWORD *a1)
{
  return sub_F5AE4(0, a1[2], 0, a1);
}

uint64_t sub_1D350C(_QWORD *a1)
{
  return sub_F6284(0, a1[2], 0, a1);
}

uint64_t sub_1D3520(uint64_t a1)
{
  return sub_F6420(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D3534(uint64_t a1)
{
  return sub_F642C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D3548(_QWORD *a1)
{
  return sub_F640C(0, a1[2], 0, a1);
}

void sub_1D355C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char *a18, unsigned __int8 *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v35;

  v26 = type metadata accessor for BookContentLayoutController(0);
  v35 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  sub_1D3674(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    v35,
    a25,
    a26);
}

void sub_1D3674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char *a18, unsigned __int8 *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t ObjectType;
  char v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t);
  int v75;
  uint64_t v78;
  id v79;
  _QWORD *v83;
  __int128 v84;
  __int128 v85;
  _QWORD *v86;
  _BYTE v87[152];

  v78 = *a18;
  v75 = *a19;
  *(_BYTE *)(a24 + 96) = 0;
  *(_QWORD *)(a24 + 208) = 0;
  swift_unknownObjectWeakInit(a24 + 200, 0);
  *(_QWORD *)(a24 + 320) = _swiftEmptyArrayStorage;
  sub_555CC((uint64_t)v87);
  sub_5B70C((uint64_t)v87, a24 + 328, &qword_3B8DF0);
  *(_QWORD *)(a24 + 472) = _swiftEmptyArrayStorage;
  v29 = sub_319AC(&qword_3C11C0);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  *(_QWORD *)(a24 + 480) = PassthroughSubject.init()();
  *(_QWORD *)(a24 + 488) = &_swiftEmptySetSingleton;
  if (qword_3B5698 != -1)
    swift_once(&qword_3B5698, sub_52378);
  Logger.init(_:)((id)qword_3CEEF0);
  *(_BYTE *)(a24 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_internalState) = 4;
  *(_QWORD *)(a24 + 16) = a1;
  *(_QWORD *)(a24 + 24) = a2;
  *(_QWORD *)(a24 + 32) = a3;
  *(_QWORD *)(a24 + 40) = a4;
  *(_QWORD *)(a24 + 208) = a7;
  v73 = a6;
  swift_unknownObjectWeakAssign(a24 + 200, a6);
  *(_QWORD *)(a24 + 112) = a8;
  *(_QWORD *)(a24 + 120) = a9;
  *(_QWORD *)(a24 + 80) = a12;
  *(_QWORD *)(a24 + 88) = a13;
  *(_QWORD *)(a24 + 48) = a14;
  *(_QWORD *)(a24 + 56) = a26;
  *(_QWORD *)(a24 + 64) = a15;
  *(_QWORD *)(a24 + 72) = a16;
  *(_QWORD *)(a24 + 264) = a17;
  sub_49F1C((uint64_t)a5, a24 + 224);
  v30 = a5[4];
  v31 = a5[3];
  sub_472D0(a5, v31);
  v74 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 64);
  v71 = a1;
  swift_unknownObjectRetain(a1);
  v72 = a3;
  swift_unknownObjectRetain(a3);
  swift_unknownObjectRetain(a8);
  swift_retain();
  swift_unknownObjectRetain(a14);
  swift_unknownObjectRetain(a15);
  swift_retain();
  v32 = v74(v31, v30);
  v33 = v32;
  v34 = *(_QWORD *)(v32 + 16);
  if (v34)
  {
    v86 = _swiftEmptyArrayStorage;
    sub_F5114(0, v34, 0);
    v35 = v33 + 32;
    v36 = _swiftEmptyArrayStorage;
    v37 = a9;
    do
    {
      sub_49F1C(v35, (uint64_t)&v83);
      v38 = v85;
      sub_472D0(&v83, v85);
      v39 = (*(uint64_t (**)(_QWORD, _QWORD))(*((_QWORD *)&v38 + 1) + 16))(v38, *((_QWORD *)&v38 + 1));
      sub_34488(&v83);
      if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
      {
        sub_F5114(0, v36[2] + 1, 1);
        v36 = v86;
      }
      v41 = v36[2];
      v40 = v36[3];
      if (v41 >= v40 >> 1)
      {
        sub_F5114(v40 > 1, v41 + 1, 1);
        v36 = v86;
      }
      v36[2] = v41 + 1;
      v36[v41 + 4] = v39;
      v35 += 40;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease(v33);
  }
  else
  {
    swift_bridgeObjectRelease(v32);
    v36 = _swiftEmptyArrayStorage;
    v37 = a9;
  }
  v83 = v36;
  swift_bridgeObjectRetain(v36);
  sub_1C2E4C((uint64_t *)&v83, sub_1D34D0, (uint64_t (*)(_QWORD *))sub_F76F4);
  swift_bridgeObjectRelease(v36);
  *(_QWORD *)(a24 + 216) = v83;
  if (v75 == 2)
  {
    ObjectType = swift_getObjectType(a8);
    v43 = (unint64_t)((*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(ObjectType, v37) - 4) < 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v43 = v75 & 1;
  }
  v44 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ContentMessageMediator(0)), "init");
  v45 = qword_2F27B0[v78];
  *(_QWORD *)(a24 + 280) = qword_2F27C8[v78];
  *(_QWORD *)(a24 + 288) = v45;
  *(_QWORD *)(a24 + 296) = 1;
  *(_BYTE *)(a24 + 304) = v78;
  *(_BYTE *)(a24 + 305) = v43;
  *(_QWORD *)(a24 + 312) = v44;
  *(_QWORD *)(a24 + 168) = a20;
  *(_QWORD *)(a24 + 176) = a21;
  *(_QWORD *)(a24 + 184) = a22;
  *(_QWORD *)(a24 + 192) = a23;
  *(_QWORD *)(a24 + 128) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a24 + 136) = 0u;
  *(_OWORD *)(a24 + 152) = 0u;
  v83 = _swiftEmptyArrayStorage;
  v84 = 0u;
  v85 = 0u;
  v46 = sub_319AC(&qword_3B7290);
  swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
  v79 = v44;
  *(_QWORD *)(a24 + 104) = CurrentValueSubject.init(_:)(&v83);
  *(_BYTE *)(a24 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_layoutState) = 0;
  LOBYTE(v83) = 0;
  v47 = sub_319AC(&qword_3BCF10);
  swift_allocObject(v47, *(unsigned int *)(v47 + 48), *(unsigned __int16 *)(v47 + 52));
  *(_QWORD *)(a24 + OBJC_IVAR____TtC8BookEPUB27BookContentLayoutController_layoutStateSubject) = CurrentValueSubject.init(_:)(&v83);
  v48 = a5[3];
  v49 = a5[4];
  sub_472D0(a5, v48);
  v50 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v49 + 280))(v48, v49);
  if (v50)
  {
    v51 = v50;
    v52 = objc_msgSend(v50, "contentBlockingRule");

  }
  else
  {
    v52 = 0;
  }
  v53 = a5[3];
  v54 = a5[4];
  sub_472D0(a5, v53);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 104))(v53, v54);
  v56 = type metadata accessor for ContentLoaderViewReusePool(0);
  v57 = swift_allocObject(v56, *(unsigned int *)(v56 + 48), *(unsigned __int16 *)(v56 + 52));
  swift_unknownObjectRetain(a8);
  swift_retain();
  swift_unknownObjectRetain(a14);
  swift_retain();
  *(_QWORD *)(a24 + 272) = sub_C42D0(v55, a10, a11 & 1, a14, a8, a9, a17, (uint64_t)v52, a12, a13, v57, a25, a26);
  v58 = *(_QWORD *)(a24 + 280);
  v59 = *(_QWORD *)(a24 + 296);
  v60 = __OFADD__(v59, v58);
  v61 = v59 + v58;
  if (v60)
  {
    __break(1u);
    goto LABEL_23;
  }
  v62 = *(_QWORD *)(a24 + 288);
  v63 = v61 + v62;
  if (__OFADD__(v61, v62))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if ((v63 & 0x8000000000000000) == 0)
  {
    swift_retain();
    sub_1D42D8(0, v63, (_QWORD *)a24);
    v65 = v64;
    swift_release();
    v66 = *(_QWORD *)(a24 + 320);
    *(_QWORD *)(a24 + 320) = v65;
    swift_bridgeObjectRelease(v66);
    v67 = *(_QWORD *)(a24 + 320);
    swift_retain();
    v68 = swift_bridgeObjectRetain(v67);
    v69 = sub_1D40F4(v68, a24);
    swift_bridgeObjectRelease(v67);
    swift_release();
    v70 = *(_QWORD *)(a24 + 472);
    *(_QWORD *)(a24 + 472) = v69;

    swift_unknownObjectRelease(v71);
    swift_unknownObjectRelease(v72);
    swift_unknownObjectRelease(v73);
    swift_unknownObjectRelease(a8);
    swift_release();
    swift_unknownObjectRelease(a14);
    swift_unknownObjectRelease(a15);
    swift_release();
    swift_bridgeObjectRelease(v70);
    sub_34488(a5);
    return;
  }
LABEL_24:
  __break(1u);
  swift_release();
  __break(1u);
}

BOOL _s8BookEPUB0A23ContentLayoutControllerC9SelectionV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;

  if ((static UUID.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for BookContentLayoutController.Selection(0) + 20);
  v5 = a1 + v4;
  v6 = *(_QWORD *)(a1 + v4);
  v7 = *(_QWORD *)(a1 + v4 + 8);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = (_QWORD *)(a2 + v4);
  v10 = v9[1];
  v11 = v9[2];
  v12 = v6 == *v9 && v7 == v10;
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *v9, v9[1], 0) & 1) == 0)
    return 0;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  v13 = sub_65864(v8, v11);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);
  return v13;
}

void sub_1D3E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, __n128);
  __n128 v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v4 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = 0;
    v36 = (uint64_t *)(a2 + 40);
    v37 = a1 + 32;
    v38 = _swiftEmptyArrayStorage;
    v34 = v10;
    v35 = a2;
    do
    {
      if (v11 <= v10)
        v12 = v10;
      else
        v12 = v11;
      v13 = v11;
      v33 = v12;
      while (1)
      {
        if (v13 == v12)
        {
          __break(1u);
          return;
        }
        v14 = v13 + 1;
        v15 = *(_QWORD *)(a2 + 16);
        if (v15)
          break;
LABEL_7:
        v13 = v14;
        if (v14 == v10)
          return;
      }
      v39 = v13 + 1;
      v40 = *(_OWORD *)(v37 + 16 * v13);
      v16 = v40;
      ObjectType = swift_getObjectType(v40);
      v43 = *((_QWORD *)&v40 + 1);
      v44 = ObjectType;
      v42 = *(void (**)(uint64_t, uint64_t))(*((_QWORD *)&v40 + 1) + 8);
      v45 = v16;
      swift_unknownObjectRetain(v16);
      swift_bridgeObjectRetain(a2);
      v18 = v36;
      while (1)
      {
        v20 = *(v18 - 1);
        v19 = *v18;
        v21 = swift_getObjectType(v20);
        v22 = *(void (**)(uint64_t, uint64_t, __n128))(v19 + 8);
        v23 = swift_unknownObjectRetain(v20);
        v22(v21, v19, v23);
        v42(v44, v43);
        v24 = sub_34284(&qword_3C1618, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v25 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v6, v4, v24);
        v26 = *(void (**)(char *, uint64_t))(v41 + 8);
        v26(v6, v4);
        v26(v9, v4);
        swift_unknownObjectRelease(v20);
        if ((v25 & 1) == 0)
          break;
        v18 += 2;
        if (!--v15)
        {
          swift_unknownObjectRelease(v45);
          a2 = v35;
          swift_bridgeObjectRelease(v35);
          v12 = v33;
          v10 = v34;
          v14 = v39;
          goto LABEL_7;
        }
      }
      a2 = v35;
      swift_bridgeObjectRelease(v35);
      v27 = v38;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
      v29 = v27;
      v46 = v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_F51F0(0, v27[2] + 1, 1);
        v29 = v46;
      }
      v31 = v29[2];
      v30 = v29[3];
      if (v31 >= v30 >> 1)
      {
        sub_F51F0(v30 > 1, v31 + 1, 1);
        v29 = v46;
      }
      v29[2] = v31 + 1;
      v38 = v29;
      *(_OWORD *)&v29[2 * v31 + 4] = v40;
      v10 = v34;
      v11 = v39;
    }
    while (v39 != v34);
  }
  else
  {
    v38 = _swiftEmptyArrayStorage;
  }
}

_QWORD *sub_1D40F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void (*v11)(uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)(v3);
    v6 = *(_QWORD *)(a2 + 480);
    v7 = (uint64_t *)(a1 + 40);
    do
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      ObjectType = swift_getObjectType(v8);
      v11 = *(void (**)(uint64_t, uint64_t, __n128))(v9 + 88);
      v12 = swift_unknownObjectRetain(v8);
      v11(ObjectType, v9, v12);
      v13 = swift_allocObject(&unk_387EC8, 24, 7);
      swift_weakInit(v13 + 16, v6);
      v14 = swift_allocObject(&unk_387EF0, 32, 7);
      *(_QWORD *)(v14 + 24) = v9;
      swift_unknownObjectWeakInit(v14 + 16, v8);
      v15 = swift_allocObject(&unk_387F18, 32, 7);
      *(_QWORD *)(v15 + 16) = v14;
      *(_QWORD *)(v15 + 24) = v13;
      v16 = swift_allocObject(&unk_387F40, 32, 7);
      *(_QWORD *)(v16 + 16) = sub_1D5650;
      *(_QWORD *)(v16 + 24) = v15;
      v17 = sub_319AC(&qword_3B8EB0);
      v18 = sub_3DCC0(&qword_3B8EB8, &qword_3B8EB0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v19 = Publisher<>.sink(receiveValue:)(sub_542B4, v16, v17, v18);
      swift_release();
      swift_unknownObjectRelease(v8);
      swift_release();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v21 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
      specialized ContiguousArray._endMutation()(v22);
      v7 += 2;
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_1D42D8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23[24];
  _QWORD *v24;

  v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (!v3)
    return;
  v24 = _swiftEmptyArrayStorage;
  sub_F51F0(0, v3 & ~(v3 >> 63), 0);
  if (a2 < a1 || v3 < 0)
  {
LABEL_11:
    __break(1u);
    return;
  }
  v7 = v24;
  v8 = a3[22];
  v22 = a3[6];
  v9 = a3[34];
  v20 = a3[33];
  v21 = a3[7];
  v19 = *(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 152);
  swift_beginAccess(a3 + 14, v23, 0, 0);
  do
  {
    v10 = a3[14];
    v11 = a3[15];
    v12 = (void *)a3[39];
    swift_unknownObjectRetain(v10);
    v13 = v12;
    swift_unknownObjectRetain(v22);
    swift_retain();
    swift_retain();
    v14 = v19(v10, v11, v12, v22, v21, v20, v9);
    v24 = v7;
    v15 = v8;
    v17 = v7[2];
    v16 = v7[3];
    if (v17 >= v16 >> 1)
    {
      sub_F51F0(v16 > 1, v17 + 1, 1);
      v7 = v24;
    }
    v7[2] = v17 + 1;
    v18 = &v7[2 * v17];
    v18[4] = v14;
    v18[5] = v15;
    --v3;
    v8 = v15;
  }
  while (v3);
}

void sub_1D4470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  int64_t v20;

  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v20 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v9 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = v15[1];
    v19[2] = *v15;
    v19[3] = v16;
    v19[0] = a2;
    v19[1] = a3;
    v17 = sub_5C170();
    swift_bridgeObjectRetain(v16);
    if ((StringProtocol.contains<A>(_:)(v19, &type metadata for String, &type metadata for String, v17, v17) & 1) != 0)
    {
LABEL_23:
      swift_release();
      return;
    }
    swift_bridgeObjectRelease(v16);
    if (v8)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v20)
      goto LABEL_23;
    v13 = *(_QWORD *)(v18 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v20)
        goto LABEL_23;
      v13 = *(_QWORD *)(v18 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v20)
          goto LABEL_23;
        v13 = *(_QWORD *)(v18 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v20)
            goto LABEL_23;
          v13 = *(_QWORD *)(v18 + 8 * v9);
          if (!v13)
          {
            v14 = v12 + 4;
            if (v14 >= v20)
              goto LABEL_23;
            v13 = *(_QWORD *)(v18 + 8 * v14);
            v9 = v14;
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_19:
    v8 = (v13 - 1) & v13;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v20)
      goto LABEL_23;
    v13 = *(_QWORD *)(v18 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

_QWORD *sub_1D4674(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(_QWORD *, uint64_t, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v21[3];
  unint64_t v22;

  v5 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  v22 = (unint64_t)_swiftEmptyArrayStorage;
  if (v5)
  {
    swift_bridgeObjectRetain(a1);
    v10 = (uint64_t *)(a1 + 40);
    do
    {
      v12 = *(v10 - 1);
      v13 = *v10;
      ObjectType = swift_getObjectType(v12);
      v21[0] = a2;
      *(double *)&v21[1] = a3;
      *(double *)&v21[2] = a4;
      v15 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, __n128))(v13 + 176);
      v16 = swift_unknownObjectRetain(v12);
      v17 = v15(v21, ObjectType, v13, v16);
      swift_unknownObjectRelease(v12);
      if (v17)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v20 = *(_QWORD *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8));
        v19 = *(_QWORD *)((char *)&dword_18 + (v22 & 0xFFFFFFFFFFFFFF8));
        if (v20 >= v19 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1);
        v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v17);
        specialized Array._endMutation()(v11);
      }
      v10 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease(a1);
    return (_QWORD *)v22;
  }
  return result;
}

uint64_t sub_1D479C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

BOOL sub_1D47AC(_QWORD *a1)
{
  uint64_t v1;

  return *a1 == *(_QWORD *)(v1 + 16);
}

unint64_t sub_1D47C4()
{
  unint64_t result;

  result = qword_3C11F0;
  if (!qword_3C11F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BookContentLayoutController.LayoutState, &type metadata for BookContentLayoutController.LayoutState);
    atomic_store(result, (unint64_t *)&qword_3C11F0);
  }
  return result;
}

double sub_1D4810@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  double result;
  _BYTE v6[24];

  v3 = *a1;
  swift_beginAccess(*a1 + 112, v6, 0, 0);
  v4 = *(_OWORD *)(v3 + 112);
  *a2 = v4;
  *(_QWORD *)&result = swift_unknownObjectRetain(v4).n128_u64[0];
  return result;
}

uint64_t sub_1D4860()
{
  return type metadata accessor for BookContentLayoutController(0);
}

uint64_t type metadata accessor for BookContentLayoutController(uint64_t a1)
{
  return sub_3E7A8(a1, qword_3C1220, (uint64_t)&nominal type descriptor for BookContentLayoutController);
}

uint64_t sub_1D487C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[27];

  v4[0] = &unk_2F2480;
  v4[1] = &unk_2F2480;
  v4[2] = &unk_2F2480;
  v4[3] = &unk_2F2480;
  v4[4] = (char *)&value witness table for () + 64;
  v4[5] = &unk_2F2498;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = &unk_2F2480;
  v4[8] = &unk_2F24B0;
  v4[9] = &unk_2F24C8;
  v4[10] = &unk_2F24C8;
  v4[11] = &unk_2F24E0;
  v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[13] = &unk_2F24B0;
  v4[16] = &unk_2F24F8;
  v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[14] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[15] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[19] = &unk_2F2510;
  v4[20] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[21] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[22] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[23] = *(_QWORD *)(result - 8) + 64;
    v4[24] = &unk_2F2528;
    v4[25] = &unk_2F2540;
    v4[26] = (char *)&value witness table for Builtin.NativeObject + 64;
    return swift_updateClassMetadata2(a1, 256, 27, v4, a1 + 80);
  }
  return result;
}

uint64_t method lookup function for BookContentLayoutController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookContentLayoutController);
}

uint64_t dispatch thunk of BookContentLayoutController.currentVisibleContent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of BookContentLayoutController.reloadAction.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of BookContentLayoutController.reloadAction.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of BookContentLayoutController.convertToUI(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of BookContentLayoutController.convertToDocument(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of BookContentLayoutController.adjustContentForSingleLastPageVisibility.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of BookContentLayoutController.contentLayoutProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of BookContentLayoutController.__allocating_init(currentLocationProvider:currentLocationController:bookEntity:contentHostEnvironmentProvider:contentLayoutProvider:imageFilterMode:lineGuideEnabled:reloadAction:paginationProvider:pageNumberProvider:stylesheetProvider:configuration:currentContentLocation:contentLoadingClass:snapshotLoadingClass:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t dispatch thunk of BookContentLayoutController.accessoryViewBoundsChangedPublisher(forOrdinal:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of BookContentLayoutController.layoutStatePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

double destroy for BookContentLayoutController.PartialContent(_QWORD *a1)
{
  double result;

  swift_bridgeObjectRelease(*a1);
  swift_unknownObjectRelease(a1[1]);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1[3]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for BookContentLayoutController.PartialContent(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = v5;
  v6 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v3);
  swift_unknownObjectRetain(v5);
  swift_unknownObjectRetain(v6);
  return a1;
}

uint64_t *assignWithCopy for BookContentLayoutController.PartialContent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a2[2];
  v8 = a1[1];
  a1[1] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v8);
  a1[2] = v7;
  v9 = a2[3];
  v10 = a2[4];
  v11 = a1[3];
  a1[3] = v9;
  swift_unknownObjectRetain(v9);
  swift_unknownObjectRelease(v11);
  a1[4] = v10;
  return a1;
}

uint64_t assignWithTake for BookContentLayoutController.PartialContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease(v4);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease(v6);
  *(_QWORD *)(a1 + 32) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for BookContentLayoutController.PartialContent()
{
  return &type metadata for BookContentLayoutController.PartialContent;
}

uint64_t storeEnumTagSinglePayload for BookContentLayoutController.LayoutState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D4C3C + 4 * byte_2F2277[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D4C70 + 4 * byte_2F2272[v4]))();
}

uint64_t sub_1D4C70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4C78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D4C80);
  return result;
}

uint64_t sub_1D4C8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D4C94);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D4C98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D4CA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookContentLayoutController.LayoutState()
{
  return &type metadata for BookContentLayoutController.LayoutState;
}

uint64_t *initializeBufferWithCopyOfBuffer for BookContentLayoutController.Selection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v13);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[2];
    v9[2] = v12;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v12);
  }
  return a1;
}

uint64_t destroy for BookContentLayoutController.Selection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease(*(_QWORD *)(v5 + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(v5 + 16));
}

uint64_t initializeWithCopy for BookContentLayoutController.Selection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[2];
  v8[2] = v11;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v11);
  return a1;
}

uint64_t assignWithCopy for BookContentLayoutController.Selection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v10 = v9[1];
  v11 = *(_QWORD *)(a1 + v7 + 8);
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = v9[2];
  v13 = v8[2];
  v8[2] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t initializeWithTake for BookContentLayoutController.Selection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for BookContentLayoutController.Selection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  v11 = *(_QWORD *)(a1 + v7 + 8);
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease(v11);
  v12 = v8[2];
  v8[2] = v9[2];
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookContentLayoutController.Selection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1D4FB0);
}

uint64_t sub_1D4FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for BookContentLayoutController.Selection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1D503C);
}

uint64_t sub_1D503C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1D50B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_2F2590;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for BookContentLayoutController.InternalLayoutState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D5174 + 4 * byte_2F2281[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D51A8 + 4 * byte_2F227C[v4]))();
}

uint64_t sub_1D51A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D51B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D51B8);
  return result;
}

uint64_t sub_1D51C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D51CCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D51D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D51D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookContentLayoutController.InternalLayoutState()
{
  return &type metadata for BookContentLayoutController.InternalLayoutState;
}

unint64_t sub_1D51F8()
{
  unint64_t result;

  result = qword_3C15D8;
  if (!qword_3C15D8)
  {
    result = swift_getWitnessTable(&unk_2F2604, &type metadata for BookContentLayoutController.InternalLayoutState);
    atomic_store(result, &qword_3C15D8);
  }
  return result;
}

uint64_t sub_1D523C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_1D5250()
{
  uint64_t v0;

  return sub_1C8CD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D5258(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1D5268(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1D5270()
{
  uint64_t v0;

  swift_release();
  sub_34488((_QWORD *)(v0 + 24));
  swift_release();

  return swift_deallocObject(v0, 80, 7);
}

void sub_1D52AC(_BYTE *a1)
{
  uint64_t v1;

  sub_1C8AC0(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(_QWORD *)(v1 + 64), *(NSObject **)(v1 + 72));
}

uint64_t *sub_1D52C4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = a1[19];
  v9 = a1[18];
  v3 = a1[20];
  v4 = a1[21];
  v5 = a1[22];
  v6 = a1[23];
  v7 = a1[24];
  sub_49BA4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_49BA4(v9, v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_1D53C4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_unknownObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  swift_bridgeObjectRelease(v0[11]);
  swift_bridgeObjectRelease(v0[13]);
  swift_release(v0[16]);
  return swift_deallocObject(v0, 144, 7);
}

uint64_t sub_1D5418(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = *((_QWORD *)v1 + 3);
  v13 = *((_QWORD *)v1 + 2);
  v4 = *((_QWORD *)v1 + 8);
  v10 = *((_QWORD *)v1 + 7);
  v11 = *((_QWORD *)v1 + 6);
  v5 = *((_QWORD *)v1 + 9);
  v6 = *((_QWORD *)v1 + 10);
  v7 = v1[14];
  v8 = (_QWORD *)swift_task_alloc(dword_3C15EC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_3F0C0;
  return sub_1D0538(v7, a1, v13, v12, v11, v10, v4, v5, v6);
}

unint64_t sub_1D54F8()
{
  unint64_t result;

  result = qword_3C15F8;
  if (!qword_3C15F8)
  {
    result = swift_getWitnessTable(&unk_2F2768, &type metadata for EmptyRectsError);
    atomic_store(result, (unint64_t *)&qword_3C15F8);
  }
  return result;
}

void sub_1D553C(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1CE1D0(a1, v1);
}

uint64_t sub_1D5544()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));

  sub_34488((_QWORD *)(v0 + 112));
  return swift_deallocObject(v0, 152, 7);
}

uint64_t sub_1D5588()
{
  uint64_t v0;

  swift_release();
  sub_34488((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1D55B4(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_1D1834(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

unint64_t sub_1D55C0()
{
  unint64_t result;

  result = qword_3C1608;
  if (!qword_3C1608)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentLoadingError, &type metadata for ContentLoadingError);
    atomic_store(result, (unint64_t *)&qword_3C1608);
  }
  return result;
}

uint64_t sub_1D5604()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1D5628()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

void sub_1D5650()
{
  uint64_t v0;

  sub_1C7B14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D5658()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1D567C()
{
  uint64_t v0;

  return ContentLoaderView.prepareForReuse(completion:)(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1D5684()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1D56B0(uint64_t a1)
{
  uint64_t v1;

  sub_1C6140(a1, *(_QWORD *)(v1 + 16), *(dispatch_group_t *)(v1 + 24));
}

uint64_t sub_1D56BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_1D56E8()
{
  uint64_t v0;

  return sub_1C6194(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_1D56F0(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1C90E8(a1, v1);
}

uint64_t sub_1D56F8()
{
  uint64_t v0;

  swift_unownedRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1D571C(__int128 *a1)
{
  uint64_t v1;

  sub_1C92B0(a1, *(_QWORD *)(v1 + 16));
}

const char *sub_1D5724()
{
  return "BKSettingFilterBrightImages";
}

id sub_1D5730@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "BKSettingFilterBrightImages");
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D5760(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setBKSettingFilterBrightImages:", *a1);
}

double sub_1D5774(char *a1)
{
  uint64_t v1;

  return sub_1C9BF4(a1, v1);
}

void sub_1D5784(uint64_t a1)
{
  uint64_t v1;

  sub_1C9D04(a1, v1);
}

double sub_1D578C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1D1D78(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1D5798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_319AC(&qword_3C1638);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1D57FC(uint64_t a1)
{
  sub_319AC(&qword_3C1638);
  return sub_1D1E8C(a1);
}

ValueMetadata *type metadata accessor for EmptyRectsError()
{
  return &type metadata for EmptyRectsError;
}

uint64_t dispatch thunk of ElementEntityReference.init(rects:pageOffset:entity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

double sub_1D586C()
{
  uint64_t v0;
  double result;

  v0 = sub_1D5BBC();
  *(_QWORD *)&result = swift_bridgeObjectRetain(v0).n128_u64[0];
  return result;
}

uint64_t sub_1D5880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  swift_beginAccess(v1 + 16, v5, 1, 0);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t (*sub_1D58C4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_1D5900(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __n128 v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t WitnessTable;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];

  v2 = v1;
  v4 = *v1;
  v3 = v1 + 2;
  v5 = *(_QWORD *)(v4 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(a1);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v6 + 16))(v8);
  v9 = swift_beginAccess(v3, v18, 33, 0);
  v10 = type metadata accessor for Array(0, v5, v9);
  Array.insert(_:at:)(v8, 0, v10);
  result = swift_endAccess(v18);
  if ((uint64_t)v2[3] >= 1)
  {
    swift_beginAccess(v3, v18, 0, 0);
    v12 = v2[2];
    v13 = swift_bridgeObjectRetain(v12);
    v14 = Array.count.getter(v13, v5);
    result = swift_bridgeObjectRelease(v12);
    if (v2[3] < v14)
    {
      swift_beginAccess(v3, v17, 33, 0);
      WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v10);
      v16 = swift_getWitnessTable(&protocol conformance descriptor for [A], v10);
      RangeReplaceableCollection<>.removeLast()(v10, WitnessTable, v16);
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
      return swift_endAccess(v17);
    }
  }
  return result;
}

uint64_t sub_1D5A70@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t WitnessTable;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  _BYTE v12[24];

  v3 = *v1;
  v4 = swift_beginAccess(v1 + 2, v12, 0, 0);
  v11[0] = v1[2];
  v5 = *(_QWORD *)(v3 + 80);
  v6 = type metadata accessor for Array(0, v5, v4);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
  if ((Collection.isEmpty.getter(v6, WitnessTable) & 1) != 0)
  {
    v8 = 1;
  }
  else
  {
    swift_beginAccess(v1 + 2, v11, 33, 0);
    v9 = swift_getWitnessTable(&protocol conformance descriptor for [A], v6);
    RangeReplaceableCollection.removeFirst()(v6, v9);
    swift_endAccess(v11);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, v8, 1, v5);
}

uint64_t sub_1D5B64()
{
  uint64_t *v0;
  uint64_t v1;
  __n128 v2;
  _BYTE v4[24];

  v1 = *v0;
  v2 = swift_beginAccess(v0 + 2, v4, 33, 0);
  type metadata accessor for Array(0, *(_QWORD *)(v1 + 80), v2);
  Array.removeAll(keepingCapacity:)(0);
  return swift_endAccess(v4);
}

uint64_t sub_1D5BBC()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(_QWORD *)(v0 + 16);
}

double sub_1D5BEC@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  double result;

  v2 = sub_1D5BBC();
  *a1 = v2;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v2).n128_u64[0];
  return result;
}

uint64_t sub_1D5C14(_QWORD *a1)
{
  uint64_t v1;

  swift_bridgeObjectRetain(*a1);
  return sub_1D5880(v1);
}

uint64_t sub_1D5C3C()
{
  return 8;
}

_QWORD *sub_1D5C48(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1D5C54(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 88);
}

uint64_t type metadata accessor for Stack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_3F27C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Stack);
}

uint64_t method lookup function for Stack(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Stack);
}

void BookThemeEntity.themeSeparatorColor.getter()
{
  uint64_t v1;

  v1 = type metadata accessor for Color.RGBColorSpace(0);
  __chkstk_darwin(v1);
  __asm { BR              X10 }
}

uint64_t sub_1D5D28()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  double v3;
  double v4;
  double v5;

  (*(void (**)(uint64_t, _QWORD))(v0 + 104))(v1, enum case for Color.RGBColorSpace.sRGB(_:));
  if ((v2 & 1) != 0)
  {
    v3 = 0.329411765;
    v4 = 0.345098039;
    v5 = 0.6;
  }
  else
  {
    v3 = 0.235294118;
    v4 = 0.262745098;
    v5 = 0.29;
  }
  return Color.init(_:red:green:blue:opacity:)(v1, v3, v3, v4, v5);
}

uint64_t sub_1D60AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1D60BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

void sub_1D60CC(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  uint64_t v10;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t i;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  __n128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char isUniquelyReferenced_nonNull_native;
  BOOL v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  char *v101;
  char *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD v114[3];
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118[24];
  char v119[24];
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v105 = a5;
  v106 = a4;
  v19 = type metadata accessor for Date(0);
  __chkstk_darwin(v19);
  v102 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v101 = (char *)&v94 - v23;
  v100 = *a2;
  v104 = *a3;
  v24 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a7 + 64);
  v95 = v10;
  v94 = a6;
  v96 = a7;
  v25 = v24(a6, a7, v22);
  v123 = v25;
  swift_bridgeObjectRetain(v25);
  sub_141A18(&v123);
  v97 = 0;
  swift_bridgeObjectRelease(v25);
  v26 = v123;
  v27 = _swiftEmptyArrayStorage;
  v99 = *(_QWORD *)(v123 + 16);
  v103 = a1;
  if (v99)
  {
    v107 = v123 + 32;
    swift_retain();
    v28 = 0;
    v29 = 0;
    v30 = &_swiftEmptyDictionarySingleton;
    v98 = v26;
    while (v29 < *(_QWORD *)(v26 + 16))
    {
      v112 = v28;
      sub_49F1C(v107 + 40 * v29, (uint64_t)&v123);
      sub_49F1C((uint64_t)&v123, (uint64_t)&v120);
      v111 = v29;
      if (a1 < 2)
      {
        sub_34488(&v120);
        v38 = a1;
      }
      else
      {
        v31 = v121;
        v32 = v122;
        sub_472D0(&v120, v121);
        v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
        if (!*(_QWORD *)(v26 + 16))
          goto LABEL_42;
        v34 = v33;
        sub_49F1C(v107, (uint64_t)v114);
        v35 = v115;
        v36 = v116;
        sub_472D0(v114, v115);
        v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
        sub_34488(v114);
        sub_34488(&v120);
        if (v34 == v37)
          v38 = 1;
        else
          v38 = a1;
      }
      v39 = v124;
      v40 = v125;
      sub_472D0(&v123, v124);
      v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v39, v40);
      if (v38 < 0)
        goto LABEL_40;
      v113 = v30;
      if (v38)
      {
        v42 = v41;
        v114[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)(v38);
        v43 = type metadata accessor for PagePaginationEntity();
        for (i = 0; i != v38; ++i)
        {
          v45 = swift_allocObject(v43, 144);
          *(_OWORD *)(v45 + 128) = 0u;
          *(_OWORD *)(v45 + 112) = 0u;
          *(_QWORD *)(v45 + 16) = i;
          *(_QWORD *)(v45 + 24) = v42;
          *(_QWORD *)(v45 + 32) = 0;
          *(_QWORD *)(v45 + 40) = 0;
          *(double *)(v45 + 48) = a8;
          *(double *)(v45 + 56) = a9;
          *(_QWORD *)(v45 + 64) = _swiftEmptyArrayStorage;
          *(_QWORD *)(v45 + 72) = _swiftEmptyArrayStorage;
          *(_QWORD *)(v45 + 80) = _swiftEmptyArrayStorage;
          *(_QWORD *)(v45 + 88) = _swiftEmptyArrayStorage;
          *(_QWORD *)(v45 + 96) = _swiftEmptyArrayStorage;
          *(_QWORD *)(v45 + 104) = _swiftEmptyArrayStorage;
          swift_beginAccess(v45 + 112, v119, 1, 0);
          v46 = *(_QWORD *)(v45 + 120);
          *(_QWORD *)(v45 + 112) = 0;
          *(_QWORD *)(v45 + 120) = 0;
          swift_bridgeObjectRelease(v46);
          swift_beginAccess(v45 + 128, v118, 1, 0);
          v47 = *(_QWORD *)(v45 + 136);
          *(_QWORD *)(v45 + 128) = 0;
          *(_QWORD *)(v45 + 136) = 0;
          swift_bridgeObjectRelease(v47);
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v48);
          v49 = *(_QWORD *)(v114[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v49);
          v50 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v45);
          specialized ContiguousArray._endMutation()(v50);
        }
        v51 = v114[0];
      }
      else
      {
        v51 = (uint64_t)_swiftEmptyArrayStorage;
      }
      v52 = v124;
      v53 = v125;
      sub_472D0(&v123, v124);
      v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v52, v53);
      v110 = v54;
      v55 = v124;
      v56 = v125;
      sub_472D0(&v123, v124);
      v108 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 16))(v55, v56);
      if ((unint64_t)v51 >> 62)
      {
        if (v51 < 0)
          v72 = v51;
        else
          v72 = v51 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v51);
        a1 = _CocoaArrayWrapper.endIndex.getter(v72);
        swift_bridgeObjectRelease(v51);
      }
      else
      {
        a1 = *(_QWORD *)((char *)&dword_10 + (v51 & 0xFFFFFFFFFFFFF8));
      }
      LOBYTE(v120) = v100;
      LOBYTE(v114[0]) = v104;
      v57 = swift_bridgeObjectRetain(v51);
      v58 = (uint64_t)v101;
      static Date.distantPast.getter(v57);
      v59 = sub_38184((uint64_t)_swiftEmptyArrayStorage);
      v60 = sub_38190((uint64_t)_swiftEmptyArrayStorage);
      v61 = sub_3819C((uint64_t)_swiftEmptyArrayStorage);
      v62 = sub_381A8((uint64_t)_swiftEmptyArrayStorage);
      v117 = 0;
      v63 = v105;
      v64 = swift_bridgeObjectRetain(v105);
      v65 = v102;
      static Date.distantPast.getter(v64);
      v66 = type metadata accessor for DocumentPaginationEntity(0);
      swift_allocObject(v66, *(unsigned int *)(v66 + 48));
      v93 = (uint64_t)v65;
      v67 = v112;
      v68 = DocumentPaginationEntity.init(ordinal:pageSize:pageWidthIncludingGutter:paginationComplete:pageCount:startingPageOffset:paginationDirection:contentSize:paginationMode:pages:highlightEntities:bookmarkEntities:latestModifiedAnnotationDate:latestModifiedHistoryDate:anchorEntitiesByName:mediaEntitiesByName:expandableEntitiesByName:historyEntitiesByName:isVerticalDocument:configurationKey:source:)(v108, 0, a1, v112, (char *)&v120, (char *)v114, v51, (uint64_t)_swiftEmptyArrayStorage, a8, a9, a10, a8, a9, (uint64_t)_swiftEmptyArrayStorage, v58, v93, v59, v60, v61,
              v62,
              0,
              v106,
              v63,
              &v117);
      v69 = v113;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v113);
      v120 = v69;
      v26 = v110;
      sub_17D804(v68, v109, v110, isUniquelyReferenced_nonNull_native);
      v30 = v120;
      swift_bridgeObjectRelease(v51);
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(0x8000000000000000);
      v71 = __OFADD__(v67, a1);
      v28 = v67 + a1;
      if (v71)
        goto LABEL_41;
      v29 = v111 + 1;
      sub_34488(&v123);
      a1 = v103;
      v26 = v98;
      if (v29 == v99)
      {
        swift_release_n(v98);
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
  }
  else
  {
    swift_release();
    v30 = &_swiftEmptyDictionarySingleton;
LABEL_26:
    swift_bridgeObjectRetain_n(v30, 2);
    v73 = sub_F48A8((uint64_t)v30);
    swift_bridgeObjectRelease(v30);
    v123 = (uint64_t)v73;
    v74 = v97;
    sub_E6878(&v123);
    if (v74)
      goto LABEL_52;
    swift_bridgeObjectRelease(v30);
    v26 = v123;
    if ((v123 & 0x8000000000000000) == 0 && (v123 & 0x4000000000000000) == 0)
    {
      v75 = *(_QWORD *)(v123 + 16);
      if (!v75)
        goto LABEL_44;
LABEL_30:
      v120 = _swiftEmptyArrayStorage;
      sub_F5114(0, v75 & ~(v75 >> 63), 0);
      if (v75 < 0)
      {
LABEL_51:
        __break(1u);
LABEL_52:
        swift_release();
        __break(1u);
        return;
      }
      v113 = v30;
      v76 = 0;
      v27 = v120;
      do
      {
        if ((v26 & 0xC000000000000001) != 0)
        {
          v77 = specialized _ArrayBuffer._getElementSlowPath(_:)(v76, v26);
        }
        else
        {
          v77 = *(_QWORD *)(v26 + 8 * v76 + 32);
          swift_retain();
        }
        v78 = (uint64_t *)(v77 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount);
        swift_beginAccess(v77 + OBJC_IVAR____TtC8BookEPUB24DocumentPaginationEntity_pageCount, &v123, 0, 0);
        v79 = *v78;
        swift_release();
        v120 = v27;
        v81 = v27[2];
        v80 = v27[3];
        v82 = v81 + 1;
        if (v81 >= v80 >> 1)
        {
          sub_F5114(v80 > 1, v81 + 1, 1);
          v27 = v120;
        }
        ++v76;
        v27[2] = v82;
        v27[v81 + 4] = v79;
      }
      while (v75 != v76);
      a1 = v103;
      v30 = v113;
LABEL_45:
      v84 = 0;
      v85 = 0;
      while (1)
      {
        v86 = v27[v84 + 4];
        v71 = __OFADD__(v85, v86);
        v85 += v86;
        if (v71)
          break;
        if (v82 == ++v84)
          goto LABEL_48;
      }
      __break(1u);
      goto LABEL_51;
    }
  }
  swift_bridgeObjectRetain(v26);
  v75 = _CocoaArrayWrapper.endIndex.getter(v83);
  swift_release();
  if (v75)
    goto LABEL_30;
LABEL_44:
  v82 = _swiftEmptyArrayStorage[2];
  if (v82)
    goto LABEL_45;
  v85 = 0;
LABEL_48:
  v87 = swift_bridgeObjectRelease(v27);
  v88 = v96;
  v89 = v94;
  LOBYTE(v120) = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v96 + 128))(v94, v96, v87) & 1;
  LOBYTE(v114[0]) = v104;
  v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 312))(v89, v88);
  v91 = type metadata accessor for BookPaginationEntity();
  swift_allocObject(v91, 144);
  swift_bridgeObjectRetain(v105);
  BookPaginationEntity.init(paginationComplete:pageCount:columnCount:documents:chapters:navigationDirection:paginationMode:hasPhysicalPages:configurationKey:)(0, v85, a1, v26, (uint64_t)_swiftEmptyArrayStorage, &v120, v114, v90 & 1, v106, v92);
  swift_bridgeObjectRelease(v30);
}

void sub_1D69B4(id a1)
{
  operator new();
}

void sub_1D69F4()
{
  operator delete();
}

void sub_1D6AF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1D6C90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D7000(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  uint64_t v13;

  objc_begin_catch(a1);
  if (!v13)
    JUMPOUT(0x1D6F90);
  JUMPOUT(0x1D6F84);
}

void sub_1D7190(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D7364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_1D73D4(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v4 = a2;
  v3 = *(_QWORD *)(a1 + 40);
  if (v3)
    (*(void (**)(uint64_t, _QWORD, id))(v3 + 16))(v3, *(_QWORD *)(a1 + 32), v4);

}

void sub_1D741C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1D7540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1D7564(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;

  v4 = a2;
  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v4);

}

void sub_1D75A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1D7710(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D778C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1D77E4(id a1)
{
  operator new();
}

void sub_1D7824()
{
  operator delete();
}

id sub_1D78BC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "prewarmSync");
}

void sub_1D7950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)bb74bdd798ceadff5c1f0c2b;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void tpZFqotcPt::tpZFqotcPt(tpZFqotcPt *this)
{
  id *p_var3;
  dispatch_queue_t v3;
  id var6;
  NSMutableDictionary *v5;
  id v6;
  NSMutableDictionary *v7;
  id var4;

  *(_OWORD *)&this->var3 = 0u;
  p_var3 = &this->var3;
  this->var0 = (void **)off_388320;
  *(_QWORD *)&this->var1 = 0;
  *(_QWORD *)this->var2.var1 = 0;
  *(_QWORD *)&this->var2.var1[8] = 0;
  *(_DWORD *)&this->var2.var1[16] = 0;
  *(_OWORD *)&this->var5 = 0u;
  sub_1D8040(CFSTR("im1 - start"));
  tpZFqotcPt::aWe3ud7al1w4Fkg8uF0l(this);
  sub_1D8040(CFSTR("im1 - end"));
  v3 = dispatch_queue_create("tpZFqotcPt.access", 0);
  var6 = this->var6;
  this->var6 = v3;

  v5 = objc_opt_new(NSMutableDictionary);
  v6 = *p_var3;
  *p_var3 = v5;

  v7 = objc_opt_new(NSMutableDictionary);
  var4 = this->var4;
  this->var4 = v7;

}

void sub_1D7A38(_Unwind_Exception *a1)
{
  id *v1;

  _Unwind_Resume(a1);
}

void tpZFqotcPt::UMbR2BA7sFYLuALoWh(tpZFqotcPt *this)
{
  sub_1D8040(CFSTR("im1 - start"));
  tpZFqotcPt::aWe3ud7al1w4Fkg8uF0l(this);
  sub_1D8040(CFSTR("im1 - end"));
}

void tpZFqotcPt::~tpZFqotcPt(tpZFqotcPt *this)
{
  id var6;
  id var3;
  id var4;

  this->var0 = (void **)off_388320;
  tpZFqotcPt::q30R9pA0R831587jnjy(this);
  var6 = this->var6;
  this->var6 = 0;

  var3 = this->var3;
  this->var3 = 0;

  var4 = this->var4;
  this->var4 = 0;

}

{
  tpZFqotcPt::~tpZFqotcPt(this);
  operator delete();
}

void tpZFqotcPt::q30R9pA0R831587jnjy(tpZFqotcPt *this)
{
  uint64_t v2;

  tpZFqotcPt::p30R9pAOR831587jnjy(this);
  if (this->var1)
  {
    sub_1D8040(CFSTR("im6 - start"));
    v2 = sub_2B0448(this->var1);
    if ((_DWORD)v2)
      NSLog(CFSTR("ReconnectIfContextBad, error = %d"), v2);
    sub_1D8040(CFSTR("im6 - end"));
    this->var1 = 0;
  }
}

id tpZFqotcPt::keq852UfpbFi2LBi61N(tpZFqotcPt *this)
{
  void *v1;
  void *v2;
  id v3;

  if (!this->var5)
    return 0;
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(this->var3, "objectForKey:"));
  v2 = v1;
  if (v1)
    v3 = objc_msgSend(v1, "pointerValue");
  else
    v3 = 0;

  return v3;
}

void sub_1D7BF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void tpZFqotcPt::LQ28EmA2Mpn86r75F40(tpZFqotcPt *this, rp6S0jzg *a2)
{
  id var3;
  id v3;

  if (a2)
  {
    if (this->var5)
    {
      var3 = this->var3;
      v3 = (id)objc_claimAutoreleasedReturnValue(+[NSValue valueWithPointer:](NSValue, "valueWithPointer:", a2));
      objc_msgSend(var3, "setObject:forKey:");

    }
  }
}

void sub_1D7C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void tpZFqotcPt::i2HoOcJszyr9gnXpFuB(tpZFqotcPt *this, rp6S0jzg *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(this->var3, "allKeys", 0));
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v12;
    while (2)
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v4);
        v8 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(this->var3, "objectForKey:", v8));
        if (objc_msgSend(v9, "pointerValue") == a2)
        {
          v10 = v8;

          if (v10)
            objc_msgSend(this->var3, "removeObjectForKey:", v10);
          goto LABEL_12;
        }

      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      if (v5)
        continue;
      break;
    }
  }

  v10 = 0;
LABEL_12:

}

void sub_1D7DD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void tpZFqotcPt::q30R9pAOR831587jnjy(tpZFqotcPt *this)
{
  __CFData *var5;

  tpZFqotcPt::GA87KF2B31bo2we343K(this);
  var5 = this->var5;
  if (var5)
  {
    CFRelease(var5);
    this->var5 = 0;
  }
}

uint64_t tpZFqotcPt::GA87KF2B31bo2we343K(tpZFqotcPt *this)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(this->var3, "allValues", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v9;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v2);
        v6 = objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v5), "pointerValue");
        sub_1D8040(CFSTR("im9 one - start"));
        sub_2B5BA0((uint64_t)v6);
        sub_1D8040(CFSTR("im9 one - end"));
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v3);
  }

  objc_msgSend(this->var3, "removeAllObjects");
  return 0;
}

void sub_1D7F78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void *tpZFqotcPt::BMUK_FJ265J_R_5(tpZFqotcPt *this, CFTypeRef cf)
{
  void *result;

  result = this->var5;
  if (result != cf)
  {
    if (result)
      CFRelease(result);
    if (cf)
      result = (void *)CFRetain(cf);
    else
      result = 0;
    this->var5 = (__CFData *)result;
  }
  return result;
}

void tpZFqotcPt::p30R9pAOR831587jnjy(tpZFqotcPt *this)
{
  NSObject *var6;
  _QWORD block[5];

  var6 = this->var6;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1D8FD4;
  block[3] = &unk_377C50;
  block[4] = this;
  dispatch_sync(var6, block);
}

void sub_1D8040(void *a1)
{
  void *v1;
  void *v2;
  id v3;

  v3 = a1;
  if ((byte_3CEEA0 & 1) == 0)
  {
    byte_3CEEA0 = 1;
    v1 = objc_autoreleasePoolPush();
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    byte_3CEEA1 = objc_msgSend(v2, "BOOLForKey:", BKLogTimingForFP);

    objc_autoreleasePoolPop(v1);
  }
  if (byte_3CEEA1)
    NSLog(CFSTR("%@"), v3);

}

void sub_1D80E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t tpZFqotcPt::xczoSGYIIz2dtiJMK2IE(tpZFqotcPt *this)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  BOOL v5;

  if (!this->var5 || tpZFqotcPt::keq852UfpbFi2LBi61N(this))
    return 0;
  sub_1D8040(CFSTR("im7 - start"));
  v3 = 0;
  do
  {
    while (1)
    {
      CFDataGetBytePtr(this->var5);
      CFDataGetLength(this->var5);
      sub_27CFF4();
      v2 = v4;
      if ((_DWORD)v4 != -42032)
        break;
      tpZFqotcPt::aWe3ud7al1w4Fkg8uF0l(this);
      v5 = v3++ >= 9;
      if (v5)
        goto LABEL_14;
    }
    v5 = (_DWORD)v4 != -42031 || ++v3 >= 0xA;
  }
  while (!v5);
LABEL_14:
  sub_1D8040(CFSTR("im7 - end"));
  tpZFqotcPt::LQ28EmA2Mpn86r75F40(this, 0);
  return v2;
}

uint64_t tpZFqotcPt::aWe3ud7al1w4Fkg8uF0l(tpZFqotcPt *this)
{
  uint64_t v1;
  uint64_t v2;

  this->var1 = 0;
  v1 = sub_2B0800(0, 0, (uint64_t)"/var/mobile/Media/iTunes_Control/iTunes", (uint64_t)&this->var1);
  v2 = v1;
  if ((_DWORD)v1)
    NSLog(CFSTR("ReconnectIfContextBad, error = %d"), v1);
  return v2;
}

uint64_t tpZFqotcPt::NTvM5X_G7QMNC67UE(tpZFqotcPt *this)
{
  rp6S0jzg *v2;
  uint64_t v3;

  v2 = (rp6S0jzg *)tpZFqotcPt::keq852UfpbFi2LBi61N(this);
  if (v2)
  {
    v3 = (uint64_t)v2;
    tpZFqotcPt::i2HoOcJszyr9gnXpFuB(this, v2);
    sub_1D8040(CFSTR("im8 - start"));
    sub_2B5BA0(v3);
    sub_1D8040(CFSTR("im8 - end"));
  }
  return 0;
}

unsigned __int8 *tpZFqotcPt::A7CI7xMRxnQE2nWg(tpZFqotcPt *this, unsigned __int8 *a2, unsigned int a3, unsigned __int8 *a4, unsigned int *a5, int *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int *v19;

  if (tpZFqotcPt::keq852UfpbFi2LBi61N(this))
  {
    sub_1D8040(CFSTR("im10 - start"));
    sub_1F3B80();
    if ((_DWORD)v12)
    {
      v13 = v12;
      v19 = a6;
      NSLog(CFSTR("ReconnectIfContextBad, error = %d;"), v12);
      v14 = v13;
      if ((_DWORD)v13 == -42032)
      {
        v15 = 0;
        while (1)
        {
          tpZFqotcPt::aWe3ud7al1w4Fkg8uF0l(this);
          sub_1F3B80();
          v14 = v16;
          if (!(_DWORD)v16)
            break;
          NSLog(CFSTR("retry #%d, error = %d; "), v15, v16);
          if ((_DWORD)v14 == -42032)
          {
            v17 = v15 >= 9;
            v15 = (v15 + 1);
            if (!v17)
              continue;
          }
          goto LABEL_9;
        }
      }
      else
      {
LABEL_9:
        NSLog(CFSTR("ReconnectIfContextBad -- Giving Up, error = %d; "), v14);
      }
      a6 = v19;
    }
    else
    {
      LODWORD(v14) = 0;
    }
    *a6 = v14;
    *a5 = a3;
    sub_1D8040(CFSTR("im10 - end"));
  }
  else
  {
    *a5 = a3;
    return a2;
  }
  return a4;
}

void tpZFqotcPt::aee6eb53ad09b5623faf(tpZFqotcPt *this, unsigned __int8 *a2, unsigned int a3)
{
  _QWORD v3[2];
  __int128 v4;

  v4 = 0u;
  v3[1] = a2;
  v3[0] = a3;
  sub_283168(this->var1, (uint64_t)v3);
}

BOOL tpZFqotcPt::Tb38ee2B31aD5Debb1q(tpZFqotcPt *this, int a2)
{
  return a2 == -42597 || (a2 + 42005) < 2;
}

void tpZFqotcPt::A31bo2we343KEA87KF2(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  Class v5;
  dispatch_queue_global_t global_queue;
  NSObject *v7;
  void *v8;
  _QWORD block[4];
  id v10;
  Class v11;
  uint64_t v12;

  v4 = a3;
  v5 = NSClassFromString(CFSTR("SSKeybagRequest"));
  if (v5)
  {
    global_queue = dispatch_get_global_queue(0, 0);
    v7 = objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1D8548;
    block[3] = &unk_388360;
    v11 = v5;
    v12 = a2;
    v10 = v4;
    dispatch_async(v7, block);

  }
  else if (v4)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", eb376421d05910e5f15c00c0, -43, 0));
    (*((void (**)(id, void *))v4 + 2))(v4, v8);

  }
}

void sub_1D852C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D8548(uint64_t a1)
{
  dispatch_semaphore_t v2;
  id v3;
  void *v4;
  id v5;
  NSObject *v6;
  void ***v7;
  uint64_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  void (*v12)(uint64_t, void *);
  void *v13;
  NSObject *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t);
  id v21;

  v2 = dispatch_semaphore_create(0);
  v3 = objc_alloc(*(Class *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", *(_QWORD *)(a1 + 48)));
  v5 = objc_msgSend(v3, "initWithAccountIdentifier:", v4);

  sub_1D8040(CFSTR("Requesting a bag refetch."));
  v16 = 0;
  v17 = &v16;
  v18 = 0x3032000000;
  v19 = sub_1D8714;
  v20 = sub_1D8724;
  v21 = 0;
  v10 = _NSConcreteStackBlock;
  v11 = 3221225472;
  v12 = sub_1D872C;
  v13 = &unk_388338;
  v15 = &v16;
  v6 = v2;
  v14 = v6;
  v7 = objc_retainBlock(&v10);
  objc_msgSend(v5, "performSelector:withObject:", "startWithCompletionBlock:", v7, v10, v11, v12, v13);

  dispatch_semaphore_wait(v6, 0xFFFFFFFFFFFFFFFFLL);
  v8 = *(_QWORD *)(a1 + 32);
  if (v8)
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v8, v17[5]);
  v9 = (void *)v17[5];
  v17[5] = 0;

  _Block_object_dispose(&v16, 8);
}

void sub_1D86B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{

  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1D8714(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1D8724(uint64_t a1)
{

}

void sub_1D872C(uint64_t a1, void *a2)
{
  __CFString *v4;
  id v5;

  v5 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  if (v5)
    v4 = CFSTR("br failed.");
  else
    v4 = CFSTR("br succeeded.");
  sub_1D8040(v4);
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_1D879C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id tpZFqotcPt::ypZFqotcPt(tpZFqotcPt *this)
{
  return this->var6;
}

uint64_t sub_1D87BC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  NSObject *v7;
  _QWORD v9[8];
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t);
  id v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  int v19;

  v3 = 0;
  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v10 = 0;
  v11 = &v10;
  v13 = sub_1D8714;
  v14 = sub_1D8724;
  v19 = 0;
  v12 = 0x3032000000;
  v15 = 0;
  if (a2 && a3)
  {
    sub_1D8040(CFSTR("im2 - start"));
    v7 = *(NSObject **)(a1 + 64);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1D8908;
    v9[3] = &unk_388388;
    v9[6] = a1;
    v9[7] = a2;
    v9[4] = &v10;
    v9[5] = &v16;
    dispatch_sync(v7, v9);
    sub_1D8040(CFSTR("im2 - end"));
    *a3 = objc_retainAutorelease((id)v11[5]);
    v3 = *((unsigned int *)v17 + 6);
  }
  _Block_object_dispose(&v10, 8);

  _Block_object_dispose(&v16, 8);
  return v3;
}

void sub_1D88DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  uint64_t v22;

  _Block_object_dispose(&a17, 8);

  _Block_object_dispose((const void *)(v22 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D8908(uint64_t a1)
{
  tpZFqotcPt *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;

  v2 = *(tpZFqotcPt **)(a1 + 48);
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2->var4, "objectForKey:", *(_QWORD *)(a1 + 56)));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40))
  {
    CFDataGetBytePtr(*(CFDataRef *)(a1 + 56));
    CFDataGetLength(*(CFDataRef *)(a1 + 56));
    sub_27CFF4();
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v6;
    if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) == -42032)
      tpZFqotcPt::aWe3ud7al1w4Fkg8uF0l(v2);
  }
}

id tpZFqotcPt::TA87KF2B31bo2we343K(tpZFqotcPt *this, const __CFData *a2)
{
  NSObject *var6;
  void *v3;
  id v4;
  _QWORD block[7];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t);
  id v12;

  v7 = 0;
  v8 = &v7;
  v9 = 0x3032000000;
  v10 = sub_1D8714;
  v11 = sub_1D8724;
  v12 = 0;
  if (a2)
  {
    var6 = this->var6;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1D8AF4;
    block[3] = &unk_3883B0;
    block[4] = &v7;
    block[5] = this;
    block[6] = a2;
    dispatch_sync(var6, block);
    v3 = (void *)v8[5];
  }
  else
  {
    v3 = 0;
  }
  v4 = v3;
  _Block_object_dispose(&v7, 8);

  return v4;
}

void sub_1D8AF4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[5] + 48), "objectForKey:", a1[6]));
  v3 = *(_QWORD *)(a1[4] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t tpZFqotcPt::RTvM5X_G7QMNC67UE(tpZFqotcPt *this, bb74bdd798ceadff5c1f0c2b *a2)
{
  bb74bdd798ceadff5c1f0c2b *v3;
  bb74bdd798ceadff5c1f0c2b *v4;
  NSObject *var6;
  _QWORD v7[4];
  bb74bdd798ceadff5c1f0c2b *v8;
  tpZFqotcPt *v9;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    var6 = this->var6;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1D8BC0;
    v7[3] = &unk_3883D8;
    v9 = this;
    v8 = v3;
    dispatch_sync(var6, v7);

  }
  return 0;
}

void sub_1D8BC0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  id v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v2 = *(_QWORD *)(a1 + 40);
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 48), "allKeys", 0));
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v12;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v12 != v5)
          objc_enumerationMutation(v3);
        v7 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2 + 48), "objectForKey:", v7));
        v9 = objc_msgSend(v8, "c443a638ffc3d34ce6b8ac05");
        if (v9 == objc_msgSend(*(id *)(a1 + 32), "c443a638ffc3d34ce6b8ac05"))
        {
          v10 = v7;

          if (v10)
            objc_msgSend(*(id *)(v2 + 48), "removeObjectForKey:", v10);
          goto LABEL_12;
        }

      }
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      if (v4)
        continue;
      break;
    }
  }

  v10 = 0;
LABEL_12:

}

void sub_1D8D1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t tpZFqotcPt::E7CI7xMRxnQE2nWg(tpZFqotcPt *this, bb74bdd798ceadff5c1f0c2b *a2, unsigned __int8 *a3, unsigned int a4, unsigned __int8 *a5, unsigned int *a6, int *a7)
{
  bb74bdd798ceadff5c1f0c2b *v13;
  rp6S0jzg *v14;
  NSObject *var6;
  uint64_t v16;
  _QWORD v18[11];
  unsigned int v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unsigned __int8 *v31;

  v13 = a2;
  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = a3;
  *a6 = a4;
  *a7 = 0;
  v14 = -[bb74bdd798ceadff5c1f0c2b c443a638ffc3d34ce6b8ac05](v13, "c443a638ffc3d34ce6b8ac05");
  if (v14)
  {
    v24 = 0;
    v25 = &v24;
    v26 = 0x2020000000;
    v27 = 0;
    v20 = 0;
    v21 = &v20;
    v22 = 0x2020000000;
    v23 = 0;
    var6 = this->var6;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1D8EBC;
    v18[3] = &unk_388400;
    v18[8] = v14;
    v18[9] = a3;
    v18[10] = a5;
    v19 = a4;
    v18[4] = &v20;
    v18[5] = &v24;
    v18[6] = &v28;
    v18[7] = this;
    dispatch_sync(var6, v18);
    *a7 = *((_DWORD *)v21 + 6);
    *a6 = *((_DWORD *)v25 + 6);
    _Block_object_dispose(&v20, 8);
    _Block_object_dispose(&v24, 8);
  }
  v16 = v29[3];
  _Block_object_dispose(&v28, 8);

  return v16;
}

void sub_1D8EA0(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;

  _Block_object_dispose((const void *)(v2 - 112), 8);

  _Unwind_Resume(a1);
}

void sub_1D8EBC(uint64_t a1)
{
  tpZFqotcPt *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  v2 = *(tpZFqotcPt **)(a1 + 56);
  sub_1D8040(CFSTR("im3 - start"));
  sub_1F3B80();
  v4 = v3;
  if ((_DWORD)v3)
  {
    NSLog(CFSTR("ReconnectIfContextBad, error = %d;"), v3);
    if ((_DWORD)v4 == -42032)
    {
      v5 = 0;
      while (1)
      {
        tpZFqotcPt::aWe3ud7al1w4Fkg8uF0l(v2);
        sub_1F3B80();
        if (!(_DWORD)v6)
          break;
        v7 = v6;
        NSLog(CFSTR("retry #%d, error = %d; "), v5, v6);
        v8 = (_DWORD)v7 != -42032 || v5 >= 9;
        v5 = (v5 + 1);
        if (v8)
        {
          v4 = v7;
          goto LABEL_11;
        }
      }
      LODWORD(v4) = 0;
    }
    else
    {
LABEL_11:
      NSLog(CFSTR("ReconnectIfContextBad -- Giving Up, error = %d; "), v4);
    }
  }
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v4;
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = *(_DWORD *)(a1 + 88);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = *(_QWORD *)(a1 + 80);
  sub_1D8040(CFSTR("im3 - end"));
}

id sub_1D8FD4(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v1 = *(_QWORD *)(a1 + 32);
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 48), "allValues", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v9;
    do
    {
      v5 = 0;
      do
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v2);
        v6 = objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v5), "c443a638ffc3d34ce6b8ac05");
        sub_1D8040(CFSTR("im4 one - start"));
        sub_2B5BA0((uint64_t)v6);
        sub_1D8040(CFSTR("im4 one - end"));
        v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v3);
  }

  return objc_msgSend(*(id *)(v1 + 48), "removeAllObjects");
}

void sub_1D9108(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t (*registerPoisoning(void))(void (*)(), _QWORD)
{
  uint64_t (*result)(void (*)(), _QWORD);

  result = (uint64_t (*)(void (*)(), _QWORD))sub_1D915C();
  if (result)
    return (uint64_t (*)(void (*)(), _QWORD))result(sub_1D91BC, 0);
  return result;
}

void *sub_1D915C()
{
  void *result;
  void *v1;

  if (byte_3CEEB0 == 1)
    return (void *)qword_3CEEA8;
  v1 = dlopen(imageIOPath, 1);
  result = dlsym(v1, "CGImagePoisoningSetCallback");
  qword_3CEEA8 = (uint64_t)result;
  byte_3CEEB0 = 1;
  return result;
}

void sub_1D91BC()
{
  sub_265F84();
}

void *unregisterPoisoning(void)
{
  void *result;

  result = sub_1D915C();
  if (result)
    return (void *)((uint64_t (*)(_QWORD, _QWORD))result)(0, 0);
  return result;
}

uint64_t sub_1D91F8(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  NDR_record_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;

  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = NDR_record;
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1D9450(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  NDR_record_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = NDR_record;
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_1D95DC(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  NDR_record_t v22;
  _BYTE v23[28];
  int v24;

  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = NDR_record;
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1D97C8(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 275, 0x18u, 0x3Cu, reply_port, 0xAu, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1D9940(mach_port_t a1, int *a2, uint64_t a3, int a4, _OWORD *a5, _QWORD *a6, _DWORD *a7, _DWORD *a8)
{
  mach_port_t reply_port;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  mach_msg_header_t msg;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  NDR_record_t v29;
  int v30;
  int v31;
  int v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  int v41;

  v25 = 1;
  v26 = a3;
  v27 = 16777472;
  v28 = a4;
  v29 = NDR_record;
  v30 = *a2;
  v31 = a4;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x3E800000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v15 = mach_msg(&msg, 3, 0x3Cu, 0xD0u, reply_port, 0, 0);
  v16 = v15;
  if ((v15 - 268435458) <= 0xE && ((1 << (v15 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v15)
    {
      if (msg.msgh_id == 71)
      {
        v16 = 4294966988;
      }
      else if (msg.msgh_id == 1100)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v16 = 4294966996;
          if (v25 == 2
            && msg.msgh_size == 200
            && !msg.msgh_remote_port
            && HIBYTE(v27) == 1
            && HIWORD(v30) << 16 == 1114112)
          {
            v17 = v28;
            if (v28 == v41)
            {
              v16 = 0;
              v18 = *(_DWORD *)&v29.mig_vers;
              *a2 = v32;
              v19 = v40;
              a5[6] = v39;
              a5[7] = v19;
              v20 = v38;
              a5[4] = v37;
              a5[5] = v20;
              v21 = v34;
              *a5 = v33;
              a5[1] = v21;
              v22 = v36;
              a5[2] = v35;
              a5[3] = v22;
              *a6 = v26;
              *a7 = v17;
              *a8 = v18;
              return v16;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v16 = 4294966996;
          if (HIDWORD(v26))
          {
            if (msg.msgh_remote_port)
              v16 = 4294966996;
            else
              v16 = HIDWORD(v26);
          }
        }
        else
        {
          v16 = 4294966996;
        }
      }
      else
      {
        v16 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v16;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v16;
}

uint64_t sub_1D9B8C(mach_port_t a1, __int128 *a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  mach_port_t reply_port;
  uint64_t v8;
  uint64_t v9;
  mach_msg_header_t msg;
  NDR_record_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v12 = NDR_record;
  v3 = a2[5];
  v17 = a2[4];
  v18 = v3;
  v4 = a2[7];
  v19 = a2[6];
  v20 = v4;
  v5 = a2[1];
  v13 = *a2;
  v14 = v5;
  v6 = a2[3];
  v15 = a2[2];
  v16 = v6;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x3E900000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v8 = mach_msg(&msg, 3, 0xA0u, 0x2Cu, reply_port, 0, 0);
  v9 = v8;
  if ((v8 - 268435458) <= 0xE && ((1 << (v8 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v9;
  }
  if ((_DWORD)v8)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v9;
  }
  if (msg.msgh_id == 71)
  {
    v9 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v9;
  }
  if (msg.msgh_id != 1101)
  {
    v9 = 4294966995;
    goto LABEL_17;
  }
  v9 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v9 = v13;
  if ((_DWORD)v13)
    goto LABEL_17;
  return v9;
}

uint64_t sub_1D9D10(mach_port_t a1, int a2, int a3, _OWORD *a4, uint64_t a5, int a6, _OWORD *a7, _QWORD *a8, _DWORD *a9)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  NDR_record_t v22;
  _BYTE v23[24];
  int v24;

  v18 = 1;
  v19 = a5;
  v20 = 16777472;
  v21 = a6;
  v22 = NDR_record;
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_OWORD *)&v23[8] = *a4;
  v24 = a6;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x3EA00000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x50u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1102)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a7 = *(_OWORD *)v23;
              *a8 = v19;
              *a9 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

void sub_1D9F04(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) - 31090337 * (((a1 | 0x8003F051) - a1 + (a1 & 0x7FFC0FAE)) ^ 0x47829018);
  __asm { BR              X13 }
}

uint64_t sub_1DA06C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,char a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  int v70;
  uint64_t v71;

  v45 = &a31 + v39;
  v68 = &a37 + v39;
  v67 = &a27 + v39;
  v66 = &a25 + v39;
  v65 = &a23 + v39;
  v64 = &a33 + v39;
  v62 = v40;
  v63 = &a39 + v39;
  v46 = &a29 + v39;
  v47 = *a1;
  v48 = a1[3];
  v71 = a1[2];
  v49 = *(_QWORD *)(v48 - 0x2E5CECE390489914);
  *(_DWORD *)(v44 - 136) = (v42 - 750) ^ (1434876433
                                        * (((v44 - 144) & 0x860C1CFA | ~((v44 - 144) | 0x860C1CFA)) ^ 0x8D91D7A8));
  *(_QWORD *)(v44 - 112) = &a31 + v39;
  *(_QWORD *)(v44 - 104) = v48;
  v69 = &a31 + v39;
  *(_QWORD *)(v44 - 144) = a3;
  *(_QWORD *)(v44 - 128) = v47;
  *(_QWORD *)(v44 - 120) = v49;
  v50 = v47;
  v51 = (void (*)(uint64_t))(*(_QWORD *)(a2 + 8 * (v42 - 1434)) - 4);
  v51(v44 - 144);
  *(_QWORD *)(v44 - 120) = v48;
  *(_QWORD *)(v44 - 112) = v46;
  *(_QWORD *)(v44 - 144) = v50;
  *(_QWORD *)(v44 - 136) = v45;
  *(_DWORD *)(v44 - 128) = v42
                         + 375636451
                         * ((((v44 - 144) ^ 0x50000902 | 0xAEB6D4F9) + ((v44 - 144) ^ 0x861290F1 | 0x51492B06)) ^ 0x852CC37E)
                         + 1292;
  ((void (*)(uint64_t))((char *)*(&off_38F180 + v42 - 1290) - 8))(v44 - 144);
  v70 = 2 * (v44 - 144);
  *(_QWORD *)(v44 - 144) = v46;
  *(_DWORD *)(v44 - 136) = (v42 - 750) ^ (1434876433 * (((v70 | 0xA1D877E4) - (v44 - 144) - 1357659122) ^ 0xA48E0F5F));
  *(_QWORD *)(v44 - 128) = v50;
  *(_QWORD *)(v44 - 120) = v69;
  *(_QWORD *)(v44 - 112) = v68;
  *(_QWORD *)(v44 - 104) = v48;
  v51(v44 - 144);
  *(_QWORD *)(v44 - 144) = v46;
  *(_DWORD *)(v44 - 136) = (v42 - 750) ^ (1434876433
                                        * ((((v44 - 144) | 0x605C3F52) - (v44 - 144) + ((v44 - 144) & 0x9FA3C0A8)) ^ 0x943E0BFF));
  *(_QWORD *)(v44 - 128) = v50;
  *(_QWORD *)(v44 - 120) = v68;
  *(_QWORD *)(v44 - 112) = v67;
  *(_QWORD *)(v44 - 104) = v48;
  v51(v44 - 144);
  *(_QWORD *)(v44 - 144) = v46;
  *(_DWORD *)(v44 - 136) = (v42 - 750) ^ (1434876433 * (((v70 | 0x8BC3DB52) - (v44 - 144) - 1172434345) ^ 0xB183D904));
  *(_QWORD *)(v44 - 112) = v66;
  *(_QWORD *)(v44 - 104) = v48;
  *(_QWORD *)(v44 - 120) = v67;
  *(_QWORD *)(v44 - 128) = v50;
  v51(v44 - 144);
  *(_QWORD *)(v44 - 128) = v50;
  *(_QWORD *)(v44 - 120) = v66;
  *(_DWORD *)(v44 - 136) = (v42 - 750) ^ (1434876433 * ((v44 - 144) ^ 0xF46234AD));
  *(_QWORD *)(v44 - 144) = v46;
  *(_QWORD *)(v44 - 112) = v65;
  *(_QWORD *)(v44 - 104) = v48;
  v51(v44 - 144);
  *(_DWORD *)(v44 - 136) = (v42 - 750) ^ (1434876433 * ((v44 - 1110648292 - 2 * ((v44 - 144) & 0xBDCCDAAC)) ^ 0x49AEEE01));
  *(_QWORD *)(v44 - 112) = v64;
  *(_QWORD *)(v44 - 104) = v48;
  *(_QWORD *)(v44 - 128) = v50;
  *(_QWORD *)(v44 - 120) = v65;
  *(_QWORD *)(v44 - 144) = v46;
  v51(v44 - 144);
  *(_QWORD *)(v44 - 128) = v50;
  *(_QWORD *)(v44 - 120) = v64;
  *(_QWORD *)(v44 - 144) = v46;
  *(_QWORD *)(v44 - 112) = v63;
  *(_QWORD *)(v44 - 104) = v48;
  *(_DWORD *)(v44 - 136) = (v42 - 750) ^ (1434876433
                                        * (((((v44 - 144) | 0xC52CD2FE) ^ 0xFFFFFFFE) - (~(v44 - 144) | 0x3AD32D01)) ^ 0xCEB119AC));
  v51(v44 - 144);
  *(_DWORD *)(v44 - 136) = (v42 - 750) ^ (1434876433
                                        * (((((v44 - 144) | 0x79232B58) ^ 0xFFFFFFFE) - (~(v44 - 144) | 0x86DCD4A7)) ^ 0x72BEE00A));
  *(_QWORD *)(v44 - 144) = v46;
  *(_QWORD *)(v44 - 128) = v50;
  *(_QWORD *)(v44 - 120) = v63;
  *(_QWORD *)(v44 - 112) = v46;
  *(_QWORD *)(v44 - 104) = v48;
  v51(v44 - 144);
  v52 = *(_QWORD *)(v48 - 0x2E5CECE39048991CLL);
  *(_DWORD *)(v44 - 136) = v42 + 142545853 * (((v70 | 0xFE4B7BEC) - (v44 - 144) + 14303754) ^ 0xD5DA1299) - 1011;
  *(_QWORD *)(v44 - 128) = v41;
  *(_QWORD *)(v44 - 144) = v52;
  sub_27B4D4(v44 - 144);
  *(_QWORD *)(v44 - 136) = v71;
  *(_DWORD *)(v44 - 140) = (v42 + 1335) ^ (375636451
                                         * (((v44 - 144) & 0x486D0535 | ~((v44 - 144) | 0x486D0535)) ^ 0xE4ACA046));
  sub_2A03C4(v44 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * ((((*(_DWORD *)(v44 - 144) - 840439200) > 0x7FFFFFFE) * (3 * (v42 ^ 0x4C3) - 2135)) ^ v42)) - 12))(v53, v54, v55, v56, v57, v58, v59, v60, v62, v63, v64, v65, v66, v67, v68, v46, a12, a13, v43);
}

uint64_t sub_1DA578()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((v1 + v3 + 2) > 0x7FFFFFFE)
                                          * ((((v2 - 1780) ^ 0x25F) + 1611) ^ ((v2 - 1780) | 0x82C))) ^ (v2 - 305)))
                            - 12))();
}

uint64_t sub_1DA5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  *(_DWORD *)(v31 - 128) = v27
                         + 375636451 * ((((2 * (v31 - 144)) | 0x1348AEAC) - (v31 - 144) + 1985718442) ^ 0xDA9A0DDA)
                         + 2326;
  *(_QWORD *)(v31 - 120) = a25;
  *(_QWORD *)(v31 - 112) = v28;
  *(_QWORD *)(v31 - 144) = a27;
  *(_QWORD *)(v31 - 136) = v28;
  a24(v31 - 144);
  v32 = 673918253 * ((v31 + 1163778368 - 2 * ((v31 - 144) & 0x455DD9D0)) ^ 0xDF15C278);
  *(_DWORD *)(v31 - 140) = v27 - v32 + 1117;
  *(_DWORD *)(v31 - 128) = (v29 - 840439200) ^ v32;
  *(_QWORD *)(v31 - 136) = a26;
  v33 = sub_2A2728(v31 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30
                                                      + 8
                                                      * (((*(_DWORD *)(v31 - 144) != 1442630299) * ((v27 + 1339) ^ 0x16B)) ^ v27))
                                          - ((v27 + 1783393251) & 0x95B3939F)
                                          + 387))(v33);
}

uint64_t sub_1DA6DC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((78
                                * (((v1 - 1 < ((v0 + 1060) ^ 0x7FFFFA4Eu)) ^ (3 * (v0 ^ 0xA8))) & 1)) ^ v0)))();
}

uint64_t sub_1DA720@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((936 * (v2 - 840439202 >= v1 + ((81 * (a1 ^ 0x5A4)) ^ 0x240u) + 169)) ^ a1))
                            - 12))();
}

uint64_t sub_1DA77C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((919 * (v4 + v2 + 1 < ((v1 - 763) ^ (v0 + 933)))) ^ v1))
                            - 12))();
}

uint64_t sub_1DA7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v31 = ((((v30 - 144) | 0x8668CBDE) - ((v30 - 144) & 0x8668CBDE)) ^ 0x1C20D076) * v26;
  *(_QWORD *)(v30 - 136) = a26;
  *(_DWORD *)(v30 - 128) = v31;
  *(_DWORD *)(v30 - 140) = v27 - v31 + 354;
  v32 = sub_2A2728(v30 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28
                                                      + 8
                                                      * ((57
                                                        * ((((v27 + 241077943) ^ (*(_DWORD *)(v30 - 144) == v29)) & 1) == 0)) ^ v27))
                                          - (v27 - 763)
                                          + 512))(v32);
}

void sub_1DAC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),void (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  int v28;
  uint64_t v29;

  *(_QWORD *)(v29 - 144) = a27;
  *(_QWORD *)(v29 - 136) = v27;
  *(_QWORD *)(v29 - 120) = a25;
  *(_QWORD *)(v29 - 112) = v27;
  *(_DWORD *)(v29 - 128) = v28
                         + 375636451 * ((((2 * (v29 - 144)) | 0x5B759356) - (v29 - 144) - 767216043) ^ 0x7E849327)
                         + 2326;
  a24(v29 - 144);
  *(_DWORD *)(v29 - 136) = (v28 + 284) ^ (1434876433
                                        * ((2 * ((v29 - 144) & 0x3756CA10) - (v29 - 144) + 1219048940) ^ 0xBCCB0141));
  *(_QWORD *)(v29 - 144) = a15;
  *(_QWORD *)(v29 - 128) = a27;
  *(_QWORD *)(v29 - 120) = v27;
  *(_QWORD *)(v29 - 112) = v27;
  *(_QWORD *)(v29 - 104) = a25;
  a23(v29 - 144);
  JUMPOUT(0x1DB1B4);
}

void sub_1DAD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t),uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  int v28;
  uint64_t v29;

  *(_QWORD *)(v29 - 128) = a27;
  *(_QWORD *)(v29 - 120) = v27;
  *(_DWORD *)(v29 - 136) = (v28 + 284) ^ (1434876433
                                        * ((((2 * (v29 - 144)) | 0xF7A6FF66) - (v29 - 144) + 70025293) ^ 0xFB14B1E));
  *(_QWORD *)(v29 - 144) = a20;
  *(_QWORD *)(v29 - 112) = v27;
  *(_QWORD *)(v29 - 104) = a25;
  a23(v29 - 144);
  JUMPOUT(0x1DB1B4);
}

uint64_t sub_1DADEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  *(_QWORD *)(v30 - 120) = a25;
  *(_QWORD *)(v30 - 112) = a22;
  *(_QWORD *)(v30 - 144) = a27;
  *(_QWORD *)(v30 - 136) = a22;
  *(_DWORD *)(v30 - 128) = v27
                         + 237
                         + 375636451 * ((2 * ((v30 - 144) & 0x2976AAC0) - (v30 - 144) - 695642824) ^ 0x85B70FB4);
  a24(v30 - 144);
  *(_QWORD *)(v30 - 144) = a27;
  *(_QWORD *)(v30 - 136) = a22;
  *(_DWORD *)(v30 - 128) = v27 + 237 + 375636451 * ((v30 - 493934312 - 2 * ((v30 - 144) & 0xE28F29A8)) ^ 0xB1B17324);
  *(_QWORD *)(v30 - 120) = a25;
  *(_QWORD *)(v30 - 112) = a22;
  a24(v30 - 144);
  v31 = 673918253 * ((~((v30 - 144) | 0xCC1AED51) + ((v30 - 144) & 0xCC1AED51)) ^ 0xA9AD0906);
  *(_DWORD *)(v30 - 140) = v27 - v31 - 972;
  *(_DWORD *)(v30 - 128) = (v28 - 840439202 + 262 * (v27 ^ 0xA37) - 523) ^ v31;
  *(_QWORD *)(v30 - 136) = a26;
  v32 = sub_2A2728(v30 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29
                                                      + 8 * ((104 * (*(_DWORD *)(v30 - 144) != 1442630299)) ^ v27))
                                          - ((v27 - 2089) ^ 0x204)))(v32);
}

void sub_1DAF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(uint64_t))
{
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v27 - 144) = a13;
  *(_QWORD *)(v27 - 112) = v23;
  *(_QWORD *)(v27 - 104) = v25;
  *(_QWORD *)(v27 - 128) = v26;
  *(_QWORD *)(v27 - 120) = v23;
  *(_DWORD *)(v27 - 136) = (v24 + 284) ^ (1434876433
                                        * (((((v27 - 144) | 0xC634F058) ^ 0xFFFFFFFE) - (~(v27 - 144) | 0x39CB0FA7)) ^ 0xCDA93B0A));
  a23(v27 - 144);
  JUMPOUT(0x1DB1B0);
}

uint64_t sub_1DB0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  *(_DWORD *)(v30 - 136) = (v29 - 1055) ^ (1434876433
                                         * ((2071684721 - ((v30 - 144) | 0x7B7B6671) + ((v30 - 144) | 0x8484998E)) ^ 0x70E6AD23));
  *(_QWORD *)(v30 - 144) = a16;
  *(_QWORD *)(v30 - 112) = a23;
  *(_QWORD *)(v30 - 104) = a26;
  *(_QWORD *)(v30 - 128) = a28;
  *(_QWORD *)(v30 - 120) = a23;
  v31 = a24(v30 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28
                                                      + 8
                                                      * ((((a22 - 840439200) > 0x7FFFFFFE)
                                                        * ((((v29 - 1780) ^ 0x25F) + 1611) ^ ((v29 - 1780) | 0x82C))) ^ (v29 - 305)))
                                          - 12))(v31);
}

void sub_1DB130(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  *(_QWORD *)(v18 - 144) = a5;
  *(_DWORD *)(v18 - 136) = (a1 + 284) ^ (1434876433
                                       * (((v18 - 144) & 0x6FF7EE90 | ~((v18 - 144) | 0x6FF7EE90)) ^ 0x646A25C2));
  *(_QWORD *)(v18 - 112) = a15;
  *(_QWORD *)(v18 - 104) = a18;
  JUMPOUT(0x1DB190);
}

uint64_t sub_1DB200()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = 1434876433 * ((-742150904 - ((v2 - 144) | 0xD3C3AD08) + ((v2 - 144) | 0x2C3C52F7)) ^ 0xD85E665A);
  *(_QWORD *)(v2 - 136) = v6;
  *(_DWORD *)(v2 - 144) = (v1 - 843) ^ v3;
  *(_DWORD *)(v2 - 140) = 1333789614 - v3;
  sub_297D00((_DWORD *)(v2 - 144));
  *(_QWORD *)(v2 - 144) = v6;
  *(_DWORD *)(v2 - 136) = (v1 - 1367) ^ (1434876433
                                       * ((1467999092 - ((v2 - 144) | 0x577FE374) + ((v2 - 144) | 0xA8801C8B)) ^ 0x5CE22826));
  *(_QWORD *)(v2 - 112) = v0;
  *(_QWORD *)(v2 - 104) = v8;
  *(_QWORD *)(v2 - 128) = v9;
  *(_QWORD *)(v2 - 120) = v0;
  v7(v2 - 144);
  *(_DWORD *)(v2 - 136) = (v1 ^ 0xF38)
                        + 142545853 * ((2 * ((v2 - 144) & 0xEAD1CD8) - (v2 - 144) - 246226144) ^ 0xDBAD4C4F)
                        - 1316;
  *(_QWORD *)(v2 - 128) = v5;
  *(_QWORD *)(v2 - 144) = v0;
  return sub_27B4D4(v2 - 144);
}

void sub_1DB390(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  int v7;
  char v8;
  int v9;
  int v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;

  v1 = 142545853 * ((a1 & 0x813B3120 | ~(a1 | 0x813B3120)) ^ 0x543B61B0);
  v2 = *(_DWORD *)(a1 + 48) ^ v1;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)a1;
  v5 = *(_DWORD *)(a1 + 52) - v1;
  v9 = 681096070;
  v10 = 1517592388;
  v11 = &v8;
  v12 = 0x5A749F442898B407;
  v13 = &v14;
  if (v3 | v4)
    v6 = v5 == 471054125;
  else
    v6 = 1;
  v7 = !v6;
  __asm { BR              X9 }
}

uint64_t sub_1DB4DC@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  BOOL v4;

  v4 = v1[2] == 0x6DE7D91E88BEC716 || (v1[7] | v1[4]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((158 * ((a1 ^ v4) & 1)) | a1)))();
}

uint64_t sub_1DB52C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *(_QWORD *)(v11 + 64);
  *(_DWORD *)(v9 - 0x6DE7D91E88BEC716) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((241 * (v13 != 0x4B6765CD75B9E178)) ^ a9 ^ 0x810)) - ((a9 ^ 0x810u) - 2064) - ((29 * (a9 ^ 0x274u)) ^ 0xFFFFFFFFFFFFFFCALL)))(a1, a2, a3, a4, a5, a6, a7, a8, v10);
}

uint64_t sub_1DB600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((a7 - 512) * (v7 == 0)) ^ (a7 + 585)))
                                                                                       - ((a7 + 507) ^ 0x450)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1DB640@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL4 v23;

  v18 = (a2 - 1552855157) & 0x5C8EAE7F;
  v19 = ((2 * ((v17 - 144) & 0x33A58F0) - (v17 - 144) - 54155505) ^ 0xEA6BF14B) * v15;
  *(_QWORD *)(v17 - 128) = v14;
  *(_QWORD *)(v17 - 144) = v12;
  *(_DWORD *)(v17 - 120) = v19 + a2 + 732;
  *(_DWORD *)(v17 - 132) = v11 - v19 + (v18 ^ 0xE89316D4);
  v20 = v10;
  v23 = a1 == 0;
  (*(void (**)(uint64_t))(v10 + 8 * (a2 - 890)))(v17 - 144);
  *(_DWORD *)(v17 - 128) = v18 + ((((v17 - 144) | 0x5107AAFE) - ((v17 - 144) & 0x5107AAFE)) ^ 0x47A9FCBA) * v15 + 1253;
  *(_QWORD *)(v17 - 144) = a9;
  *(_QWORD *)(v17 - 136) = v13;
  (*(void (**)(uint64_t))(v20 + 8 * (v18 ^ 0x284u)))(v17 - 144);
  *(_DWORD *)(v17 - 104) = v18
                         - 142545853 * ((((2 * (v17 - 144)) | 0xB38E3096) - (v17 - 144) - 1506220107) ^ 0x7338B724)
                         + 1324;
  *(_QWORD *)(v17 - 144) = v13;
  *(_QWORD *)(v17 - 136) = a8;
  *(_QWORD *)(v17 - 120) = a9;
  *(_QWORD *)(v17 - 112) = a10;
  *(_QWORD *)(v17 - 128) = a4;
  v21 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (v18 ^ 0x36Du)) - 4))(v17 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8
                                                            * (((((v18 - 609) | 0x188) ^ (v18 - 224)) * v23) ^ v18))
                                          - 12))(v21);
}

uint64_t sub_1DB8DC()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  _DWORD *v10;

  v6 = 31090337 * ((2 * ((v5 - 144) & 0x4906C340) - (v5 - 144) + 922303678) ^ 0xF1785CF7);
  *(_QWORD *)(v5 - 144) = v8;
  *(_DWORD *)(v5 - 116) = v2 - 217 - v6 + 1417;
  *(_QWORD *)(v5 - 128) = v4;
  *(_DWORD *)(v5 - 136) = v1 - v6 + (((v2 - 38) | 0x20) ^ 0x3BCE3D7B);
  result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 - 592)))(v5 - 144);
  *v10 = v9;
  *(_DWORD *)(v0 + 8) = 349819777;
  return result;
}

void sub_1DBA34(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v1 = 366490169 * ((-2 - ((a1 | 0x2E85DD4A) + (~(_DWORD)a1 | 0xD17A22B5))) ^ 0xC7D474F1);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x71888C0647A114BFLL) + 803875830;
  v3 = *(_DWORD *)a1 - v1 - 63208717;
  v4 = (v3 < 0x32F34EE5) ^ (v2 < 0x32F34EE5);
  v5 = v2 < v3;
  if (v4)
    v5 = v3 < 0x32F34EE5;
  __asm { BR              X11 }
}

uint64_t sub_1DBB50()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((*(_BYTE *)(v1 - 0x71888C0647A114B7) & 1) == 0) * (v0 - 1989)) ^ (v0 - 1167)))
                            - ((v0 - 1167) ^ 0xBF7u)
                            + 2158))();
}

void sub_1DBB94()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 0x71888C0647A114B3) = 349777749;
}

void sub_1DC254(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 12) + 31090337 * ((((2 * a1) | 0x8E0B66AC) - a1 + 955927722) ^ 0x84D31F);
  v2 = *(_QWORD *)((char *)*(&off_38F180 + (v1 ^ 0x1E9))
                 + 8
                 * (((((uint64_t (*)(uint64_t, uint64_t))*(&off_38F180 + v1 - 230))(32, 0x101004023FF3BD5) == 0)
                   * (v1 ^ 0x14E)) ^ v1)
                 - 4)
     - 8;
  __asm { BR              X8 }
}

void sub_1DC2FC()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 8) = 349777749;
}

void sub_1DC37C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1DC3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  a15 = 142545853 * (((&a14 | 0x453AB6C1) + (~&a14 | 0xBAC5493E)) ^ 0x6FC519AF) + 1655392376;
  v17 = sub_2B0068(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * ((3863 * (a14 == 349819777)) ^ v16)) - 8))(v17);
}

uint64_t sub_1DC470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a16 = 258 - 31090337 * (((&a14 | 0xF13D578C) - (&a14 & 0xF13D578C)) ^ 0x36BC37C5);
  a14 = &STACK[0xC0B93515EA70804];
  sub_1DC254((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * ((3603 * (a15 == v17)) ^ 0x4D9u))
                                                                                                - 8))(v18, v19, v20, v21, v22, v23, v24);
}

uint64_t sub_1DC4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  a14 = 1434876433 * ((&a14 + 157966421 - 2 * ((unint64_t)&a14 & 0x96A6055)) ^ 0xFD0854F8) + 1295;
  a17 = a10;
  a15 = v17;
  v21 = ((uint64_t (*)(int *))(*(_QWORD *)(v20 + 1448) - 12))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1928 * (a16 == v19)) ^ 0xBAEu)))(v21);
}

uint64_t sub_1DC5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, unsigned int a17, int a18, unint64_t *a19)
{
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1697562443 * (&a14 ^ 0xD7903884);
  a19 = &STACK[0x55D3F2C53748DC33];
  a17 = 2059128653 - v21;
  a16 = a10;
  a14 = v20 - v21 + 1780978089;
  a15 = v21 - 572150438;
  v22 = sub_2B57EC((uint64_t)&a14);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a18 == ((v20 + 590085202) | 0x10811041) - 517162176)
                                              * (2 * (v20 ^ 0xFB6) - 140)) ^ v20)))(v22);
}

uint64_t sub_1DC678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, char a15, unsigned int a16, unsigned int a17, uint64_t a18, char *a19)
{
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  void (*v24)(unsigned int *);
  uint64_t v25;

  a17 = (v23 - 978) ^ (1314530549
                     * ((&a16 + 1770987160 - 2 * (&a16 & 0x698F1E98)) ^ 0xD8869856));
  a18 = a13;
  a19 = &a12;
  v24 = (void (*)(unsigned int *))(*(_QWORD *)(v22 + 8 * (v23 - 1859)) - 8);
  v24(&a16);
  a17 = (v23 - 978) ^ (1314530549
                     * ((((2 * &a16) | 0xEA080EF8) - &a16 + 184285316) ^ 0x440D81B2));
  a18 = a13;
  a19 = &a15;
  v24(&a16);
  a18 = a13;
  a16 = (v23 - 787) ^ (1401278017
                     * ((&a16 - 62241069 - 2 * (&a16 & 0xFC4A46D3)) ^ 0xF8693034));
  v25 = sub_280CE0((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * (((a17 == v21) * ((v20 + (v23 ^ 0x33AD1071) + 2651) ^ (v23 - 32))) ^ v23))
                                          - 8))(v25);
}

uint64_t sub_1DC7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  int v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8
                                              * (v15 ^ (32 * ((((v15 - v14 - 1514902574) ^ (a14 == 0)) & 1) == 0))))
                            - 8))();
}

uint64_t sub_1DC830@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  void (*v3)(uint64_t *);
  int v4;
  int v5;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v5 = ((a1 & 0x269E7D35) - 5402061) & 0x33FF7DDD;
  *v2 = v8;
  v12 = v1 + 366490169 * (&v10 ^ 0x16AE5644) + v5;
  v11 = v9;
  v3(&v10);
  v11 = v7;
  v12 = v4 + 366490169 * ((2 * (&v10 & 0x2A4292F8) - &v10 + 1438477568) ^ 0x43133B44) + v5;
  v3(&v10);
  return 0;
}

uint64_t sub_1DC930(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 31090337 * ((a1 - 836018333 - 2 * (a1 & 0xCE2B5F63)) ^ 0x9AA3F2A);
  v2 = *(_DWORD *)(a1 + 28) + v1;
  v3 = *(_DWORD *)(a1 + 8) + v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x4B6765CD75B9E174);
  v6 = v4 - 1517592388;
  v5 = v4 - 1517592388 < 0;
  v7 = 1517592388 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_38F180 + (v2 ^ 0x7FC))
                                        + 8
                                        * ((((v3 - 1474426439) >= 4 * (unint64_t)v8) * (v2 + 1926)) ^ v2)
                                        - 4)
                            - 4))();
}

uint64_t sub_1DC9F4()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (int)((v2 - 31) ^ (495 * (v1 == 1474426439)))) - (v2 ^ 0x713)))();
}

uint64_t sub_1DCA3C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 24) = v1;
  return result;
}

uint64_t sub_1DCA44()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  v2 = (v1 - 2131) | 0x18A;
  v3 = (((55 * (v2 ^ 0x1BB) - 1367) | 0x12) ^ 0x37BDD42E) != 935187964;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((8 * v3) | (v3 << 6)) ^ v2)) - 4))();
}

uint64_t sub_1DCAE0@<X0>(_QWORD *a1@<X0>, char a2@<W1>, int a3@<W2>, int a4@<W5>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;

  *(_BYTE *)(*a1 + (a4 + a5)) = (a3 ^ v7) >> (a2 + 36);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((3956 * (a4 + (v8 ^ 0x68D) - 411 != v6)) ^ v8)) - 4))();
}

uint64_t sub_1DCB38(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;

  v7 = a2 + 8 != (((55 * (a5 ^ 0x1BB) - 1367) | 0x12) ^ v6);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((8 * v7) | (v7 << 6)) ^ a5)) - 4))();
}

uint64_t sub_1DCB80(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  _BOOL4 v9;

  v7 = (((a4 + 1072) | 0x115) ^ 0x719C752E) + v6;
  v9 = v7 > 1031882348 || v7 < v5;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * ((2716 * v9) ^ a4)) - 4))(a1, 935187932, 449985586);
}

uint64_t sub_1DCBDC@<X0>(_QWORD *a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  _QWORD *v4;
  int v5;

  return sub_1DCAE0(a1, 220, *(_DWORD *)(*v4 + 4 * (int)(((a2 + 1349) ^ 0xB41B2CDB) + v5)), v3, a3);
}

uint64_t sub_1DCC0C(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unsigned int v10;
  uint64_t result;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v2 = 31090337 * ((-2 - ((a1 | 0x455E6E11) + (~(_DWORD)a1 | 0xBAA191EE))) ^ 0x7D20F1A7);
  v3 = *(_DWORD *)(a1 + 40) - v2;
  v4 = *(_DWORD *)(a1 + 36) + v2;
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_DWORD *)(a1 + 8) - v2;
  if (v4 == 1391003716 || v4 == 1391003713)
    __asm { BR              X5 }
  v9 = *(_QWORD *)a1;
  v10 = 1434876433 * ((2 * (&v12 & 0x1FF1FDF8) - &v12 - 535952895) ^ 0x146C36AC);
  v15 = *(_QWORD *)(a1 + 16);
  v14 = v7 - v10 + 236030003;
  v16 = v10 + 1172902738 + v3 + 570;
  v17 = v9;
  v18 = v6;
  v13 = v5;
  result = ((uint64_t (*)(int *))((char *)*(&off_38F180 + (int)(v3 ^ 0xBA16EC5E)) - 4))(&v12);
  *(_DWORD *)(a1 + 32) = v12;
  return result;
}

void sub_1DD124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v6;

  if (a4)
    v5 = a5 == 0;
  else
    v5 = 1;
  v6 = v5;
  __asm { BR              X9 }
}

uint64_t sub_1DD19C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  uint64_t v20;
  uint64_t v21;

  *a4 = 0;
  *a5 = 0;
  a20 = 142545853 * ((2 * (&a19 & 0x4AE53448) - &a19 - 1256535119) ^ 0x9FE564DE)
      + 1655392376;
  v21 = sub_2B0068(&a19);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((3801 * (a19 == 349819777)) ^ 0x452u)))(v21);
}

uint64_t sub_1DD24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21,unsigned int a22)
{
  uint64_t v22;
  int v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v25 = 673918253
      * ((((&a19 | 0x6F28913A) ^ 0xFFFFFFFE) - (~&a19 | 0x90D76EC5)) ^ 0xA9F756D);
  LODWORD(a19) = v25 ^ 0x9EFE57B;
  HIDWORD(a19) = v25 ^ 0x7355D2EC;
  a22 = v25 + 1037307641;
  a20 = (v24 + 1738) ^ v25;
  ((void (*)(unint64_t **))((char *)*(&off_38F180 + (v24 ^ 0x453u)) - 12))(&a19);
  HIDWORD(a11) = a21;
  a19 = &STACK[0xC0B93515EA7082C];
  a21 = v24
      - 31090337 * ((((2 * &a19) | 0x2FF94682) - &a19 + 1745050815) ^ 0x507DC308)
      - 848;
  sub_1DC254((uint64_t)&a19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (((a20 == 349819777) * (v24 ^ (v23 + 1499) ^ (v23 + (v24 ^ 0x15E) + 3367))) ^ v24)))(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10, a11, v22);
}

uint64_t sub_1DD398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,unsigned int a22,int a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;

  v28 = 1697562443 * ((&a19 & 0xE57DDABD | ~(&a19 | 0xE57DDABD)) ^ 0xCD121DC6);
  a21 = a15;
  a22 = ((2 * v25) & 0xFDCFEBFE) + v28 + ((553 * (v27 ^ 0x50E) + 2129129901) ^ v25) - 67567617;
  a23 = v28 + v27 - 962;
  sub_280E70((uint64_t)&a19);
  v29 = 375636451 * ((2 * (&a19 & 0x58303AB8) - &a19 - 1479555774) ^ 0xF4F19FCE);
  a20 = (v27 + 1932) ^ v29;
  a22 = (v24 ^ 0x7D757DDF) + ((2 * v24) & 0xFAEAFBBE) - v29 - 608175132;
  a21 = a15;
  a24 = a13;
  v30 = ((uint64_t (*)(int *))((char *)*(&off_38F180 + (v27 ^ 0x5A5)) - 8))(&a19);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((26 * (a19 == 349819777)) ^ v27)))(v30);
}

uint64_t sub_1DD514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,unsigned int a21,uint64_t a22,unsigned int a23,int a24,unint64_t *a25)
{
  uint64_t v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  uint64_t v30;

  if (a12 >= 0x1160E530)
    v28 = -887635366;
  else
    v28 = 2059128653;
  v29 = ((((2 * &a20) | 0xC401FB72) - &a20 - 1644232121) ^ 0xB590C53D) * v27;
  a25 = &STACK[0x55D3F2C53748DC5B];
  a23 = v28 - v29;
  a22 = a16;
  a20 = v26 - v29 + 1780979787;
  a21 = v29 - 1923152621;
  v30 = sub_2B57EC((uint64_t)&a20);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((2317 * (a24 == ((v26 - 1226) | 0x634) + 349818123)) ^ v26)))(v30);
}

uint64_t sub_1DD5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12)
{
  unsigned int v12;
  int v13;
  uint64_t v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * (((((a12 < v12) ^ (v13 + 11)) & 1) * ((v13 - 990) ^ 0x26F)) ^ v13))
                            - 12))();
}

uint64_t sub_1DD680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,char *a21,uint64_t a22)
{
  unsigned int v22;
  uint64_t v23;
  void (*v24)(uint64_t *);
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;

  a19 = v25;
  a20 = v26;
  LODWORD(a21) = v22
               - 673918253
               * (((&a19 ^ 0xAB2853A | 0xBD005235) - ((&a19 ^ 0xAB2853A) & 0xBD005235)) ^ 0x2DFACCA7)
               - 166;
  a22 = a17;
  ((void (*)(uint64_t *))*(&off_38F180 + (int)(v22 ^ 0x2FF)))(&a19);
  a20 = a17;
  a21 = &a18;
  HIDWORD(a19) = (v22 + 454) ^ (((-49611042 - (&a19 | 0xFD0AFEDE) + (&a19 | 0x2F50121)) ^ 0xB3FC87EF)
                              * v27);
  v24(&a19);
  a20 = a17;
  LODWORD(a19) = (v22 + 645) ^ (1401278017
                              * (((&a19 ^ 0x10AB6219 | 0xA6409DE4)
                                + (&a19 ^ 0x240008E0 | 0x59BF621B)) ^ 0x30881C1F));
  v28 = sub_280CE0((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * (int)((1949 * (HIDWORD(a19) == 349819777)) ^ v22))
                                          - (v22 ^ 0x29CLL)))(v28);
}

uint64_t sub_1DD848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v18;
  uint64_t v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * (((a18 == 0) * ((4 * (v18 ^ 0x3DB)) ^ 0x2C5)) ^ v18)) - 4))();
}

uint64_t sub_1DD8B0@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * (int)(a1 ^ (2 * (a8 == ((a1 - 872050374) & 0x33FA67AC ^ 0x9659CF25)))))
                            - (a1 ^ 0xC29)))();
}

uint64_t sub_1DD90C()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v4 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_38F180 + v3 - 636))(v0 ^ v1, 1523128792) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2521 * (((((v3 ^ 0x794) + 1526) ^ v4) & 1) == 0)) ^ v3)) - 4))();
}

uint64_t sub_1DD96C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  uint64_t v16;
  int v17;
  int v18;

  v18 = (a15 ^ v15) - ((2 * (a15 ^ v15)) & 0x5E8FF556) - 1354237269;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((1930
                                * (((((13 * (v17 ^ 0xB31) - 655) | 0x290) - 1082133202) & (2 * v18) ^ 0x1E0FF546)
                                 + (v18 ^ 0x70F80148)
                                 + 695922240 != 154855971)) ^ v17)))();
}

uint64_t sub_1DDA0C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1731
                                          * ((((v2 + v0 + 541066269) < 8) ^ (((v1 + 35) & 0x7F) + 85)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_1DDA84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (v9 ^ ((8 * ((unint64_t)(v8 - a1) < 0x20)) | (16
                                                                                             * ((unint64_t)(v8 - a1) < 0x20)))))
                            - ((v9 ^ (a8 + 3112))
                             - a8
                             - 88)
                            + 2381))();
}

uint64_t sub_1DDAC0(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((((a2 + 1252854804) & 0xB552EFF7 ^ 0x25) * (v2 > 0x1F)) ^ a2))
                            - (((a2 + 1086850995) | 0x4200432u) ^ 0x44E8153ELL)))();
}

uint64_t sub_1DDB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v15 = (v11 + v10);
  v16 = *(_OWORD *)(v9 + v15 - 15);
  v17 = *(_OWORD *)(v9 + v15 - 31);
  v18 = a1 + v15;
  *(_OWORD *)(v18 - 15) = v16;
  *(_OWORD *)(v18 - 31) = v17;
  return (*(uint64_t (**)(void))(v14
                              + 8 * ((62 * ((v13 ^ (a8 + 1610) ^ 0x4CD) == (v12 & 0xFFFFFFE0))) ^ (v8 + v13 + 185))))();
}

uint64_t sub_1DDB88(uint64_t a1)
{
  int v1;
  int v2;
  _QWORD *v3;
  void (*v4)(uint64_t *);
  int v5;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v5 = (v1 - 404) | 0x408;
  *v3 = a1;
  *v7 = v2;
  v11 = v9;
  v12 = v5 + 366490169 * (((&v10 | 0x42F6C17C) - (&v10 & 0x42F6C17C)) ^ 0x54589738) - 995;
  v4(&v10);
  v12 = (v5 ^ 0x15E)
      + 366490169 * ((2 * (&v10 & 0x63484CB0) - &v10 - 1665682610) ^ 0x8A19E50A)
      - 809;
  v11 = v8;
  v4(&v10);
  return 0;
}

void sub_1DDE08(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _BYTE v3[4161];

  v1 = *(_DWORD *)(a1 + 8) + 1314530549 * ((a1 - 2067197880 - 2 * (a1 & 0x84C91048)) ^ 0x35C09686);
  sub_2B070C(v3, 0, 0x1001uLL);
  v2 = *(_QWORD *)((char *)*(&off_38F180 + (v1 ^ 0x327))
                 + 8
                 * (((((uint64_t (*)(uint64_t, uint64_t))*(&off_38F180 + v1 - 944))(8, 0x1000040789AEA99) != 0)
                   * ((v1 + 3027) ^ ((v1 - 715) | 0x4A4))) ^ v1)
                 - 4)
     - 8;
  __asm { BR              X8 }
}

uint64_t sub_1DE038(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  unint64_t v28;

  STACK[0x640] = a1;
  *(_DWORD *)a1 = 516244815;
  *(_WORD *)(a1 + 4) = 18297;
  v27 = a26(120, 0x1000040F604211FLL);
  v28 = STACK[0x338];
  STACK[0x658] = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((99 * (v27 == 0)) ^ v26)) - ((v26 ^ 0x669u) - 885) + 75))();
}

uint64_t sub_1DE0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * v8) - 8))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1DE0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  int v66;
  unint64_t v67;
  uint64_t v68;

  v66 = (v63 + 245) | 0x280;
  *(_DWORD *)a1 = *(_DWORD *)v64;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(v64 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(v64 + 5);
  v67 = STACK[0x658];
  memset((void *)(STACK[0x658] + 8), 123, 48);
  v68 = *(_QWORD *)(v62 + 8 * (v66 - 874)) - 8;
  *(int64x2_t *)&STACK[0x310] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x320] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x2D91334F5BB9510FuLL);
  *(int64x2_t *)&STACK[0x300] = vdupq_n_s64(0xD26ECCB0A446AEF0);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0x809326E6CB048177);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0x796CD91934FB7E88uLL);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x15E0C622CB2C287CuLL);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0x8696A3A7E9195FFALL);
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0xA906B97A99076E9ALL);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0xADF28D0ACDF122CALL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0xE34B5DAE068A00FALL);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0x70D66EB3C93580B1uLL);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0x2925CA560D206332uLL);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0x71A5AED70345007DuLL);
  LODWORD(STACK[0x200]) = v65 - 807;
  *(_OWORD *)&STACK[0x240] = xmmword_2F2890;
  STACK[0x940] = v68;
  return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * ((1350 * (((241 * ((v66 + 46) ^ 0x3FEu)) ^ 0xFFFFFFFFFFFFFFF8) + 241 * ((v66 + 46) ^ 0x3FEu) != 16)) ^ (v66 + 46))))(a1, v67 + 0x77C8991B1798E0BLL, 0xADF28D0ACDF122CALL, 0xA906B97A99076E9ALL, 0x70D66EB3C93580B1, 0xE34B5DAE068A00FALL, 0x71A5AED70345007DLL, 0x2925CA560D206332, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62);
}

uint64_t sub_1DE440(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  int64x2_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int64x2_t v14;
  int8x16_t v15;
  int64x2_t v16;
  int64x2_t v17;
  unint64_t v18;
  int64x2_t v19;
  int64x2_t v20;
  int64x2_t v21;
  int64x2_t v22;
  int64x2_t v23;
  int64x2_t v24;
  int64x2_t v25;
  int8x16_t v26;
  int64x2_t v27;
  int64x2_t v28;
  int64x2_t v29;
  int64x2_t v30;
  int64x2_t v31;
  int64x2_t v32;
  int64x2_t v33;
  int64x2_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  int8x16_t v40;
  int8x16_t v41;
  int8x16_t v42;
  int8x16_t v43;
  int8x16_t v44;
  int8x16_t v45;
  int8x16_t v46;
  int8x16_t v47;
  int64x2_t v48;
  int64x2_t v49;
  int64x2_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int8x16_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int8x16x4_t v133;
  int8x16x4_t v134;

  v16.i64[0] = a2 + v2;
  v16.i64[1] = a2 + (v2 | 1);
  v17.i64[0] = a2 + (v2 | 2);
  v17.i64[1] = a2 + (v2 | 3);
  v18 = STACK[0x338];
  v19.i64[0] = a2 + (v2 | 4);
  v19.i64[1] = a2 + (v2 | 5);
  v20.i64[0] = a2 + (v2 | 0xA);
  v20.i64[1] = a2 + (v2 | 0xB);
  v21 = v20;
  v22.i64[0] = a2 + (v2 | 8);
  v22.i64[1] = a2 + (v2 | 9);
  *(int64x2_t *)&STACK[0x3D0] = v22;
  v23.i64[0] = a2 + (v2 | 0xC);
  v23.i64[1] = a2 + (v2 | 0xD);
  v24.i64[0] = a2 + (v2 | 6);
  v24.i64[1] = a2 + ((((v4 - 192) | 0xC8u) - 965) | v2);
  v25.i64[0] = a2 + (v2 | 0xE);
  v25.i64[1] = a2 + (v2 | 0xF);
  v26 = *(int8x16_t *)&STACK[0x310];
  v27 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v25, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v25, 8uLL)), *(int8x16_t *)&STACK[0x310]);
  v28 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v23, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v23, 8uLL)), *(int8x16_t *)&STACK[0x310]);
  *(int64x2_t *)&STACK[0x3E0] = v21;
  v29 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v22, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v22, 8uLL)), v26);
  v30 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v21, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v21, 8uLL)), v26);
  v31 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v16, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v16, 8uLL)), v26);
  v32 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v19, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v19, 8uLL)), v26);
  v33 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v17, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v17, 8uLL)), v26);
  v34 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v24, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v24, 8uLL)), v26);
  v36 = *(int64x2_t *)&STACK[0x2F0];
  v35 = *(int64x2_t *)&STACK[0x300];
  v37 = (int8x16_t)vaddq_s64(v32, *(int64x2_t *)&STACK[0x300]);
  v38 = (int8x16_t)vaddq_s64(v31, *(int64x2_t *)&STACK[0x300]);
  v39 = (int8x16_t)vaddq_s64(v30, *(int64x2_t *)&STACK[0x300]);
  v40 = (int8x16_t)vaddq_s64(v29, *(int64x2_t *)&STACK[0x300]);
  v42 = *(int8x16_t *)&STACK[0x2D0];
  v41 = *(int8x16_t *)&STACK[0x2E0];
  *(int8x16_t *)&STACK[0x340] = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x2F0], v33), *(int8x16_t *)&STACK[0x2E0]), vandq_s8((int8x16_t)vaddq_s64(v33, *(int64x2_t *)&STACK[0x300]), *(int8x16_t *)&STACK[0x2D0]));
  v43 = vandq_s8((int8x16_t)vsubq_s64(v36, v31), v41);
  v44 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v36, v32), v41), vandq_s8(v37, v42));
  v45 = vorrq_s8(v43, vandq_s8(v38, v42));
  *(int8x16_t *)&STACK[0x3B0] = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v36, v29), v41), vandq_s8(v40, v42));
  *(int8x16_t *)&STACK[0x3C0] = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v36, v30), v41), vandq_s8(v39, v42));
  *(int8x16_t *)&STACK[0x360] = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v36, v27), v41), vandq_s8((int8x16_t)vaddq_s64(v27, v35), v42));
  *(int8x16_t *)&STACK[0x370] = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v36, v28), v41), vandq_s8((int8x16_t)vaddq_s64(v28, v35), v42));
  v47 = *(int8x16_t *)&STACK[0x2B0];
  v46 = *(int8x16_t *)&STACK[0x2C0];
  v48 = (int64x2_t)veorq_s8(v45, *(int8x16_t *)&STACK[0x2C0]);
  *(int8x16_t *)&STACK[0x350] = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v36, v34), v41), vandq_s8((int8x16_t)vaddq_s64(v34, v35), v42));
  v49 = (int64x2_t)veorq_s8(v44, v46);
  v50 = (int64x2_t)veorq_s8(v44, v47);
  v51 = (int64x2_t)veorq_s8(v45, v47);
  v52 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v48, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 8uLL)), v51);
  v53 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v49, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v49, 8uLL)), v50);
  v54 = vorrq_s8((int8x16_t)vshlq_n_s64(v50, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v44, 0x3DuLL));
  v55 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v52, v52), *(int8x16_t *)&STACK[0x2A0]), v52), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v56 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v53, v53), *(int8x16_t *)&STACK[0x2A0]), v53), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v57 = (int64x2_t)veorq_s8((int8x16_t)v55, vorrq_s8((int8x16_t)vshlq_n_s64(v51, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 0x3DuLL)));
  v58 = (int64x2_t)veorq_s8((int8x16_t)v56, v54);
  v59 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v55, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v55, 8uLL));
  v60 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v56, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v56, 8uLL)), v58);
  v61 = vaddq_s64(v59, v57);
  v62 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v61, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v61, v61), *(int8x16_t *)&STACK[0x270])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x250]);
  v63 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v60, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v60, v60), *(int8x16_t *)&STACK[0x270])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x250]);
  v64 = (int64x2_t)veorq_s8((int8x16_t)v63, vorrq_s8((int8x16_t)vshlq_n_s64(v58, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 0x3DuLL)));
  v65 = (int64x2_t)veorq_s8((int8x16_t)v62, vorrq_s8((int8x16_t)vshlq_n_s64(v57, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 0x3DuLL)));
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v62, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 8uLL)), v65), v7);
  v67 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v63, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v63, 8uLL)), v64), v7);
  v68 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v65, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 0x3DuLL)));
  v69 = (int64x2_t)veorq_s8((int8x16_t)v67, vorrq_s8((int8x16_t)vshlq_n_s64(v64, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 0x3DuLL)));
  v70 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v68), v8);
  v71 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v67, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 8uLL)), v69), v8);
  v72 = (int64x2_t)veorq_s8((int8x16_t)v71, vorrq_s8((int8x16_t)vshlq_n_s64(v69, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 0x3DuLL)));
  v73 = (int64x2_t)veorq_s8((int8x16_t)v70, vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL)));
  v74 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), v73), v9);
  v75 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v71, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v71, 8uLL)), v72), v9);
  v76 = (int64x2_t)veorq_s8((int8x16_t)v74, vorrq_s8((int8x16_t)vshlq_n_s64(v73, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 0x3DuLL)));
  v77 = (int64x2_t)veorq_s8((int8x16_t)v75, vorrq_s8((int8x16_t)vshlq_n_s64(v72, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v72, 0x3DuLL)));
  v78 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v74, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 8uLL));
  v79 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), v77);
  v80 = vaddq_s64(v78, v76);
  v81 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v80, v80), v10), v80), v11), v12);
  v82 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v79, v79), v10), v79), v11), v12);
  v83 = (int64x2_t)veorq_s8((int8x16_t)v82, vorrq_s8((int8x16_t)vshlq_n_s64(v77, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 0x3DuLL)));
  v84 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x340], v46);
  v85 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v81, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v81, vorrq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 0x3DuLL))));
  v86 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL)), v83);
  v133.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v85, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v85, v85), v13)), v14), v15), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v16, 3uLL), *(int8x16_t *)&STACK[0x320])));
  v133.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v86, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v86, v86), v13)), v14), v15), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v19, 3uLL), *(int8x16_t *)&STACK[0x320])));
  v87 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x340], v47);
  v88 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v84, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 8uLL)), v87);
  v89 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v88, v88), *(int8x16_t *)&STACK[0x2A0]), v88), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v90 = (int64x2_t)veorq_s8((int8x16_t)v89, vorrq_s8((int8x16_t)vshlq_n_s64(v87, 3uLL), (int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x340], 0x3DuLL)));
  v91 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v90);
  v92 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v91, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v91, v91), *(int8x16_t *)&STACK[0x270])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x250]);
  v93 = (int64x2_t)veorq_s8((int8x16_t)v92, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL)));
  v94 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v92, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 8uLL)), v93), v7);
  v95 = (int64x2_t)veorq_s8((int8x16_t)v94, vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL)));
  v96 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v95), v8);
  v97 = (int64x2_t)veorq_s8((int8x16_t)v96, vorrq_s8((int8x16_t)vshlq_n_s64(v95, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 0x3DuLL)));
  v98 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v96, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v96, 8uLL)), v97), v9);
  v99 = (int64x2_t)veorq_s8((int8x16_t)v98, vorrq_s8((int8x16_t)vshlq_n_s64(v97, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 0x3DuLL)));
  v100 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v99);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v100, v100), v10), v100), v11), v12);
  v102 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL))));
  v103 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x350], v46);
  v133.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v102, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v102, v102), v13)), v14), v15), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v17, 3uLL), *(int8x16_t *)&STACK[0x320])));
  v104 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x350], v47);
  v105 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v104);
  v106 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v105, v105), *(int8x16_t *)&STACK[0x2A0]), v105), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v107 = (int64x2_t)veorq_s8((int8x16_t)v106, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x350], 0x3DuLL)));
  v108 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v106, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 8uLL)), v107);
  v109 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v108, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v108, v108), *(int8x16_t *)&STACK[0x270])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x250]);
  v110 = (int64x2_t)veorq_s8((int8x16_t)v109, vorrq_s8((int8x16_t)vshlq_n_s64(v107, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 0x3DuLL)));
  v111 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v109, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 8uLL)), v110), v7);
  v112 = (int64x2_t)veorq_s8((int8x16_t)v111, vorrq_s8((int8x16_t)vshlq_n_s64(v110, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 0x3DuLL)));
  v113 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), v112), v8);
  v114 = (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v115 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), v114), v9);
  v116 = (int64x2_t)veorq_s8((int8x16_t)v115, vorrq_s8((int8x16_t)vshlq_n_s64(v114, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 0x3DuLL)));
  v117 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v116);
  v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v117, v117), v10), v117), v11), v12);
  v119 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL))));
  v133.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v119, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v119, v119), v13)), v14), v15), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v24, 3uLL), *(int8x16_t *)&STACK[0x320])));
  v120 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x360], v46);
  v121 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x370], v46);
  v133.val[0].i64[0] = vqtbl4q_s8(v133, *(int8x16_t *)&STACK[0x240]).u64[0];
  v133.val[1] = veorq_s8(*(int8x16_t *)&STACK[0x370], v47);
  v133.val[2] = veorq_s8(*(int8x16_t *)&STACK[0x360], v47);
  v122 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v120, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 8uLL)), (int64x2_t)v133.val[2]);
  v133.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), (int64x2_t)v133.val[1]);
  v133.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[3], (int64x2_t)v133.val[3]), *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)v133.val[3]), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v123 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v122, v122), *(int8x16_t *)&STACK[0x2A0]), v122), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v133.val[2] = veorq_s8((int8x16_t)v123, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 3uLL), (int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x360], 0x3DuLL)));
  v133.val[1] = veorq_s8(v133.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x370], 0x3DuLL)));
  v133.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[3], 8uLL)), (int64x2_t)v133.val[1]);
  v124 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v123, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 8uLL)), (int64x2_t)v133.val[2]);
  v125 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v124, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v124, v124), *(int8x16_t *)&STACK[0x270])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x250]);
  v133.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v133.val[3], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[3], (int64x2_t)v133.val[3]), *(int8x16_t *)&STACK[0x270])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x250]);
  v133.val[1] = veorq_s8(v133.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = veorq_s8((int8x16_t)v125, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 0x3DuLL)));
  v133.val[3] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[3], 8uLL)), (int64x2_t)v133.val[1]), v7);
  v126 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v125, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 8uLL)), (int64x2_t)v133.val[2]), v7);
  v133.val[2] = veorq_s8((int8x16_t)v126, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 0x3DuLL)));
  v133.val[1] = veorq_s8(v133.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v127 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v126, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 8uLL)), (int64x2_t)v133.val[2]), v8);
  v133.val[3] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[3], 8uLL)), (int64x2_t)v133.val[1]), v8);
  v133.val[1] = veorq_s8(v133.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = veorq_s8((int8x16_t)v127, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 0x3DuLL)));
  v133.val[3] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[3], 8uLL)), (int64x2_t)v133.val[1]), v9);
  v128 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), (int64x2_t)v133.val[2]), v9);
  v133.val[2] = veorq_s8((int8x16_t)v128, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 0x3DuLL)));
  v133.val[1] = veorq_s8(v133.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[3] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[3], 8uLL)), (int64x2_t)v133.val[1]);
  v129 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), (int64x2_t)v133.val[2]);
  v130 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v129, v129), v10), v129), v11), v12);
  v133.val[3] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[3], (int64x2_t)v133.val[3]), v10), (int64x2_t)v133.val[3]), v11), v12);
  v131 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x3B0], v46);
  v133.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v130, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 0x3DuLL))));
  v133.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[3], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[3], 8uLL)), (int64x2_t)veorq_s8(v133.val[3], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL))));
  v134.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v133.val[2], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[2], (int64x2_t)v133.val[2]), v13)), v14), v15), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v25, 3uLL), *(int8x16_t *)&STACK[0x320])));
  v134.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v133.val[1], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[1], (int64x2_t)v133.val[1]), v13)), v14), v15), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v23, 3uLL), *(int8x16_t *)&STACK[0x320])));
  v133.val[1] = veorq_s8(*(int8x16_t *)&STACK[0x3B0], v47);
  v133.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), (int64x2_t)v133.val[1]);
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[2], (int64x2_t)v133.val[2]), *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)v133.val[2]), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x3B0], 0x3DuLL)));
  v133.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]);
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v133.val[2], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[2], (int64x2_t)v133.val[2]), *(int8x16_t *)&STACK[0x270])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x250]);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]), v7);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]), v8);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]), v9);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]);
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[2], (int64x2_t)v133.val[2]), v10), (int64x2_t)v133.val[2]), v11), v12);
  v133.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL))));
  v133.val[2] = veorq_s8(*(int8x16_t *)&STACK[0x3C0], v46);
  v134.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v133.val[1], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[1], (int64x2_t)v133.val[1]), v13)), v14), v15), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x3D0], 3uLL), *(int8x16_t *)&STACK[0x320])));
  v133.val[1] = veorq_s8(*(int8x16_t *)&STACK[0x3C0], v47);
  v133.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]);
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[2], (int64x2_t)v133.val[2]), *(int8x16_t *)&STACK[0x2A0]), (int64x2_t)v133.val[2]), *(int64x2_t *)&STACK[0x290]), *(int8x16_t *)&STACK[0x280]);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64(*(uint64x2_t *)&STACK[0x3C0], 0x3DuLL)));
  v133.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]);
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v133.val[2], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[2], (int64x2_t)v133.val[2]), *(int8x16_t *)&STACK[0x270])), *(int64x2_t *)&STACK[0x260]), *(int8x16_t *)&STACK[0x250]);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]), v7);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]), v8);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]), v9);
  v133.val[1] = veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL)));
  v133.val[2] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)v133.val[1]);
  v133.val[2] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[2], (int64x2_t)v133.val[2]), v10), (int64x2_t)v133.val[2]), v11), v12);
  v133.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[2], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[2], 8uLL)), (int64x2_t)veorq_s8(v133.val[2], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v133.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133.val[1], 0x3DuLL))));
  v134.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v133.val[1], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v133.val[1], (int64x2_t)v133.val[1]), v13)), v14), v15), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x3E0], 3uLL), *(int8x16_t *)&STACK[0x320])));
  v133.val[0].i64[1] = vqtbl4q_s8(v134, *(int8x16_t *)&STACK[0x240]).u64[0];
  *(int8x16_t *)(a2 + v2 + v5) = v133.val[0];
  return (*(uint64_t (**)(void))(v18 + 8 * (((v2 + 16 != v3) * v6) ^ v4)))();
}

uint64_t sub_1DF0EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v22 = __ROR8__(a1 + v10 - 0x2B09FDE2E26A582FLL, 8);
  v23 = (0x2D91334F5BB9510FLL - (v22 & 0xF8FFFFFFFFFFFFFFLL)) & 0x796CD91934FB7E88 | ((v22 & 0xF8FFFFFFFFFFFFFFLL)
                                                                                      - 0x2D91334F5BB95110) & ((v20 + a8) & v18 ^ v8);
  v24 = __ROR8__(v23 ^ 0x8696A3A7E9195FFALL, 8);
  v25 = ((a2 & (2 * (v24 + (v23 ^ 0x15E0C622CB2C287CLL)))) - (v24 + (v23 ^ 0x15E0C622CB2C287CLL)) + a3) ^ a4;
  *((_QWORD *)&v26 + 1) = v23 ^ 0x15E0C622CB2C287CLL;
  *(_QWORD *)&v26 = v23;
  v27 = v25 ^ (v26 >> 61);
  *(_QWORD *)&v26 = __ROR8__(v25, 8);
  v28 = __ROR8__((v26 + v27 - (a5 & (2 * (v26 + v27))) + a6) ^ a7, 8);
  v29 = (v26 + v27 - (a5 & (2 * (v26 + v27))) + a6) ^ a7 ^ __ROR8__(v27, 61);
  v30 = (v28 + v29) ^ 0xAE154F53AADE4F19;
  v31 = v30 ^ __ROR8__(v29, 61);
  v32 = (__ROR8__(v30, 8) + v31) ^ 0x61D51F22504A3CA0;
  v33 = v32 ^ __ROR8__(v31, 61);
  v34 = (__ROR8__(v32, 8) + v33) ^ v12;
  v35 = v34 ^ __ROR8__(v33, 61);
  *(_QWORD *)&v26 = __ROR8__(v34, 8);
  v36 = ((v13 | (2 * (v26 + v35))) - (v26 + v35) + v14) ^ v15;
  v37 = v36 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v26 = __ROR8__(v36, 8);
  *(_BYTE *)(a1 + v10 - 0x2B09FDE2E26A582FLL + v21) = (((_QWORD)v26 + v37 - (v16 & (2 * ((_QWORD)v26 + v37))) + v17) ^ v19) >> (8 * ((a1 + v10 - 47) & 7));
  return (*(uint64_t (**)(void))(v11 + 8 * ((62 * (v10 + 1 != v9)) ^ v20)))();
}

uint64_t sub_1DF274()
{
  return ((uint64_t (*)(void))STACK[0x940])();
}

void sub_1DF27C()
{
  JUMPOUT(0x1DE3A4);
}

uint64_t sub_1DF2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v8 = STACK[0x658];
  *(_QWORD *)(v8 + 108) = 0xA0405300000000;
  *(_DWORD *)(v8 + 116) = 1287862447;
  *(_BYTE *)(v8 + 104) = 0;
  v9 = STACK[0x238];
  STACK[0x808] = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * (int)((((v9 + 799728542) & 0xD055189D) + 3918) ^ v9)) - 8))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1DF334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  unint64_t v14;

  v10 = STACK[0x808];
  v11 = STACK[0x700];
  v12 = (char *)&a9 + STACK[0x700] - 0x560A55F423D95191;
  STACK[0x520] = (unint64_t)(v12 + 0x406E31579A3126F4);
  STACK[0x5C0] = (unint64_t)(v12 + 0x406E31579A312704);
  STACK[0x700] = v11 + 128;
  v13 = sub_2B070C(v12, 0, 0x20uLL);
  v14 = STACK[0x338];
  STACK[0x7F8] = 0;
  STACK[0x4E0] = v10;
  return (*(uint64_t (**)(_BYTE *))(v14 + 8 * (((v10 != 0) * (((v9 - 1647) | 0x3C4) ^ 0xF86)) ^ v9)))(v13);
}

uint64_t sub_1DF3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t))
{
  _BYTE *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  STACK[0x3D0] = (unint64_t)(v28 + 80);
  *(_DWORD *)(v30 - 216) = 31090337 * (((~(v30 - 224) & 0xCC2CD708) - (~(v30 - 224) | 0xCC2CD709)) ^ 0xBADB740)
                         - 1318648908
                         + v29
                         + 1191;
  v31 = a28(v30 - 224);
  *v28 = *(_QWORD *)(v30 - 224) ^ (3 * (v29 ^ 0x1F) + ((v29 + 101) | 0xC8) + 17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * ((v29 + 1126) ^ 0x2D6)) - 4))(v31);
}

uint64_t sub_1DF4B4@<X0>(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + ((v3 + 2579) ^ 0xE75u ^ (unint64_t)(v1 + 13)) + v4) = HIBYTE(a1) ^ 0x4A;
  return (*(uint64_t (**)(void))(v2 + 8 * (v3 ^ (747 * (v4 != 14)))))();
}

uint64_t sub_1DF4F4@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + v4 + 2) = (a1 >> ((3 * (v1 ^ 0xDF)) ^ 0x69u)) ^ 0xED;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (v4 == 13))) - 12))();
}

uint64_t sub_1DF534@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_BYTE *)(v2 + 3) = HIBYTE(a1) ^ 0xD9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((3102 * (((v4 == 12) ^ ((v1 ^ 0xC6 ^ v5) - 68)) & 1)) ^ v1 ^ 0xBC6))
                            - 8))();
}

uint64_t sub_1DF578@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_BYTE *)(v3 + v4 + 4) = BYTE4(a1) ^ 0xB3 ^ ((v1 ^ v5) - 81);
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ ((4 * (v4 == 11)) | ((v4 == 11) << 6)))))();
}

uint64_t sub_1DF5B4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 5) = (-45 * (v1 ^ 0xC9) + 103) ^ BYTE5(a1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (3362 * (v4 != 10)))) - 8))();
}

uint64_t sub_1DF5F4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 + (((v1 - 1977) | 0x268u) ^ v2) + v4) = BYTE6(a1) ^ 0x43;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((28 * (v4 + 1632984387 != (v1 + 104) + 1632982298)) ^ v1))
                            - 8))();
}

uint64_t sub_1DF658@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + v4 + 7) = HIBYTE(a1) ^ 0xAE;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (107 * (v4 != 8)))) - (((v1 - 1580) | 0x109u) - 150) + 629))();
}

uint64_t sub_1DF6A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1175 * (((v4 + v3 + 8 == v1 + 8) ^ (25 * (v0 ^ 0xD) + 1)) & 1)) ^ v0)))();
}

uint64_t sub_1DF6E4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = (v0 + 1315);
  *(_BYTE *)(v4 + (v5 ^ (v1 + 2621)) + v3) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (int)((((v5 ^ 0xBFE) - 155) * ((v3 + 8) < 0x10)) ^ v5))
                            - ((v0 - 1652008080) & 0x6277A3F9 ^ 0x27DLL)))();
}

uint64_t sub_1DF74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;

  v31 = 324 * (v29 ^ 0x674);
  STACK[0x700] = v30 + (v31 + 2134) - 3234;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((3985 * (a28 == 349819777)) ^ v31)) - ((v31 + 2003848913) & 0x888FAD6A)))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1DF770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t))
{
  uint64_t v28;
  _BYTE *v29;
  int v30;
  uint64_t v31;
  int v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;

  v29[47] = v29[15] + 33;
  v32 = (v30 + 1417) | 0x71;
  v29[46] = v29[14] + 33;
  v29[45] = v29[13] + 33;
  v29[44] = v29[12] + 33;
  v29[43] = v29[11] + (((v30 - 119) | 0x71) ^ 0x52);
  v33 = v29[9] + 33;
  v34 = v29[8] + 33;
  v35 = v29[7] + 33;
  v36 = v29[6] + 33;
  v37 = v29[5] + 33;
  v38 = v29[4] + 33;
  v39 = v29[3] + 33;
  v40 = v29[2] + 33;
  v41 = v29[1] + 33;
  v42 = *v29 + 33;
  v29[42] = v29[10] + 33;
  v29[41] = v33;
  STACK[0x3E0] = (unint64_t)&STACK[0xB40] + v28 - 0x560A55F400E71B77;
  v29[40] = v34;
  v29[39] = v35;
  v29[38] = v36;
  v29[37] = v37;
  v29[36] = v38;
  v29[35] = v39;
  v29[34] = v40;
  v29[33] = v41;
  v29[32] = v42;
  *(_DWORD *)(v31 - 216) = 31090337 * ((((v31 - 224) | 0x90D04384) - ((v31 - 224) & 0x90D04384)) ^ 0x575123CD)
                         - 1318648908
                         + v32;
  v43 = a28(v31 - 224);
  v44 = *(_QWORD *)(v31 - 224);
  *v29 = (((v30 - 119) | 0x71) - 13) ^ 0xE5 ^ v44;
  v29[1] = (39 * (((v30 - 119) | 0x71) ^ 0x60) + 101) ^ BYTE1(v44);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (v32 ^ 0x43F)) - 8))(v43);
}

uint64_t sub_1DF96C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  *(_BYTE *)(v1 + 2) = (((v3 + 65) | 0x40) - 121) ^ BYTE2(a1);
  *(_BYTE *)(v1 + 3) = HIBYTE(a1) ^ 0xD9;
  return (*(uint64_t (**)(void))(v2 + 8 * (v3 ^ ((v4 != 28) * v5))))();
}

uint64_t sub_1DF9A4@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v3 + v4;
  *(_BYTE *)(v5 + 4) = BYTE4(a1) ^ 0xCA;
  *(_BYTE *)(v5 + 5) = (a1 >> ((v2 ^ 0xF0u) + 19)) ^ 0xE0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((28 * (v4 + 586301786 != ((103 * (v2 ^ 0x2F0u)) ^ 0x22F24907))) ^ v2)))();
}

uint64_t sub_1DFA0C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 + 6) = BYTE6(a1) ^ 0xB4 ^ v1 ^ 0x84;
  *(_BYTE *)(v2 + 7) = HIBYTE(a1) ^ 0xAE;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((246 * (v4 + 586301794 != (v1 ^ 0xD15u) + 586300436)) ^ v1))
                            - 8))();
}

uint64_t sub_1DFA78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + 1788) * (a1 != v1 + 8)) ^ v2)))();
}

uint64_t sub_1DFA98()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v0 + 200) * ((v2 + 8) < 0x20)) ^ (v0 + 1404)))
                            - 8))();
}

uint64_t sub_1DFAC4()
{
  uint64_t v0;
  int8x16_t *v1;
  int v2;
  int8x16_t v3;

  v3.i64[0] = 0x2121212121212121;
  v3.i64[1] = 0x2121212121212121;
  v1[4] = vaddq_s8(v1[1], v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((3639 * (((2 * v2) ^ 0xBB0) == 396)) ^ v2)) - 8))();
}

uint64_t sub_1DFB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = STACK[0x3D0];
  v30 = v26;
  sub_2B070C((_BYTE *)STACK[0x3D0], 0, 0x18uLL);
  *(_QWORD *)(v28 + 104) = 0x1FA834112;
  *(_QWORD *)(v28 + 112) = 0x200000004;
  STACK[0x548] = v29;
  LODWORD(STACK[0x4A0]) = 0;
  STACK[0x6A8] = 0;
  v31 = a26(128, 0x10800400FED9166);
  STACK[0x7D8] = v31;
  return (*(uint64_t (**)(void))(v30 + 8 * (((v31 == 0) * (((486 * (v27 ^ 0x17E) - 584) | 0x248) ^ 0x335)) ^ v27)))();
}

uint64_t sub_1DFBBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  STACK[0x5B0] = *(_QWORD *)(v27 + 8 * (v26 - 831)) - 12;
  v28 = a26(112, 0x100004098D10E67);
  v29 = STACK[0x338];
  STACK[0x448] = v28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((35 * (v28 != 0)) | (v26 - 576)))
                            - ((v26 + 350788545) & 0xEB1761FE)
                            + 388))();
}

uint64_t sub_1DFC3C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;

  *(_DWORD *)a1 = 393260813;
  *(_DWORD *)(a1 + 4) = 767418101;
  *(_DWORD *)(a1 + 72) = 1736746834;
  *(_DWORD *)(a1 + 76) = 1736746834;
  *(_WORD *)(a1 + 80) = 867;
  memset((void *)(a1 + 8), 123, 64);
  v2 = STACK[0x448];
  *(_DWORD *)(v2 + 84) = 324886893;
  *(_DWORD *)(v2 + 104) = 170083016;
  memset((void *)(v2 + 88), 123, 16);
  *(_BYTE *)(v2 + 108) = 0;
  *v1 = v2;
  return ((uint64_t (*)(void))STACK[0x5B0])();
}

uint64_t sub_1DFCC0(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((a1 == 0) ^ (v2 - 125)) & 1) * (v2 + 1112)) ^ (v2 + 218)))
                            - 12))();
}

uint64_t sub_1DFCF0()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  int v3;

  if (STACK[0x6A8])
    v2 = STACK[0x7D8] == 0;
  else
    v2 = 1;
  v3 = !v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((v3 * (((((v1 - 899) ^ 0x516) - 539) | 0x88) ^ 0x1D5)) ^ (v1 - 899) ^ 0x516))
                            - (((((v1 - 899) ^ 0x516) - 1369) | 0x1A0u) ^ 0x1A2)))();
}

uint64_t sub_1DFDB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  *(_DWORD *)(a1 + 16) = *(_DWORD *)v1;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(v1 + 72);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(v1 + 76);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(v1 + 80);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(v1 + 81);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(v1 + 104);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(v1 + 84);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(v1 + 108) & 1 ^ 0xB1;
  *(_BYTE *)(a1 + 55) = *((_BYTE *)*(&off_38F180 + (v2 ^ 0x84)) + 7) ^ 0xF5 ^ *((_BYTE *)*(&off_38F180 + (v2 ^ 0x18B))
                                                                              + 6) ^ ((*(_BYTE *)(v1 + 39) | 0x2F)
                                                                                    + (((v2 + 94) | 0xA) ^ 0xDE | *(_BYTE *)(v1 + 39))
                                                                                    - 122) ^ *((_BYTE *)*(&off_38F180 + v2 - 324)
                                                                                             + 11);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * v2) - 8))();
}

void sub_1DFEC8()
{
  JUMPOUT(0x1DFE4CLL);
}

uint64_t sub_1DFED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v6 = 11 * (v2 ^ 0x73) - 80;
  *(_BYTE *)(a1 + 87) = *(_BYTE *)((v6 & 0x1F) + v4 + 3) ^ *(_BYTE *)(v3 + (v6 & 0x1F)) ^ *(_BYTE *)(v5 + (v6 & 0x1F)) ^ ((*(_BYTE *)(v1 + 71) | 0x2F) + (*(_BYTE *)(v1 + 71) | 0xD0) - 122) ^ (-69 * (v6 & 0x1F));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * v2) - 8))();
}

void sub_1DFF64()
{
  JUMPOUT(0x1DFF00);
}

uint64_t sub_1DFF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  unsigned int v9;

  *(_BYTE *)(a8 + 119) = *(_BYTE *)(v8 + 103);
  *(_BYTE *)(a8 + 118) = *(_BYTE *)(v8 + 102);
  *(_BYTE *)(a8 + 117) = *(_BYTE *)(v8 + 101);
  *(_BYTE *)(a8 + 116) = *(_BYTE *)(v8 + 100);
  *(_BYTE *)(a8 + 115) = *(_BYTE *)(v8 + 99);
  *(_BYTE *)(a8 + 114) = *(_BYTE *)(v8 + 98);
  *(_BYTE *)(a8 + 113) = *(_BYTE *)(v8 + 97);
  *(_BYTE *)(a8 + 112) = *(_BYTE *)(v8 + 96);
  *(_BYTE *)(a8 + 111) = *(_BYTE *)(v8 + 95);
  *(_BYTE *)(a8 + 110) = *(_BYTE *)(v8 + 94);
  *(_BYTE *)(a8 + 109) = *(_BYTE *)(v8 + 93);
  *(_BYTE *)(a8 + 108) = *(_BYTE *)(v8 + 92);
  *(_BYTE *)(a8 + 107) = *(_BYTE *)(v8 + 91);
  *(_BYTE *)(a8 + 106) = *(_BYTE *)(v8 + 90);
  *(_BYTE *)(a8 + 105) = *(_BYTE *)(v8 + 89);
  *(_BYTE *)(a8 + 104) = *(_BYTE *)(v8 + 88);
  *(_DWORD *)(a8 + 20) = *(_DWORD *)(v8 + 4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)((4056 * (*(_DWORD *)(v8 + 4) == 767418101)) ^ v9)) - (v9 ^ 0x55BLL)))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E0044()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3550 * (*(_DWORD *)(v0 + 72) != 1736746834)) ^ v1))
                            - 2 * (v1 - 403)
                            + 1940))();
}

uint64_t sub_1E007C@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(void);

  *(_DWORD *)(a1 + 20) = 767418102;
  return v1();
}

uint64_t sub_1E0090()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v2 + 218) ^ (308 * v0))) - ((v2 + 591799811) & 0xDCB9D77F) + 323))();
}

uint64_t sub_1E00C8()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((STACK[0x6A8] == 0) * (v1 ^ 0x3C0)) | (v1 - 73))) - 12))();
}

uint64_t sub_1E0144()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v2 = ((uint64_t (*)(void))STACK[0x218])();
  *v0 = 0;
  return v1(v2);
}

uint64_t sub_1E0154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  _BOOL4 v27;

  v27 = a26(16, 0x20040A4A59CD2) != 0;
  return (*(uint64_t (**)(void))(STACK[0x338] + 8 * ((v27 * (235 * (v26 ^ 0x3CE) + 1765)) ^ (v26 - 499))))();
}

uint64_t sub_1E01AC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  uint64_t v26;
  int v27;
  _BOOL4 v28;

  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)(v26 + 8) = (char *)a1 + 0x74C05FF805FC435ALL;
  v28 = a26(16, 0x20040A4A59CD2) == 0;
  return (*(uint64_t (**)(void))(STACK[0x338]
                              + 8 * ((v28 * (((v27 - 461) ^ 0x3C5) + ((v27 - 461) | 0x4A4) - 2154)) ^ v27)))();
}

uint64_t sub_1E0220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  uint64_t v28;
  unint64_t v29;
  int v30;

  LODWORD(STACK[0x6E8]) = a28;
  STACK[0x7B0] = v29;
  STACK[0x598] = *(_QWORD *)(v28 + 8 * (v30 - 782)) + ((v30 - 524) ^ 0xFFFFFFFFFFFFFE3CLL);
  return sub_1E5440(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E069C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  STACK[0x7D8] = 0;
  v10 = STACK[0x6E8];
  STACK[0x7F8] = 0;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 == a8) * ((211 * (v9 ^ 0x3C9)) ^ 0x28F)) ^ (v9 - 583))))();
}

uint64_t sub_1E06F0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((((a1 + 530661254) & 0xE05EBDDF) + 583) * (v1 != 0)) ^ a1))
                            - 8))();
}

uint64_t sub_1E0734@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  STACK[0x6B8] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((87 * (v3 != 0x74C05FF805FC435ALL)) ^ a1))
                            - ((a1 - 927) | 0x105u)
                            + 381))();
}

uint64_t sub_1E0780@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x508] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)(((((a1 + 1462320568) & 0xA8D6BFAD) + 29 * ((a1 + 1617) ^ 0xA01) - 3425)
                                               * (v2 == v3)) ^ (a1 + 1617)))
                            - 12))();
}

uint64_t sub_1E07D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  unint64_t v28;

  v27 = a26(32, 0x103004054B5FA7DLL);
  v28 = STACK[0x338];
  STACK[0x588] = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * (((v27 != 0) * (((v26 - 1975793886) & 0x75C42FDC) - 969)) ^ v26))
                            - 699 * (v26 ^ 0xCCEu)
                            + 2085))();
}

uint64_t sub_1E0844(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 177047925;
  v4 = v2(26, 3105161978);
  v5 = STACK[0x338];
  *(_QWORD *)(a1 + 24) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((117 * ((((v1 ^ 0x6B) + v1 + 41 + 1) ^ (v4 == 0)) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_1E08B8()
{
  uint64_t v0;
  _BYTE **v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  _BYTE *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v13;

  v3 = *(uint64_t (**)(void))(v0 + 8 * v2);
  LODWORD(STACK[0x3D0]) = ((v2 + 628) ^ 0x102) + 1287861471;
  LODWORD(STACK[0x3B0]) = LODWORD(STACK[0xA34]) ^ 0x825484BF;
  v13 = STACK[0xA30];
  LODWORD(STACK[0x3C0]) = 1287862443;
  LODWORD(STACK[0x370]) = LODWORD(STACK[0xB04]) ^ 0x825484BF;
  LODWORD(STACK[0x3E0]) = v13 ^ 0x825484BF;
  v4 = *v1;
  v5 = 1554976193 * ((1554976193 * (_DWORD)v4) ^ ((1554976193 * (_DWORD)v4) >> 16));
  v6 = STACK[0x230];
  v7 = STACK[0x228];
  v8 = STACK[0x220];
  *v4 = *(_BYTE *)(STACK[0x230] + (v5 >> 24)) ^ 0x36 ^ *(_BYTE *)(STACK[0x228] + (v5 >> 24)) ^ *(_BYTE *)(STACK[0x220] + (v5 >> 24)) ^ v5 ^ (-51 * ((1554976193 * ((1554976193 * (_DWORD)v4) ^ ((1554976193 * (_DWORD)v4) >> 16))) >> 24)) ^ 0xCE;
  v9 = 1554976193 * ((1554976193 * ((_DWORD)v4 + 1)) ^ ((1554976193 * ((_DWORD)v4 + 1)) >> 16));
  v4[1] = *(_BYTE *)(v6 + (v9 >> 24)) ^ 6 ^ *(_BYTE *)(v7 + (v9 >> 24)) ^ *(_BYTE *)(v8 + (v9 >> 24)) ^ v9 ^ (-51 * ((1554976193 * ((1554976193 * ((_DWORD)v4 + 1)) ^ ((1554976193 * ((_DWORD)v4 + 1)) >> 16))) >> 24)) ^ 0x97;
  v10 = 1554976193 * ((1554976193 * ((_DWORD)v4 + 2)) ^ ((1554976193 * ((_DWORD)v4 + 2)) >> 16));
  v4[2] = (-63 * ((-63 * ((_BYTE)v4 + 2)) ^ ((1554976193 * ((_DWORD)v4 + 2)) >> 16))) ^ 0xB6 ^ *(_BYTE *)(v6 + (v10 >> 24)) ^ *(_BYTE *)(v7 + (v10 >> 24)) ^ (-51 * ((1554976193 * ((1554976193 * ((_DWORD)v4 + 2)) ^ ((1554976193 * ((_DWORD)v4 + 2)) >> 16))) >> 24)) ^ *(_BYTE *)(v8 + (v10 >> 24)) ^ 0xBC;
  v11 = 1554976193 * ((1554976193 * ((_DWORD)v4 + 3)) ^ ((1554976193 * ((_DWORD)v4 + 3)) >> 16));
  v4[3] = v11 ^ 0xDE ^ (-51
                      * ((1554976193
                        * ((1554976193 * ((_DWORD)v4 + 3)) ^ ((1554976193 * ((_DWORD)v4 + 3)) >> 16))) >> 24)) ^ *(_BYTE *)(v6 + (v11 >> 24)) ^ *(_BYTE *)(v7 + (v11 >> 24)) ^ *(_BYTE *)(v8 + (v11 >> 24)) ^ 0x10;
  return v3();
}

void sub_1E08E0()
{
  JUMPOUT(0x1E0914);
}

uint64_t sub_1E0A4C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  char v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t (*v13)(void);
  unint64_t v14;

  v9 = *a3;
  v10 = 1554976193 * ((1554976193 * ((_DWORD)v9 + 4)) ^ ((1554976193 * (v9 + 4)) >> 16));
  v11 = STACK[0x230];
  v12 = STACK[0x228];
  v13 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * (v8 - 757)) - 8);
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(STACK[0x230] + (v10 >> 24)) ^ 0x28 ^ *(_BYTE *)(STACK[0x228] + (v10 >> 24)) ^ *(_BYTE *)(a4 + (v10 >> 24)) ^ (-63 * ((-63 * (v9 + 4)) ^ ((1554976193 * (v9 + 4)) >> 16))) ^ (((1554976193 * ((1554976193 * ((_DWORD)v9 + 4)) ^ ((1554976193 * (v9 + 4)) >> 16))) >> 24) * a7) ^ 0x78;
  v14 = 1554976193 * ((1554976193 * ((_DWORD)v9 + 5)) ^ ((1554976193 * (v9 + 5)) >> 16));
  *(_BYTE *)(v9 + 5) = *(_BYTE *)(v11 + (v14 >> 24)) ^ 0x5F ^ *(_BYTE *)(v12 + (v14 >> 24)) ^ *(_BYTE *)(a4 + (v14 >> 24)) ^ (-63 * ((-63 * (v9 + 5)) ^ ((1554976193 * (v9 + 5)) >> 16))) ^ (((1554976193 * ((1554976193 * ((_DWORD)v9 + 5)) ^ ((1554976193 * (v9 + 5)) >> 16))) >> 24) * a7) ^ v7;
  return v13();
}

void sub_1E0BBC()
{
  JUMPOUT(0x1E0908);
}

uint64_t sub_1E0D24@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  unint64_t v15;
  uint64_t (*v16)(void);
  _BYTE *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v15 = ((a1 + 955) + 0x3318607F81253ED7) ^ STACK[0xB08];
  v16 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * a1) - 8);
  v17 = *(_BYTE **)(STACK[0x838] + 24);
  v18 = 1554976193 * ((1554976193 * ((_DWORD)v17 + 10)) ^ ((1554976193 * ((_DWORD)v17 + 10)) >> 16));
  v19 = STACK[0x230];
  v20 = STACK[0x228];
  v21 = STACK[0x220];
  v17[10] = HIBYTE(v15) ^ *(_BYTE *)(STACK[0x230] + (v18 >> 24)) ^ *(_BYTE *)(STACK[0x228] + (v18 >> 24)) ^ *(_BYTE *)(STACK[0x220] + (v18 >> 24)) ^ (-63 * ((-63 * ((_BYTE)v17 + 10)) ^ ((1554976193 * ((_DWORD)v17 + 10)) >> 16))) ^ (-51 * ((1554976193 * ((1554976193 * ((_DWORD)v17 + 10)) ^ ((1554976193 * ((_DWORD)v17 + 10)) >> 16))) >> 24)) ^ 0x12;
  v22 = 1554976193 * ((1554976193 * ((_DWORD)v17 + 11)) ^ ((1554976193 * ((_DWORD)v17 + 11)) >> 16));
  v17[11] = BYTE6(v15) ^ *(_BYTE *)(v19 + (v22 >> 24)) ^ *(_BYTE *)(v20 + (v22 >> 24)) ^ *(_BYTE *)(v21 + (v22 >> 24)) ^ (-63 * ((-63 * ((_BYTE)v17 + 11)) ^ ((1554976193 * ((_DWORD)v17 + 11)) >> 16))) ^ (-51 * ((1554976193 * ((1554976193 * ((_DWORD)v17 + 11)) ^ ((1554976193 * ((_DWORD)v17 + 11)) >> 16))) >> 24)) ^ 0x76;
  v23 = 1554976193 * ((1554976193 * ((_DWORD)v17 + 12)) ^ ((1554976193 * ((_DWORD)v17 + 12)) >> 16));
  v17[12] = BYTE5(v15) ^ (-63 * ((-63 * ((_BYTE)v17 + 12)) ^ ((1554976193 * ((_DWORD)v17 + 12)) >> 16))) ^ *(_BYTE *)(a13 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + a15 + 4) ^ (15 * ((1554976193 * ((1554976193 * ((_DWORD)v17 + 12)) ^ ((1554976193 * ((_DWORD)v17 + 12)) >> 16))) >> 24)) ^ *(_BYTE *)((v23 >> 24) + a12 + 2) ^ 0xB;
  v24 = 1554976193 * ((1554976193 * ((_DWORD)v17 + 13)) ^ ((1554976193 * ((_DWORD)v17 + 13)) >> 16));
  v17[13] = BYTE4(v15) ^ (-63 * ((-63 * ((_BYTE)v17 + 13)) ^ ((1554976193 * ((_DWORD)v17 + 13)) >> 16))) ^ (15 * ((1554976193 * ((1554976193 * ((_DWORD)v17 + 13)) ^ ((1554976193 * ((_DWORD)v17 + 13)) >> 16))) >> 24)) ^ *(_BYTE *)(a13 + (v24 >> 24)) ^ *(_BYTE *)((v24 >> 24) + a15 + 4) ^ *(_BYTE *)((v24 >> 24) + a12 + 2) ^ 0x29;
  v25 = 1554976193 * ((1554976193 * ((_DWORD)v17 + 14)) ^ ((1554976193 * ((_DWORD)v17 + 14)) >> 16));
  v17[14] = BYTE3(v15) ^ (-63 * ((-63 * ((_BYTE)v17 + 14)) ^ ((1554976193 * ((_DWORD)v17 + 14)) >> 16))) ^ (15 * ((1554976193 * ((1554976193 * ((_DWORD)v17 + 14)) ^ ((1554976193 * ((_DWORD)v17 + 14)) >> 16))) >> 24)) ^ *(_BYTE *)(a13 + (v25 >> 24)) ^ *(_BYTE *)((v25 >> 24) + a15 + 4) ^ *(_BYTE *)((v25 >> 24) + a12 + 2) ^ 0xCA;
  v26 = 1554976193 * ((1554976193 * ((_DWORD)v17 + 15)) ^ ((1554976193 * ((_DWORD)v17 + 15)) >> 16));
  v17[15] = BYTE2(v15) ^ (-63 * ((-63 * ((_BYTE)v17 + 15)) ^ ((1554976193 * ((_DWORD)v17 + 15)) >> 16))) ^ (15 * ((1554976193 * ((1554976193 * ((_DWORD)v17 + 15)) ^ ((1554976193 * ((_DWORD)v17 + 15)) >> 16))) >> 24)) ^ *(_BYTE *)(a13 + (v26 >> 24)) ^ *(_BYTE *)((v26 >> 24) + a15 + 4) ^ *(_BYTE *)((v26 >> 24) + a12 + 2) ^ 0x9F;
  v27 = 1554976193 * ((1554976193 * ((_DWORD)v17 + 16)) ^ ((1554976193 * ((_DWORD)v17 + 16)) >> 16));
  v17[16] = BYTE1(v15) ^ (-63 * ((-63 * ((_BYTE)v17 + 16)) ^ ((1554976193 * ((_DWORD)v17 + 16)) >> 16))) ^ (15 * ((1554976193 * ((1554976193 * ((_DWORD)v17 + 16)) ^ ((1554976193 * ((_DWORD)v17 + 16)) >> 16))) >> 24)) ^ *(_BYTE *)(a13 + (v27 >> 24)) ^ *(_BYTE *)((v27 >> 24) + a15 + 4) ^ *(_BYTE *)((v27 >> 24) + a12 + 2) ^ 0xB9;
  v28 = 1554976193 * ((1554976193 * ((_DWORD)v17 + 17)) ^ ((1554976193 * ((_DWORD)v17 + 17)) >> 16));
  v17[17] = v15 ^ v28 ^ (15
                       * ((1554976193
                         * ((1554976193 * ((_DWORD)v17 + 17)) ^ ((1554976193 * ((_DWORD)v17 + 17)) >> 16))) >> 24)) ^ *(_BYTE *)(a13 + (v28 >> 24)) ^ *(_BYTE *)((v28 >> 24) + a15 + 4) ^ *(_BYTE *)((v28 >> 24) + a12 + 2) ^ 0x4E;
  return v16();
}

uint64_t sub_1E10BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  unint64_t v23;

  v23 = 1554976193
      * ((1554976193 * (*(_DWORD *)(STACK[0x588] + 24) + 25)) ^ ((1554976193
                                                                              * (*(_DWORD *)(STACK[0x588] + 24) + 25)) >> 16));
  *(_BYTE *)(*(_QWORD *)(STACK[0x588] + 24) + 25) = (*(_BYTE *)(STACK[0x508] - 0x406E31579A3126C5) - 33) ^ *(_BYTE *)(a20 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + a22 + 4) ^ *(_BYTE *)((v23 >> 24) + a19 + 2) ^ v23 ^ (15 * ((1554976193 * ((1554976193 * (*(_DWORD *)(STACK[0x588] + 24) + 25)) ^ ((1554976193 * (*(_DWORD *)(STACK[0x588] + 24) + 25)) >> 16))) >> 24));
  return (*(uint64_t (**)(void))(STACK[0x338] + 8 * ((1426 * (((v22 - 972) | 0x17) == 8)) ^ (v22 + 1367))))();
}

void sub_1E119C()
{
  JUMPOUT(0x1E111CLL);
}

uint64_t sub_1E11A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;

  v23 = *(_QWORD *)(STACK[0x488] + 24);
  v24 = 1554976193 * v23 - 670485527;
  v25 = (v24 ^ HIWORD(v24)) * ((v22 ^ 0x3D6) + 1554976167);
  *(_BYTE *)(v23 + 41) = (*(_BYTE *)(STACK[0x8D0] - 0x406E31579A3126B5) - 33) ^ *(_BYTE *)(a20 + (v25 >> 24)) ^ *(_BYTE *)((v25 >> 24) + a22 + 4) ^ *(_BYTE *)((v25 >> 24) + a19 + 2) ^ v25 ^ (15 * (((v24 ^ HIWORD(v24)) * ((v22 ^ 0x3D6) + 1554976167)) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * (v22 ^ 3)) - 8))();
}

void sub_1E127C()
{
  JUMPOUT(0x1E1208);
}

uint64_t sub_1E1288()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  STACK[0x8A8] = 0;
  v2 = STACK[0x6B8];
  STACK[0x718] = *(_QWORD *)(v1 + 8 * v0);
  LODWORD(STACK[0xB24]) = -1269681567;
  STACK[0xB28] = (unint64_t)&STACK[0x8A8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v2 != 0x74C05FF805FC435ALL)
                                               * ((6 * (((v0 + 1) | 0x243) ^ 0x2F9) + 1351) ^ (54
                                                                                             * (((v0 + 1) | 0x243) ^ 0x249)))) ^ ((v0 + 1) | 0x243)))
                            - 8))();
}

uint64_t sub_1E12AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = ((_DWORD)v0 + 576) | 1u;
  STACK[0x8C8] = 0;
  v3 = STACK[0x578];
  STACK[0x718] = (v2 ^ 0xFFFFFFFFFFFFFDAFLL) + *(_QWORD *)(v1 + 8 * v0);
  LODWORD(STACK[0xB24]) = -1182484175;
  STACK[0xB28] = (unint64_t)&STACK[0x8C8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v3 != 0x74C05FF805FC435ALL)
                                               * ((6 * (v2 ^ 0x2F9) + 1351) ^ (54 * (v2 ^ 0x249)))) ^ v2))
                            - 8))();
}

uint64_t sub_1E135C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;

  v17 = v16 - 1;
  v18 = (v16 - 1874566883);
  v19 = *(_BYTE *)(STACK[0xB10] + v18);
  v20 = v18 + *(_QWORD *)(STACK[0x838] + 24);
  v21 = 1554976193 * ((1554976193 * ((_DWORD)v20 + 10)) ^ ((1554976193 * (v20 + 10)) >> 16));
  *(_BYTE *)(v20 + 10) = *(_BYTE *)(a13 + (v21 >> 24)) ^ v19 ^ *(_BYTE *)((v21 >> 24) + a15 + 4) ^ *(_BYTE *)((v21 >> 24) + a12 + 2) ^ v21 ^ (15 * ((1554976193 * ((1554976193 * ((_DWORD)v20 + 10)) ^ ((1554976193 * (v20 + 10)) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((2104 * (v17 != a1)) ^ v15)) - 8))();
}

void sub_1E1400()
{
  JUMPOUT(0x1E1378);
}

void sub_1E1408()
{
  int v0;

  STACK[0x898] = 0;
  STACK[0x718] = ((v0 - 1676193777) & 0x63E8AE7F) + *(_QWORD *)(STACK[0x338] + 8 * (v0 - 951)) - 615;
  JUMPOUT(0x1EBB34);
}

void sub_1E14F4()
{
  int v0;

  STACK[0x610] = 0;
  STACK[0x718] = 67 * (v0 ^ 0x3C5u) + *(_QWORD *)(STACK[0x338] + 8 * (v0 - 942)) - 607;
  JUMPOUT(0x1EBB34);
}

uint64_t sub_1E1530@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v12 = (v7 ^ v6) + v11 - 646969668;
  v13 = v9 + v12;
  v14 = *(_BYTE *)(v9 + v12);
  v15 = v12 + v8;
  v16 = 1554976193 * ((1554976193 * v13) ^ ((1554976193 * v13) >> 16));
  v17 = (unint64_t)(1554976193
                         * ((1554976193 * ((_DWORD)v15 + 10)) ^ ((1554976193 * (v15 + 10)) >> 16))) >> 24;
  *(_BYTE *)(v15 + 10) = *(_BYTE *)(a6 + (v16 >> 24)) ^ v14 ^ *(_BYTE *)((v16 >> 24) + a5 + 1) ^ *(_BYTE *)((v16 >> 24) + a4 + 5) ^ *(_BYTE *)(a6 + v17) ^ *(_BYTE *)(v17 + a5 + 1) ^ *(_BYTE *)(v17 + a4 + 5) ^ (-63 * ((-63 * (v15 + 10)) ^ ((1554976193 * (v15 + 10)) >> 16))) ^ v16 ^ (-105 * BYTE3(v16)) ^ (-105 * ((1554976193 * ((1554976193 * ((_DWORD)v15 + 10)) ^ ((1554976193 * (v15 + 10)) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * (((v11 - 1 == a1) * v10) ^ v7)) - 12))();
}

uint64_t sub_1E1614()
{
  uint64_t v0;
  int v1;
  int v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  if (v1 == 349819777)
  {
    v4 = (_QWORD *)STACK[0x8A8];
    v5 = *(_QWORD *)(STACK[0x8A8] + 8);
    v6 = (_QWORD *)STACK[0x588];
    v6[1] = v5;
    *v6 = *v4;
    return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                          + 8
                                          * (((((v5 == 0) ^ (v2 + 35)) & 1)
                                            * (((v2 + 1657875235) ^ 0x62D12A43) - 1123)) ^ (v2 + 224)))
                              - 4))();
  }
  else if (v1 == 349777725)
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                          + 8
                                          * (int)(((*(_QWORD *)(STACK[0x6B8] - 0x74C05FF805FC4352) == 0)
                                                 * ((v2 + 2141661070) & 0x8058D7FF ^ 0x3A5)) ^ (v2 + 2186)))
                              - ((v2 + 2141661070) ^ 0x7FA72F45u)
                              + 1047))();
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((101 * (*(_QWORD *)(STACK[0x588] + 24) == 0)) ^ (v2 - 292)))
                              - ((9 * (((v2 - 628) | 0x202) ^ 0x3B3u)) ^ 0x839)))();
  }
}

uint64_t sub_1E16AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  *a1 = v1;
  *(_QWORD *)(v2 - 0x74C05FF805FC435ALL) = v1;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2742
                                * (((v5 + 162 * (((v3 - 798) | 0x84) ^ 0x183) - 1140) ^ (((v3 - 798) | 0x84) - 45)) == 349819777)) ^ ((v3 - 798) | 0x84))))();
}

uint64_t sub_1E1728()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((1879 * (((v2 == 0) ^ (v1 + 43)) & 1)) ^ v1)))();
}

uint64_t sub_1E17A4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  int v2;
  uint64_t v3;

  *v1 = a1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*a1 != 0) * ((((v2 - 1160) | 0x68B) - 166181712) & 0x9E7B7B7 ^ 0x9F6)) ^ ((v2 - 1160) | 0x68B))))();
}

uint64_t sub_1E17F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 8) = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((*(_QWORD *)(a1 + 8) == 0) * (v2 ^ 0xF35)) ^ v2 ^ 0x5B8)))();
}

uint64_t sub_1E1828@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0x6B8] - 0x74C05FF805FC435ALL) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4071 * (*a1 == 0)) ^ ((v1 - 383) | 0x402)))
                            - ((((v1 - 383) | 0x402) - 328) | 0x220u)
                            + 1642))();
}

uint64_t sub_1E1880@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  *(_QWORD *)(STACK[0x6B8] - 0x74C05FF805FC4352) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((3095
                                          * ((((66 * (v1 ^ 0x583) - 792) ^ (*(_QWORD *)(STACK[0x8A8] + 24) == 0)) & 1) == 0)) ^ (66 * (v1 ^ 0x583))))
                            - 8))();
}

void sub_1E18E8(uint64_t a1@<X8>)
{
  void (*v1)(void);

  v1 = (void (*)(void))STACK[0x218];
  ((void (*)(uint64_t))STACK[0x218])(a1);
  *(_QWORD *)(STACK[0x8A8] + 24) = 0;
  v1();
  STACK[0x8A8] = 0;
  JUMPOUT(0x1E1A64);
}

void sub_1E1918()
{
  uint64_t v0;

  ((void (*)(void))STACK[0x218])();
  *(_QWORD *)(v0 + 24) = 0;
  ((void (*)(uint64_t))STACK[0x218])(v0);
  JUMPOUT(0x1E1A60);
}

void sub_1E1940(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = v1;
  *(_QWORD *)(v1 + 8) = *a1;
  *a1 = v1;
  JUMPOUT(0x1E1958);
}

uint64_t sub_1E1964()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v0 != 0) * (((v1 & 0x9D2ED7BF) - 166181712) & 0x9E7B7B7 ^ 0x9F6)) ^ v1 & 0x9D2ED7BF)))();
}

uint64_t sub_1E19A8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*(_QWORD *)(a1 + 8) == 0) * (v1 ^ 0xA8D)) ^ v1)))();
}

uint64_t sub_1E19D4@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4071 * (*a1 == 0)) ^ v1)) - ((v1 - 328) | 0x220u) + 1642))();
}

uint64_t sub_1E1A08()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((3095 * ((((v0 - 792) ^ (*(_QWORD *)(STACK[0x8A8] + 24) == 0)) & 1) == 0)) ^ v0))
                            - 8))();
}

uint64_t sub_1E1AA4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((STACK[0x7F8] != 0) * (54 * (a1 ^ 0x14A) + 1854)) ^ a1)) - 4))();
}

uint64_t sub_1E1AE0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(v1 + 8);
  STACK[0x578] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v3 != 0x74C05FF805FC435ALL) * ((a1 ^ 0x294) + 1388)) ^ a1)) - 4))();
}

uint64_t sub_1E1B24@<X0>(int a1@<W8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x8D0] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((((108 * (a1 ^ 0x151) + 1975498787) & 0x8A404F9F ^ 0x3DD) * (v2 != v3)) ^ a1))
                            - 4))();
}

uint64_t sub_1E1B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a26(32, 0x103004054B5FA7DLL);
  STACK[0x488] = v28;
  return (*(uint64_t (**)(void))(v27 + 8 * ((47 * (v28 != 0)) ^ v26)))();
}

uint64_t sub_1E1BB4(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 177047941;
  v5 = v1;
  v6 = v3(42, 3105161978);
  *(_QWORD *)(a1 + 24) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((79 * (v6 != 0)) ^ (8 * (v2 ^ 0xA8B))))
                            - (8 * (v2 ^ 0xA8Bu)
                             - 2022
                             + ((16 * (v2 ^ 0xA8Bu)) ^ 0xFFFFFFFFFFFFEF8ALL))))();
}

void sub_1E1C30()
{
  JUMPOUT(0x1E08D4);
}

uint64_t sub_1E1C64()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((*(_QWORD *)(STACK[0x488] + 24) == 0)
                                          * (((((v1 ^ 0x843) + 1076) | 0x20) - 1747) ^ ((v1 ^ 0x843) - 628))) ^ ((v1 ^ 0x843) + 157)))
                            - 8))();
}

void sub_1E1CAC(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  v4 = a1 ^ 0x978;
  v5 = v1;
  ((void (*)(void))STACK[0x218])();
  *(_QWORD *)(v2 + 24) = 0;
  ((void (*)(uint64_t))STACK[0x218])(v2);
  LODWORD(STACK[0x6C4]) = v3;
  STACK[0x598] = *(_QWORD *)(v5 + 8 * (((v4 - 340) | 0x3C8) - 765));
  JUMPOUT(0x1E5434);
}

uint64_t sub_1E5440@<X0>(int a1@<W8>)
{
  unint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x870] = (unint64_t)v1;
  v4 = *(_QWORD *)(v3 + 8 * ((3022 * (((a1 + 1) ^ (*v1 == 0)) & 1)) ^ a1));
  STACK[0x748] = *v1;
  return ((uint64_t (*)(void))(v4 - (v2 & 0xADC402AE ^ 0x82)))();
}

uint64_t sub_1E5490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  STACK[0x8D8] = *(_QWORD *)(v2 + 8 * (v1 & 0xFFFFFFFFADC402AELL));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (int)((((((5 * (((v1 & 0xADC402AE) + 2728) ^ 0xB4C) - 162) ^ (v0 == -8)) & 1) == 0) * (((5 * (((v1 & 0xADC402AE) + 2728) ^ 0xB4C) - 1214323748) & 0x48611BEF) + 1744)) ^ (5 * (((v1 & 0xADC402AE) + 2728) ^ 0xB4C))))
                                                                                                - 12))(2682281981, 969, 614, 0x74C05FF805FC435ALL, 2994, 3067, 454);
}

void sub_1E54B0()
{
  JUMPOUT(0x1E54BCLL);
}

uint64_t sub_1E5504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  BOOL v27;

  v27 = a26(16, 0x20040A4A59CD2) == 0;
  return (*(uint64_t (**)(void))(STACK[0x338] + 8 * ((25 * ((v27 ^ (v26 - 1)) & 1)) | v26)))();
}

uint64_t sub_1E555C(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v3 = (v2 - 1532138275) & 0x5B5287B8;
  v4 = 77 * (v3 ^ 0xB3);
  *a1 = 0;
  a1[1] = 0;
  STACK[0x8F8] = (unint64_t)a1 + 0x74C05FF805FC435ALL;
  STACK[0x5D8] = v4 + *(_QWORD *)(v1 + 8 * v3) - 859;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)((((_QWORD *)((char *)a1 + 0x74C05FF805FC435ALL) != (_QWORD *)0x74C05FF805FC435ALL)
                                               * (((v4 + 57) | 0x44) ^ 0x307)) ^ v4))
                            - 8))();
}

uint64_t sub_1E55C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((8 * v10) ^ 0x1E68) + 2017) * (v9 == a8)) ^ v10)) - 8))();
}

uint64_t sub_1E55F0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unint64_t v3;

  v2 = a1 ^ 0x1EC8;
  v3 = STACK[0x8F8];
  STACK[0x4F0] = *(_QWORD *)(v1 + 8 * v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((59 * (v3 == 0x74C05FF805FC435ALL)) ^ (v2 + 2353)))
                            - (((v2 + 2353) ^ 0x9C4u)
                             + 943)
                            + 964))();
}

uint64_t sub_1E561C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((((v10 - 83068880) & 0x4F3840B ^ 0xB1D) * (v9 == a8)) ^ v10)) - 8))();
}

uint64_t sub_1E5658()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_QWORD *)(v1 - 216) = &STACK[0xC3F];
  *(_DWORD *)(v1 - 220) = v0
                        - 1314530549 * ((((2 * (v1 - 224)) | 0x2F996C14) - (v1 - 224) - 399291914) ^ 0xA6C530C4)
                        - 1014253259;
  v2 = sub_2B5614(v1 - 224);
  v3 = *(_DWORD *)(v1 - 224) == ((v0 - 81390688) & 0x4D9E89B) + 349819769;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (((8 * v3) | (v3 << 10)) ^ v0)) - 8))(v2);
}

uint64_t sub_1E5700()
{
  int v0;
  unint64_t v1;
  unint64_t v2;

  v1 = STACK[0x8F8];
  ((void (*)(unint64_t *, uint64_t))*(&off_38F180 + v0 - 801))(&STACK[0xC3F], 4096);
  v2 = STACK[0x338];
  STACK[0x4F0] = *(_QWORD *)(STACK[0x338] + 8 * (v0 - 795));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((59 * (v1 == 0x74C05FF805FC435ALL)) ^ (v0 + 1549)))
                            - (((v0 + 1549) ^ 0x9C4u)
                             + 943)
                            + 964))();
}

uint64_t sub_1E577C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  uint64_t v15;
  int v16;
  int v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((1079 * (v16 == a8 + a15 - 8)) ^ v17)) - 8))();
}

void sub_1E57AC()
{
  JUMPOUT(0x1E57C0);
}

uint64_t sub_1E582C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 + 490) | 0x8B) ^ (v1 - 1244771723) & 0x4A31B7FF ^ 0x85)
                                * (*(_QWORD *)(v0 - 0x74C05FF805FC435ALL) == 0)) | v1)))();
}

uint64_t sub_1E5894()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((3723
                                          * (16
                                           - (((_BYTE)v0 + 3) & 0xFu)
                                           + (unint64_t)(v0 - 69486791) < 0xFFFFFFF6)) ^ v1))
                            - ((v1 - 943) | 0x2CCu)
                            + 964))();
}

uint64_t sub_1E58F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(_QWORD, uint64_t))
{
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  _BOOL4 v31;

  v29 = v27 - 6;
  v30 = (v27 - 6) ^ 0x765u;
  v31 = a26((1476775453 - v28 + v26 - ((v27 - 487 + 2 * (1476775453 - v28 + v26) + 1202442148) & 0x9986715E) - 258399771) ^ 0x4CC338AF, 3704316136) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((2 * v31) | (4 * v31) | v29)) - v30 + 964))();
}

uint64_t sub_1E5998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  _QWORD *v21;
  int v22;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((56 * (*v21 != 0)) ^ v22))
                                                                                                - (v22 - 35)
                                                                                                - 29 * (v22 ^ 0x2F9u)
                                                                                                + 2090))(a1, a2, a3, a4, a5, 2618593937, a20);
}

uint64_t sub_1E59F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v7 = (v3 - 1928744421);
  v8 = ((2 * v7) & 0x1BFFF9BDALL) + (v7 ^ 0xF3E6FAF6DFFFCDEDLL);
  *(_BYTE *)(a1 + v8 + ((a3 + 522) ^ 0xC190509200036BCLL)) = 0;
  v9 = a1 + 0xC19050920003214 + v8;
  *(_WORD *)v9 = 0;
  *(_BYTE *)(v9 + 2) = 0;
  *(_WORD *)(a1
           + ((2 * (v7 + 4)) & 0x1BDDFB1DELL)
           + ((v7 + 4) ^ 0x37FFFF7FDEEFD8EFLL)
           - 0x37FFFF7FDEEFD8EFLL) = -9392;
  v10 = a1
      + ((2 * (v7 + 6)) & 0x17FFFBBCELL)
      + ((v7 + 6) ^ 0x73EFFFF2BFFFDDE7)
      - 0x73EFFFF2BFFFDDE7;
  *(_WORD *)v10 = 0;
  *(_BYTE *)(v10 + 2) = 0;
  *(_BYTE *)(v10 + 3) = (-58 - v5 - ((2 * v6 + 102) & 0x6C)) ^ 0xB6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (a3 | (8
                                               * (((16 - v5) ^ 0xDF7EDBF2E9DFDFDDLL)
                                                + ((2 * (16 - v5)) & 0x3ALL)
                                                + 0x2081240DB234B2B4 != a2))))
                            - 8))();
}

uint64_t sub_1E5B78(uint64_t a1)
{
  _QWORD *v1;
  _DWORD *v2;
  uint64_t (*v3)(void);
  int v4;

  *v1 = a1;
  *v2 = v4;
  return v3();
}

uint64_t sub_1E5B90@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((((STACK[0x238] + 1019561648) & 0xC33AB58B ^ 0x66D) + (STACK[0x238] ^ 4))
                                               * a1) ^ STACK[0x238]))
                            - 8))();
}

uint64_t sub_1E5BD0()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  v2 = STACK[0x77C];
  v3 = 1437274309 * ((v1 - 224) ^ 0x220E7D35);
  *(_QWORD *)(v1 - 224) = STACK[0x928];
  *(_DWORD *)(v1 - 212) = ((v2 ^ 0x231C461A) - 151022208 + ((2 * v2) & 0xDFBEFD6A ^ (v0 - 1719243207 + v0 - 960 - 191))) ^ v3;
  *(_DWORD *)(v1 - 208) = v3 + v0 + 854;
  v4 = ((uint64_t (*)(uint64_t))((char *)*(&off_38F180 + v0 - 794) - 12))(v1 - 224);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x338]
                                                      + 8 * (v0 ^ (4 * (*(_DWORD *)(v1 - 216) != 349819777))))
                                          - 8))(v4);
}

void sub_1E5C94()
{
  uint64_t v0;
  int v1;

  STACK[0x938] = (((v1 - 159) | 0x68Au) ^ 0xFFFFFFFFFFFFF97ALL) + *(_QWORD *)(v0 + 8 * v1);
  JUMPOUT(0x1E5CBCLL);
}

uint64_t sub_1E5CD0@<X0>(unint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t, uint64_t))
{
  unint64_t v19;
  char v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;

  STACK[0x6D8] = v19;
  v25 = v22 + v20;
  LODWORD(STACK[0x68C]) = v23;
  STACK[0x900] = a1;
  STACK[0x858] = 0x373DC8D820372C2CLL;
  LODWORD(STACK[0x7A0]) = v21;
  STACK[0x728] = 0x216E6B564BBAFBEDLL;
  STACK[0x8B8] = 0;
  v26 = a19(16, 0x20040A4A59CD2);
  STACK[0x4F8] = v26 + 0x74C05FF805FC435ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v24 + 8 * ((446 * ((v25 ^ (v26 == 0)) & 1)) ^ v22)) - 12))();
}

uint64_t sub_1E5D78(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  *a1 = 0;
  a1[1] = 0;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((unint64_t)(v2 ^ 0x4CC330F5 ^ (1069
                                                                       * ((((v3 & 0x5F56AF1) - 449) | 0x46C) ^ 0x57Eu)))
                                 + 158090656 <= 0x96C45A0)
                                * (2 * ((((v3 & 0x5F56AF1) - 449) | 0x46C) ^ 0x49A) - 743)) ^ (((v3 & 0x5F56AF1) - 449) | 0x46C))))();
}

uint64_t sub_1E5DA8()
{
  return ((uint64_t (*)(void))STACK[0x938])();
}

uint64_t sub_1E5DB4()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((133 * (*v0 == 0)) | v1)))();
}

uint64_t sub_1E5DF8()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  BOOL v4;
  int v5;
  int v6;
  _BOOL4 v7;

  v3 = 2033647463 - *(_DWORD *)(v1 + 16);
  v4 = v0 + 1787112774 > v3;
  v5 = (v0 + 1787112774 < (v2 + 1856598366)) ^ (v3 < 0x6EA9760D);
  v6 = v4;
  if (v5)
    v7 = v0 + 1787112774 < (v2 + 1856598366);
  else
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((3945 * !v7) ^ v2)) - ((v2 - 239) | 0xCu) + 964))();
}

uint64_t sub_1E5E88@<X0>(unint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _BOOL4 v6;
  unint64_t v7;

  v6 = v4 < a1;
  *(_BYTE *)(v3 + v2) = 0;
  v7 = v2 + 1;
  if (v6 == v7 > 0xFFFFFFFF63EB6D6ELL)
    v6 = v7 + a1 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 ^ (8 * v6))) - ((a2 + 1677781786) & 0x9BFF16EF) + 1191))();
}

uint64_t sub_1E5EEC()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((56 * (((v1 - 39) ^ (*v0 == 0)) & 1)) ^ (v1 - 260)))
                            - 8))();
}

uint64_t sub_1E5F40()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  v3 = *(_DWORD *)(v0 + 16) - ((((v1 - 449) ^ 0x6AE4EE86) + 2 * *(_DWORD *)(v0 + 16)) & 0x4F5EF6E4) - 1658719721;
  v4 = (v3 ^ 0xFC509085) + ((2 * v3) & 0xB7FFD7EE ^ 0x75ED6E4) == 1543498743;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((8 * v4) | (16 * v4)) ^ v1)) - 4))();
}

uint64_t sub_1E5FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char *v15;
  char v16;
  unint64_t v17;

  v14 = v11 + v10 - 1543498744;
  v15 = (char *)(*(_QWORD *)(v7 + 24) + v14);
  v16 = *v15;
  v17 = 1554976193 * ((1554976193 * (_DWORD)v15) ^ ((1554976193 * (_DWORD)v15) >> 16));
  *(_BYTE *)(a1
           + ((v8 - 1928744421) ^ 0x7D1D4DFFEDAFF7EFLL)
           - 0x7D1D4DFFEDAFF7EFLL
           + ((2 * (v8 - 1928744421)) & 0x1DB5FEFDELL)
           + v14) = *(_BYTE *)(a7 + (v17 >> 24)) ^ v16 ^ *(_BYTE *)(v13 + (v9 ^ 0x19Fu) - 591 + (v17 >> 24)) ^ *(_BYTE *)((v17 >> 24) + v12 + 2) ^ v17 ^ (15 * BYTE3(v17));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * (((2 * (v14 == 0)) | (8 * (v14 == 0))) ^ v9 ^ 0x19F))
                            - 4))();
}

void sub_1E60AC()
{
  JUMPOUT(0x1E6028);
}

uint64_t sub_1E60B4()
{
  return sub_1E5EEC();
}

uint64_t sub_1E60C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v10 ^ (1852 * (v9 == a8)))) - ((v10 - 117) ^ 0x35Fu)))();
}

uint64_t sub_1E60EC()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((v0 - 803975003) ^ (STACK[0x830] == 0x74C05FF805FC435ALL)) & 1) == 0)
                                     * ((v0 + 138978447) & 0xF7B75FFF ^ 0x32F)) ^ v0)))();
}

uint64_t sub_1E6150@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x428] = 0;
  STACK[0x558] = 0x7230E0A670625D25;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (4043 * (a1 != v2)))) - ((v1 - 1754) | 0x2C0u) + 960))();
}

uint64_t sub_1E61A0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = v1 - 2011;
  v4 = (v3 - 1730526352) & 0x6725BEDF;
  STACK[0x718] = (v4 ^ 0xFFFFFFFFFFFFFDA7) + *(_QWORD *)(v2 + 8 * v3);
  LODWORD(STACK[0xB24]) = -840392126;
  STACK[0xB28] = (unint64_t)&STACK[0x428];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 != 0x74C05FF805FC435ALL)
                                               * ((6 * (v4 ^ 0x2F9) + 1351) ^ (54 * (v4 ^ 0x249)))) ^ v4))
                            - 8))();
}

uint64_t sub_1E61E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((a8 == 349777754) * (((v8 & 0x2FEBAFCF ^ 0x269) - 413) ^ 0x9AD)) ^ v8 & 0x2FEBAFCF))
                            - 8))();
}

uint64_t sub_1E622C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((972 * (v9 == a8 + 395 * (v10 ^ 0x3CF) - 1185)) ^ (v10 + 213)))
                            - 4))();
}

uint64_t sub_1E626C()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  v2 = 108 * (v0 ^ 0x4A8);
  v3 = v0 - 53;
  v4 = *(_QWORD *)(STACK[0x428] + 24);
  v5 = *(_QWORD *)(v1 + 8 * ((899 * (v4 != 0)) ^ v0));
  STACK[0x510] = v4;
  return ((uint64_t (*)(void))(v5 - (v3 ^ v2 ^ 0x7A4)))();
}

uint64_t sub_1E62C4()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = (v1 - 177047899);
  STACK[0x9C8] = v3;
  v4 = STACK[0x558];
  STACK[0x9D0] = STACK[0x558];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((205
                                          * (v3 + 0x7230E0A670625D25 - v4 <= ((v0 + 759463439) & 0xD2BB7DCFuLL) - 66)) ^ v0))
                            - 4))();
}

uint64_t sub_1E6344@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  int v60;
  uint64_t (*v61)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t, unint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t);
  unint64_t v62;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;

  v58 = v56 & 0xFFFFFFFFD2BB7DCFLL;
  v59 = (2 * (v56 & 0xD2BB7DCF)) ^ 0x440;
  v60 = ((2 * (v56 & 0xD2BB7DCF)) ^ 0x453DC7C5) + v55;
  v61 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t, unint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t))(*(_QWORD *)(v57 + 8 * v58) - 8);
  v64 = STACK[0xA20];
  STACK[0x3C0] = STACK[0xA20];
  v65 = STACK[0xA50] - 0x380E8157DD5D548FLL;
  STACK[0x3B0] = (v65 ^ 0x6FFF8FBFBAF7338FLL)
               + ((2 * v65) & 0xDFFF1F7F75EE671ELL)
               + ((324 * (v59 ^ 0x4D5u)) ^ 0xFF3FFAFDDDDCDE36);
  v66 = STACK[0xA70] - 0x35850B5905EFCFCELL;
  STACK[0x370] = (v66 ^ 0xFFBFFEFFD8FC1DDFLL) + 0x6F7F8BBDBFD7F3AALL + ((2 * v66) & 0xFF7FFDFFB1F83BBELL);
  STACK[0x360] = ((v64 - 0x2245A1415FC28FDALL) ^ 0xFFBFCAFDDEFC9DEDLL)
               + 0x6F7FBFBFB9D7739CLL
               + ((2 * (v64 - 0x2245A1415FC28FDALL)) & 0xFF7F95FBBDF93BDALL);
  v67 = STACK[0xA90] - 0x1EB171B122E27455;
  STACK[0x350] = (v67 ^ 0x7F7FBBBF99D739BDLL) - 0x1040310201032834 + ((2 * v67) & 0xFEFF777F33AE737ALL);
  v68 = STACK[0xAB0] - 0xC0FE77404F6796ELL;
  STACK[0x340] = (v68 ^ 0x7F7FEEBDD9DC71D9) - 0x1040640041086050 + ((2 * v68) & 0xFEFFDD7BB3B8E3B2);
  v69 = STACK[0xAD0];
  STACK[0x320] = STACK[0xAD0];
  STACK[0x310] = ((v69 - 0x31F8191BC9F50317) ^ 0x7F3FDEBDFADFD799)
               - 0x10005400620BC610
               + ((2 * (v69 - 0x31F8191BC9F50317)) & 0xFE7FBD7BF5BFAF32);
  v70 = STACK[0xAE0];
  STACK[0x300] = STACK[0xAE0];
  STACK[0x2F0] = ((v70 - 0x7857BF30AE95353) ^ 0x7FFF8BBFFED697A9)
               - 0x10C0010266028620
               + ((2 * (v70 - 0x7857BF30AE95353)) & 0xFFFF177FFDAD2F52);
  STACK[0x2E0] = ((STACK[0xA10] - 0x3E8E35D558CF506CLL) ^ 0xEFFFFABD9FFD5BAFLL)
               + 0x7F3F8FFFF8D6B5DALL
               + ((2 * (STACK[0xA10] - 0x3E8E35D558CF506CLL)) & 0xDFFFF57B3FFAB75ELL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x4DB04573F4F81E09) ^ 0xFF3FABBDDDDD1FCFLL)
               + 0x6FFFDEFFBAF6F1BALL
               + ((2 * (STACK[0xA00] - 0x4DB04573F4F81E09)) & 0xFE7F577BBBBA3F9ELL);
  v71 = STACK[0x9F0] - 0x130390FDD61ABDBELL;
  STACK[0x2C0] = (v71 ^ 0x6FFFDEFFDFF659CDLL) - 0xC0544247224844 + ((2 * v71) & 0xDFFFBDFFBFECB39ALL);
  v72 = STACK[0x9E0] - 0x57B29EB8897BC077;
  STACK[0x2B0] = (v72 ^ 0xFF3F9AFDFCFC5589) + 0x6FFFEFBF9BD7BC00 + ((2 * v72) & 0xFE7F35FBF9F8AB12);
  v73 = STACK[0x9D0] - 0x7230E0A670625D21;
  STACK[0x2A0] = (v73 ^ 0x7FBF9FBD9FFF93DBLL) - 0x10801500072B8252 + ((2 * v73) & 0xFF7F3F7B3FFF27B6);
  v74 = STACK[0xB38];
  STACK[0x290] = STACK[0xB38];
  STACK[0x280] = ((v74 - 0x46D10E2E9274E281) ^ 0xEFFF9EBFBEDCF3CFLL)
               + 0x7F3FEBFDD9F71DBALL
               + ((2 * (v74 - 0x46D10E2E9274E281)) & 0xDFFF3D7F7DB9E79ELL);
  STACK[0x270] = ((v65 + 2) ^ 0xEF337572B5FD7E7ALL) + 0x5EFDFBDFFFA2A5FELL + ((2 * (v65 + 2)) & 0xDE66EAE56BFAFCF4);
  STACK[0x260] = ((v64 - 0x2245A1415FC28FD8) ^ 0x6E7BF7D3BDECB6FCLL)
               - 0x204A8681084C9284
               + ((2 * (v64 - 0x2245A1415FC28FD8)) & 0xDCF7EFA77BD96DF8);
  STACK[0x250] = ((v66 + 2) ^ 0x6F31F37AB5A4647CLL) - 0x2100822800044004 + ((2 * (v66 + 2)) & 0xDE63E6F56B48C8F8);
  STACK[0x240] = ((v67 + 2) ^ 0x7F35F7DEF7BB7F7DLL) - 0x3104868C421B5B05 + ((2 * (v67 + 2)) & 0xFE6BEFBDEF76FEFALL);
  STACK[0x200] = ((v68 + 2) ^ 0x6EB371DBB7F3ACFELL) - 0x2082008902538886 + ((2 * (v68 + 2)) & 0xDD66E3B76FE759FCLL);
  v77 = v64 - 0x2245A1415FC28FD4;
  v75 = STACK[0xA18];
  v76 = STACK[0x550];
  STACK[0x3E0] = STACK[0x848];
  STACK[0x3D0] = STACK[0x840];
  v62 = 1554976193
      * ((1554976193 * (a1 + v60 + 1247796104 + 3)) ^ ((1554976193 * (a1 + v60 + 1247796104 + 3)) >> 16));
  return v61(LOWORD(STACK[0x9B2]), LOWORD(STACK[0x986]), *(unsigned __int8 *)(STACK[0x230] + (v62 >> 24)), *(unsigned __int8 *)(STACK[0x228] + (v62 >> 24)), v76, STACK[0x228], *(unsigned __int8 *)(STACK[0x220] + (v62 >> 24)), STACK[0x220], a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           v77,
           ((v74 - 0x46D10E2E9274E27BLL) ^ 0x7E73F1FFF5EAEE7ELL)
         - 0x304280AD404ACA06
         + ((2 * (v74 - 0x46D10E2E9274E27BLL)) & 0xFCE7E3FFEBD5DCFCLL),
           ((v70 - 0x7857BF30AE9534DLL) ^ 0xDFB3FBD7FFA4F6F8)
         + 0x6E7D757AB5FB2D80
         + ((2 * (v70 - 0x7857BF30AE9534DLL)) & 0xBF67F7AFFF49EDF0),
           ((v69 - 0x31F8191BC9F50311) ^ 0x6EBDFDD6F5F2AFFDLL)
         - 0x208C8C8440528B85
         + ((2 * (v69 - 0x31F8191BC9F50311)) & 0xDD7BFBADEBE55FFALL),
           a31,
           (v77 ^ 0xDF757DD3B5F4E57BLL) + 0x6EBBF37EFFAB3EFDLL + ((2 * v77) & 0xBEEAFBA76BE9CAF6),
           a33,
           STACK[0xB30] + 2469221996u,
           a35,
           STACK[0xAD8] + 3205344393u,
           a37,
           STACK[0xAC8] + 480608300,
           a39,
           v75 + 2135640735,
           a41,
           STACK[0xB30],
           a43,
           STACK[0xAD8],
           a45,
           STACK[0xAC8],
           a47,
           v75,
           a49,
           ((v74 - 0x46D10E2E9274E27FLL) ^ 0x5FB7F9D7B5B0E6FELL)
         - 0x118688850010C286
         + ((2 * (v74 - 0x46D10E2E9274E27FLL)) & 0xBF6FF3AF6B61CDFCLL),
           a51,
           ((v73 + 2) ^ 0xDF35FF5EFFB2A77DLL) + 0x6EFB71F3B5ED7CFBLL + ((2 * (v73 + 2)) & 0xBE6BFEBDFF654EFALL),
           a53,
           ((v72 + 2) ^ 0xCE3577D2F5E835FELL) + 0x7FFBF97FBFB7EE7ALL + ((2 * (v72 + 2)) & 0x9C6AEFA5EBD06BFCLL),
           a55,
           ((v71 + 2) ^ 0xEEFD7D5AF5F47CFELL) + 0x5F33F3F7BFABA77ALL + ((2 * (v71 + 2)) & 0xDDFAFAB5EBE8F9FCLL));
}

void sub_1E637C()
{
  __int16 v0;

  LOWORD(STACK[0x9B2]) = v0;
  JUMPOUT(0x1E63ACLL);
}

uint64_t sub_1E64F4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42)
{
  int v42;
  unint64_t v43;
  _BOOL4 v44;
  _BOOL4 v45;
  _BOOL4 v46;

  v42 = STACK[0x238] + 2190;
  v43 = (a1 ^ 0x4CC338AFu) + STACK[0x290];
  STACK[0x950] = v43 + 10;
  v43 -= 0x46D10E2DFF478C0FLL;
  v44 = v43 < 0x932D566C;
  v45 = v43 > a34;
  if (a42 > 0xFFFFFFFF6CD2A993 != v44)
    v46 = v44;
  else
    v46 = v45;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * (v42 ^ (42 * v46))) - 8))();
}

uint64_t sub_1E6590@<X0>(unint64_t a1@<X8>)
{
  unsigned __int16 v2;

  if (v2 == 51251)
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * (int)(STACK[0x238] - 904))
                              + ((STACK[0x238] - 2144138477) & 0x7FCCF5F6)
                              - 1246))();
  if (v2 == 3999 || v2 == 56257)
    STACK[0x6C8] = a1;
  return sub_1EBFD4();
}

uint64_t sub_1E702C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0xA00] + (a8 ^ v8) - 0x4DB04573C641068FLL;
  v10 = v9 < 0x2EB71774;
  v11 = v9 > STACK[0x9F8] + 783751028;
  if (STACK[0x9F8] > 0xFFFFFFFFD148E88BLL != v10)
    v11 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)((1127 * !v11) ^ (STACK[0x238] - 614))) - 8))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E70C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v5 = v2 + 10;
  v6 = LOWORD(STACK[0x982]);
  if (v6 == 3999)
  {
    v7 = v1 - 0x4DB04573F4F81E03;
    v8 = STACK[0x238] - 565;
    v9 = STACK[0x440];
    STACK[0x540] = v5;
    v10 = *(_QWORD *)(v3 + 8 * (int)(v8 ^ (617 * (a1 == 1287862463))));
    STACK[0x8F0] = v9 + v7;
    return ((uint64_t (*)(void))(v10 - (v8 ^ 0x193)))();
  }
  else
  {
    if (v6 == 56257 || v6 == 51251)
    {
      STACK[0x540] = v5;
      v4 = 349777416;
    }
    LODWORD(STACK[0x634]) = v4;
    return sub_1E8E3C();
  }
}

uint64_t sub_1E70F8()
{
  uint64_t v0;
  int v1;
  int v2;

  v0 = (STACK[0x238] - 1466366435) & 0x5766F7B6;
  v1 = STACK[0x238] - 556;
  v2 = LOWORD(STACK[0x94E]);
  STACK[0x6C8] = STACK[0x950];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((1315 * (v2 == 51251)) ^ v1)) - v0 + 412))();
}

uint64_t sub_1E715C@<X0>(int a1@<W8>)
{
  int v1;

  *(_DWORD *)STACK[0x5A0] = a1 ^ 0x4CC33B63 ^ (4 * (v1 ^ 0x153));
  return sub_1EBFD4();
}

uint64_t sub_1E718C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x338] + 8 * (int)((93 * (((a8 == LODWORD(STACK[0xB24])) ^ (STACK[0x238] + 47)) & 1)) ^ (STACK[0x238] + 1772))))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E71E0()
{
  unint64_t *v0;
  uint64_t v1;
  int v2;
  unint64_t v3;

  v3 = *v0;
  STACK[0x590] = *v0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1591 * ((((v2 - 972) ^ (v3 == 0)) & 1) == 0)) ^ (v2 + 1772))))();
}

uint64_t sub_1E71E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0x9D0] + (a8 ^ v8) - 0x7230E0A63BF077D3;
  v10 = v9 < 0x3471E548;
  v11 = v9 > STACK[0x9C8] + 879879496;
  if (STACK[0x9C8] > 0xFFFFFFFFCB8E1AB7 != v10)
    v11 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)((4039 * !v11) ^ (STACK[0x238] + 213))) - 4))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E7284@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  int v8;
  int v9;
  unint64_t v10;

  v7 = v3 + 10;
  v8 = LOWORD(STACK[0x95C]);
  if (v8 == 3999)
  {
    v10 = STACK[0x510];
    STACK[0x558] = v7;
    LODWORD(STACK[0x6B4]) = a2;
    return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                          + 8
                                          * ((3563
                                            * (((v10 + v2 - 0x7230E0A670625D1BLL == 0) ^ (v6 + 29)) & 1)) ^ (v6 + 1050)))
                              - 12))();
  }
  else
  {
    if (v8 == 56257 || (v9 = v6, v8 == 51251))
    {
      STACK[0x558] = v7;
      v5 = 349777416;
      v9 = v6;
    }
    STACK[0x418] = 0;
    LODWORD(STACK[0x6B4]) = 1287862447;
    return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v5 == a1) * (((v9 ^ 0x269) - 413) ^ 0x9AD)) ^ v9)) - 8))();
  }
}

uint64_t sub_1E72C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0x9E0] + (a8 ^ v8) - 0x57B29EB831483A29;
  v10 = v9 < 0x58338648;
  v11 = v9 > STACK[0x9D8] + 1479771720;
  if (STACK[0x9D8] > 0xFFFFFFFFA7CC79B7 != v10)
    v11 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)((94 * !v11) ^ (STACK[0x238] + 1865))) - 8))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E7364@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;

  v4 = v3 + 10;
  v5 = LOWORD(STACK[0x95E]);
  if (v5 == 3999)
  {
    v7 = v1 - 0x57B29EB8897BC071;
    v8 = STACK[0x8B0];
    STACK[0x8E8] = v4;
    LODWORD(STACK[0x6EC]) = a1;
    STACK[0x860] = v8 + v7;
    v9 = *(_DWORD *)(STACK[0x5B8] + 20);
    v6 = 349777728;
    if (v9 == 767418101)
    {
      if (*(_BYTE *)(STACK[0x5B8] + 97) == 3)
        v6 = 349777575;
      else
        v6 = 349777728;
    }
    else if (v9 == 767418102)
    {
      JUMPOUT(0x1E3590);
    }
    goto LABEL_11;
  }
  if (v5 == 56257 || v5 == 51251)
  {
    STACK[0x8E8] = v4;
    LODWORD(STACK[0x6EC]) = a1;
    v6 = 349777416;
LABEL_11:
    LODWORD(STACK[0x634]) = v6;
    return sub_1E8E3C();
  }
  LODWORD(STACK[0x634]) = v2;
  return sub_1E9084();
}

uint64_t sub_1E73AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0x9F0] + (a8 ^ v8) - 0x130390FDA7986C38;
  v10 = v9 < 0x2E825180;
  v11 = v9 > STACK[0x9E8] + 780292480;
  if (STACK[0x9E8] > 0xFFFFFFFFD17DAE7FLL != v10)
    v11 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)((481 * v11) ^ (STACK[0x238] + 806))) - 4))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E7444@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;

  v6 = v3 + 10;
  v7 = LOWORD(STACK[0x97A]);
  if (v7 == 3999)
  {
    v10 = STACK[0x608] + v2 - 0x130390FDD61ABDB8;
    STACK[0x470] = v6;
    LODWORD(STACK[0x500]) = a2;
    STACK[0x650] = v10;
    v9 = v4;
    v5 = 349819777;
    v8 = STACK[0x338];
  }
  else
  {
    v8 = STACK[0x338];
    if (v7 == 56257 || (v9 = v4, v7 == 51251))
    {
      STACK[0x470] = v6;
      LODWORD(STACK[0x500]) = a2;
      v5 = 349777416;
      v9 = v4;
    }
  }
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1516 * (v5 == a1)) ^ (v9 - 565)))
                            - (((v9 + 1188) | 0x106u) ^ 0x972)))();
}

void sub_1E7490(int a1@<W8>)
{
  LODWORD(STACK[0x7A4]) = a1;
  JUMPOUT(0x1E749CLL);
}

uint64_t sub_1E74EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  *(_DWORD *)STACK[0x930] = STACK[0x7A4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x338] + 8 * (((v7 ^ 0x166) - 395) | 0x34)))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E7560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0xAB0] + (a8 ^ v8) - 0xC0FE773EDDA8FCBLL;
  v10 = v9 < 0x171BE99D;
  v11 = v9 > STACK[0xAA8] + 387705245;
  if (STACK[0xAA8] > 0xFFFFFFFFE8E41662 != v10)
    v11 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)((123 * v11) ^ (STACK[0x238] - 403))) - 4))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E75F8@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  int v8;
  int v9;
  unint64_t v10;

  v7 = v4 + 10;
  v8 = LOWORD(STACK[0x9A8]);
  if (v8 == 3999)
  {
    v10 = STACK[0x770];
    STACK[0x760] = v7;
    LODWORD(STACK[0x43C]) = a2;
    STACK[0x6A0] = v10 + v3 - 0xC0FE77404F67968;
    v9 = v6;
    v2 = 349819777;
  }
  else if (v8 == 56257 || (v9 = v6, v8 == 51251))
  {
    STACK[0x760] = v7;
    LODWORD(STACK[0x43C]) = a2;
    v2 = 349777416;
    v9 = v6;
  }
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((7 * (v2 != a1)) ^ (v9 + 270)))
                            - (((v9 - 961) | 0x6F4u)
                             + 602)
                            + 2389))();
}

uint64_t sub_1E7640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0xA70] + (a8 ^ v8) - 0x35850B58D32EEC9DLL;
  v10 = v9 < 0x32C0E32B;
  v11 = v9 > STACK[0xA68] + 851501867;
  if (STACK[0xA68] > 0xFFFFFFFFCD3F1CD4 != v10)
    v11 = v10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x338] + 8 * (int)((124 * v11) ^ (STACK[0x238] - 530))))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E76D4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  unint64_t v7;

  v5 = v2 + 10;
  v6 = LOWORD(STACK[0x9C4]);
  if (v6 == 3999)
  {
    v7 = STACK[0x840];
    STACK[0x678] = v5;
    LODWORD(STACK[0x70C]) = a1;
    return (*(uint64_t (**)(void))(v3
                                + 8
                                * ((1484 * ((((v4 - 612) ^ (v7 + v1 - 0x35850B5905EFCFC8 == 0)) & 1) == 0)) ^ (v4 - 518))))();
  }
  else
  {
    if (v6 == 56257 || v6 == 51251)
      STACK[0x678] = v5;
    STACK[0x5D0] = 0x77C8991B1798DD3;
    LODWORD(STACK[0x70C]) = 1287862447;
    return sub_1E8A98();
  }
}

uint64_t sub_1E7718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0xA50] + (a8 ^ v8) - 0x380E8156F5406DFALL;
  v10 = v9 < 0xE81CE68F;
  v11 = v9 > STACK[0xA48] + 3894208143u;
  if (STACK[0xA48] > 0xFFFFFFFF17E31970 != v10)
    v11 = v10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x338] + 8 * (int)((STACK[0x238] + 924) | (2 * !v11))))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E779C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  unint64_t v7;

  v5 = v2 + 10;
  v6 = LOWORD(STACK[0x9C6]);
  if (v6 == 3999)
  {
    v7 = STACK[0x848];
    STACK[0x420] = v5;
    LODWORD(STACK[0x70C]) = a1;
    return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((11 * (v7 + v1 - 0x380E8157DD5D5489 != 0)) | (v4 + 1684)))
                              - ((v4 - 113) ^ 0x357)))();
  }
  else
  {
    if (v6 == 56257 || v6 == 51251)
      STACK[0x420] = v5;
    return sub_1E8CA4();
  }
}

void sub_1E77D4(int a1@<W8>)
{
  LODWORD(STACK[0x73C]) = a1;
  JUMPOUT(0x1E799CLL);
}

uint64_t sub_1E77E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0xA10] + (a8 ^ v8) - 0x3E8E35D4C6EE1F1ALL;
  v10 = v9 < 0x91E1314C;
  v11 = v9 > STACK[0xA08] + 2447454540u;
  if (STACK[0xA08] > 0xFFFFFFFF6E1ECEB3 != v10)
    v11 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)((282 * !v11) ^ (STACK[0x238] + 257))) - 12))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E7878@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  unint64_t v9;

  v5 = v2 + 10;
  v6 = LOWORD(STACK[0x984]);
  if (v6 == 3999)
  {
    v7 = STACK[0x238] + 1502;
    v8 = STACK[0x238] - 565;
    v9 = STACK[0x638];
    STACK[0x528] = v5;
    STACK[0x468] = v9 + v1 - 0x3E8E35D558CF5066;
    return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v7 ^ 0xD87) * (a1 == 1287862415)) ^ v8)) - 4))();
  }
  else
  {
    if (v6 == 56257 || v6 == 51251)
    {
      STACK[0x528] = v5;
      JUMPOUT(0x1E78A8);
    }
    LODWORD(STACK[0x634]) = v4;
    return sub_1E8E3C();
  }
}

uint64_t sub_1E78BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  unsigned int v8;
  unint64_t v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v9 = STACK[0xA90] + (a8 ^ v8) - 0x1EB171B0B3EF6511;
  v10 = v9 < 0x6EF30F3E;
  v11 = v9 > STACK[0xA88] + 1861422910;
  if (STACK[0xA88] > 0xFFFFFFFF910CF0C1 != v10)
    v11 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (int)((31 * v11) ^ (STACK[0x238] + 1500))) - 4))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1E7948@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v10;

  v5 = v2 + 10;
  v6 = LOWORD(STACK[0x9AA]);
  if (v6 == 3999)
  {
    v8 = STACK[0x680];
    STACK[0x7F0] = v5;
    LODWORD(STACK[0x43C]) = a1;
    return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                          + 8
                                          * (((v8 + v1 - 0x1EB171B122E2744FLL == 0) * ((v4 + 1667) ^ 0xA57)) ^ (v4 + 1180)))
                              - 8))();
  }
  else
  {
    if (v6 == 56257 || (v7 = v4, v6 == 51251))
    {
      STACK[0x7F0] = v5;
      v7 = v4;
    }
    STACK[0x450] = 0x77C8991B1798DD3;
    LODWORD(STACK[0x43C]) = 1287862447;
    v10 = *(_QWORD *)STACK[0x850];
    STACK[0x6A0] = 0;
    return (*(uint64_t (**)(void))(v3
                                + 8
                                * (int)(((v10 == 0x74C05FF805FC435ALL)
                                       * (((v7 + 671857715) & 0xD7F443B7)
                                        - 374
                                        + ((((v7 + 671857715) & 0xD7F443B7) + 1652807744) & 0x9D7C2FFE)
                                        - 3515)) ^ (v7 + 671857715) & 0xD7F443B7)))();
  }
}

uint64_t sub_1E79AC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  STACK[0x490] = STACK[0x9B8];
  v5 = LODWORD(STACK[0x9AC]) != ((a1 | v1) ^ (v2 + 798)) || LOWORD(STACK[0x9B2]) != 3999;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((688 * v5) ^ (v3 + 1416))) - 4))();
}

uint64_t sub_1E7A04@<X0>(unint64_t a1@<X8>)
{
  int v1;
  __int16 v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  _BOOL4 v8;

  v6 = STACK[0x9B4];
  STACK[0x8E0] = a1;
  LODWORD(STACK[0xA28]) = v5;
  LOWORD(STACK[0xA2E]) = v2;
  LODWORD(STACK[0xA30]) = v6;
  LODWORD(STACK[0xA34]) = STACK[0x73C];
  STACK[0xA38] = STACK[0x780];
  STACK[0x7D0] = STACK[0x790];
  v8 = a1 != 0x74C05FF805FC435ALL && (v6 ^ (v3 - 1)) < 0xFFFFFFF6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v1 ^ (1791 * v8))) - ((6 * (v1 ^ 0x3C0u)) ^ 0x3C8)))();
}

uint64_t sub_1E7A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;

  v27 = a26(32, 0x103004054B5FA7DLL);
  STACK[0x458] = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338]
                                        + 8 * ((3103 * (((v27 == 0) ^ (v26 - 40)) & 1)) ^ v26))
                            - 12))();
}

uint64_t sub_1E7AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(_QWORD, uint64_t))
{
  int v26;
  int v27;
  unint64_t v29;
  uint64_t v30;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v29 = v26 ^ 0x4CC33B63 ^ ((v27 - 885) | 0x1CCu);
  STACK[0xA40] = v29;
  LODWORD(v29) = ((v29 + 10) ^ 0x9EFF99DF) + 1804463996 + ((2 * (v29 + 10)) & 0x3DFF33BE);
  *(_DWORD *)(a1 + 16) = v29;
  v30 = a26((v29 - 177047899), 3105161978);
  *(_QWORD *)(a1 + 24) = v30;
  return (*(uint64_t (**)(void))(STACK[0x338] + 8 * ((89 * (v30 == 0)) ^ (v27 + 1432))))();
}

void sub_1E7B90()
{
  int v0;
  int v1;

  LODWORD(STACK[0x3D0]) = ((v0 - 2111) ^ 0x102) + 1287861471;
  LODWORD(STACK[0x3B0]) = LODWORD(STACK[0xA34]) ^ 0x825484BF;
  v1 = STACK[0xA30];
  LODWORD(STACK[0x3C0]) = 1287862443;
  LODWORD(STACK[0x370]) = LODWORD(STACK[0xB04]) ^ 0x825484BF;
  LODWORD(STACK[0x3E0]) = v1 ^ 0x825484BF;
  JUMPOUT(0x1E0914);
}

uint64_t sub_1E7BB8()
{
  return sub_1E9978();
}

uint64_t sub_1E7C30()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)STACK[0x5B8];
  STACK[0x4B8] = 0;
  STACK[0x528] = 0x3E8E35D558CF5070;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((v2 != 0x74C05FF805FC435ALL) * ((v0 ^ 0x25B) + (v0 ^ 0x1BD) - 951)) ^ v0))
                            - 4))();
}

uint64_t sub_1E7CA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  STACK[0x718] = *(_QWORD *)(v2 + 8 * v1);
  LODWORD(STACK[0xB24]) = -1152996946;
  STACK[0xB28] = (unint64_t)&STACK[0x4B8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 != 0x74C05FF805FC435ALL)
                                               * ((6 * ((v1 - 754148431) & 0x2CF3667F ^ 0x2F9) + 1351) ^ (54 * ((v1 - 754148431) & 0x2CF3667F ^ 0x249)))) ^ (v1 - 754148431) & 0x2CF3667F))
                            - 8))();
}

uint64_t sub_1E7D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(_QWORD, uint64_t))
{
  int v26;
  uint64_t (*v27)(void);

  v27 = *(uint64_t (**)(void))(STACK[0x338]
                            + 8
                            * (int)(((36 * ((((v26 & 0xD53C6E7F) - 1640) | 0x10) ^ 0x60A) - 951)
                                   * (a26(LODWORD(STACK[0x6B4]) ^ 0x4CC338AFu, 3972743845) == 0)) ^ v26 & 0xD53C6E7F));
  return v27();
}

uint64_t sub_1E7DEC@<X0>(int a1@<W8>, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char *v5;
  BOOL v6;
  int v7;

  v3 = STACK[0x808];
  v4 = STACK[0x418];
  LODWORD(STACK[0x894]) = STACK[0x6B4];
  v5 = (char *)&a2 + STACK[0x700] - 0x560A55F423D95191;
  STACK[0x8A0] = (unint64_t)(v5 + 0xCBAA6BF1BCD5485);
  STACK[0x878] = (unint64_t)(v5 + 0xCBAA6BF1BCD5495);
  STACK[0x698] = 0;
  STACK[0x5D0] = 0x77C8991B1798DD3;
  LODWORD(STACK[0x70C]) = 1287862447;
  STACK[0x450] = 0x77C8991B1798DD3;
  LODWORD(STACK[0x43C]) = 1287862447;
  STACK[0x4D0] = v3;
  if (v3)
    v6 = v4 == 0;
  else
    v6 = 1;
  v7 = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v7 * (a1 ^ 0x1BB)) ^ a1)))();
}

uint64_t sub_1E7EA4@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x700] = v4 + v2 - 333;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((2266 * (((((a2 ^ 0x269) - 972) | 8) ^ (a1 + 8)) == 349777754)) ^ a2 ^ 0x269))
                            - 8))();
}

uint64_t sub_1E7EFC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  _BYTE *v7;
  _BYTE *v8;

  v7 = (_BYTE *)(v3 + v1 + v2 + 48);
  STACK[0x6F0] = (unint64_t)v7;
  STACK[0x700] = v1 + 80;
  STACK[0x810] = v0;
  STACK[0x8F0] = 0;
  STACK[0x468] = 0;
  STACK[0x650] = 0;
  LODWORD(STACK[0x500]) = v6;
  LODWORD(STACK[0x504]) = 0;
  STACK[0x480] = 0;
  STACK[0x860] = 0;
  LODWORD(STACK[0x6EC]) = v6;
  v8 = sub_2B070C(v7, 0, 0x20uLL);
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(STACK[0x338]
                                                      + 8 * (((((v4 + 180) | 0x40) ^ 0x288) * (v5 != v6)) ^ v4))
                                          - 4))(v8);
}

uint64_t sub_1E7F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  unint64_t v28;

  v27 = a26(128, 0x10800400FED9166);
  v28 = STACK[0x338];
  STACK[0x5B8] = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((((((v26 - 333) | 0x241) - 402) ^ 0x7D0) * (v27 != 0)) ^ v26))
                            - 4))();
}

void sub_1E7FE8(_QWORD *a1)
{
  *a1 = 0x74C05FF805FC435ALL;
  a1[1] = 0x74C05FF805FC435ALL;
  JUMPOUT(0x1DFBCCLL);
}

uint64_t sub_1E817C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(_QWORD, uint64_t),int a27,int a28)
{
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v29 = v28 | 4;
  v30 = ((v28 | 4) ^ 0x144u) + 414;
  v31 = a26(LODWORD(STACK[0x70C]) ^ 0x4CC338AFu, 2095267386);
  v32 = STACK[0x338];
  STACK[0xA78] = v31 + 0x77C8991B1798DD3;
  if (v31)
    a28 = 349819777;
  LODWORD(STACK[0xA84]) = a28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((3023 * (v31 != 0)) ^ v29)) - (v30 ^ 0x1C2)))();
}

uint64_t sub_1E820C()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x9A0] = *(_QWORD *)(v0 + 8 * v1);
  return sub_1EADB4();
}

uint64_t sub_1E8294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(_QWORD, uint64_t),int a27,int a28)
{
  int v28;
  uint64_t v29;
  unint64_t v30;

  v29 = a26(((v28 ^ 0xBB9u) + 1287860173) ^ LODWORD(STACK[0x70C]), 2095267386);
  v30 = STACK[0x338];
  STACK[0xA58] = v29 + 0x77C8991B1798DD3;
  if (v29)
    a28 = 349819777;
  LODWORD(STACK[0xA64]) = a28;
  return (*(uint64_t (**)(void))(v30 + 8 * ((52 * (v29 != 0)) ^ v28)))();
}

uint64_t sub_1E8318()
{
  uint64_t v0;
  int v1;

  STACK[0x9A0] = *(_QWORD *)(v0 + 8 * v1) - 8;
  return sub_1EADB4();
}

uint64_t sub_1E83C0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (((LODWORD(STACK[0x504]) == 6) * ((v0 ^ 0x8CC) - 252)) ^ v0)))();
}

uint64_t sub_1E83F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;

  v5 = *(_DWORD *)(STACK[0x5B8] + 120);
  v6 = STACK[0x5B8] + 0x5F7E21E1B122371FLL;
  v7 = *(_DWORD *)(STACK[0x5B8] + 100) - ((2 * *(_DWORD *)(STACK[0x5B8] + 100) - 649773772) & 0xF9AD81DE) - 377921655;
  v8 = 673918253 * ((((v4 - 224) ^ 0xDB827CE6) & 0x981CEB71 | ~((v4 - 224) ^ 0xDB827CE6 | 0x981CEB71)) ^ 0x262973C0);
  *(_QWORD *)(v4 - 176) = v1;
  *(_DWORD *)(v4 - 224) = v7 ^ v8;
  *(_DWORD *)(v4 - 184) = v8 ^ 0x2A65F0F9;
  *(_DWORD *)(v4 - 168) = (v3 ^ 0xBF747A5C) - v8;
  *(_DWORD *)(v4 - 164) = 54 * (v2 ^ 0x174) - v8 + 49706439 * v5 - 1008160389;
  *(_QWORD *)(v4 - 192) = v6;
  *(_DWORD *)(v4 - 200) = v2 - v8 + 1234359298;
  *(_QWORD *)(v4 - 216) = a1;
  *(_QWORD *)(v4 - 208) = a1;
  v9 = address(of:)(v4 - 224);
  LODWORD(STACK[0x634]) = 349777746;
  return sub_1E8E3C(v9);
}

uint64_t sub_1E8558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(_QWORD, uint64_t),int a27,int a28)
{
  int v28;
  uint64_t v29;
  unint64_t v30;

  v29 = a26((v28 - 2572) ^ 0x4CC338ECu ^ LODWORD(STACK[0x43C]), 2095267386);
  v30 = STACK[0x338];
  STACK[0xA98] = v29 + 0x77C8991B1798DD3;
  if (v29)
    a28 = 349819777;
  LODWORD(STACK[0xAA4]) = a28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * ((57 * (v29 == 0)) ^ v28)) - (((v28 - 1743) | 0x4Bu) ^ 0x3C7)))();
}

uint64_t sub_1E85EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;

  return (*(uint64_t (**)(void))(v9
                              + 8 * ((((((v10 + 1) ^ (v8 == a8)) & 1) == 0) * (((v10 - 906) | 0x200) + 1425)) ^ v10)))();
}

uint64_t sub_1E8644()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;

  v3 = v1 - ((2 * v1) & 0x4141E6E0) + ((v2 - 581) ^ 0xA0A0F0BC);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((107
                                          * ((v3 ^ 0xC7579CAC) - 1149378580 + ((2 * v3) & 0xCFEEDFB8 ^ 0x4140C6A0) == 594890696)) ^ v2))
                            - 8))();
}

uint64_t sub_1E86C4(unint64_t a1)
{
  int v1;
  uint64_t v2;

  STACK[0x418] = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 ^ 0x269) - 413) ^ 0x9AD ^ v1)) - 8))();
}

uint64_t sub_1E8700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;

  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((v8 == a8) * ((v10 + 213930129) & 0xF33FAFBA ^ (v10 - 46))) ^ v10)))();
}

uint64_t sub_1E8748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((363 * (v8 != a8)) ^ v10))
                            - ((((v10 - 1694) | 0x188u) - 442) ^ 0x216)))();
}

void sub_1E8788(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  int v8;

  v6 = v2 + 871;
  v7 = STACK[0x468];
  v8 = 142545853 * (((v5 - 224) & 0x641F0C10 | ~((v5 - 224) | 0x641F0C10)) ^ 0xB11F5C80);
  *(_DWORD *)(v5 - 208) = (v6 - 794291891) ^ v8;
  *(_QWORD *)(v5 - 192) = v1;
  *(_QWORD *)(v5 - 184) = v7;
  *(_QWORD *)(v5 - 200) = a1;
  *(_QWORD *)(v5 - 216) = a1;
  *(_DWORD *)(v5 - 224) = ((v3 ^ 0xB22CE751) + 1534566414 + ((2 * v3) & 0xFDDFBFFC ^ 0x9986315C)) ^ v8;
  *(_DWORD *)(v5 - 220) = (v4 ^ 0xE0CFEFFF) - v8 + ((v4 << (((v6 + 47) & 0xCF) + 53)) & 0xC19FDFFE) + 1073478398;
  address(of:)(v5 - 224);
  JUMPOUT(0x1E8878);
}

void sub_1E8894()
{
  JUMPOUT(0x1E88D4);
}

uint64_t sub_1E88DC@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v20 = (v17 - 594890697);
  v21 = 1554976193 * ((1554976193 * ((_DWORD)v18 + (_DWORD)v20)) ^ ((1554976193 * (v18 + v20)) >> 16));
  v22 = STACK[0x338];
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a14 + (v21 >> 24)) ^ *(_BYTE *)(v18 + v20) ^ *(_BYTE *)(a16
                                                                                          + (v21 >> 24)
                                                                                          + (((v19 - 773) | 0xC0) ^ 0x3C8u)) ^ *(_BYTE *)((v21 >> 24) + a13 + 2) ^ v21 ^ (15 * ((1554976193 * ((1554976193 * ((_DWORD)v18 + (_DWORD)v20)) ^ ((1554976193 * (v18 + v20)) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * (((v17 - 1 == a2) * v16) ^ v19)) - 8))();
}

void sub_1E89F8()
{
  int v0;

  STACK[0x718] = *(_QWORD *)(STACK[0x338] + 8 * (v0 ^ 0x3C2)) + (((v0 ^ 0x3C2) + 1315712849) & 0xB193D2FB) - 607;
  JUMPOUT(0x1EBB2CLL);
}

uint64_t sub_1E8A68()
{
  int v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  _BYTE *v8;
  _BOOL4 v11;

  v1 = STACK[0x4D0];
  v2 = (v0 - 460) | 0x41u;
  v3 = (v0 + 480);
  v4 = v0 + 588;
  v5 = STACK[0x5D0];
  v6 = STACK[0x8A0];
  v7 = (char *)&STACK[0xB40] + STACK[0x700];
  STACK[0x700] = v3 + STACK[0x700] - 1420;
  STACK[0x6D0] = v5;
  STACK[0x568] = v6;
  v8 = sub_2B070C(&v7[v2 - 0x560A55F423D95F12], 0, 0x20uLL);
  STACK[0x730] = 0;
  v11 = v1 == -56 || v5 == 0x77C8991B1798DD3 || v6 == 0xCBAA6BF1BCD5485;
  return (*(uint64_t (**)(_BYTE *))(STACK[0x338] + 8 * ((44 * v11) ^ v4)))(v8);
}

uint64_t sub_1E8A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;

  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v10 == a8) ^ (v8 - 73) & 0x77) & 1) * (((v8 - 202) | 0x284) - 889)) ^ v8)))();
}

uint64_t sub_1E8AE4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((2308
                                * ((LODWORD(STACK[0x70C]) ^ 0x4CC33B6C ^ (((a1 - 1118638914) & 0x42AD17EFu) - 803)) > 0xF)) ^ a1)))();
}

uint64_t sub_1E8B3C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x698];
  STACK[0x850] = STACK[0x698];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 == 0) * (v0 - 1759)) ^ v0))
                            - (((v0 - 1759) | 0x2E8u) ^ 0x2F0)))();
}

uint64_t sub_1E8B78()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(v1 + 8) != 0x74C05FF805FC435ALL)
                                          * (v0 ^ 0x89F ^ (v0 - 726057881) & 0x2B46C4B9)) ^ v0))
                            - 12))();
}

uint64_t sub_1E8BD4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x4C8] = 0;
  STACK[0x7F0] = 0x1EB171B122E27459;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((a1 == v2) ^ (v1 - 76)) & 1) * ((8 * (v1 ^ 0x41A)) ^ 0x196)) ^ v1)))();
}

void sub_1E8C28()
{
  int v0;
  uint64_t v1;

  STACK[0x718] = ((v0 - 474404285) & 0x1C46D7FF ^ 0xFFFFFFFFFFFFFDA7) + *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x1EBB34);
}

uint64_t sub_1E8C5C()
{
  uint64_t *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v0;
  STACK[0x6A0] = 0;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)(((v4 == v1) * (v2 - 374 + ((v2 + 1652807744) & 0x9D7C2FFE) - 3515)) ^ v2)))();
}

uint64_t sub_1E8CA4()
{
  int v0;
  uint64_t v1;

  STACK[0x5D0] = 0x77C8991B1798DD3;
  LODWORD(STACK[0x70C]) = 1287862447;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)STACK[0x518] == 0x74C05FF805FC435ALL)
                                          * (v0 - 1700 + v0 - 1287 - 1389)) ^ v0))
                            - 4))();
}

uint64_t sub_1E8DA8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  STACK[0x600] = 0;
  STACK[0x760] = 0xC0FE77404F67972;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 - 3025 + v1 - 2090 - 998) * (a1 != 0x74C05FF805FC435ALL)) ^ v1)))();
}

void sub_1E8E00()
{
  int v0;
  uint64_t v1;

  STACK[0x718] = ((v0 - 18287690) & 0x1170E7F ^ 0xFFFFFFFFFFFFFDA7) + *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x1EBB34);
}

uint64_t sub_1E8E3C()
{
  return sub_1E9FD4();
}

uint64_t sub_1E8E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v10 - 466) ^ (1535 * (v9 == a8))))
                            - ((v10 - 1570802223) & 0x5DA08FEE ^ 0x988)))();
}

uint64_t sub_1E8E88@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((693
                                          * (*(unsigned __int8 *)(STACK[0x5B8] + 96) == (((a1 - 7) | 0x48) + (a1 ^ 0x1A)))) ^ a1))
                            - 8))();
}

uint64_t sub_1E8ED0()
{
  int v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  STACK[0x5F8] = 0;
  STACK[0x8E8] = 0x57B29EB8897BC07BLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((679 * (v3 != 0x74C05FF805FC435ALL)) ^ v0))
                            - ((v0 ^ 0x701u)
                             - 963)
                            - 3))();
}

uint64_t sub_1E8F34@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = (67 * v1);
  STACK[0x718] = *(_QWORD *)(v2 + 8 * v1) + v3 - 607;
  LODWORD(STACK[0xB24]) = 283583005;
  STACK[0xB28] = (unint64_t)&STACK[0x5F8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((a1 != 0x74C05FF805FC435ALL)
                                               * ((6 * (v3 ^ 0x2F9) + 1351) ^ (54 * (v3 ^ 0x249)))) ^ v3))
                            - 8))();
}

uint64_t sub_1E8F60()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unint64_t v5;

  if (v1 == 349777725)
    return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                          + 8
                                          * (((*(_BYTE *)(STACK[0x5B8] + 97) == 3)
                                            * ((((v2 - 612311526) & 0x247F1EFF) + 177) ^ 0xE5)) ^ (v2 + 125)))
                              - 12))();
  if (v1 != 349819777)
    JUMPOUT(0x1E9190);
  v3 = STACK[0x238] ^ 0xAE3;
  v4 = STACK[0x238] + 1379;
  v5 = *(_QWORD *)(STACK[0x5F8] + 24);
  STACK[0x8B0] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((795 * (v5 != 0)) ^ v4)) - v3 + 2339))();
}

uint64_t sub_1E8FD0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;

  v3 = (v0 - 2215) | 0x344u;
  v4 = (v0 - 2319) | 0x14;
  v5 = (v1 - 177047899);
  STACK[0x9D8] = v5;
  v6 = *(_QWORD *)(v2 + 8 * ((21 * (v5 + 0x57B29EB8897BC07BLL - STACK[0x8E8] > 9)) ^ v0));
  STACK[0x9E0] = STACK[0x8E8];
  return ((uint64_t (*)(void))(v6 - ((v4 + 908) ^ v3)))();
}

void sub_1E9054()
{
  int v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = (2 * v0) ^ 0x4BE;
  v2 = STACK[0xA20];
  STACK[0x3C0] = STACK[0xA20];
  v3 = STACK[0xA50] - 0x380E8157DD5D548FLL;
  STACK[0x3B0] = (v3 ^ 0x6FFF8FBFBAF7338FLL)
               + ((2 * v3) & 0xDFFF1F7F75EE671ELL)
               + ((324 * (v1 ^ 0x4D5u)) ^ 0xFF3FFAFDDDDCDE36);
  v4 = STACK[0xA70] - 0x35850B5905EFCFCELL;
  STACK[0x370] = (v4 ^ 0xFFBFFEFFD8FC1DDFLL) + 0x6F7F8BBDBFD7F3AALL + ((2 * v4) & 0xFF7FFDFFB1F83BBELL);
  STACK[0x360] = ((v2 - 0x2245A1415FC28FDALL) ^ 0xFFBFCAFDDEFC9DEDLL)
               + 0x6F7FBFBFB9D7739CLL
               + ((2 * (v2 - 0x2245A1415FC28FDALL)) & 0xFF7F95FBBDF93BDALL);
  v5 = STACK[0xA90] - 0x1EB171B122E27455;
  STACK[0x350] = (v5 ^ 0x7F7FBBBF99D739BDLL) - 0x1040310201032834 + ((2 * v5) & 0xFEFF777F33AE737ALL);
  v6 = STACK[0xAB0] - 0xC0FE77404F6796ELL;
  STACK[0x340] = (v6 ^ 0x7F7FEEBDD9DC71D9) - 0x1040640041086050 + ((2 * v6) & 0xFEFFDD7BB3B8E3B2);
  v7 = STACK[0xAD0];
  STACK[0x320] = STACK[0xAD0];
  STACK[0x310] = ((v7 - 0x31F8191BC9F50317) ^ 0x7F3FDEBDFADFD799)
               - 0x10005400620BC610
               + ((2 * (v7 - 0x31F8191BC9F50317)) & 0xFE7FBD7BF5BFAF32);
  v8 = STACK[0xAE0];
  STACK[0x300] = STACK[0xAE0];
  STACK[0x2F0] = ((v8 - 0x7857BF30AE95353) ^ 0x7FFF8BBFFED697A9)
               - 0x10C0010266028620
               + ((2 * (v8 - 0x7857BF30AE95353)) & 0xFFFF177FFDAD2F52);
  STACK[0x2E0] = ((STACK[0xA10] - 0x3E8E35D558CF506CLL) ^ 0xEFFFFABD9FFD5BAFLL)
               + 0x7F3F8FFFF8D6B5DALL
               + ((2 * (STACK[0xA10] - 0x3E8E35D558CF506CLL)) & 0xDFFFF57B3FFAB75ELL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x4DB04573F4F81E09) ^ 0xFF3FABBDDDDD1FCFLL)
               + 0x6FFFDEFFBAF6F1BALL
               + ((2 * (STACK[0xA00] - 0x4DB04573F4F81E09)) & 0xFE7F577BBBBA3F9ELL);
  STACK[0x2C0] = ((STACK[0x9F0] - 0x130390FDD61ABDBELL) ^ 0x6FFFDEFFDFF659CDLL)
               - 0xC0544247224844
               + ((2 * (STACK[0x9F0] - 0x130390FDD61ABDBELL)) & 0xDFFFBDFFBFECB39ALL);
  STACK[0x2B0] = ((STACK[0x9E0] - 0x57B29EB8897BC077) ^ 0xFF3F9AFDFCFC5589)
               + 0x6FFFEFBF9BD7BC00
               + ((2 * (STACK[0x9E0] - 0x57B29EB8897BC077)) & 0xFE7F35FBF9F8AB12);
  STACK[0x2A0] = ((STACK[0x9D0] - 0x7230E0A670625D21) ^ 0x7FBF9FBD9FFF93DBLL)
               - 0x10801500072B8252
               + ((2 * (STACK[0x9D0] - 0x7230E0A670625D21)) & 0xFF7F3F7B3FFF27B6);
  v9 = STACK[0xB38];
  STACK[0x290] = STACK[0xB38];
  STACK[0x280] = ((v9 - 0x46D10E2E9274E281) ^ 0xEFFF9EBFBEDCF3CFLL)
               + 0x7F3FEBFDD9F71DBALL
               + ((2 * (v9 - 0x46D10E2E9274E281)) & 0xDFFF3D7F7DB9E79ELL);
  STACK[0x270] = ((v3 + 2) ^ 0xEF337572B5FD7E7ALL) + 0x5EFDFBDFFFA2A5FELL + ((2 * (v3 + 2)) & 0xDE66EAE56BFAFCF4);
  STACK[0x260] = ((v2 - 0x2245A1415FC28FD8) ^ 0x6E7BF7D3BDECB6FCLL)
               - 0x204A8681084C9284
               + ((2 * (v2 - 0x2245A1415FC28FD8)) & 0xDCF7EFA77BD96DF8);
  STACK[0x250] = ((v4 + 2) ^ 0x6F31F37AB5A4647CLL) - 0x2100822800044004 + ((2 * (v4 + 2)) & 0xDE63E6F56B48C8F8);
  STACK[0x240] = ((v5 + 2) ^ 0x7F35F7DEF7BB7F7DLL) - 0x3104868C421B5B05 + ((2 * (v5 + 2)) & 0xFE6BEFBDEF76FEFALL);
  STACK[0x200] = ((v6 + 2) ^ 0x6EB371DBB7F3ACFELL) - 0x2082008902538886 + ((2 * (v6 + 2)) & 0xDD66E3B76FE759FCLL);
  STACK[0x3E0] = STACK[0x848];
  STACK[0x3D0] = STACK[0x840];
  JUMPOUT(0x1E63ACLL);
}

uint64_t sub_1E90D4@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1012 * (*(_DWORD *)(v1 + 20) == 767418101)) ^ a1))
                            - ((a1 - 1789581232) & 0x6AAAD6FE ^ (a1 + 565 - 746))))();
}

uint64_t sub_1E9130()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  BOOL v6;

  v2 = v0 ^ 0x146;
  v3 = *(_QWORD *)STACK[0x5B8];
  STACK[0x750] = *(_QWORD *)(v1 + 8 * (int)v0) + (v0 ^ 0xFFFFFFFFFFFFFF1ALL);
  v4 = 3 * (v0 ^ 0xEB);
  STACK[0x5A0] = (unint64_t)&STACK[0x504];
  STACK[0x6F8] = 0;
  STACK[0x6C8] = 0x46D10E2E9274E285;
  v6 = v3 == 0x74C05FF805FC435ALL || &STACK[0x504] == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((((v2 + 1) ^ v6) & 1) * (v4 ^ 0x78A)) ^ v2))
                            - 4))();
}

uint64_t sub_1E9164()
{
  uint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t v5;

  if (v1 == 349777725)
  {
    v3 = (uint64_t *)STACK[0x5B8];
    LODWORD(STACK[0x504]) = *(_DWORD *)(STACK[0x5B8] + 16) - 393260813;
  }
  else
  {
    if (v1 != 349819777)
    {
      LODWORD(STACK[0x634]) = v1;
      return sub_1E9FD4();
    }
    v3 = (uint64_t *)STACK[0x5B8];
    v2 = STACK[0x238];
  }
  v5 = *v3;
  STACK[0x668] = 0;
  STACK[0x470] = 0x130390FDD61ABDC2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((3956 * (((v2 + 1) ^ (v5 == 0x74C05FF805FC435ALL)) & 1)) ^ ((int)v2 + 839)))
                            - 4))();
}

uint64_t sub_1E9238@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v3 = v2 ^ 0x3ECLL;
  STACK[0x718] = *(_QWORD *)(v1 + 8 * v3);
  LODWORD(STACK[0xB24]) = -1309992600;
  STACK[0xB28] = (unint64_t)&STACK[0x668];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((a1 != 0x74C05FF805FC435ALL)
                                               * ((6 * ((v3 + 571) ^ 0x2F9) + 1351) ^ (54 * ((v3 + 571) ^ 0x249)))) ^ (v3 + 571)))
                            - 8))();
}

uint64_t sub_1E9264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((3498 * (v9 == a8 + v10 - 429 - 543)) ^ (v10 + 839))) - 4))();
}

uint64_t sub_1E929C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x668] + 24);
  STACK[0x608] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((413 * (((v0 - 12) ^ (v2 == 0)) & 1)) ^ v0))
                            - (v0 + 429)
                            + 960))();
}

uint64_t sub_1E92E8()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = ((v0 - 1702) ^ 0xF57276C8) + v1;
  STACK[0x9E8] = v3;
  v4 = STACK[0x470];
  STACK[0x9F0] = STACK[0x470];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((3569
                                          * (0x130390FDD61ABDC2 - v4 + v3 > ((v0 - 839) ^ 0x3C5uLL))) ^ v0))
                            - 4))();
}

void sub_1E935C()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = STACK[0xA20];
  STACK[0x3C0] = STACK[0xA20];
  v2 = STACK[0xA50] - 0x380E8157DD5D548FLL;
  STACK[0x3B0] = (v2 ^ 0x6FFF8FBFBAF7338FLL)
               + ((2 * v2) & 0xDFFF1F7F75EE671ELL)
               + ((324 * ((v0 - 1121819247) & 0x42DD9ED7 ^ 0x4D5u)) ^ 0xFF3FFAFDDDDCDE36);
  v3 = STACK[0xA70] - 0x35850B5905EFCFCELL;
  STACK[0x370] = (v3 ^ 0xFFBFFEFFD8FC1DDFLL) + 0x6F7F8BBDBFD7F3AALL + ((2 * v3) & 0xFF7FFDFFB1F83BBELL);
  STACK[0x360] = ((v1 - 0x2245A1415FC28FDALL) ^ 0xFFBFCAFDDEFC9DEDLL)
               + 0x6F7FBFBFB9D7739CLL
               + ((2 * (v1 - 0x2245A1415FC28FDALL)) & 0xFF7F95FBBDF93BDALL);
  v4 = STACK[0xA90] - 0x1EB171B122E27455;
  STACK[0x350] = (v4 ^ 0x7F7FBBBF99D739BDLL) - 0x1040310201032834 + ((2 * v4) & 0xFEFF777F33AE737ALL);
  v5 = STACK[0xAB0] - 0xC0FE77404F6796ELL;
  STACK[0x340] = (v5 ^ 0x7F7FEEBDD9DC71D9) - 0x1040640041086050 + ((2 * v5) & 0xFEFFDD7BB3B8E3B2);
  v6 = STACK[0xAD0];
  STACK[0x320] = STACK[0xAD0];
  STACK[0x310] = ((v6 - 0x31F8191BC9F50317) ^ 0x7F3FDEBDFADFD799)
               - 0x10005400620BC610
               + ((2 * (v6 - 0x31F8191BC9F50317)) & 0xFE7FBD7BF5BFAF32);
  v7 = STACK[0xAE0];
  STACK[0x300] = STACK[0xAE0];
  STACK[0x2F0] = ((v7 - 0x7857BF30AE95353) ^ 0x7FFF8BBFFED697A9)
               - 0x10C0010266028620
               + ((2 * (v7 - 0x7857BF30AE95353)) & 0xFFFF177FFDAD2F52);
  STACK[0x2E0] = ((STACK[0xA10] - 0x3E8E35D558CF506CLL) ^ 0xEFFFFABD9FFD5BAFLL)
               + 0x7F3F8FFFF8D6B5DALL
               + ((2 * (STACK[0xA10] - 0x3E8E35D558CF506CLL)) & 0xDFFFF57B3FFAB75ELL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x4DB04573F4F81E09) ^ 0xFF3FABBDDDDD1FCFLL)
               + 0x6FFFDEFFBAF6F1BALL
               + ((2 * (STACK[0xA00] - 0x4DB04573F4F81E09)) & 0xFE7F577BBBBA3F9ELL);
  STACK[0x2C0] = ((STACK[0x9F0] - 0x130390FDD61ABDBELL) ^ 0x6FFFDEFFDFF659CDLL)
               - 0xC0544247224844
               + ((2 * (STACK[0x9F0] - 0x130390FDD61ABDBELL)) & 0xDFFFBDFFBFECB39ALL);
  STACK[0x2B0] = ((STACK[0x9E0] - 0x57B29EB8897BC077) ^ 0xFF3F9AFDFCFC5589)
               + 0x6FFFEFBF9BD7BC00
               + ((2 * (STACK[0x9E0] - 0x57B29EB8897BC077)) & 0xFE7F35FBF9F8AB12);
  STACK[0x2A0] = ((STACK[0x9D0] - 0x7230E0A670625D21) ^ 0x7FBF9FBD9FFF93DBLL)
               - 0x10801500072B8252
               + ((2 * (STACK[0x9D0] - 0x7230E0A670625D21)) & 0xFF7F3F7B3FFF27B6);
  v8 = STACK[0xB38];
  STACK[0x290] = STACK[0xB38];
  STACK[0x280] = ((v8 - 0x46D10E2E9274E281) ^ 0xEFFF9EBFBEDCF3CFLL)
               + 0x7F3FEBFDD9F71DBALL
               + ((2 * (v8 - 0x46D10E2E9274E281)) & 0xDFFF3D7F7DB9E79ELL);
  STACK[0x270] = ((v2 + 2) ^ 0xEF337572B5FD7E7ALL) + 0x5EFDFBDFFFA2A5FELL + ((2 * (v2 + 2)) & 0xDE66EAE56BFAFCF4);
  STACK[0x260] = ((v1 - 0x2245A1415FC28FD8) ^ 0x6E7BF7D3BDECB6FCLL)
               - 0x204A8681084C9284
               + ((2 * (v1 - 0x2245A1415FC28FD8)) & 0xDCF7EFA77BD96DF8);
  STACK[0x250] = ((v3 + 2) ^ 0x6F31F37AB5A4647CLL) - 0x2100822800044004 + ((2 * (v3 + 2)) & 0xDE63E6F56B48C8F8);
  STACK[0x240] = ((v4 + 2) ^ 0x7F35F7DEF7BB7F7DLL) - 0x3104868C421B5B05 + ((2 * (v4 + 2)) & 0xFE6BEFBDEF76FEFALL);
  STACK[0x200] = ((v5 + 2) ^ 0x6EB371DBB7F3ACFELL) - 0x2082008902538886 + ((2 * (v5 + 2)) & 0xDD66E3B76FE759FCLL);
  STACK[0x3E0] = STACK[0x848];
  STACK[0x3D0] = STACK[0x840];
  JUMPOUT(0x1E63ACLL);
}

uint64_t sub_1E93D0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BOOL4 v3;

  v3 = ((((_BYTE)a1 + 119) & 0xDF ^ 0xCC) & *(_BYTE *)(STACK[0x5B8] + 124) & 0xDF) != 0
    && LODWORD(STACK[0x504]) != (a1 ^ 0x976);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((213 * v3) ^ a1)) - 4))();
}

uint64_t sub_1E9430()
{
  int v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  STACK[0x430] = 0;
  STACK[0x540] = 0x4DB04573F4F81E0DLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(((v3 != 0x74C05FF805FC435ALL)
                                               * ((v0 - 1226) ^ 0x3D2 ^ (v0 + 1402967840) & 0xAC6067DE)) ^ v0))
                            - 12))();
}

uint64_t sub_1E94AC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  STACK[0x718] = ((9 * (v1 ^ 0x40u)) ^ 0xFFFFFFFFFFFFFDA7) + *(_QWORD *)(v2 + 8 * v1);
  LODWORD(STACK[0xB24]) = -1241628257;
  STACK[0xB28] = (unint64_t)&STACK[0x430];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((a1 != 0x74C05FF805FC435ALL)
                                          * ((6 * ((9 * (v1 ^ 0x40)) ^ 0x2F9) + 1351) ^ (54 * ((9 * (v1 ^ 0x40)) ^ 0x249)))) ^ (9 * (v1 ^ 0x40))))
                            - 8))();
}

uint64_t sub_1E94E0@<X0>(int a1@<W8>)
{
  unsigned __int8 v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v5 = a1 ^ 0xAC5;
  v7 = v1 != (((v5 - 111) | 0x88) + 52) || v2 == v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v7 * ((v5 - 997897844) & 0x3B7AB3FF ^ 0x135)) ^ v5)) - 8))();
}

uint64_t sub_1E9544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  STACK[0x7A8] = v26 + 8;
  v29 = STACK[0x650];
  LODWORD(STACK[0x4DC]) = STACK[0x500];
  STACK[0x7C8] = v29;
  STACK[0x490] = 0x2245A1415FC28FDELL;
  LODWORD(STACK[0x73C]) = 1287862447;
  STACK[0x780] = 0xC79952BD71D90485;
  STACK[0x790] = 0;
  v30 = a26(16, 0x20040A4A59CD2);
  STACK[0x530] = v30 + 0x74C05FF805FC435ALL;
  return (*(uint64_t (**)(void))(v28 + 8 * (int)(((v30 != 0) * (((v27 - 1895) ^ 0xFFFFFE3A) + v27 - 1536)) ^ v27)))();
}

uint64_t sub_1E9604(_QWORD *a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unint64_t v5;
  _BOOL4 v7;

  v4 = (v3 + 2619) | 0xB;
  *a1 = 0;
  a1[1] = 0;
  v5 = (v4 - 2271) + 2324303067;
  v7 = v5 <= 0x8A8A10A6 || v5 >= 433 * (v4 ^ 0xCA9u) + (unint64_t)(v2 ^ 0x4CC338AFu) + 2324303173u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((19 * v7) ^ v4)) - 8))();
}

uint64_t sub_1E962C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  _BOOL4 v28;

  v28 = a26(16, 0x20040A4A59CD2) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v27 + 8 * ((v28 * ((v26 ^ 0x2F3) - 883)) ^ v26)) - 8))();
}

uint64_t sub_1E9680(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)(v8 + 8) = (char *)a1 + 0x74C05FF805FC435ALL;
  LODWORD(STACK[0x634]) = a8;
  STACK[0x698] = STACK[0x5B8];
  return sub_1EA028();
}

uint64_t sub_1E96C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((652 * (v9 == a8 + v10 - 565 - 407)) ^ (v10 - 614))) - 8))();
}

uint64_t sub_1E96F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v2 = 243 * (v0 ^ 0x193u);
  v3 = *(_QWORD *)(STACK[0x430] + 24);
  v4 = *(_QWORD *)(v1 + 8 * (((v3 != 0) * ((v0 - 49) ^ 0xCA2)) ^ v0));
  STACK[0x440] = v3;
  return ((uint64_t (*)(void))(v4 - (v2 ^ 0x3C8)))();
}

uint64_t sub_1E974C()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = (v1 - 177047899);
  STACK[0x9F8] = v3;
  v4 = STACK[0x540];
  STACK[0xA00] = STACK[0x540];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1006
                                          * (v3
                                           - v4
                                           + (((v0 ^ 0x22u) - 228 + 0x4DB04573F4F81D61) ^ (3 * (v0 ^ 0x22u))) > 9)) ^ v0))
                            - 8))();
}

void sub_1E97C0()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = STACK[0xA20];
  STACK[0x3C0] = STACK[0xA20];
  v2 = STACK[0xA50] - 0x380E8157DD5D548FLL;
  STACK[0x3B0] = (v2 ^ 0x6FFF8FBFBAF7338FLL)
               + ((2 * v2) & 0xDFFF1F7F75EE671ELL)
               + ((324 * (v0 ^ 0x63u)) ^ 0xFF3FFAFDDDDCDE36);
  v3 = STACK[0xA70] - 0x35850B5905EFCFCELL;
  STACK[0x370] = (v3 ^ 0xFFBFFEFFD8FC1DDFLL) + 0x6F7F8BBDBFD7F3AALL + ((2 * v3) & 0xFF7FFDFFB1F83BBELL);
  STACK[0x360] = ((v1 - 0x2245A1415FC28FDALL) ^ 0xFFBFCAFDDEFC9DEDLL)
               + 0x6F7FBFBFB9D7739CLL
               + ((2 * (v1 - 0x2245A1415FC28FDALL)) & 0xFF7F95FBBDF93BDALL);
  v4 = STACK[0xA90] - 0x1EB171B122E27455;
  STACK[0x350] = (v4 ^ 0x7F7FBBBF99D739BDLL) - 0x1040310201032834 + ((2 * v4) & 0xFEFF777F33AE737ALL);
  v5 = STACK[0xAB0] - 0xC0FE77404F6796ELL;
  STACK[0x340] = (v5 ^ 0x7F7FEEBDD9DC71D9) - 0x1040640041086050 + ((2 * v5) & 0xFEFFDD7BB3B8E3B2);
  v6 = STACK[0xAD0];
  STACK[0x320] = STACK[0xAD0];
  STACK[0x310] = ((v6 - 0x31F8191BC9F50317) ^ 0x7F3FDEBDFADFD799)
               - 0x10005400620BC610
               + ((2 * (v6 - 0x31F8191BC9F50317)) & 0xFE7FBD7BF5BFAF32);
  v7 = STACK[0xAE0];
  STACK[0x300] = STACK[0xAE0];
  STACK[0x2F0] = ((v7 - 0x7857BF30AE95353) ^ 0x7FFF8BBFFED697A9)
               - 0x10C0010266028620
               + ((2 * (v7 - 0x7857BF30AE95353)) & 0xFFFF177FFDAD2F52);
  STACK[0x2E0] = ((STACK[0xA10] - 0x3E8E35D558CF506CLL) ^ 0xEFFFFABD9FFD5BAFLL)
               + 0x7F3F8FFFF8D6B5DALL
               + ((2 * (STACK[0xA10] - 0x3E8E35D558CF506CLL)) & 0xDFFFF57B3FFAB75ELL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x4DB04573F4F81E09) ^ 0xFF3FABBDDDDD1FCFLL)
               + 0x6FFFDEFFBAF6F1BALL
               + ((2 * (STACK[0xA00] - 0x4DB04573F4F81E09)) & 0xFE7F577BBBBA3F9ELL);
  STACK[0x2C0] = ((STACK[0x9F0] - 0x130390FDD61ABDBELL) ^ 0x6FFFDEFFDFF659CDLL)
               - 0xC0544247224844
               + ((2 * (STACK[0x9F0] - 0x130390FDD61ABDBELL)) & 0xDFFFBDFFBFECB39ALL);
  STACK[0x2B0] = ((STACK[0x9E0] - 0x57B29EB8897BC077) ^ 0xFF3F9AFDFCFC5589)
               + 0x6FFFEFBF9BD7BC00
               + ((2 * (STACK[0x9E0] - 0x57B29EB8897BC077)) & 0xFE7F35FBF9F8AB12);
  STACK[0x2A0] = ((STACK[0x9D0] - 0x7230E0A670625D21) ^ 0x7FBF9FBD9FFF93DBLL)
               - 0x10801500072B8252
               + ((2 * (STACK[0x9D0] - 0x7230E0A670625D21)) & 0xFF7F3F7B3FFF27B6);
  v8 = STACK[0xB38];
  STACK[0x290] = STACK[0xB38];
  STACK[0x280] = ((v8 - 0x46D10E2E9274E281) ^ 0xEFFF9EBFBEDCF3CFLL)
               + 0x7F3FEBFDD9F71DBALL
               + ((2 * (v8 - 0x46D10E2E9274E281)) & 0xDFFF3D7F7DB9E79ELL);
  STACK[0x270] = ((v2 + 2) ^ 0xEF337572B5FD7E7ALL) + 0x5EFDFBDFFFA2A5FELL + ((2 * (v2 + 2)) & 0xDE66EAE56BFAFCF4);
  STACK[0x260] = ((v1 - 0x2245A1415FC28FD8) ^ 0x6E7BF7D3BDECB6FCLL)
               - 0x204A8681084C9284
               + ((2 * (v1 - 0x2245A1415FC28FD8)) & 0xDCF7EFA77BD96DF8);
  STACK[0x250] = ((v3 + 2) ^ 0x6F31F37AB5A4647CLL) - 0x2100822800044004 + ((2 * (v3 + 2)) & 0xDE63E6F56B48C8F8);
  STACK[0x240] = ((v4 + 2) ^ 0x7F35F7DEF7BB7F7DLL) - 0x3104868C421B5B05 + ((2 * (v4 + 2)) & 0xFE6BEFBDEF76FEFALL);
  STACK[0x200] = ((v5 + 2) ^ 0x6EB371DBB7F3ACFELL) - 0x2082008902538886 + ((2 * (v5 + 2)) & 0xDD66E3B76FE759FCLL);
  STACK[0x3E0] = STACK[0x848];
  STACK[0x3D0] = STACK[0x840];
  JUMPOUT(0x1E63ACLL);
}

uint64_t sub_1E97EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((2178 * (v9 == ((v10 + 257) ^ (a8 + 971)))) ^ (v10 + 257))) - 12))();
}

uint64_t sub_1E981C()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x4B8] + 24);
  STACK[0x638] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((4026 * ((((v0 - 257) ^ (v2 == 0)) & 1) == 0)) ^ v0)) - 12))();
}

uint64_t sub_1E9868()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v4 = (v2 - 177047899);
  STACK[0xA08] = v4;
  v5 = STACK[0x528];
  STACK[0xA10] = STACK[0x528];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((3739
                                          * (v4 + 0x3E8E35D558CF5070 - v5 > ((v0 - 1127) ^ 0x6FuLL))) ^ v0))
                            - v1
                            + 960))();
}

void sub_1E98D8()
{
  JUMPOUT(0x1E98F8);
}

uint64_t sub_1E9978@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;

  LODWORD(STACK[0x4EC]) = a1;
  *(_QWORD *)STACK[0x7A8] = a2;
  LODWORD(STACK[0x634]) = 349819777;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1236
                                          * (((a1 == 349819777) ^ (3 * (v3 ^ v2) - 81) ^ 0xF7) & 1)) ^ (3 * (v3 ^ v2) - 1195)))
                            - 4))();
}

uint64_t sub_1E9990()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x7C8];
  STACK[0x550] = STACK[0x7C8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != 0) * (v0 + 1538)) ^ v0)) - 4))();
}

uint64_t sub_1E99C4()
{
  unint64_t v0;
  int v1;
  unint64_t v2;

  STACK[0xA18] = v2;
  STACK[0xA20] = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338]
                                        + 8
                                        * (((((v1 - 143648643) & 0x88FE7EC) + 789)
                                          * (0x2245A1415FC28FDELL - v0 + v2 - 10 < 0xFFFFFFFFFFFFFFF6)) ^ v1))
                            - 4))();
}

void sub_1E9A30()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = STACK[0xA20];
  STACK[0x3C0] = STACK[0xA20];
  v2 = STACK[0xA50] - 0x380E8157DD5D548FLL;
  STACK[0x3B0] = (v2 ^ 0x6FFF8FBFBAF7338FLL)
               + ((2 * v2) & 0xDFFF1F7F75EE671ELL)
               + ((324 * (((v0 + 288) | 0x54) ^ 0x4D5u)) ^ 0xFF3FFAFDDDDCDE36);
  v3 = STACK[0xA70] - 0x35850B5905EFCFCELL;
  STACK[0x370] = (v3 ^ 0xFFBFFEFFD8FC1DDFLL) + 0x6F7F8BBDBFD7F3AALL + ((2 * v3) & 0xFF7FFDFFB1F83BBELL);
  STACK[0x360] = ((v1 - 0x2245A1415FC28FDALL) ^ 0xFFBFCAFDDEFC9DEDLL)
               + 0x6F7FBFBFB9D7739CLL
               + ((2 * (v1 - 0x2245A1415FC28FDALL)) & 0xFF7F95FBBDF93BDALL);
  v4 = STACK[0xA90] - 0x1EB171B122E27455;
  STACK[0x350] = (v4 ^ 0x7F7FBBBF99D739BDLL) - 0x1040310201032834 + ((2 * v4) & 0xFEFF777F33AE737ALL);
  v5 = STACK[0xAB0] - 0xC0FE77404F6796ELL;
  STACK[0x340] = (v5 ^ 0x7F7FEEBDD9DC71D9) - 0x1040640041086050 + ((2 * v5) & 0xFEFFDD7BB3B8E3B2);
  v6 = STACK[0xAD0];
  STACK[0x320] = STACK[0xAD0];
  STACK[0x310] = ((v6 - 0x31F8191BC9F50317) ^ 0x7F3FDEBDFADFD799)
               - 0x10005400620BC610
               + ((2 * (v6 - 0x31F8191BC9F50317)) & 0xFE7FBD7BF5BFAF32);
  v7 = STACK[0xAE0];
  STACK[0x300] = STACK[0xAE0];
  STACK[0x2F0] = ((v7 - 0x7857BF30AE95353) ^ 0x7FFF8BBFFED697A9)
               - 0x10C0010266028620
               + ((2 * (v7 - 0x7857BF30AE95353)) & 0xFFFF177FFDAD2F52);
  STACK[0x2E0] = ((STACK[0xA10] - 0x3E8E35D558CF506CLL) ^ 0xEFFFFABD9FFD5BAFLL)
               + 0x7F3F8FFFF8D6B5DALL
               + ((2 * (STACK[0xA10] - 0x3E8E35D558CF506CLL)) & 0xDFFFF57B3FFAB75ELL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x4DB04573F4F81E09) ^ 0xFF3FABBDDDDD1FCFLL)
               + 0x6FFFDEFFBAF6F1BALL
               + ((2 * (STACK[0xA00] - 0x4DB04573F4F81E09)) & 0xFE7F577BBBBA3F9ELL);
  STACK[0x2C0] = ((STACK[0x9F0] - 0x130390FDD61ABDBELL) ^ 0x6FFFDEFFDFF659CDLL)
               - 0xC0544247224844
               + ((2 * (STACK[0x9F0] - 0x130390FDD61ABDBELL)) & 0xDFFFBDFFBFECB39ALL);
  STACK[0x2B0] = ((STACK[0x9E0] - 0x57B29EB8897BC077) ^ 0xFF3F9AFDFCFC5589)
               + 0x6FFFEFBF9BD7BC00
               + ((2 * (STACK[0x9E0] - 0x57B29EB8897BC077)) & 0xFE7F35FBF9F8AB12);
  STACK[0x2A0] = ((STACK[0x9D0] - 0x7230E0A670625D21) ^ 0x7FBF9FBD9FFF93DBLL)
               - 0x10801500072B8252
               + ((2 * (STACK[0x9D0] - 0x7230E0A670625D21)) & 0xFF7F3F7B3FFF27B6);
  v8 = STACK[0xB38];
  STACK[0x290] = STACK[0xB38];
  STACK[0x280] = ((v8 - 0x46D10E2E9274E281) ^ 0xEFFF9EBFBEDCF3CFLL)
               + 0x7F3FEBFDD9F71DBALL
               + ((2 * (v8 - 0x46D10E2E9274E281)) & 0xDFFF3D7F7DB9E79ELL);
  STACK[0x270] = ((v2 + 2) ^ 0xEF337572B5FD7E7ALL) + 0x5EFDFBDFFFA2A5FELL + ((2 * (v2 + 2)) & 0xDE66EAE56BFAFCF4);
  STACK[0x260] = ((v1 - 0x2245A1415FC28FD8) ^ 0x6E7BF7D3BDECB6FCLL)
               - 0x204A8681084C9284
               + ((2 * (v1 - 0x2245A1415FC28FD8)) & 0xDCF7EFA77BD96DF8);
  STACK[0x250] = ((v3 + 2) ^ 0x6F31F37AB5A4647CLL) - 0x2100822800044004 + ((2 * (v3 + 2)) & 0xDE63E6F56B48C8F8);
  STACK[0x240] = ((v4 + 2) ^ 0x7F35F7DEF7BB7F7DLL) - 0x3104868C421B5B05 + ((2 * (v4 + 2)) & 0xFE6BEFBDEF76FEFALL);
  STACK[0x200] = ((v5 + 2) ^ 0x6EB371DBB7F3ACFELL) - 0x2082008902538886 + ((2 * (v5 + 2)) & 0xDD66E3B76FE759FCLL);
  STACK[0x3E0] = STACK[0x848];
  STACK[0x3D0] = STACK[0x840];
  JUMPOUT(0x1E63ACLL);
}

uint64_t sub_1E9B1C()
{
  uint64_t v0;
  int v1;
  int v2;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;

  if (v1 == 349819777)
  {
    v4 = (_QWORD *)STACK[0x610];
    v5 = *(_QWORD *)(STACK[0x610] + 8);
    v6 = (_QWORD *)STACK[0x458];
    v6[1] = v5;
    *v6 = *v4;
    return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((v5 == 0) * ((v2 + 438) ^ 0x5E0)) ^ (v2 + 1111))) - 4))();
  }
  else if (v1 == 349777725)
  {
    return (*(uint64_t (**)(void))(STACK[0x338]
                                + 8 * ((*(_QWORD *)(STACK[0x8E0] - 0x74C05FF805FC4352) == 0) | (v2 - 420))))();
  }
  else
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338]
                                          + 8
                                          * (((((v2 ^ (*(_QWORD *)(STACK[0x458] + 24) == 0)) & 1) == 0)
                                            * ((v2 ^ 0x7C) + 1487)) ^ (v2 - 28)))
                              - 4))();
  }
}

uint64_t sub_1E9B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  *a8 = v8;
  *(_QWORD *)(v9 - 0x74C05FF805FC435ALL) = v8;
  return sub_1E9F60(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

void sub_1E9C08()
{
  uint64_t v0;
  void (*v1)(unint64_t);

  v1 = (void (*)(unint64_t))STACK[0x218];
  ((void (*)(void))STACK[0x218])();
  *(_QWORD *)(v0 + 24) = 0;
  v1(STACK[0x458]);
  JUMPOUT(0x1E9C5CLL);
}

uint64_t sub_1E9C60@<X0>(unsigned int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;

  v3 = v1 ^ a1;
  LODWORD(STACK[0x4EC]) = v2;
  STACK[0x400] = STACK[0x530];
  v4 = STACK[0x338];
  STACK[0x8D8] = *(_QWORD *)(STACK[0x338] + 8 * (v1 - 840)) + (v3 ^ 0xFFFFFFFFFFFFF4CALL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (int)((((((5 * (v3 ^ 0xB4C) - 162) ^ (&STACK[0x400] == 0)) & 1) == 0) * (((5 * (v3 ^ 0xB4C) - 1214323748) & 0x48611BEF) + 1744)) ^ (5 * (v3 ^ 0xB4C)))) - 12))(2682281981, 969, 614, 0x74C05FF805FC435ALL, 2994, 3067, 454, 349819777);
}

uint64_t sub_1E9CE4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((588 * (v1 != 0)) ^ v0)) - (v0 ^ 0xD46u) + 2240))();
}

uint64_t sub_1E9D10@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((407 * (*(_QWORD *)(a1 + 8) == 0)) ^ v1)) - (v1 ^ 0x8C0)))();
}

uint64_t sub_1E9D44@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((*a1 == 0) * (43 * (v1 ^ 0x2B5) - 1579)) ^ v1)) - 12))();
}

uint64_t sub_1E9D78()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((3232
                                          * (((v0 + 83) ^ (*(_QWORD *)(STACK[0x610] + 24) == 0)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_1E9DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = ((uint64_t (*)(void))STACK[0x218])();
  STACK[0x610] = 0;
  return sub_1E9F60(v0, v1, v2, v3, v4, v5, v6, 349819777);
}

uint64_t sub_1E9F60()
{
  unint64_t v0;
  _BOOL4 v2;
  uint64_t v4;
  int v5;

  v0 = (v5 + 359) + STACK[0x490] - 0x2245A140D5388303;
  v2 = v0 <= 0x8A8A10A6
    || v0 >= 433 * ((v5 + 2630) ^ 0xCA9u) + (unint64_t)(LODWORD(STACK[0x4DC]) ^ 0x4CC338AFu) + 2324303173u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((19 * v2) ^ (v5 + 2630))) - 8))();
}

void sub_1E9F70()
{
  STACK[0x530] = 0x74C05FF805FC435ALL;
  JUMPOUT(0x1E9F90);
}

uint64_t sub_1E9FD4()
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = (8 * v1) ^ 0x410u;
  STACK[0x910] = STACK[0x5B8];
  STACK[0x598] = v3 + *(_QWORD *)(v2 + 8 * v1) - 456;
  return sub_1E5440(v3);
}

uint64_t sub_1E9FFC()
{
  STACK[0x698] = STACK[0x5B8];
  return sub_1EA028();
}

void sub_1EA008()
{
  STACK[0x5B8] = 0;
  JUMPOUT(0x1EA014);
}

uint64_t sub_1EA028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;

  STACK[0x700] = v10 - 32;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v12 == a8) * ((v9 ^ 0x3E7) + v11)) ^ v9)))();
}

uint64_t sub_1EA054()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v2 = STACK[0x698];
  STACK[0x518] = STACK[0x698];
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((v2 == 0) ^ ((v1 ^ 0xD) - 1)) & 1) * (((v1 ^ 0xD) - 58) ^ 0x222)) ^ v1 ^ 0xD)))();
}

uint64_t sub_1EA09C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_QWORD *)(v1 + 8) == 0x74C05FF805FC435ALL)
                                * (a1 - 2811 + ((2 * (a1 + 1694)) ^ 0x1962))) ^ (a1 + 1694))))();
}

uint64_t sub_1EA0E4()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*v0 == v1) * (v2 - 1700 + v2 - 1287 - 1389)) ^ v2)) - 4))();
}

uint64_t sub_1EA114@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  STACK[0x4A8] = 0;
  STACK[0x678] = 0x35850B5905EFCFD2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 - 619298820) & 0x24E9BC7F ^ 0x38) * (a1 != 0x74C05FF805FC435ALL)) ^ v1))
                            - 12))();
}

void sub_1EA184()
{
  uint64_t v0;
  uint64_t v1;

  STACK[0x718] = (((_DWORD)v0 + 1793289140) & 0x951C967B ^ 0xFFFFFFFFFFFFFDA7) + *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x1EBB34);
}

uint64_t sub_1EA1B8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  STACK[0x888] = 0;
  STACK[0x420] = 0x380E8157DD5D5493;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ ((2 * (a1 == v2)) | (8 * (a1 == v2)))))
                            - (((v1 ^ 0xA4Fu) - 918) ^ 0x32)))();
}

void sub_1EA204()
{
  int v0;
  uint64_t v1;

  STACK[0x718] = *(_QWORD *)(v1 + 8 * v0);
  JUMPOUT(0x1EA228);
}

uint64_t sub_1EA234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((((v10 - 300) | 0x103) - 834) * (v9 == a8)) ^ (v10 - 41))) - 8))();
}

uint64_t sub_1EA268()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x888] + 24);
  STACK[0x848] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != 0) * ((v0 - 432230324) & 0x19C34FDC ^ 0x99A)) ^ v0)) - 8))();
}

uint64_t sub_1EA2B4()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = ((27 * ((v0 + 965) ^ 0x74C)) ^ 0xF5727569) + v1;
  STACK[0xA48] = v3;
  v4 = STACK[0x420];
  STACK[0xA50] = STACK[0x420];
  return (*(uint64_t (**)(void))(v2 + 8 * ((3458 * (0x380E8157DD5D5493 - v4 + v3 > 9)) ^ (v0 + 965))))();
}

void sub_1EA328()
{
  JUMPOUT(0x1EA358);
}

uint64_t sub_1EADB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((((v6 ^ 0x2F4991C8) - 23085312 + ((2 * v6) & 0x53E7FFFA ^ 0x164DC6A) == v9) * (108 * (v5 ^ v7) - 754)) ^ v5)) - 4))(a1, a2, a3, a4, a5, 0xD26ECCB0A446AEF0, 0xA36E72ED7D18EDCCLL, 1554976193);
}

uint64_t sub_1EAE40()
{
  uint64_t v0;
  int v1;

  STACK[0x450] = STACK[0xAB8];
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((((((v1 ^ 0xA97) - 1345551838) & 0x503376C3 ^ 0xFFFFFB72)
                                                + (v1 ^ 0xA97)
                                                - 604)
                                               * (LODWORD(STACK[0xAC4]) == 349819777)) ^ v1 ^ 0xA97))
                            - 12))();
}

uint64_t sub_1EAEA8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, int a3@<W7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;

  v13 = (v10 - 680771326);
  v14 = v10 - 1;
  v15 = *(_BYTE *)(v11 + v13);
  v16 = a4 + v13;
  v17 = __ROR8__(a4 + v13, 8);
  v18 = ((((_DWORD)v11 + (_DWORD)v13) * a3) ^ (((v11 + v13) * a3) >> 16)) * a3;
  v19 = ((0x2D91334F5BB9510FLL - (v17 & 0xF8FFFFFFFFFFFFFFLL)) & 0x6558FC5F2030D93BLL)
      + (v17 & 0xF8FFFFFFFFFFFFFFLL)
      + a1
      - (((v17 & 0xF8FFFFFFFFFFFFFFLL) + a1) & 0x6158FC5F2030D93BLL);
  v20 = (__ROR8__(v19 ^ 0x98A286E1FDD2F849, 8) + (v19 ^ 0xBD4E364DFE78FCFLL)) ^ 0xD9D0D7C95032EE2BLL;
  *((_QWORD *)&v21 + 1) = v19 ^ 0xBD4E364DFE78FCFLL;
  *(_QWORD *)&v21 = v19;
  v22 = v20 ^ (v21 >> 61);
  *(_QWORD *)&v21 = __ROR8__(v20, 8);
  v23 = (((2 * (v21 + v22)) | 0x891383DD7D515B06) - (v21 + v22) + 0x3B763E114157527DLL) ^ 0x9C09A56FB0CDCECCLL;
  v24 = v23 ^ __ROR8__(v22, 61);
  *(_QWORD *)&v21 = __ROR8__(v23, 8);
  v25 = (-2 - ((~(v21 + v24) | 0x299A59CBA217D1BLL) + ((v21 + v24) | 0xFD665A6345DE82E4))) ^ 0xAC8CEACF10FF3202;
  v26 = v25 ^ __ROR8__(v24, 61);
  v27 = (__ROR8__(v25, 8) + v26) ^ 0x61D51F22504A3CA0;
  v28 = v27 ^ __ROR8__(v26, 61);
  *(_QWORD *)&v21 = __ROR8__(v27, 8);
  v29 = (v21 + v28) | 0xD1655C1A4F22802DLL;
  v30 = __ROR8__((-2 - ((~(v21 + v28) | 0x2E9AA3E5B0DD7FD2) + v29)) ^ 0xEED4C47F3DDC6E31, 8);
  v31 = (-2 - ((~(v21 + v28) | 0x2E9AA3E5B0DD7FD2) + v29)) ^ 0xEED4C47F3DDC6E31 ^ __ROR8__(v28, 61);
  v32 = STACK[0x338];
  *(_BYTE *)(v16 - 0x77C8991B1798DD3) = *(_BYTE *)(a9 + (v18 >> 24)) ^ v15 ^ *(_BYTE *)((v18 >> 24) + a8 + 1) ^ *(_BYTE *)((v18 >> 24) + a7 + 5) ^ v18 ^ (BYTE3(v18) * ((v9 ^ 0xB5) - 53)) ^ (((__ROR8__((v30 + v31) ^ a2, 8) + ((v30 + v31) ^ a2 ^ __ROR8__(v31, 61))) ^ 0x6D7C07505EEA904DLL) >> (8 * (v16 & 7u)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((3913 * (v14 == v12)) ^ v9)) - 4))();
}

uint64_t sub_1EB138()
{
  return ((uint64_t (*)(void))STACK[0x9A0])();
}

uint64_t sub_1EB140()
{
  uint64_t v0;
  int v1;

  STACK[0x450] = STACK[0xA98];
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((((v1 - 844) | 0x34B) + 1) ^ (LODWORD(STACK[0xAA4]) == 349819777)) & 1) == 0)
                                * (((((v1 - 844) | 0x34B) - 906) | 0x200) + 1425)) ^ ((v1 - 844) | 0x34B))))();
}

uint64_t sub_1EB19C()
{
  uint64_t v0;
  int v1;

  STACK[0x5D0] = STACK[0xA78];
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((LODWORD(STACK[0xA84]) == 349819777)
                                     * ((((v1 - 776) | 0x102) + 213930129) & 0xF33FAFBA ^ (((v1 - 776) | 0x102) - 46))) ^ ((v1 - 776) | 0x102))))();
}

uint64_t sub_1EB200()
{
  uint64_t v0;
  int v1;

  STACK[0x5D0] = STACK[0xA58];
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((363 * (LODWORD(STACK[0xA64]) != 349819777)) ^ (v1 + 941120543) & 0xC7E7A8F6))
                            - ((((((v1 + 941120543) & 0xC7E7A8F6) - 1694) | 0x188) - 442) ^ 0x216)))();
}

uint64_t sub_1EB26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(v8 + 8 * ((2919 * (v9 == a8 + (v10 ^ 0x804) - 3016)) ^ (v10 - 518))))();
}

uint64_t sub_1EB2A4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x4A8] + 24);
  STACK[0x840] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((v2 == 0) * ((v0 ^ 0x867) + ((v0 - 86290427) & 0x524A7FE) - 1889)) ^ v0))
                            - 4))();
}

uint64_t sub_1EB300()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = (v1 - 177047899);
  STACK[0xA68] = v3;
  v4 = STACK[0x678];
  STACK[0xA70] = STACK[0x678];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1813
                                          * (v3 + 0x35850B5905EFCF61 - v4 + ((v0 - 1580157104) & 0x5E2F4571) > (unint64_t)((v0 - 47) | 0x4Cu) - 963)) ^ v0))
                            - 12))();
}

void sub_1EB388()
{
  JUMPOUT(0x1EA358);
}

uint64_t sub_1EB3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;

  v11 = v9 == ((v10 + 1644903151) & 0x9DF4C55D ^ (a8 + 1047));
  return (*(uint64_t (**)(void))(v8 + 8 * (((16 * v11) | (v11 << 9)) ^ (v10 + 77))))();
}

uint64_t sub_1EB3F4()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x4C8] + 24);
  STACK[0x680] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((405 * ((((27 * (v0 ^ 0x43D)) ^ (v2 == 0)) & 1) == 0)) ^ v0)))();
}

uint64_t sub_1EB43C()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = (v1 - 177047899);
  STACK[0xA88] = v3;
  v4 = STACK[0x7F0];
  STACK[0xA90] = STACK[0x7F0];
  LODWORD(v3) = v3 - v4 + (((v0 ^ 0xC69u) - 1188) ^ 0x1EB171B122E27795) > 9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((v3 | ((_DWORD)v3 << 10)) ^ v0 ^ 0xC69))
                            - ((v0 ^ 0xC69u)
                             - 2053)
                            + 99))();
}

void sub_1EB4A4()
{
  JUMPOUT(0x1EA354);
}

uint64_t sub_1EB4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v10 + 608) * (v9 == a8)) ^ (v10 - 394))) - 4))();
}

uint64_t sub_1EB510()
{
  int v0;
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(STACK[0x600] + 24);
  STACK[0x770] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2433 * (v2 != 0)) ^ v0)) - 4))();
}

uint64_t sub_1EB558()
{
  int v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v3 = (v1 - 177047899);
  STACK[0xAA8] = v3;
  v4 = STACK[0x760];
  STACK[0xAB0] = STACK[0x760];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2152 * (v3 + 0xC0FE77404F67972 - v4 > 9)) ^ v0))
                            - ((2 * v0) ^ 0x748u)
                            + 968))();
}

void sub_1EB5C4()
{
  JUMPOUT(0x1EA354);
}

uint64_t sub_1EB628()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (2 * (STACK[0x6A0] == 0))))
                            - 14 * (v0 ^ 0x91Au)
                            - ((3 * (v0 ^ 0xB0Cu)) ^ 0xFFFFFFFFFFFFFA9DLL)))();
}

uint64_t sub_1EB670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(_QWORD, uint64_t),int a27,int a28)
{
  int v28;
  uint64_t v29;
  unint64_t v30;

  v29 = a26(LODWORD(STACK[0x43C]) ^ 0x4CC338AFu, 2095267386);
  v30 = STACK[0x338];
  STACK[0xAB8] = v29 + 0x77C8991B1798DD3;
  if (v29)
    a28 = 349819777;
  LODWORD(STACK[0xAC4]) = a28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * ((1560 * (v29 != 0)) ^ v28)) - 8))();
}

uint64_t sub_1EB6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  int v7;

  STACK[0x9A0] = *(_QWORD *)(v6 + 8 * (v7 - 892)) + ((v7 + 158) | 0x31u) - 1157;
  return sub_1EADB4(a1, a2, a3, a4, a5);
}

uint64_t sub_1EB720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (int)(((((((v10 - 920) | 0x949) - 1345551838) & 0x503376C3 ^ 0xFFFFFB72)
                                                + ((v10 - 920) | 0x949)
                                                - 604)
                                               * (v8 == a8)) ^ ((v10 - 920) | 0x949)))
                            - 12))();
}

uint64_t sub_1EB77C@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  STACK[0x450] = 0x77C8991B1798DD3;
  LODWORD(STACK[0x43C]) = 1287862447;
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((2793 * (v2 == ((a2 - 1111450400) & 0x423F5FEC ^ (a1 - 820)))) ^ (a2 - 1214))))();
}

uint64_t sub_1EB7E0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 + 1287861855) ^ LODWORD(STACK[0x43C])) > 0x1F)
                                * ((v0 ^ 0x18D) + 1322)) ^ v0)))();
}

uint64_t sub_1EB828@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = STACK[0x698];
  STACK[0x7E8] = STACK[0x4D0] + 108;
  STACK[0x880] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 != 0) * ((a1 + 758) ^ 0xB9C)) ^ a1))
                            - (a1 - 55)
                            + 151))();
}

void sub_1EB86C()
{
  unsigned int v0;
  uint64_t v1;

  STACK[0x750] = (v0 ^ 0xFFFFFFFFFFFFFF6BLL) + *(_QWORD *)(v1 + 8 * (int)v0);
  JUMPOUT(0x1EB914);
}

void sub_1EB988()
{
  int v0;

  STACK[0x718] = *(_QWORD *)(STACK[0x338] + 8 * v0);
  JUMPOUT(0x1EBB28);
}

uint64_t sub_1EB9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(v8 + 8 * ((1400 * (v10 == a8 + ((v9 + 1243) | 8) - 2223)) ^ (v9 - 395))))();
}

uint64_t sub_1EB9D8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(unsigned __int8 *)(STACK[0x4D0] + 5) == (((((_BYTE)v0 + 32) & 0xFC) + 122) & 0xFE))
                                     * (((v0 + 2097252160) & 0x82FE7BFA) - 2947)) ^ v0)))();
}

uint64_t sub_1EBA34@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x698];
  STACK[0x628] = v2 + 116;
  STACK[0x648] = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((((a1 - 2986) ^ (v3 == 0)) & 1) == 0) * (a1 - 3045)) ^ a1))
                            - 12))();
}

uint64_t sub_1EBA84@<X0>(int a1@<W8>)
{
  uint64_t v1;
  unint64_t v2;
  int v3;
  char v4;
  int v5;
  uint64_t v6;

  v3 = a1 + 6;
  v4 = (a1 - 116) ^ 0xBA;
  v5 = (a1 - 1094647412) & 0x413EF2AF;
  v6 = *(_QWORD *)(v1 + 8);
  STACK[0x6E0] = v2;
  STACK[0x7B8] = 0;
  STACK[0x758] = 0x31F8191BC9F5031BLL;
  return (*(uint64_t (**)(void))(STACK[0x338]
                              + 8
                              * (((((v6 == 0x74C05FF805FC435ALL) ^ (v4 + 1)) & 1) * (v5 + 1988)) ^ v3)))();
}

void sub_1EBB04()
{
  uint64_t v0;

  STACK[0x718] = *(_QWORD *)(STACK[0x338] + 8 * v0);
  JUMPOUT(0x1EBB20);
}

void sub_1EBB90()
{
  JUMPOUT(0x1EBBA4);
}

void sub_1EBBEC()
{
  JUMPOUT(0x1EA354);
}

uint64_t sub_1EBC24()
{
  uint64_t v0;

  *(_QWORD *)STACK[0xB28] = v0;
  return ((uint64_t (*)(void))STACK[0x718])();
}

uint64_t sub_1EBC34()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1EBC40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;

  if (v8 == 349819777)
  {
    v11 = (_QWORD *)STACK[0x898];
    v12 = *(_QWORD *)(STACK[0x898] + 8);
    v13 = (_QWORD *)STACK[0x838];
    v13[1] = v12;
    *v13 = *v11;
    return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((2 * (v12 == 0)) | (8 * (v12 == 0))) ^ (v9 + 552)))
                              - ((v9 + 1806)
                               + ((2 * v9) ^ 0xFFFFFFFFFFFFF2AALL))))();
  }
  else if (v8 == 349777725)
  {
    return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                          + 8
                                          * ((106 * (*(_QWORD *)(STACK[0x618] - 0x74C05FF805FC4352) != 0)) ^ (v9 + 476)))
                              - (v9 - 311)
                              + 649))();
  }
  else
  {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * ((3351 * (v8 != 349819777)) ^ (v9 + 259))) - 12))(a1, a2, a3, a4, a5, a6, a7, 349819777);
  }
}

void sub_1EBCB4(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = v1;
  *(_QWORD *)(v1 + 8) = *a1;
  *a1 = v1;
  JUMPOUT(0x1EC510);
}

uint64_t sub_1EBD84()
{
  return sub_1F0C30();
}

uint64_t sub_1EBD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  unint64_t v28;

  v27 = a26(32, 3984933173);
  v28 = STACK[0x338];
  STACK[0x560] = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * (((v27 != 0) * ((v26 - 480) ^ 0xEC2)) ^ v26))
                            - ((v26 - 1372) | 0x32Bu)
                            + 883))();
}

uint64_t sub_1EBDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  unint64_t v28;

  v27 = a26(32, 1893619840);
  v28 = STACK[0x338];
  STACK[0x730] = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((1522 * (((v27 == 0) ^ (v26 + 108)) & 1)) ^ v26))
                            - ((v26 + 666258019) & 0xD849B7BD)
                            + 1428))();
}

uint64_t sub_1EBE5C()
{
  uint64_t v0;
  int v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v0 + 8 * (v1 & 0x7224FD39));
  *(int64x2_t *)&STACK[0x310] = vdupq_n_s64(0x4DD9961488D5DE0uLL);
  *(int64x2_t *)&STACK[0x320] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x300] = vdupq_n_s64(0x11240B7E6E9EBB58uLL);
  *(int64x2_t *)&STACK[0x360] = vdupq_n_s64(0xF1687F01EAAD7CDELL);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0x4BF06AEB371AF293uLL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x621E1A84C8980B58uLL);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x6DDF42DD98D7E347uLL);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0x588064810E65634FuLL);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0xB40F9514C8E50D6CLL);
  *(int64x2_t *)&STACK[0x340] = vdupq_n_s64(0x63319BFDAEB73225uLL);
  *(int64x2_t *)&STACK[0x350] = vdupq_n_s64(0xAE154F53AADE4F19);
  *(int64x2_t *)&STACK[0x200] = vdupq_n_s64(0x9CCE64025148CDDALL);
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0xA36E72ED7D18EDCCLL);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0x2E484DFFEFD0E85uLL);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0x93E76374F9399CCELL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0x6C189C8B06C66331uLL);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0xC72F302887A42EE6);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0x53A904EE74388D2DuLL);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0xF11460BBE2C778C1);
  STACK[0x968] = v2;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v0
                                                               + 8
                                                               * ((3442
                                                                 * ((((((v1 & 0x7224FD39) - 312176818) & 0x129B79FD ^ 0xED4)
                                                                    + 2126301219) & 0x814333EF ^ 0x1A111E17)
                                                                  + (((v1 & 0x7224FD39) - 312176818) & 0x129B79FD ^ 0xED4)
                                                                  + 762 != 437332126)) ^ ((v1 & 0x7224FD39) - 312176818) & 0x129B79FD ^ 0xED4))
                                                   - 4))(1000057774, 437329431);
}

uint64_t sub_1EBEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v10 + 690) ^ (3981 * (v9 == a8))))
                            - (v10 + 673)
                            + 1637))();
}

uint64_t sub_1EBECC()
{
  int v0;
  unint64_t v1;

  v1 = *(_QWORD *)(STACK[0x6F8] + 24);
  STACK[0x908] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * (((v1 == 0) * (((v0 - 933) | 0x104) ^ 0x3DF)) ^ v0)) - 8))();
}

uint64_t sub_1EBF18()
{
  int v0;
  int v1;
  unint64_t v2;
  unint64_t v3;

  v2 = ((((v0 - 1229) ^ 0x26C) - 895) ^ 0xF57276E8) + v1;
  STACK[0xB30] = v2;
  v3 = STACK[0x6C8];
  STACK[0xB38] = STACK[0x6C8];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338]
                                        + 8 * ((977 * (0x46D10E2E9274E285 - v3 + v2 > 9)) ^ (v0 - 1229)))
                            - 4))();
}

void sub_1EBF90()
{
  JUMPOUT(0x1EBFBCLL);
}

uint64_t sub_1EBFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X8>)
{
  return a8(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1EBFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(v8 + 8 * (((50 * (v10 ^ 0x3F1) - 2570) * (v9 == a8)) ^ (v10 - 290))))();
}

uint64_t sub_1EC01C()
{
  int v0;
  unint64_t v1;

  v1 = *(_QWORD *)(STACK[0x740] + 24);
  STACK[0x478] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338]
                                        + 8 * ((1860 * ((((v0 - 2368) ^ (v0 - 2142) ^ (v1 == 0)) & 1) == 0)) ^ v0))
                            - 12))();
}

uint64_t sub_1EC074()
{
  int v0;
  int v1;
  unint64_t v2;
  unint64_t v3;

  v2 = (v1 - 177047899);
  STACK[0xAD8] = v2;
  v3 = STACK[0x5A8];
  STACK[0xAE0] = STACK[0x5A8];
  return (*(uint64_t (**)(void))(STACK[0x338]
                              + 8
                              * (((v2 + 0x7857BF30AE95357 - v3 > 9) * ((12 * (((v0 - 658) | 0x60) ^ 0x29)) ^ 0x5B2)) ^ v0)))();
}

void sub_1EC0F0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;

  v0 = STACK[0xA20];
  STACK[0x3C0] = STACK[0xA20];
  v1 = STACK[0xA50] - 0x380E8157DD5D548FLL;
  STACK[0x3B0] = (v1 ^ 0x6FFF8FBFBAF7338FLL)
               + ((2 * v1) & 0xDFFF1F7F75EE671ELL)
               + ((324 * ((v8 - 270029177) & 0x101855D6 ^ 0x4D5u)) ^ 0xFF3FFAFDDDDCDE36);
  v2 = STACK[0xA70] - 0x35850B5905EFCFCELL;
  STACK[0x370] = (v2 ^ 0xFFBFFEFFD8FC1DDFLL) + 0x6F7F8BBDBFD7F3AALL + ((2 * v2) & 0xFF7FFDFFB1F83BBELL);
  STACK[0x360] = ((v0 - 0x2245A1415FC28FDALL) ^ 0xFFBFCAFDDEFC9DEDLL)
               + 0x6F7FBFBFB9D7739CLL
               + ((2 * (v0 - 0x2245A1415FC28FDALL)) & 0xFF7F95FBBDF93BDALL);
  v3 = STACK[0xA90] - 0x1EB171B122E27455;
  STACK[0x350] = (v3 ^ 0x7F7FBBBF99D739BDLL) - 0x1040310201032834 + ((2 * v3) & 0xFEFF777F33AE737ALL);
  v4 = STACK[0xAB0] - 0xC0FE77404F6796ELL;
  STACK[0x340] = (v4 ^ 0x7F7FEEBDD9DC71D9) - 0x1040640041086050 + ((2 * v4) & 0xFEFFDD7BB3B8E3B2);
  v5 = STACK[0xAD0];
  STACK[0x320] = STACK[0xAD0];
  STACK[0x310] = ((v5 - 0x31F8191BC9F50317) ^ 0x7F3FDEBDFADFD799)
               - 0x10005400620BC610
               + ((2 * (v5 - 0x31F8191BC9F50317)) & 0xFE7FBD7BF5BFAF32);
  v6 = STACK[0xAE0];
  STACK[0x300] = STACK[0xAE0];
  STACK[0x2F0] = ((v6 - 0x7857BF30AE95353) ^ 0x7FFF8BBFFED697A9)
               - 0x10C0010266028620
               + ((2 * (v6 - 0x7857BF30AE95353)) & 0xFFFF177FFDAD2F52);
  STACK[0x2E0] = ((STACK[0xA10] - 0x3E8E35D558CF506CLL) ^ 0xEFFFFABD9FFD5BAFLL)
               + 0x7F3F8FFFF8D6B5DALL
               + ((2 * (STACK[0xA10] - 0x3E8E35D558CF506CLL)) & 0xDFFFF57B3FFAB75ELL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x4DB04573F4F81E09) ^ 0xFF3FABBDDDDD1FCFLL)
               + 0x6FFFDEFFBAF6F1BALL
               + ((2 * (STACK[0xA00] - 0x4DB04573F4F81E09)) & 0xFE7F577BBBBA3F9ELL);
  STACK[0x2C0] = ((STACK[0x9F0] - 0x130390FDD61ABDBELL) ^ 0x6FFFDEFFDFF659CDLL)
               - 0xC0544247224844
               + ((2 * (STACK[0x9F0] - 0x130390FDD61ABDBELL)) & 0xDFFFBDFFBFECB39ALL);
  STACK[0x2B0] = ((STACK[0x9E0] - 0x57B29EB8897BC077) ^ 0xFF3F9AFDFCFC5589)
               + 0x6FFFEFBF9BD7BC00
               + ((2 * (STACK[0x9E0] - 0x57B29EB8897BC077)) & 0xFE7F35FBF9F8AB12);
  STACK[0x2A0] = ((STACK[0x9D0] - 0x7230E0A670625D21) ^ 0x7FBF9FBD9FFF93DBLL)
               - 0x10801500072B8252
               + ((2 * (STACK[0x9D0] - 0x7230E0A670625D21)) & 0xFF7F3F7B3FFF27B6);
  v7 = STACK[0xB38];
  STACK[0x290] = STACK[0xB38];
  STACK[0x280] = ((v7 - 0x46D10E2E9274E281) ^ 0xEFFF9EBFBEDCF3CFLL)
               + 0x7F3FEBFDD9F71DBALL
               + ((2 * (v7 - 0x46D10E2E9274E281)) & 0xDFFF3D7F7DB9E79ELL);
  STACK[0x270] = ((v1 + 2) ^ 0xEF337572B5FD7E7ALL) + 0x5EFDFBDFFFA2A5FELL + ((2 * (v1 + 2)) & 0xDE66EAE56BFAFCF4);
  STACK[0x260] = ((v0 - 0x2245A1415FC28FD8) ^ 0x6E7BF7D3BDECB6FCLL)
               - 0x204A8681084C9284
               + ((2 * (v0 - 0x2245A1415FC28FD8)) & 0xDCF7EFA77BD96DF8);
  STACK[0x250] = ((v2 + 2) ^ 0x6F31F37AB5A4647CLL) - 0x2100822800044004 + ((2 * (v2 + 2)) & 0xDE63E6F56B48C8F8);
  STACK[0x240] = ((v3 + 2) ^ 0x7F35F7DEF7BB7F7DLL) - 0x3104868C421B5B05 + ((2 * (v3 + 2)) & 0xFE6BEFBDEF76FEFALL);
  STACK[0x200] = ((v4 + 2) ^ 0x6EB371DBB7F3ACFELL) - 0x2082008902538886 + ((2 * (v4 + 2)) & 0xDD66E3B76FE759FCLL);
  STACK[0x3E0] = STACK[0x848];
  STACK[0x3D0] = STACK[0x840];
  JUMPOUT(0x1E63ACLL);
}

uint64_t sub_1EC130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((2443 * (v9 == a8 + (v10 ^ 0x172) - 702)) ^ (v10 - 270))) - 4))();
}

uint64_t sub_1EC168()
{
  int v0;
  unint64_t v1;

  v1 = *(_QWORD *)(STACK[0x7B8] + 24);
  STACK[0x670] = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((1424 * (v1 != 0)) ^ v0))
                            - ((v0 - 1334232818) & 0x4F86C7FF ^ 0x3C8)))();
}

uint64_t sub_1EC1BC()
{
  int v0;
  int v1;
  unint64_t v2;
  unint64_t v3;

  v2 = (v1 - 177047899);
  STACK[0xAC8] = v2;
  v3 = STACK[0x758];
  STACK[0xAD0] = STACK[0x758];
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((102 * (v2 + 0x31F8191BC9F5031BLL - v3 > 9)) ^ v0))
                            - (((v0 + 270) - 877) ^ (v0 - 611))))();
}

void sub_1EC220()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;

  v0 = STACK[0xA20];
  STACK[0x3C0] = STACK[0xA20];
  v1 = STACK[0xA50] - 0x380E8157DD5D548FLL;
  STACK[0x3B0] = (v1 ^ 0x6FFF8FBFBAF7338FLL)
               + ((2 * v1) & 0xDFFF1F7F75EE671ELL)
               + ((324 * (((v8 + 59) | 0x440) ^ 0x4D5u)) ^ 0xFF3FFAFDDDDCDE36);
  v2 = STACK[0xA70] - 0x35850B5905EFCFCELL;
  STACK[0x370] = (v2 ^ 0xFFBFFEFFD8FC1DDFLL) + 0x6F7F8BBDBFD7F3AALL + ((2 * v2) & 0xFF7FFDFFB1F83BBELL);
  STACK[0x360] = ((v0 - 0x2245A1415FC28FDALL) ^ 0xFFBFCAFDDEFC9DEDLL)
               + 0x6F7FBFBFB9D7739CLL
               + ((2 * (v0 - 0x2245A1415FC28FDALL)) & 0xFF7F95FBBDF93BDALL);
  v3 = STACK[0xA90] - 0x1EB171B122E27455;
  STACK[0x350] = (v3 ^ 0x7F7FBBBF99D739BDLL) - 0x1040310201032834 + ((2 * v3) & 0xFEFF777F33AE737ALL);
  v4 = STACK[0xAB0] - 0xC0FE77404F6796ELL;
  STACK[0x340] = (v4 ^ 0x7F7FEEBDD9DC71D9) - 0x1040640041086050 + ((2 * v4) & 0xFEFFDD7BB3B8E3B2);
  v5 = STACK[0xAD0];
  STACK[0x320] = STACK[0xAD0];
  STACK[0x310] = ((v5 - 0x31F8191BC9F50317) ^ 0x7F3FDEBDFADFD799)
               - 0x10005400620BC610
               + ((2 * (v5 - 0x31F8191BC9F50317)) & 0xFE7FBD7BF5BFAF32);
  v6 = STACK[0xAE0];
  STACK[0x300] = STACK[0xAE0];
  STACK[0x2F0] = ((v6 - 0x7857BF30AE95353) ^ 0x7FFF8BBFFED697A9)
               - 0x10C0010266028620
               + ((2 * (v6 - 0x7857BF30AE95353)) & 0xFFFF177FFDAD2F52);
  STACK[0x2E0] = ((STACK[0xA10] - 0x3E8E35D558CF506CLL) ^ 0xEFFFFABD9FFD5BAFLL)
               + 0x7F3F8FFFF8D6B5DALL
               + ((2 * (STACK[0xA10] - 0x3E8E35D558CF506CLL)) & 0xDFFFF57B3FFAB75ELL);
  STACK[0x2D0] = ((STACK[0xA00] - 0x4DB04573F4F81E09) ^ 0xFF3FABBDDDDD1FCFLL)
               + 0x6FFFDEFFBAF6F1BALL
               + ((2 * (STACK[0xA00] - 0x4DB04573F4F81E09)) & 0xFE7F577BBBBA3F9ELL);
  STACK[0x2C0] = ((STACK[0x9F0] - 0x130390FDD61ABDBELL) ^ 0x6FFFDEFFDFF659CDLL)
               - 0xC0544247224844
               + ((2 * (STACK[0x9F0] - 0x130390FDD61ABDBELL)) & 0xDFFFBDFFBFECB39ALL);
  STACK[0x2B0] = ((STACK[0x9E0] - 0x57B29EB8897BC077) ^ 0xFF3F9AFDFCFC5589)
               + 0x6FFFEFBF9BD7BC00
               + ((2 * (STACK[0x9E0] - 0x57B29EB8897BC077)) & 0xFE7F35FBF9F8AB12);
  STACK[0x2A0] = ((STACK[0x9D0] - 0x7230E0A670625D21) ^ 0x7FBF9FBD9FFF93DBLL)
               - 0x10801500072B8252
               + ((2 * (STACK[0x9D0] - 0x7230E0A670625D21)) & 0xFF7F3F7B3FFF27B6);
  v7 = STACK[0xB38];
  STACK[0x290] = STACK[0xB38];
  STACK[0x280] = ((v7 - 0x46D10E2E9274E281) ^ 0xEFFF9EBFBEDCF3CFLL)
               + 0x7F3FEBFDD9F71DBALL
               + ((2 * (v7 - 0x46D10E2E9274E281)) & 0xDFFF3D7F7DB9E79ELL);
  STACK[0x270] = ((v1 + 2) ^ 0xEF337572B5FD7E7ALL) + 0x5EFDFBDFFFA2A5FELL + ((2 * (v1 + 2)) & 0xDE66EAE56BFAFCF4);
  STACK[0x260] = ((v0 - 0x2245A1415FC28FD8) ^ 0x6E7BF7D3BDECB6FCLL)
               - 0x204A8681084C9284
               + ((2 * (v0 - 0x2245A1415FC28FD8)) & 0xDCF7EFA77BD96DF8);
  STACK[0x250] = ((v2 + 2) ^ 0x6F31F37AB5A4647CLL) - 0x2100822800044004 + ((2 * (v2 + 2)) & 0xDE63E6F56B48C8F8);
  STACK[0x240] = ((v3 + 2) ^ 0x7F35F7DEF7BB7F7DLL) - 0x3104868C421B5B05 + ((2 * (v3 + 2)) & 0xFE6BEFBDEF76FEFALL);
  STACK[0x200] = ((v4 + 2) ^ 0x6EB371DBB7F3ACFELL) - 0x2082008902538886 + ((2 * (v4 + 2)) & 0xDD66E3B76FE759FCLL);
  STACK[0x3E0] = STACK[0x848];
  STACK[0x3D0] = STACK[0x840];
  JUMPOUT(0x1E63ACLL);
}

uint64_t sub_1EC2A4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 != 0) * (((v0 - 46725851) & 0x2C8FB1E) - 2457)) ^ v0)) - 12))();
}

uint64_t sub_1EC2DC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((*(_QWORD *)(a1 + 8) == 0) * ((v1 ^ 0x8EB) - 941)) ^ v1)))();
}

uint64_t sub_1EC304@<X0>(_QWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (int)(((*a1 == 0) * (((v1 + 1197771714) & 0xB89B76FE) - 623)) ^ v1))
                            - 8))();
}

uint64_t sub_1EC340()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((*(_QWORD *)(STACK[0x898] + 24) != 0) * (v0 ^ 0x6C5)) ^ v0))
                            - 8))();
}

void sub_1EC374()
{
  ((void (*)(void))STACK[0x218])();
  STACK[0x898] = 0;
  JUMPOUT(0x1EC510);
}

uint64_t sub_1EC540()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)((55 * (*(_QWORD *)(STACK[0x838] + 24) != 0)) | (v1 + 1614670857) & 0x9FC21BEA))
                            - 12 * ((v1 + 1614670857) & 0x9FC21BEA ^ 0xB91)
                            + 968))();
}

uint64_t sub_1EC594()
{
  uint64_t v0;
  uint64_t v1;

  ((void (*)(void))STACK[0x218])();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = ((uint64_t (*)(uint64_t))STACK[0x218])(v0);
  return ((uint64_t (*)(uint64_t))STACK[0x3F8])(v1);
}

void sub_1EC828()
{
  JUMPOUT(0x1EC858);
}

uint64_t sub_1EC8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t (*v56)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x3B0] = v55;
  STACK[0x3D0] = v54;
  v56 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * (((((v52 - 1908315877) & 0x71BE8FFD) - 871) * ((a7 - 1000057791) < 0xFFFFFFF7)) ^ v52));
  STACK[0x3C0] = (unint64_t)*(&off_38F180 + v52 - 2521);
  STACK[0x3E0] = (unint64_t)*(&off_38F180 + (v52 ^ 0xA3E)) - 12;
  HIDWORD(a25) = a7;
  return v56(a1, 0x9C6867EBBC2DE88CLL, 0x6C189C8B06C66331, 0x621E1A84C8980B58, a5, 0x53A904EE74388D2DLL, (char *)*(&off_38F180 + v52 - 2527) - 8, 0xC72F302887A42EE6, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52);
}

uint64_t sub_1ECA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v37;

  v27 = ((v26 - 1017386710) & 0x3CA40FEE ^ 0xC464579D) + a26;
  v28 = STACK[0x3B0] - 0x77C8991B1798E1FLL + v27;
  v29 = v27 + STACK[0x3D0];
  STACK[0x370] = v28 - v29 + 76;
  v30 = ((_BYTE)a26 + 1) & 0xF;
  v31 = a7 + v30 - v29;
  v32 = (STACK[0x3E0] | v30) - v29;
  v33 = (STACK[0x3C0] | v30) - v29;
  v37 = STACK[0x370] < (unint64_t)(9 * ((v26 - 263) ^ 0x89Cu)) - 2720 || v31 < 0x10 || v32 < 0x10 || v33 < 0x10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (((4 * v37) | (v37 << 6)) ^ (v26 - 263)))
                                          - 12))(1000057774);
}

uint64_t sub_1ECAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * (((v15 + 8 < ((92 * (v16 ^ 0xAA5)) ^ 0x79Cu)) * ((2 * v16) ^ 0x156C)) ^ v16)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1ECB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int64x2_t a71;
  int v71;
  int v72;
  int v73;
  int64x2_t v74;
  int8x16_t v75;
  int8x16_t v76;
  int8x16_t v77;
  int64x2_t v78;
  int8x16_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int8x16_t v100;
  int64x2_t v101;
  int8x16_t v102;
  int8x16_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int8x16_t v106;
  int8x16_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int8x16_t v110;
  int8x16_t v111;
  int8x16_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int8x16_t v132;
  int8x16_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int8x16_t v140;
  int8x16_t v141;
  int8x16_t v142;
  int8x16_t v143;
  int8x16_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int8x16_t v147;
  int8x16_t v148;
  uint64x2_t v149;
  uint64x2_t v150;
  int8x16_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int8x16_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int8x16_t v159;
  int8x16_t v160;
  int64x2_t v161;
  int64x2_t v162;
  int8x16_t v163;
  int8x16_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int8x16_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int64x2_t v173;
  uint64x2_t v174;
  int64x2_t v175;
  int8x16_t v176;
  int8x16_t v177;
  int64x2_t v178;
  int64x2_t v179;
  int64x2_t v180;
  int8x16_t v181;
  int8x16_t v182;
  int8x16_t v183;
  int8x16_t v184;
  int64x2_t v185;
  int64x2_t v186;
  int64x2_t v187;
  int64x2_t v188;
  int64x2_t v189;
  int64x2_t v190;
  int64x2_t v191;
  int64x2_t v192;
  int64x2_t v193;
  int64x2_t v194;
  int64x2_t v195;
  int64x2_t v196;
  int64x2_t v197;
  int64x2_t v198;
  int64x2_t v199;
  int64x2_t v200;
  int64x2_t v201;
  int64x2_t v202;
  int8x16_t v203;
  int8x16_t v204;
  int8x16_t v205;
  int64x2_t v206;
  int64x2_t v207;
  int64x2_t v208;
  int64x2_t v209;
  int64x2_t v210;
  int64x2_t v211;
  int8x16_t v212;
  int8x16_t v213;
  int8x16_t v214;
  int64x2_t v215;
  int64x2_t v216;
  int64x2_t v217;
  int64x2_t v218;
  int64x2_t v219;
  int64x2_t v220;
  int64x2_t v221;
  int64x2_t v222;
  int64x2_t v223;
  int64x2_t v224;
  int64x2_t v225;
  int64x2_t v226;
  int8x16_t v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  int64x2_t v231;
  int64x2_t v232;
  int8x16_t v233;
  int64x2_t v234;
  int64x2_t v235;
  int64x2_t v236;
  int64x2_t v237;
  int64x2_t v238;
  int64x2_t v239;
  int8x16_t v240;
  int64x2_t v241;
  int64x2_t v242;
  int8x16_t v243;
  int64x2_t v244;
  int64x2_t v245;
  int64x2_t v246;
  int64x2_t v247;
  int8x16_t v248;
  int64x2_t v249;
  int64x2_t v250;
  int8x16_t v251;
  int64x2_t v252;
  int64x2_t v253;
  int64x2_t v254;
  int64x2_t v255;
  int64x2_t v256;
  int64x2_t v257;
  int8x16_t v258;
  int64x2_t v259;
  int64x2_t v260;
  int8x16_t v261;
  int64x2_t v262;
  int64x2_t v263;
  int64x2_t v264;
  int64x2_t v265;
  int8x16_t v266;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  int64x2_t v272;
  int64x2_t v273;
  int64x2_t v274;
  int64x2_t v275;
  int64x2_t v276;
  int64x2_t v277;
  int64x2_t v278;
  int64x2_t v279;
  int8x16x4_t v280;
  int8x16x4_t v281;
  int8x16x4_t v282;

  v271 = STACK[0x3D0] - 15;
  HIDWORD(a23) = v73 & 0xFFFFFFF0;
  LODWORD(a43) = -(v73 & 0xFFFFFFF0);
  LODWORD(a41) = HIDWORD(a25) - 1000057790;
  LODWORD(a39) = HIDWORD(a25) - 1000057789;
  LODWORD(a37) = HIDWORD(a25) - 1000057788;
  LODWORD(a36) = HIDWORD(a25) - 1000057787;
  LODWORD(a35) = HIDWORD(a25) - 1000057786;
  LODWORD(a34) = HIDWORD(a25) - 1000057785;
  HIDWORD(v270) = HIDWORD(a25) - 1000057783;
  LODWORD(a33) = HIDWORD(a25) - 1000057784;
  HIDWORD(v269) = HIDWORD(a25) - 1000057780;
  LODWORD(v270) = HIDWORD(a25) - 1000057781;
  HIDWORD(v268) = HIDWORD(a25) - 1000057777;
  LODWORD(v269) = HIDWORD(a25) - 1000057778;
  HIDWORD(a29) = HIDWORD(a25) - 1000057775;
  LODWORD(v268) = HIDWORD(a25) - 1000057776;
  v80 = STACK[0x3B0];
  v81 = STACK[0x3C0];
  v82 = STACK[0x3E0];
  v83.i64[0] = STACK[0x3B0] + (HIDWORD(a25) - 1000057789);
  v83.i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057790);
  v84.i64[0] = STACK[0x3B0] + (HIDWORD(a25) - 1000057787);
  v84.i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057788);
  v281.val[0].i64[0] = STACK[0x3B0] + (HIDWORD(a25) - 1000057785);
  v281.val[0].i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057786);
  v85.i64[0] = STACK[0x3B0] + (HIDWORD(a25) - 1000057783);
  v85.i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057784);
  v86 = v85;
  v85.i64[0] = STACK[0x3B0] + (HIDWORD(a25) - 1000057781);
  v85.i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057782);
  v87 = v85;
  v85.i64[0] = STACK[0x3B0] + (HIDWORD(a25) - 1000057777);
  v85.i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057778);
  v88 = v85;
  v89.i64[0] = STACK[0x3B0] + (HIDWORD(a25) - 1000057775);
  v89.i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057776);
  v90.i64[0] = STACK[0x3B0] + v72 + (((v71 ^ 0x16C6) + 1059) ^ 0xE5EED0A4);
  v90.i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057780);
  v278 = v89;
  v279 = v90;
  v91 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v92 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v272 = v88;
  v93 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v88, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v275 = v87;
  v276 = v86;
  v94 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v95 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v86, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v96 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v281.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v281.val[0], 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v97 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v84, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v84, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v98 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v83, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v100 = *(int8x16_t *)&STACK[0x300];
  v99 = *(int64x2_t *)&STACK[0x310];
  v277 = vsubq_s64(v91, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v91, v91), *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x300]));
  v274 = vsubq_s64(v92, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v92, v92), *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x300]));
  v101 = vsubq_s64(v93, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v93, v93), *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x300]));
  *(int64x2_t *)&STACK[0x370] = vsubq_s64(v94, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v94, v94), *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x300]));
  v273 = vsubq_s64(v95, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v95, v95), v99), v100));
  v102 = (int8x16_t)vaddq_s64(vsubq_s64(v98, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v98, v98), v99), v100)), a71);
  v103 = (int8x16_t)vaddq_s64(vsubq_s64(v97, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v97, v97), v99), v100)), a71);
  v104 = (int64x2_t)veorq_s8(v103, *(int8x16_t *)&STACK[0x360]);
  v105 = (int64x2_t)veorq_s8(v102, *(int8x16_t *)&STACK[0x360]);
  v107 = *(int8x16_t *)&STACK[0x2E0];
  v106 = *(int8x16_t *)&STACK[0x2F0];
  v108 = (int64x2_t)veorq_s8(v102, *(int8x16_t *)&STACK[0x2F0]);
  v109 = (int64x2_t)veorq_s8(v103, *(int8x16_t *)&STACK[0x2F0]);
  v110 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v109);
  v111 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v108);
  v112 = *(int8x16_t *)&STACK[0x2D0];
  v281.val[3] = *(int8x16_t *)&STACK[0x2B0];
  v281.val[2] = *(int8x16_t *)&STACK[0x2C0];
  v113 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2D0], v110), (int64x2_t)vorrq_s8(v110, *(int8x16_t *)&STACK[0x2E0]))), *(int8x16_t *)&STACK[0x2B0]);
  v114 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2D0], v111), (int64x2_t)vorrq_s8(v111, *(int8x16_t *)&STACK[0x2E0]))), *(int8x16_t *)&STACK[0x2B0]);
  v115 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL)));
  v116 = (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v109, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 0x3DuLL)));
  v117 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v115), *(int8x16_t *)&STACK[0x2C0]);
  v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), v116), *(int8x16_t *)&STACK[0x2C0]);
  v119 = (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL)));
  v120 = (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v121 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v119), *(int8x16_t *)&STACK[0x350]);
  v122 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v120), *(int8x16_t *)&STACK[0x350]);
  v123 = (int64x2_t)veorq_s8((int8x16_t)v122, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)));
  v124 = (int64x2_t)veorq_s8((int8x16_t)v121, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL)));
  v125 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), v124);
  v126 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v122, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 8uLL)), v123);
  v127 = *(int64x2_t *)&STACK[0x200];
  v128 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v125, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v125, *(int8x16_t *)&STACK[0x200])), *(int64x2_t *)&STACK[0x200]), *(int8x16_t *)&STACK[0x2A0]);
  v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v126, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v126, *(int8x16_t *)&STACK[0x200])), *(int64x2_t *)&STACK[0x200]), *(int8x16_t *)&STACK[0x2A0]);
  v130 = (int64x2_t)veorq_s8((int8x16_t)v129, vorrq_s8((int8x16_t)vshlq_n_s64(v123, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 0x3DuLL)));
  v131 = (int64x2_t)veorq_s8((int8x16_t)v128, vorrq_s8((int8x16_t)vshlq_n_s64(v124, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 0x3DuLL)));
  v132 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), v131);
  v133 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v130);
  v134 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v76, v132), (int64x2_t)vorrq_s8(v132, v75))), v77);
  v135 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v76, v133), (int64x2_t)vorrq_s8(v133, v75))), v77);
  v136 = (int64x2_t)veorq_s8((int8x16_t)v135, vorrq_s8((int8x16_t)vshlq_n_s64(v130, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 0x3DuLL)));
  v137 = (int64x2_t)veorq_s8((int8x16_t)v134, vorrq_s8((int8x16_t)vshlq_n_s64(v131, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 0x3DuLL)));
  v138 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v135, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v135, 8uLL)), v136), v79);
  v139 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v134, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 8uLL)), v137), v79);
  v140 = (int8x16_t)vdupq_n_s64(0x38uLL);
  v141 = (int8x16_t)vaddq_s64(vsubq_s64(v96, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v96, v96), v99), v100)), a71);
  v142 = (int8x16_t)vaddq_s64(v273, a71);
  v143 = (int8x16_t)vaddq_s64(*(int64x2_t *)&STACK[0x370], a71);
  v144 = (int8x16_t)vaddq_s64(v101, a71);
  v145 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v138, vorrq_s8((int8x16_t)vshlq_n_s64(v136, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 0x3DuLL))));
  v146 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v139, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v139, vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL))));
  v147 = *(int8x16_t *)&STACK[0x240];
  v148 = *(int8x16_t *)&STACK[0x280];
  v149 = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v145, v145), *(int8x16_t *)&STACK[0x240]), v145), v78), *(int8x16_t *)&STACK[0x280]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v83, 3uLL), v140)));
  v150 = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v146, v146), *(int8x16_t *)&STACK[0x240]), v146), v78), *(int8x16_t *)&STACK[0x280]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v84, 3uLL), v140)));
  v151 = *(int8x16_t *)&STACK[0x360];
  v152 = (int64x2_t)veorq_s8(v141, *(int8x16_t *)&STACK[0x360]);
  v153 = (int64x2_t)veorq_s8(v141, *(int8x16_t *)&STACK[0x2F0]);
  v154 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v152, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 8uLL)), v153);
  v155 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2D0], v154), (int64x2_t)vorrq_s8(v154, *(int8x16_t *)&STACK[0x2E0]))), *(int8x16_t *)&STACK[0x2B0]);
  v156 = (int64x2_t)veorq_s8((int8x16_t)v155, vorrq_s8((int8x16_t)vshlq_n_s64(v153, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 0x3DuLL)));
  v157 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v155, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 8uLL)), v156), *(int8x16_t *)&STACK[0x2C0]);
  v158 = (int64x2_t)veorq_s8((int8x16_t)v157, vorrq_s8((int8x16_t)vshlq_n_s64(v156, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 0x3DuLL)));
  v160 = *(int8x16_t *)&STACK[0x340];
  v159 = *(int8x16_t *)&STACK[0x350];
  v161 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v157, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 8uLL)), v158), *(int8x16_t *)&STACK[0x350]);
  v162 = (int64x2_t)veorq_s8((int8x16_t)v161, vorrq_s8((int8x16_t)vshlq_n_s64(v158, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 0x3DuLL)));
  v163 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v161, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 8uLL)), v162);
  v164 = *(int8x16_t *)&STACK[0x2A0];
  v165 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v163, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v163, *(int8x16_t *)&STACK[0x200])), *(int64x2_t *)&STACK[0x200]), *(int8x16_t *)&STACK[0x2A0]);
  v166 = (int64x2_t)veorq_s8((int8x16_t)v165, vorrq_s8((int8x16_t)vshlq_n_s64(v162, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v162, 0x3DuLL)));
  v167 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v165, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 8uLL)), v166);
  v168 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v76, v167), (int64x2_t)vorrq_s8(v167, v75))), v77);
  v169 = (int64x2_t)veorq_s8((int8x16_t)v168, vorrq_s8((int8x16_t)vshlq_n_s64(v166, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 0x3DuLL)));
  v170 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v168, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v168, 8uLL)), v169), v79);
  v171 = (int64x2_t)veorq_s8(v144, *(int8x16_t *)&STACK[0x360]);
  v172 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v170, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v170, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v170, vorrq_s8((int8x16_t)vshlq_n_s64(v169, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 0x3DuLL))));
  v173 = (int64x2_t)veorq_s8(v143, *(int8x16_t *)&STACK[0x360]);
  v174 = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v172, v172), *(int8x16_t *)&STACK[0x240]), v172), v78), *(int8x16_t *)&STACK[0x280]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v281.val[0], 3uLL), v140)));
  *(int64x2_t *)&STACK[0x370] = v99;
  *(uint64x2_t *)&STACK[0x380] = v174;
  *(uint64x2_t *)&STACK[0x390] = v150;
  *(uint64x2_t *)&STACK[0x3A0] = v149;
  v175 = (int64x2_t)veorq_s8(v142, v151);
  v176 = v151;
  v177 = v106;
  v178 = (int64x2_t)veorq_s8(v142, v106);
  v179 = (int64x2_t)veorq_s8(v143, v106);
  v180 = (int64x2_t)veorq_s8(v144, v106);
  v181 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v171, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 8uLL)), v180);
  v182 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v173, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v173, 8uLL)), v179);
  v183 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v175, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v175, 8uLL)), v178);
  v281.val[1] = v107;
  v184 = v112;
  v185 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v112, v181), (int64x2_t)vorrq_s8(v181, v107))), v281.val[3]);
  v186 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v112, v182), (int64x2_t)vorrq_s8(v182, v107))), v281.val[3]);
  v187 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v112, v183), (int64x2_t)vorrq_s8(v183, v107))), v281.val[3]);
  v188 = (int64x2_t)veorq_s8((int8x16_t)v187, vorrq_s8((int8x16_t)vshlq_n_s64(v178, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v178, 0x3DuLL)));
  v189 = (int64x2_t)veorq_s8((int8x16_t)v186, vorrq_s8((int8x16_t)vshlq_n_s64(v179, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 0x3DuLL)));
  v190 = (int64x2_t)veorq_s8((int8x16_t)v185, vorrq_s8((int8x16_t)vshlq_n_s64(v180, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v180, 0x3DuLL)));
  v191 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v187, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v187, 8uLL)), v188), v281.val[2]);
  v192 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v186, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v186, 8uLL)), v189), v281.val[2]);
  v193 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v185, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v185, 8uLL)), v190), v281.val[2]);
  v194 = (int64x2_t)veorq_s8((int8x16_t)v193, vorrq_s8((int8x16_t)vshlq_n_s64(v190, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v190, 0x3DuLL)));
  v195 = (int64x2_t)veorq_s8((int8x16_t)v192, vorrq_s8((int8x16_t)vshlq_n_s64(v189, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v189, 0x3DuLL)));
  v196 = (int64x2_t)veorq_s8((int8x16_t)v191, vorrq_s8((int8x16_t)vshlq_n_s64(v188, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v188, 0x3DuLL)));
  v197 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v193, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v193, 8uLL)), v194), v159);
  v198 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v192, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 8uLL)), v195), v159);
  v199 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v191, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v191, 8uLL)), v196), v159);
  v200 = (int64x2_t)veorq_s8((int8x16_t)v199, vorrq_s8((int8x16_t)vshlq_n_s64(v196, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v196, 0x3DuLL)));
  v201 = (int64x2_t)veorq_s8((int8x16_t)v198, vorrq_s8((int8x16_t)vshlq_n_s64(v195, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v195, 0x3DuLL)));
  v202 = (int64x2_t)veorq_s8((int8x16_t)v197, vorrq_s8((int8x16_t)vshlq_n_s64(v194, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v194, 0x3DuLL)));
  v203 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v197, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v197, 8uLL)), v202);
  v204 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v198, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198, 8uLL)), v201);
  v205 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v199, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v199, 8uLL)), v200);
  v206 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v203, v160), (int64x2_t)vorrq_s8(v203, (int8x16_t)v127)), v127), v164);
  v207 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v204, v160), (int64x2_t)vorrq_s8(v204, (int8x16_t)v127)), v127), v164);
  v208 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v205, v160), (int64x2_t)vorrq_s8(v205, (int8x16_t)v127)), v127), v164);
  v209 = (int64x2_t)veorq_s8((int8x16_t)v208, vorrq_s8((int8x16_t)vshlq_n_s64(v200, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v200, 0x3DuLL)));
  v210 = (int64x2_t)veorq_s8((int8x16_t)v207, vorrq_s8((int8x16_t)vshlq_n_s64(v201, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201, 0x3DuLL)));
  v211 = (int64x2_t)veorq_s8((int8x16_t)v206, vorrq_s8((int8x16_t)vshlq_n_s64(v202, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v202, 0x3DuLL)));
  v212 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v206, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v206, 8uLL)), v211);
  v213 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v207, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207, 8uLL)), v210);
  v214 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v208, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v208, 8uLL)), v209);
  v215 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v76, v212), (int64x2_t)vorrq_s8(v212, v75))), v77);
  v216 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v76, v213), (int64x2_t)vorrq_s8(v213, v75))), v77);
  v217 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v76, v214), (int64x2_t)vorrq_s8(v214, v75))), v77);
  v218 = (int64x2_t)veorq_s8((int8x16_t)v217, vorrq_s8((int8x16_t)vshlq_n_s64(v209, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v209, 0x3DuLL)));
  v219 = (int64x2_t)veorq_s8((int8x16_t)v216, vorrq_s8((int8x16_t)vshlq_n_s64(v210, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v210, 0x3DuLL)));
  v220 = (int64x2_t)veorq_s8((int8x16_t)v215, vorrq_s8((int8x16_t)vshlq_n_s64(v211, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v211, 0x3DuLL)));
  v221 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v217, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v217, 8uLL)), v218), v79);
  v222 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v216, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v216, 8uLL)), v219), v79);
  v223 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v215, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v215, 8uLL)), v220), v79);
  v224 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v221, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v221, vorrq_s8((int8x16_t)vshlq_n_s64(v218, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v218, 0x3DuLL))));
  v225 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v222, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v222, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v222, vorrq_s8((int8x16_t)vshlq_n_s64(v219, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v219, 0x3DuLL))));
  v226 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v223, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v223, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v223, vorrq_s8((int8x16_t)vshlq_n_s64(v220, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v220, 0x3DuLL))));
  v227 = (int8x16_t)vaddq_s64(v274, a71);
  v228 = *(_OWORD *)&STACK[0x380];
  v229 = *(_OWORD *)&STACK[0x390];
  v230 = *(_OWORD *)&STACK[0x3A0];
  *(uint64x2_t *)&STACK[0x370] = vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v224, v224), v147), v224), v78), v148), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v276, 3uLL), v140)));
  *(_OWORD *)&STACK[0x380] = v228;
  *(_OWORD *)&STACK[0x390] = v229;
  *(_OWORD *)&STACK[0x3A0] = v230;
  v282.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v225, v225), v147), v225), v78), v148), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v275, 3uLL), v140)));
  v282.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v226, v226), v147), v226), v78), v148), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v272, 3uLL), v140)));
  v231 = (int64x2_t)veorq_s8(v227, v176);
  v232 = (int64x2_t)veorq_s8(v227, v106);
  v233 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v231, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231, 8uLL)), v232);
  v234 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v184, v233), (int64x2_t)vorrq_s8(v233, v281.val[1]))), v281.val[3]);
  v235 = (int64x2_t)veorq_s8((int8x16_t)v234, vorrq_s8((int8x16_t)vshlq_n_s64(v232, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v232, 0x3DuLL)));
  v236 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v234, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v234, 8uLL)), v235), v281.val[2]);
  v237 = (int64x2_t)veorq_s8((int8x16_t)v236, vorrq_s8((int8x16_t)vshlq_n_s64(v235, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v235, 0x3DuLL)));
  v238 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v236, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v236, 8uLL)), v237), v159);
  v239 = (int64x2_t)veorq_s8((int8x16_t)v238, vorrq_s8((int8x16_t)vshlq_n_s64(v237, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237, 0x3DuLL)));
  v240 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v238, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v238, 8uLL)), v239);
  v241 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v240, v160), (int64x2_t)vorrq_s8(v240, (int8x16_t)v127)), v127), v164);
  v242 = (int64x2_t)veorq_s8((int8x16_t)v241, vorrq_s8((int8x16_t)vshlq_n_s64(v239, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v239, 0x3DuLL)));
  v243 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v241, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v241, 8uLL)), v242);
  v244 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v76, v243), (int64x2_t)vorrq_s8(v243, v75))), v77);
  v245 = (int64x2_t)veorq_s8((int8x16_t)v244, vorrq_s8((int8x16_t)vshlq_n_s64(v242, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v242, 0x3DuLL)));
  v246 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v244, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v244, 8uLL)), v245), v79);
  v247 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v246, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v246, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v246, vorrq_s8((int8x16_t)vshlq_n_s64(v245, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v245, 0x3DuLL))));
  v248 = (int8x16_t)vaddq_s64(v277, a71);
  v282.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v247, v247), v147), v247), v78), v148), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v278, 3uLL), v140)));
  v249 = (int64x2_t)veorq_s8(v248, v176);
  v250 = (int64x2_t)veorq_s8(v248, v177);
  v251 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v249, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v249, 8uLL)), v250);
  v252 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v184, v251), (int64x2_t)vorrq_s8(v251, v281.val[1]))), v281.val[3]);
  v253 = (int64x2_t)veorq_s8((int8x16_t)v252, vorrq_s8((int8x16_t)vshlq_n_s64(v250, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v250, 0x3DuLL)));
  v254 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v252, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v252, 8uLL)), v253), v281.val[2]);
  v255 = (int64x2_t)veorq_s8((int8x16_t)v254, vorrq_s8((int8x16_t)vshlq_n_s64(v253, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v253, 0x3DuLL)));
  v256 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v254, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v254, 8uLL)), v255), v159);
  v257 = (int64x2_t)veorq_s8((int8x16_t)v256, vorrq_s8((int8x16_t)vshlq_n_s64(v255, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v255, 0x3DuLL)));
  v258 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v256, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v256, 8uLL)), v257);
  v259 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v258, v160), (int64x2_t)vorrq_s8(v258, (int8x16_t)v127)), v127), v164);
  v260 = (int64x2_t)veorq_s8((int8x16_t)v259, vorrq_s8((int8x16_t)vshlq_n_s64(v257, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v257, 0x3DuLL)));
  v261 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v259, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v259, 8uLL)), v260);
  v262 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v74, vaddq_s64((int64x2_t)vornq_s8(v76, v261), (int64x2_t)vorrq_s8(v261, v75))), v77);
  v263 = (int64x2_t)veorq_s8((int8x16_t)v262, vorrq_s8((int8x16_t)vshlq_n_s64(v260, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v260, 0x3DuLL)));
  v264 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v262, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v262, 8uLL)), v263), v79);
  v265 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v264, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v264, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v264, vorrq_s8((int8x16_t)vshlq_n_s64(v263, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v263, 0x3DuLL))));
  v282.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v265, v265), v147), v265), v78), v148), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v279, 3uLL), v140)));
  v265.i64[0] = vqtbl4q_s8(v282, (int8x16_t)xmmword_2F2890).u64[0];
  v281.val[0].i64[0] = (BYTE4(a25) + 81) & 0xF;
  v281.val[0].i64[1] = (BYTE4(a25) + 80) & 0xF;
  v281.val[1].i64[0] = (BYTE4(a25) + 79) & 0xF;
  v281.val[1].i64[1] = (BYTE4(a25) + 78) & 0xF;
  v281.val[2].i64[0] = ((_BYTE)v72 + (((v71 ^ 0xC6) + 35) ^ 0xA4)) & 0xF;
  v281.val[2].i64[1] = (BYTE4(a25) + 76) & 0xF;
  v281.val[3].i64[0] = (BYTE4(a25) + 75) & 0xF;
  v280.val[0] = *(int8x16_t *)&STACK[0x370];
  v280.val[1] = *(int8x16_t *)&STACK[0x380];
  v280.val[2] = *(int8x16_t *)&STACK[0x390];
  v280.val[3] = *(int8x16_t *)&STACK[0x3A0];
  v280.val[0].i64[0] = vqtbl4q_s8(v280, (int8x16_t)xmmword_2F2890).u64[0];
  v280.val[1].i64[0] = (BYTE4(a25) + 73) & 0xF;
  v280.val[1].i64[1] = (BYTE4(a25) + 72) & 0xF;
  v280.val[2].i64[0] = (BYTE4(a25) + 71) & 0xF;
  v280.val[2].i64[1] = (BYTE4(a25) + 70) & 0xF;
  v280.val[3].i64[0] = (BYTE4(a25) + 69) & 0xF;
  v281.val[3].i64[1] = (BYTE4(a25) + 74) & 0xF;
  v280.val[3].i64[1] = (BYTE4(a25) + 68) & 0xF;
  v227.i64[0] = vqtbl4q_s8(v281, (int8x16_t)xmmword_2F2890).u64[0];
  v148.i64[0] = (BYTE4(a25) + 67) & 0xF;
  v148.i64[1] = (BYTE4(a25) + 66) & 0xF;
  v265.i64[1] = v280.val[0].i64[0];
  v227.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)(&v148 - 3), (int8x16_t)xmmword_2F2890).u64[0];
  v280.val[1].i64[0] = 0xD0D0D0D0D0D0D0DLL;
  v280.val[1].i64[1] = 0xD0D0D0D0D0D0D0DLL;
  v280.val[0] = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a7 + v281.val[0].i64[0] - 15), *(int8x16_t *)(v80 + (HIDWORD(a25) - 1000057775) - 0x77C8991B1798DE2)), veorq_s8(*(int8x16_t *)(v82 + v281.val[0].i64[0] - 15), *(int8x16_t *)(v81 + v281.val[0].i64[0] - 15))));
  v266 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v280.val[0], v280.val[0], 8uLL), vmulq_s8(v227, v280.val[1])), (int8x16_t)v265));
  *(int8x16_t *)(v271 + HIDWORD(a29)) = vextq_s8(v266, v266, 8uLL);
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * ((2758 * ((_DWORD)a43 == -16)) ^ v71 ^ 0x16C6)) - 4))((HIDWORD(a25) - 1000057789), (HIDWORD(a25) - 1000057781), (HIDWORD(a25) - 1000057790), 3857633444, (HIDWORD(a25) - 1000057788), (HIDWORD(a25) - 1000057787), (HIDWORD(a25) - 1000057775), (HIDWORD(a25) - 1000057785), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           v268,
           v269,
           v270,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           v271,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           v272.i64[0],
           v272.i64[1],
           v273.i64[0],
           v273.i64[1],
           v274.i64[0],
           v274.i64[1],
           v275.i64[0],
           v275.i64[1]);
}

void sub_1EDA74()
{
  JUMPOUT(0x1ECC0CLL);
}

uint64_t sub_1EDA80()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_1EDA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,int a24,int a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;

  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v26 + 8 * (v25 ^ ((4 * (a22 != a25)) | (16 * (a22 != a25))))) - (((v25 - 1605) | 0x248u) ^ 0x3C0)))(1000057774, 0x9C6867EBBC2DE88CLL, 0x6C189C8B06C66331, 0x621E1A84C8980B58, 0x9CCE64025148CDDALL, 0x53A904EE74388D2DLL, v27, 0xC72F302887A42EE6);
}

uint64_t sub_1EDBEC()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 - 61) ^ 0x717) * ((v1 & 8) == 0)) ^ (v0 + 426))) - 12))();
}

uint64_t sub_1EDC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  int v60;
  int v61;
  int8x16_t v62;
  int64x2_t v63;
  int8x8_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int8x16_t v85;
  int8x16_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int64x2_t v94;
  int8x16_t v95;
  int8x16_t v96;
  int8x16_t v97;
  int8x16_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int8x16_t v123;
  int8x16_t v124;
  int8x16_t v125;
  int8x16_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int8x16_t v135;
  int8x16_t v136;
  int8x16_t v137;
  int8x16_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int64x2_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int8x16x4_t v163;
  int8x16x4_t v164;

  v67 = v59 - 38;
  STACK[0x370] = STACK[0x3D0] - 7;
  v68 = (HIDWORD(a25) - 1000057780);
  v69 = (HIDWORD(a25) - 1000057778);
  v70 = (HIDWORD(a25) - 1000057777);
  v71 = (HIDWORD(a25) - 1000057776);
  v72 = (HIDWORD(a25) - 1000057775);
  v73 = (v67 - 274598791) & 0x105E067A;
  v74 = (v72 - HIDWORD(a23));
  v75.i64[0] = STACK[0x3B0] + (HIDWORD(a25) - 1000057779 - HIDWORD(a23));
  v75.i64[1] = STACK[0x3B0] + (v68 - HIDWORD(a23));
  v76.i64[0] = STACK[0x3B0] + (v70 - HIDWORD(a23));
  v76.i64[1] = STACK[0x3B0] + (v69 - HIDWORD(a23));
  v77.i64[0] = STACK[0x3B0] + v74;
  v77.i64[1] = STACK[0x3B0] + (v71 - HIDWORD(a23));
  v78.i64[0] = STACK[0x3B0] + v60 - HIDWORD(a23) + (v73 ^ 0xE5EED531);
  v78.i64[1] = STACK[0x3B0] + (HIDWORD(a25) - 1000057782 - HIDWORD(a23));
  v79 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v80 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v81 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v82 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL)), *(int8x16_t *)&STACK[0x320]);
  v83 = (int8x16_t)vaddq_s64(vsubq_s64(v82, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v82, v82), *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x300])), v66);
  v84 = (int8x16_t)vaddq_s64(vsubq_s64(v81, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v81, v81), *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x300])), v66);
  v85 = (int8x16_t)vaddq_s64(vsubq_s64(v80, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v80, v80), *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x300])), v66);
  v86 = (int8x16_t)vaddq_s64(vsubq_s64(v79, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(vaddq_s64(v79, v79), *(int64x2_t *)&STACK[0x310]), *(int8x16_t *)&STACK[0x300])), v66);
  v87 = (int64x2_t)veorq_s8(v86, *(int8x16_t *)&STACK[0x360]);
  v88 = (int64x2_t)veorq_s8(v85, *(int8x16_t *)&STACK[0x360]);
  v89 = (int64x2_t)veorq_s8(v84, *(int8x16_t *)&STACK[0x360]);
  v90 = (int64x2_t)veorq_s8(v83, *(int8x16_t *)&STACK[0x360]);
  v91 = (int64x2_t)veorq_s8(v83, *(int8x16_t *)&STACK[0x2F0]);
  v92 = (int64x2_t)veorq_s8(v84, *(int8x16_t *)&STACK[0x2F0]);
  v93 = (int64x2_t)veorq_s8(v85, *(int8x16_t *)&STACK[0x2F0]);
  v94 = (int64x2_t)veorq_s8(v86, *(int8x16_t *)&STACK[0x2F0]);
  v95 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v94);
  v96 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v88, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 8uLL)), v93);
  v97 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v92);
  v98 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v90, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 8uLL)), v91);
  v99 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v65, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2D0], v95), (int64x2_t)vorrq_s8(v95, *(int8x16_t *)&STACK[0x2E0]))), *(int8x16_t *)&STACK[0x2B0]);
  v100 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v65, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2D0], v96), (int64x2_t)vorrq_s8(v96, *(int8x16_t *)&STACK[0x2E0]))), *(int8x16_t *)&STACK[0x2B0]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v65, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2D0], v97), (int64x2_t)vorrq_s8(v97, *(int8x16_t *)&STACK[0x2E0]))), *(int8x16_t *)&STACK[0x2B0]);
  v102 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v65, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x2D0], v98), (int64x2_t)vorrq_s8(v98, *(int8x16_t *)&STACK[0x2E0]))), *(int8x16_t *)&STACK[0x2B0]);
  v103 = (int64x2_t)veorq_s8((int8x16_t)v102, vorrq_s8((int8x16_t)vshlq_n_s64(v91, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 0x3DuLL)));
  v104 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v92, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v92, 0x3DuLL)));
  v105 = (int64x2_t)veorq_s8((int8x16_t)v100, vorrq_s8((int8x16_t)vshlq_n_s64(v93, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v93, 0x3DuLL)));
  v106 = (int64x2_t)veorq_s8((int8x16_t)v99, vorrq_s8((int8x16_t)vshlq_n_s64(v94, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 0x3DuLL)));
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), v103), *(int8x16_t *)&STACK[0x2C0]);
  v108 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v104), *(int8x16_t *)&STACK[0x2C0]);
  v109 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v105), *(int8x16_t *)&STACK[0x2C0]);
  v110 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v106), *(int8x16_t *)&STACK[0x2C0]);
  v111 = (int64x2_t)veorq_s8((int8x16_t)v110, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL)));
  v112 = (int64x2_t)veorq_s8((int8x16_t)v109, vorrq_s8((int8x16_t)vshlq_n_s64(v105, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 0x3DuLL)));
  v113 = (int64x2_t)veorq_s8((int8x16_t)v108, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v114 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v103, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 0x3DuLL)));
  v115 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), v111), *(int8x16_t *)&STACK[0x350]);
  v116 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v109, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 8uLL)), v112), *(int8x16_t *)&STACK[0x350]);
  v117 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v108, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 8uLL)), v113), *(int8x16_t *)&STACK[0x350]);
  v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v114), *(int8x16_t *)&STACK[0x350]);
  v119 = (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v114, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 0x3DuLL)));
  v120 = (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v113, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 0x3DuLL)));
  v121 = (int64x2_t)veorq_s8((int8x16_t)v116, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v122 = (int64x2_t)veorq_s8((int8x16_t)v115, vorrq_s8((int8x16_t)vshlq_n_s64(v111, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 0x3DuLL)));
  v123 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v122);
  v124 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v116, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 8uLL)), v121);
  v125 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v120);
  v126 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v119);
  v127 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v123, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v123, *(int8x16_t *)&STACK[0x200])), *(int64x2_t *)&STACK[0x200]), *(int8x16_t *)&STACK[0x2A0]);
  v128 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v124, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v124, *(int8x16_t *)&STACK[0x200])), *(int64x2_t *)&STACK[0x200]), *(int8x16_t *)&STACK[0x2A0]);
  v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v125, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v125, *(int8x16_t *)&STACK[0x200])), *(int64x2_t *)&STACK[0x200]), *(int8x16_t *)&STACK[0x2A0]);
  v130 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v126, *(int8x16_t *)&STACK[0x340]), (int64x2_t)vorrq_s8(v126, *(int8x16_t *)&STACK[0x200])), *(int64x2_t *)&STACK[0x200]), *(int8x16_t *)&STACK[0x2A0]);
  v131 = (int64x2_t)veorq_s8((int8x16_t)v130, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL)));
  v132 = (int64x2_t)veorq_s8((int8x16_t)v129, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)));
  v133 = (int64x2_t)veorq_s8((int8x16_t)v128, vorrq_s8((int8x16_t)vshlq_n_s64(v121, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 0x3DuLL)));
  v134 = (int64x2_t)veorq_s8((int8x16_t)v127, vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)));
  v135 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v127, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 8uLL)), v134);
  v136 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), v133);
  v137 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), v132);
  v138 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL)), v131);
  v139 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v65, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x260], v135), (int64x2_t)vorrq_s8(v135, *(int8x16_t *)&STACK[0x270]))), *(int8x16_t *)&STACK[0x250]);
  v140 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v65, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x260], v136), (int64x2_t)vorrq_s8(v136, *(int8x16_t *)&STACK[0x270]))), *(int8x16_t *)&STACK[0x250]);
  v141 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v65, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x260], v137), (int64x2_t)vorrq_s8(v137, *(int8x16_t *)&STACK[0x270]))), *(int8x16_t *)&STACK[0x250]);
  v142 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v65, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x260], v138), (int64x2_t)vorrq_s8(v138, *(int8x16_t *)&STACK[0x270]))), *(int8x16_t *)&STACK[0x250]);
  v143 = (int64x2_t)veorq_s8((int8x16_t)v142, vorrq_s8((int8x16_t)vshlq_n_s64(v131, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 0x3DuLL)));
  v144 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v132, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 0x3DuLL)));
  v145 = (int64x2_t)veorq_s8((int8x16_t)v140, vorrq_s8((int8x16_t)vshlq_n_s64(v133, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 0x3DuLL)));
  v146 = (int64x2_t)veorq_s8((int8x16_t)v139, vorrq_s8((int8x16_t)vshlq_n_s64(v134, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 0x3DuLL)));
  v147 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v142, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 8uLL)), v143), *(int8x16_t *)&STACK[0x290]);
  v148 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v144), *(int8x16_t *)&STACK[0x290]);
  v149 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v140, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 8uLL)), v145), *(int8x16_t *)&STACK[0x290]);
  v150 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v139, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 8uLL)), v146), *(int8x16_t *)&STACK[0x290]);
  v151 = (int64x2_t)veorq_s8((int8x16_t)v150, vorrq_s8((int8x16_t)vshlq_n_s64(v146, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 0x3DuLL)));
  v152 = (int64x2_t)veorq_s8((int8x16_t)v149, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v153 = (int64x2_t)veorq_s8((int8x16_t)v148, vorrq_s8((int8x16_t)vshlq_n_s64(v144, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 0x3DuLL)));
  v154 = (int64x2_t)veorq_s8((int8x16_t)v147, vorrq_s8((int8x16_t)vshlq_n_s64(v143, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 0x3DuLL)));
  v155 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL));
  v156 = (int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL));
  v157 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v147, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 8uLL)), v154);
  v158 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v148, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 8uLL)), v153);
  v159 = vaddq_s64(v156, v152);
  v163.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v157, v157), *(int8x16_t *)&STACK[0x240]), v157), v63), *(int8x16_t *)&STACK[0x280]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v75, 3uLL), a49)));
  v163.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v158, v158), *(int8x16_t *)&STACK[0x240]), v158), v63), *(int8x16_t *)&STACK[0x280]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v76, 3uLL), a49)));
  v163.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v159, v159), *(int8x16_t *)&STACK[0x240]), v159), v63), *(int8x16_t *)&STACK[0x280]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v77, 3uLL), a49)));
  v164.val[0].i64[0] = (BYTE4(a25) + 81 - BYTE4(a23)) & 0xF;
  v164.val[0].i64[1] = (BYTE4(a25) + 80 - BYTE4(a23)) & 0xF;
  v164.val[1].i64[0] = (BYTE4(a25) + 79 - BYTE4(a23)) & 0xF;
  v164.val[1].i64[1] = (BYTE4(a25) + 78 - BYTE4(a23)) & 0xF;
  v160 = vaddq_s64(v155, v151);
  v163.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v160, v160), *(int8x16_t *)&STACK[0x240]), v160), v63), *(int8x16_t *)&STACK[0x280]), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), a49)));
  v164.val[2].i64[0] = (BYTE4(a25) + 77 - BYTE4(a23)) & 0xF;
  v164.val[2].i64[1] = (BYTE4(a25) + 76 - BYTE4(a23)) & 0xF;
  v164.val[3].i64[0] = ((_BYTE)v60 - BYTE4(a23) + (((_BYTE)v67 + 121) & 0x7A ^ 0x31)) & 0xF;
  v164.val[3].i64[1] = (BYTE4(a25) + 74 - BYTE4(a23)) & 0xF;
  *(int8x8_t *)(STACK[0x370] + v74) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a7 + (v74 & 0xF) - 7), *(int8x8_t *)(v77.i64[0] - 0x77C8991B1798DDALL)), veor_s8(*(int8x8_t *)(STACK[0x3E0] + (v74 & 0xF) - 7), *(int8x8_t *)(STACK[0x3C0] + (v74 & 0xF) - 7)))), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v164, v62), v64)), (int8x8_t)*(_OWORD *)&vqtbl4q_s8(v163, v62)));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x338] + 8 * ((234 * (-HIDWORD(a23) != 8 - ((v67 ^ 0xFFFFF89E) & v61))) ^ v67)) - 12))(v68, 4020368505, v69, v70, v71, v72, v73, v74, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49.i64[0],
           a49.i64[1],
           a7,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

void sub_1EE3D0()
{
  JUMPOUT(0x1EDCB8);
}

uint64_t sub_1EE3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a70;

  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(STACK[0x338] + 8 * (a7 ^ (217 * (a22 == a70)))) - ((81 * (a7 ^ 0x256u)) ^ 0x3C8)))(1000057774, 0x9C6867EBBC2DE88CLL, 0x6C189C8B06C66331, 0x621E1A84C8980B58, 0x9CCE64025148CDDALL, 0x53A904EE74388D2DLL, a52, 0xC72F302887A42EE6);
}

uint64_t sub_1EE544@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v22 = (v8 - 437332111);
  v23 = __ROR8__(STACK[0x3B0] + v22, 8);
  v24 = (v23 & 0xF8FFFFFFFFFFFFFFLL)
      - ((v19 + 2 * (v23 & 0xF8FFFFFFFFFFFFFFLL)) & 0x11240B7E6E9EBB58)
      - 0x20FF2D902469F364;
  v25 = __ROR8__(v24 ^ 0xF1687F01EAAD7CDELL, 8);
  v26 = v24 ^ a3;
  v27 = (v13 - ((~(v25 + v26) | 0xB40F9514C8E50D6CLL) + ((v25 + v26) | 0x4BF06AEB371AF293))) ^ v14;
  v28 = v27 ^ __ROR8__(v26, 61);
  v29 = (__ROR8__(v27, 8) + v28) ^ v18;
  v30 = v29 ^ __ROR8__(v28, 61);
  v31 = (__ROR8__(v29, 8) + v30) ^ 0xAE154F53AADE4F19;
  v32 = __ROR8__(v31, 8);
  v33 = v31 ^ __ROR8__(v30, 61);
  v34 = (a4 - ((v32 + v33) | a4) + ((v32 + v33) | v20)) ^ v16;
  v35 = v34 ^ __ROR8__(v33, 61);
  v36 = __ROR8__(v34, 8);
  v37 = (v13 - ((a8 | ~(v36 + v35)) + ((v36 + v35) | a2))) ^ a5;
  v38 = v37 ^ __ROR8__(v35, 61);
  v39 = (__ROR8__(v37, 8) + v38) ^ v15;
  v40 = v39 ^ __ROR8__(v38, 61);
  v41 = __ROR8__(v39, 8);
  *(_BYTE *)(STACK[0x3D0] + v22) = *(_BYTE *)(a6 + (v22 & 0xF)) ^ *(_BYTE *)(STACK[0x3B0] + v22 + v11) ^ *(_BYTE *)(STACK[0x3E0] + (v22 & 0xF)) ^ *(_BYTE *)(STACK[0x3C0] + (v22 & 0xF)) ^ ((v22 & 0xF) * v12) ^ ((((a7 & (2 * (v41 + v40))) - (v41 + v40) + a1) ^ v17) >> (8 * ((LOBYTE(STACK[0x3B0]) + v22) & 7)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v8 == 437332111) * v21) ^ (v9 - 398))) - 4))();
}

uint64_t sub_1EE6F8(uint64_t a1)
{
  return ((uint64_t (*)(uint64_t, uint64_t))STACK[0x968])(a1, 437329431);
}

void sub_1EE73C()
{
  JUMPOUT(0x1EC84CLL);
}

uint64_t sub_1EE764@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;

  v3 = STACK[0x798];
  v4 = STACK[0x7C0];
  v5 = STACK[0xAE8];
  v6 = 142545853 * ((((v2 - 224) | 0x37BF2F5A) - (v2 - 224) + ((v2 - 224) & 0xC840D0A0)) ^ 0x1D408035);
  *(_DWORD *)(v2 - 192) = v6 + v1 + 1106;
  *(_QWORD *)(v2 - 216) = v3;
  *(_DWORD *)(v2 - 208) = v6 + 403808020;
  *(_DWORD *)(v2 - 204) = 745047489 - v6;
  *(_QWORD *)(v2 - 200) = v5;
  *(_QWORD *)(v2 - 184) = v4;
  v7 = a1(v2 - 224);
  v8 = STACK[0x338];
  v9 = *(_DWORD *)(v2 - 224);
  LODWORD(STACK[0x974]) = v9;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * ((3701 * (v9 == 349819777)) ^ (v1 + 530)))
                                          - ((v1 - 763) ^ 0xD5)))(v7);
}

uint64_t sub_1EE838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;

  v6 = 5 * (v5 ^ 0x17Fu);
  STACK[0x960] = *(_QWORD *)(v4 + 8 * v5) + v6 - 2158;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (int)(((8 * ((((_DWORD)v6 - 1253) ^ 0x772646AA) != 1998996811)) | (16 * ((((_DWORD)v6 - 1253) ^ 0x772646AA) != 1998996811))) ^ v6)) - 12))(a1, a2, a3, a4, 0x8009D05B1B77C45CLL, 0x448B4FA1348C1A4, 2295970516);
}

uint64_t sub_1EE9C8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2010 * (((v1 ^ 0x4D ^ (v0 == 2134794031)) & 1) == 0)) ^ v1))
                            - 12))();
}

uint64_t sub_1EEA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338]
                                        + 8
                                        * (((v1 - a1 - (unint64_t)(v2 + 75) + 0xCBAA6BF1BCD5851 > 0xF)
                                          * (v2 - 882)) ^ v2))
                            - 12))();
}

#error "1F0718: call analysis failed (funcsize=1733)"

uint64_t sub_1F071C@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W6>, int a4@<W7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;

  v8 = (v6 + a3);
  v9 = (char *)(v5 + v8);
  v10 = a5 + v8;
  v11 = *v9;
  v12 = ((__ROR8__(v9, 8) & 0xF8FFFFFFFFFFFFFFLL) - 0x43E6EC4BB22236C1) & 0xF9FFFFFFFFFFFFFFLL;
  v13 = v12 ^ 0x62CF1A4CD3B77EC2;
  v12 ^= 0x820787EEBD59373FLL;
  v14 = (__ROR8__(v13, 8) + v12) ^ 0xA2AF19B9D5B5AD51;
  v15 = v14 ^ __ROR8__(v12, 61);
  v16 = (__ROR8__(v14, 8) + v15) ^ 0xF03B3C4B1950D120;
  v17 = v16 ^ __ROR8__(v15, 61);
  v18 = __ROR8__(v16, 8);
  v19 = __ROR8__((-2 - ((~(v18 + v17) | 0xE496A8BED1704B7BLL) + ((v18 + v17) | 0x1B6957412E8FB484))) ^ 0xFB6FCADA84F30CA5, 8);
  v20 = (-2 - ((~(v18 + v17) | 0xE496A8BED1704B7BLL) + ((v18 + v17) | 0x1B6957412E8FB484))) ^ 0xFB6FCADA84F30CA5 ^ __ROR8__(v17, 61);
  v21 = (v19 + v20) ^ 0x65C91C63E38735FLL;
  v22 = v21 ^ __ROR8__(v20, 61);
  v23 = __ROR8__(v21, 8) + v22;
  v24 = __ROR8__(v10, 8);
  v25 = ((2 * (v24 & 0xF8FFFFFFFFFFFFFFLL) + 0x1B4353EC6ACF74AALL) & 0x287D67A26EEEAC56)
      - (v24 & 0xF8FFFFFFFFFFFFFFLL)
      - 0x1E05DC76CDF1081;
  v26 = (-2 - ((~v23 | 0x31628460DE23DFBBLL) + (v23 | 0xCE9D7B9F21DC2044))) ^ 0xB5D023180D2AD0EBLL;
  v27 = (__ROR8__(v25 ^ 0x74D51B46AC336267, 8) + (v25 ^ 0x19D854F7070EB0C8)) ^ 0x7E9A63B502AFB33ELL;
  v28 = v26 ^ __ROR8__(v22, 61);
  *((_QWORD *)&v29 + 1) = v25 ^ 0x19D854F7070EB0C8;
  *(_QWORD *)&v29 = v25;
  v30 = v27 ^ (v29 >> 61);
  v31 = (__ROR8__(v27, 8) + v30) ^ 0xD5F38125EDAABCDELL;
  v32 = v31 ^ __ROR8__(v30, 61);
  *(_QWORD *)&v29 = __ROR8__(v31, 8);
  v33 = (__ROR8__(v26, 8) + v28) ^ 0x8FDC6648463A364;
  v34 = (((2 * ((v29 + v32) ^ 0x66CDAC129CCD493FLL)) & 0x89534CA87560EE00)
       - ((v29 + v32) ^ 0x66CDAC129CCD493FLL)
       + 0x3B5659ABC54F88FFLL) ^ 0xF1135D544F74B337;
  v35 = v34 ^ __ROR8__(v32, 61);
  *(_QWORD *)&v29 = __ROR8__(v34, 8);
  v36 = __ROR8__(v33, 8) + (v33 ^ __ROR8__(v28, 61));
  v37 = (v29 + v35 - ((2 * (v29 + v35)) & 0xBD3764BF588985ALL) + 0x5E9BB25FAC44C2DLL) ^ 0xCC2741C39405CD18;
  v38 = v37 ^ __ROR8__(v35, 61);
  *(_QWORD *)&v29 = __ROR8__(v37, 8);
  v39 = (a1 - ((v29 + v38) | a1) + ((v29 + v38) | 0x7FF62FA4E4883BA3)) ^ 0x63FD7E346F1EC142;
  v40 = v39 ^ __ROR8__(v38, 61);
  v41 = ((v36 - ((2 * v36) & 0x66B2265E57806A9ELL) + 0x3359132F2BC0354FLL) ^ 0x9D9C0F692EA2E154) >> (8 * (v9 & 7u));
  v42 = (__ROR8__(v39, 8) + v40) ^ 0x8B074293732342D9;
  *(_BYTE *)(v10 - 0xCBAA6BF1BCD5485) = (((__ROR8__(v42, 8) + (v42 ^ __ROR8__(v40, 61))) ^ a2) >> (8 * (v10 & 7u))) ^ v41 ^ v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((3601 * (v6 - 1 == a4)) ^ (v7 + 362))) - 4))();
}

uint64_t sub_1F0B08()
{
  return ((uint64_t (*)(void))STACK[0x960])();
}

uint64_t sub_1F0B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * ((((((v8 ^ 0x976) - 1225850043) & 0x4910FB4B) - 2372) * (STACK[0x7C0] == 0)) ^ v8 ^ 0x976)) - 12))(a1, a2, a3, a4, a5, a6, a7, 349819777);
}

uint64_t sub_1F0B1C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((((v2 - 1225850043) & 0x4910FB4B) - 2372) * (v1 == 0)) ^ v2))
                            - 12))();
}

uint64_t sub_1F0B58()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((47 * (v2 == 0)) ^ v1))
                            - (((v1 - 770) | 0x329) ^ (v1 + 206424650) & 0xF3B237FD ^ 0x6EFLL)))();
}

uint64_t sub_1F0BC0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unint64_t v3;

  v2 = 718 * (a1 ^ 0x379);
  ((void (*)(uint64_t))STACK[0x218])(v1);
  v3 = STACK[0x338];
  STACK[0x730] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((STACK[0x560] == 0) * ((v2 - 464) ^ 0x3FC)) ^ v2))
                            - (v2 ^ 0x650u)
                            + 964))();
}

uint64_t sub_1F0C18()
{
  uint64_t v0;

  v0 = ((uint64_t (*)(void))STACK[0x218])();
  return sub_1F0C30(v0);
}

uint64_t sub_1F0C30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  STACK[0x700] = ((324 * (v2 ^ 0x242u) - 4127) ^ (v2 + 2572)) + v1;
  return (*(uint64_t (**)(void))(v0 + 8 * ((3627 * (v3 == 349819777)) ^ v2)))();
}

uint64_t sub_1F0C7C()
{
  unint64_t v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  _BOOL4 v10;

  v2 = STACK[0x4D0];
  v3 = STACK[0x450];
  v4 = STACK[0x878];
  v5 = (char *)&STACK[0xB40] + v0 + ((v1 - 1078) | 8u) - 0x560A55F423D96510;
  STACK[0xAE8] = (unint64_t)v5;
  STACK[0x700] = v0;
  STACK[0x710] = v3;
  STACK[0x620] = v4;
  v6 = sub_2B070C(v5, 0, 0x20uLL);
  v7 = STACK[0x338];
  STACK[0x7C0] = 0;
  v10 = v2 != -72 && v3 != 0x77C8991B1798DD3 && v4 != 0xCBAA6BF1BCD5485;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(v7 + 8 * ((v10 * ((v1 - 2572) ^ 0x28C)) ^ v1)) - 12))(v6);
}

uint64_t sub_1F0D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  unint64_t v28;

  v27 = a26(64, 3984933173);
  v28 = STACK[0x338];
  STACK[0x798] = v27;
  return (*(uint64_t (**)(void))(v28 + 8 * (int)(((v27 == 0) * (((v26 - 1171) | 0x40) + (v26 ^ 0xFFFFF47F))) ^ v26)))();
}

uint64_t sub_1F0DC4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  unint64_t v3;

  v2 = a1 - 370;
  ((void (*)(uint64_t))STACK[0x218])(v1);
  v3 = STACK[0x338];
  STACK[0x7C0] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((156 * ((((v2 - 2024029551) ^ (STACK[0x798] == 0)) & 1) == 0)) ^ v2))
                            - 4))();
}

void sub_1F0DE8()
{
  unint64_t v0;

  LODWORD(STACK[0xAF4]) = 349777754;
  STACK[0x700] = v0;
  JUMPOUT(0x1F0E0CLL);
}

uint64_t sub_1F0E30()
{
  int v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  unint64_t v3;

  v2 = v1(64, 1893619840);
  v3 = STACK[0x338];
  STACK[0x7C0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((v2 != 0) * (((v0 ^ 0x2A2) + 2060775426) & 0x852B0556 ^ 0x61B)) ^ v0 ^ 0x2A2))
                            - (v0 ^ 0x154u)
                            + 2367))();
}

void sub_1F0EAC()
{
  *(int64x2_t *)&STACK[0x310] = vdupq_n_s64(0x4DD9961488D5DE0uLL);
  *(int64x2_t *)&STACK[0x320] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x300] = vdupq_n_s64(0x11240B7E6E9EBB58uLL);
  *(int64x2_t *)&STACK[0x360] = vdupq_n_s64(0xF1687F01EAAD7CDELL);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0x4BF06AEB371AF293uLL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x621E1A84C8980B58uLL);
  *(int64x2_t *)&STACK[0x2B0] = vdupq_n_s64(0x6DDF42DD98D7E347uLL);
  *(int64x2_t *)&STACK[0x2C0] = vdupq_n_s64(0x588064810E65634FuLL);
  *(int64x2_t *)&STACK[0x2D0] = vdupq_n_s64(0xB40F9514C8E50D6CLL);
  *(int64x2_t *)&STACK[0x340] = vdupq_n_s64(0x63319BFDAEB73225uLL);
  *(int64x2_t *)&STACK[0x350] = vdupq_n_s64(0xAE154F53AADE4F19);
  *(int64x2_t *)&STACK[0x200] = vdupq_n_s64(0x9CCE64025148CDDALL);
  *(int64x2_t *)&STACK[0x290] = vdupq_n_s64(0xA36E72ED7D18EDCCLL);
  *(int64x2_t *)&STACK[0x2A0] = vdupq_n_s64(0x2E484DFFEFD0E85uLL);
  *(int64x2_t *)&STACK[0x260] = vdupq_n_s64(0x93E76374F9399CCELL);
  *(int64x2_t *)&STACK[0x270] = vdupq_n_s64(0x6C189C8B06C66331uLL);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0xC72F302887A42EE6);
  *(int64x2_t *)&STACK[0x250] = vdupq_n_s64(0x53A904EE74388D2DuLL);
  *(int64x2_t *)&STACK[0x280] = vdupq_n_s64(0xF11460BBE2C778C1);
  JUMPOUT(0x1EC858);
}

uint64_t sub_1F0F14@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1 & 0x78A437EF;
  v3 = ((uint64_t (*)(void))STACK[0x218])();
  v4 = STACK[0x338];
  LODWORD(STACK[0xAF4]) = v1;
  STACK[0x700] += (v2 - 829) ^ 0xFFFFFFFFFFFFFF6FLL;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((v2 - 395) ^ (2805 * (v1 == 349819777)))))(v3);
}

uint64_t sub_1F0F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  LODWORD(STACK[0xAF4]) = v10;
  STACK[0x700] += (v9 - 2236) ^ 0xFFFFFFFFFFFFFF6FLL;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 - 1802) ^ (2805 * (v10 == a8)))))();
}

#error "1F13A0: call analysis failed (funcsize=128)"

uint64_t sub_1F13A4(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  int v4;
  int v5;

  v5 = v3 + v4 - 2088430782;
  LODWORD(STACK[0x2B0]) = v5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * (int)((v2 + 1828) ^ (354 * (v5 != 0))))
                                          - (v2 ^ 0x3C4)))(4219804629);
}

uint64_t sub_1F1404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((((unint64_t)(v2 - v3 - v4 + 0x2C0BEFEFEFA9EC6BLL) > 0xF)
                                          * ((v5 - 1093873427) & 0x413327EE ^ 0x217)) ^ v5))
                            - 8))();
}

uint64_t sub_1F145C@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int8x16_t a61,int8x16_t a62)
{
  uint64_t v62;
  int v63;
  uint64_t v64;
  int8x16_t v65;
  int8x16_t v66;
  int64x2_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16_t v72;
  int64x2_t v73;
  int8x16_t v74;
  int8x16_t v75;
  uint64_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int64x2_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int8x16_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int8x16_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int64x2_t v94;
  int8x16_t v95;
  int8x16_t v96;
  int8x16_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int8x16_t v102;
  int8x16_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int64x2_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int8x16_t v122;
  int8x16_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int8x16_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int64x2_t v131;
  int64x2_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int8x16_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int8x16_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int64x2_t v151;
  int8x16_t v152;
  int64x2_t v153;
  int64x2_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int8x16_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int64x2_t v170;
  int8x16_t v171;
  int8x16_t v172;
  int8x16_t v173;
  int8x16_t v174;
  int64x2_t v175;
  int64x2_t v176;
  int8x16_t v177;
  int8x16_t v178;
  int64x2_t v179;
  int64x2_t v180;
  int64x2_t v181;
  int64x2_t v182;
  int64x2_t v183;
  int64x2_t v184;
  int64x2_t v185;
  int64x2_t v186;
  int64x2_t v187;
  int64x2_t v188;
  int8x16_t v189;
  int8x16_t v190;
  int64x2_t v191;
  int64x2_t v192;
  int64x2_t v193;
  int64x2_t v194;
  int64x2_t v195;
  int64x2_t v196;
  int64x2_t v197;
  int64x2_t v198;
  int8x16_t v199;
  int64x2_t v200;
  int64x2_t v201;
  int64x2_t v202;
  int64x2_t v203;
  int64x2_t v204;
  int64x2_t v205;
  int64x2_t v206;
  int64x2_t v207;
  int64x2_t v208;
  int8x16_t v209;
  int64x2_t v210;
  int64x2_t v211;
  int64x2_t v212;
  int64x2_t v213;
  int8x16_t v214;
  int64x2_t v215;
  int64x2_t v216;
  int8x16_t v217;
  int64x2_t v218;
  int64x2_t v219;
  int64x2_t v220;
  int64x2_t v221;
  int64x2_t v222;
  int64x2_t v223;
  int64x2_t v224;
  int64x2_t v225;
  int64x2_t v226;
  int8x16_t v227;
  int64x2_t v228;
  int64x2_t v229;
  int64x2_t v230;
  int64x2_t v231;
  int8x16_t v232;
  int8x16_t v233;
  int8x16_t v234;
  int8x16_t v235;
  int8x16x4_t v237;

  v76 = (a2 + a1);
  v77.i64[0] = v62 + (v76 - 2);
  v77.i64[1] = v62 + (v76 - 3);
  v78.i64[0] = v62 + (v76 - 4);
  v78.i64[1] = v62 + (v76 - 5);
  v79.i64[0] = v62 + (v76 - 6);
  v79.i64[1] = v62 + (v76 - 7);
  v80.i64[0] = v62 + v76;
  v80.i64[1] = v62 + (v76 - 1);
  v81.i64[0] = v62 + (v76 - 10);
  v81.i64[1] = v62 + (v76 - 11);
  v82.i64[0] = v62 + (v76 - 12);
  v82.i64[1] = v62 + (v76 - 13);
  v83.i64[0] = v62 + (v76 - 14);
  v83.i64[1] = v62 + (v76 - 15);
  *(int64x2_t *)&STACK[0x310] = v83;
  *(int64x2_t *)&STACK[0x320] = v81;
  *(int8x16_t *)&STACK[0x2F0] = vorrq_s8((int8x16_t)vshlq_n_s64(v83, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 8uLL));
  *(int64x2_t *)&STACK[0x300] = v82;
  *(int8x16_t *)&STACK[0x2D0] = vorrq_s8((int8x16_t)vshlq_n_s64(v81, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v81, 8uLL));
  *(int8x16_t *)&STACK[0x2E0] = vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL));
  v84 = *(int8x16_t *)&STACK[0x290];
  v85 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), *(int8x16_t *)&STACK[0x290]);
  v86 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), *(int8x16_t *)&STACK[0x290]);
  v87 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), *(int8x16_t *)&STACK[0x290]);
  v88 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), *(int8x16_t *)&STACK[0x290]);
  v90 = *(int64x2_t *)&STACK[0x3D0];
  v89 = *(int64x2_t *)&STACK[0x3E0];
  v91 = (int8x16_t)vaddq_s64(v87, *(int64x2_t *)&STACK[0x3E0]);
  v92 = (int8x16_t)vaddq_s64(v86, *(int64x2_t *)&STACK[0x3E0]);
  v93 = *(int8x16_t *)&STACK[0x3B0];
  v94 = *(int64x2_t *)&STACK[0x3C0];
  *(int8x16_t *)&STACK[0x2C0] = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], v88), *(int8x16_t *)&STACK[0x3C0]), vandq_s8((int8x16_t)vaddq_s64(v88, *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3B0]));
  v95 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v90, v87), (int8x16_t)v94), vandq_s8(v91, v93));
  v96 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v90, v86), (int8x16_t)v94), vandq_s8(v92, v93));
  v97 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(v90, v85), (int8x16_t)v94), vandq_s8((int8x16_t)vaddq_s64(v85, v89), v93));
  v98 = (int64x2_t)veorq_s8(v97, *(int8x16_t *)&STACK[0x250]);
  v99 = (int64x2_t)veorq_s8(v96, *(int8x16_t *)&STACK[0x250]);
  v100 = (int64x2_t)veorq_s8(v96, *(int8x16_t *)&STACK[0x280]);
  v101 = (int64x2_t)veorq_s8(v97, *(int8x16_t *)&STACK[0x280]);
  v102 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v101);
  v103 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v99, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 8uLL)), v100);
  v104 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x270], v102), (int64x2_t)vorrq_s8(v102, *(int8x16_t *)&STACK[0x370]))), v70);
  v105 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x270], v103), (int64x2_t)vorrq_s8(v103, *(int8x16_t *)&STACK[0x370]))), v70);
  v106 = (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL)));
  v107 = (int64x2_t)veorq_s8((int8x16_t)v104, vorrq_s8((int8x16_t)vshlq_n_s64(v101, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 0x3DuLL)));
  v108 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v104, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 8uLL)), v107);
  v109 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v106);
  v110 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v109, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v109, v109), v72)), *(int64x2_t *)&STACK[0x200]), v65);
  v111 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v108, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v108, v108), v72)), *(int64x2_t *)&STACK[0x200]), v65);
  v112 = (int64x2_t)veorq_s8((int8x16_t)v111, vorrq_s8((int8x16_t)vshlq_n_s64(v107, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 0x3DuLL)));
  v113 = (int64x2_t)veorq_s8((int8x16_t)v110, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL)));
  v114 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v111, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v111, 8uLL)), v112), a62);
  v115 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), v113), a62);
  v116 = (int64x2_t)veorq_s8((int8x16_t)v115, vorrq_s8((int8x16_t)vshlq_n_s64(v113, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 0x3DuLL)));
  v117 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v112, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v112, 0x3DuLL)));
  v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v116), a61);
  v119 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v117), a61);
  v120 = (int64x2_t)veorq_s8((int8x16_t)v119, vorrq_s8((int8x16_t)vshlq_n_s64(v117, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 0x3DuLL)));
  v121 = (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL)));
  v122 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v121);
  v123 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v119, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 8uLL)), v120);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x340], v122), (int64x2_t)vorrq_s8(v122, *(int8x16_t *)&STACK[0x350]))), v75);
  v125 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x340], v123), (int64x2_t)vorrq_s8(v123, *(int8x16_t *)&STACK[0x350]))), v75);
  v126 = vorrq_s8((int8x16_t)vshlq_n_s64(v121, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 0x3DuLL));
  v127 = (int64x2_t)veorq_s8((int8x16_t)v125, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)));
  v128 = (int64x2_t)veorq_s8((int8x16_t)v124, v126);
  v129 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v128);
  v130 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v125, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 8uLL)), v127);
  v131 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v130, v130), v74), v130), v73), v69);
  v132 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v129, v129), v74), v129), v73), v69);
  v237.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v131, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v131, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v131, vorrq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL)))), v71), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v80, 3uLL), v66)));
  v237.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v132, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v132, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v132, vorrq_s8((int8x16_t)vshlq_n_s64(v128, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 0x3DuLL)))), v71), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), v66)));
  v133 = (int64x2_t)veorq_s8(v95, *(int8x16_t *)&STACK[0x250]);
  v134 = (int64x2_t)veorq_s8(v95, *(int8x16_t *)&STACK[0x280]);
  v135 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v133, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 8uLL)), v134);
  v136 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x270], v135), (int64x2_t)vorrq_s8(v135, v68))), v70);
  v137 = (int64x2_t)veorq_s8((int8x16_t)v136, vorrq_s8((int8x16_t)vshlq_n_s64(v134, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 0x3DuLL)));
  v138 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v136, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 8uLL)), v137);
  v139 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v138, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v138, v138), v72)), *(int64x2_t *)&STACK[0x200]), v65);
  v140 = (int64x2_t)veorq_s8((int8x16_t)v139, vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL)));
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v139, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 8uLL)), v140), a62);
  v142 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v140, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 0x3DuLL)));
  v143 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142), a61);
  v144 = (int64x2_t)veorq_s8((int8x16_t)v143, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v145 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v143, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 8uLL)), v144);
  v146 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x340], v145), (int64x2_t)vorrq_s8(v145, *(int8x16_t *)&STACK[0x350]))), v75);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v144, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 0x3DuLL)));
  v148 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147);
  v149 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v148, v148), v74), v148), v73), v69);
  v237.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v149, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL)))), v71), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), v66)));
  v150 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x2C0], *(int8x16_t *)&STACK[0x250]);
  v151 = (int64x2_t)veorq_s8(*(int8x16_t *)&STACK[0x2C0], *(int8x16_t *)&STACK[0x280]);
  v152 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v150, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 8uLL)), v151);
  v153 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x270], v152), (int64x2_t)vorrq_s8(v152, v68))), v70);
  v154 = (int64x2_t)veorq_s8((int8x16_t)v153, vorrq_s8((int8x16_t)vshlq_n_s64(v151, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v151, 0x3DuLL)));
  v155 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v153, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v153, 8uLL)), v154);
  v156 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v155, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v155, v155), v72)), *(int64x2_t *)&STACK[0x200]), v65);
  v157 = (int64x2_t)veorq_s8((int8x16_t)v156, vorrq_s8((int8x16_t)vshlq_n_s64(v154, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v154, 0x3DuLL)));
  v158 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v156, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 8uLL)), v157), a62);
  v159 = (int64x2_t)veorq_s8((int8x16_t)v158, vorrq_s8((int8x16_t)vshlq_n_s64(v157, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 0x3DuLL)));
  v160 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v158, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 8uLL)), v159), a61);
  v161 = (int64x2_t)veorq_s8((int8x16_t)v160, vorrq_s8((int8x16_t)vshlq_n_s64(v159, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v159, 0x3DuLL)));
  v162 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v160, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 8uLL)), v161);
  v163 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x340], v162), (int64x2_t)vorrq_s8(v162, *(int8x16_t *)&STACK[0x350]))), v75);
  v164 = (int64x2_t)veorq_s8((int8x16_t)v163, vorrq_s8((int8x16_t)vshlq_n_s64(v161, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 0x3DuLL)));
  v165 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v163, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 8uLL)), v164);
  v166 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v165, v165), v74), v165), v73), v69);
  v94.i64[0] = v62 + (v76 - 8);
  v94.i64[1] = v62 + (v76 - 9);
  v167 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2F0], v84);
  v168 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2E0], v84);
  v169 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2D0], v84);
  v237.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v166, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v166, vorrq_s8((int8x16_t)vshlq_n_s64(v164, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 0x3DuLL)))), v71), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v77, 3uLL), v66)));
  v170 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v84);
  v171 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], v170), *(int8x16_t *)&STACK[0x3C0]), vandq_s8((int8x16_t)vaddq_s64(v170, *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3B0]));
  v172 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], v169), *(int8x16_t *)&STACK[0x3C0]), vandq_s8((int8x16_t)vaddq_s64(v169, *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3B0]));
  v173 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], v168), *(int8x16_t *)&STACK[0x3C0]), vandq_s8((int8x16_t)vaddq_s64(v168, *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3B0]));
  v174 = vorrq_s8(vandq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x3D0], v167), *(int8x16_t *)&STACK[0x3C0]), vandq_s8((int8x16_t)vaddq_s64(v167, *(int64x2_t *)&STACK[0x3E0]), *(int8x16_t *)&STACK[0x3B0]));
  v170.i64[0] = vqtbl4q_s8(v237, *(int8x16_t *)&STACK[0x360]).u64[0];
  v175 = (int64x2_t)veorq_s8(v174, *(int8x16_t *)&STACK[0x250]);
  v176 = (int64x2_t)veorq_s8(v173, *(int8x16_t *)&STACK[0x250]);
  v237.val[0] = veorq_s8(v173, *(int8x16_t *)&STACK[0x280]);
  v237.val[1] = veorq_s8(v174, *(int8x16_t *)&STACK[0x280]);
  v177 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v175, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v175, 8uLL)), (int64x2_t)v237.val[1]);
  v178 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v176, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v176, 8uLL)), (int64x2_t)v237.val[0]);
  v179 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x270], v177), (int64x2_t)vorrq_s8(v177, v68))), v70);
  v180 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x270], v178), (int64x2_t)vorrq_s8(v178, v68))), v70);
  v237.val[0] = veorq_s8((int8x16_t)v180, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[0], 0x3DuLL)));
  v237.val[1] = veorq_s8((int8x16_t)v179, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[1], 0x3DuLL)));
  v181 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v179, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v179, 8uLL)), (int64x2_t)v237.val[1]);
  v182 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v180, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v180, 8uLL)), (int64x2_t)v237.val[0]);
  v183 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v182, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v182, v182), v72)), *(int64x2_t *)&STACK[0x200]), v65);
  v184 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v181, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v181, v181), v72)), *(int64x2_t *)&STACK[0x200]), v65);
  v237.val[1] = veorq_s8((int8x16_t)v184, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[1], 0x3DuLL)));
  v237.val[0] = veorq_s8((int8x16_t)v183, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[0], 0x3DuLL)));
  v185 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v184, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184, 8uLL)), (int64x2_t)v237.val[1]), a62);
  v186 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v183, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183, 8uLL)), (int64x2_t)v237.val[0]), a62);
  v237.val[0] = veorq_s8((int8x16_t)v186, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[0], 0x3DuLL)));
  v237.val[1] = veorq_s8((int8x16_t)v185, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[1], 0x3DuLL)));
  v187 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v186, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v186, 8uLL)), (int64x2_t)v237.val[0]), a61);
  v188 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v185, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v185, 8uLL)), (int64x2_t)v237.val[1]), a61);
  v237.val[1] = veorq_s8((int8x16_t)v188, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[1], 0x3DuLL)));
  v237.val[0] = veorq_s8((int8x16_t)v187, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[0], 0x3DuLL)));
  v189 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v187, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v187, 8uLL)), (int64x2_t)v237.val[0]);
  v190 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v188, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v188, 8uLL)), (int64x2_t)v237.val[1]);
  v191 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x340], v189), (int64x2_t)vorrq_s8(v189, *(int8x16_t *)&STACK[0x350]))), v75);
  v192 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x340], v190), (int64x2_t)vorrq_s8(v190, *(int8x16_t *)&STACK[0x350]))), v75);
  v237.val[1] = veorq_s8((int8x16_t)v192, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[1], 0x3DuLL)));
  v237.val[0] = veorq_s8((int8x16_t)v191, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[0], 0x3DuLL)));
  v193 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v191, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v191, 8uLL)), (int64x2_t)v237.val[0]);
  v194 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v192, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 8uLL)), (int64x2_t)v237.val[1]);
  v195 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v194, v194), v74), v194), v73), v69);
  v196 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v193, v193), v74), v193), v73), v69);
  v237.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v195, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v195, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v195, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[1], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[1], 0x3DuLL)))), v71), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x310], 3uLL),
                                                                v66)));
  v237.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v196, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v196, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v196, vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v237.val[0], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v237.val[0], 0x3DuLL)))), v71), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x300], 3uLL),
                                                                v66)));
  v197 = (int64x2_t)veorq_s8(v172, *(int8x16_t *)&STACK[0x250]);
  v198 = (int64x2_t)veorq_s8(v172, *(int8x16_t *)&STACK[0x280]);
  v199 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v197, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v197, 8uLL)), v198);
  v200 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x270], v199), (int64x2_t)vorrq_s8(v199, v68))), v70);
  v201 = (int64x2_t)veorq_s8((int8x16_t)v200, vorrq_s8((int8x16_t)vshlq_n_s64(v198, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v198, 0x3DuLL)));
  v202 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v200, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v200, 8uLL)), v201);
  v203 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v202, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v202, v202), v72)), *(int64x2_t *)&STACK[0x200]), v65);
  v204 = (int64x2_t)veorq_s8((int8x16_t)v203, vorrq_s8((int8x16_t)vshlq_n_s64(v201, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v201, 0x3DuLL)));
  v205 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v203, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v203, 8uLL)), v204), a62);
  v206 = (int64x2_t)veorq_s8((int8x16_t)v205, vorrq_s8((int8x16_t)vshlq_n_s64(v204, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v204, 0x3DuLL)));
  v207 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v205, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v205, 8uLL)), v206), a61);
  v208 = (int64x2_t)veorq_s8((int8x16_t)v207, vorrq_s8((int8x16_t)vshlq_n_s64(v206, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v206, 0x3DuLL)));
  v209 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v207, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207, 8uLL)), v208);
  v210 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x340], v209), (int64x2_t)vorrq_s8(v209, *(int8x16_t *)&STACK[0x350]))), v75);
  v211 = (int64x2_t)veorq_s8((int8x16_t)v210, vorrq_s8((int8x16_t)vshlq_n_s64(v208, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v208, 0x3DuLL)));
  v212 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v210, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v210, 8uLL)), v211);
  v213 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v212, v212), v74), v212), v73), v69);
  v214 = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v213, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v213, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v213, vorrq_s8((int8x16_t)vshlq_n_s64(v211, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v211, 0x3DuLL)))), v71), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x320], 3uLL), v66)));
  v215 = (int64x2_t)veorq_s8(v171, *(int8x16_t *)&STACK[0x250]);
  v216 = (int64x2_t)veorq_s8(v171, *(int8x16_t *)&STACK[0x280]);
  v217 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v215, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v215, 8uLL)), v216);
  v218 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x270], v217), (int64x2_t)vorrq_s8(v217, v68))), v70);
  v219 = (int64x2_t)veorq_s8((int8x16_t)v218, vorrq_s8((int8x16_t)vshlq_n_s64(v216, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v216, 0x3DuLL)));
  v220 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v218, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v218, 8uLL)), v219);
  v221 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v220, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v220, v220), v72)), *(int64x2_t *)&STACK[0x200]), v65);
  v222 = (int64x2_t)veorq_s8((int8x16_t)v221, vorrq_s8((int8x16_t)vshlq_n_s64(v219, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v219, 0x3DuLL)));
  v223 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v221, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221, 8uLL)), v222), a62);
  v224 = (int64x2_t)veorq_s8((int8x16_t)v223, vorrq_s8((int8x16_t)vshlq_n_s64(v222, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v222, 0x3DuLL)));
  v225 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v223, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v223, 8uLL)), v224), a61);
  v226 = (int64x2_t)veorq_s8((int8x16_t)v225, vorrq_s8((int8x16_t)vshlq_n_s64(v224, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v224, 0x3DuLL)));
  v227 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v225, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v225, 8uLL)), v226);
  v228 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(*(int8x16_t *)&STACK[0x340], v227), (int64x2_t)vorrq_s8(v227, *(int8x16_t *)&STACK[0x350]))), v75);
  v229 = (int64x2_t)veorq_s8((int8x16_t)v228, vorrq_s8((int8x16_t)vshlq_n_s64(v226, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v226, 0x3DuLL)));
  v230 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v228, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v228, 8uLL)), v229);
  v231 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v230, v230), v74), v230), v73), v69);
  v232 = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v231, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v231, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v231, vorrq_s8((int8x16_t)vshlq_n_s64(v229, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v229, 0x3DuLL)))), v71), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v94, 3uLL), v66)));
  v170.i64[1] = vqtbl4q_s8(v237, *(int8x16_t *)&STACK[0x360]).u64[0];
  v233 = vrev64q_s8(*(int8x16_t *)(v62 + v76 - 0xCBAA6BF1BCD5494));
  v234 = veorq_s8((int8x16_t)v170, vextq_s8(v233, v233, 8uLL));
  v232.i64[0] = 0x7B7B7B7B7B7B7B7BLL;
  v232.i64[1] = 0x7B7B7B7B7B7B7B7BLL;
  v214.i64[0] = 0xF6F6F6F6F6F6F6F6;
  v214.i64[1] = 0xF6F6F6F6F6F6F6F6;
  v235 = vrev64q_s8(vaddq_s8(vandq_s8(vaddq_s8(v234, v234), v214), veorq_s8(v234, v232)));
  *(int8x16_t *)(v64 - 15 + v76) = vextq_s8(v235, v235, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x338] + 8 * ((487 * (LODWORD(STACK[0x2B0]) != 16)) ^ (v63 + 1083)))
                            - 12))();
}

uint64_t sub_1F217C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;

  v25 = (a9 + a1);
  v26 = __ROR8__(v10 + v25, 8);
  v27 = (a7 - (v26 & 0xF8FFFFFFFFFFFFFFLL)) & a8 | ((v26 & 0xF8FFFFFFFFFFFFFFLL) + a5) & v14;
  v28 = v27 ^ v15;
  v29 = v27 ^ v16;
  v30 = __ROR8__(v28, 8);
  v31 = __ROR8__((v12 - ((v18 | ~(v30 + v29)) + ((v30 + v29) | v17))) ^ v19, 8);
  v32 = (v12 - ((v18 | ~(v30 + v29)) + ((v30 + v29) | v17))) ^ v19 ^ __ROR8__(v29, 61);
  v33 = (v31 + v32 - (v20 & (2 * (v31 + v32))) + v21) ^ v22;
  v34 = v33 ^ __ROR8__(v32, 61);
  v35 = (__ROR8__(v33, 8) + v34) ^ v23;
  v36 = v35 ^ __ROR8__(v34, 61);
  v37 = (__ROR8__(v35, 8) + v36) ^ v11;
  v38 = __ROR8__(v37, 8);
  v39 = v37 ^ __ROR8__(v36, 61);
  v40 = (v12 - ((v9 | ~(v38 + v39)) + ((v38 + v39) | 0x51AAEF5E1E522B0CLL))) ^ a6;
  v41 = v40 ^ __ROR8__(v39, 61);
  v42 = __ROR8__(v40, 8);
  v43 = (((2 * (v42 + v41)) | 0x824A8070B9A46C16) - (v42 + v41) + 0x3EDABFC7A32DC9F5) ^ 0x4A2202AB2FF174D2;
  v44 = (((__ROR8__(v43, 8) + (v43 ^ __ROR8__(v41, 61))) ^ a3) >> (8 * ((v10 + v25) & 7))) ^ *(_BYTE *)(v10 + v25 - 0xCBAA6BF1BCD5485);
  *(_BYTE *)(v13 + v25) = ((2 * v44) & 0xF7) + (v44 ^ 0x7B);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a2 + 8 * ((4079 * (a9 - 1 == a4)) ^ (v24 + 1052))) - 12))(4219804629);
}

uint64_t sub_1F22F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  return ((uint64_t (*)(void))(a53 - 8))();
}

void sub_1F2300()
{
  JUMPOUT(0x1F1334);
}

void sub_1F2320()
{
  JUMPOUT(0x1DE138);
}

uint64_t sub_1F233C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((STACK[0x5D0] != 0x77C8991B1798DD3) * (74 * (v1 ^ 0x3E5) - 1053)) ^ (v1 + 2062)))
                            - (v1 + 1523)
                            + 2487))();
}

uint64_t sub_1F238C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a1 - 539;
  v4 = ((uint64_t (*)(uint64_t))STACK[0x218])(v1 - 0x77C8991B1798DD3);
  v5 = STACK[0x338];
  STACK[0x5D0] = 0x77C8991B1798DD3;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5 + 8 * ((83 * (STACK[0x450] != v2)) ^ v3))
                                          - (v3 - 2052)
                                          + 435))(v4);
}

uint64_t sub_1F23F0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  v2 = ((uint64_t (*)(uint64_t))STACK[0x218])(a1 - 0x77C8991B1798DD3);
  v3 = STACK[0x338];
  STACK[0x450] = 0x77C8991B1798DD3;
  v4 = STACK[0x924];
  STACK[0x700] -= 48;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((2266 * (v4 == ((((v1 ^ 0x804) - 443) | 8) ^ 0x14D9D389))) ^ ((v1 ^ 0x804) + 529)))
                                          - 8))(v2);
}

uint64_t sub_1F2478@<X0>(int a1@<W7>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = a2 - 964;
  v4 = (uint64_t)*(&off_38F180 + (a2 ^ 0x32B));
  *(_QWORD *)(v4 + 40) = STACK[0x808];
  *(_BYTE *)(v4 + 24) = -14;
  LODWORD(STACK[0x4C4]) = 349819777;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((993 * (a1 != 349819777)) | v3)) - 12))();
}

uint64_t sub_1F24D8()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((v1 + ((v1 - 1835609100) & 0x6D692FCF) + 1105 - 8) ^ (294
                                                                                               * (STACK[0x808] != 0))))
                            - 8))();
}

uint64_t sub_1F2528()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  v1 = ((uint64_t (*)(void))STACK[0x218])();
  STACK[0x808] = 0;
  return v0(v1);
}

uint64_t sub_1F2548()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((2 * (STACK[0x8F8] != 0)) | (32 * (STACK[0x8F8] != 0))) ^ (v0 + 958)))
                            - (v0 ^ 0x3BFu)
                            + 111))();
}

uint64_t sub_1F2580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0x8D8] = *(_QWORD *)(v1 + 8 * a1);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (int)((((((5 * (((_DWORD)a1 + 603275012) & 0xDC0ACBBE ^ 0xB4C) - 162) ^ (&STACK[0x8F8] == 0)) & 1) == 0) * (((5 * ((a1 + 603275012) & 0xDC0ACBBE ^ 0xB4C) - 1214323748) & 0x48611BEF) + 1744)) ^ (5 * ((a1 + 603275012) & 0xDC0ACBBE ^ 0xB4C))))
                                                                                                - 12))(2682281981, 969, 614, 0x74C05FF805FC435ALL, 2994, 3067, 454);
}

uint64_t sub_1F25A8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((83 * (STACK[0x450] != v2)) ^ v1))
                            - (v1 - 2052)
                            + 435))();
}

uint64_t sub_1F25D4()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * (((STACK[0x830] == 0) * (v0 - 853)) ^ (v0 + 750))))();
}

uint64_t sub_1F25F8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * (((STACK[0x640] == 0) * ((1002 * (v0 ^ 0x3CE)) ^ 0x7C6)) ^ (v0 + 1018)))
                            - 8))();
}

uint64_t sub_1F2640()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;

  v1 = ((uint64_t (*)(void))STACK[0x218])();
  STACK[0x640] = 0;
  return v0(v1);
}

uint64_t sub_1F2654()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(unint64_t))(v0 + 8 * ((99 * (STACK[0x418] == 0)) ^ (v1 + 1119))))(STACK[0x418]);
}

uint64_t sub_1F2678()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((28 * (STACK[0x720] == 0)) ^ (v1 - 383))) - 8))();
}

uint64_t sub_1F26A0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v2 = v0;
  ((void (*)(void))STACK[0x218])();
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((58 * (STACK[0x928] != 0)) ^ (v1 + 720))) - 4))();
}

uint64_t sub_1F26D4()
{
  uint64_t result;
  uint64_t v1;
  uint64_t (*v2)(void);
  int v3;

  result = v2();
  *(_DWORD *)(v1 + 16) = v3;
  return result;
}

uint64_t sub_1F284C(int a1, int a2, int a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((((v5 + v6) & a1 ^ a2) * a3) ^ a5) * (*v8 == a4)) ^ v5)) - 12))();
}

uint64_t sub_1F2880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (((v9 & ~((v7 - 2460) ^ (*(_QWORD *)(v8 - 0x74C05FF805FC435ALL) == 0)))
                                          * ((v7 ^ a6) * a7 - 243)) ^ v7))
                            - 12))();
}

uint64_t sub_1F28CC()
{
  _QWORD *v0;
  uint64_t v1;

  ((void (*)(uint64_t))STACK[0x218])(v1);
  *v0 = 0x74C05FF805FC435ALL;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x8D8])(2682281981, 969, 614, 0x74C05FF805FC435ALL, 2994, 3067, 454, 349819777);
}

void sub_1F2948()
{
  uint64_t v0;
  int v1;

  STACK[0x8D8] = (v1 - 362) + *(_QWORD *)(v0 + 8 * (v1 - 848)) - 622;
  JUMPOUT(0x1F280CLL);
}

uint64_t sub_1F2968()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = ((uint64_t (*)(uint64_t))STACK[0x218])(v0);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x338]
                                                      + 8
                                                      * (((((v3 == 0) ^ ((v1 + 68) ^ (v1 - 1))) & 1)
                                                        * v2) ^ v1))
                                          - 12))(v4);
}

uint64_t sub_1F29B0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((*(_QWORD *)(v1 + 24) != 0) * (10 * (v3 ^ v2) - 2229)) ^ v3))
                            - 8))();
}

void sub_1F29E4()
{
  uint64_t v0;

  ((void (*)(void))STACK[0x218])();
  *(_QWORD *)(v0 + 24) = 0;
  JUMPOUT(0x1F296CLL);
}

uint64_t sub_1F29F8()
{
  int v0;
  uint64_t v1;

  v1 = ((uint64_t (*)(unint64_t))STACK[0x218])(STACK[0x748]);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x338]
                                                      + 8
                                                      * ((4 * (STACK[0x870] != 0)) | (8 * (STACK[0x870] != 0)) | (v0 - 524)))
                                          - 12))(v1);
}

uint64_t sub_1F2A38@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  return ((uint64_t (*)(void))STACK[0x598])();
}

uint64_t sub_1F2A44()
{
  STACK[0x4F8] = 0x74C05FF805FC435ALL;
  *(_QWORD *)STACK[0x6D8] = STACK[0x4F8];
  return ((uint64_t (*)(void))STACK[0x938])();
}

uint64_t sub_1F2AA8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  _BOOL4 v7;

  v5 = (v2 + 384);
  STACK[0x3F8] = (v5 ^ 0xFFFFFFFFFFFFFB33) + *(_QWORD *)(v1 + 8 * (v2 - 841));
  STACK[0x618] = v4;
  LODWORD(STACK[0xAF8]) = v3;
  LOWORD(STACK[0xAFE]) = -8352;
  LODWORD(STACK[0xB00]) = 1287862443;
  LODWORD(STACK[0xB04]) = a1;
  STACK[0xB08] = 0x216E6B564BBAFBEDLL;
  STACK[0xB10] = 0;
  v7 = v4 != 0x74C05FF805FC435ALL && ((((v2 - 71) | 0xC4) + 1287861474) ^ 0x4CC338ABu) < 0xFFFFFFF6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((552 * v7) ^ v5)) - 12))();
}

uint64_t sub_1F2BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(uint64_t, uint64_t))
{
  int v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;

  v28 = v26 + 1207;
  v29 = (v26 + 1588550432) & 0xA150A3DC;
  v30 = v27;
  v31 = a26(32, 0x103004054B5FA7DLL);
  STACK[0x838] = v31;
  return (*(uint64_t (**)(void))(v30 + 8 * (int)(((v29 - 933) * (v31 == 0)) ^ v28)))();
}

uint64_t sub_1F2C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t (*a26)(_QWORD, uint64_t))
{
  int v26;
  int v27;
  uint64_t v28;
  unint64_t v30;
  uint64_t v31;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v30 = v26 ^ 0x4CC33B63 ^ (((v27 - 2370) | 0x20u) + 872);
  STACK[0xB18] = v30;
  LODWORD(v30) = ((v30 + 10) ^ 0x5ACF99FB) - 1346506912 + ((2 * (v30 + 10)) & 0xB59F33F6);
  *(_DWORD *)(a1 + 16) = v30;
  v31 = a26((v30 - 177047899), 2229939461);
  *(_QWORD *)(a1 + 24) = v31;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * ((2770 * (v31 != 0)) ^ (v27 - 1777))) - 4))();
}

void sub_1F2CAC()
{
  int v0;
  int v1;

  LODWORD(STACK[0x3D0]) = ((359 * (v1 ^ 0x66)) ^ 0x102) + 1287861471;
  LODWORD(STACK[0x3B0]) = LODWORD(STACK[0xA34]) ^ 0x825484BF;
  v0 = STACK[0xA30];
  LODWORD(STACK[0x3C0]) = 1287862443;
  LODWORD(STACK[0x370]) = LODWORD(STACK[0xB04]) ^ 0x825484BF;
  LODWORD(STACK[0x3E0]) = v0 ^ 0x825484BF;
  JUMPOUT(0x1E0914);
}

uint64_t sub_1F2CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((7 * (v10 ^ 0x3AB) + 164) * (v9 == a8)) ^ (v10 + 1166))) - 4))();
}

void sub_1F2D18()
{
  JUMPOUT(0x1F2D30);
}

void sub_1F2DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x5E4]) = a8;
  JUMPOUT(0x1F2DB0);
}

uint64_t sub_1F2DC4()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((STACK[0x900] != 0) * (v0 ^ 0xB76)) ^ v0)) - 4))();
}

uint64_t sub_1F2DFC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1174
                                          * (0x373DC8D820372C2CLL - v0 + v1 - 10 < ((486 * (v2 ^ 0x858u)) ^ 0xFFFFFFFFFFFFFC3ALL))) ^ v2))
                            - 27 * (v2 ^ 0x815u)
                            + 2129))();
}

uint64_t sub_1F2E70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  _BOOL4 v9;

  v5 = bswap32(*(_DWORD *)(a1
                         + ((2 * (v1 - 0x373DC8D820372C26)) & 0xFFFFFFEE9D9FBFF2)
                         + ((v1 - 0x373DC8D820372C26) ^ 0x7FFFFFF74ECFDFF9)
                         - 0x7FFFFFF74ECFDFF9));
  v6 = ((v5 + 1287862447 - ((2 * v5) & 0x9986715E)) ^ 0x4CC338AF) + v1 - 0x373DC8D78B65DDAFLL;
  v7 = v2 + 2496745075;
  v9 = v6 < 0x94D14E73 || v6 > v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((15 * v9) ^ v3)) - 4))();
}

uint64_t sub_1F2F44()
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v4 = 14 * (v1 ^ 0x301u);
  LODWORD(STACK[0x5E4]) = v3;
  STACK[0x868] = STACK[0x4F8];
  STACK[0x8D8] = *(_QWORD *)(v2 + 8 * (v1 - 971)) + (v4 ^ 0xFFFFFFFFFFFFF4CALL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (int)((((((5 * (v4 ^ 0xB4C) - 162) ^ (&STACK[0x868] == 0)) & 1) == 0) * (((5 * (v4 ^ 0xB4C) - 1214323748) & 0x48611BEF) + 1744)) ^ (5 * (v4 ^ 0xB4C))))
                                                                                                - 12))(2682281981, 969, 614, 0x74C05FF805FC435ALL, 2994, 3067, 454);
}

uint64_t sub_1F2F80@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  unint64_t v13;

  v7 = (*(unsigned __int8 *)(v2 + a1 + 971) << (54 * (v3 ^ 0x47) + 76)) | (*(unsigned __int8 *)(v2 + a1 + v1) << 16) | (*(unsigned __int8 *)(v2 + a1 + 973) << 8) | *(unsigned __int8 *)(v2 + a1 + 974);
  v8 = v7 + 1287862447 - ((2 * v7) & 0x9986715E);
  LOWORD(v7) = _byteswap_ushort(*(_WORD *)(a1
                                         + ((2 * (v2 + 975)) & 0xBF2BF96DEFBBBBF4)
                                         + ((v2 + 975) ^ 0xDF95FCB6F7DDDDFALL)
                                         + 0x206A034908222206));
  v9 = v2 + 981;
  v10 = v4 + 10;
  v11 = (unsigned __int16)(v7 - ((2 * v7) & 0x902E) + 18465);
  switch(v11)
  {
    case 6358:
      STACK[0x8B8] = a1 + v9;
      STACK[0x858] = v10;
      return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v6 - 172) ^ (166 * (v8 != 1287862447)))) - 12))();
    case 52380:
      v13 = bswap64(*(_QWORD *)(((2 * v9) & 0xF6669E6D7FDD99DELL)
                              + (v9 ^ 0x7B334F36BFEECCEFLL)
                              + a1
                              - 0x7B334F36BFEECCEFLL));
      STACK[0x728] = v13 + 0x216E6B564BBAFBEDLL - ((2 * v13) & 0x42DCD6AC9775F7DALL);
      goto LABEL_6;
    case 57194:
      v12 = bswap32(*(_DWORD *)(((2 * v9) & 0xFE7FFFBEDDF7F7F6)
                              + (v9 ^ 0x7F3FFFDF6EFBFBFBLL)
                              + a1
                              - 0x7F3FFFDF6EFBFBFBLL));
      LODWORD(STACK[0x7A0]) = v12 + 1287862447 - ((2 * v12) & 0x9986715E);
LABEL_6:
      STACK[0x858] = v10;
      STACK[0x3F8] = ((v6 - 1833723629) & 0x6D4C67EF) + *(_QWORD *)(v5 + 8 * (v6 - 952)) - 1239;
      JUMPOUT(0x1F2B34);
    default:
      return sub_1F2F44();
  }
}

uint64_t sub_1F323C()
{
  return ((uint64_t (*)(void))STACK[0x4F0])();
}

uint64_t sub_1F3244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return (*(uint64_t (**)(void))(v8 + 8 * ((177 * (v9 == a8 + ((v10 - 428) | 0x446) - 1638)) ^ (v10 - 147))))();
}

void sub_1F3278(uint64_t a1@<X8>)
{
  uint64_t v1;

  STACK[0x3F8] = *(_QWORD *)(v1 + 8 * a1) + (((_DWORD)a1 + 1061) | 0x8Du) - 1235;
  JUMPOUT(0x1F32B0);
}

uint64_t sub_1F32BC@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2152
                                * (*(_DWORD *)(STACK[0x660] + 40 * ((((v1 - 868) | 0x642) ^ 0xA8455EAC) + a1) + 36)
                                 - LODWORD(STACK[0x5CC])
                                 - 204547650 == ((v1 + 1769835589) & 0x968273FE) - 2040133024)) ^ v1)))();
}

uint64_t sub_1F333C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  unint64_t v6;

  v4 = *(_DWORD *)(v1 + 40 * a1 + 28);
  switch(v4)
  {
    case 1:
      v6 = STACK[0x5E8];
      STACK[0x5D8] = *(_QWORD *)(v2 + 8 * (v3 - 836));
      return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                            + 8
                                            * (((v6 != 0x74C05FF805FC435ALL)
                                              * (((((v3 - 896) | 0x303) + 57) | 0x44) ^ 0x307)) ^ ((v3 - 896) | 0x303)))
                                - 8))();
    case 3:
      return (*(uint64_t (**)(void))(v2
                                  + 8
                                  * (((*(_QWORD *)(v1 + 40 * a1 + 16) == 0) * (((v3 ^ 0x5AA) - 1456) ^ 0x4F)) ^ (v3 - 91))))();
    case 2:
      return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((490 * (STACK[0x5E8] == 0x74C05FF805FC435ALL)) ^ (v3 + 796)))
                                - 5 * (v3 ^ 0x3CEu)
                                - 2))();
    default:
      return ((uint64_t (*)(void))STACK[0x410])();
  }
}

void sub_1F34FC()
{
  int v0;
  uint64_t v1;

  STACK[0x3F8] = *(_QWORD *)(v1 + 8 * v0) - 8;
  JUMPOUT(0x1F2B34);
}

uint64_t sub_1F3588()
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  v3 = STACK[0x5E8];
  STACK[0x4F0] = *(_QWORD *)(v2 + 8 * v1) - 12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((59 * (v3 == 0x74C05FF805FC435ALL)) ^ (v1 - 530915515) & 0x1FA529DD))
                            - (((v1 - 530915515) & 0x1FA529DD ^ 0x9C4u)
                             + 943)
                            + 964))();
}

uint64_t sub_1F35FC(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v5;

  v1 = 1697562443 * (a1 ^ 0xD7903884);
  v2 = a1[1] + v1;
  v3 = *((_DWORD *)*(&off_38F180 + (int)(v2 - 1143)) + 2) - 1463781089;
  v5 = v3 > 0xF617385 && v3 <= (*a1 ^ v1) - 796958699;
  return (*(uint64_t (**)(void))((char *)*(&off_38F180 + (int)(v2 ^ 0x5B5)) + 8 * (int)((222 * v5) ^ v2) - 4))();
}

uint64_t sub_1F369C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  _BOOL4 v7;

  v4 = v3 + 838625302;
  v5 = v2 + 1505444727 + ((v1 - 216205705) & 0xCE30FBF);
  v7 = v4 < 0x989D627D || v4 >= v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((3675 * v7) ^ v1)))();
}

uint64_t sub_1F3700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = *(_DWORD *)(v1 + 12) + 1586184586;
  v7 = v5 > 0x61AC71CA && v5 <= (*(_DWORD *)(a1 + 8) ^ v3) + 1191808045;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v7 * ((((v4 + 724418656) & 0x14D23F9B) - 1587) ^ 0x531)) ^ v4))
                            - 12))();
}

uint64_t sub_1F3778()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  _BOOL4 v8;

  v5 = (v3 ^ 0xF255C9E6) + v4;
  v6 = v2 - 623634597;
  v8 = v5 > 0xF576FCF8 && v5 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 + 4 * v8)) - ((3 * (v1 ^ 0xA5Bu)) ^ 0x552)))();
}

uint64_t sub_1F37D0@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  if (*(_DWORD *)(v2 + 16) == 1369725731)
    v3 = a2 - 1;
  else
    v3 = a2;
  *(_DWORD *)(result + 16) = v3;
  return result;
}

void sub_1F37F0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8)
     - 1697562443 * ((((2 * (a1 ^ 0x8C16C659)) | 0x69AF6DAC) - (a1 ^ 0x8C16C659) - 886552278) ^ 0x6F51480B);
  __asm { BR              X10 }
}

uint64_t sub_1F38F0@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, unint64_t *a4, int a5, unsigned int a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v10 = 673918253 * ((((2 * &a3) | 0xFCA6531A) - &a3 - 2119379341) ^ 0xE41B3225);
  a4 = &STACK[0x215B00805AB47BCD];
  a3 = v10 ^ 0xEE1B3530;
  a7 = v8;
  a5 = v7 - v10 - 791;
  a6 = 2116166272 - v10;
  v11 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(a1 + 8 * (v7 ^ 0x7BC)) - 12))(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((*(_DWORD *)(v8 - 0x71888C0647A114B3) != v7 + 349818080)
                                                        * ((v7 - 1074335497) & 0x40090F7F ^ 0x6A1)) ^ v7))
                                          - 4))(v11);
}

void sub_1F39E8(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE *v4;

  v3 = 0xEE59EB4EBD97D495 * (*(_QWORD *)v1 ^ v2)
     - ((0xDCB3D69D7B2FA92ALL * (*(_QWORD *)v1 ^ v2) + 0x6337ADE08688BA84) & 0x85BB615F4DA43048)
     + 0x7479879FEA167566;
  *v4 = (HIBYTE(v3) ^ 0xC2) - ((2 * (HIBYTE(v3) ^ 0xC2)) & 0xF3) - 7;
  v4[1] = (BYTE6(v3) ^ 0xDD) - ((2 * (BYTE6(v3) ^ 0xDD)) & 0xF3) - 7;
  v4[2] = (BYTE5(v3) ^ 0xB0) - 2 * ((BYTE5(v3) ^ 0xB0) & 0xFB ^ BYTE5(v3) & 2) - 7;
  v4[3] = (BYTE4(v3) ^ 0xAF) - ((2 * (BYTE4(v3) ^ 0xAF)) & 0xF3) - 7;
  v4[4] = (BYTE3(v3) ^ 0xA6) - ((2 * (BYTE3(v3) ^ 0xA6)) & 0xF3) - 7;
  v4[5] = (BYTE2(v3) ^ 0xD2) + (~(2 * (BYTE2(v3) ^ 0xD2)) | 0xD) - 6;
  v4[6] = (BYTE1(v3) ^ 0x18) + ((2 * BYTE1(v3)) & 0xF3 ^ 0xCF) - 6;
  v4[7] = v3 ^ 0xDD;
  *(_DWORD *)(v1 + 24) = *a1;
}

void sub_1F3B80()
{
  int v0[8];

  v0[1] = 142545853 * ((((2 * v0) | 0x17E085D2) - v0 - 200295145) ^ 0x210FED86) + 1655392376;
  sub_2B0068(v0);
  __asm { BR              X9 }
}

uint64_t sub_1F3C4C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  BOOL v5;
  int v7;

  if (v2)
    v5 = ((2 * v3) & 0xDFF6FFDA) + (v3 ^ 0x6FFB7FED) == 1878753261;
  else
    v5 = 1;
  v7 = !v5 && v1 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1170 * v7) ^ a1)) - 4))();
}

uint64_t sub_1F3C98()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v0 == 0) | (2 * (v0 == 0))) ^ 0xC91u)) - 12))();
}

uint64_t sub_1F3CE4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = 1697562443 * ((((v3 - 128) ^ 0x279B21A8) & 0xB794295C | ~((v3 - 128) ^ 0x279B21A8 | 0xB794295C)) ^ 0xB860CF8F);
  *(_DWORD *)(v3 - 116) = v4 + 786578974;
  *(_DWORD *)(v3 - 112) = v4 ^ 0x4ED8ACA3;
  *(_DWORD *)(v3 - 124) = v0 - v4 - 109;
  *(_DWORD *)(v3 - 120) = v4 + 1512134898;
  v5 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 - 1979)) - 12))(v3 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * (v0 | (4 * (*(_DWORD *)(v3 - 128) != ((v0 - 1255) ^ 0x141E5626)))))
                                          - ((v0 - 1826929258) & 0x6CE4B6BB)
                                          + 1151))(v5);
}

uint64_t sub_1F3DF0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 - 128) = &STACK[0x232469BC6C7EF294];
  *(_DWORD *)(v2 - 120) = v1
                        + 31090337
                        * ((-2019198757 - ((v2 - 128) | 0x87A578DB) + ((v2 - 128) | 0x785A8724)) ^ 0xBFDBE76D)
                        + 969;
  sub_27BD14(v2 - 128);
  return ((uint64_t (*)(uint64_t, uint64_t))(672845543
                                                   - ((v1 + 537951963) | 0x80A4CC2u)
                                                   + *(_QWORD *)(v0
                                                               + 8
                                                               * ((1607
                                                                 * (*(_DWORD *)(v2 - 116) == ((v1 + 537951963) ^ 0x201080F3)
                                                                                           + 349819043)) ^ v1))
                                                   + 4))(v3, v4);
}

uint64_t sub_1F3ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(uint64_t), uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  int v27;

  v23 = 1697562443 * (((~(_DWORD)v21 & 0xC979F5C4) - (~(_DWORD)v21 | 0xC979F5C5)) ^ 0x1EE9CD41);
  *(_QWORD *)(v22 - 120) = a15;
  *(_DWORD *)(v22 - 112) = v20 + 182810129 + v23;
  *(_DWORD *)(v22 - 108) = v18 - 404 + v23;
  sub_280E70(v22 - 128);
  v24 = 1697562443 * (((v21 | 0xCCA8C7B25A0F2AAALL) - (v21 & 0xCCA8C7B25A0F2AAALL)) ^ 0x969423ED8D9F122ELL);
  *(_DWORD *)(v22 - 120) = v18 + 1082 + v24;
  *(_QWORD *)(v22 - 128) = ((((v18 - 369107951) & 0x3E1AEFFF) + 0x3273650939EB87CELL) * v17 + 0x63838965EBA6FA46) ^ v24;
  *(_QWORD *)(v22 - 112) = a15;
  a12(v22 - 128);
  v25 = 1697562443 * (((v21 | 0xEC92E07F) - v21 + (v21 & 0x136D1F80)) ^ 0x3B02D8FB);
  *(_QWORD *)(v22 - 120) = a15;
  *(_DWORD *)(v22 - 112) = (v15 ^ 0xFBE2F5FF) + ((2 * v15) & 0xF7C5EBFE) + 2130575359 + v25;
  *(_DWORD *)(v22 - 108) = v18 - 404 + v25;
  sub_280E70(v22 - 128);
  v26 = 1697562443 * (((v21 | 0x8D84C97C8E137D72) - (v21 & 0x8D84C97C8E137D72)) ^ 0xD7B82D23598345F6);
  *(_QWORD *)(v22 - 112) = a15;
  *(_DWORD *)(v22 - 120) = v18 + 1082 + v26;
  *(_QWORD *)(v22 - 128) = v26 ^ (0x32736509620656BDLL * v16 + 0x63838965EBA6FA46);
  a12(v22 - 128);
  v27 = 1697562443 * ((v21 & 0xEAEBD0B5 | ~(v21 | 0xEAEBD0B5)) ^ 0xC28417CE);
  *(_DWORD *)(v22 - 112) = v27 + 2061563390;
  *(_DWORD *)(v22 - 108) = v18 - 404 + v27;
  *(_QWORD *)(v22 - 120) = a15;
  sub_280E70(v22 - 128);
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((2371 * (*(_DWORD *)(v22 - 128) == 349819777)) ^ v18)) - 8))();
}

uint64_t sub_1F4134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v15 = 366490169 * ((268466403 - ((v14 - 128) | 0x100078E3) + ((v14 - 128) | 0xEFFF871C)) ^ 0xF951D158);
  *(_QWORD *)(v14 - 120) = v11;
  *(_DWORD *)(v14 - 112) = v15 ^ 0x331B1979;
  *(_DWORD *)(v14 - 108) = -1528503451 - v15;
  *(_DWORD *)(v14 - 128) = v15 + v12 + 55;
  v16 = a10(v14 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8 * (((*(_DWORD *)(v14 - 104) == v10) * (v12 + 1760)) ^ v12))
                                          - 8))(v16);
}

uint64_t sub_1F41F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t), uint64_t a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a17;
  *(_DWORD *)(v21 - 124) = (v18 + 384) ^ (1314530549
                                        * ((1334928039 - ((v21 - 128) | 0x4F9162A7) + ((v21 - 128) | 0xB06E9D58)) ^ 0x1671B96));
  *(_QWORD *)(v21 - 120) = v22;
  *(_QWORD *)(v21 - 112) = &a14;
  a11(v21 - 128);
  v23 = a17;
  *(_DWORD *)(v21 - 128) = (v18 + 575) ^ (1401278017
                                        * ((((2 * (v21 - 128)) | 0xDCF4C15C) - (v21 - 128) + 293969746) ^ 0xEA591649));
  *(_QWORD *)(v21 - 120) = v23;
  v24 = sub_280CE0(v21 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * (((*(_DWORD *)(v21 - 124) == v17)
                                                        * (v19 + ((v18 + 671104496) | 0x1A8E21) + 2517)) ^ v18))
                                          - 8))(v24);
}

uint64_t sub_1F42EC()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v5;

  *(_QWORD *)(v3 - 128) = v0;
  *(_DWORD *)(v3 - 120) = v1
                        - v2
                        - 733
                        + 1437274309
                        * ((((v3 - 128) | 0x6D4F3E57) - (v3 - 128) + ((v3 - 128) & 0x92B0C1A8)) ^ 0x4F414362)
                        - 25674954;
  sub_2B05A4(v3 - 128);
  return ((v1 - v2 - 1780538925) ^ v5) + ((2 * v5) & 0x7BF3E73Eu) + 1457512418 - 349819777;
}

uint64_t sub_1F4B1C(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))((char *)*(&off_388430
                                      + ((181 * ((*a1 + *(_DWORD *)(a2 + 4) - 1555273920) < 0xC9)) ^ 0x277u))
                            - 12))();
}

uint64_t sub_1F4B68@<X0>(uint64_t a1@<X8>)
{
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((14 * (v1 == 824557395)) ^ 0x5B7u)) - 8))();
}

uint64_t sub_1F4BA0(_DWORD *a1)
{
  int v1;
  int v2;
  int v3;

  *((_BYTE *)a1 + (v3 + v1 + v2 + 1635688013) + 4) = 90;
  *a1 = v1;
  return 0;
}

uint64_t sub_1F4BCC()
{
  return 4294925278;
}

uint64_t sub_1F4BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  unsigned int v4;
  _BOOL4 v5;
  int v6;

  *(_BYTE *)(a1 + (v3 - 730716526) + 4) = 2 * **(_BYTE **)(a2 + 8) + (**(_BYTE **)(a2 + 8) ^ 0x7F) - 37;
  v4 = *(_DWORD *)(a2 + 4) - 799903068;
  v5 = v4 < 0x17831F7;
  v6 = v4 > 0x17831F8;
  if (v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((v6 | (v6 << 6)) ^ 0x5B9)) - 8))();
}

void sub_1F4C78()
{
  JUMPOUT(0x1F4C08);
}

void sub_1F4C80(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;

  v2 = (*(_DWORD *)(a2 + 4) - 824557395) > 4;
  __asm { BR              X10 }
}

uint64_t sub_1F4CE0()
{
  return 4294925278;
}

void sub_1F4E4C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  _QWORD v5[2];
  uint64_t v6;

  v1 = 1437274309 * ((2 * (a1 & 0x25E1C749) - a1 - 635553610) ^ 0xF8104583);
  v2 = *(_DWORD *)(a1 + 16) - v1;
  v3 = *(_QWORD *)a1;
  v4 = *(_DWORD *)(a1 + 12) ^ v1;
  v6 = 16;
  v5[0] = v3;
  v5[1] = (v4 - 1725895733);
  ((void (*)(_QWORD, uint64_t, _QWORD *, uint64_t, _QWORD *, uint64_t *))*(&off_38F180 + v2 - 1707))(*((unsigned int *)*(&off_38F180 + (v2 ^ 0x7F9)) + 1), 26, v5, 16, v5, &v6);
  __asm { BR              X9 }
}

uint64_t sub_1F4F40@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * (int)(((a4 - v6 == v4) * (((v5 + 278167732) & 0xEF6B7DFF) + 1903)) ^ v5))
                            - 12))();
}

uint64_t sub_1F4F80@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;

  v3 = v2 - ((2 * v2) & 0xBEC480C6) - 547210078 + ((v1 - 786) | 0x101);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((904
                                          * (((v3 << (v1 ^ 0xD3)) & 0xE4FF7FEE ^ 0xA4C400C6)
                                           + (v3 ^ 0xAD1DFF94)
                                           - 1610613632 != 310361207)) ^ v1))
                            - 8))();
}

uint64_t sub_1F503C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((3029
                                          * (((v2 - 78) ^ (a1 + v3 + ((v2 - 7) ^ 0x8D8043B3) < 8)) & 1)) ^ v2))
                            - 12))();
}

uint64_t sub_1F5094@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((v2 - v3 < ((a1 - 583) ^ 0x153uLL))
                                          * (((a1 + 1351) | 0x70) ^ 0x90A)) ^ a1))
                            - 12))();
}

uint64_t sub_1F50D4@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((230 * (v2 < (a1 ^ 0xDFD) + 658 + 2 * (a1 ^ 0xDFDu) - 4118)) ^ a1))
                            - 8))();
}

uint64_t sub_1F5114@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v8 = a1 + v6 + a2;
  v9 = v4 + v8;
  v10 = *(_OWORD *)(v9 - 31);
  v11 = v7 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(a4
                                        + 8
                                        * ((((v5 & 0xFFFFFFE0) != 32) * (((a3 - 1742) | 0x582) ^ 0x5EE)) ^ (a3 - 258)))
                            - 12))();
}

void sub_1F5174()
{
  JUMPOUT(0x1F513CLL);
}

uint64_t sub_1F5180@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v3 ^ 0xF0D ^ ((v3 - 962) | 0x50E)) * (v1 != v2)) ^ v3)) - 8))();
}

uint64_t sub_1F51BC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((439 * ((((v2 + 548) ^ (v2 - 1409) ^ 0x873) & v1) == 0)) ^ v2)))();
}

uint64_t sub_1F51F0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  *(_QWORD *)(v7 - 7 + (v5 + v3 - v6)) = *(_QWORD *)(v2 - 7 + (v5 + v3 - v6));
  v8 = ((a1 - 469) ^ 0x74B) + v6 == (v4 & 0xFFFFFFF8);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((8 * v8) | (32 * v8)) ^ a1)) - 12))();
}

uint64_t sub_1F5240@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;

  *(_QWORD *)(a1 + (a3 - v5)) = *(_QWORD *)(v6 + (a3 - v5));
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((8 * (a4 + v5 == v7)) | (32 * (a4 + v5 == v7))) ^ a2)) - 12))();
}

uint64_t sub_1F5270@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 - 37) ^ 0xC5E) * (v1 == v3)) ^ v2)))();
}

uint64_t sub_1F529C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v6 + (v4 + v3)) = *(_BYTE *)(v2 + (v4 + v3));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1645 * (((v5 - 477837845) & 0x1C7B3FBF ^ 0xFFFFF8E1) + v4 == v1)) ^ v5))
                            - 12))();
}

void sub_1F52EC()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 8) = v1;
}

void sub_1F530C(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1F5394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t v68;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, unint64_t *))(*(_QWORD *)(v68 + 18464) - 8))(a1, a2, a3, a4, a5, 1744552986, 1575908867, 974499923, a9, &a68, a11, &STACK[0x7F3D67C455C2D685]);
}

uint64_t sub_1F54DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((117 * (v8 == a6 + ((v7 - a7 - 2819) ^ (v10 - 610)) - 3099)) ^ v7))
                            - 4))();
}

uint64_t sub_1F5524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  uint64_t v18;
  int v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v18
                                        + 8
                                        * (v17 | (4
                                                * (((((v17 + 778612708) & 0xD19745B9) + ((v17 - 2658) ^ 0xFFFFFFFA)) & v19)
                                                 - a17 == -3))))
                            - 12))();
}

uint64_t sub_1F5570@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((((a1 == v3) ^ (v1 + 72)) & 1) * (v1 + 514)) ^ v1))
                            - 8))();
}

uint64_t sub_1F55B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  _BOOL4 v26;

  v22 = v18 - v21 + 2082;
  v23 = 31 * (v18 ^ (v21 + 425));
  v24 = a7 + v18 + 1762;
  v25 = v22 + v20 - 1668800661;
  v26 = a18 - 2036852641 < v25;
  if (a18 - 2036852641 < (v23 ^ 0xCDADE935) != v25 < 0xCDADE887)
    v26 = v25 < 0xCDADE887;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((42 * v26) ^ v24)) - 12))();
}

uint64_t sub_1F5764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v21 = 142545853 * ((((v20 - 152) | 0x6FACA8E8) - ((v20 - 152) & 0x6FACA8E8)) ^ 0x45530787);
  *(_QWORD *)(v20 - 128) = a13;
  *(_QWORD *)(v20 - 120) = a12;
  *(_QWORD *)(v20 - 152) = a14;
  *(_QWORD *)(v20 - 144) = a17;
  *(_DWORD *)(v20 - 112) = v17 - v21 - 98;
  *(_DWORD *)(v20 - 108) = v19 - v21 - 416935343;
  *(_QWORD *)(v20 - 104) = a15;
  v22 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(a5 + 8 * (v17 - 299)) - 4))(v20 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((11
                                                        * (*(_DWORD *)(v20 - 136) != ((((8 * v17) ^ 0x8E0) + 571540368) | 0x800082B6)
                                                                                   + 1925728203)) ^ v17))
                                          - 8))(v22);
}

uint64_t sub_1F586C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9
                                                                                          + 8
                                                                                          * (((*(_DWORD *)(v12 + 48 * (v8 - 1744552987)) == 148591315)
                                                                                            * (a7
                                                                                             + ((v11 - 951) ^ v10)
                                                                                             - 256)) ^ v11))
                                                                              - 8))(a1, a2, a3, a4, v7);
}

uint64_t sub_1F58C0@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  int v4;
  uint64_t v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;

  if ((v2 + 843916382) <= 0x18 && ((1 << (v2 + 94)) & 0x1000149) != 0)
  {
    v7 = a2;
    v8 = v4 + 423;
    v9 = a2 & 0xFFFFFFFFFFFFFFFLL;
    if ((v7 & 0xFFFFFFFFFFFFFFFLL) != 0)
    {
      if (v9 == 3)
      {
        v10 = v8 ^ v4;
        v11 = v8 + a1;
        v12 = (*(uint64_t (**)())(v5 + 48 * (int)v7 + 8))();
        __asm { BR              X8 }
      }
      __asm { BR              X0 }
    }
    __asm { BR              X10 }
  }
  return 4294925278;
}

uint64_t sub_1F5F6C(_DWORD *a1)
{
  unsigned int v1;
  _BOOL4 v2;

  v1 = 375636451 * (a1 ^ 0x533E5A8C);
  v2 = a1[4] + v1 - 349819778 < 0x63;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_38F180 + (int)(*a1 ^ v1 ^ 0x88E))
                                        + 8 * (int)(((4 * v2) | (16 * v2)) ^ *a1 ^ v1)
                                        - 4)
                            - (((*a1 ^ v1 ^ 0x846) + 455) ^ (14 * (*a1 ^ v1 ^ 0x846)) ^ 0xCLL)))();
}

uint64_t sub_1F5FF8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(result + 8) - 0x67D0E52600CC4098) = ((v2 + 1851223557) & 0x91A89875) - a2 + 699594805;
  return result;
}

void sub_1F60A4(uint64_t a1)
{
  int v1;

  v1 = 375636451 * (((a1 | 0x361D7CF0) - (a1 & 0x361D7CF0)) ^ 0x6523267C);
  __asm { BR              X13 }
}

uint64_t sub_1F615C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _DWORD v7[2];
  uint64_t v8;

  v5 = 31090337 * ((v7 & 0xCE49A515 | ~(v7 | 0xCE49A515)) ^ 0xF6373AA3);
  v7[0] = v5 + v1 + 1281;
  v7[1] = v5 - v2 - (((v1 + 1859) ^ 0xD03745AC) & (1759410346 - v4)) + 478864232;
  v8 = v3;
  return ((uint64_t (*)(_DWORD *))(*(_QWORD *)(a1 + 8 * (v1 ^ 0x4D5)) - 8))(v7);
}

void sub_1F62BC(uint64_t a1)
{
  int v1;
  int v2;
  _BOOL4 v4;

  v1 = 1401278017 * (((a1 | 0xC754715A) - (a1 & 0xC754715A)) ^ 0xC37707BD);
  v2 = *(_DWORD *)(a1 + 8) + v1;
  v4 = *(_QWORD *)(a1 + 24) != 0x7C7E375DF5B0AF2ALL && (*(_DWORD *)(a1 + 16) ^ v1) != 50930415;
  __asm { BR              X10 }
}

uint64_t sub_1F637C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x8BF)))(32, 0x101004023FF3BD5) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((79 * v3) ^ v1)) - 8))();
}

uint64_t sub_1F63C8(uint64_t result)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  *(_QWORD *)result = v3 - 0x7C7E375DF5B0AF2ALL;
  *(_DWORD *)(result + 8) = v2;
  *(_DWORD *)(result + 12) = v2;
  *(_QWORD *)(result + 16) = 0x747F746A5E860897;
  *(_DWORD *)(result + 24) = 349819777;
  *(_QWORD *)(v4 - 0x35F5D85ECB9AB877) = result + 0x71888C0647A114CBLL;
  *((_DWORD *)v1 + 3) = 349819777;
  return result;
}

void sub_1F6448(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  BOOL v6;
  int v7;
  _BYTE v8[2592];

  v1 = 375636451 * ((-2 - ((~(_DWORD)a1 | 0x15FD33BF) + (a1 | 0xEA02CC40))) ^ 0x46C36933);
  v2 = *(_DWORD *)(a1 + 24) - v1;
  v3 = *(_QWORD *)a1;
  v4 = *(_DWORD *)(a1 + 20) ^ v1;
  sub_2B070C(v8, 0, 0x128uLL);
  if (v3)
  {
    v5 = v4 - ((2 * v4 - 740675562) & 0xF8200E80) - 436396213;
    v6 = ((2 * v5) & 0xE7FB75F4 ^ 0xE0200480) + (v5 ^ 0x8FEDBDBA) == 1946008346;
  }
  else
  {
    v6 = 1;
  }
  v7 = v6;
  __asm { BR              X9 }
}

uint64_t sub_1F65C4@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  uint64_t (*v5)(uint64_t);

  STACK[0x2F0] = v3;
  LODWORD(STACK[0x6D0]) = v2;
  STACK[0x6C0] = v1;
  v5 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (a1 ^ (97 * (v2 == v4))))
                                       - ((a1 + 185156781) & 0xF4F6B7F9)
                                       + 1821);
  LODWORD(STACK[0x6D8]) = 609550526;
  return v5(1410981407);
}

uint64_t sub_1F6670(uint64_t a1)
{
  int v1;

  *((_BYTE *)&STACK[0xC60] + (unsigned __int16)(-10149 - 25811 * (v1 - 1826)) % 0x3C0u) = 70;
  return (*(uint64_t (**)(uint64_t, uint64_t))(STACK[0x6C0] + 8 * v1))(a1, 960);
}

void sub_1F66E4()
{
  JUMPOUT(0x1F6698);
}

uint64_t sub_1F66EC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X6>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned __int8 v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  int v38;

  v8 = a3 - 79;
  v9 = (unsigned __int16)(7 * (~(_WORD)v5 & 0xF)
                        + 5782
                        - 960 * ((unsigned __int16)((8739 * (7 * (~v5 & 0xFu) + 5782)) >> 16) >> 7));
  v10 = STACK[0xC76];
  LOBYTE(STACK[0xC76]) = *(_BYTE *)(a2 + v9);
  v11 = STACK[0x6D8];
  v12 = ((2 * ((LODWORD(STACK[0x6D8]) ^ 0xCCA42039) % 0xE)) & 4)
      + (((LODWORD(STACK[0x6D8]) ^ 0xCCA42039) % 0xE) ^ 0x7FDF75F2);
  *(_BYTE *)(a2 + v9) = v10;
  v13 = (unsigned __int16)(7 * ((v3 ^ (v7 + 311) ^ v8) % 0xF)
                         + 5789
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v3 ^ (v7 + 311) ^ v8) % 0xF)
                                                                               + 5789)) >> 16) >> 7));
  v14 = STACK[0xC7D];
  LOBYTE(STACK[0xC7D]) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a2 + v13) = v14;
  v15 = STACK[0xC84];
  v16 = (unsigned __int16)(7 * v12 - 8954) % 0x3C0u;
  LOBYTE(STACK[0xC84]) = *(_BYTE *)(a2 + v16);
  LODWORD(v13) = (v4 ^ v6) + (v5 ^ 0xA743754F);
  *(_BYTE *)(a2 + v16) = v15;
  LOBYTE(v9) = STACK[0xC8B];
  v17 = v3 ^ v4 ^ 0xB69FF881;
  v18 = (unsigned __int16)(7 * ((v4 ^ v6) % 0xD)
                         + 5803
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((v4 ^ v6) % 0xD) + 5803)) >> 16) >> 7));
  v19 = ((2 * (v17 - v13)) & 0xFFDFFBDC) + ((v17 - v13) ^ 0x7FEFFDEE);
  v20 = (v3 ^ v11 ^ 0xB3DD0266) - v19;
  LOBYTE(STACK[0xC8B]) = *(_BYTE *)(a2 + v18);
  v21 = ((v17 - ((2 * v17) & 0x99484072) - 861659079) ^ v11) - 595635374;
  *(_BYTE *)(a2 + v18) = v9;
  LOBYTE(v9) = STACK[0xC92];
  v22 = (unsigned __int16)(7 * (((int)v13 + 1297094960) % 0xCu)
                         + 5810
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (((int)v13 + 1297094960) % 0xCu)
                                                                               + 5810)) >> 16) >> 7));
  LOBYTE(STACK[0xC92]) = *(_BYTE *)(a2 + v22);
  *(_BYTE *)(a2 + v22) = v9;
  v23 = (unsigned __int16)(7 * ((v20 + 2146434542) % 0xBu)
                         + 5817
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v20 + 2146434542) % 0xBu) + 5817)) >> 16) >> 7));
  LOBYTE(v12) = *(_BYTE *)(a2 + ((5 * ((v12 + 16) & 0x13 | (47 - v12) & 0xFFFFFFF3)) & 0x39));
  LOBYTE(STACK[0xC99]) = *(_BYTE *)(a2 + v23);
  *(_BYTE *)(a2 + v23) = v12;
  v24 = (unsigned __int16)(7 * (v21 % 0xA)
                         + 5824
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v21 % 0xA) + 5824)) >> 16) >> 7));
  LOBYTE(v23) = STACK[0xCA0];
  LOBYTE(STACK[0xCA0]) = *(_BYTE *)(a2 + v24);
  v25 = ((2 * v21) & 0xA49FF5D6 ^ 0x490A552) + (v21 ^ 0xDD17A856);
  *(_BYTE *)(a2 + v24) = v23;
  LODWORD(v24) = v13 - v20 + v25;
  v26 = v24 - 87;
  LOBYTE(v23) = STACK[0xCA7];
  v27 = (unsigned __int16)(7 * ((v19 - 2146434542) % 9u)
                         + 5831
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v19 - 2146434542) % 9u) + 5831)) >> 16) >> 7));
  LODWORD(v13) = v19 + v13 - v20 - v25 - 1614800833;
  LOWORD(v17) = 771 - (v19 - v25);
  LOBYTE(STACK[0xCA7]) = *(_BYTE *)(a2 + v27);
  v28 = v20 + v25 - 216627279 + v24 - 1248224343;
  *(_BYTE *)(a2 + v27) = v23;
  v29 = (unsigned __int16)(7 * (v17 & 7) + 5838 - 960 * ((unsigned __int16)((8739 * (7 * (v17 & 7) + 5838)) >> 16) >> 7));
  LOBYTE(v16) = STACK[0xCAE];
  LOBYTE(STACK[0xCAE]) = *(_BYTE *)(a2 + v29);
  *(_BYTE *)(a2 + v29) = v16;
  LODWORD(v29) = ((int)v24 + 2064654423) % 6u;
  LODWORD(v22) = v24 + 826746425;
  LOWORD(v24) = (v24 + 9785) ^ v17;
  v30 = (unsigned __int16)(7 * (v28 % 7)
                         + 5845
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v28 % 7) + 5845)) >> 16) >> 7));
  LOBYTE(v16) = STACK[0xCB5];
  LOBYTE(STACK[0xCB5]) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a2 + v30) = v16;
  LOWORD(v30) = v24 - ((2 * v24 - 29966) & 0xDF1A) + 13574;
  LOBYTE(v17) = STACK[0xCBC];
  v31 = (unsigned __int16)(7 * v29
                         + 5852
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * v29 + 5852)) >> 16) >> 7));
  LOBYTE(STACK[0xCBC]) = *(_BYTE *)(a2 + v31);
  *(_BYTE *)(a2 + v31) = v17;
  v32 = (unsigned __int16)(7 * (v13 % 5)
                         + 5859
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v13 % 5) + 5859)) >> 16) >> 7));
  LOBYTE(v17) = STACK[0xCC3];
  v33 = (v28 ^ 0x4B49A8FB) - v22;
  LOBYTE(STACK[0xCC3]) = *(_BYTE *)(a2 + v32);
  LODWORD(v22) = v30 & 0x3C0 ^ 0x380;
  *(_BYTE *)(a2 + v32) = v17;
  LODWORD(v30) = 7 * (v30 & 3 ^ 1) + 5866;
  LOBYTE(v31) = STACK[0xCCA];
  LOBYTE(STACK[0xCCA]) = *(_BYTE *)(a2 + v30 % (v22 + ((646 - (_WORD)v24) & 0x3C0)));
  *(_BYTE *)(a2 + (unsigned __int16)(v30 - 960 * ((unsigned __int16)((8739 * v30) >> 16) >> 7))) = v31;
  LOBYTE(v32) = STACK[0xCD1];
  v34 = (unsigned __int16)(7 * (v33 % 3)
                         + 5873
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v33 % 3) + 5873)) >> 16) >> 7));
  LOBYTE(STACK[0xCD1]) = *(_BYTE *)(a2 + v34);
  *(_BYTE *)(a2 + v34) = v32;
  v35 = ((v24 ^ v26) & 1) == 0;
  v36 = 120;
  if (v35)
    v36 = 127;
  v37 = STACK[0xCD8];
  LOBYTE(STACK[0xCD8]) = *(_BYTE *)(a2 + v36);
  STACK[0x6B8] = a2;
  *(_BYTE *)(a2 + v36) = v37;
  v38 = 7 * (*(unsigned __int8 *)(a2 + (unsigned __int16)(434 * ((v8 - 54) ^ 0x194) + 2744) % 0x3C0u) ^ 0x46) + 6244;
  *(_BYTE *)(a2 + (unsigned __int16)(v38 - 960 * ((unsigned __int16)((17477 * v38) >> 16) >> 8))) = 70;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8
                                                                                                * (int)(v8 ^ 0x3D1))
                                                                     - 8))(a1, 1809638468, 1809638468, 76546482);
}

uint64_t sub_1F6DB4@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + (unsigned __int16)(7 * a2 - 10054) % 0x3C0u) = ((124 * (a3 ^ 0x90)) ^ 0x76)
                                                               + a2
                                                               - ((2 * a2 + 120) & 0x8C);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((90 * (a2 + 1 != a1 + 16)) ^ a3)) - 8))();
}

uint64_t sub_1F6E3C(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  char v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  BOOL v49;
  uint64_t v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;

  v11 = (v1 - 2676) | 0x932;
  v12 = STACK[0xC76];
  v13 = (unsigned __int16)((((v1 - 2676) | 0x932) ^ 0x1FA4)
                         - (v4 & 0xF ^ 5)
                         + 8 * (v4 & 0xF ^ 5)
                         - ((unsigned __int16)(((unsigned __int16)((((v1 - 2676) | 0x932) ^ 0x1FA4)
                                                                               - (v4 & 0xF ^ 5)
                                                                               + 8 * (v4 & 0xF ^ 5))
                                              * v6) >> 16) >> 9)
                         * v7);
  v14 = v10 + v2 - 1;
  LOBYTE(STACK[0xC76]) = *(_BYTE *)(v8 + v13);
  *(_BYTE *)(v8 + v13) = v12;
  v15 = STACK[0xC7D];
  v16 = (unsigned __int16)(7 * (v14 % 0xF)
                         + 5789
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v14 % 0xF) + 5789)) >> 16) >> 7)
                         * v7);
  LOBYTE(STACK[0xC7D]) = *(_BYTE *)(v8 + v16);
  *(_BYTE *)(v8 + v16) = v15;
  v17 = 7 * ((v3 ^ 0xF1396466) % 0xE)
      + 5796
      - ((8739 * (unsigned __int16)(7 * ((v3 ^ 0xF1396466) % 0xE) + 5796)) >> 23) * v7;
  v18 = ~(_WORD)v17 & 0x633D | 0xDEBF0000 | v17 & 0x33D;
  LODWORD(v16) = ~(_WORD)v17 & 0x6319 | 0xDEBF0000 | v17 & 0x319;
  v19 = (unsigned __int16)(7 * ((v3 ^ 0xF1396466) % 0xE)
                         + 5796
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v3 ^ 0xF1396466) % 0xE) + 5796)) >> 16) >> 7)
                         * v7);
  LOBYTE(v16) = *(_BYTE *)(v8 + (v18 ^ v16));
  LOBYTE(STACK[0xC84]) = *(_BYTE *)(v8 + v19);
  v20 = v3 ^ 0xF1396466 ^ v14;
  *(_BYTE *)(v8 + v19) = v16;
  v21 = STACK[0xC8B];
  v22 = (unsigned __int16)(7 * ((a1 ^ v5) % 0xD)
                         + 5803
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((a1 ^ v5) % 0xD) + 5803)) >> 16) >> 7)
                         * v7);
  LOBYTE(STACK[0xC8B]) = *(_BYTE *)(v8 + v22);
  v23 = (v4 ^ 0xAE127895) + (a1 ^ v5);
  LODWORD(v19) = v14 + (a1 ^ v5) - 2 * ((v2 + 1443208596) & (a1 ^ v5));
  v24 = ((2 * (v19 - v23)) & 0xEF6D779E) + ((v19 - v23) ^ 0x77B6BBCF);
  *(_BYTE *)(v8 + v22) = v21;
  LODWORD(v19) = ((v19 - 247896986 - ((2 * v19) & 0xE272C8CC)) ^ v3) + v9;
  v25 = v20 - v24 + 2008464335 - ((2 * (v20 - v24 + 2008464335)) & 0xD20E088E) - 385416121;
  v23 += 1297094960;
  v26 = STACK[0xC92];
  v27 = (unsigned __int16)(7 * (v23 % 0xC)
                         + 5810
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v23 % 0xC) + 5810)) >> 16) >> 7)
                         * v7);
  LOBYTE(STACK[0xC92]) = *(_BYTE *)(v8 + v27);
  *(_BYTE *)(v8 + v27) = v26;
  v28 = (unsigned __int16)(7 * ((v25 ^ 0xE9070447) % 0xB)
                         + 5817
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v25 ^ 0xE9070447) % 0xB) + 5817)) >> 16) >> 7)
                         * v7);
  v29 = STACK[0xC99];
  LOBYTE(STACK[0xC99]) = *(_BYTE *)(v8 + v28);
  v30 = ((2 * (v23 + (v25 ^ 0x16F8FBB8) + 1)) & 0xFFFCEFF2) + ((v23 + (v25 ^ 0x16F8FBB8) + 1) ^ 0xFFFE77F9);
  v31 = (v24 - 2008464335) % 9u;
  *(_BYTE *)(v8 + v28) = v29;
  LOBYTE(v28) = STACK[0xCA0];
  v32 = (unsigned __int16)(7 * (v19 % 0xA)
                         + 5824
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v19 % 0xA) + 5824)) >> 16) >> 7)
                         * v7);
  LOBYTE(STACK[0xCA0]) = *(_BYTE *)(v8 + v32);
  v33 = (v25 ^ 0x69070447) & (v19 ^ 0xF5852BD);
  v34 = v19 ^ 0x665F56FA ^ v25;
  v35 = v24 + (v19 ^ 0x70A7AD42) - 2008363975 + v30;
  v36 = v35 ^ 0x7BF5F7E7;
  *(_BYTE *)(v8 + v32) = v28;
  LODWORD(v28) = (2 * v35) & 0xF7EBEFCE;
  v37 = (unsigned __int16)(7 * v31
                         + 5831
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * v31 + 5831)) >> 16) >> 7)
                         * v7);
  LODWORD(v28) = v28 + v36;
  LOBYTE(v31) = STACK[0xCA7];
  v38 = (v19 ^ 0x8F5852BD) + 98582 + v30 + 1777;
  LOBYTE(v19) = ((v19 ^ 0xBD) + 22 + v30 - 15) ^ 0x77;
  v39 = ((2 * v38) & 0xFFFEFEEE) + (v38 ^ 0xFFFF7F77);
  v40 = v34 + 2 * v33 + v39 + 32905 - 982924527 - ((2 * (v34 + 2 * v33 + v39 + 32905)) & 0x8AD38622);
  LOBYTE(STACK[0xCA7]) = *(_BYTE *)(v8 + v37);
  LOBYTE(v30) = v30 + v28 - 2 * v28 - 78;
  *(_BYTE *)(v8 + v37) = v31;
  v41 = (unsigned __int16)(7 * (v30 & 7 ^ 4)
                         + 5838
                         - ((unsigned __int16)((8739 * (7 * (v30 & 7 ^ 4) + 5838)) >> 16) >> 7) * v7);
  v42 = STACK[0xCAE];
  LOBYTE(STACK[0xCAE]) = *(_BYTE *)(v8 + v41);
  *(_BYTE *)(v8 + v41) = v42;
  LOBYTE(v41) = STACK[0xCB5];
  v43 = (unsigned __int16)(7 * ((v40 ^ 0xC569C311) % 7)
                         + 5845
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v40 ^ 0xC569C311) % 7) + 5845)) >> 16) >> 7)
                         * v7);
  LOBYTE(STACK[0xCB5]) = *(_BYTE *)(v8 + v43);
  *(_BYTE *)(v8 + v43) = v41;
  LODWORD(v27) = ((int)v28 - 2079717351) % 5u;
  v44 = (unsigned __int16)(7 * ((v39 + 32905) % 6)
                         + 5852
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((v39 + 32905) % 6) + 5852)) >> 16) >> 7)
                         * v7);
  LOBYTE(v32) = STACK[0xCBC];
  LOBYTE(STACK[0xCBC]) = *(_BYTE *)(v8 + v44);
  *(_BYTE *)(v8 + v44) = v32;
  LODWORD(v44) = (v40 ^ 0x8E206BEA) - v39 + 1237875093;
  v45 = (unsigned __int16)(7 * v27
                         + 5859
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * v27 + 5859)) >> 16) >> 7)
                         * v7);
  LOBYTE(v30) = (v30 ^ (v39 + 47)) + 121;
  LOBYTE(v40) = STACK[0xCC3];
  LOBYTE(STACK[0xCC3]) = *(_BYTE *)(v8 + v45);
  LODWORD(v22) = v44 % 3;
  *(_BYTE *)(v8 + v45) = v40;
  LOBYTE(v45) = STACK[0xCCA];
  v46 = (unsigned __int16)(7 * (v30 & 3) + 5866 - ((unsigned __int16)((8739 * (7 * (v30 & 3) + 5866)) >> 16) >> 7) * v7);
  LOBYTE(STACK[0xCCA]) = *(_BYTE *)(v8 + v46);
  *(_BYTE *)(v8 + v46) = v45;
  LOBYTE(v45) = STACK[0xCD1];
  v47 = (unsigned __int16)(7 * v22
                         + 5873
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * v22 + 5873)) >> 16) >> 7)
                         * v7);
  LOBYTE(STACK[0xCD1]) = *(_BYTE *)(v8 + v47);
  *(_BYTE *)(v8 + v47) = v45;
  v48 = STACK[0xCD8];
  v49 = ((v30 ^ (v19 + 1)) & 1) == 0;
  v50 = 127;
  if (v49)
    v50 = 120;
  LOBYTE(STACK[0xCD8]) = *(_BYTE *)(v8 + v50);
  *(_BYTE *)(v8 + v50) = v48;
  v51 = 7 * ((((v11 - 281) ^ 0xD6Eu) + 247286409) >> 4) + 6244;
  LOBYTE(v51) = (16
               * *(_BYTE *)(STACK[0x6B8]
                          + (unsigned __int16)(v51 - ((unsigned __int16)((17477 * v51) >> 16) >> 8) * v7))) ^ 0x60;
  v52 = 135
      * (*(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(6244 - 6 * v7)) ^ 0x88 ^ ((_BYTE)v51
                                                                                        + ((2 * (_BYTE)v51) & 0x80)
                                                                                        + 70) & 0xFE)
      + 80595;
  LOBYTE(v51) = *((_BYTE *)*(&off_38F180 + (v11 ^ 0x99D))
                + (v52 - 944 * ((4549754 * (unint64_t)v52) >> 32))
                - 12);
  v53 = ((v51 ^ 0xE5) >> 3) ^ ((v51 ^ 0xE5) >> 1);
  v54 = 7 * (v51 ^ 0x4C ^ (v53 - ((2 * v53) & 0x12) - 119)) + 5782;
  *(_BYTE *)(STACK[0x6B8] + (unsigned __int16)(3983 - ((unsigned __int16)((3983 * v6) >> 16) >> 9) * v7)) = *(_BYTE *)(STACK[0x6B8] + (unsigned __int16)(v54 - ((unsigned __int16)((8739 * v54) >> 16) >> 7) * v7));
  return (*(uint64_t (**)(void))(STACK[0x6C0] + 8 * (v11 ^ 0x346)))();
}

void sub_1F7668()
{
  JUMPOUT(0x1F7520);
}

uint64_t sub_1F7670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  char v18;

  v11 = 7 * ((((25 * (v8 ^ 0x1E)) ^ 0xC) + (_BYTE)a8) & 0xF) + 6244;
  v12 = 7 * ((a8 + 3395) >> 4) + 6244;
  v13 = (16
       * *(_BYTE *)(a2 + (unsigned __int16)(v12 - 960 * ((unsigned __int16)((17477 * v12) >> 16) >> 8)))) ^ 0x60;
  v14 = 135
      * (*(unsigned __int8 *)(a2
                            + (unsigned __int16)(v11 - 960 * ((unsigned __int16)((8739 * v11) >> 16) >> 7))) ^ (v13 + ((2 * v13) & 0x80) + 70) & 0xFE ^ 0xBC)
      + 44955;
  LOBYTE(v14) = *(_BYTE *)(v10 + (v14 - 944 * ((4549754 * (unint64_t)v14) >> 32)));
  v15 = 7 * (((-67 * (v14 ^ 0x89)) ^ ~(4 * ((-67 * (v14 ^ 0x89)) ^ (40 * (v14 ^ 9))))) >> 4) + 5782;
  v16 = 1501808917 - a8 + 8 * a8;
  v17 = v15 - 960 * ((8739 * v15) >> 23);
  if (v16 >= 0xFFFFFC40)
    v16 += 960;
  v18 = (16 * *(_BYTE *)(a2 + (unsigned __int16)v17)) ^ 0x60;
  *(_BYTE *)(a2 + v16) = v18 + ((2 * v18) & 0x80) + 70;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((299
                                * (a8
                                 + (~v16 & 0xC6B53499 | v16 & 0x99) * (~v16 & 0x5067DFA9 | v16 & 0x3A9)
                                 - 1012589245 < 0x100)) ^ v8)))();
}

uint64_t sub_1F7814(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  __int16 v10;
  int v11;
  __int16 v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;

  v16 = 7 * ((v14 + 3881) >> 4) + v8;
  v17 = 7 * (((_BYTE)v14 + 9) & 0xF) + v8;
  v18 = (16
       * *(unsigned __int8 *)(a2
                            + (unsigned __int16)(v16 - ((unsigned __int16)((v16 * v11) >> 16) >> 8) * v10))) ^ 0x60;
  v19 = (v18 + (v18 >> 6 << 7) + 70) ^ *(unsigned __int8 *)(a2
                                                          + (unsigned __int16)(v17
                                                                             - ((unsigned __int16)((v17 * v9) >> 16) >> 7)
                                                                             * v10));
  v20 = 7
      * (*(unsigned __int8 *)(v15
                            + (unsigned __int16)((v19 ^ 0xF) * v12
                                               + 6750
                                               - (unsigned __int16)((v19 ^ 0xF) * v12 + 6750)
                                               / 0x3B0u
                                               * a1)) ^ (v19 - ((2 * v19) & 0x12) - 119) ^ 0xDB)
      + a7;
  *(_BYTE *)(a2 + (unsigned __int16)(7 * v14 + 24884 - (unsigned __int16)(7 * v14 + 24884) / 0x3C0u * v10)) = *(_BYTE *)(a2 + (unsigned __int16)(v20 - ((unsigned __int16)((v20 * v9) >> 16) >> 7) * v10));
  return (*(uint64_t (**)(void))(v13 + 8 * ((4022 * (v14 != 850747862)) ^ v7)))();
}

uint64_t sub_1F7940@<X0>(uint64_t a1@<X1>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v6 = *(_BYTE *)(v5
                + (135
                 * (*(unsigned __int8 *)(a1
                                       + (unsigned __int16)(7 * a2
                                                          + 24720
                                                          - 960
                                                          * ((unsigned __int16)(((unsigned __int16)(7 * a2 + 24720)
                                                                               * a3) >> 16) >> 9))) ^ 0x42u)
                 + 42660)
                % ((v3 + 532) ^ 0xA73u));
  *(_BYTE *)(a1
           + (unsigned __int16)(7 * a2
                              + 22298
                              - 960
                              * ((unsigned __int16)(((unsigned __int16)(7 * a2 + 22298) * a3) >> 16) >> 9))) = ((v6 ^ 0x89) + 98) ^ ((~v6 << 7) | 0x5E) ^ (8 * ((v6 ^ 0x89) + 98));
  return (*(uint64_t (**)(void))(v4 + 8 * ((3692 * (a2 == 1453042843)) ^ v3)))();
}

uint64_t sub_1F7A10(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  int v12;

  v10 = *(_BYTE *)(v9 + (v4 ^ 0x647F4CFBu) * v7 % 0x3B0);
  v11 = (-4 - (v10 & 0x78 ^ 0x70 | (v6 + 53) ^ v10 & 0x78 ^ 0xF0)) ^ v4;
  v12 = 7 * ((v10 ^ (v11 - ((2 * v11) & 0x12) - 119)) ^ 0xC3) + 5782;
  *(_BYTE *)(a2 + 7 * a4 + 1298563327 - (7 * a4 + 1298563327) / 0x3C0u * v5) = *(_BYTE *)(a2
                                                                                        + (unsigned __int16)(v12 - ((unsigned __int16)((8739 * v12) >> 16) >> 7) * v5));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1367 * (a4 == 1655191758)) ^ v6)))();
}

uint64_t sub_1F7B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>)
{
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  int v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t);

  STACK[0x538] = v4;
  v5 = LODWORD(STACK[0x6D0]) == 1945711322;
  LODWORD(STACK[0x6B0]) = -809777514;
  v6 = (a3 ^ 0x1B7) + 1929;
  LODWORD(STACK[0x6C8]) = v6;
  v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                           + 8
                                                           * ((((v5 ^ (5 * (a3 ^ 0xB7))) & 1)
                                                             * (v6 ^ 0x436)) ^ a3));
  LODWORD(STACK[0x6A8]) = 1708956761;
  return v7(a1, a2, 2323575316);
}

uint64_t sub_1F7BC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  _BOOL4 v5;

  v4 = LODWORD(STACK[0x6B4]) - 1133329502;
  v5 = v4 < 0x30707E9C;
  if (v4 >= 0x30707E9C)
    v5 = v4 > 0x30707E9D;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8 * ((39 * v5) ^ (a4 + 2109))) - 8))();
}

void sub_1F7F88()
{
  JUMPOUT(0x1F7C88);
}

uint64_t sub_1F7F94@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v2;
  _BOOL4 v3;

  v2 = LODWORD(STACK[0x6B4]) + 29619513;
  v3 = v2 < 0x75C1B033;
  if (v2 >= 0x75C1B033)
    v3 = v2 > 0x75C1B034;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * ((107 * v3) ^ (a2 - 2257))) - 8))(a1);
}

void sub_1F8294()
{
  JUMPOUT(0x1F8010);
}

uint64_t sub_1F82A8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  unsigned int v8;
  _BOOL4 v9;

  LODWORD(STACK[0x6B0]) = v6;
  v7 = (a6 - 1008) | 0x80;
  LODWORD(STACK[0x6A8]) = (((a2 ^ 0xE8D3039C) + 1598753077) ^ 0x7B3DBFFA)
                        - 50332672
                        + ((2 * ((a2 ^ 0xE8D3039C) + 1598753077)) & 0xF67B7FF4);
  v8 = LODWORD(STACK[0x6B4]) - 1870207530;
  v9 = v8 < 0x484A0D0;
  LODWORD(STACK[0x6C8]) = (v7 + 1589) | 0x18;
  if (v8 >= 0x484A0D0)
    v9 = v8 > 0x484A0D1;
  return (*(uint64_t (**)(uint64_t))(STACK[0x6C0] + 8 * ((575 * v9) ^ (v7 + 109))))(2940096205);
}

void sub_1F8634()
{
  JUMPOUT(0x1F83DCLL);
}

uint64_t sub_1F8640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;

  LODWORD(STACK[0x6D0]) = v8;
  LODWORD(STACK[0x6D8]) = a8;
  LODWORD(STACK[0x38C]) = 0;
  v9 = LODWORD(STACK[0x6C8]) - 321;
  LODWORD(STACK[0x548]) = LODWORD(STACK[0x6B4]) - 1016630346;
  v10 = STACK[0x390];
  LODWORD(STACK[0x300]) = LODWORD(STACK[0x390]) + 1772600628;
  LODWORD(STACK[0x2FC]) = v10 + 622483060;
  LODWORD(STACK[0x380]) = 471218656;
  LODWORD(STACK[0x310]) = -482352367;
  LODWORD(STACK[0x338]) = -900424381;
  LODWORD(STACK[0x364]) = 155913796;
  LODWORD(STACK[0x34C]) = -657797261;
  LODWORD(STACK[0x33C]) = -570607833;
  LODWORD(STACK[0x308]) = -300344411;
  LODWORD(STACK[0x30C]) = -1676620455;
  LODWORD(STACK[0x320]) = 773658865;
  LODWORD(STACK[0x330]) = 1961976892;
  LODWORD(STACK[0x37C]) = -889195682;
  LODWORD(STACK[0x35C]) = -2001910779;
  LODWORD(STACK[0x344]) = 1843261708;
  LODWORD(STACK[0x384]) = 1352259986;
  LODWORD(STACK[0x32C]) = 1409417225;
  LODWORD(STACK[0x314]) = 1467895918;
  LODWORD(STACK[0x378]) = 719395186;
  LODWORD(STACK[0x318]) = 494672875;
  LODWORD(STACK[0x36C]) = -2076025512;
  LODWORD(STACK[0x358]) = 44361715;
  LODWORD(STACK[0x304]) = -191148631;
  LODWORD(STACK[0x360]) = -1412488224;
  LODWORD(STACK[0x324]) = 160034432;
  LODWORD(STACK[0x334]) = 2101220608;
  LODWORD(STACK[0x348]) = -778372353;
  LODWORD(STACK[0x368]) = 859644205;
  LODWORD(STACK[0x340]) = 267396161;
  LODWORD(STACK[0x31C]) = -1747047889;
  LODWORD(STACK[0x374]) = -1946646816;
  LODWORD(STACK[0x350]) = -622382578;
  LODWORD(STACK[0x370]) = -959257667;
  LODWORD(STACK[0x328]) = -964072046;
  LODWORD(STACK[0x3A0]) = 52;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8 * v9) - 8))();
}

uint64_t sub_1F8C5C(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  char v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  char v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  BOOL v74;
  int v75;
  char v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  int v88;
  char v89;
  int v90;
  int v91;
  char v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  unsigned int v101;
  char v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  char v107;
  char v108;
  char v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  char v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  char v167;
  char v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  char v187;
  char v188;
  unsigned __int8 v189;
  int v190;
  char v191;
  char v192;
  int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  char v206;
  int v207;
  char v208;
  char v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  unsigned int v222;
  char v223;
  char v224;
  int v225;
  int v226;
  unsigned int v227;
  int v228;
  char v229;
  char v230;
  char v231;
  char v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  int v238;
  char v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  char v244;
  int v245;
  unsigned int v246;
  int v247;
  char v248;
  unsigned int v249;
  char v250;
  unsigned int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  char v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  char v259;
  int v260;
  char v261;
  int v262;
  int v263;
  int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  char v268;
  unint64_t v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  int v276;
  char v277;
  unsigned int v278;
  unsigned int v279;
  char v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  int v286;
  int v287;
  int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  uint64_t (*v303)(void);

  v16 = 5 * (a2 ^ 0x5EC);
  v17 = a3 - 1600328661 - ((a3 << (v16 + 120)) & 0x4139D856);
  v18 = (v7 ^ 0xA09CEC2B ^ v17) + 550849025 - ((2 * (v7 ^ 0xA09CEC2B ^ v17)) & 0x41AA9402);
  v19 = v13 + v8 + 2;
  v20 = (v19 ^ a5) + 642900847 - ((2 * (v19 ^ a5)) & 0x4CA3C6DE);
  v21 = (((v20 ^ 0x2651E36F) - 1023754895) ^ 0xD177FFEF)
      + 2146400672
      + ((2 * ((v20 ^ 0x2651E36F) - 1023754895)) & 0xA2EFFFDE);
  v22 = v18 ^ 0x20D54A01;
  v23 = ((2 * ((v10 + 138420865 + (v18 ^ 0x20D54A01)) ^ v18)) & 0xF1F3CF9E ^ 0x41A28402)
      + ((v10 + 138420865 + (v18 ^ 0x20D54A01)) ^ v18 ^ 0x582CADCE);
  v24 = ((v23 - 2029643727) ^ (v11 - 1107780828) ^ 0xFEF1EBAD)
      + 867131359
      + ((2 * ((v23 - 2029643727) ^ (v11 - 1107780828))) & 0xFDE3D75A);
  v25 = ((v22 + 1672459324) ^ 0x4FEFFDB7) - 239599649 + ((2 * (v22 + 1672459324)) & 0x9FDFFB6E);
  v26 = v9 + 2147483619 + (v20 ^ 0x2651E36F);
  v27 = (v19 ^ 0xEF93EE9) + 2083437120;
  v28 = v23 - 1208583305;
  v29 = ((2 * ((v26 + 302) ^ v20)) & 0xD9EB7DCC ^ 0x48A344CC) + ((v26 + 302) ^ v20 ^ 0xCAA45D89);
  v30 = v29 + 938405246;
  v31 = ((v29 + 319439130) ^ (a1 + 1964239229) ^ 0xF7A9FFDF)
      + 176095167
      + ((2 * ((v29 + 319439130) ^ (a1 + 1964239229))) & 0xEF53FFBE);
  v32 = (v8 + 44) ^ 0xE8;
  v33 = v17 ^ 0xBEA98FE2;
  v34 = (v17 ^ 0xAE65D2C2) + 504633965;
  v16 += 87;
  LODWORD(STACK[0x518]) = v27 + 162121547;
  LODWORD(STACK[0x514]) = v24 + 2017123706;
  v35 = v27 - v31 + 2104491889;
  LODWORD(STACK[0x638]) = -1215659942 - v29 - ((713857970 - ((v29 + 938405246) << ((v16 | 7) + 26))) & 0x34663FFE);
  LODWORD(STACK[0x510]) = v21 + 1855524258;
  LODWORD(STACK[0x524]) = 95335925 - v31;
  LODWORD(STACK[0x634]) = 1711690692 - v25 - ((223831088 - 2 * v25) & 0x1EB54358);
  v36 = (v25 - 1101528470) & 0xA0B4F6CB;
  LODWORD(STACK[0x534]) = v28 - 1659907388;
  v37 = v31 - v30;
  LODWORD(STACK[0x628]) = 368287919 - v34 - ((-2123132666 - 2 * v34) & 0xAA73B058);
  v38 = v34 + v25 - 1749442032;
  v39 = v34 - v24 + 201517874;
  v35 ^= 0x24AF81B7u;
  v40 = v21 + (v36 ^ 0xA0B4F6CB) + v27 + v36 + 702514756;
  v41 = v40 - ((2 * v40) & 0xBFBF6D34) + 1608496794;
  v42 = ((2 * v41) & 0xFA6BFAFE ^ 0x3A2270D6) + (v41 ^ 0x60AEC594);
  LODWORD(STACK[0x51C]) = v30 - 1489333206;
  LODWORD(STACK[0x52C]) = 223715167 - v28;
  v43 = ((2 * v38) & 0x72FEDBB8 ^ 0x8818A0) + (v38 ^ 0xFB3BE3AD);
  LODWORD(STACK[0x528]) = 135693105 - v35 - ((1001341250 - 2 * v35) & 0x547DC520);
  v44 = v37 - v42 - 670113228;
  v45 = v24 - v28;
  v39 ^= 0x24AF81B7u;
  LODWORD(STACK[0x644]) = -1691819265 - v45 - ((-1344021522 - 2 * v45) & 0x866DEA10);
  LODWORD(STACK[0x520]) = v39 + 397765652;
  v46 = v35 - 1410592283 + v44;
  LODWORD(STACK[0x530]) = v43 + 1611017821;
  v47 = (v41 ^ 0xA47EB827) + ((2 * v41) & 0xBE96126A ^ 0xB6020221);
  LODWORD(STACK[0x50C]) = v37 + 1800976872;
  v48 = v42 + v30;
  LODWORD(STACK[0x388]) = v43;
  v49 = v45 - v43 - 269763195;
  v50 = v47 - v48 + 1 - ((2 * (v47 - v48 + 1) + 94323032) & 0x5DA7CE46) + 1906542543;
  v51 = (v38 ^ 0xA4EA0788)
      - (v43
       + v28)
      + 1785712930
      + a7
      - (v12 & (2 * ((v38 ^ 0xA4EA0788) - (v43 + v28) + 1785712930)));
  LODWORD(STACK[0x640]) = -746033160 - v42 - ((-442809188 - 2 * v42) & 0xC1759B54);
  LODWORD(STACK[0x6D8]) = v43 + v28 - 2 * ((v43 + v28 + 212731016) & (v14 + 6) ^ (v43 + v28) & 6) - 1978885287;
  v52 = v44 ^ 0x75190902 ^ v50;
  LODWORD(STACK[0x6D0]) = v49 ^ 0x7260858E ^ v51;
  v53 = v49 + v39 - 2 * ((v49 + v39 + 364821632) & (v15 + 20) ^ (v49 + v39) & 0x14) + 1193716394;
  LODWORD(STACK[0x508]) = 1701082825;
  LODWORD(STACK[0x3AC]) = 1434762100;
  LODWORD(STACK[0x6C8]) = v16 | 7;
  v54 = v53 ^ v33 ^ ((v16 | 7) + 793938287);
  LOBYTE(v41) = v32 ^ (v46 - ((2 * v46 + 54) & 2) - 100);
  LOBYTE(STACK[0xC76]) = v41 ^ 0xD3;
  v55 = v52 ^ 0xDBCAEE21;
  v56 = (v52 ^ 0xDBCAEE21) + (v50 ^ 0xAED3E723);
  LOBYTE(v41) = (v41 + 35 - ((2 * v41) & 0x46)) ^ v50;
  LOBYTE(STACK[0xE44]) = v54 - ((2 * v54) & 0x8C) + 70;
  v57 = (v54 + a7 - ((2 * v54) & v12)) ^ v51;
  LOBYTE(STACK[0xE4B]) = v57 - ((2 * v57) & 0x8C) + 70;
  v58 = STACK[0x6D0];
  v59 = LODWORD(STACK[0x6D0]) ^ 0xB707F9BF;
  v60 = v59 + (v51 ^ a7);
  v61 = (v57 - 1224214081 - ((2 * v57) & 0x6E0FF37E)) ^ LODWORD(STACK[0x6D0]);
  v62 = (v41 + 33 - ((2 * v41) & 0x42)) ^ v52;
  LOBYTE(v50) = (v62 - 122 - ((2 * v62) & 0xC)) ^ (v48 - ((2 * v48 - 114) & 0xC) + 77);
  v63 = v56 + (v52 ^ 0xDBCAEE21) - 920553766 - ((2 * (v56 + (v52 ^ 0xDBCAEE21))) & 0x9242EDB4);
  LOBYTE(STACK[0xC84]) = v62 ^ 0xD3;
  LOBYTE(STACK[0xC7D]) = v41 ^ 0xD3;
  v64 = ((v48 - ((2 * v48 + 168187790) & 0xF2C310C) + 1285112909) ^ 0x87961886) - v56 + (v63 ^ 0x36DE8925);
  LOBYTE(STACK[0xE52]) = v61 - ((2 * v61) & 0x8C) + 70;
  v65 = STACK[0x6D8];
  v66 = (v61 + 224302801 - ((2 * v61) & 0x1ABD2DA2)) ^ LODWORD(STACK[0x6D8]);
  v67 = v52 ^ 0x243511DE;
  v68 = (v53 ^ v15) + (v58 ^ 0x48F80640) + 1196511587;
  LOBYTE(STACK[0xE59]) = v66 + (~(2 * v66) | 0x73) + 71;
  v69 = v60 + v59 - 877871958 - ((2 * (v60 + v59)) & 0x97597954);
  v70 = v66 ^ v68;
  LOBYTE(STACK[0xE60]) = v70 - ((2 * v70) & 0x8C) + 70;
  v71 = (v70 - 877871958 - ((2 * v70) & 0x97597954)) ^ v69;
  v72 = (v52 ^ 0x243511DE) + v46 - 1323041794;
  LOBYTE(STACK[0xC8B]) = v50 ^ 0xD3;
  LOBYTE(v50) = v50 ^ v72;
  LOBYTE(STACK[0xE67]) = v71 - ((2 * v71) & 0x8C) + 70;
  v73 = ((2 * (v63 ^ v52)) & 0xFFFA7FFE ^ 0x25D231F6) + (v63 ^ v52 ^ 0x6D16A704);
  v74 = LODWORD(STACK[0x548]) == 929377968;
  ++v64;
  v75 = (v71 - 1224214081 - ((2 * v71) & 0x6E0FF37E)) ^ v58;
  v76 = (v50 - 38 - ((2 * v50) & 0xB4)) ^ v63;
  v77 = (v69 ^ 0x34534355) - v60 + (v65 ^ 0xD5E96D1) + 1;
  LOBYTE(v52) = (v76 + 33 - ((2 * v76) & 0x42)) ^ v52;
  LOBYTE(STACK[0xE6E]) = v75 + (~(2 * v75) | 0x73) + 71;
  LOBYTE(v63) = v52 ^ v64;
  v78 = v67 + v64 + 1;
  LOBYTE(STACK[0xC92]) = v50 ^ 0xD3;
  LOBYTE(STACK[0xC99]) = v76 ^ 0xD3;
  v79 = v72 - v78;
  v80 = v75 ^ v77;
  v81 = (v58 ^ 0x48F80640) + v77 + 1;
  v82 = v68 - v81;
  LOBYTE(STACK[0xCA0]) = v52 ^ 0xD3;
  v83 = v78 - (v72 - v78) + 1958169763 - ((2 * (v78 - (v72 - v78))) & 0xE96E9946);
  v84 = v58 ^ 0x7CAB4515 ^ v69;
  v85 = v81 - v82 + 2119456302 - ((2 * (v81 - v82)) & 0xFCA8AC5C);
  v86 = v83 ^ 0x74B74CA3;
  LOBYTE(STACK[0xE75]) = v80 - ((2 * v80) & 0x8C) + 70;
  v87 = v55
      - 2068978999
      + (v83 ^ 0x74B74CA3)
      + 1777707055
      - ((2 * (v55 - 2068978999 + (v83 ^ 0x74B74CA3))) & 0xD3EB505E);
  v88 = v80 ^ (v82 - 1620707570);
  LOBYTE(STACK[0xCA7]) = v63 ^ 0xD3;
  LOBYTE(STACK[0xE7C]) = v88 - ((2 * v88) & 0x8C) + 70;
  v89 = (v73 - ((2 * v73 + 92) & 0x3C) + 76) ^ v63 ^ (v79 + 14);
  v90 = v88 ^ (v84 - 2080828115);
  LOBYTE(STACK[0xE83]) = v90 - ((2 * v90) & 0x8C) + 70;
  v91 = v59 - 2068978999 + (v85 ^ 0x7E54562E);
  v92 = ((v89 ^ 0x1E) + 47 - ((2 * (v89 ^ 0x1E)) & 0x5E)) ^ v87;
  v93 = v87 ^ 0x8DEF3EB8;
  LOBYTE(STACK[0xCAE]) = (((v63 ^ (v79 + 14)) & 8 | 0x95) ^ (v63 ^ (v79 + 14)) & 0xF7)
                       - ((2 * (((v63 ^ (v79 + 14)) & 8 | 0x95) ^ (v63 ^ (v79 + 14)) & 0xF7)) & 0x8C)
                       + 70;
  v94 = v90 ^ v91;
  LOBYTE(STACK[0xCB5]) = v89 ^ 0xCD;
  v95 = (v79 - ((2 * (v79 - 1620707570)) & 0xE96E9946) + 337462193) ^ v83;
  LOBYTE(STACK[0xE8A]) = v94 - ((2 * v94) & 0x8C) + 70;
  v96 = v73 - (v87 ^ 0x8DEF3EB8) - 1719660896 - ((2 * (v73 - (v87 ^ 0x8DEF3EB8) + 1559571262)) & 0x7915C6C4);
  LOBYTE(v83) = (v92 - 93 - ((2 * v92) & 0x46)) ^ v83;
  v97 = (v94 + 2119456302 - ((2 * v94) & 0xFCA8AC5C)) ^ v85;
  v98 = (v95 + 1777707055 - ((2 * v95) & 0xD3EB505E)) ^ 0xE41A9697 ^ v87;
  LOBYTE(STACK[0xCC3]) = v83 ^ 0xD3;
  v99 = (v82 - 2 * ((v82 - 1620707570) & 0x7E54562F ^ v82 & 1) + 498748732) ^ v85 ^ v91;
  LOBYTE(STACK[0xCBC]) = v92 ^ 0xD3;
  LOBYTE(STACK[0xE91]) = v97 - ((2 * v97) & 0x8C) + 70;
  v100 = (v91 ^ 0x1BE56968) + v84 - ((2 * ((v91 ^ 0x1BE56968) + v84) + 971298428) & 0x34586504) + 1998495168;
  v101 = (v97 - 703337102 - ((2 * v97) & 0xAC27DAE4)) ^ v99 ^ 0x32097BE5;
  LOBYTE(v83) = v83 ^ v98;
  LOBYTE(STACK[0xE98]) = v101 - ((2 * v101) & 0x8C) + 70;
  v102 = (v83 + 98 - ((2 * v83) & 0xC4)) ^ v96;
  v103 = v100 ^ 0x9A2C3282;
  v104 = (v85 ^ 0x7E54562E) + 222383983 + (v100 ^ 0x9A2C3282);
  v105 = v96 ^ 0x3C8AE362;
  v106 = v86 + 222383983 + (v96 ^ 0x3C8AE362);
  LOBYTE(STACK[0xCD1]) = v102 ^ 0xD3;
  v107 = v102 ^ (v93 - 101);
  v108 = v107 ^ 0xD3;
  v109 = v107 ^ v106;
  LOBYTE(STACK[0xCD8]) = v108;
  v110 = (v101 - 1708379518 - ((2 * v101) & 0x34586504)) ^ v100;
  v111 = v106 ^ v96;
  LOBYTE(STACK[0xCCA]) = v83 ^ 0xD3;
  v112 = (v91 ^ 0xE41A9697) + 1965514907;
  LOBYTE(STACK[0xE9F]) = v110 - ((2 * v110) & 0x8C) + 70;
  v113 = v110 ^ v112;
  LOBYTE(STACK[0xEA6]) = v113 - ((2 * v113) & 0x8C) + 70;
  v114 = v111 & 0x209260CA;
  v115 = v111 & 0x209260CA ^ 0x20826042;
  v116 = v113 ^ v104;
  v111 ^= 0x3C8AE362u;
  v117 = v99 & 0x21074043 ^ 0x1054040 | v99 & 0x21074043 ^ 0x20020003 | (v115 + (v114 ^ 0x100088));
  LOBYTE(STACK[0xCDF]) = v109 ^ 0xD3;
  v118 = (v104 ^ v100 ^ 0xB7E5DC6E) - 768208620 + ((2 * (v104 ^ v100)) & 0x5B93DDD8 ^ 0x10104500);
  v119 = v118 + v112 - ((2 * (v118 + v112)) & 0xA99032C8) + 1422399844;
  v120 = v98 - 369504901 * v117;
  LOBYTE(STACK[0xEAD]) = v116 - ((2 * v116) & 0x8C) + 70;
  v121 = v118 + v103;
  v122 = v111 + v105;
  v123 = (v116 - 703337102 - ((2 * v116) & 0xAC27DAE4)) ^ v99 ^ 0x32097BE5;
  v124 = v99 ^ 0xB0D28FF3 ^ v119;
  v125 = v121 - ((2 * v121 - 614083518) & 0xF73AF69E) + 1766876528;
  v126 = (v120 - 1152454793) ^ (v111 + v93 + 1965514907);
  v127 = v126 ^ 0xDD0BBC35;
  LOBYTE(v105) = v109 ^ (v120 + 119) ^ (v111 + v105 + 33);
  LOBYTE(STACK[0xEB4]) = v123 - ((2 * v123) & 0x8C) + 70;
  v128 = (v123 + 2073918287 - ((2 * v123) & 0xF73AF69E)) ^ v125;
  LOBYTE(STACK[0xCE6]) = v109 ^ (v120 + 119) ^ 0xD3;
  LOBYTE(v98) = (v105 + 53 - ((2 * v105) & 0x6A)) ^ (v120 + 119) ^ (v111 + v93 - 101) ^ 0x35;
  v129 = v126 + v111;
  v130 = (v120 - ((2 * v120 + 1990057710) & 0xBA17786A) - 1738888276) ^ v127;
  LOBYTE(STACK[0xEBB]) = v128 - ((2 * v128) & 0x8C) + 70;
  v131 = v124 + v118;
  v132 = v128 ^ v124;
  v133 = v98 ^ 0xD3;
  LOBYTE(v98) = v98 ^ v129;
  LOBYTE(v127) = v98 ^ 0xCB;
  LOBYTE(STACK[0xCED]) = v105 ^ 0xD3;
  v134 = v122 - 307041759 - v130;
  LOBYTE(STACK[0xEC2]) = v132 - ((2 * v132) & 0x8C) + 70;
  LOBYTE(STACK[0xCF4]) = v133;
  v135 = v99 ^ 0x1BE56968;
  v136 = v125 ^ 0x7B9D7B4F;
  v119 ^= 0xAB37E69B;
  v137 = v132 ^ v131;
  LOBYTE(STACK[0xCFB]) = v98 ^ 0xD3;
  v138 = v99 ^ 0xE41A9697;
  v139 = (v99 ^ 0xE41A9697) - ((2 * (v99 ^ 0xE41A9697) + 68836958) & 0x2A1A2858) - 1759886501;
  LOBYTE(STACK[0xEC9]) = v137 ^ 0x46;
  LOBYTE(STACK[0xED0]) = (v137 ^ v139 ^ 0x2C) - 2 * ((v137 ^ v139 ^ 0x2C) & 0xC7 ^ (v137 ^ v139) & 1) + 70;
  v140 = v135 + v119 + v131 + 527471303;
  v141 = v137 ^ (v119 + (v125 ^ 0x7B9D7B4F) + 542908300 - ((2 * (v119 + (v125 ^ 0x7B9D7B4F) + 1)) & 0x40B83F16));
  LOBYTE(STACK[0xED7]) = (v141 ^ 0x8B) - ((2 * (v141 ^ 0x8B)) & 0x8C) + 70;
  v142 = (v119 + (v125 ^ 0x7B9D7B4F) + 353178669 - ((2 * (v119 + (v125 ^ 0x7B9D7B4F) + 1)) & 0x2A1A2858)) ^ v139;
  LOBYTE(STACK[0xD02]) = v127 ^ (v120 - ((2 * (v120 - 90)) & 0x96) + 113) ^ 0xD3;
  v143 = ((v141 ^ 0x205C1F8B) + 2073918287 - 2 * ((v141 ^ 0x205C1F8B) & 0x7B9D7B5F ^ v141 & 0x10)) ^ v125;
  LOBYTE(v125) = v127 ^ (v122 + 33 - v130 - 53 - ((2 * (v122 + 33 - v130)) & 0x96));
  v144 = ((2 * (v136 + (v139 ^ 0x150D142C))) & 0x8FF7EFFE) + ((v136 + (v139 ^ 0x150D142C)) ^ 0x47FBF7FF);
  LOBYTE(STACK[0xEDE]) = v143 - ((2 * v143) & 0x8C) + 70;
  LOBYTE(v139) = v125 ^ (v122 + 33);
  v145 = v129 - v120 - v130 + 1679926094;
  v146 = v143 ^ v140;
  v147 = v120 + v122;
  LOBYTE(STACK[0xEE5]) = v146 - ((2 * v146) & 0x8C) + 70;
  LOBYTE(STACK[0xD10]) = v139 ^ 0xD3;
  LOBYTE(v135) = v139 ^ v145;
  v148 = (v134 ^ (v120 + 1029447334)) - v147;
  v149 = v148 + 722434197;
  v150 = v145 - v147 + v148 + 722434197;
  v151 = v150 - 504170827;
  v152 = v142 - v144;
  v153 = ((2 * ((v147 + 722405575) ^ (v120 + 2059837235))) & 0xF7AF7FEA)
       + ((v147 + 722405575) ^ (v120 + 2059837235) ^ 0xFBD7BFF5);
  LOBYTE(STACK[0xD09]) = v125 ^ 0xD3;
  v154 = v120 + 729020838 + v150 - 504170827;
  v155 = v152 + v140 - v144;
  LOBYTE(v140) = v135 ^ (v120 - 90 + v150 - 75);
  LOBYTE(v115) = v140 ^ (v148 - 124);
  v156 = ((2 * ((v144 - 1207695359) ^ (v138 - 1082675268))) & 0x7E7FDF7A)
       + ((v144 - 1207695359) ^ (v138 - 1082675268) ^ 0x3F3FEFBD);
  v157 = v138 + 1664973573 + v155;
  v158 = v146 ^ v157;
  LOBYTE(STACK[0xEEC]) = v158 - ((2 * v158) & 0x8C) + 70;
  LOBYTE(STACK[0xD17]) = v135 ^ 0xD3;
  LOBYTE(v135) = v115 ^ (v153 + 11);
  v159 = v158 ^ (v152 + 1539953482);
  LOBYTE(STACK[0xD25]) = v115 ^ 0xD3;
  LOBYTE(STACK[0xD1E]) = v140 ^ 0xD3;
  v152 += 1482981935;
  LOBYTE(STACK[0xEF3]) = v159 - ((2 * v159) & 0x8C) + 70;
  v160 = v159 ^ (v156 - 1061154749);
  LOBYTE(STACK[0xEFA]) = v160 + (~(2 * v160) | 0x73) + 71;
  v161 = v160 ^ (v155 - 1547318455);
  v162 = (-69746699 - v153 + v154) ^ (v148 - 447118999);
  LOBYTE(STACK[0xF01]) = v161 - ((2 * v161) & 0x8C) + 70;
  v163 = (v157 + 1061154749 - v156) ^ v152;
  LOBYTE(v148) = v135 ^ 0xD3;
  LOBYTE(v150) = v135 ^ (v150 + 40);
  v164 = v153 - 1674518529 + v149;
  LOBYTE(STACK[0xD2C]) = v148;
  v165 = v161 ^ v163;
  LOBYTE(STACK[0xD33]) = v150 ^ 0xD3;
  LOBYTE(v150) = v150 ^ v162;
  v166 = v151 - v153 + 1455070257;
  LOBYTE(v144) = v150 ^ 0xD3;
  LOBYTE(v150) = v150 ^ v164;
  LOBYTE(STACK[0xD3A]) = v144;
  v167 = v150 ^ (v153 + 23);
  v168 = v167 ^ v166;
  v169 = v152 - 1635866781 + v156;
  LOBYTE(STACK[0xF08]) = v165 - ((2 * v165) & 0x8C) + 70;
  LOBYTE(STACK[0xD41]) = v150 ^ 0xD3;
  v170 = v165 ^ v169;
  v171 = v162 + v153;
  LOBYTE(STACK[0xF0F]) = v170 - ((2 * v170) & 0x8C) + 70;
  v172 = v170 ^ (v156 - 743418801);
  LOBYTE(STACK[0xF16]) = v172 + (~(2 * v172) | 0x73) + 71;
  v173 = v163 + v156 - ((2 * (v163 + v156) - 1187921050) & 0xC5C79674);
  v174 = v166 + v153 + 387482647;
  v175 = v162 + v153 - 1610542725 + v174 - 1715738828 - ((2 * (v162 + v153 - 1610542725 + v174)) & 0x3377CE68);
  LOBYTE(STACK[0xD4F]) = v168 ^ 0xD3;
  v176 = !v74;
  v177 = v155 - v156 - 1925497649;
  v178 = v173 - 1082348307;
  v179 = v172 ^ v177;
  LOBYTE(STACK[0xD48]) = v167 ^ 0xD3;
  v180 = v177 + v156 - 743418801;
  v181 = v171 + 280026855 * (((v175 & 0x107238A4 ^ 0x10322024) + (v175 & 0x107238A4 ^ 0x401880)) ^ 0xEC6D1055);
  v182 = v180 ^ v169;
  LOBYTE(STACK[0xF1D]) = v179 - ((2 * v179) & 0x8C) + 70;
  v183 = (v179 + 1659095866 - ((2 * v179) & 0xC5C79674)) ^ v178;
  v184 = (v178 ^ 0x62E3CB3A) + v180;
  v185 = v156 + 1576234791 + v182;
  v186 = v153 - 1587831057 + (v174 ^ v164);
  v187 = v168 ^ (v162 + v153 + 123);
  v188 = v187 ^ v186;
  LOBYTE(STACK[0xF24]) = v183 + (~(2 * v183) | 0x73) + 71;
  LOBYTE(STACK[0xD56]) = v187 ^ 0xD3;
  v189 = v187 ^ v186 ^ 0x68 | v187 ^ v186 ^ 0x95;
  v190 = v183 ^ v185;
  v191 = v187 ^ v186 ^ (v153 + 76);
  *(_BYTE *)(STACK[0x6B8] + (v189 & 0xFD)) = v188 ^ 0xD3;
  v192 = (v191 + 52 - ((2 * v191) & 0x68)) ^ v175;
  LOBYTE(STACK[0xF2B]) = v190 + (~(2 * v190) | 0x73) + 71;
  v193 = v190 ^ (v156 - 511410556);
  LOBYTE(STACK[0xF32]) = v193 - ((2 * v193) & 0x8C) + 70;
  LOBYTE(STACK[0xD64]) = v191 ^ 0xD3;
  LOBYTE(STACK[0xD6B]) = v192 ^ 0xD3;
  v194 = v193 ^ v184;
  LOBYTE(STACK[0xF39]) = v194 - ((2 * v194) & 0x8C) + 70;
  v195 = v186 + v171;
  v196 = (v178 ^ 0x62E3CB3A) + v185;
  v197 = v162 + v195;
  v198 = v156 - 198418060;
  v199 = v197 + 1751941183;
  v200 = v195 + v153;
  v201 = v196 + (v178 ^ 0x62E3CB3A) - v198;
  v202 = v194 ^ v201;
  LOBYTE(STACK[0xF40]) = v202 - ((2 * v202) & 0x8C) + 70;
  v203 = ((v181 + 2121140536 - ((2 * (v181 - 458087932)) & 0x3377CE68)) ^ v175) - (v197 + 1751941183);
  v204 = v203 - ((2 * v203 - 1073881846) & 0xFC997CCA) - 565465878;
  v196 -= 2146437509;
  v205 = v196 + v198;
  v206 = v192 ^ (v197 - 70);
  v207 = v202 ^ v196;
  LOBYTE(STACK[0xF47]) = v207 - ((2 * v207) & 0x8C) + 70;
  LOBYTE(STACK[0xD79]) = v206 ^ (v195 - 10) ^ 0xD3;
  v208 = v206 ^ (v195 - 10) ^ (v200 + 50);
  v209 = v208 ^ v204;
  v210 = v207 ^ v205;
  v211 = ((v184 + 1659095866 - ((2 * v184) & 0xC5C79674)) ^ v178) - v201;
  v212 = v204 ^ (v195 - ((2 * v195 - 129411026) & 0xFC997CCA) + 2054253180);
  v213 = ((2 * v204) & 0xEEFF9E7E ^ 0x48F61638) + (v204 ^ 0xD304E4A3);
  LOBYTE(STACK[0xD72]) = v206 ^ 0xD3;
  v214 = v205 - v201;
  LOBYTE(STACK[0xF4E]) = v210 - ((2 * v210) & 0x8C) + 70;
  v197 -= 1422419476;
  v215 = v210 ^ v211;
  LOBYTE(STACK[0xF55]) = v215 ^ 0x46;
  LOBYTE(STACK[0xD87]) = v209 ^ 0xB6;
  v216 = v200 - v199;
  v217 = v212 ^ v197;
  LOBYTE(STACK[0xD80]) = v208 ^ 0xD3;
  v201 -= 1563817934;
  v218 = ((-182425693 - v213) & 0xDC13A421) + v196 + ((v213 + 182425692) & 0xDC13A421);
  v219 = v211 ^ 0x49B7785B ^ (v218 - ((2 * v218) & 0x2701DB44) - 1820267102);
  v220 = v219 ^ v201;
  LOBYTE(v218) = (v212 ^ v197 ^ v209 ^ 0x9C) - ((2 * (v212 ^ v197 ^ v209 ^ 0x9C)) & 0x2A);
  v221 = (v213 + 182425692) ^ (v216 - 1213954121);
  v222 = v211 ^ 0xDA3795F9;
  LOBYTE(STACK[0xF5C]) = (v215 ^ v219 ^ v201) - ((2 * (v215 ^ v219 ^ v201)) & 0x8C) + 70;
  v223 = v209 ^ v197;
  v224 = v223 ^ 0x8C;
  v225 = (v222 - 2107676773) ^ v214;
  v226 = v215 ^ v201;
  v227 = v226 ^ 0x85162979;
  LOBYTE(STACK[0xF63]) = v226 ^ 0x46;
  LOBYTE(STACK[0xD8E]) = v218 - 107 - ((2 * (v218 - 107)) & 0x8C) + 70;
  v228 = 2 * v221;
  if ((v223 & 0x10) != 0)
    v229 = -16;
  else
    v229 = 16;
  v230 = v229 + (v223 ^ 0x65);
  v231 = v227 ^ (v225 - ((2 * v225) & 0xF2) + 121);
  v232 = v224 ^ (v216 - ((2 * (v216 - 73)) & 0xD2) - 96);
  LOBYTE(STACK[0xD9C]) = v224 ^ 0xD3 ^ (v221 - (v228 & 0xD2) - 23);
  LOBYTE(STACK[0xD95]) = v230 ^ 0xC3;
  v233 = v213 - ((2 * v213 + 935239234) & 0x6FEE09FC) - 740928481;
  LOBYTE(STACK[0xF6A]) = v231 - ((2 * v231) & 0x8C) + 70;
  v234 = (v212 ^ 0xDA3795F9) + (v217 ^ 0xDA3795F9) + (v233 ^ 0xC808FB01) + 1;
  v235 = v234 - 349832779 - ((2 * v234) & 0xD64BF36A);
  v236 = v227 ^ (v214 - 2062145159 - ((2 * v214) & 0xA2C52F2));
  LOBYTE(STACK[0xDA3]) = v232 ^ 0xD3;
  v237 = ((v217 ^ 0xDC21E020) + 938935550 - ((2 * (v217 ^ 0xDC21E020)) & 0x6FEE09FC)) ^ 0x38266952 ^ v233;
  LOBYTE(STACK[0xF71]) = (v227 ^ (v214 + 121 - ((2 * v214) & 0xF2)))
                       - ((2 * (v227 ^ (v214 + 121 - ((2 * v214) & 0xF2)))) & 0x8C)
                       + 70;
  v238 = v222 - 2 * ((v222 + 325000800) & 0x1FAEF0D5 ^ v222 & 0x10) - 1290924251;
  v239 = v232 ^ ((v217 ^ 0x20) - 2 - ((2 * (v217 ^ 0x20)) & 0xFC)) ^ 0x52 ^ v233;
  v240 = v238 ^ v225 ^ v220 ^ 0x61675D9;
  v241 = v233 ^ v217 ^ (v221 + 938935550 - (v228 & 0x6FEE09FC));
  v242 = (v238 ^ 0x60510F3A) + v219 + v220 + 1044213206 - ((2 * ((v238 ^ 0x60510F3A) + v219 + v220 + 1)) & 0x7C7ADBAA);
  LOBYTE(STACK[0xDAA]) = v239 ^ 0xD3;
  v243 = ((v220 ^ 0x61675D9) + 1538222810 - ((2 * (v220 ^ 0x61675D9)) & 0xB75ED5B4)) ^ v238 ^ 0xFC27F34D;
  v244 = (v239 - 75 - ((2 * v239) & 0x6A)) ^ v235;
  v245 = v236 ^ v243;
  LOBYTE(STACK[0xDB1]) = v244 ^ 0xD3;
  v246 = v241 ^ 0xDC21E020;
  LOBYTE(STACK[0xF78]) = v245 + (~(2 * v245) | 0x73) + 71;
  v247 = (v245 + 1044213205 - ((2 * v245) & 0x7C7ADBAA)) ^ v242;
  LOBYTE(STACK[0xF7F]) = v247 - ((2 * v247) & 0x8C) + 70;
  v248 = v241 ^ (v244 - ((2 * v244) & 0xFA) - 3);
  v233 ^= 0xFD16DACu;
  v249 = v240 ^ 0xFF12974E ^ (v247 - ((2 * v247) & 0xC178CF16) + 1622960011);
  LOBYTE(STACK[0xF86]) = v249 - ((2 * v249) & 0x8C) + 70;
  v250 = v248 ^ v233;
  v251 = (v241 ^ 0x37041995 ^ v235) - ((2 * (v241 ^ 0x37041995 ^ v235) + 1433858588) & 0x8F816A6C) + 1920740932;
  v252 = (v249 + 1538222810 - ((2 * v249) & 0xB75ED5B4)) ^ v238 ^ 0xFC27F34D;
  v253 = v237 + v246 + (v251 ^ 0x383F4AC9) + 1;
  v254 = v233 - 943672010 - ((2 * v233) & 0x8F816A6C);
  v255 = v248 ^ v233 ^ v253;
  v256 = (v240 ^ 0xA1939D10 ^ v242) - ((2 * (v240 ^ 0xA1939D10 ^ v242) + 1433858588) & 0x8223CD62) - 338862145;
  LOBYTE(STACK[0xF8D]) = v252 - ((2 * v252) & 0x8C) + 70;
  v257 = (v240 ^ 0x9FAEF0C5) + v243 + (v256 ^ 0xBEEE194E) + 1;
  v258 = v238 ^ 0x99B5F442 ^ v242;
  LOBYTE(STACK[0xDB8]) = v248 ^ 0xE;
  LOBYTE(STACK[0xDBF]) = v250 ^ 0xE;
  LOBYTE(STACK[0xDC6]) = v255 ^ 0xE;
  LOBYTE(STACK[0xF94]) = (v252 ^ v257) - ((2 * (v252 ^ v257)) & 0x8C) + 70;
  v259 = v235 ^ ((v255 ^ 0xDD) - ((2 * (v255 ^ 0xDD)) & 2) - 127);
  v260 = v252 ^ v257 ^ v242;
  LOBYTE(STACK[0xF9B]) = v260 ^ 0x38;
  v261 = (v259 ^ 0x9F) + 54 - ((2 * (v259 ^ 0x9F)) & 0x6C);
  v262 = v251 ^ v235 ^ v254;
  LOBYTE(v251) = v251 ^ (((v235 ^ 0xE1) - 53) ^ ((v235 ^ 0x1E) + 53)) & 0x95 ^ v261;
  v263 = v253 + (v262 ^ 0x14DA064A);
  LOBYTE(STACK[0xDD4]) = v251 - ((2 * v251) & 0x8C) + 70;
  v264 = v256 ^ v258;
  LOBYTE(STACK[0xFA2]) = (v260 ^ v256 ^ 0xCF) - ((2 * (v260 ^ v256 ^ 0xCF)) & 0x8C) + 70;
  v265 = v260 ^ v258;
  LOBYTE(STACK[0xFA9]) = v265 ^ 0x38;
  v266 = ((2 * (v263 + 1)) & 0x89622112) + ((v263 + 1) ^ 0x44B11089);
  v267 = (v264 ^ 0xBEEE194E) + v257 + 1;
  v268 = v261 ^ v235 ^ v254;
  HIDWORD(v269) = v264 ^ 0x11E6B1;
  LODWORD(v269) = v264 ^ 0x41000000;
  LOBYTE(STACK[0xDCD]) = v259 ^ 0x4C;
  v270 = v266
       - 1152454793
       + (v235 ^ 0x1B20811E)
       + 1008860891
       - ((2 * (v266 - 1152454793 + (v235 ^ 0x1B20811E))) & 0x7843FDB6);
  LOBYTE(v257) = (v266 - ((2 * (v266 + 119)) & 0x30) - 113) ^ v262;
  LOBYTE(STACK[0xDDB]) = v268 ^ 0x66;
  HIDWORD(v269) = (v269 >> 21) ^ 0xFF0A9E8F;
  LODWORD(v269) = HIDWORD(v269);
  v271 = v269 >> 11;
  v272 = v242 ^ 0xB1D95ACC ^ (v271 - ((2 * v271) & 0xFFC29F64) + 2145472434);
  v273 = v267 + (v242 ^ 0xCE38157E) + 543734022 - ((2 * (v267 + (v242 ^ 0xCE38157E))) & 0x40D1720C);
  v274 = v271 ^ 0xC7FC9DD4;
  v275 = v271 ^ v267;
  v276 = (v273 ^ 0x2068B906) + v274 - 1752973072 - ((2 * ((v273 ^ 0x2068B906) + v274)) & 0x2F0781E0);
  v277 = v270 ^ 0x5C ^ v257 ^ 0xAD;
  LOBYTE(STACK[0xFB0]) = (v265 ^ v275 ^ 0xAA) + (~(2 * (v265 ^ v275 ^ 0xAA)) | 0x73) + 71;
  v278 = v275 ^ 0xE79424D2 ^ v273;
  LOBYTE(v251) = v268 ^ v257 ^ 0xAD;
  v279 = v273 ^ 0xEE50AC78 ^ v265;
  v280 = v270 ^ v268;
  LOBYTE(v254) = v254 ^ 0x1A;
  v281 = (v270 ^ 0x3C21FEDB)
       + (v262 ^ 0xFD268532)
       + 1710521632
       - ((2 * ((v270 ^ 0x3C21FEDB) + (v262 ^ 0xFD268532))) & 0xCBE8FA40);
  v282 = v272 + 1091692210 + ~((2 * v272) & 0x8223CD62);
  LOBYTE(v272) = v280 ^ v254;
  v283 = v256 ^ 0xC7FC9DD4 ^ v282;
  LOBYTE(STACK[0xFB7]) = v279 - ((2 * v279) & 0x8C) + 70;
  v284 = v279 ^ v283;
  LOBYTE(STACK[0xDE2]) = v251 ^ 0xE1;
  LOBYTE(STACK[0xFBE]) = v284 - ((2 * v284) & 0x8C) + 70;
  LOBYTE(v251) = (v257 ^ 0x2A) - v277;
  LOBYTE(v282) = ((v280 ^ v254 ^ 0x6E) + 32 - ((2 * (v280 ^ v254 ^ 0x6E)) & 0x40)) ^ v281;
  v285 = (v275 ^ 0xC7FC9DD4) - v278;
  v286 = (v284 - 1752973072 - ((2 * v284) & 0x2F0781E0)) ^ v276;
  LOBYTE(STACK[0xDE9]) = v280 ^ 0xBD;
  v287 = v283 + v285 - 1293902445 - ((2 * (v283 + v285)) & 0x65C13B26);
  LOBYTE(STACK[0xDF0]) = v272 ^ 0xBD;
  LOBYTE(v272) = v251 + v254 - 83 - ((2 * (v251 + v254)) & 0x5A);
  LOBYTE(STACK[0xDF7]) = v282 ^ 0xD3;
  v288 = v287 ^ v285;
  LOBYTE(v254) = v272 ^ v251;
  v289 = (v278 + (v276 ^ 0x687C3F0F) - 1293902444 - ((2 * (v278 + (v276 ^ 0x687C3F0F) + 1)) & 0x65C13B26)) ^ v287;
  LOBYTE(STACK[0xFC5]) = v286 - ((2 * v286) & 0x8C) + 70;
  v290 = v287 ^ v285 ^ 0x41AB028C ^ (v286 - ((2 * v286) & 0xE6973E3E) - 213147873);
  LOBYTE(v285) = (v287 ^ v285 ^ 0x8C ^ (v286 - ((2 * v286) & 0x3E) + 31))
               - ((2 * (v287 ^ v285 ^ 0x8C ^ (v286 - ((2 * v286) & 0x3E) + 31))) & 0x8C)
               + 70;
  LOBYTE(v286) = (v277 + (v281 ^ 0xDF) - 82 - ((2 * (v277 + (v281 ^ 0xDF) + 1)) & 0x5A)) ^ v272;
  LOBYTE(v282) = v254 ^ (v282 - ((2 * v282) & 0x86) + 67);
  v291 = (v287 ^ 0xB2E09D93) - 1256310069;
  LOBYTE(v287) = (v272 ^ 0xAD) - 53;
  LOBYTE(STACK[0xFCC]) = v285;
  v292 = v290 ^ v289;
  LOBYTE(STACK[0xFD3]) = v292 - ((2 * v292) & 0x8C) + 70;
  v293 = v292 ^ v291;
  v294 = (v288 ^ 0x4D1F626C) + v291;
  LOBYTE(STACK[0xFDA]) = v293 - ((2 * v293) & 0x8C) + 70;
  LOBYTE(v291) = v282 ^ v286 ^ v287;
  LOBYTE(STACK[0xDFE]) = v282 ^ 0x3D;
  ++v294;
  v295 = (v293 - 1752973072 - ((2 * v293) & 0x2F0781E0)) ^ v276;
  LOBYTE(STACK[0xE05]) = v282 ^ v286 ^ 0x3D;
  LOBYTE(v285) = ((v291 ^ 0xEE) + 32 - ((2 * (v291 ^ 0xEE)) & 0x40)) ^ v281;
  v296 = (v276 ^ 0x9783C0F0) - 613696715;
  LOBYTE(v287) = (v254 ^ 0x52) + v287 + 1;
  LOBYTE(v276) = v286 - v287;
  v297 = (v288 ^ 0xB2E09D93) - ((2 * (v288 ^ 0xB2E09D93) + 2146298658) & 0x7B1BC566) + 1032116292;
  LOBYTE(STACK[0xFE1]) = v295 - ((2 * v295) & 0x8C) + 70;
  v298 = (v295 - 1114774861 - ((2 * v295) & 0x7B1BC566)) ^ v297;
  LOBYTE(v254) = (v254 ^ 0xAD) - ((2 * (v254 ^ 0xAD) + 34) & 0x20) + 33;
  LOBYTE(STACK[0xFE8]) = v298 - ((2 * v298) & 0x8C) + 70;
  LOBYTE(STACK[0xE13]) = v285 ^ 0xD3;
  v299 = (v289 - v294) ^ 0xCBB2A39A ^ (v298 - ((2 * v298) & 0x8C39F738) - 971179108);
  LOBYTE(v287) = (v287 - 112 - ((2 * v287) & 0x20)) ^ v254;
  LOBYTE(STACK[0xFEF]) = v299 - ((2 * v299) & 0x8C) + 70;
  LOBYTE(v285) = (v285 - 112 - ((2 * v285) & 0x20)) ^ v254;
  LOBYTE(v289) = v285 ^ 0xD3;
  LOBYTE(v285) = v285 - ((2 * v285) & 0x54) + 42;
  v300 = v299 ^ (v294 - 1114774861 - ((2 * v294) & 0x7B1BC566)) ^ v297;
  LOBYTE(STACK[0xE1A]) = v289;
  LOBYTE(STACK[0xE21]) = v276 ^ ~(_BYTE)v285;
  LOBYTE(STACK[0xFF6]) = v300 - ((2 * v300) & 0x8C) + 70;
  LOBYTE(STACK[0xE0C]) = v291 ^ 0x3D;
  LOBYTE(STACK[0xE28]) = v276 ^ v285 ^ ~(_BYTE)v287;
  LODWORD(STACK[0x3A4]) = v300 ^ v296;
  LOBYTE(STACK[0xFFD]) = (v300 ^ v296) - ((2 * (v300 ^ v296)) & 0x8C) + 70;
  LOBYTE(STACK[0xE2F]) = v276 ^ v285 ^ v287 ^ 0x2C ^ ((v281 ^ 0x20) + 53) ^ 0xD3;
  v301 = STACK[0x6C8];
  v302 = LODWORD(STACK[0x6C8]) - 604;
  LODWORD(STACK[0x3A8]) = (v276 ^ v285 ^ v287 ^ 0x2C) ^ ((v281 ^ 0x65F47D20) - 613696715) ^ 0xBDE07D01;
  v303 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8 * (v301 ^ (15 * v176))) - 8);
  LODWORD(STACK[0x670]) = v302;
  return v303();
}

uint64_t sub_1FB2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  unsigned int v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v8 = STACK[0x548];
  v9 = LODWORD(STACK[0x548]) < 0x37652EB0;
  v10 = 6244 - 960 * (((6244 * (unint64_t)v7) >> 32) >> 9);
  v11 = 5782 - 960 * (((5782 * (unint64_t)v7) >> 32) >> 9);
  v12 = STACK[0x6B8];
  *(_BYTE *)(v12 + v11) = *(_BYTE *)(STACK[0x6B8] + v11) ^ *(_BYTE *)(STACK[0x540]
                                                                    + (LODWORD(STACK[0x508]) - 1701082825));
  *(_BYTE *)(v12 + v10) ^= 0xAF ^ (119 * (*(_BYTE *)(STACK[0x538] + 6) ^ 0x89)
                                                  - ((-18 * (*(_BYTE *)(STACK[0x538] + 6) ^ 0x89)) & 0x8C)
                                                  + 70);
  if (!v9)
    v9 = v8 > 0x37652EB1;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8 * ((1972 * v9) ^ (a7 + 604))) - 8))();
}

void sub_1FB3FC()
{
  JUMPOUT(0x1FB2CCLL);
}

uint64_t sub_1FB404(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  uint64_t v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  uint64_t v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;

  LODWORD(STACK[0x698]) = v12;
  LODWORD(STACK[0x6D8]) = a3;
  LODWORD(STACK[0x668]) = a7 ^ 0x35;
  v17 = (v9 ^ 0x31A3656A) * ((a7 ^ 0x35) - 439);
  v18 = v17 + 5782 - 960 * ((((v17 + 5782) * (unint64_t)v14) >> 32) >> 9);
  v19 = v18 & 0x33A;
  v20 = STACK[0x6B8];
  v21 = *(unsigned __int8 *)(STACK[0x6B8] + v18) ^ 0xD3;
  v22 = 7 * ((v9 ^ 0x31A3656A) + v19 + (v19 ^ 0x33A)) + 7;
  LODWORD(STACK[0x6A8]) = v11;
  v23 = (v21 << 24) | ((*(unsigned __int8 *)(v20 + v22
                                                 - 960 * (((v22 * (unint64_t)v14) >> 32) >> 9)) ^ 0xD3) << 16);
  v24 = *(unsigned __int8 *)(v20
                           + v17
                           + 5803
                           - 960 * ((((v17 + 5803) * (unint64_t)v14) >> 32) >> 9)) ^ 0x46;
  v25 = v23 | ((*(unsigned __int8 *)(v20
                                   + v17
                                   + 5796
                                   - 960
                                   * ((((v17 + 5796) * (unint64_t)v14) >> 32) >> 9)) ^ 0xD3) << 8) | v24;
  v26 = v25 + 1175937652 - 2 * (v25 & 0x4617627D ^ v24 & 9);
  v27 = v26 ^ v12;
  LODWORD(STACK[0x6D0]) = a4;
  *((_DWORD *)&STACK[0x810]
  + 199 * v7
  % (((v26 & 0x2D8FA949 ^ 0x4072040) + (v26 & 0x2D8FA949 ^ 0x29888909)) ^ ((v9 & 0x2D8FA85D ^ 0xC0C8815)
                                                                         + (v9 & 0x2D8FA85D ^ 0x21832048u)))) = v27 ^ 0xDF5A2228;
  v29 = *(unsigned __int8 *)(v20
                           + v17
                           + 6244
                           - 960 * ((((v17 + 6244) * (unint64_t)v14) >> 32) >> 9));
  v30 = (v9 ^ 0x31A3656B) + 2 * (v9 & 1);
  LODWORD(STACK[0x6B0]) = v30;
  v31 = *(unsigned __int8 *)(v20
                           + v17
                           + 6258
                           - 960 * ((((v17 + 6258) * (unint64_t)v14) >> 32) >> 9));
  v32 = *(unsigned __int8 *)(v20
                           + v17
                           + 6251
                           - 960 * ((((v17 + 6251) * (unint64_t)v14) >> 32) >> 9)) ^ 0x46;
  v30 += 408959167;
  LODWORD(STACK[0x6C8]) = v30;
  v33 = 1432258930 - v30 + 8 * v30;
  v34 = 199 * v8;
  v35 = v16;
  v36 = v16 ^ 0x879BF69E ^ v26;
  v37 = *(unsigned __int8 *)(v20 + v33 + 455 - 960 * ((((v33 + 455) * (unint64_t)v14) >> 32) >> 9)) ^ 0x46;
  LODWORD(STACK[0x688]) = v36 + 1203269037 - ((2 * v36) & 0x8F70DB5A);
  LODWORD(STACK[0x6B4]) = v8;
  v38 = v10
      - 884868904
      + (v27 ^ 0x785F9611)
      - 1996431152
      - ((2 * (v10 - 884868904 + (v27 ^ 0x785F9611)) - 2104433082) & 0x8F70DB5A);
  v39 = ((v29 ^ 0x46) << 24) | (v32 << 16);
  v40 = v10 + v11 + (v35 ^ 0xC18C94EA) - 1536697372;
  v41 = STACK[0x6D8];
  LODWORD(STACK[0x6A0]) = a4
                        + LODWORD(STACK[0x6D8])
                        + (v15 ^ 0x5C132A31)
                        - 639750429
                        - ((2 * (a4 + LODWORD(STACK[0x6D8]) + (v15 ^ 0x5C132A31) + 1346423307)) & 0x133AC9B0);
  v42 = v36 ^ (v31 ^ 0xFFFFFFF3 | v31 ^ 4) & 0x95;
  v43 = v10 - ((2 * v10 + 133433192) & 0x5E65D8E) + 854405755;
  v44 = v39 & 0xFFFF00FF | ((v31 ^ 0x46) << 8);
  v45 = v41 - ((2 * v41 + 1670270306) & 0x62BF597C) + 1663488879;
  v46 = v45 ^ v13;
  v47 = v43 ^ LODWORD(STACK[0x698]);
  v48 = v44 | v37;
  v49 = *(unsigned __int8 *)(v20 + v33 % 0x3C0);
  v50 = *(unsigned __int8 *)(v20 + (v33 + 7) % 0x3C0);
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)(199 * v8 - 21901) % 0x114u) = v48 ^ v13 ^ 0x441E3FF9;
  v51 = v48 ^ v13 ^ 0x441E3F6C ^ LODWORD(STACK[0x688]);
  v52 = (((v49 ^ 0xD3) << 24) | ((v50 ^ 0xD3) << 16) | ((*(unsigned __int8 *)(v20 + (v33 + 14) % 0x3C0) ^ 0xD3) << 8) | *(unsigned __int8 *)(v20 + (v33 + 21) % 0x3C0) ^ 0x46) ^ v40;
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)(199 * v8 - 7374) % 0x114u) = v38;
  v53 = v52 ^ 0x8730B181;
  v54 = v51 - v42;
  v55 = *(unsigned __int8 *)(v20 + (v33 + 462) % 0x3C0) ^ 0x46;
  v56 = (v55 << 24) + 1107461190 - ((v55 << 25) & 0x84000000);
  v57 = ((v15 ^ 0xA3ECD5CE) + (v15 ^ 0x5FB57865 ^ v48 ^ v13) + 1) ^ ((v13 ^ 0xFC59ADAB) + v48 + 1);
  v58 = LODWORD(STACK[0x6C8]) - 408959165;
  v59 = (v57 ^ v54) - v41;
  v60 = *(unsigned __int8 *)(v20 + (v33 + 476) % 0x3C0);
  v61 = (((v52 & 0x5EAFEAA3 ^ 0x1E272283) + (v52 & 0x5EAFEAA3 ^ 0x4088C820)) ^ 0xE28E482E)
      * (LODWORD(STACK[0x6C8]) - 408958271)
      * (((v56 & 0x3C000000 ^ 0x3C67D9EB) + (v56 & 0x3C000000)) & 0x3C4791E3);
  v62 = v47 ^ 0x67EEC522;
  v63 = (unsigned __int16)(199 * v8 - 21702) % 0x114u;
  v64 = (v46 & 0x95 ^ 0xBB75BD57 | v46 & 0x95 ^ 0x80) ^ v52;
  v65 = (v46 ^ 0x69ACE16A ^ v52) - (v46 ^ 0x4999E4D2);
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)(v34 + 6556) % 0x114u) = v59
                                                                       - ((2 * v59 - 1814786816) & 0x8F70DB5A)
                                                                       - 1851608019;
  v66 = STACK[0x6A0];
  v67 = LODWORD(STACK[0x6A0]) ^ 0x899D644D ^ v52;
  v68 = LODWORD(STACK[0x6A0]) ^ 0xA9A861F5;
  *((_DWORD *)&STACK[0x810]
  + (unsigned __int16)(((((v47 ^ 0xF0) + 119) & 0xC7) + (((v47 ^ 0xF) - 119) & 0xC7)) * (v8 - 19278))
  % 0x114u) = v53;
  LODWORD(STACK[0x698]) = (v67 - v68) ^ v65;
  v69 = LODWORD(STACK[0x6D0]) - 944472541;
  v70 = v68 + v69 - ((2 * (v68 + v69)) & 0x16284B0A) - 1961613947;
  LODWORD(STACK[0x6D0]) = v70;
  LODWORD(STACK[0x688]) = (v45 ^ 0x4EA05341)
                        + (((((unsigned __int16)(199 * v8 - 7175) % 0x114u) & 0x55 ^ 0x17F96255)
                          + (((unsigned __int16)(199 * v8 - 7175) % 0x114u) & 0x55)) & 0x16F962DD);
  v71 = *(unsigned __int8 *)(v20 + v61 % 0x3C0);
  STACK[0x6D8] = (unsigned __int16)(199 * v8 + 6755) % 0x114u;
  LODWORD(STACK[0x67C]) = v40 ^ 0x9A40FBD0;
  v72 = v43 ^ 0x82F32EC7;
  v73 = STACK[0x6A8];
  v74 = LODWORD(STACK[0x6A8]) + 497595129;
  v40 ^= 0x2035052Du;
  v75 = (v47 ^ 0x47DBC00F) - v40;
  v76 = v40 + v74;
  v77 = (*(unsigned __int8 *)(v20 + (v33 + 28) % 0x3C0) ^ 0xD3) << 24;
  v78 = *(unsigned __int8 *)(v20 + (v33 + 35) % 0x3C0) ^ 0xD3;
  v79 = ((v71 ^ 0x46) << 16) | ((v60 ^ 0x46) << 8) | *(unsigned __int8 *)(v20 + (v33 + 483) % 0x3C0) ^ 0x46;
  LODWORD(STACK[0x680]) = v64 ^ 0x9B40B86F;
  v80 = v77 | (v78 << 16) | ((*(unsigned __int8 *)(v20
                                                 + (7
                                                  * (v58
                                                   + (((((v33 + 35) % 0x3C0) & 0x300 ^ 0x8B06FF00)
                                                     + (((v33 + 35) % 0x3C0) & 0x300)) ^ 0x8B06FC39))
                                                  + 56)
                                                 % 0x3C0) ^ 0xD3) << 8) | *(unsigned __int8 *)(v20 + (v33 + 49) % 0x3C0) ^ 0x46;
  STACK[0x6A8] = (unsigned __int16)(v34 + 30501) % 0x114u;
  v81 = (v79 + (v56 ^ 0x42028446) - 1986173736 - ((2 * (v79 + (v56 ^ 0x42028446))) & 0x133AC9B0)) ^ v66;
  v82 = (*(unsigned __int8 *)(v20 + (v33 + 490) % ((((_WORD)v73 + 761) & 0x3C0) + ((262 - (_WORD)v73) & 0x3C0u))) ^ 0x46) << 24;
  v83 = v62 ^ v81;
  v84 = *(unsigned __int8 *)(v20 + (v33 + 497) % 0x3C0);
  *((_DWORD *)&STACK[0x810] + v63) = v81 ^ 0x678D6880;
  v85 = (v81 ^ 0x2035052D) + v72;
  v86 = v72 - v76;
  v87 = (v45 ^ 0xB15FACBE) + (v70 ^ 0x74EBDA7A) + 1;
  v88 = v82 | ((v84 ^ 0x46) << 16) | ((*(unsigned __int8 *)(v20 + (v33 + 504) % 0x3C0) ^ 0x46) << 8) | *(unsigned __int8 *)(v20 + (v33 + 511) % 0x3C0) ^ 0x46;
  STACK[0x6A0] = (unsigned __int16)(v34 - 21503) % 0x114u;
  v89 = v69
      + (v46 ^ 0x4999E4D2)
      + (v70 ^ 0x74EBDA7A)
      + 1
      - ((2 * (v69 + (v46 ^ 0x4999E4D2) + (v70 ^ 0x74EBDA7A) + 1)) & 0x6C24F6E4)
      - 1240302734;
  v90 = (unsigned __int16)STACK[0x6D8];
  v91 = v80 ^ v86;
  LODWORD(v63) = (v75 - 1595642153 - ((2 * v75) & 0x41C8DDAE)) ^ v76 ^ 0x83FEB30A ^ v80 ^ v86;
  v92 = LODWORD(STACK[0x67C]) ^ (v83 - ((2 * v83) & 0x74EBFDFA) - 1166672131);
  v93 = ((2 * v86) & 0xDFFFBCFE ^ 0x94D68C44) + (v86 ^ 0x3594B9DD);
  v94 = v88 ^ v87;
  v95 = v69 ^ 0xD321E511;
  v96 = (v74 ^ 0xD321E511) - v93 - 1951646962 - ((2 * ((v74 ^ 0xD321E511) - v93 - 268444033)) & 0x3758B91E);
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)(v34 - 7175) % 0x114u) = v85
                                                                       - 1996431152
                                                                       - ((2 * v85 - 2104433082) & 0x8F70DB5A);
  v97 = ((2 * v87) & 0xFE3FBFDC ^ 0xB4168F44) + (v87 ^ 0x2574B84C);
  v98 = v95 - 14688274 - v97 - 151142457 - ((2 * (v95 - 14688274 - v97)) & 0xEDFB7F8E);
  v99 = (LODWORD(STACK[0x680]) ^ v92) - v92;
  LODWORD(STACK[0x6D8]) = v98 ^ v89;
  v100 = v96 ^ (v75 - 1683202929 - ((2 * v75) & 0x3758B91E));
  v101 = LODWORD(STACK[0x688]) + (LODWORD(STACK[0x698]) ^ v99) + 1;
  v102 = v96 ^ ((v76 ^ 0x83FEB30A) - 1683202929 - 2 * ((v76 ^ 0x83FEB30A) & 0x1BAC5C9F ^ v76 & 0x10));
  v103 = LODWORD(STACK[0x6D0]) ^ 0x8EA968F;
  v104 = (LODWORD(STACK[0x6D0]) ^ 0xD281F12D ^ v94) - v103;
  v105 = (v96 ^ 0x9BAC5C8F) - ((2 * (v96 ^ 0x9BAC5C8F) - 635626156) & 0x81EDFF42);
  v106 = v98 ^ (v103 - 151142457 - 2 * (v103 & 0x76FDBFD7 ^ STACK[0x6D0] & 0x10));
  v107 = (v98 ^ 0xF6FDBFC7) - 407635752 - ((2 * (v98 ^ 0xF6FDBFC7) - 635626156) & 0xF54AD45C);
  *((_DWORD *)&STACK[0x810] + v90) = v101 + 1203269037 - ((2 * v101) & 0x8F70DB5A);
  LODWORD(STACK[0x6D0]) = v93 + 121240645 + ~((2 * v93 - 1937376954) & 0x81EDFF42);
  LOWORD(v90) = (unsigned __int16)(v34 - 6976) % 0x114u;
  LODWORD(STACK[0x694]) = v34;
  v108 = v104 ^ ((v89 ^ 0x49ED848D) + (v89 ^ 0x6C791CD0 ^ v94) + 1);
  LOWORD(v89) = (unsigned __int16)(v34 + 6954) % 0x114u;
  v109 = v106 - 1315958882 + (~(2 * v106 + 1815728682) | 0x919B2EF);
  v110 = *(unsigned __int8 *)(v20 + (v33 + 56) % 0x3C0) ^ 0xD3;
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)STACK[0x6A8]) = v91 ^ 0x7D6ED30E;
  v111 = (v110 << 24) | ((*(unsigned __int8 *)(v20 + (v33 + 63) % 0x3C0) ^ 0xD3) << 16) | ((*(unsigned __int8 *)(v20 + (v33 + 70) % 0x3C0) ^ 0xD3) << 8) | *(unsigned __int8 *)(v20 + (v33 + 77) % 0x3C0) ^ 0x46;
  v112 = (v63 ^ 0x8570F61F)
       + (((v63 ^ 0xA0E46ED7) + 1787641884 - ((2 * (v63 ^ 0xA0E46ED7)) & 0xD51A8038)) ^ v94 ^ 0x6A8D4089);
  LOWORD(v63) = (unsigned __int16)(v34 + 30700) % 0x114u;
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)STACK[0x6A0]) = v94 ^ 0x9DD30A0F;
  v113 = v108 ^ (v112 + 1);
  v114 = *(unsigned __int8 *)(v20 + (v33 + 539) % 0x3C0);
  v115 = ((*(unsigned __int8 *)(v20 + (v33 + 518) % 0x3C0) ^ 0x46) << 24) | ((*(unsigned __int8 *)(v20
                                                                                                 + (v33 + 525) % 0x3C0) ^ 0x46) << 16) | ((*(unsigned __int8 *)(v20 + (v33 + 532) % 0x3C0) ^ 0x46) << 8);
  v105 -= 1375367605;
  v116 = LODWORD(STACK[0x6D8]) ^ v107;
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)v90) = v113
                                                     - v97
                                                     - ((2 * (v113 - v97) - 2133809630) & 0x8F70DB5A)
                                                     - 2011119426;
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)v89) = v93
                                                     + 268443712
                                                     + (v91 ^ 0xDA6B6737)
                                                     + 1588711747
                                                     - ((2 * (v93 + 268443712 + (v91 ^ 0xDA6B6737) + 321) + 770884778) & 0x8F70DB5A);
  LODWORD(v20) = STACK[0x6B4];
  v117 = (((v114 ^ 0x46) + 1108891199 - 2 * ((v114 ^ 0x46) & 0x3F)) ^ 0x4218563F | v115) ^ v107;
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)v63) = v111 ^ v105 ^ 0xE7F34B0D;
  v118 = v105 ^ LODWORD(STACK[0x6D0]);
  v119 = (((v109 ^ 0x48CD977) + (v109 ^ 0xBB85D9BC ^ v111 ^ v105) + 1) ^ ((v116 ^ 0xC5B55164)
                                                                        + (v116 ^ 0x7ABC51AF ^ v111 ^ v105)
                                                                        + 1) ^ ((v111 ^ v105 ^ 0xCE34F21E ^ (((v102 - 1239619307) ^ v100 ^ v105 ^ 0x3A53958F ^ v117) - ((2 * ((v102 - 1239619307) ^ v100 ^ v105 ^ 0x3A53958F ^ v117)) & 0x1D841A54) - 1899885270))
                                                                              - ((v102 - 1239619307) ^ v100 ^ v105 ^ 0x3A53958F ^ v117)))
       - (v107 ^ (v97 - 2 * ((v97 + 925039412) & 0x7AA56A2F ^ v87 & 1) + 835216738));
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)((v114 & 0xFFC7 ^ 0x81 | v114 & 0xFFC7 ^ 0x46) * (v20 - 19208)) % 0x114u) = v117 ^ 0x3D1D0783;
  v120 = STACK[0x694];
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)(LOWORD(STACK[0x694]) - 6777) % 0x114u) = v119
                                                                                        - 1996431152
                                                                                        - ((2 * v119 - 2104433082) & 0x8F70DB5A);
  v121 = LODWORD(STACK[0x670]) + 733;
  *((_DWORD *)&STACK[0x810] + (unsigned __int16)(v120 + 7153) % 0x114u) = (v117 ^ 0x7AA56A2E)
                                                                        + v118
                                                                        + 1588711426
                                                                        - ((2 * ((v117 ^ 0x7AA56A2E) + v118) + 770884778) & 0x8F70DB5A);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8
                                                       * ((3348 * ((v20 - 1605061451) > 0xF)) ^ v121))
                            - 8))();
}

uint64_t sub_1FC9DC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unint64_t v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned int v70;
  int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  __int16 v99;
  __int16 v100;
  int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned __int16 v122;
  unsigned int v123;
  __int16 v124;
  int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  __int16 v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  char v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned __int16 v152;
  int v153;
  unsigned __int16 v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  int v169;

  v11 = LODWORD(STACK[0x668]) - 21;
  LODWORD(STACK[0x6B0]) = v11;
  LODWORD(STACK[0x6A8]) = (v11 ^ 0x50C1129) - v4;
  LODWORD(STACK[0x650]) = 16 * (LOBYTE(STACK[0xF58]) ^ 0x46);
  LODWORD(STACK[0x660]) = -2147483614;
  LODWORD(STACK[0x6C8]) = -25626897;
  LODWORD(STACK[0x658]) = 25626920;
  v12 = v9;
  LODWORD(STACK[0x6D0]) = a4;
  LODWORD(STACK[0x688]) = 1060551440;
  LODWORD(STACK[0x6B4]) = 0;
  v13 = (LODWORD(STACK[0x6B0]) - 1105631695) & 0x41E69F7F;
  LODWORD(STACK[0x648]) = v13;
  v14 = 25626920 * (v13 ^ 0x79D);
  v15 = *((_DWORD *)&STACK[0x810] + (v14 - 804789585) % 0x114);
  LODWORD(STACK[0x6A0]) = v14 - 804776053;
  v16 = *((_DWORD *)&STACK[0x810] + (v14 - 804776053) % 0x114);
  v17 = v10;
  v18 = v10 ^ 0xC18C94EA;
  HIDWORD(v19) = v15 ^ 0x39;
  LODWORD(v19) = v15 ^ 0xA705B400;
  v20 = (v19 >> 7) ^ (v15 >> 3);
  HIDWORD(v19) = v15 ^ 0x1B439;
  LODWORD(v19) = v15 ^ 0xA7040000;
  v21 = v19 >> 18;
  v22 = *((_DWORD *)&STACK[0x810] + (v14 - 804786998) % 0x114);
  HIDWORD(v19) = v16 ^ 0x2D;
  LODWORD(v19) = v16 ^ 0x47B86D80;
  v23 = v19 >> 7;
  HIDWORD(v19) = v16 ^ 0x6DAD;
  LODWORD(v19) = v16 ^ 0x47B80000;
  v24 = v19 >> 18;
  HIDWORD(v19) = v22 ^ 0x1B439;
  LODWORD(v19) = v22 ^ 0xA7040000;
  v25 = v20 ^ v21;
  v26 = (v22 << 13) ^ (v22 >> 10) ^ (v19 >> 17) ^ ((v22 ^ 0xA705B439) >> ((LODWORD(STACK[0x6C8]) ^ 0x10) & 0x13));
  v27 = *((_DWORD *)&STACK[0x810] + (v14 - 804773466) % 0x114);
  v28 = v23 ^ (v16 >> 3) ^ v24 ^ 0x8F70DB5;
  LODWORD(STACK[0x668]) = v28;
  HIDWORD(v19) = v27 ^ 0x6DAD;
  LODWORD(v19) = v27 ^ 0x47B80000;
  v29 = v19 >> 17;
  HIDWORD(v19) = v27 ^ 0x6DAD;
  LODWORD(v19) = v27 ^ 0x47B80000;
  v30 = v17 ^ v7 ^ v28;
  v31 = (v27 >> 10) ^ 0x11EE1B ^ v29 ^ (v19 >> 19);
  v32 = (v7 ^ 0x3E48F4F0) + 1653622086;
  v33 = (v8 ^ 0xFC59ADAB) + (v8 ^ 0x1746E4D3 ^ v25) + 1;
  v34 = (v8 ^ 0x3A65254) + 1653622086;
  v35 = ((v12 ^ 0xA3ECD5CE) + (v12 ^ 0x48F39CB6 ^ v25) + 1) ^ v33 ^ ((v25 ^ 0x7B4FAA8F ^ ((v30 ^ 0xFFC4601A)
                                                                                        + 1873746952
                                                                                        - 2
                                                                                        * ((v30 ^ 0xFFC4601A) & 0x6FAF1C09 ^ v30 & 1)))
                                                                   - (v30 ^ 0xFFC4601A));
  v36 = v5 + v6 - 974833599 + (v32 ^ 0x8984EEB7);
  v37 = v32 ^ 0x8984EEB7 ^ (v5 - 323005131);
  v38 = v32 ^ 0x2436B01E ^ (v31 - ((2 * v31) & 0x5B64BD52) - 1380819287);
  v39 = v18
      + 1598753077
      + (((((v14 - 804773466) % 0x114) & 0xD0 ^ 0x14078D0) + (((v14 - 804773466) % 0x114) & 0xD0)) | 0x13412A50);
  v40 = v39 - v37 + 1511656417 - ((2 * (v39 - v37)) & 0xB43417C2);
  v41 = (v38 + 1511656417 - ((2 * v38) & 0xB43417C2)) ^ v40;
  v42 = (v34 ^ 0x8984EEB7 ^ (a3 - 292784078))
      - 341582225
      + (~(2 * (v34 ^ 0x8984EEB7 ^ (a3 - 292784078))) | 0x28B84321)
      + 1;
  v43 = (v12 ^ 0x5C132A31) + (v42 ^ 0x145C2190) + 1;
  LODWORD(STACK[0x694]) = v43;
  v44 = v43 - ((2 * v43 - 451344374) & 0xBCA84766) + 1356900280;
  v45 = (v36 ^ 0x1E6F9566) + v5;
  LODWORD(STACK[0x698]) = v45;
  v46 = LODWORD(STACK[0x6D0]) + a3 + 1908287080 + (v34 ^ 0x8984EEB7);
  v47 = (v32 ^ 0xD39EE556 ^ v40)
      + v45
      - 323005131
      + 117247658
      - ((2 * ((v32 ^ 0xD39EE556 ^ v40) + v45 - 323005131)) & 0xDFA1D54);
  LODWORD(STACK[0x670]) = v47;
  v48 = ((v44 ^ 0x21ABDC4C) + (v26 ^ v44 ^ 0x68FAC2DE) + 1) ^ ((v34 ^ 0x767B1148) + (v34 ^ 0x3F2A0FDA ^ v26) + 1) ^ ((v26 ^ 0x66EF5070 ^ (v41 - ((2 * v41) & 0xA083623A) - 801001187)) - v41);
  LODWORD(STACK[0x67C]) = v34 ^ 0x57D0CD04 ^ v44;
  LODWORD(STACK[0x6D8]) = a3;
  v49 = (v46 ^ 0x1E6F9566) + a3;
  v50 = *((_DWORD *)&STACK[0x810] + (v14 - 804761725) % 0x114) ^ 0x47B86DAD;
  v51 = *((_DWORD *)&STACK[0x810] + (v14 - 804759934) % 0x114) ^ 0x47B86DAD;
  v52 = v5 - 884868904 + ((323005130 - v5) & 0x5F4B0935) + ((v5 + 1824478517) & 0x5F4B0935) - (v40 ^ 0x5A1A0BE1);
  LODWORD(STACK[0x6D0]) = v52 - ((2 * v52 + 2061522264) & 0x7D366CAE);
  v53 = (v40 ^ 0x5A1A0BE1) - 468897359 + (v47 ^ 0x6FD0EAA);
  LODWORD(STACK[0x680]) = a3 - v43 - ((2 * (a3 - v43) + 1853593442) & 0x5FF7ADE4);
  v54 = LODWORD(STACK[0x6A8]) + v37 + v50 + v51 + v31 - 1335886363 + v35;
  v55 = LODWORD(STACK[0x6B4]) + 211;
  *((_DWORD *)&STACK[0x810] + (v14 - 804758541) % 0x114) = v54 - 1996431152 - ((2 * v54 - 2104433082) & 0x8F70DB5A);
  v14 -= 804746004;
  v56 = v5
      + (v42 ^ 0xEBA3DE6F)
      + ((2 * v42) ^ 0x28B84321)
      + (*((_DWORD *)&STACK[0x810] + (((LODWORD(STACK[0x6C8]) + 61) | v55) & 0xC7u) * v55 % 0x114) ^ 0x47B86DAD)
      + (*((_DWORD *)&STACK[0x810] + v14 % 0x114) ^ 0x47B86DAD)
      + LODWORD(STACK[0x668])
      - 1655753681
      + v48;
  v57 = v56 - v49 - ((2 * (v56 - v49) + 585568156) & 0xC0EEBFE6) + 1911220161;
  *((_DWORD *)&STACK[0x810] + (v14 + 1393) % 0x114) = v56 + 1588711426 - ((2 * v56 + 770884778) & 0x8F70DB5A);
  v58 = v54 + v45 - 323005131 - ((2 * (v54 + v45 - 323005131)) & 0xC2AB8D6C) + 1633011382;
  v59 = STACK[0x6B8];
  v60 = ((v58 >> 23) & 0x10 | HIBYTE(v58) & 0xF) ^ 0x209;
  v61 = 7 * ((v58 >> 20) & 0xF ^ 5) + 3640;
  v62 = 7 * (HIWORD(v58) & 0xF ^ 5) + 3640;
  v63 = 7 * (((unsigned __int16)v58 >> 12) ^ 0xC) + 3640;
  v64 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(7 * v60
                                              - 960 * ((unsigned __int16)((15295 * v60) >> 16) >> 5))) ^ 0x46 ^ ((unint64_t)(*(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(7 * ((v58 >> 28) ^ 6) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v58 >> 28) ^ 6) + 3640)) >> 16) >> 5))) ^ 0x46u) << ((v39 & 0x3A) - 54 + (v39 & 0x3A ^ 0x3A)));
  v65 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(v62 - 960 * ((unsigned __int16)((2185 * v62) >> 16) >> 5))) ^ 0x46;
  v66 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(v63 - 960 * ((unsigned __int16)((2185 * v63) >> 16) >> 5)));
  v67 = 7 * ((v58 >> 8) & 0xF ^ 6) + 3640;
  v68 = ((v65 << 8) | (v64 << 16)) ^ ((*(unsigned __int8 *)(STACK[0x6B8]
                                                          + (unsigned __int16)(v61
                                                                             - 960
                                                                             * ((unsigned __int16)((2185 * v61) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(v67 - 960 * ((unsigned __int16)((2185 * v67) >> 16) >> 5))) ^ 0x46;
  v69 = 7 * ((v58 >> 4) ^ 0xB) + 3640;
  v70 = ((v68 << 8) ^ ((v66 ^ 0x46) << 12)) - 1417683138 - ((2 * ((v68 << 8) ^ ((v66 ^ 0x46) << 12))) & 0x56FFBE00);
  v71 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(7 * (v58 & 0xF ^ 6)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v58 & 0xF ^ 6) + 3640)) >> 16) >> 5))) ^ 0x46;
  v72 = v71 - 1430967233 - 2 * (v71 & 0x3F);
  v73 = (v70 ^ 0xAB7FDF3E | v72 ^ 0xAAB52C3F) ^ (16
                                               * (*(unsigned __int8 *)(STACK[0x6B8]
                                                                     + (unsigned __int16)(v69
                                                                                        - 960
                                                                                        * ((unsigned __int16)((2185 * v69) >> 16) >> 5))) ^ 0x46));
  v74 = 7 * ((v57 >> 20) & 0xF ^ 7) + 3640;
  v75 = 7 * (HIWORD(v57) & 0xF ^ 7) + 3640;
  v76 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(v75 - 960 * ((unsigned __int16)((2185 * v75) >> 16) >> 5))) ^ 0x46;
  v77 = 7 * (((unsigned __int16)((v56 - v49 - ((2 * (v56 - v49) + 3996) & 0xBFE6) - 6207) & 0xF000) >> 12) ^ 5) + 3640;
  v78 = 7 * (~(v57 >> 8) & 0xF) + 3640;
  v79 = ((((*(unsigned __int8 *)(STACK[0x6B8]
                               + (unsigned __int16)(7 * (HIBYTE(v57) & 0xF)
                                                  + 3640
                                                  - 960
                                                  * ((unsigned __int16)((2185
                                                                                     * (7 * (HIBYTE(v57) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(7 * ((v57 >> 28) ^ 6) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v57 >> 28) ^ 6) + 3640)) >> 16) >> 5))) ^ 0x46) << 12) | v76) << 8) ^ ((*(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(v74 - 960 * ((unsigned __int16)((2185 * v74) >> 16) >> 5))) ^ 0x46) << 12);
  v80 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(v77 - 960 * ((unsigned __int16)((2185 * v77) >> 16) >> 5))) ^ 0x46;
  v81 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(v78 - 960 * ((unsigned __int16)((2185 * v78) >> 16) >> 5))) ^ 0x46;
  v82 = 7 * (~(v57 >> 4) & 0xF) + 3640;
  v83 = ((v79 | v81) << 8) + 2021357419 - (((v79 | v81) << 9) & 0xF0F6EE00);
  v84 = v83 ^ (v80 << 12);
  v85 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(7 * (v57 & 0xF ^ 3)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v57 & 0xF ^ 3) + 3640)) >> 16) >> 5))) ^ 0x46;
  v86 = (v84 ^ 0x787B776B | v85) ^ (16
                                  * (*(unsigned __int8 *)(STACK[0x6B8]
                                                        + (unsigned __int16)(v82
                                                                           - 960
                                                                           * ((unsigned __int16)((2185 * v82) >> 16) >> 5))) ^ 0x46));
  v87 = 7 * ((-17 - (_BYTE)v72) & 0xF | (16 * (v85 & 0xF)));
  v88 = *(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(v87 + 3983) % 0x3C0u);
  if (v87 >= 0x3C0)
    v87 -= 960;
  v89 = v88 ^ LODWORD(STACK[0x650]) ^ 0x46;
  v90 = (v73 >> 4) - 1684880566 - ((v73 >> 3) & 0x17258694);
  v91 = 7 * v89;
  v89 *= 244671;
  v92 = v91 - 960 * ((v89 + 139217799) >> 25);
  v93 = *(unsigned __int8 *)(v59 + (unsigned __int16)(v91 - 960 * (v89 >> 25)));
  v94 = 7 * ((v86 & 0xF0 | v90 & 0xF) ^ 0xA);
  v95 = 7
      * (((((v93 >> 4) ^ 4) - 2 * (((v93 >> 4) ^ 4) & 7 ^ ((v93 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v59 + v87))
       + ((1039800005 * (((-21 - (_BYTE)v72) & 3 ^ 0x24C0C6F3) + ((-21 - (_BYTE)v72) & 3))) & 0x46000339));
  v96 = v94 - 960;
  if (v94 < 0x3C0)
    v96 = 7 * ((v86 & 0xF0 | v90 & 0xF) ^ 0xA);
  v97 = *(unsigned __int8 *)(v59 + (unsigned __int16)(7 * ((v86 & 0xF0 | v90 & 0xF) ^ 0xA) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v59 + v95 % 0x3C0) ^ 0x46)) ^ 0x46;
  v98 = *(unsigned __int8 *)(v59 + v96);
  v99 = 7 * v97;
  v97 *= 244671;
  v100 = v99 - 960 * ((v97 + 139217799) >> 25);
  v101 = (*(unsigned __int8 *)(v59 + (unsigned __int16)(v99 - 960 * (v97 >> 25))) >> 4) ^ 4;
  v102 = 7 * ((v101 - ((2 * v101) & 0xC) + 70) ^ v98) + 3983;
  v103 = 7
       * ((v86 >> 4) & 0xF0 ^ ((v58 & 0x6CC400F1 ^ 0xC800041) + (v58 & 0x6CC400F1 ^ 0x604400B0) - 1824784610) & (v73 >> 8));
  v104 = *(unsigned __int8 *)(v59
                            + v103
                            + 3983
                            - 960 * (((143165577 * (unint64_t)(v103 + 3983)) >> 32) >> 5));
  v105 = v104 ^ (16
               * (*(unsigned __int8 *)(v59
                                     + (unsigned __int16)(v102
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v102) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v106 = *(unsigned __int8 *)(v59 + (unsigned __int16)(v92 + 3983)) ^ (16
                                                                     * (*(unsigned __int8 *)(v59
                                                                                           + (unsigned __int16)(v100 + 3983)) ^ 0x46)) ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)(7 * v105 + 3983) % 0x3C0u) ^ 0x46) << 8);
  v107 = *(unsigned __int8 *)(v59 + v103 - 960 * (((143165577 * (unint64_t)v103) >> 32) >> 5));
  if (v105 <= 0x89)
    v108 = 7 * v105;
  else
    v108 = (7 * v105 - 960) % 0x3C0;
  v109 = (((*(_BYTE *)(v59 + v108) >> 4) ^ 4)
                         - 2 * (((*(_BYTE *)(v59 + v108) >> 4) ^ 4) & 7 ^ ((*(_BYTE *)(v59 + v108) & 0x10) != 0))
                         + 70) ^ v107;
  v110 = 7 * (((v84 >> 8) & 0xF0 | ((unsigned __int16)v70 >> 12)) ^ 0x7D);
  v111 = 16
       * (*(unsigned __int8 *)(v59
                             + (unsigned __int16)(7 * v109
                                                + 3983
                                                - 960
                                                * ((unsigned __int16)((8739 * (7 * v109 + 3983)) >> 16) >> 7))) ^ 0x46);
  v112 = *(unsigned __int8 *)(v59
                            + (unsigned __int16)(7 * (((v84 >> 8) & 0xF0 | ((unsigned __int16)v70 >> 12)) ^ 0x7D) + 3983)
                            % 0x3C0u) ^ 0x46;
  v113 = 7 * (v111 + v112 - 2 * (v111 & v112));
  v114 = v106 ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)(v113 + 3983) % 0x3C0u) ^ 0x46) << 12);
  if (v110 >= 0x3C0)
    v110 -= 960;
  v115 = *(unsigned __int8 *)(v59 + v113 % 0x3C0);
  v116 = 7
       * ((((v115 >> 4) ^ 4) - 2 * (((v115 >> 4) ^ 4) & 7 ^ ((v115 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v59 + v110))
       + 3983;
  v117 = 7 * (((v84 >> 12) & 0xF0 | HIWORD(v70) & 0xF) ^ 0xBF);
  v118 = *(unsigned __int8 *)(v59
                            + (unsigned __int16)(7 * (((v84 >> 12) & 0xF0 | BYTE2(v70) & 0xF) ^ 0xBF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v59 + (unsigned __int16)(v116 - 960 * ((unsigned __int16)((8739 * v116) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v119 = v114 ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)(7 * v118 + 3983) % 0x3C0u) ^ 0x46) << 16);
  if (v117 >= 0x3C0)
    v117 -= 960;
  v120 = (*(unsigned __int8 *)(v59
                             + (unsigned __int16)(7 * v118
                                                - 960 * ((unsigned __int16)((244671 * v118) >> 16) >> 9))) >> 4) ^ 4;
  v121 = 7 * ((v120 - ((2 * v120) & 0xC) + 70) ^ *(unsigned __int8 *)(v59 + v117));
  v122 = 7 * (((v70 >> 20) & 0xF | (16 * (((v104 & 0xF ^ 9) + (v104 & 0xF ^ 6)) & ((v83 >> 20) ^ 7)))) ^ 7);
  v123 = *(unsigned __int8 *)(v59 + (unsigned __int16)(v122 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v59 + (unsigned __int16)(v121 + 3983 - 960 * ((unsigned __int16)((8739 * (v121 + 3983)) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v124 = 7 * v123;
  v123 *= 244671;
  v125 = v119 ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)(v124 - 960 * ((v123 + 139217799) >> 25) + 3983)) ^ 0x46) << 20);
  v126 = *(unsigned __int8 *)(v59 + (unsigned __int16)(v124 - 960 * (v123 >> 25)));
  v127 = (((v126 >> 4) ^ 4) + ~(2 * (((v126 >> 4) ^ 4) & 7 ^ ((v126 & 0x10) != 0))) + 71) ^ *(unsigned __int8 *)(v59 + v122 % 0x3C0u);
  v128 = 7 * (((v83 >> 20) & 0xF0 | HIBYTE(v70) & 0xF) ^ 0x8B);
  v129 = v125 ^ 0x46;
  v130 = *(unsigned __int8 *)(v59
                            + (unsigned __int16)(7 * v127
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (7 * v127 + 3983)) >> 16) >> 7))) ^ 0x46;
  if (v128 >= 0x3C0)
    v128 -= 960;
  v131 = *(unsigned __int8 *)(v59
                            + (unsigned __int16)(7 * (((v83 >> 20) & 0xF0 | HIBYTE(v70) & 0xF) ^ 0x8B) + 3983) % 0x3C0u) ^ (16 * v130) ^ 0x46;
  v132 = 7 * v131;
  v131 *= 244671;
  v133 = v131 + 139217799;
  LOWORD(v131) = v132 - 960 * (v131 >> 25);
  v134 = (*(unsigned __int8 *)(v59 + (unsigned __int16)(v132 - 960 * (v133 >> 25) + 3983)) ^ 0x46) << 24;
  v135 = *(unsigned __int8 *)(v59 + (unsigned __int16)v131) >> 4;
  v136 = 7 * (*(_BYTE *)(v59 + v128) ^ 0x42 ^ v135);
  v137 = v134 & 0x8D000000 ^ v129 & 0x8DD89A41 | v134 & 0x72000000 ^ v129 & 0x722765BE;
  v138 = (2 * v137) & 0x25F0CAB0;
  v137 += 318268760;
  v139 = *(unsigned __int8 *)(v59
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v59
                                                                     + (unsigned __int16)(7
                                                                                        * (((((v135 ^ 0xFFFB)
                                                                                            + (v135 ^ 4)) | 4) & ((v70 >> 28) ^ 0xA) | (16 * (v83 >> 28))) ^ 0x70)
                                                                                        + 3983)
                                                                     % 0x3C0u) ^ (unsigned __int16)(16
                                                                                                  * (*(unsigned __int8 *)(v59 + (unsigned __int16)(v136 + 3023 - 960 * ((unsigned __int16)((8739 * (v136 + 3023)) >> 16) >> 7))) ^ 0x46)) ^ 0x46)
                                               + 3983)
                            % 0x3C0u);
  v140 = v137 - v138;
  v141 = (((v139 ^ 6) << 28) + 318268760 - ((v139 & 1) << 29)) ^ (v137 - v138);
  v142 = (-17 - (_BYTE)v72) & 0xF | (16 * (v137 & 0xF));
  v143 = (v137 - v138) & 0xF0;
  v144 = v90 ^ 0x146D3CBA;
  if (LODWORD(STACK[0x670]) == -1112284707)
    v144 = 15;
  v145 = *(_BYTE *)(v59
                  + (unsigned __int16)(7 * (v142 ^ 0x80)
                                     + 1813
                                     - 960 * ((unsigned __int16)((2185 * (7 * (v142 ^ 0x80u) + 1813)) >> 16) >> 5)));
  v146 = (7 * (v144 & (v90 ^ 0x9B92C34A) ^ 0x50 ^ v143) + 1813) % 0x3C0;
  v147 = 7 * (((v140 >> 4) & 0xF0 | (v73 >> 8) & 0xF) ^ 0x50) + 1813;
  v148 = v147 - 960 * ((2185 * v147) >> 21);
  v149 = 7 * (((v140 >> 8) & 0xF0 | ((unsigned __int16)v70 >> 12)) ^ 0x6D) + 1813;
  v150 = v149 - 960 * ((2185 * v149) >> 21);
  v151 = (v140 >> 12) & 0xF0 | HIWORD(v70) & 0xF;
  v152 = 7 * (v151 ^ 0x8F) + 1813 - 960 * ((unsigned __int16)((2185 * (7 * (v151 ^ 0x8Fu) + 1813)) >> 16) >> 5);
  v153 = 7 * ((HIWORD(v141) & 0xF0 | (v70 >> 20) & 0xF) ^ 7) + 1813;
  v154 = v153 - 960 * ((unsigned __int16)((2185 * v153) >> 16) >> 5);
  *((_DWORD *)&STACK[0x810] + 199 * (LODWORD(STACK[0x688]) ^ 0x3F36BB00u) % 0x114) = (v53
                                                                                    - ((2 * v53 + 1097461142) & 0xC2AB8D6C)
                                                                                    + 34258305) ^ 0xA705B439 ^ v58;
  v155 = *(unsigned __int8 *)(v59 + v146) ^ 0x46;
  v156 = 7
       * ((HIBYTE(v70) & 0xF | (16
                              * ((v141 >> 20 >> (((HIBYTE(v70) & 0x86 ^ 0x82)
                                                + (HIBYTE(v70) & 0x86 ^ 4)
                                                - (v145 & 0x82 ^ 0x80)
                                                - (v145 & 0x82 ^ 2)) & 0xFE)) & 0xF))) ^ 0xB)
       + 1813;
  v157 = (16 * v155) ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)v148) ^ 0x46) << 8);
  v158 = v157 ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)v150) ^ 0x46) << 12) ^ ((*(unsigned __int8 *)(v59 + v152) ^ 0x46) << 16);
  v159 = v158 ^ ((*(unsigned __int8 *)(v59 + v154) ^ 0x46) << 20);
  v160 = v159 ^ ((*(unsigned __int8 *)(v59
                                     + (unsigned __int16)(v156
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v156) >> 16) >> 5))) ^ 0x46) << 24);
  v161 = 7
       * (((v141 >> 20 >> (((HIBYTE(v70) & 0x86 ^ 0x82)
                          + (HIBYTE(v70) & 0x86 ^ 4)
                          - (v145 & 0x82 ^ 0x80)
                          - (v145 & 0x82 ^ 2)) & 0xFE)) & 0xF0 | (v70 >> 28)) ^ 0xA)
       + 1813;
  v162 = v160 ^ ((*(unsigned __int8 *)(v59
                                     + (unsigned __int16)(v161
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v161) >> 16) >> 5))) ^ 6) << 28);
  v163 = ((v162 >> 27) & 4) + ((v162 >> 28) ^ 0x222);
  v164 = ((*(unsigned __int8 *)(v59
                              + (unsigned __int16)(7 * (HIBYTE(v160) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v160) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)(7 * v163 - 960 * ((unsigned __int16)((15295 * v163) >> 16) >> 5))) ^ 0x46) << 12);
  LOWORD(v160) = 7 * ((v159 >> 20) & 0xF)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * ((v159 >> 20) & 0xF) + 3822)) >> 16) >> 5);
  v165 = 7 * ((unsigned __int16)(v157 ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)v150) ^ 0x46) << 12)) >> 12)
       + 3822;
  v166 = 7 * (((16 * v155 + ((32 * v155) & 0x80) + 70) ^ v145) >> 4) + 3822;
  v167 = ((((v164 | *(unsigned __int8 *)(v59
                                       + (unsigned __int16)(7 * (BYTE2(v158) & 0xF)
                                                          + 3822
                                                          - 960
                                                          * ((unsigned __int16)((2185
                                                                                             * (7 * (HIWORD(v158) & 0xF)
                                                                                              + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)v160) ^ 0x46) << 12) | *(unsigned __int8 *)(v59 + (unsigned __int16)(7 * ((v157 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v157 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v59 + (unsigned __int16)(v165 - 960 * ((unsigned __int16)((2185 * v165) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v59 + (unsigned __int16)(7 * (v145 & 0xF ^ 6) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v145 & 0xF ^ 6u) + 3822)) >> 16) >> 5))) ^ 0x46;
  v168 = *(unsigned __int8 *)(v59
                            + (unsigned __int16)(v166
                                               - 960 * ((unsigned __int16)((2185 * v166) >> 16) >> 5)));
  v169 = STACK[0x6B4];
  *((_DWORD *)&STACK[0x810] + (LODWORD(STACK[0x6A0]) + 2985) % 0x114u) = (LODWORD(STACK[0x694])
                                                                        - 438623053
                                                                        + LODWORD(STACK[0x67C])
                                                                        + v49) ^ 0x47B86DAD ^ (16 * (v168 ^ 0x46)) ^ v167;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8 * ((23 * (v169 != 47)) ^ LODWORD(STACK[0x6B0]))) - 12))();
}

void sub_1FE26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;

  LODWORD(STACK[0x6A8]) = v5;
  LODWORD(STACK[0x6D0]) = a5 - 880376335;
  v6 = STACK[0x660];
  v7 = LODWORD(STACK[0x658]) + 1;
  --LODWORD(STACK[0x6C8]);
  LODWORD(STACK[0x660]) = v6 + 2;
  LODWORD(STACK[0x658]) = v7;
  JUMPOUT(0x1FCA58);
}

uint64_t sub_1FE2E4@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  char v55;
  unsigned int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  BOOL v89;
  int v90;
  unsigned int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned __int16 v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  char v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned __int8 v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  int v229;
  char v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned __int16 v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  __int16 v263;
  __int16 v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  int v268;
  int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  unsigned int v281;
  int v282;
  __int16 v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  int v294;
  unsigned int v295;
  __int16 v296;
  __int16 v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  int v303;
  int v304;
  int v305;
  int v306;
  int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  int v327;
  unsigned int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  int v349;
  int v350;
  unsigned int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  unsigned int v363;
  unsigned int v364;
  int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  unsigned __int16 v369;
  int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  int v379;
  int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned __int16 v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  int v388;
  int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  int v394;
  int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  __int16 v411;
  int v412;
  int v413;
  int v414;
  unsigned int v415;
  int v416;
  unsigned int v417;
  unsigned int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  unsigned int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  int v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  unsigned __int16 v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  __int16 v470;
  int v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  int v477;
  unsigned __int16 v478;
  unsigned int v479;
  int v480;
  int v481;
  unsigned int v482;
  unsigned int v483;
  int v484;
  int v485;
  __int16 v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned __int16 v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  char v504;
  int v505;
  unsigned int v506;
  unsigned int v507;
  int v508;
  unsigned int v509;
  unsigned int v510;
  char v511;
  __int16 v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  unint64_t v518;
  int v519;
  int v520;
  unsigned int v521;
  int v522;
  __int16 v523;
  unsigned __int16 v524;
  __int16 v525;
  int v526;
  int v527;
  int v528;
  __int16 v529;
  unsigned int v530;
  int v531;
  unsigned __int16 v532;
  int v533;
  unsigned int v534;
  int v535;
  unsigned int v536;
  int v537;
  int v538;
  int v539;
  unsigned int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  unsigned int v556;
  int v557;
  int v558;
  int v559;
  int v560;
  unsigned int v561;
  int v562;
  int v563;
  int v564;
  int v565;
  int v566;
  unsigned int v567;
  int v568;
  unsigned int v569;
  int v570;
  unsigned int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  unsigned int v576;
  int v577;
  int v578;
  int v579;
  unsigned int v580;
  unsigned int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  int v586;
  unsigned int v587;
  int v588;
  int v589;
  int v590;
  unsigned int v591;
  int v592;
  int v593;
  unsigned int v594;
  int v595;
  int v596;
  int v597;
  unsigned int v598;
  int v599;
  unsigned int v600;
  int v601;
  unsigned int v602;
  int v603;
  unsigned __int16 v604;
  unsigned int v605;
  int v606;
  unsigned int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  unsigned int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  unsigned int v617;
  int v618;
  int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  int v624;
  unsigned int v625;
  unint64_t v626;
  int v627;
  int v628;
  unsigned int v629;
  unsigned int v630;
  unsigned int v631;
  unsigned int v632;
  int v633;
  int v634;
  int v635;
  int v636;
  unsigned int v637;
  int v638;
  int v639;
  int v640;
  unsigned int v641;
  unsigned int v642;
  int v643;
  unsigned int v644;
  int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  int v649;
  int v650;
  unsigned int v651;
  int v652;
  unsigned int v653;
  int v654;
  int v655;
  unsigned int v656;
  unsigned int v657;
  unsigned int v658;
  int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  int v663;
  int v664;
  int v665;
  int v666;
  int v667;
  int v668;
  unsigned int v669;
  int v670;
  int v671;
  int v672;
  unsigned int v673;
  unsigned int v674;
  int v675;
  int v676;
  unsigned int v677;
  unsigned int v678;
  int v679;
  int v680;
  int v681;
  unsigned int v682;
  int v683;
  int v684;
  int v685;
  unsigned int v686;
  unsigned int v687;
  int v688;
  unsigned int v689;
  int v690;
  unsigned int v691;
  int v692;
  unsigned int v693;
  int v694;
  int v695;
  unsigned int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  int v705;
  unsigned int v706;
  unsigned int v707;
  unsigned int v708;
  int v709;
  int v710;
  int v711;
  int v712;
  int v713;
  unsigned int v714;
  int v715;
  unsigned int v716;
  unsigned int v717;
  int v718;
  int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  int v725;
  int v726;
  int v727;
  int v728;
  int v729;
  int v730;
  int v731;
  unsigned int v732;
  int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  int v737;
  unsigned int v738;
  int v739;
  int v740;
  unsigned int v741;
  int v742;
  int v743;
  int v744;
  unsigned int v745;
  int v746;
  int v747;
  int v748;
  unsigned int v749;
  unsigned int v750;
  unsigned int v751;
  unsigned int v752;
  int v753;
  unsigned int v754;
  int v755;
  int v756;
  unsigned int v757;
  int v758;
  unsigned int v759;
  unsigned int v760;
  unsigned int v761;
  unsigned int v762;
  int v763;
  int v764;
  int v765;
  unsigned int v766;
  int v767;
  unsigned int v768;
  unsigned int v769;
  unsigned int v770;
  int v771;
  int v772;
  int v773;
  unsigned int v774;
  int v775;
  unsigned int v776;
  unsigned int v777;
  unsigned int v778;
  int v779;
  int v780;
  unsigned int v781;
  unsigned int v782;
  int v783;
  int v784;
  int v785;
  unsigned int v786;
  int v787;
  unsigned int v788;
  unsigned int v789;
  unsigned int v790;
  int v791;
  int v792;
  unsigned int v793;
  int v794;
  int v795;
  int v796;
  unsigned int v797;
  char *v798;
  int v799;
  unsigned int v800;
  unsigned int v801;
  unsigned int v802;
  unsigned int v803;
  int v804;
  unsigned int v805;
  unsigned int v806;
  unsigned int v807;
  unsigned int v808;
  int v809;
  unsigned int v810;
  unsigned int v811;
  unsigned int v812;
  unsigned int v813;
  int v814;
  int v815;
  unsigned int v816;
  int v817;
  int v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  int v824;
  unsigned int v825;
  unsigned int v826;
  unsigned int v827;
  int v828;
  int v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  int v833;
  unsigned int v834;
  int v835;
  unsigned int v836;
  int v837;
  int v838;
  unsigned int v839;
  int v840;
  int v841;
  int v842;
  unsigned int v843;
  int v844;
  int v845;
  unsigned int v846;
  int v847;
  int v848;
  unint64_t v849;
  int v850;
  int v851;
  int v852;
  int v853;
  int v854;
  int v855;
  unsigned int v856;
  int v857;
  unsigned int v858;
  int v859;
  int v860;
  int v861;
  int v862;
  int v863;
  int v864;
  unsigned int v865;
  unsigned int v866;
  int v867;
  unsigned int v868;
  unsigned int v869;
  unsigned __int16 v870;
  int v871;
  int v872;
  int v873;
  int v874;
  unsigned int v875;
  int v876;
  int v877;
  int v878;
  int v879;
  unsigned int v880;
  unsigned int v881;
  int v882;
  unsigned int v883;
  int v884;
  unsigned int v885;
  int v886;
  unsigned int v887;
  int v888;
  unsigned int v889;
  int v890;
  unsigned int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  int v897;
  int v898;
  unsigned int v899;
  int v900;
  unsigned int v901;
  unsigned int v902;
  int v903;
  int v904;
  unsigned int v905;
  int v906;
  int v907;
  unint64_t v908;
  int v909;
  int v910;
  int v911;
  unsigned int v912;
  unsigned int v913;
  unsigned int v914;
  int v915;
  int v916;
  unsigned int v917;
  unsigned int v918;
  unsigned int v919;
  unsigned int v920;
  int v921;
  int v922;
  unsigned int v923;
  unsigned int v924;
  int v925;
  unsigned int v926;
  int v927;
  int v928;
  int v929;
  int v930;
  unsigned int v931;
  int v932;
  int v933;
  int v934;
  int v935;
  unsigned int v936;
  unsigned int v937;
  unsigned int v938;
  int v939;
  int v940;
  int v941;
  int v942;
  unsigned int v943;
  int v944;
  int v945;
  int v946;
  int v947;
  int v948;
  int v949;
  int v950;
  int v951;
  unsigned int v952;
  int v953;
  int v954;
  unsigned int v955;
  int v956;
  int v957;
  int v958;
  int v959;
  int v960;
  int v961;
  int v962;
  unsigned int v963;
  int v964;
  unsigned int v965;
  int v966;
  unsigned int v967;
  unsigned int v968;
  unsigned int v969;
  int v970;
  unsigned int v971;
  int v972;
  int v973;
  char v974;
  int v975;
  int v976;
  int v977;
  int v978;
  int v979;
  int v980;
  unsigned int v981;
  int v982;
  unsigned int v983;
  int v984;
  unsigned int v985;
  int v986;
  int v987;
  int v988;
  int v989;
  unsigned int v990;
  int v991;
  unsigned int v992;
  int v993;
  unsigned __int16 v994;
  int v995;
  int v996;
  int v997;
  int v998;
  unsigned int v999;
  unsigned int v1000;
  unsigned int v1001;
  unsigned int v1002;
  int v1003;
  int v1004;
  int v1005;
  int v1006;
  int v1007;
  int v1008;
  int v1009;
  int v1010;
  int v1011;
  int v1012;
  int v1013;
  int v1014;
  unsigned int v1015;
  unsigned int v1016;
  unsigned int v1017;
  int v1018;
  unsigned int v1019;

  v10 = LODWORD(STACK[0x648]) ^ 2;
  v11 = LODWORD(STACK[0x518]) + v7 - 1699636782;
  LODWORD(STACK[0x670]) = v10;
  v12 = v11 - ((v10 - 1567014102) & (2 * v11)) + 1363977537;
  v13 = STACK[0x6B8];
  v14 = *(unsigned __int8 *)(STACK[0x6B8]
                           + (unsigned __int16)(7 * ((v12 >> 28) ^ 5)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * ((v12 >> 28) ^ 5) + 3640)) >> 16) >> 5))) ^ 0x46;
  v15 = LODWORD(STACK[0x628]) ^ 0xD539D82C;
  LODWORD(STACK[0x504]) = v15;
  v16 = v15 - a1 - ((2 * (v15 - a1) + 1653577650) & 0x6089362E) - 510892304;
  v17 = 7 * (HIBYTE(v12) & 0xF ^ 1) + 3640;
  v18 = ((*(unsigned __int8 *)(v13
                             + (unsigned __int16)(v17 - 960
                                                      * ((unsigned __int16)((2185 * v17) >> 16) >> 5))) ^ 0x46) << 8) ^ (v14 << 12);
  v19 = 7 * (HIWORD(v12) & 0xF ^ 0xC) + 3640;
  v20 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(v19 - 960 * ((unsigned __int16)((2185 * v19) >> 16) >> 5))) ^ 0x46 | v18;
  v21 = 7 * ((v12 >> 8) & 0xF ^ 5) + 3640;
  v22 = 7 * (((unsigned __int16)(v12 & 0xF000) >> 12) ^ 0xA) + 3640;
  v23 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(v22 - 960 * ((unsigned __int16)((2185 * v22) >> 16) >> 5))) ^ 0x46;
  v25 = 7 * ((v12 >> 4) ^ 4) + 3640;
  v26 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(v25 - 960 * ((unsigned __int16)((2185 * v25) >> 16) >> 5))) ^ 0x46;
  v27 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(7 * (v12 & 0xF ^ 1)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v12 & 0xF ^ 1) + 3640)) >> 16) >> 5)));
  v28 = (v20 << 8) ^ ((*(unsigned __int8 *)(v13
                                          + (7 * ((v12 >> 20) & 0xF ^ 4) + 3640)
                                          % ((((LODWORD(STACK[0x530]) + 130748541) & 0x1464D6C8)
                                            - 30644983
                                            + ((LODWORD(STACK[0x530]) + 130748541) & 0x1464D6C8 ^ 0x1464D6C8)
                                            + 2064) & 0xE424B7C8)) ^ 0x46) << 12);
  v29 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(v21 - 960 * ((unsigned __int16)((2185 * v21) >> 16) >> 5))) ^ 0x46;
  v30 = ((v28 | v29) << 8) - 1796729712 - (((v28 | v29) << 9) & 0x29D02800);
  LODWORD(STACK[0x6D0]) = v30;
  v31 = v30 ^ (v23 << 12);
  v32 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(7 * ((v16 >> 28) ^ 3)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * ((v16 >> 28) ^ 3) + 3640)) >> 16) >> 5)));
  v33 = (v31 ^ 0x94E81490 | v27 ^ 0x46) ^ (16 * v26);
  LODWORD(STACK[0x6D8]) = v33;
  v34 = (BYTE2(v16) ^ 0x44u) >> ((BYTE2(v16) & 4 ^ 4) + (BYTE2(v16) & 4));
  LOWORD(v23) = v34 + 5440 + (~(2 * v34) | 0xFF81);
  v35 = (v34 & 7 ^ ((v23 ^ 0xC7) + (v23 & 0xF8 ^ 0x3F) + 1) ^ 7) * ((HIWORD(v16) & 0xF ^ 4) + 520);
  v36 = ((*(unsigned __int8 *)(v13
                             + (unsigned __int16)(7 * (HIBYTE(v16) & 0xF)
                                                + 3640
                                                - 960
                                                * ((unsigned __int16)((2185
                                                                                   * (7 * (HIBYTE(v16) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((v32 ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (v35 - 960 * ((4473925 * (unint64_t)v35) >> 32))) ^ 0x46;
  v37 = 7 * (((unsigned __int16)((v15 - a1 - ((2 * (v15 - a1) - 26702) & 0x362E) + 26352) & 0xF000) >> 12) ^ 9) + 3640;
  v38 = (v36 << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v23 ^ 0x153F) + 3640) % 0x3C0u) ^ 0x46) << 12);
  v39 = 7 * ((v16 >> 8) & 0xF ^ 0xB) + 3640;
  v40 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(v37 - 960 * ((unsigned __int16)((2185 * v37) >> 16) >> 5))) ^ 0x46;
  v41 = 7 * (((v15 - a1 - ((2 * (v15 - a1) - 78) & 0x2E) - 16) >> 4) ^ 1) + 3640;
  v42 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(v41 - 960 * ((unsigned __int16)((2185 * v41) >> 16) >> 5)));
  v43 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(v39 - 960 * ((unsigned __int16)((2185 * v39) >> 16) >> 5))) ^ 0x46;
  v44 = *(unsigned __int8 *)(v13
                           + (unsigned __int16)(7 * (v16 & 0xF ^ 7)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v16 & 0xF ^ 7) + 3640)) >> 16) >> 5)));
  v45 = (v27 ^ 0x46) & 0xF;
  LODWORD(STACK[0x6C8]) = v45;
  v46 = ((v38 | v43) << 8) - 2140396119 - (((v38 | v43) << 9) & 0xD84A00);
  v47 = v46 ^ (v40 << 12);
  v44 ^= 0x46u;
  v48 = (v47 ^ 0x806C25A9 | v44) ^ (16 * (v42 ^ 0x46));
  LODWORD(STACK[0x6B0]) = v48;
  v49 = LOBYTE(STACK[0xF58]);
  v50 = 7 * (v45 & 0xFFFFFF0F | (16 * (v44 & 0xF)));
  LODWORD(STACK[0x56C]) = 16 * (v49 ^ 0x46);
  v51 = 16 * (v49 ^ 0x46) + 1624158731 - ((32 * v49) & 0x400);
  LODWORD(STACK[0x6A0]) = v51;
  v52 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v50 + 3983) % 0x3C0u) ^ 0x46;
  v53 = (v52 + 1624158731 - ((2 * v52) & 0x16)) ^ v51;
  if (v50 >= 0x3C0)
    v50 -= 960;
  v54 = *(unsigned __int8 *)(v13 + v50);
  LODWORD(STACK[0x698]) = 7 * v53;
  v55 = (*(_BYTE *)(v13 + 7 * v53 % 0x3C0u) >> 4) ^ 4;
  v56 = 7 * (v48 & 0xF0 | (v33 >> 4));
  v57 = 7 * ((v55 - 2 * (v55 & 7 ^ ((*(_BYTE *)(v13 + 7 * v53 % 0x3C0u) & 0x10) != 0)) + 70) ^ v54)
      + 3983;
  v58 = *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v48 & 0xF0 | (v33 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v57 - 960 * ((unsigned __int16)((8739 * v57) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LODWORD(STACK[0x694]) = v58;
  LODWORD(STACK[0x688]) = 7 * v58;
  LODWORD(STACK[0x6B4]) = (unsigned __int16)(7 * v58 + 3983)
                        % (((unsigned __int16)(112 - 7 * v58) | (unsigned __int16)(7 * v58 + 3983)) & 0x3C0u);
  v59 = v3 + 1290473770;
  v60 = v8;
  v61 = (a3 ^ 0xF9A7126C) - v6 + (v8 ^ 0x3E736B15) + (v59 ^ 0xEDFBBAA1 ^ v8) + 884868905;
  v62 = v8 ^ 0xC18C94EA;
  v63 = ((2 * (v61 ^ (v6 - 1228369796 + v62))) & 0x97FD26FE) + (v61 ^ (v6 - 1228369796 + v62) ^ 0x4BFE937F);
  v64 = v59 ^ 0x2C772E4B;
  v65 = ((v59 ^ 0x2C772E4B) - 287634587 + v63) ^ v61;
  LODWORD(STACK[0x5E8]) = v65;
  v66 = v64 + 987340516;
  LODWORD(STACK[0x594]) = v65 + v63 - 1274975103;
  v67 = (v65 + v63 - 1274975103) ^ 0xDCF3890C;
  LODWORD(STACK[0x4E8]) = v67;
  v68 = v67 + v66;
  LODWORD(STACK[0x4EC]) = v68;
  v69 = STACK[0x534];
  LODWORD(STACK[0x680]) = v12 ^ v8;
  v70 = v69 - 2135856531 + v68 - ((2 * (v69 - 2135856531 + v68) - 2008140650) & 0xD0C31E02) + 747153740;
  LODWORD(STACK[0x560]) = (7 * (v70 & 0xF ^ 1) + 3640)
                        % ((((v12 ^ v8) & 0x5321EFA1 ^ 0x100021A1 | (v12 ^ v8) & 0x5321EFA1 ^ 0x4321CE00) + 2039700895)
                         * ((7 * (v70 & 0xF ^ 1) + 3640) & 0xCB3 ^ (-3641 - 7 * (v70 & 0xF ^ 1)) & 0xE59AB0B3));
  v71 = (a1 + 1320694823) ^ 0x2C772E4B;
  LODWORD(STACK[0x630]) = a2;
  v72 = (v5 ^ 0x6E3AFC63) + v9 + (a2 ^ 0xA3ECD5CE) + ((v71 + 1544759857 - ((2 * v71) & 0xB8265462)) ^ a2) + 854647852;
  v73 = ((2 * (v72 ^ (v4 - 1198148743 + (a2 ^ 0x5C132A31)))) & 0xD3D7FDBA)
      + (v72 ^ (v4 - 1198148743 + (a2 ^ 0x5C132A31)) ^ 0xE9EBFEDD);
  v74 = (v71 + 1357750279 + v73) ^ v72;
  v75 = v73 + (a2 ^ 0x5C132A31) - ((2 * (v73 + (a2 ^ 0x5C132A31)) + 28542114) & 0x1F2A097A);
  v76 = v73 + 370409763 + v74;
  LODWORD(STACK[0x4C4]) = v76;
  LODWORD(STACK[0x600]) = v60;
  LODWORD(STACK[0x4E0]) = v74 + 1317391330 - ((2 * v74) & 0x9D0B97C4);
  if (v56 >= 0x3C0)
    v77 = v56 - 960;
  else
    v77 = v56;
  LODWORD(STACK[0x5B0]) = v77;
  v78 = 7 * ((LODWORD(STACK[0x6B0]) >> 4) & 0xF0 | (LODWORD(STACK[0x6D8]) >> 8) & 0xF);
  v79 = 7 * (((v47 >> 8) & 0xF0 | ((unsigned __int16)v31 >> 12)) ^ 0x21);
  v80 = 7 * (((v47 >> 12) & 0xF0 | HIWORD(v31) & 0xF) ^ 0xC8);
  LODWORD(STACK[0x614]) = v46;
  v81 = 7 * ((HIWORD(v46) & 0xF0 | (LODWORD(STACK[0x6D0]) >> 20) & 0xF) ^ 0x6E);
  v82 = 7 * (((v46 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x6D0])) & 0xF) ^ 4);
  v83 = ((2 * ((unsigned __int16)(7 * (((v46 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x6D0])) & 0xF) ^ 4) + 3983) % 0x780u)) & 0x75A)
      + (((unsigned __int16)(7 * (((v46 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x6D0])) & 0xF) ^ 4) + 3983) % 0x780u) ^ 0x7E7DEBAD);
  LODWORD(STACK[0x5E4]) = v83;
  LODWORD(STACK[0x590]) = v78;
  if (v78 >= 0x3C0)
    v84 = v78 - 960;
  else
    v84 = v78;
  LODWORD(STACK[0x5AC]) = v84;
  LODWORD(STACK[0x5A4]) = v79;
  if (v79 >= 0x3C0)
    v85 = v79 - 960;
  else
    v85 = 7 * (((v47 >> 8) & 0xF0 | ((unsigned __int16)v31 >> 12)) ^ 0x21);
  LODWORD(STACK[0x5C0]) = v85;
  LODWORD(STACK[0x5B8]) = v80;
  if (v80 >= 0x3C0)
    v86 = v80 - 960;
  else
    v86 = 7 * (((v47 >> 12) & 0xF0 | HIWORD(v31) & 0xF) ^ 0xC8);
  LODWORD(STACK[0x5DC]) = v86;
  LODWORD(STACK[0x5D8]) = v81;
  if (v81 >= 0x3C0)
    v87 = v81 - 960;
  else
    v87 = v81;
  LODWORD(STACK[0x5EC]) = v87;
  if (v82 >= 0x3C0)
    v88 = v82 - 960;
  else
    v88 = v82;
  LODWORD(STACK[0x5F0]) = v88;
  v89 = v83 - 2122181549 >= 0x3C0;
  v90 = LODWORD(STACK[0x510]) - 2028443235;
  LODWORD(STACK[0x39C]) = v90;
  v91 = v66 + v90 - ((2 * (v66 + v90)) & 0x9E40B1C4) + 1327519970;
  v92 = LODWORD(STACK[0x634]) ^ 0xF5AA1AC;
  LODWORD(STACK[0x4F8]) = v92;
  v93 = 7 * (~HIBYTE(v91) & 0xF) + 3640;
  v94 = 7 * ((v91 >> 20) & 0xF ^ 2) + 3640;
  v95 = ((*(unsigned __int8 *)(v13
                             + (unsigned __int16)(v93 - 960
                                                      * ((unsigned __int16)((2185 * v93) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v91 >> 28) ^ 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v91 >> 28) ^ 4) + 3640)) >> 16) >> 5))) ^ 6) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (BYTE2(v91) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v91) & 0xF) + 3640)) >> 16) >> 5)));
  v96 = 7 * (((unsigned __int16)(v91 & 0xF000) >> 12) ^ 5) + 3640;
  v97 = 7 * ((v91 >> 8) & 0xF ^ 8) + 3640;
  LODWORD(STACK[0x668]) = v91;
  v98 = 7 * ((v91 >> 4) ^ 0xE) + 3640;
  v99 = ((*(unsigned __int8 *)(v13
                             + (unsigned __int16)(v94 - 960
                                                      * ((unsigned __int16)((2185 * v94) >> 16) >> 5))) ^ 0x46) << 20) ^ (v95 << 16) ^ 0x460000;
  v100 = v99 - 2090962448 - ((2 * v99) & 0x6BC0000);
  v101 = (v100 ^ 0x835E71F0 | ((*(unsigned __int8 *)(v13
                                                   + (unsigned __int16)(v97
                                                                      - 960
                                                                      * ((unsigned __int16)((2185 * v97) >> 16) >> 5))) ^ 0x46) << 8)) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v96 - 960 * ((unsigned __int16)((2185 * v96) >> 16) >> 5))) ^ 0x46) << 12);
  v102 = v92 - v71 - 987340516 - ((2 * (v92 - v71 - 987340516)) & 0x9773E96A) - 877005643;
  v103 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (v91 & 0xF ^ 2)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v91 & 0xF ^ 2) + 3640)) >> 16) >> 5))) ^ 0x46;
  v104 = (v101 | v103) ^ (16
                        * (*(unsigned __int8 *)(v13
                                              + (unsigned __int16)(v98
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v98) >> 16) >> 5))) ^ 0x46));
  v105 = 7 * (HIBYTE(v102) & 0xF ^ 0xB) + 3640;
  LOWORD(v105) = v105 - 960 * ((unsigned __int16)((2185 * v105) >> 16) >> 5);
  v106 = 7 * ((v102 >> 20) & 0xF ^ 0xB) + 3640;
  v107 = 7 * (HIWORD(v102) & 0xF ^ 9) + 3640;
  v108 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v107
                                               - 960 * ((unsigned __int16)((2185 * v107) >> 16) >> 5))) ^ 0x46 ^ ((unint64_t)(*(unsigned __int8 *)(v13 + (unsigned __int16)v105) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v102 >> 28) ^ 0xC) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v102 >> 28) ^ 0xC) + 3640)) >> 16) >> 5))) ^ 0x46)) ^ 0x46u) << (((v105 & 0x18 ^ 0x18) + (v105 & 0x18)) & 0xEF));
  v109 = 7 * ((unsigned __int16)~(v92 - v71 + 24860 - ((2 * (v92 - v71 + 24860)) & 0xE96A) - 2891) >> 12) + 3640;
  v110 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v109
                                               - 960 * ((unsigned __int16)((2185 * v109) >> 16) >> 5))) ^ 0x46;
  v111 = ((v102 >> 7) & 0x10 | (v102 >> 8) & 0xF) ^ 0x20C;
  v112 = (v108 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v106
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v106) >> 16) >> 5))) ^ 0x46) << 12);
  v113 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v111
                                               - 960 * ((unsigned __int16)((15295 * v111) >> 16) >> 5))) ^ 0x46;
  v114 = ((v112 | v113) + 7517290 - 2 * ((v112 | v113) & 0x72B47F ^ v113 & 0x15)) ^ (16 * v110
                                                                                   - ((32 * v110) & 0x8C0)
                                                                                   - 697125782);
  LOBYTE(v113) = (16 * v110 - ((32 * v110) & 0xC0) + 106) & 0x70;
  v115 = 7
       * (((v92 - v71 + 28 - ((2 * (v92 - v71 + 28)) & 0x6A) - 75) ^ 0xB5u) >> (((v113 ^ 0xEB)
                                                                                                + (v113 ^ 0x19)) & 0xFC))
       + 3640;
  LOWORD(v102) = 7 * (v102 & 0xF ^ 5)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v102 & 0xF ^ 5) + 3640)) >> 16) >> 5);
  v116 = (*(unsigned __int8 *)(v13 + (unsigned __int16)v102) ^ 0x46 | (v114 << 8)) ^ ((unint64_t)(*(unsigned __int8 *)(v13 + (unsigned __int16)(v115 - 960 * ((unsigned __int16)((8739 * v115) >> 16) >> 7))) ^ 0x46u) << (((v102 & 0x21 ^ 0x21) + (v102 & 0x21)) ^ 0x25));
  v117 = v103 & 0xF;
  LODWORD(STACK[0x650]) = v117;
  v118 = 7 * (v117 & 0xFF0F | (16 * (v116 & 0xF)));
  v119 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v118 + 3983) % 0x3C0u) ^ 0x46;
  v120 = STACK[0x6A0];
  v121 = 7 * ((v119 + 1624158731 - ((2 * v119) & 0x16)) ^ LODWORD(STACK[0x6A0]));
  LODWORD(STACK[0x620]) = v121;
  if (v89)
    v122 = -608183364;
  else
    v122 = -608182404;
  LODWORD(STACK[0x564]) = v122;
  if (v118 >= 0x3C0u)
    v118 -= 960;
  v123 = (*(_BYTE *)(v13 + v121 % 0x3C0) >> 4) ^ 4;
  v124 = 7
       * ((v123 - 2 * (v123 & 7 ^ ((*(_BYTE *)(v13 + v121 % 0x3C0) & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v118))
       + 3983;
  LODWORD(STACK[0x624]) = v104;
  v125 = 7 * (v116 & 0xF0 | (v104 >> 4));
  v126 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v124
                                               - 960 * ((unsigned __int16)((8739 * v124) >> 16) >> 7)));
  if (v125 >= 0x3C0)
    v125 -= 960;
  v127 = *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v116 & 0xF0 | (v104 >> 4)) + 3983) % 0x3C0u) ^ (16 * (v126 ^ 0x46)) ^ 0x46;
  LODWORD(STACK[0x61C]) = 7 * v127;
  LODWORD(STACK[0x618]) = 244671 * v127;
  v128 = (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(7 * v127
                                                - 960 * ((unsigned __int16)((244671 * v127) >> 16) >> 9))) >> 4) ^ 4;
  v129 = 7 * ((v128 - ((2 * v128) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + v125)) + 3983;
  v130 = 7 * ((v116 >> 4) & 0xF0 | (v104 >> 8) & 0xF);
  v131 = *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v116 >> 4) & 0xF0 | (v104 >> 8) & 0xF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v129 - 960 * ((unsigned __int16)((8739 * v129) >> 16) >> 7))) ^ 0x46));
  if (v130 >= 0x3C0)
    v130 -= 960;
  v132 = v131 ^ 0x46;
  v133 = *(unsigned __int8 *)(v13 + v130);
  LODWORD(STACK[0x5E0]) = 7 * v132;
  v134 = (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(7 * v132
                                                - 960 * ((unsigned __int16)((244671 * v132) >> 16) >> 9))) >> 4) ^ 4;
  v135 = 7 * ((v134 - ((2 * v134) & 0xC) + 70) ^ v133) + 3983;
  LODWORD(STACK[0x5F8]) = v101;
  v136 = 7 * ((v116 >> 8) & 0xF0 | ((unsigned __int16)v101 >> 12));
  v137 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * ((v116 >> 8) & 0xF0 | ((unsigned __int16)v101 >> 12)) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v13
                                                             + (unsigned __int16)(v135
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v135) >> 16) >> 7))) ^ 0x46));
  if (v136 >= 0x3C0)
    v136 -= 960;
  v138 = v137 ^ 0x46;
  LODWORD(STACK[0x5D4]) = 7 * v138;
  LODWORD(STACK[0x5D0]) = 244671 * v138;
  v139 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v138
                                               - 960 * ((unsigned __int16)((244671 * v138) >> 16) >> 9)));
  v140 = (((v139 >> 4) ^ 4) - 2 * (((v139 >> 4) ^ 4) & 7 ^ ((v139 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v136);
  v141 = 7 * ((v116 >> 12) & 0xF0 | HIWORD(v101) & 0xF);
  v142 = *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v116 >> 12) & 0xF0 | BYTE2(v101) & 0xF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * v140 + 3983 - 960 * ((unsigned __int16)((8739 * (7 * v140 + 3983)) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LODWORD(STACK[0x5A8]) = 7 * v142;
  v143 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v142
                                               - 960 * ((unsigned __int16)((244671 * v142) >> 16) >> 9)));
  if (v141 >= 0x3C0)
    v141 -= 960;
  v144 = 7
       * ((((v143 >> 4) ^ 4) - ((2 * ((v143 >> 4) ^ 4)) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + v141))
       + 3983;
  v145 = 7 * ((HIWORD(v116) & 0xF0 | (v100 >> 20) & 0xF) ^ 5);
  v146 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * ((BYTE2(v116) & 0xF0 | (v100 >> 20) & 0xF) ^ 5) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v144 - 960 * ((unsigned __int16)((8739 * v144) >> 16) >> 7))) ^ 0x46));
  if (v145 >= 0x3C0)
    v145 -= 960;
  v147 = HIBYTE(v116);
  LODWORD(STACK[0x5A0]) = v100;
  v148 = HIBYTE(v100) & 0xF | (16 * ((HIBYTE(v116) ^ 0xFFFFFF0) + (HIBYTE(v116) | 0xF)));
  v149 = 7 * (v146 ^ 0x46);
  LODWORD(STACK[0x58C]) = v149;
  LODWORD(STACK[0x588]) = 244671 * (v146 ^ 0x46);
  v150 = (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(v149 - 960
                                                       * ((unsigned __int16)((244671 * (v146 ^ 0x46u)) >> 16) >> 9))) >> 4) ^ 4;
  v151 = 7 * ((v150 - ((2 * v150) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + v145)) + 3983;
  v152 = 7 * ((v148 + 16) ^ 3);
  v153 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v151
                                               - 960 * ((unsigned __int16)((8739 * v151) >> 16) >> 7)));
  v154 = *(unsigned __int8 *)(v13 + (v152 + 3983) % 0x3C0);
  v155 = v71 + 1489241569 + (v76 ^ 0xDCF3890C);
  LODWORD(STACK[0x4BC]) = v155;
  v156 = v154 ^ (16 * (v153 ^ 0x46)) ^ 0x46;
  LODWORD(STACK[0x578]) = 7 * v156;
  LODWORD(STACK[0x574]) = 244671 * v156;
  v157 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v156
                                               - 960 * ((unsigned __int16)((244671 * v156) >> 16) >> 9)));
  v158 = 7
       * ((((v157 >> 4) ^ 4) - 2 * (((v157 >> 4) ^ 4) & 7 ^ ((v157 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v152 % 0x3C0))
       + 3983;
  LODWORD(STACK[0x5BC]) = v100 + 0x80000000;
  v159 = 7 * (v147 & 0xF0 | ((v100 + 0x80000000) >> 28)) + 3983;
  v160 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v159 - 960 * ((unsigned __int16)((8739 * v159) >> 16) >> 7))) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v158 - 960 * ((unsigned __int16)((8739 * v158) >> 16) >> 7))) ^ 0x46));
  v161 = ((2 * v160) & 0x472) + (v160 ^ 0x27F);
  if (v161 <= 0x89)
    v162 = 7 * v161;
  else
    v162 = (7 * v161 - 960) % 0x3C0;
  LODWORD(STACK[0x598]) = v162;
  v163 = LODWORD(STACK[0x514]) - 182781616;
  LODWORD(STACK[0x398]) = v163;
  v164 = v66 + v163 + 805999142 - ((2 * (v66 + v163)) & 0x6015244C);
  v165 = v62 - 1698315986;
  LODWORD(STACK[0x6A8]) = v63 - 1274975103 + v165;
  v166 = (v164 ^ 0x300A9226) >> ((v165 ^ ((v60 ^ 0x14) + 18)) & 0x18);
  v167 = LODWORD(STACK[0x524]) - v71 - ((2 * (LODWORD(STACK[0x524]) - v71) - 1137641534) & 0x8BBF6AE4);
  LODWORD(STACK[0x6B0]) = v75 - 1066481906;
  v168 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7 * (v166 & 0xF)
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((2185 * (7 * (v166 & 0xF) + 3640)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v166 >> 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v166 >> 4) + 3640)) >> 16) >> 5))) ^ 0x46) << 12);
  LODWORD(STACK[0x5FC]) = v164;
  v169 = 7 * (((unsigned __int16)(v164 & 0xF000) >> 12) ^ 9) + 3640;
  v170 = 7 * ((v164 >> 8) & 0xF ^ 2) + 3640;
  v171 = 7 * ((v164 >> 4) ^ 2) + 3640;
  v172 = v171 - 960 * ((2185 * v171) >> 21);
  v173 = (v172 & 0x208) + (v164 & 0xF ^ 6) + (v172 & 0x208 ^ 0x208);
  v174 = ((v168 | *(unsigned __int8 *)(v13
                                     + (unsigned __int16)(7
                                                        * (((v75 - 14578) & 0xF ^ 0xD | (v75 - 14578) & 0xF ^ 2) & (HIWORD(v164) ^ 0xA))
                                                        + 3640)
                                     % 0x3C0u) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13
                                                                                    + (unsigned __int16)(7 * ((v164 >> 20) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v164 >> 20) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(v170 - 960 * ((unsigned __int16)((2185 * v170) >> 16) >> 5))) ^ 0x46;
  v175 = (v174 << 8) + 1837690068 - ((v174 << 9) & 0xDB11D800);
  v176 = v167 + 603468115;
  v177 = 7 * (((v167 + 603468115) >> 28) ^ 0xC) + 3640;
  v178 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v169
                                               - 960 * ((unsigned __int16)((2185 * v169) >> 16) >> 5))) ^ 0x46;
  v179 = *(unsigned __int8 *)(v13 + (unsigned __int16)v172) ^ 0x46;
  v180 = v175 ^ (v178 << 12);
  v181 = v175;
  LODWORD(STACK[0x658]) = v175;
  v182 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v173
                                               - 960 * ((unsigned __int16)((122339 * v173) >> 16) >> 8))) ^ 0x46;
  v183 = (v180 ^ 0x6D88ECD4 | v182) ^ (16 * v179);
  v184 = 7 * (HIBYTE(v176) & 0xF ^ 5) + 3640;
  v185 = 7 * ((v176 >> 20) & 0xF ^ 0xD) + 3640;
  v186 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v184
                                                 - 960 * ((unsigned __int16)((2185 * v184) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v177 - 960 * ((unsigned __int16)((2185 * v177) >> 16) >> 5))) ^ 0x46) << 12);
  v187 = 7 * (~HIWORD(v176) & 0xF) + 3640;
  v188 = v186 | *(unsigned __int8 *)(v13
                                   + (unsigned __int16)(v187
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v187) >> 16) >> 5))) ^ 0x46;
  v189 = 7 * (((unsigned __int16)(v176 & 0xF000) >> 12) ^ 0xB) + 3640;
  v190 = (v188 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v185
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v185) >> 16) >> 5))) ^ 0x46) << 12);
  v191 = 7 * ((v176 >> 8) & 0xF ^ 5) + 3640;
  v192 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v191
                                               - 960 * ((unsigned __int16)((2185 * v191) >> 16) >> 5))) ^ 0x46 ^ v190 ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v189 - 960 * ((unsigned __int16)((2185 * v189) >> 16) >> 5))) ^ 0x46));
  v193 = (v192 << 8) + 590694196 - ((v192 << 9) & 0x466A8E00);
  v194 = 7 * ((v176 >> 4) ^ 7) + 3640;
  v195 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (v176 & 0xF ^ 2)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v176 & 0xF ^ 2) + 3640)) >> 16) >> 5))) ^ 0x46;
  v196 = (v193 ^ 0x23354734 | v195) ^ (16
                                     * (*(unsigned __int8 *)(v13
                                                           + (unsigned __int16)(v194
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v194) >> 16) >> 5))) ^ 0x46));
  v197 = v182 & 0xF;
  LODWORD(STACK[0x634]) = v197;
  v198 = 7 * (v197 & 0xFFFFFF0F | (16 * (v195 & 0xF)));
  LODWORD(STACK[0x628]) = v183;
  v199 = 7 * (v196 & 0xF0 | (v183 >> 4));
  LODWORD(STACK[0x568]) = v199;
  LODWORD(STACK[0x558]) = v198;
  if (v198 >= 0x3C0)
    v200 = v198 - 960;
  else
    v200 = 7 * (v197 & 0xFFFFFF0F | (16 * (v195 & 0xF)));
  LODWORD(STACK[0x59C]) = v200;
  if (v199 >= 0x3C0)
    v201 = v199 - 960;
  else
    v201 = 7 * (v196 & 0xF0 | (v183 >> 4));
  LODWORD(STACK[0x5B4]) = v201;
  v202 = (v196 >> 4) & 0xF0 | (v183 >> 8) & 0xF;
  LODWORD(STACK[0x584]) = v202;
  if ((7 * v202) >= 0x3C0)
    v203 = 7 * v202 - 960;
  else
    v203 = 7 * v202;
  LODWORD(STACK[0x5CC]) = v203;
  LODWORD(STACK[0x648]) = v180;
  v204 = 7 * ((v192 & 0xF0 | ((unsigned __int16)v180 >> 12)) ^ 0xE);
  v205 = 7 * (((v193 >> 12) & 0xF0 | HIWORD(v180) & 0xF) ^ 0x58);
  v206 = STACK[0x5E8];
  v207 = (6 - LODWORD(STACK[0x5E8])) | (LODWORD(STACK[0x5E8]) + 9);
  LODWORD(STACK[0x660]) = v181 >> 20;
  v208 = (v181 >> 20) ^ 0x6D8;
  LODWORD(STACK[0x608]) = v208;
  LODWORD(STACK[0x610]) = v193;
  v209 = 7 * ((v207 & v208 & 0xF | (16 * ((v193 >> 20) & 0xF))) ^ 0x30);
  v210 = 7 * (((v193 >> 20) & 0xF0 | (v208 >> 4)) ^ 0x30);
  v211 = (LODWORD(STACK[0x594]) - ((2 * LODWORD(STACK[0x594])) & 0xF06B2F2A) - 130705515) ^ v206;
  LODWORD(STACK[0x67C]) = v70;
  v212 = 7 * (HIBYTE(v70) & 0xF ^ 8) + 3640;
  v213 = LODWORD(STACK[0x638]) ^ 0x1A331FFF;
  LODWORD(STACK[0x4F0]) = v213;
  v214 = v213 - v155 - ((2 * (v213 - v155)) & 0x5E357E88);
  v215 = 7 * ((v70 >> 20) & 0xF ^ 6) + 3640;
  v216 = 7 * (HIWORD(v70) & 0xF ^ 1) + 3640;
  v217 = ((((*(unsigned __int8 *)(v13
                                + (unsigned __int16)(v212
                                                   - 960 * ((unsigned __int16)((2185 * v212) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v70 >> 28) ^ 6) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v70 >> 28) ^ 6) + 3640)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(v216 - 960 * ((unsigned __int16)((2185 * v216) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v215 - 960 * ((unsigned __int16)((2185 * v215) >> 16) >> 5))) ^ 0x46) << 12);
  v218 = 7 * (((unsigned __int16)v70 >> 12) ^ 8) + 3640;
  LOWORD(v215) = v218 - 960 * ((unsigned __int16)((2185 * v218) >> 16) >> 5);
  v219 = 7 * (~(v70 >> 8) & 0xF) + 3640;
  v220 = v217 | *(unsigned __int8 *)(v13
                                   + (unsigned __int16)(v219
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v219) >> 16) >> 5))) ^ 0x46;
  v221 = (v220 << 8) + 2109109598 - ((v220 << 9) & 0xFB6CEA00);
  v222 = v214 + 790282052;
  v223 = (STACK[0x560] & 0x208) + (((v214 + 790282052) >> 28) ^ 2) + (STACK[0x560] & 0x208 ^ 0x208);
  LOWORD(v214) = 7 * v223 - 960 * ((unsigned __int16)((122339 * v223) >> 16) >> 8);
  v224 = *(unsigned __int8 *)(v13 + (unsigned __int16)v215);
  v225 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (v70 >> 4)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185
                                                                    * (7 * (v70 >> 4)
                                                                     + 3640)) >> 16) >> 5)));
  v226 = v221 ^ ((v224 ^ 0x46) << 12);
  v227 = v221;
  v228 = v225 ^ 0x46;
  v229 = *(unsigned __int8 *)(v13 + LODWORD(STACK[0x560]));
  v230 = v229 ^ 0x46;
  v231 = (v226 ^ 0x7DB6755E | v229 ^ 0x46) ^ (16 * v228);
  v232 = 7 * (~HIBYTE(v222) & 0xF) + 3640;
  v233 = *(unsigned __int8 *)(v13 + (unsigned __int16)v214);
  v234 = 7 * ((BYTE2(v222) ^ 0x1A) >> ((v233 & 4 ^ 4) + (v233 & 4))) + 3640;
  v235 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v232
                                                 - 960 * ((unsigned __int16)((2185 * v232) >> 16) >> 5))) ^ 0x46) << 8) ^ ((v233 ^ 0x46) << 12);
  v236 = 7 * ((BYTE2(v222) ^ 0x1A) & 0xF) + 3640;
  v237 = v235 | *(unsigned __int8 *)(v13
                                   + (unsigned __int16)(v236
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v236) >> 16) >> 5))) ^ 0x46;
  v238 = 7 * (((unsigned __int16)(v222 & 0xF000) >> 12) ^ 0xB) + 3640;
  v239 = 7 * (~(v222 >> 8) & 0xF) + 3640;
  v240 = 7 * ((v222 >> 4) ^ 4) + 3640;
  v241 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v240
                                               - 960 * ((unsigned __int16)((2185 * v240) >> 16) >> 5)));
  v242 = 7 * (v222 & 0xF ^ 4) + 3640 - 960 * ((2185 * (7 * (v222 & 0xF ^ 4) + 3640)) >> 21);
  v243 = (v237 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v234
                                                               - 960
                                                               * ((unsigned __int16)((8739 * v234) >> 16) >> 7))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(v239 - 960 * ((unsigned __int16)((2185 * v239) >> 16) >> 5))) ^ 0x46;
  v244 = (v243 << 8) + 394019124 - ((v243 << 9) & 0x2EF88200);
  v245 = v244 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v238
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v238) >> 16) >> 5))) ^ 0x46) << 12);
  v246 = *(unsigned __int8 *)(v13 + (unsigned __int16)v242) ^ 0x46;
  v247 = (v245 ^ 0x177C4134 | v246) ^ (16 * (v241 ^ 0x46));
  v248 = 7 * ((v241 & 0xF ^ 9 | v241 & 0xF ^ 6) & (v229 ^ 6) & 0xFFFFFF0F | (16 * (v246 & 0xF)));
  v249 = (unsigned __int16)(v248 + 3983) % 0x3C0u;
  LODWORD(STACK[0x4DC]) = v204;
  if (v204 >= 0x3C0)
    v250 = v204 - 960;
  else
    v250 = v204;
  LODWORD(STACK[0x554]) = v250;
  LODWORD(STACK[0x54C]) = v205;
  if (v205 >= 0x3C0)
    v251 = v205 - 960;
  else
    v251 = v205;
  LODWORD(STACK[0x55C]) = v251;
  LODWORD(STACK[0x550]) = v209;
  if (v209 >= 0x3C0)
    v252 = v209 - 960;
  else
    v252 = v209;
  LODWORD(STACK[0x560]) = v252;
  LODWORD(STACK[0x570]) = v210;
  if (v210 >= 0x3C0)
    v253 = v210 - 960;
  else
    v253 = v210;
  LODWORD(STACK[0x638]) = v253;
  if (v248 >= 0x3C0)
    v248 -= 960;
  v254 = *(unsigned __int8 *)(v13 + v249) ^ 0x46;
  v255 = 7 * ((v254 + 1624158731 - ((2 * v254) & 0x16)) ^ v120);
  v256 = (v255 + 3983) % 0x3C0;
  LODWORD(STACK[0x5E8]) = v231;
  v257 = 7 * (v247 & 0xF0 | (v231 >> 4));
  v258 = *(unsigned __int8 *)(v13 + v255 % 0x3C0);
  v259 = 7
       * ((((v258 >> 4) ^ 4) - 2 * (((v258 >> 4) ^ 4) & 7 ^ ((v258 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v248))
       + 3983;
  v260 = v259 - 960 * ((8739 * v259) >> 23);
  v261 = v257 - 960;
  if (v257 < 0x3C0)
    v261 = 7 * (v247 & 0xF0 | (v231 >> 4));
  v262 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v257 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v13 + (unsigned __int16)v260) ^ 0x46)) ^ 0x46;
  v263 = 7 * v262;
  v262 *= 244671;
  v264 = v263 - 960 * ((v262 + 139217799) >> 25);
  v265 = 7 * ((v247 >> 4) & 0xF0 | (v231 >> 8) & 0xF);
  v266 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v263 - 960 * (v262 >> 25)));
  v267 = (((v266 >> 4) ^ 4) - 2 * (((v266 >> 4) ^ 4) & 7 ^ ((v266 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v261);
  v268 = 16
       * (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(7 * v267
                                                + 3983
                                                - 960
                                                * ((unsigned __int16)((8739 * (7 * v267 + 3983)) >> 16) >> 7))) ^ 0x46);
  v269 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v265 + 3983) % 0x3C0u) ^ 0x46;
  v270 = (v268 | v269) & 0x4040404 | v269 & 0xFFFFFFFB ^ v268 & 0xFFFFFBFF;
  v271 = *(unsigned __int8 *)(v13 + v256) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v264 + 3983)) ^ 0x46)) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * v270 + 3983) % 0x3C0u) ^ 0x46) << 8);
  if (v265 >= 0x3C0)
    v265 -= 960;
  v272 = *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * v270 - 960 * ((unsigned __int16)((244671 * v270) >> 16) >> 9)));
  v273 = 7
       * ((((v272 >> 4) ^ 4) - 2 * (((v272 >> 4) ^ 4) & 7 ^ ((v272 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v265))
       + 3983;
  LOWORD(v273) = v273 - 960 * ((unsigned __int16)((8739 * v273) >> 16) >> 7);
  LODWORD(STACK[0x594]) = v226;
  v274 = ((unsigned __int16)v226 >> 12) ^ ((unint64_t)(((unsigned __int16)v245 >> 12) ^ 4u) << ((v273 | 0x2E) - (v273 & 0xD1u) - 42)) ^ 7;
  v275 = *(unsigned __int8 *)(v13 + (7 * v274 + 3983) % 0x3C0u);
  v276 = v275 ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v273) ^ 0x46)) ^ 0x46;
  v277 = v271 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * v276 + 3983) % 0x3C0u) ^ 0x46) << 12);
  v278 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v276
                                               - 960 * ((unsigned __int16)((244671 * v276) >> 16) >> 9))) >> 4;
  v279 = ((v278 ^ 0xB) + (v278 ^ 4)) & (HIWORD(v226) ^ 0x16) ^ (v245 >> 12) & 0xF0;
  v280 = 7
       * (*(_BYTE *)(v13 + v274 * ((v275 ^ 1) & 7 | v275 & 7 ^ 6u) % 0x3C0) ^ v278 ^ 0x42)
       + 3983;
  v281 = 7 * (v279 ^ 0xC0);
  v282 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v281 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v280 - 960 * ((unsigned __int16)((8739 * v280) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v283 = 7 * v282;
  v284 = 244671 * v282;
  v285 = v277 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v283 - 960 * ((v284 + 139217799) >> 25) + 3983)) ^ 0x46) << 16);
  if (v281 >= 0x3C0)
    v281 -= 960;
  v286 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v283 - 960 * (v284 >> 25)));
  v287 = 7
       * ((((v286 >> 4) ^ 4) - 2 * (((v286 >> 4) ^ 4) & 7 ^ ((v286 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v281))
       + 3983;
  v288 = 7 * ((((v227 >> 20) ^ 0xFFFFF82B) + ((v227 >> 20) & 0xFF0 ^ 0x7DF) + 1) ^ HIWORD(v244) & 0xF0 ^ 0x70);
  v289 = *(unsigned __int8 *)(v13 + (v288 + 3983) % 0x3C0) ^ (16
                                                            * (*(unsigned __int8 *)(v13
                                                                                  + (unsigned __int16)(v287 - 960 * ((unsigned __int16)((8739 * v287) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v290 = v285 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * v289 + 3983) % 0x3C0u) ^ 0x46) << 20);
  v291 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v289
                                               - 960 * ((unsigned __int16)((244671 * v289) >> 16) >> 9)));
  v292 = 7
       * ((((v291 >> 4) ^ 4) - 2 * (((v291 >> 4) ^ 4) & 7 ^ ((v291 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v288 % 0x3C0))
       + 3983;
  LODWORD(STACK[0x4D8]) = v227;
  v293 = 7 * (((v244 >> 20) & 0xF0 | HIBYTE(v227) & 0xF) ^ 0x7D);
  v294 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (((v244 >> 20) & 0xF0 | HIBYTE(v227) & 0xF) ^ 0x7D) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v13
                                                             + (unsigned __int16)(v292
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v292) >> 16) >> 7))) ^ 0x46));
  if (v293 >= 0x3C0)
    v293 -= 960;
  v295 = v294 ^ 0x46;
  v296 = 7 * v295;
  v295 *= 244671;
  v297 = v296 - 960 * ((v295 + 139217799) >> 25);
  LOWORD(v295) = v296 - 960 * (v295 >> 25);
  v298 = v290 ^ 0x46;
  v299 = (*(unsigned __int8 *)(v13 + (unsigned __int16)(v297 + 3983)) ^ 0x46) << 24;
  v300 = (*(unsigned __int8 *)(v13 + (unsigned __int16)v295) >> 4) ^ 4;
  v301 = (v300 - ((2 * v300) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + v293);
  v302 = v299 & 0x27000000 ^ v298 & 0x27169850 | v299 & 0xD8000000 ^ v298 & 0xD8E967AF;
  v303 = 7 * ((HIBYTE(v244) & 0xF0 | (v227 >> 28)) ^ 0x17) + 3983;
  v304 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v13
                                                                     + (unsigned __int16)(v303
                                                                                        - 960
                                                                                        * ((unsigned __int16)((8739 * v303) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * v301 + 3983 - 960 * ((unsigned __int16)((8739 * (7 * v301 + 3983)) >> 16) >> 7))) ^ 0x46)) ^ 0x46)
                                               + 3983)
                            % 0x3C0u);
  LODWORD(STACK[0x4D0]) = v304;
  LODWORD(STACK[0x4CC]) = v302 + 1889126826 - ((2 * v302) & 0xE1339354);
  v305 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7
                                               * (v230 & 0xF | (16
                                                              * (((v302 - 13910 - ((2 * v302) & 0x9354)) ^ 0xAAAA) & (20 - (v304 & 5 ^ 4 | v304 & 5 ^ 1)))))
                                               + 1813)
                            % 0x3C0u);
  LODWORD(STACK[0x4C0]) = v305;
  LOWORD(v303) = 7 * (v305 & 0xF ^ 6)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v305 & 0xF ^ 6u) + 3822)) >> 16) >> 5);
  v306 = (v211 ^ 0x24C61E99) + LODWORD(STACK[0x4EC]);
  v307 = LODWORD(STACK[0x528]) ^ 0x2A3EE290;
  LODWORD(STACK[0x4EC]) = v307;
  v308 = v307 - 1944238268 + v306 - ((2 * (v307 - 1944238268 + v306)) & 0x9F1127FA);
  v309 = *(unsigned __int8 *)(v13 + (unsigned __int16)v303);
  LODWORD(STACK[0x4C8]) = v309;
  v310 = v308 - 813132803;
  v311 = v211 ^ LODWORD(STACK[0x6A8]);
  v312 = v311 ^ 0xEBAD6F1F;
  v313 = (-1800351891 - (((v211 ^ 0x24C61E99) - 169560882 + v312) & 0x20)) ^ ((v211 ^ 0x24C61E99) - 169560882 + v312) & 0xFFFFFFDF;
  v314 = LODWORD(STACK[0x4C4]) ^ 0x927642EE;
  v315 = LODWORD(STACK[0x4E0]) ^ v314;
  v316 = v315 - 169560882 + LODWORD(STACK[0x4BC]);
  v317 = 7 * (((v309 ^ 0xF9) & 0xF | v309 & 0xF ^ 6) & (((v308 - 813132803) >> 24) ^ 0xCF)) + 3640;
  v318 = 7 * (((v308 - 813132803) >> 20) & 0xF ^ 8) + 3640;
  v319 = 7 * (((v308 - 813132803) >> 16) & 0xF ^ 8) + 3640;
  v320 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v317 - 960 * ((unsigned __int16)((8739 * v317) >> 16) >> 7))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v310 >> 28) ^ 0xC) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v310 >> 28) ^ 0xC) + 3640)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(v319 - 960 * ((unsigned __int16)((2185 * v319) >> 16) >> 5))) ^ 0x46;
  v321 = 7 * ((v310 >> 8) & 0xF ^ 3) + 3640;
  LOWORD(v319) = v321 - 960 * ((unsigned __int16)((2185 * v321) >> 16) >> 5);
  v322 = 7 * (((unsigned __int16)(v310 & 0xF000) >> 12) ^ 9) + 3640;
  v323 = (v320 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v318
                                                               - 960 * ((unsigned __int16)((2185 * v318) >> 16) >> 5))) ^ 0x46) << 12);
  v324 = ((2 * v313) & 0xFDB5FC3A) + (v313 ^ 0xFEDAFE1D);
  v325 = LODWORD(STACK[0x520])
       - v316
       - 1754242276
       - ((2 * (LODWORD(STACK[0x520]) - v316 - 1754242276) + 394620522) & 0x789E9BB8)
       - 2012084975;
  v326 = (((403 - v324) ^ (v324 + 620)) & 0x208) + (HIBYTE(v325) & 0xF ^ 0xC);
  v327 = v323 | *(unsigned __int8 *)(v13 + (unsigned __int16)v319) ^ 0x46;
  v328 = (v327 << 8) + 1159321460 - ((v327 << 9) & 0x8A33AE00);
  v329 = 7 * (~HIWORD(v325) & 0xF) + 3640;
  v330 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7 * v326
                                                 - 960 * ((unsigned __int16)((15295 * v326) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v325 >> 28) ^ 3) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v325 >> 28) ^ 3) + 3640)) >> 16) >> 5))) ^ 0x46) << 12);
  v331 = 7 * ((v325 >> 20) & 0xF ^ 4) + 3640;
  v332 = v330 | *(unsigned __int8 *)(v13
                                   + (unsigned __int16)(v329
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v329) >> 16) >> 5))) ^ 0x46;
  v333 = 7
       * (((unsigned __int16)(LOWORD(STACK[0x520])
                            - (v315
                             - 19250
                             + LOWORD(STACK[0x4BC]))
                            + 25372
                            - ((2 * (LOWORD(STACK[0x520]) - (v315 - 19250 + LOWORD(STACK[0x4BC])) + 25372) + 28266) & 0x9BB8)
                            + 1297) >> 12) ^ 4)
       + 3640;
  v334 = 7 * ((v325 >> 8) & 0xF ^ 0xD) + 3640;
  v335 = (v332 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v331
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v331) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(v334 - 960 * ((unsigned __int16)((2185 * v334) >> 16) >> 5))) ^ 0x46;
  v336 = v328 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v322
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v322) >> 16) >> 5))) ^ 0x46) << 12);
  v337 = ((v335 << 8) - 270666837 - ((v335 << 9) & 0xDFBBE600)) ^ ((*(unsigned __int8 *)(v13
                                                                                       + (unsigned __int16)(v333 - 960 * ((unsigned __int16)((2185 * v333) >> 16) >> 5))) ^ 0x46) << 12);
  LODWORD(STACK[0x4AC]) = v337;
  v338 = (v335 << 8) - 270666837 - ((v335 << 9) & 0xDFBBE600);
  LODWORD(STACK[0x49C]) = v336;
  v339 = 7 * (((v337 >> 12) & 0xF0 | HIWORD(v336) & 0xF) ^ 0xD9);
  LODWORD(STACK[0x4B4]) = (unsigned __int16)(7 * (((v337 >> 12) & 0xF0 | BYTE2(v336) & 0xF) ^ 0xD9) + 3983)
                        % (((112 - 7 * (((v337 >> 12) & 0xF0 | BYTE2(v336) & 0xF) ^ 0xD9)) & 0x3C0)
                         + ((7 * (((v337 >> 12) & 0xF0 | BYTE2(v336) & 0xF) ^ 0xD9) + 3983) & 0x3C0));
  v340 = v315 ^ LODWORD(STACK[0x6B0]);
  v341 = v340;
  LODWORD(STACK[0x474]) = v340;
  v342 = (v340 ^ 0xC0FE753B) + v315 - 169560882;
  v343 = (v340 ^ 0xC0FE753B)
       - (v342 ^ 0x94B0CF6D)
       - 632164114
       + (((v340 ^ 0x480723DB) + 1317391330 - ((2 * (v340 ^ 0x480723DB)) & 0x9D0B97C4)) ^ v314);
  LODWORD(STACK[0x4D4]) = v310;
  v344 = 7 * (~(v310 >> 4) & 0xF) + 3640;
  v345 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v344
                                               - 960 * ((unsigned __int16)((2185 * v344) >> 16) >> 5)));
  v346 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (v310 & 0xF ^ 0xD)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v310 & 0xF ^ 0xD) + 3640)) >> 16) >> 5)));
  v347 = ((2 * v343) & 0xFFFEF4AE ^ 0x174C44A6) + (v343 ^ 0x7459DDA4);
  LODWORD(STACK[0x4BC]) = v347;
  v348 = (v336 ^ 0x4519D774 | v346 ^ 0x46) ^ (16 * (v345 ^ 0x46));
  LODWORD(STACK[0x490]) = v348;
  v349 = 7 * ((v325 >> 4) ^ 0xD) + 3640;
  v350 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (v325 & 0xF ^ 0xC)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v325 & 0xF ^ 0xC) + 3640)) >> 16) >> 5))) ^ 0x46;
  LODWORD(STACK[0x48C]) = v350;
  LODWORD(STACK[0x4B8]) = (v346 ^ 0x46) & 0xF;
  v351 = 7 * ((v346 ^ 0x46) & 0xF | (16 * (v350 & 0xF)));
  v352 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v349
                                               - 960 * ((unsigned __int16)((2185 * v349) >> 16) >> 5))) ^ 0x46;
  LODWORD(STACK[0x488]) = 16 * v352;
  v353 = 7 * ((((v338 ^ (16 * v352 - ((32 * v352) & 0xFFFFFDFF) + 3838)) >> 4) & 0xF0 | (v348 >> 8) & 0xF) ^ 0xD0);
  LODWORD(STACK[0x494]) = v353;
  LODWORD(STACK[0x484]) = v351;
  if (v351 >= 0x3C0)
    v354 = v351 - 960;
  else
    v354 = v351;
  LODWORD(STACK[0x498]) = v354;
  if (v353 >= 0x3C0)
    v355 = v353 - 960;
  else
    v355 = v353;
  LODWORD(STACK[0x4A0]) = v355;
  if (v339 >= 0x3C0)
    v356 = v339 - 960;
  else
    v356 = v339;
  LODWORD(STACK[0x4B0]) = v356;
  LODWORD(STACK[0x4A8]) = v338;
  LODWORD(STACK[0x4A4]) = v328;
  v357 = 7 * ((HIWORD(v338) & 0xF0 | (v328 >> 20) & 0xF) ^ 0xD1);
  v358 = 7 * (((v338 >> 20) & 0xF0 | HIBYTE(v328) & 0xF) ^ 0xF5);
  v359 = LODWORD(STACK[0x4E8]) ^ 0x635439FF;
  LODWORD(STACK[0x480]) = v311;
  v360 = (v359 ^ v311)
       + ((v312 + 1598753077) ^ 0xA0B4F6CB)
       + ((2 * (v312 + 1598753077)) & 0x4169ED96)
       - v324
       - 651366645;
  v361 = ((2 * v360) & 0x9F77FFDA ^ 0x17454FC2) + (v360 ^ 0x441D581E);
  LODWORD(STACK[0x4C4]) = v361;
  v362 = v306 + (v311 ^ 0x2B91909);
  v363 = v306 - 1168937410 + v361;
  v364 = LODWORD(STACK[0x640]) ^ 0xE0BACDAA;
  LODWORD(STACK[0x4E8]) = v364;
  v365 = v363 + v364 - ((2 * (v363 + v364)) & 0x7D8E7E34);
  v366 = ((2 * (v342 ^ 0x94B0CF6D)) & 0xAD858B32) + (v342 ^ 0x42720AF4);
  v367 = v365 - 1094238438;
  v368 = 7 * (((v365 - 1094238438) >> 28) ^ 0xB) + 3640;
  v369 = v368 - 960 * ((unsigned __int16)((2185 * v368) >> 16) >> 5);
  v370 = v316 + (v341 ^ 0x29EA032D);
  v371 = v316 + 1983961097 + v347;
  v372 = LODWORD(STACK[0x530]) - v371 + 199763844 - ((2 * (LODWORD(STACK[0x530]) - v371 + 199763844)) & 0xE16F17A0);
  v373 = 7 * (HIBYTE(v367) & 0xF ^ 0xE) + 3640;
  v374 = 7 * ((v367 >> 20) & 0xF ^ 0xC) + 3640;
  v375 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v373
                                                 - 960 * ((unsigned __int16)((2185 * v373) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + v369) ^ 0x46) << 12);
  v376 = 7 * (HIWORD(v367) & 0xF ^ 7) + 3640;
  v377 = v375 | *(unsigned __int8 *)(v13
                                   + (unsigned __int16)(v376
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v376) >> 16) >> 5))) ^ 0x46;
  v378 = 7 * (((unsigned __int16)v367 >> 12) ^ 3) + 3640;
  v379 = (v377 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v374
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v374) >> 16) >> 5))) ^ 0x46) << 12);
  v380 = 7 * (~(v367 >> 8) & 0xF) + 3640;
  v381 = 7 * ((v367 >> 4) ^ 1) + 3640;
  v382 = v379 | *(unsigned __int8 *)(v13
                                   + (unsigned __int16)(v380
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v380) >> 16) >> 5))) ^ 0x46;
  v383 = (v382 << 8) + 1185760725 - ((v382 << 9) & 0x8D5A8A00);
  v384 = 7 * ((256406575 - v372) >> 28)
       + 3640
       - 960 * ((unsigned __int16)((2185 * (7 * ((256406575 - v372) >> 28) + 3640)) >> 16) >> 5);
  v372 -= 256406576;
  v385 = v383 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v378
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v378) >> 16) >> 5))) ^ 0x46) << 12);
  v386 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (v367 & 0xF ^ 0xA)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v367 & 0xF ^ 0xA) + 3640)) >> 16) >> 5))) ^ 0x46;
  v387 = (v385 ^ 0x46AD45D5 | v386) ^ (16
                                     * (*(unsigned __int8 *)(v13
                                                           + (unsigned __int16)(v381
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v381) >> 16) >> 5))) ^ 0x46));
  v388 = 7 * ((v372 >> 20) & 0xF ^ 0xB) + 3640;
  v389 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7 * (HIBYTE(v372) & 0xF)
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v372) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + v384) ^ 0x46) << 12);
  v390 = 7 * (HIWORD(v372) & 0xF ^ 7) + 3640;
  v391 = 7 * (((unsigned __int16)v372 >> 12) ^ 8) + 3640;
  v392 = v389 | *(unsigned __int8 *)(v13
                                   + (unsigned __int16)(v390
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v390) >> 16) >> 5))) ^ 0x46;
  v393 = 7 * ((v372 >> 8) & 0xF ^ 0xB) + 3640;
  v394 = 7 * ((v372 >> 4) ^ 0xD) + 3640;
  v395 = (v392 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v388
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v388) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(v393 - 960 * ((unsigned __int16)((2185 * v393) >> 16) >> 5))) ^ 0x46;
  LOWORD(v392) = 7 * (v372 & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v372 & 0xF) + 3640)) >> 16) >> 5);
  v396 = ((v395 << 8) + 468689749 - ((v395 << 9) & 0x37DF4600)) ^ ((*(unsigned __int8 *)(v13
                                                                                       + (unsigned __int16)(v391 - 960 * ((unsigned __int16)((2185 * v391) >> 16) >> 5))) ^ 0x46) << 12);
  v397 = (v395 << 8) + 468689749 - ((v395 << 9) & 0x37DF4600);
  v398 = *(unsigned __int8 *)(v13 + (unsigned __int16)v392) ^ 0x46;
  v399 = (v396 ^ 0x1BEFA355 | v398) ^ (16
                                     * (*(unsigned __int8 *)(v13
                                                           + (unsigned __int16)(v394
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v394) >> 16) >> 5))) ^ 0x46));
  v400 = v386 & 0xF;
  LODWORD(STACK[0x640]) = v400;
  v401 = 7 * (v400 & 0xFFFFFF0F | (16 * (v398 & 0xF)));
  LODWORD(STACK[0x47C]) = v387;
  v402 = 7 * (v399 & 0xF0 | (v387 >> 4));
  v403 = 7 * ((v399 >> 4) & 0xF0 | (v387 >> 8) & 0xF);
  LODWORD(STACK[0x478]) = v385;
  v404 = 7 * (((v396 >> 8) & 0xF0 | ((unsigned __int16)v385 >> 12)) ^ 0xA4);
  v405 = 7 * (((v396 >> 12) & 0xF0 | HIWORD(v385) & 0xF) ^ 0xFD);
  LODWORD(STACK[0x470]) = v397;
  LODWORD(STACK[0x46C]) = v383;
  v406 = 7 * ((HIWORD(v397) & 0xF0 | (v383 >> 20) & 0xF) ^ 0xEA);
  v407 = 7 * (((v397 >> 20) & 0xF0 | HIBYTE(v383) & 0xF) ^ 0xB6);
  v408 = v362 + 1643591079;
  v409 = v324;
  LODWORD(STACK[0x468]) = v324;
  v410 = v408 + v324;
  v411 = v367 ^ v410;
  LODWORD(STACK[0x3F0]) = v367 ^ v410;
  v412 = v410 ^ (v409 - 1153945059);
  LODWORD(STACK[0x464]) = v412;
  v413 = v363 ^ 0x7CE5DB61;
  LODWORD(STACK[0x45C]) = v363 ^ 0x7CE5DB61;
  v414 = LODWORD(STACK[0x50C]) - 2136619304;
  LODWORD(STACK[0x460]) = v413 - v412;
  LODWORD(STACK[0x394]) = v414;
  v415 = v413 - v412 + v414 - ((2 * (v413 - v412 + v414)) & 0x8CDB01DC) + 1181581550;
  v416 = 7 * (HIBYTE(v415) & 0xF ^ 6) + 3640;
  v417 = v370 + 1983926880 + v366;
  LODWORD(STACK[0x450]) = v417;
  v418 = v366 - 481269087;
  LODWORD(STACK[0x458]) = v366 - 481269087;
  LODWORD(STACK[0x454]) = v371 ^ 0x7CE5DB61;
  v419 = LODWORD(STACK[0x644]) ^ 0x4336F508;
  LODWORD(STACK[0x644]) = v417 ^ v418;
  v420 = (v371 ^ 0x7CE5DB61) - (v417 ^ v418);
  LODWORD(STACK[0x44C]) = v420;
  LODWORD(STACK[0x4E0]) = v419;
  v421 = v419 - v420 - ((2 * (v419 - v420)) & 0x176A6F2E);
  v422 = 7 * ((v415 >> 20) & 0xF ^ 6) + 3640;
  LOWORD(v418) = v422 - 960 * ((unsigned __int16)((2185 * v422) >> 16) >> 5);
  v423 = 7 * (HIWORD(v415) & 0xF ^ 0xD) + 3640;
  LOWORD(v417) = v423 - 960 * ((unsigned __int16)((2185 * v423) >> 16) >> 5);
  v424 = 7 * (((unsigned __int16)v415 >> 12) ^ 8) + 3640;
  v425 = (((*(unsigned __int8 *)(v13
                               + (unsigned __int16)(v416
                                                  - 960 * ((unsigned __int16)((2185 * v416) >> 16) >> 5))) ^ 0x46) << 16) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v415 >> 28) ^ 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v415 >> 28) ^ 4) + 3640)) >> 16) >> 5))) ^ 0x46) << 20) | ((*(unsigned __int8 *)(v13 + (unsigned __int16)v417) ^ 0x46) << 8)) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)v418) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v415 >> 8) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v415 >> 8) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x46;
  LODWORD(STACK[0x448]) = v415;
  v426 = 7 * ((v415 >> 4) ^ 0xE) + 3640;
  v427 = (v425 << 8) - 1825728010 - ((v425 << 9) & 0x265B3200);
  v421 += 196425623;
  v428 = 7 * (HIBYTE(v421) & 0xF ^ 0xB) + 3640;
  v429 = 7 * ((v421 >> 20) & 0xF ^ 0xB) + 3640;
  v430 = 7 * (HIWORD(v421) & 0xF ^ 5) + 3640;
  LOWORD(v397) = v430 - 960 * ((unsigned __int16)((2185 * v430) >> 16) >> 5);
  v431 = v427 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v424
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v424) >> 16) >> 5))) ^ 0x46) << 12);
  v432 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v426
                                               - 960 * ((unsigned __int16)((2185 * v426) >> 16) >> 5)));
  v433 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (v415 & 0xF ^ 0xE)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v415 & 0xF ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0x46;
  v434 = v431;
  v435 = (v431 ^ 0x932D99F6 | v433) ^ (16 * (v432 ^ 0x46));
  v436 = 7 * (((unsigned __int16)v421 >> 12) ^ 3) + 3640;
  v437 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v428
                                                 - 960 * ((unsigned __int16)((2185 * v428) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v421 >> 28) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v421 >> 28) + 3640)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)v397) ^ 0x46;
  v438 = 7 * ((v421 >> 8) & 0xF ^ 7) + 3640;
  v439 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v438
                                               - 960 * ((unsigned __int16)((2185 * v438) >> 16) >> 5))) ^ 0x46;
  v440 = (v437 << 8) ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v429
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v429) >> 16) >> 5))) ^ 0x46) << 12) | v439;
  v441 = v440 + 1877763463 - 2 * (v440 & 0x6FEC659F ^ v439 & 0x10);
  v442 = 7 * ((v421 >> 4) ^ 9) + 3640;
  LOWORD(v398) = 7 * (v421 & 0xF ^ 7)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v421 & 0xF ^ 7) + 3640)) >> 16) >> 5);
  v443 = (v441 + 8) & 0x7FFFFDC7;
  v444 = (((v441 + 8) << 8) ^ 0xEC658F00) - 929900413 - ((2 * (((v441 + 8) << 8) ^ 0xEC658F00)) & 0x9125B000);
  v445 = v444 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v436
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v436) >> 16) >> 5))) ^ 0x46) << 12);
  v446 = *(unsigned __int8 *)(v13 + (unsigned __int16)v398) ^ 0x46;
  v447 = (v445 ^ 0xC892D883 | v446) ^ (16
                                     * (*(unsigned __int8 *)(v13
                                                           + (unsigned __int16)(v442
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v442) >> 16) >> 5))) ^ 0x46));
  v448 = v433 & 0xF;
  LODWORD(STACK[0x444]) = v448;
  v449 = 7 * (v448 & 0xFFFFFF0F | (16 * (v446 & 0xF)));
  v450 = (unsigned __int16)(v449 + 3983) % 0x3C0u;
  LODWORD(STACK[0x3CC]) = v357;
  if (v357 >= 0x3C0)
    v451 = v357 - 960;
  else
    v451 = v357;
  LODWORD(STACK[0x3BC]) = v451;
  LODWORD(STACK[0x3E0]) = v358;
  if (v358 >= 0x3C0)
    v452 = v358 - 960;
  else
    v452 = v358;
  LODWORD(STACK[0x3C8]) = v452;
  LODWORD(STACK[0x40C]) = v401;
  if (v401 >= 0x3C0)
    v453 = v401 - 960;
  else
    v453 = v401;
  LODWORD(STACK[0x400]) = v453;
  LODWORD(STACK[0x414]) = v402;
  if (v402 >= 0x3C0)
    v454 = v402 - 960;
  else
    v454 = v402;
  LODWORD(STACK[0x404]) = v454;
  LODWORD(STACK[0x41C]) = v403;
  if (v403 >= 0x3C0)
    v455 = v403 - 960;
  else
    v455 = v403;
  LODWORD(STACK[0x408]) = v455;
  LODWORD(STACK[0x424]) = v404;
  if (v404 >= 0x3C0)
    v456 = v404 - 960;
  else
    v456 = v404;
  LODWORD(STACK[0x410]) = v456;
  LODWORD(STACK[0x42C]) = v405;
  if (v405 >= 0x3C0)
    v457 = v405 - 960;
  else
    v457 = v405;
  LODWORD(STACK[0x418]) = v457;
  LODWORD(STACK[0x430]) = v406;
  if (v406 >= 0x3C0)
    v458 = v406 - 960;
  else
    v458 = v406;
  LODWORD(STACK[0x420]) = v458;
  LODWORD(STACK[0x438]) = v407;
  if (v407 >= 0x3C0)
    v459 = v407 - 960;
  else
    v459 = v407;
  LODWORD(STACK[0x428]) = v459;
  if (v449 >= 0x3C0)
    v449 -= 960;
  v460 = v443 ^ 0x6FEC6587 | v443 ^ 0x90139840;
  v461 = *(unsigned __int8 *)(v13 + v450) ^ 0x46;
  v462 = STACK[0x6A0];
  v463 = (v461 + 1624158731 + (~(2 * v461) | 0xFFFFFFE9) + 1) ^ LODWORD(STACK[0x6A0]);
  v464 = 7 * v463 % 0x3C0;
  v465 = 7 * (v463 - v460) % 0x3C0;
  v466 = (((*(_BYTE *)(v13 + v464) >> 4) ^ 4)
                         - 2 * (((*(_BYTE *)(v13 + v464) >> 4) ^ 4) & 7 ^ ((*(_BYTE *)(v13 + v464) & 0x10) != 0))
                         + 70) ^ *(unsigned __int8 *)(v13 + v449);
  v467 = 7 * (v447 & 0xF0 | (v435 >> 4));
  v468 = 7 * v466 + 3983 - 960 * ((8739 * (7 * v466 + 3983)) >> 23);
  if (v467 >= 0x3C0)
    v467 -= 960;
  v469 = *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v447 & 0xF0 | (v435 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v468) ^ 0x46)) ^ 0x46;
  v470 = 7 * v469;
  v469 *= 244671;
  v471 = *(unsigned __int8 *)(v13 + v465) ^ (16
                                           * (*(unsigned __int8 *)(v13
                                                                 + (unsigned __int16)(v470
                                                                                    - 960 * ((v469 + 139217799) >> 25)
                                                                                    + 3983)) ^ 0x46));
  v472 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v470 - 960 * (v469 >> 25)));
  v473 = 7
       * ((((v472 >> 4) ^ 4) - 2 * (((v472 >> 4) ^ 4) & 7 ^ ((v472 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v467))
       + 3983;
  v474 = v473 - 960 * ((8739 * v473) >> 23);
  v475 = 7 * ((v447 >> 4) & 0xF0 | (v435 >> 8) & 0xF);
  v476 = v475 - 960;
  if (v475 < 0x3C0)
    v476 = v475;
  v477 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v475 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v13 + (unsigned __int16)v474) ^ 0x46)) ^ 0x46;
  v478 = 7 * v477 - 960 * ((unsigned __int16)((244671 * v477) >> 16) >> 9);
  v479 = 7 * v477 + 3983 - 960 * ((34953 * (7 * v477 + 3983)) >> 25);
  v480 = (*(unsigned __int8 *)(v13 + v478) >> 4) ^ 4;
  v481 = (v480 - ((2 * v480) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + v476);
  v482 = 7 * (((v445 >> 8) & 0xF0 | ((unsigned __int16)v434 >> 12)) ^ 0xD9);
  v483 = v482
       + 3983
       - 960 * ((unsigned __int16)(7 * (((v445 >> 8) & 0xF0 | ((unsigned __int16)v434 >> 12)) ^ 0xD9) + 3983) / 0x3C0u);
  v484 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v481
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (7 * v481 + 3983)) >> 16) >> 7)));
  if (v482 >= 0x3C0)
    v482 -= 960;
  v485 = *(unsigned __int8 *)(v13 + (unsigned __int16)v483) ^ (16 * (v484 ^ 0x46)) ^ 0x46;
  v486 = 7 * v485;
  v487 = 244671 * v485;
  v488 = 7 * v485 - 960 * ((244671 * v485 + 139217799) >> 25);
  v489 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v486 - 960 * (v487 >> 25))) >> 4;
  v490 = 7 * (((v489 ^ 4) - 2 * ((v489 ^ 4) & 0xE ^ v489 & 8) + 70) ^ *(unsigned __int8 *)(v13 + v482));
  LODWORD(STACK[0x3E8]) = v434;
  v491 = 7 * (((v445 >> 12) & 0xF0 | HIWORD(v434) & 0xF) ^ 0x2D);
  v492 = v490 + 3983 - 960 * ((8739 * (v490 + 3983)) >> 23);
  v493 = (unsigned __int16)(v491 + 3983) % 0x3C0u;
  if (v491 >= 0x3C0)
    v491 -= 960;
  v494 = *(unsigned __int8 *)(v13 + v493) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v492) ^ 0x46)) ^ 0x46;
  v495 = 7 * v494;
  v494 *= 244671;
  v496 = v495 - 960 * ((v494 + 139217799) >> 25);
  v497 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v495 - 960 * (v494 >> 25)));
  v498 = 7
       * ((((v497 >> 4) ^ 4) - 2 * (((v497 >> 4) ^ 4) & 7 ^ ((v497 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + v491))
       + 3983;
  v499 = v498 - 960 * ((8739 * v498) >> 23);
  v500 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v496 + 3983)) ^ 0x46) << 16) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v488 + 3983)) ^ 0x46) << 12);
  LODWORD(STACK[0x3F8]) = v500;
  v501 = 7 * ((HIWORD(v444) & 0xF0 | (v427 >> 20) & 0xF) ^ 0x92);
  v502 = v501 - 960;
  if (v501 < 0x3C0)
    v502 = 7 * ((HIWORD(v444) & 0xF0 | (v427 >> 20) & 0xF) ^ 0x92);
  v503 = 7
       * (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(7 * ((BYTE2(v444) & 0xF0 | (v427 >> 20) & 0xF) ^ 0x92) + 3983)
                             % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v499) ^ 0x46)) ^ 0x46);
  v504 = v471 ^ 0x46;
  v505 = v471 ^ 0x46 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)v479) ^ 0x46) << 8);
  v506 = v503 % ((v505 & 0x3C0 ^ 0x3C0) + (v505 & 0x3C0u));
  v507 = v503 + 3983 - 960 * ((34953 * (v503 + 3983)) >> 25);
  v508 = 7
       * ((((*(_BYTE *)(v13 + v506) >> 4) ^ 4)
                          - 2 * (((*(_BYTE *)(v13 + v506) >> 4) ^ 4) & 7 ^ ((*(_BYTE *)(v13 + v506) & 0x10) != 0))
                          + 70) ^ *(unsigned __int8 *)(v13 + v502))
       + 3983;
  v509 = v508 - 960 * ((8739 * v508) >> 23);
  LODWORD(STACK[0x3FC]) = v427;
  v510 = 7 * (((v444 >> 20) & 0xF0 | HIBYTE(v427) & 0xF) ^ 0x83);
  if (v510 >= 0x3C0)
    v510 -= 960;
  v511 = *(_BYTE *)(v13 + v510);
  v512 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (((v444 >> 20) & 0xF0 | HIBYTE(v427) & 0xF) ^ 0x83) + 3983)
                            % 0x3C0u) ^ (unsigned __int16)(16
                                                         * (*(unsigned __int8 *)(v13 + (unsigned __int16)v509) ^ 0x46)) ^ 0x46;
  v513 = (*(unsigned __int8 *)(v13 + (unsigned __int16)((v511 & 7 ^ 1 | v511 & 7 ^ 6) * v512) % 0x3C0u) >> 4) ^ 4;
  v514 = 7 * ((v513 - ((2 * v513) & 0xC) + 70) ^ v511) + 3983;
  v515 = 7 * ((HIBYTE(v444) & 0xF0 | (v427 >> 28)) ^ 0xC9) + 3983;
  v516 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v13
                                                                       + (unsigned __int16)(v515
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v515) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v514 - 960 * ((unsigned __int16)((8739 * v514) >> 16) >> 7))) ^ 0x46)) ^ 0x46)
                                                 + 3983)
                              % 0x3C0u) ^ 6) << 28) ^ ((*(unsigned __int8 *)(v13
                                                                           + (unsigned __int16)(7 * v512 + 3983)
                                                                           % 0x3C0u) ^ 0x46) << 24);
  LODWORD(STACK[0x3DC]) = v516;
  v517 = 7 * (v504 & 0xF0 | (v435 >> 4)) + 1813;
  v518 = v517 - 960 * ((2185 * v517) >> 21);
  STACK[0x3D0] = v518;
  v519 = v500 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)v507) ^ 0x46) << 20);
  LODWORD(STACK[0x3C0]) = v519;
  v520 = v516 ^ v519;
  LODWORD(STACK[0x3C4]) = v520;
  LODWORD(STACK[0x3B0]) = v520 ^ v505;
  LODWORD(v518) = 7
                * (((((v520 ^ v505) >> 8) & 0xF) << ((v518 & 4 ^ 4) + (v518 & 4))) ^ (v435 >> 8) & 0xF)
                + 1813;
  v521 = ((v520 ^ v505) >> 8) & 0xF0 | ((unsigned __int16)v434 >> 12);
  v522 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7 * (v521 ^ 9)
                                                 + 1813
                                                 - 960
                                                 * ((unsigned __int16)((2185 * (7 * (v521 ^ 9) + 1813)) >> 16) >> 5))) ^ 0x46) << 12) ^ ((*(unsigned __int8 *)(v13 + v518 % 0x3C0) ^ 0x46) << 8);
  LODWORD(STACK[0x3B8]) = v522;
  LODWORD(STACK[0x3B4]) = (7 * ((unsigned __int16)v522 >> 12) + 3822)
                        % (v411 & 0x3C0 ^ 0xC0 | v411 & 0x3C0 ^ 0x300u);
  LODWORD(v518) = *(unsigned __int8 *)(v13
                                     + (unsigned __int16)(LODWORD(STACK[0x688])
                                                        - 960
                                                        * ((unsigned __int16)((244671
                                                                                           * LODWORD(STACK[0x694])) >> 16) >> 9))) >> 4;
  LODWORD(v518) = 7
                * (((v518 ^ 4) - 2 * ((v518 ^ 4) & 0xE ^ v518 & 8) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5B0])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x590]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v521) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  v523 = v521 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(v521 - 960 * (v518 >> 25))) >> 4;
  LODWORD(v518) = 7
                * (((v518 ^ 4) - 2 * ((v518 ^ 4) & 0xE ^ v518 & 8) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5AC])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x5A4]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v524 = (unsigned __int16)(7 * v518 + 3983) % 0x3C0u;
  LODWORD(v518) = *(unsigned __int8 *)(v13
                                     + (unsigned __int16)(7 * v518
                                                        - 960
                                                        * ((unsigned __int16)((244671 * v518) >> 16) >> 9)));
  LODWORD(v518) = 7
                * ((((v518 >> 4) ^ 4)
                                   - 2 * (((v518 >> 4) ^ 4) & 7 ^ ((v518 & 0x10) != 0))
                                   + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5C0])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x5B8]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v521) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  v525 = v521 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(v521 - 960 * (v518 >> 25)));
  LODWORD(v518) = 7
                * ((((v518 >> 4) ^ 4)
                                   - 2 * (((v518 >> 4) ^ 4) & 7 ^ ((v518 & 0x10) != 0))
                                   + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5DC])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x5D8]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v519) = 7 * v518 - 960 * ((244671 * v518 + 139217799) >> 25);
  v526 = (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(7 * v518
                                                - 960 * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4) ^ 4;
  v527 = 7 * ((v526 - ((2 * v526) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5EC])))
       + 3983;
  v528 = *(unsigned __int8 *)(v13 + (LODWORD(STACK[0x5E4]) - 1513999145 + LODWORD(STACK[0x564]))) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v527 - 960 * ((unsigned __int16)((8739 * v527) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v529 = 7 * v528;
  v530 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v528
                                               - 960 * ((unsigned __int16)((244671 * v528) >> 16) >> 9)));
  v531 = 7
       * ((((v530 >> 4) ^ 4) - 2 * (((v530 >> 4) ^ 4) & 7 ^ ((v530 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5F0])))
       + 3983;
  v532 = v531 - 960 * ((unsigned __int16)((8739 * v531) >> 16) >> 7);
  v533 = HIBYTE(LODWORD(STACK[0x6D0]));
  v534 = 7 * ((((LODWORD(STACK[0x614]) + 0x80000000) >> 24) & 0xF0 | (LODWORD(STACK[0x6D0]) >> 28)) ^ 9) + 3983;
  v535 = *(unsigned __int8 *)(v13 + v532) ^ 0x46;
  v536 = 16 * v535 + 1524117239 - ((32 * v535) & 0xFFFFFDFF);
  v537 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v534 - 960 * ((unsigned __int16)((8739 * v534) >> 16) >> 7))) ^ 0x46;
  v538 = v537 - 30732514 - ((2 * v537) & 0x3C);
  v539 = v536 ^ v538 ^ 0x5B0CDE16;
  v538 ^= 0xFE2B0F1E;
  v540 = (v539 + v538 + 1) ^ ((v536 ^ 0xA527D108) + 1);
  LODWORD(v518) = 7
                * (v538
                 + (v533 & 0x39 ^ 0x10 | v533 & 0x39 ^ 0x229)
                 + ((v540 + 1524117239 - ((2 * v540) & 0xB5B05DEE)) ^ v536));
  v541 = 16 * (*(unsigned __int8 *)(v13 + LODWORD(STACK[0x6B4])) ^ 0x46);
  LOBYTE(v538) = *(_BYTE *)(v13 + (LODWORD(STACK[0x698]) + 3983) % 0x3C0u) ^ 0x46;
  v542 = (*(unsigned __int8 *)(v13 + (unsigned __int16)(v523 + 3983)) ^ 0x46) << 8;
  v543 = (*(unsigned __int8 *)(v13 + v524) ^ 0x46) << 12;
  v544 = (*(unsigned __int8 *)(v13 + (unsigned __int16)(v525 + 3983)) ^ 0x46) << 16;
  v545 = (*(unsigned __int8 *)(v13 + (unsigned __int16)(v519 + 3983)) ^ 0x46) << 20;
  v546 = (*(unsigned __int8 *)(v13 + (unsigned __int16)(v529 + 3983) % 0x3C0u) ^ 0x46) << 24;
  LODWORD(v518) = v546 ^ ((*(unsigned __int8 *)(v13 + v518 % 0x3C0) ^ 6) << 28);
  v547 = v546 ^ v545;
  v548 = v545 ^ v544;
  v549 = v544 ^ v543;
  LOWORD(v543) = v543 ^ v542;
  v550 = v542 ^ v541;
  LOBYTE(v541) = v541 ^ v538;
  v551 = 7 * (STACK[0x6C8] & 0xFFFFFF0F | (16 * (v538 & 0xF))) + 1813;
  v552 = 7 * (v541 & 0xF0 | (LODWORD(STACK[0x6D8]) >> 4)) + 1813;
  v553 = 7 * ((v550 >> 4) & 0xF0 | (LODWORD(STACK[0x6D8]) >> 8) & 0xF) + 1813;
  LOWORD(v553) = v553 - 960 * ((unsigned __int16)((2185 * v553) >> 16) >> 5);
  v554 = LODWORD(STACK[0x6D8]) >> 8 >> ((v553 & 4 ^ 4) + (v553 & 4));
  v555 = *(unsigned __int8 *)(v13 + (unsigned __int16)v553);
  v556 = v554 - ((2 * v554) & 0x1CD259C) + 702976718;
  v557 = ((v555 & 7 ^ 6) + (v555 & 7 ^ 1)) * (((v556 & 0xF | (16 * ((unsigned __int16)v543 >> 12))) ^ 0xE) + 259);
  LOWORD(v536) = (LODWORD(STACK[0x534]) + 13) & 0xF;
  v558 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v557
                                                 - 960 * ((unsigned __int16)((17477 * v557) >> 16) >> 8))) ^ 0x46) << 12) ^ ((v555 ^ 0x46) << 8);
  v559 = 7 * ((HIWORD(v548) & 0xF0 | (v556 >> 8) & 0xF) ^ 2) + 1813;
  v560 = 7 * (((v547 >> 20) & 0xF0 | ((unsigned __int16)v556 >> 12)) ^ 9) + 1813;
  LODWORD(v518) = 7 * ((BYTE3(v518) & 0xF0 | HIWORD(v556) & 0xF) ^ 6) + 1813;
  LOBYTE(v559) = *(_BYTE *)(v13
                          + (unsigned __int16)(v559 - 960 * ((unsigned __int16)((2185 * v559) >> 16) >> 5)));
  v561 = ((v559 ^ 0x46) << 20) ^ ((*(unsigned __int8 *)(v13
                                                                       + (unsigned __int16)(7
                                                                                          * (((v556 >> 4) ^ 0xC) & ((v536 ^ 0xF) + v536) ^ (v549 >> 12) & 0xF0)
                                                                                          + 1813)
                                                                       % 0x3C0u) ^ 0x46) << 16) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v560 - 960 * ((unsigned __int16)((2185 * v560) >> 16) >> 5))) ^ 0x46) << 24);
  v562 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v551 - 960 * ((unsigned __int16)((2185 * v551) >> 16) >> 5)));
  v563 = v562 ^ (16
               * (*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v552
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v552) >> 16) >> 5))) ^ 0x46)) ^ 0x46;
  LODWORD(v518) = (v558 ^ v563 | ((*(unsigned __int8 *)(v13
                                                      + (unsigned __int16)(v518
                                                                         - 960
                                                                         * ((unsigned __int16)((2185 * v518) >> 16) >> 5))) ^ 6) << 28)) ^ v561;
  LOWORD(v547) = 7 * (v518 >> 28)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v518 >> 28) + 3822)) >> 16) >> 5);
  LODWORD(v518) = v518 >> (v533 & 0x10) >> (v533 & 0x10 ^ 0x10);
  v564 = (v518 >> 4) + (((v559 & 0xD0 ^ 0xBF) + (v559 & 0xD0 ^ 0x6F) - 46) & 0xF0 ^ 0x222);
  LODWORD(v518) = *(unsigned __int8 *)(v13
                                     + (unsigned __int16)(7 * (v518 & 0xF)
                                                        + 3822
                                                        - 960
                                                        * ((unsigned __int16)((2185 * (7 * (v518 & 0xF) + 3822)) >> 16) >> 5)));
  v565 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7 * (HIBYTE(v561) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v561) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)v547) ^ 0x46) << 12) | v518 ^ 0x46;
  LODWORD(v518) = 7 * ((v518 & 0xF ^ 9 | v518 & 0xF ^ 6) & ((v558 ^ v563) >> 8)) + 3822;
  LODWORD(v518) = *(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v518
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v518) >> 16) >> 5))) ^ 0x46 | (v565 << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * v564 - 960 * ((unsigned __int16)((61173 * v564) >> 16) >> 7))) ^ 0x46) << 12);
  v566 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * (v562 & 0xF ^ 6)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v562 & 0xF ^ 6u) + 3822)) >> 16) >> 5)));
  v567 = LODWORD(STACK[0x630]) ^ 0x9B848120;
  LODWORD(STACK[0x6D8]) = v566 ^ v567 ^ (((*(unsigned __int8 *)(v13
                                                              + (unsigned __int16)(7 * ((unsigned __int16)v558 >> 12)
                                                                                 + 3822
                                                                                 - 960
                                                                                 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v558 >> 12) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v563 >> 4) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v563 >> 4) + 3822)) >> 16) >> 5))) ^ 0x46))) ^ ((_DWORD)v518 << 8);
  v568 = 16
       * (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(LODWORD(STACK[0x61C])
                                                - 960 * ((LODWORD(STACK[0x618]) + 139217799) >> 25)
                                                + 3983)) ^ 0x46);
  v569 = v568 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(LOWORD(STACK[0x5E0]) + 3983) % 0x3C0u) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x5D4]) - 960 * ((LODWORD(STACK[0x5D0]) + 139217799) >> 25) + 3983)) ^ 0x46) << 12) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(LOWORD(STACK[0x5A8]) + 3983) % 0x3C0u) ^ 0x46) << 16) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x58C]) - 960 * ((LODWORD(STACK[0x588]) + 139217799) >> 25) + 3983)) ^ 0x46) << 20) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x578]) - 960 * ((LODWORD(STACK[0x574]) + 139217799) >> 25) + 3983)) ^ 0x46) << 24) ^ ((*(unsigned __int8 *)(v13 + LODWORD(STACK[0x598])) ^ 6) << 28);
  LOBYTE(v518) = *(_BYTE *)(v13 + (LODWORD(STACK[0x620]) + 3983) % 0x3C0u) ^ 0x46;
  LOBYTE(v568) = v568 ^ v518;
  LODWORD(v518) = 7 * (STACK[0x650] & 0xFFFFFF0F | (16 * (v518 & 0xF))) + 1813;
  v570 = 7 * (v568 & 0xF0 | (LODWORD(STACK[0x624]) >> 4)) + 1813;
  v571 = (v569 >> 8) - ((v569 >> 7) & 0x1CDEB08) + 350680452;
  v572 = 7 * (((LODWORD(STACK[0x624]) >> 8) & 0xF | (16 * (v571 & 0xF))) ^ 0x40) + 1813;
  v573 = 7 * ((v571 & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5F8]) >> 12)) ^ 0x80) + 1813;
  v574 = 7 * (((v571 >> 4) & 0xF0 | HIWORD(LODWORD(STACK[0x5F8])) & 0xF) ^ 0x50) + 1813;
  v575 = 7 * (((v571 >> 8) & 0xF0 | (LODWORD(STACK[0x5A0]) >> 20) & 0xF) ^ 0xF5) + 1813;
  v576 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v574
                                                 - 960 * ((unsigned __int16)((2185 * v574) >> 16) >> 5))) ^ 0x46) << 16) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v573 - 960 * ((unsigned __int16)((2185 * v573) >> 16) >> 5))) ^ 0x46) << 12);
  v577 = 7 * (((v571 >> 12) & 0xF0 | HIBYTE(LODWORD(STACK[0x5A0])) & 0xF) ^ 0x63) + 1813;
  LODWORD(v518) = *(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v518
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v518) >> 16) >> 5)));
  v578 = v518 ^ (16
               * (*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v570
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v570) >> 16) >> 5))) ^ 0x46)) ^ 0x46;
  v579 = 7 * ((HIWORD(v571) & 0xF0 | (LODWORD(STACK[0x5BC]) >> 28)) ^ 0xE0) + 1813;
  v580 = (v578 ^ ((*(unsigned __int8 *)(v13
                                      + (unsigned __int16)(v572
                                                         - 960
                                                         * ((unsigned __int16)((2185 * v572) >> 16) >> 5))) ^ 0x46) << 8) | ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v575 - 960 * ((unsigned __int16)((2185 * v575) >> 16) >> 5))) ^ 0x46) << 20)) ^ v576;
  v581 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v579
                                                 - 960 * ((unsigned __int16)((2185 * v579) >> 16) >> 5))) ^ 6) << 28) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v577 - 960 * ((unsigned __int16)((2185 * v577) >> 16) >> 5))) ^ 0x46) << 24) ^ v580;
  v582 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7 * (HIBYTE(v581) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v581) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v581 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v581 >> 28) + 3822)) >> 16) >> 5))) ^ 0x46) << 12);
  v581 >>= 8;
  LOWORD(v575) = 7 * (v581 >> 4)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v581 >> 4) + 3822)) >> 16) >> 5);
  v583 = 7 * (v581 & 0xF) + 3822 - 960 * ((2185 * (7 * (v581 & 0xF) + 3822)) >> 21);
  v584 = (((~(2 * v583) + v583) ^ v583) & 0x222) + (v578 >> 4);
  LOWORD(v547) = 7 * (v518 & 0xF ^ 6)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v518 & 0xF ^ 6) + 3822)) >> 16) >> 5);
  LODWORD(v518) = *(unsigned __int8 *)(v13
                                     + (unsigned __int16)(7 * (BYTE2(v576) & 0xF)
                                                        + 3822
                                                        - 960
                                                        * ((unsigned __int16)((2185
                                                                                           * (7 * (HIWORD(v576) & 0xF)
                                                                                            + 3822)) >> 16) >> 5))) ^ 0x46;
  v585 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)v583) ^ 0x46 ^ (((*(unsigned __int8 *)(v13
                                                                                             + (unsigned __int16)(7 * ((v580 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v580 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v575) ^ 0x46)))) << 8) ^ ((v582 | v518) << 16);
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x668]) ^ LODWORD(STACK[0x600]);
  LODWORD(STACK[0x6B4]) = v567 ^ (16
                                * (*(unsigned __int8 *)(v13
                                                      + (unsigned __int16)(7 * v584
                                                                         - 960
                                                                         * ((unsigned __int16)((15295 * v584) >> 16) >> 5))) ^ 0x46)) ^ (v585 | *(unsigned __int8 *)(v13 + (unsigned __int16)v547) ^ 0x46);
  v586 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x558]) + 3983) % 0x3C0u) ^ 0x46;
  v587 = 7 * ((v586 + 1624158731 - ((2 * v586) & 0x16)) ^ v462);
  v588 = (*(unsigned __int8 *)(v13 + v587 % 0x3C0) >> 4) ^ 4;
  v589 = 7 * ((v588 - ((2 * v588) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x59C])))
       + 3983;
  v590 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x568]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v589 - 960 * ((unsigned __int16)((8739 * v589) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v591 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v590
                                               - 960 * ((unsigned __int16)((244671 * v590) >> 16) >> 9)));
  v592 = 7
       * ((((v591 >> 4) ^ 4) - 2 * (((v591 >> 4) ^ 4) & 7 ^ ((v591 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5B4])))
       + 3983;
  v593 = STACK[0x5FC];
  v594 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)((LODWORD(STACK[0x584]) + 569)
                                               * (STACK[0x5FC] & 7 ^ 6 | STACK[0x5FC] & 7 ^ 1))
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v13
                                                             + (unsigned __int16)(v592
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v592) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v580) = 7 * v594;
  v594 *= 244671;
  LOWORD(v576) = v580 - 960 * ((v594 + 139217799) >> 25);
  v595 = (*(unsigned __int8 *)(v13 + (unsigned __int16)(v580 - 960 * (v594 >> 25))) >> 4) ^ 4;
  v596 = 7 * ((v595 - ((2 * v595) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x5CC])))
       + 3983;
  v597 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x4DC]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v596 - 960 * ((unsigned __int16)((8739 * v596) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v580) = 7 * v597;
  v598 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v597
                                               - 960 * ((unsigned __int16)((244671 * v597) >> 16) >> 9)));
  v599 = 7
       * ((((v598 >> 4) ^ 4) - 2 * (((v598 >> 4) ^ 4) & 7 ^ ((v598 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x554])))
       + 3983;
  v600 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v580 + 3983) % 0x3C0u) ^ 0x46) << 12) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v576 + 3983)) ^ 0x46) << 8);
  v601 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x54C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v599 - 960 * ((unsigned __int16)((8739 * v599) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v602 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v601
                                               - 960 * ((unsigned __int16)((244671 * v601) >> 16) >> 9)));
  v603 = 7
       * ((((v602 >> 4) ^ 4) - 2 * (((v602 >> 4) ^ 4) & 7 ^ ((v602 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x55C])))
       + 3983;
  LOBYTE(v576) = *(_BYTE *)(v13 + LODWORD(STACK[0x560]));
  LOWORD(v603) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x550]) + 3983) % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v603 - 960 * ((unsigned __int16)((8739 * v603) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v604 = 7 * v603 + 3983;
  v605 = *(unsigned __int8 *)(v13 + (unsigned __int16)(((v576 & 7 ^ 6) + (v576 & 7 ^ 1)) * v603) % 0x3C0u);
  v606 = 7 * ((((v605 >> 4) ^ 4) - 2 * (((v605 >> 4) ^ 4) & 7 ^ ((v605 & 0x10) != 0)) + 70) ^ v576)
       + 3983;
  v607 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x570]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v606 - 960 * ((unsigned __int16)((8739 * v606) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v576) = 7 * v607;
  v607 *= 244671;
  LOWORD(v575) = v576 - 960 * ((v607 + 139217799) >> 25);
  v608 = (*(unsigned __int8 *)(v13 + (unsigned __int16)(v576 - 960 * (v607 >> 25))) >> 4) ^ 4;
  v609 = 7 * ((v608 - ((2 * v608) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x638])))
       + 3983;
  v610 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v13
                                                                       + (unsigned __int16)(7
                                                                                          * ((HIBYTE(LODWORD(STACK[0x610])) & 0xF0 | (LODWORD(STACK[0x608]) >> 8)) ^ 0x20)
                                                                                          + 3983)
                                                                       % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v609 - 960 * ((unsigned __int16)((8739 * v609) >> 16) >> 7))) ^ 0x46)) ^ 0x46)
                                                 + 3983)
                              % 0x3C0u) ^ 6) << 28) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v575 + 3983)) ^ 0x46) << 24);
  v611 = *(unsigned __int8 *)(v13 + (v587 + 3983) % 0x3C0) ^ 0x46;
  v612 = v611 ^ (16
               * (*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(7 * v590
                                                        - 960 * ((244671 * v590 + 139217799) >> 25)
                                                        + 3983)) ^ 0x46));
  v613 = v600 ^ v612;
  v614 = v600 ^ v612 ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(7 * v601
                                                               - 960 * ((244671 * v601 + 139217799) >> 25)
                                                               + 3983)) ^ 0x46) << 16);
  v615 = v614 ^ ((*(unsigned __int8 *)(v13 + v604 % 0x3C0u) ^ 0x46) << 20);
  v616 = v615 ^ 0xA7B7F829 ^ (v610 - 1481115607 - ((2 * v610) & 0x4E000000));
  v617 = 7 * (STACK[0x634] & 0xFFFFFF0F | (16 * (v611 & 0xF))) + 1813;
  LOWORD(v575) = v617 - 960 * ((unsigned __int16)((2185 * v617) >> 16) >> 5);
  v618 = 7 * (v612 & 0xF0 | (LODWORD(STACK[0x628]) >> 4)) + 1813;
  LOWORD(v612) = v618 - 960 * ((unsigned __int16)((2185 * v618) >> 16) >> 5);
  v619 = 7 * ((v613 >> 4) & 0xF0 | (LODWORD(STACK[0x628]) >> 8) & 0xF) + 1813;
  v620 = 7 * (((v600 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x648]) >> 12)) ^ 0xE) + 1813;
  v621 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v620
                                                 - 960 * ((unsigned __int16)((2185 * v620) >> 16) >> 5))) ^ 0x46) << 12) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v619 - 960 * ((unsigned __int16)((2185 * v619) >> 16) >> 5))) ^ 0x46) << 8);
  v622 = -(HIWORD(LODWORD(STACK[0x648])) & 0xF ^ 8) - 976723441 + ((v614 >> 12) & 0xF0);
  LOWORD(v620) = (unsigned __int16)(7 * (v622 ^ 0x620F) + 1813) % 0x3C0u;
  v623 = (HIWORD(v615) & 0xF0 | (LODWORD(STACK[0x658]) >> 20) & 0xF) ^ 8;
  v624 = v623 - 2 * (v623 & 0x6F ^ STACK[0x660] & 2) + 493025133;
  LOWORD(v622) = 7
               * ((HIBYTE(LODWORD(STACK[0x658])) & 0xF | (16
                                                        * (((v624 & 0x4F ^ 0x4D | v624 & 0x4F ^ 0x902)
                                                          * (v622 & 0x41 ^ 1 | v622 & 0x41 ^ 0x6D40)) & HIBYTE(v616)))) ^ 0xD)
               + 1813;
  v625 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v624 ^ 0xF76D) + 1813) % 0x3C0u) ^ 0x46) << 20) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)v620) ^ 0x46) << 16);
  HIDWORD(v626) = v616 >> 28;
  LODWORD(v626) = LODWORD(STACK[0x658]) ^ 0x60000000;
  v627 = *(unsigned __int8 *)(v13 + (unsigned __int16)v575);
  v628 = v627 ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v612) ^ 0x46)) ^ 0x46;
  v629 = v621 ^ v628;
  v630 = v625 ^ v621 ^ v628;
  v631 = v630 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)v622 % 0x3C0u) ^ 0x46) << 24);
  v632 = 7
       * ((v631 ^ ((*(unsigned __int8 *)(v13
                                       + (7 * (v626 >> 28)
                                                      + 1813
                                                      - 960
                                                      * ((4473925
                                                        * (unint64_t)(7 * (v626 >> 28) + 1813)) >> 32))) ^ 6) << 28)) >> 28)
       + 3822;
  v633 = ((((*(unsigned __int8 *)(v13
                                + (unsigned __int16)(7 * (HIBYTE(v631) & 0xF)
                                                   + 3822
                                                   - 960
                                                   * ((unsigned __int16)((2185
                                                                                      * (7 * (HIBYTE(v631) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v632 - 960 * ((unsigned __int16)((2185 * v632) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (BYTE2(v630) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v630) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v625 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v625 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 12);
  v634 = LODWORD(STACK[0x6B0]) ^ (16
                                * (*(unsigned __int8 *)(v13
                                                      + (unsigned __int16)(7 * (v628 >> 4)
                                                                         + 3822
                                                                         - 960
                                                                         * ((unsigned __int16)((2185
                                                                                              * (7
                                                                                               * (v628 >> 4)
                                                                                               + 3822)) >> 16) >> 5))) ^ 0x46)) ^ (((v633 | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v629 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v629 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((unsigned __int16)v621 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v621 >> 12) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v627 & 0xF ^ 6) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v627 & 0xF ^ 6u) + 3822)) >> 16) >> 5))) ^ 0x46);
  LODWORD(STACK[0x6D0]) = v634;
  LODWORD(STACK[0x638]) = v593 ^ 0xF79D3937 ^ LODWORD(STACK[0x6A8]);
  v635 = 7 * ((STACK[0x4CC] & 0xF0 | (LODWORD(STACK[0x5E8]) >> 4)) ^ 0xA0) + 1813;
  v636 = 7 * (((LODWORD(STACK[0x4CC]) >> 4) & 0xF0 | (LODWORD(STACK[0x5E8]) >> 8) & 0xF) ^ 0x90) + 1813;
  v637 = (LODWORD(STACK[0x594]) >> 12) ^ 0x7DB67;
  LODWORD(v518) = (v637 >> (v518 & 4) >> (v518 & 4 ^ 4)) & 0xF | (16 * (HIWORD(LODWORD(STACK[0x4CC])) & 0xF));
  v638 = 7 * ((v637 & 0xF | (16 * ((unsigned __int16)LODWORD(STACK[0x4CC]) >> 12))) ^ 0xC0) + 1813;
  v639 = 7 * ((HIWORD(LODWORD(STACK[0x4CC])) & 0xF0 | (LODWORD(STACK[0x4D8]) >> 20) & 0xF) ^ 0x9B) + 1813;
  v640 = 7 * (((LODWORD(STACK[0x4CC]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x4D8])) & 0xF) ^ 0xD) + 1813;
  v641 = 7
       * (((((((LODWORD(STACK[0x4D0]) ^ 6) << 28) + 1889126826 - ((LODWORD(STACK[0x4D0]) ^ 6u) << 29)) ^ LODWORD(STACK[0x4CC])) >> 24) & 0xF0 | (LODWORD(STACK[0x4D8]) >> 28)) ^ 7)
       + 1813;
  v642 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v640
                                               - 960 * ((unsigned __int16)((2185 * v640) >> 16) >> 5))) ^ 0x46;
  v643 = LODWORD(STACK[0x4C0]) ^ (16
                                * (*(unsigned __int8 *)(v13
                                                      + (unsigned __int16)(v635
                                                                         - 960
                                                                         * ((unsigned __int16)((2185 * v635) >> 16) >> 5))) ^ 0x46)) ^ 0x46;
  v644 = v643 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v636
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v636) >> 16) >> 5))) ^ 0x46) << 8);
  v645 = v644 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v638
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v638) >> 16) >> 5))) ^ 0x46) << 12);
  LODWORD(v518) = v645 ^ ((*(unsigned __int8 *)(v13
                                              + (unsigned __int16)(7 * (v518 ^ 0x90)
                                                                 + 1813
                                                                 - 960
                                                                 * ((unsigned __int16)((2185
                                                                                      * (7 * (v518 ^ 0x90)
                                                                                       + 1813)) >> 16) >> 5))) ^ 0x46) << 16);
  v646 = v518 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v639
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v639) >> 16) >> 5))) ^ 0x46) << 20);
  v647 = v646 ^ ((v642 << 24) + 2014626703 - (v642 >> 3 << 28)) ^ 0x7814C38F;
  v648 = 7
       * ((v647 ^ ((*(unsigned __int8 *)(v13
                                       + (unsigned __int16)(v641 - 960 * ((unsigned __int16)((2185 * v641) >> 16) >> 5))) ^ 6) << 28)) >> 28)
       + 3822;
  LODWORD(v518) = ((((((*(unsigned __int8 *)(v13
                                           + (unsigned __int16)(7 * (HIBYTE(v647) & 0xF)
                                                              + 3822
                                                              - 960
                                                              * ((unsigned __int16)((2185
                                                                                                 * (7 * (HIBYTE(v647) & 0xF)
                                                                                                  + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v648 - 960 * ((unsigned __int16)((2185 * v648) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (BYTE2(v518) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (WORD1(v518) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v646 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v646 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v644 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v644 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((unsigned __int16)v645 >> 12) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v645 >> 12) + 2862)) >> 16) >> 5))) ^ 0x46) << 12) | LODWORD(STACK[0x4C8]) ^ 0x46;
  v649 = STACK[0x474];
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x474]) ^ (16
                                                 * (*(unsigned __int8 *)(v13
                                                                       + (unsigned __int16)(7
                                                                                          * (v643 >> 4)
                                                                                          + 3822
                                                                                          - 960
                                                                                          * ((unsigned __int16)((2185 * (7 * (v643 >> 4) + 3822)) >> 16) >> 5))) ^ 0x46)) ^ 0x8F9088CA ^ v518;
  v650 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x484]) + 3983) % 0x3C0u) ^ 0x46;
  v651 = 7 * ((v650 + 1624158731 - ((2 * v650) & 0x16)) ^ v462);
  v652 = (*(unsigned __int8 *)(v13 + v651 % 0x3C0) >> 4) ^ 4;
  v653 = (v651 + 3983) % 0x3C0;
  v654 = 7 * ((v652 - ((2 * v652) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x498])))
       + 3983;
  LODWORD(v518) = (LODWORD(STACK[0x488]) ^ LODWORD(STACK[0x48C])) & 0xF0 | (LODWORD(STACK[0x490]) >> 4);
  LODWORD(v518) = ((2 * v518) & 0xFFFFFF7F) + (v518 ^ 0xFFFD7FBF);
  v655 = *(unsigned __int8 *)(v13
                            + ((((_DWORD)v518 + 164474) & 0x233 | (2147319173 - (_DWORD)v518) & 0x6F2D3433) ^ ((v634 & 0x6F2D3634 ^ 0x60283200) + (v634 & 0x6F2D3634 ^ 0xF050434u)))
                            * ((_DWORD)v518 + 164474)
                            % 0x3C0) ^ (16
                                      * (*(unsigned __int8 *)(v13
                                                            + (unsigned __int16)(v654
                                                                               - 960
                                                                               * ((unsigned __int16)((8739 * v654) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v656 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v655
                                               - 960 * ((unsigned __int16)((244671 * v655) >> 16) >> 9)));
  LODWORD(v518) = 7
                * ((((v656 >> 4) ^ 4) - 2 * (((v656 >> 4) ^ 4) & 7 ^ ((v656 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + (7 * (int)v518 + 1147335) % 0x3C0u))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x494]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v652) = (unsigned __int16)(7 * v518 + 3983) % 0x3C0u;
  v657 = ((LODWORD(STACK[0x49C]) >> 12) ^ 0x79FC4E1D) & 0x389E1513 ^ 0x82277FE3 ^ ((((LODWORD(STACK[0x49C]) >> 12) ^ 0x79FC4E1D) & 0x39DE151C)
                                                                                 - (((LODWORD(STACK[0x49C]) >> 12) ^ 0x79FC4E1D) & 0x389E0000)
                                                                                 + (((LODWORD(STACK[0x49C]) >> 12) ^ 0x79FC4E1D) & 0xE0000 ^ 0x822F6AE3));
  LODWORD(v518) = 7
                * ((*(_BYTE *)(v13 + LODWORD(STACK[0x4A0])) ^ (*(_BYTE *)(v13
                                                                                         + (unsigned __int16)(7 * v518 - 960 * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4)) ^ 0x42)
                + 3983;
  v658 = ((LODWORD(STACK[0x4AC]) >> 8) & 0xF0 ^ 0xD3EEFE45) + (~(LODWORD(STACK[0x4AC]) >> 7) & 0x160) + 739311947;
  v659 = v657 - ((2 * v657) & 0x19D078BA) - 857195427;
  v660 = (v658 - (v658 | v659 ^ 0xF530295D)) ^ ((v659 ^ 0xACFD6A2) + 1);
  v661 = 7 * ((v659 ^ 0xCE36CDFD ^ (v660 - ((2 * v660) & 0x760DC940) + 990307488)) + v658);
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (v661 + 3983) % 0x3C0) ^ (16
                                                                     * (*(unsigned __int8 *)(v13
                                                                                           + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v658) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  v662 = (v518 + 139217799) >> 25;
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(v658 - 960 * (v518 >> 25)));
  LOWORD(v547) = v658 - 960 * v662;
  LODWORD(v518) = (((v518 >> 4) ^ 4)
                 - 2 * (((v518 >> 4) ^ 4) & 7 ^ (v518 >> 4) & 1)
                 + 70) ^ *(unsigned __int8 *)(v13 + v661 % 0x3C0);
  LODWORD(v518) = ((2 * v518) & 0x72) + (v518 ^ 0x239);
  LODWORD(v518) = *(unsigned __int8 *)(v13 + LODWORD(STACK[0x4B4])) ^ (16
                                                                     * (*(unsigned __int8 *)(v13
                                                                                           + (unsigned __int16)(7 * v518 - 960 * ((unsigned __int16)((61173 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v661) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  LOWORD(v658) = v661 - 960 * ((v518 + 139217799) >> 25);
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(v661 - 960 * (v518 >> 25)));
  LODWORD(v518) = 7
                * ((((v518 >> 4) ^ 4)
                                   - 2 * (((v518 >> 4) ^ 4) & 7 ^ ((v518 & 0x10) != 0))
                                   + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x4B0])))
                + 3023;
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x3CC]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v661) = 7 * v518;
  LODWORD(v518) = 244671 * v518;
  LOWORD(v662) = v661 - 960 * ((v518 + 139217799) >> 25);
  LOWORD(v661) = v661 - 960 * (v518 >> 25);
  LODWORD(v518) = ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v662 + 3983)) ^ 0x46) << 20) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v658 + 3983)) ^ 0x46) << 16);
  v663 = (*(unsigned __int8 *)(v13 + (unsigned __int16)v661) >> 4) ^ 4;
  v664 = 7 * ((v663 - ((2 * v663) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x3BC])))
       + 3983;
  v665 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x3E0]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v664 - 960 * ((unsigned __int16)((8739 * v664) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v658) = 7 * v665;
  v666 = (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(7 * v665
                                                - 960 * ((unsigned __int16)((244671 * v665) >> 16) >> 9))) >> 4) ^ 4;
  v667 = 7 * ((v666 - ((2 * v666) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x3C8])))
       + 3983;
  v668 = 7 * ((HIBYTE(LODWORD(STACK[0x4A8])) & 0xF0 | (LODWORD(STACK[0x4A4]) >> 28)) ^ 0xE4) + 3983;
  v669 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v13
                                                                       + (unsigned __int16)(v668
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v668) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v667 - 960 * ((unsigned __int16)((8739 * v667) >> 16) >> 7))) ^ 0x46)) ^ 0x46)
                                                 + 3983)
                              % 0x3C0u) ^ 6) << 28) ^ ((*(unsigned __int8 *)(v13
                                                                           + (unsigned __int16)(v658 + 3983) % 0x3C0u) ^ 0x46) << 24);
  v670 = 16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * v655 + 3983) % 0x3C0u) ^ 0x46);
  LOBYTE(v653) = *(_BYTE *)(v13 + v653) ^ 0x46;
  v671 = (*(unsigned __int8 *)(v13 + (unsigned __int16)v652) ^ 0x46) << 8;
  v672 = v671 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v547 + 3983)) ^ 0x46) << 12);
  v673 = v671 ^ v670;
  LOBYTE(v670) = v670 ^ v653;
  v674 = 7 * (STACK[0x4B8] & 0xFFFFFF0F | (16 * (v653 & 0xF))) + 1813;
  v675 = ((v670 & 0xF0 | (LODWORD(STACK[0x490]) >> 4)) + 259)
       * (HIBYTE(LODWORD(STACK[0x4A4])) & 7 ^ 5 | HIBYTE(LODWORD(STACK[0x4A4])) & 7 ^ 2);
  v676 = 7 * ((v673 >> 4) & 0xF0 | (LODWORD(STACK[0x490]) >> 8) & 0xF) + 1813;
  v677 = v672 ^ v518;
  v678 = (((v669 ^ v677) >> 12) & 3 ^ 0x103)
       + (((v669 ^ v677) >> 12) & 3)
       + (((16 * ((v669 ^ v677) >> 12) + 0x80) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x49C]) >> 12)) ^ 0x8D);
  v679 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v676
                                               - 960 * ((unsigned __int16)((2185 * v676) >> 16) >> 5)));
  v680 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7 * v678 - 960 * ((unsigned __int16)((61173 * v678) >> 16) >> 7))) ^ 0x46) << 12) ^ ((v679 ^ 0x46) << 8);
  v681 = (v679 & 7 ^ 6 | v679 & 7 ^ 1) * ((((v677 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x49C])) & 0xF) ^ 9) + 259);
  LODWORD(v518) = 7 * ((WORD1(v518) & 0xF0 | (LODWORD(STACK[0x4A4]) >> 20) & 0xF) ^ 1) + 1813;
  v682 = 7 * ((((v669 ^ v677) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x4A4])) & 0xF) ^ 5) + 1813;
  v683 = 7 * ((HIBYTE(v669) & 0xF0 | (LODWORD(STACK[0x4A4]) >> 28)) ^ 4) + 1813;
  v684 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v674 - 960 * ((unsigned __int16)((2185 * v674) >> 16) >> 5)));
  v685 = v684 ^ (16
               * (*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v675
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v675) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v686 = v680 ^ v685 ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v681
                                                               - 960
                                                               * ((unsigned __int16)((8739 * v681) >> 16) >> 7))) ^ 0x46) << 16);
  LODWORD(v518) = v686 ^ ((*(unsigned __int8 *)(v13
                                              + (unsigned __int16)(v518
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v518) >> 16) >> 5))) ^ 0x46) << 20);
  v687 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v683
                                                 - 960 * ((unsigned __int16)((2185 * v683) >> 16) >> 5))) ^ 6) << 28) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v682 - 960 * ((unsigned __int16)((2185 * v682) >> 16) >> 5))) ^ 0x46) << 24) ^ v518;
  v688 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7 * (HIBYTE(v687) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v687) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v687 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v687 >> 28) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (BYTE2(v686) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v686) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46;
  v689 = 7 * (((v680 ^ v685) >> 8) & 0xF) + 3822;
  v690 = LODWORD(STACK[0x67C]) ^ LODWORD(STACK[0x480]);
  v691 = LODWORD(STACK[0x480]) ^ 0x5FE53800 ^ LODWORD(STACK[0x4D4]);
  LODWORD(v518) = ((((v688 << 8) ^ ((*(unsigned __int8 *)(v13
                                                        + (unsigned __int16)(7 * ((v518 >> 20) & 0xF)
                                                                           + 3822
                                                                           - 960
                                                                           * ((unsigned __int16)((2185
                                                                                                * (7
                                                                                                 * ((v518 >> 20) & 0xF)
                                                                                                 + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(v689 - 960 * ((unsigned __int16)((2185 * v689) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((unsigned __int16)v680 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v680 >> 12) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v684 & 0xF ^ 6) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v684 & 0xF ^ 6u) + 3822)) >> 16) >> 5))) ^ 0x46) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v685 >> 4) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v685 >> 4) + 3822)) >> 16) >> 5))) ^ 0x46));
  v692 = v518 - ((2 * v518) & 0x220AA544);
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x40C]) + 3983) % 0x3C0u) ^ 0x46;
  LODWORD(v518) = 7 * ((v518 + 1624158731 - ((2 * v518) & 0x16)) ^ v462);
  v693 = ((int)v518 + 3983) % 0x3C0u;
  LODWORD(v518) = (*(unsigned __int8 *)(v13 + v518 % 0x3C0) >> 4) ^ 4;
  LODWORD(v518) = 7
                * ((v518 - ((2 * v518) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x400])))
                + 3983;
  LODWORD(v518) = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x414]) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v518 - 960 * ((unsigned __int16)((8739 * v518) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOBYTE(v687) = (*(_BYTE *)(v13
                           + (unsigned __int16)(7 * v518
                                              - 960 * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) >> 4) ^ 4;
  v694 = 7
       * ((v687
                          + ~(2
                            * (v687 & 7 ^ ((*(_BYTE *)(v13
                                                     + (unsigned __int16)(7 * v518
                                                                        - 960
                                                                        * ((unsigned __int16)((244671 * v518) >> 16) >> 9))) & 0x10) != 0)))
                          + 71) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x404])))
       + 3983;
  v695 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x41C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v694 - 960 * ((unsigned __int16)((8739 * v694) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v687) = 7 * v695;
  v696 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(7 * v695
                                               - 960 * ((unsigned __int16)((244671 * v695) >> 16) >> 9)));
  v697 = 7
       * ((((v696 >> 4) ^ 4) + ~(2 * (((v696 >> 4) ^ 4) & 7 ^ ((v696 & 0x10) != 0))) + 71) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x408])))
       + 3983;
  v698 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v687 + 3983) % 0x3C0u);
  v699 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x424]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v697 - 960 * ((unsigned __int16)((8739 * v697) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v689) = (v699 + 569) * ((v698 & 7 ^ 6) + (v698 & 7 ^ 1));
  v700 = (*(unsigned __int8 *)(v13
                             + (unsigned __int16)(7 * v699
                                                - 960 * ((unsigned __int16)((244671 * v699) >> 16) >> 9))) >> 4) ^ 4;
  v701 = 7 * ((v700 - ((2 * v700) & 0xC) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x410])))
       + 3983;
  v702 = ((*(unsigned __int8 *)(v13 + (unsigned __int16)v689 % 0x3C0u) ^ 0x46) << 12) ^ ((v698 ^ 0x46) << 8);
  v703 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x42C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v701 - 960 * ((unsigned __int16)((8739 * v701) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v698) = 7 * v703;
  v703 *= 244671;
  v704 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v698 - 960 * (v703 >> 25)));
  LOWORD(v703) = v698 - 960 * ((v703 + 139217799) >> 25);
  v705 = 7
       * ((((v704 >> 4) ^ 4) - 2 * (((v704 >> 4) ^ 4) & 7 ^ ((v704 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x418])))
       + 3983;
  v706 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x430]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v13 + (unsigned __int16)(v705 - 960 * ((unsigned __int16)((8739 * v705) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LOWORD(v689) = 7 * v706;
  v706 *= 244671;
  v707 = (v706 + 139217799) >> 25;
  v708 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v689 - 960 * (v706 >> 25)));
  LOWORD(v689) = v689 - 960 * v707;
  v709 = 7
       * ((((v708 >> 4) ^ 4) - 2 * (((v708 >> 4) ^ 4) & 7 ^ ((v708 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v13 + LODWORD(STACK[0x420])))
       + 3983;
  v710 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v709
                                               - 960 * ((unsigned __int16)((8739 * v709) >> 16) >> 7)));
  v711 = 16 * (v710 ^ 0x46) - 1773200995 - ((32 * v710) & 0x33333333);
  v712 = *(unsigned __int8 *)(v13 + (unsigned __int16)(LODWORD(STACK[0x438]) + 3983) % 0x3C0u) ^ 0x46;
  v713 = v712 - 962042963 - ((2 * v712) & 0x15A);
  v714 = v711 ^ v713 ^ 0xAF1885CF;
  v713 ^= 0xC6A863AD;
  v715 = (v714 + v713 + 1) ^ ((v711 ^ 0x69B0E662) + 1);
  v716 = 7 * (((v715 - 1773200995 - ((2 * v715) & 0x2C9E333A)) ^ v711) + v713);
  v717 = (v716 + 3983) % 0x3C0;
  LOBYTE(v716) = *(_BYTE *)(v13 + LODWORD(STACK[0x428])) ^ (*(_BYTE *)(v13 + v716 % 0x3C0) >> 4);
  LOWORD(v715) = 7 * (v716 ^ 0x42)
               + 3983
               - 960 * ((unsigned __int16)((8739 * (7 * (v716 ^ 0x42u) + 3983)) >> 16) >> 7);
  v718 = (v716 & 7 ^ 2 | v716 & 7 ^ 5)
       * (((HIBYTE(LODWORD(STACK[0x470])) & 0xF0 | (LODWORD(STACK[0x46C]) >> 28)) ^ 0x14) + 569);
  v719 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v13
                                                                       + (unsigned __int16)(v718
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v718) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v715) ^ 0x46)) ^ 0x46)
                                                 + 3983)
                              % 0x3C0u) ^ 6) << 28) ^ ((*(unsigned __int8 *)(v13 + v717) ^ 0x46) << 24);
  LODWORD(v518) = 16
                * (*(unsigned __int8 *)(v13
                                      + (unsigned __int16)(7 * v518
                                                         - 960 * ((244671 * v518 + 139217799) >> 25)
                                                         + 3983)) ^ 0x46);
  v720 = v702 ^ v518;
  v721 = v702 ^ v518 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v703 + 3983)) ^ 0x46) << 16);
  v722 = v721 ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v689 + 3983)) ^ 0x46) << 20);
  v723 = v722 ^ 0x9CB24D9F ^ (v719 - 1666036321 - ((2 * v719) & 0x38000000));
  LOBYTE(v685) = *(_BYTE *)(v13 + v693) ^ 0x46;
  LOBYTE(v518) = v518 ^ v685;
  v724 = 7 * (STACK[0x640] & 0xFFFFFF0F | (16 * (v685 & 0xF))) + 1813;
  v725 = 7 * (v518 & 0xF0 | (LODWORD(STACK[0x47C]) >> 4));
  LODWORD(v518) = *(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v724 - 960 * ((unsigned __int16)((2185 * v724) >> 16) >> 5)));
  LOWORD(v724) = v725 + 1813 - 960 * ((unsigned __int16)((2185 * (v725 + 1813)) >> 16) >> 5);
  v726 = 7 * (((v702 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x478]) >> 12)) ^ 4) + 1813;
  v727 = 7 * (((v721 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x478])) & 0xF) ^ 0xD) + 1813;
  v728 = 7 * ((HIWORD(v722) & 0xF0 | (LODWORD(STACK[0x46C]) >> 20) & 0xF) ^ 0xA) + 1813;
  v729 = *(unsigned __int8 *)(v13
                            + (unsigned __int16)(v728
                                               - 960 * ((unsigned __int16)((2185 * v728) >> 16) >> 5))) ^ 0x46;
  v730 = (v729 << 20) - 193341912 - ((v729 << 21) & 0x8E00000);
  v731 = v518 ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)v724) ^ 0x46)) ^ 0x46;
  v732 = v731 ^ ((*(unsigned __int8 *)(v13
                                     + (7
                                      * ((((v720 >> 8) & 0xF) << ((v518 & 4 ^ 4) + (v518 & 4))) ^ (LODWORD(STACK[0x47C]) >> 8) & 0xF)
                                      + 1813)
                                     % 0x3C0) ^ 0x46) << 8);
  v733 = v732 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v726
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v726) >> 16) >> 5))) ^ 0x46) << 12);
  v734 = v733 ^ ((*(unsigned __int8 *)(v13
                                     + (unsigned __int16)(v727
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v727) >> 16) >> 5))) ^ 0x46) << 16);
  v735 = v734 ^ ((*(unsigned __int8 *)(v13
                                     + 7
                                     * (((HIBYTE(LODWORD(STACK[0x46C])) ^ 0x46) & 0xF | (16 * (HIBYTE(v723) & 0xF)))
                                      + (((v730 & 0x7C00000 ^ 0x4400000) + (v730 & 0x7C00000 ^ 0xB38ABD6A)) ^ 0xB7CABC69))
                                     % 0x3C0) ^ 0x46) << 24) ^ ((*(unsigned __int8 *)(v13
                                                                                    + (unsigned __int16)(7 * (((((HIBYTE(LODWORD(STACK[0x46C])) ^ 0x46u) >> 4) | (16 * ((v723 >> 28) - ((v723 >> 27) & 0xC)))) - 15776) ^ 0xC260) + 1813)
                                                                                    % 0x3C0u) ^ 6) << 28);
  v736 = (v735 - 193341912 - ((2 * v735) & 0xE8F3AC50)) ^ v730;
  v737 = ((((((*(unsigned __int8 *)(v13
                                  + (unsigned __int16)(7 * (HIBYTE(v736) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v736) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v735 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v735 >> 28) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (BYTE2(v734) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v734) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v736 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v736 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v732 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v732 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((unsigned __int16)v733 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v733 >> 12) + 3822)) >> 16) >> 5))) ^ 0x46) << 12);
  LOWORD(v735) = 7 * (v518 & 0xF ^ 6)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v518 & 0xF ^ 6) + 3822)) >> 16) >> 5);
  LODWORD(v518) = LODWORD(STACK[0x45C]) + LODWORD(STACK[0x468]);
  v738 = LODWORD(STACK[0x450]) ^ 0xD7E3E783 ^ (16
                                             * (*(unsigned __int8 *)(v13
                                                                   + (unsigned __int16)(7 * (v731 >> 4)
                                                                                      + 3822
                                                                                      - 960
                                                                                      * ((unsigned __int16)((2185 * (7 * (v731 >> 4) + 3822)) >> 16) >> 5))) ^ 0x46)) ^ (v737 | *(unsigned __int8 *)(v13 + (unsigned __int16)v735) ^ 0x46);
  v739 = LODWORD(STACK[0x4C4]) - 541873171 + LODWORD(STACK[0x460]);
  v740 = LODWORD(STACK[0x4BC]) - 1351601789 + LODWORD(STACK[0x44C]);
  v741 = 7 * (STACK[0x444] & 0xFFFFFF0F | (16 * (STACK[0x3B0] & 0xF))) + 1813;
  v742 = 7 * (((LODWORD(STACK[0x3F8]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x3E8])) & 0xF) ^ 0xD) + 1813;
  v743 = 7 * ((HIWORD(LODWORD(STACK[0x3C0])) & 0xF0 | (LODWORD(STACK[0x3FC]) >> 20) & 0xF) ^ 2) + 1813;
  v744 = 7 * (((LODWORD(STACK[0x3C4]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x3FC])) & 0xF) ^ 3) + 1813;
  v745 = ((*(unsigned __int8 *)(v13
                              + (unsigned __int16)(v743
                                                 - 960 * ((unsigned __int16)((2185 * v743) >> 16) >> 5))) ^ 0x46) << 20) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v742 - 960 * ((unsigned __int16)((2185 * v742) >> 16) >> 5))) ^ 0x46) << 16);
  v746 = 7 * ((HIBYTE(LODWORD(STACK[0x3DC])) & 0xF0 | (LODWORD(STACK[0x3FC]) >> 28)) ^ 9) + 1813;
  v747 = *(unsigned __int8 *)(v13 + (unsigned __int16)(v741 - 960 * ((unsigned __int16)((2185 * v741) >> 16) >> 5)));
  v748 = v747 ^ (16 * (*(unsigned __int8 *)(v13 + (unsigned __int16)STACK[0x3D0]) ^ 0x46)) ^ 0x46;
  v749 = LODWORD(STACK[0x3B8]) ^ v748;
  v750 = v745 ^ v749;
  v751 = v745 ^ v749 ^ ((*(unsigned __int8 *)(v13
                                            + (unsigned __int16)(v744
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v744) >> 16) >> 5))) ^ 0x46) << 24);
  v752 = 7
       * ((v751 ^ ((*(unsigned __int8 *)(v13
                                       + (unsigned __int16)(v746
                                                          - 960
                                                          * ((unsigned __int16)((2185 * v746) >> 16) >> 5))) ^ 6) << 28)) >> 28)
       + 3822;
  v753 = v739 ^ LODWORD(STACK[0x464]);
  v754 = v753 ^ 0xD4B9321A ^ LODWORD(STACK[0x448]);
  v755 = ((((((*(unsigned __int8 *)(v13
                                  + (unsigned __int16)(7 * (HIBYTE(v751) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v751) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(v752 - 960 * ((unsigned __int16)((2185 * v752) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (BYTE2(v750) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v750) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v745 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v745 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * ((v749 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v749 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v13 + LODWORD(STACK[0x3B4])) ^ 0x46) << 12) | *(unsigned __int8 *)(v13 + (unsigned __int16)(7 * (v747 & 0xF ^ 6) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * (v747 & 0xF ^ 6u) + 2862)) >> 16) >> 5))) ^ 0x46;
  v756 = v740 ^ LODWORD(STACK[0x644]);
  v757 = v756 ^ 0xD7E3E783 ^ (16
                            * (*(unsigned __int8 *)(v13
                                                  + (unsigned __int16)(7 * (v748 >> 4)
                                                                     + 3822
                                                                     - 960
                                                                     * ((unsigned __int16)((2185
                                                                                          * (7
                                                                                           * (v748 >> 4)
                                                                                           + 3822)) >> 16) >> 5))) ^ 0x46)) ^ v755;
  v758 = v649 ^ 0x6F0CB60C ^ (v692 - 1861922142);
  v759 = LODWORD(STACK[0x454])
       + LODWORD(STACK[0x458])
       - ((2 * (LODWORD(STACK[0x454]) + LODWORD(STACK[0x458])) + 1298107182) & 0xA56F1600)
       + 2036813975;
  v760 = (1351601789 - LODWORD(STACK[0x4BC])) ^ 0xF913FDBF ^ v759;
  v761 = ((2 * v759) & 0x87969D68 ^ 0x85061400) + (v759 ^ 0x117CC5B4);
  LODWORD(STACK[0x6A8]) = (541873171 - LODWORD(STACK[0x4C4])) ^ 0x9AAEC38C ^ (v518 - 504891468);
  v762 = (v761 ^ (v740 + 2022316030) ^ 0xE6EDEE1B) + 2146589184 + ((2 * (v761 ^ (v740 + 2022316030))) & 0xCDDBDC36);
  LODWORD(STACK[0x6B0]) = LODWORD(STACK[0x680]) ^ 0x1E6CFDA3;
  LODWORD(STACK[0x5E0]) = LODWORD(STACK[0x6D8]) ^ 0x46;
  LODWORD(STACK[0x5D8]) = LODWORD(STACK[0x6D0]) ^ 0x8139C8B5;
  v763 = LODWORD(STACK[0x3F0]) ^ 0x2C138DEE;
  v756 += 1128901441;
  v764 = v753 - 1752305405;
  v765 = v518 - 704279712;
  LODWORD(v518) = ((v739 + 2022316030) ^ (v518 + 632505960)) - 811737335;
  v766 = v761 + 523014938;
  LODWORD(STACK[0x6D8]) = v690 ^ 0x85997AF6;
  LODWORD(STACK[0x6D0]) = v690 ^ 0x6BFD778D;
  LODWORD(STACK[0x67C]) = LODWORD(STACK[0x51C]) - 222675379;
  LODWORD(STACK[0x680]) = STACK[0x52C];
  v767 = STACK[0x670];
  v768 = v691 >> ((LODWORD(STACK[0x670]) + 55) & 0xFB ^ 0x92);
  v769 = v758 ^ 0xD7E3E783;
  HIDWORD(v626) = v691 ^ 0x2F4;
  LODWORD(v626) = v691 ^ 0x92D4B000;
  LODWORD(STACK[0x658]) = v691;
  v770 = v738;
  LODWORD(STACK[0x694]) = v738;
  LODWORD(STACK[0x568]) = v738 ^ 0xD7E3E783;
  v771 = (v768 | (v691 << 7)) ^ (v626 >> 11) ^ (((v691 ^ 0x92D4B2F4) >> (((v518 - 1) ^ -(char)v518) & 6))
                                              + ((v691 << 26) ^ 0xD0000000));
  HIDWORD(v626) = v758 ^ 0xFFFFFF83;
  LODWORD(v626) = v758 ^ 0xD7E3E000;
  v772 = v626 >> 11;
  HIDWORD(v626) = v758 ^ 3;
  LODWORD(v626) = v758 ^ 0xD7E3E780;
  LODWORD(STACK[0x660]) = v763;
  v763 ^= 0x92D4B2F4;
  LODWORD(STACK[0x668]) = v758;
  v773 = (v626 >> 6) ^ v772 ^ (((v758 << 7) ^ 0xF1F3C180)
                             + ((v758 ^ 0xD7E3E783) >> ((v768 & 0x19 ^ 0x10) + (v768 & 0x19 ^ 9))));
  LODWORD(STACK[0x648]) = v757 ^ 0xD7E3E783;
  v774 = (v758 ^ 0xD7E3E783) & (v754 ^ 0x92D4B2F4) ^ (v757 ^ 0xD7E3E783) & (v691 ^ 0x92D4B2F4) ^ (((v758 ^ 0xD7E3E783) & v763)
                                                                                                + ((v770 ^ 0xD7E3E783) & (v691 ^ 0x92D4B2F4))
                                                                                                - 2
                                                                                                * ((v758 ^ 0xD7E3E783) & v763 & (v770 ^ 0xD7E3E783) & (v691 ^ 0x92D4B2F4)));
  v775 = v774 - 1831554316 - ((2 * v774) & 0x25A965E8);
  v776 = v754;
  LODWORD(STACK[0x640]) = v754;
  LODWORD(STACK[0x560]) = v763;
  LODWORD(STACK[0x55C]) = v691 ^ 0x92D4B2F4;
  LODWORD(STACK[0x644]) = v757;
  LODWORD(STACK[0x564]) = v769;
  v777 = v763 & (v691 ^ 0x92D4B2F4) ^ (v691 ^ 0x92D4B2F4) & (v754 ^ 0x92D4B2F4) ^ v757 ^ v769 & (v757 ^ v770);
  v778 = (1823333242 - v756 + (v771 ^ 0x6A597A49 ^ (v756 - 1823333242))) ^ ((v771 ^ 0x6A597A49 ^ v761) - v761) ^ ((v771 ^ 0x3EE69133 ^ (((v764 + 1057873604) ^ (v765 + 1336785672) ^ v773) - ((2 * ((v764 + 1057873604) ^ (v765 + 1336785672) ^ v773)) & 0xA97FD6F4) + 1421863802)) - ((v764 + 1057873604) ^ (v765 + 1336785672) ^ v773));
  v779 = v773 + v518;
  v780 = v518 - v765;
  LODWORD(v518) = ((2 * (v764 - (v518 - v765) + 1182329223)) & 0xBDFFFF6E)
                + ((v764 - (v518 - v765) + 1182329223) ^ 0x5EFFFFB7);
  v781 = v762 - v766;
  v782 = ((2 * (v756 - (v762 - v766) - 1020966343)) & 0xEBFCFFD8) + ((v756 - (v762 - v766) - 1020966343) ^ 0xF5FE7FEC);
  v783 = v775 ^ v776;
  v784 = (v518 - 1593835447) ^ (v765 - 1019041828) ^ v775 ^ v776;
  v785 = LODWORD(STACK[0x67C]) + v779 + (LODWORD(STACK[0xAEC]) ^ 0x47B86DAD);
  v786 = (-167870484 - v782 + (v777 ^ 0xD7E3E783 ^ (v782 + 167870484))) ^ (-1939139796
                                                                         - v761
                                                                         + (v777 ^ 0xD7E3E783 ^ (v761 + 1939139796))) ^ ((v777 ^ 0xA1E21162 ^ (v784 - ((2 * v784) & 0xEC03EDC2) + 1979840225)) - v784);
  v787 = v780 + v783;
  v788 = (v760 ^ 0xABA476BF) + v756;
  v789 = (LODWORD(STACK[0x6A8]) ^ 0x9AAEC38C) + v764;
  v790 = v780 - v765 - ((2 * (v780 - v765) + 461557078) & 0xB31FA3D8) + 1733376151;
  v791 = v789 + 1233396926 + v518;
  v792 = (v790 ^ 0xA6702E13) - v765 + v518 - 574793618;
  LODWORD(STACK[0x5CC]) = v792;
  v793 = (v790 ^ (v765 - ((2 * v765 + 586712362) & 0xB31FA3D8) + 1795953793))
       + ((v779 + 811737335) | 0x97F3BF30)
       - ((v779 + 811737335) & 0x680C40CF);
  v794 = v762 - v766 - v766 + 1412667869;
  LODWORD(v518) = v788 + 113896011 + v782;
  v795 = v794 ^ (v761 - 1043429491);
  LODWORD(STACK[0x5B8]) = v795;
  v796 = ((2 * (v518 ^ v794)) & 0x6FDBFBF6) + (v518 ^ v794 ^ 0xB7EDFDFB);
  v797 = ((2 * (v791 ^ v790)) & 0xB7777FFE ^ 0xB31723D8) + (v791 ^ v790 ^ 0x82346E13);
  LODWORD(STACK[0x614]) = 1725311254;
  LODWORD(STACK[0x650]) = 0;
  v798 = (char *)*(&off_38F180 + (v767 ^ 0x77Du)) - 12;
  v799 = *(_DWORD *)&v798[4
                        * (7
                         * (((((v787 - 524022137) & 0x911DF ^ 0x911DF) + ((v787 - 524022137) & 0x911DF)) & 0x10006Fu)
                          + 31)
                         % 0xC0)] ^ 0x150710B2;
  v800 = v799 - ((2 * v799 + 73632434) & 0x65BAD60) - 1319134199;
  v801 = ((v800 ^ 0x32DD6B0) + (v800 ^ 0xFCE0F424 ^ (v800 >> 4)) + 1) ^ (((v800 >> 4) ^ 0xFFCD2294) + 1);
  v802 = ((v800 >> 4) ^ 0x8CA9BCB7 ^ (v801 - ((2 * v801) & 0x1936C3B8) - 1935973924)) + (v800 ^ 0x32DD6B0);
  v803 = v787 + v785 + 1547024239 + (v800 ^ 0xF08BE10A ^ ((v802 >> 1) + 53335728 - (v802 & 0x65BAD60)));
  LODWORD(STACK[0x588]) = v803;
  v804 = *((_DWORD *)v798 + 151);
  v805 = ((8 * v804) ^ 0xC0DE3DD8) - 22682256;
  v806 = (v805 + (v804 ^ 0xC7E43844 ^ v805) + 1) ^ ((v804 ^ 0xC7E43844) + 1);
  v807 = LODWORD(STACK[0x680]) - v762;
  LODWORD(STACK[0x5BC]) = v782 - v781;
  LODWORD(STACK[0x5C0]) = v793 + 1;
  v808 = v807
       - v781
       + v778
       + (LODWORD(STACK[0x8A4]) ^ 0x47B86DAD)
       + v786
       + (((v804 ^ 0x828794A8 ^ (v806 - ((2 * v806) & 0x7538A626) - 1164160237)) + v805) ^ 0xA65ACDE9);
  v809 = v797 + v792;
  v810 = v797 + 608452609;
  LODWORD(STACK[0x5AC]) = v797 + 608452609;
  v811 = v791 ^ 0xF1C1D3AC;
  v812 = v793 + 1 - v809 - 1324421872 - ((2 * (v793 + 1 - v809 - 1324421872) - 1009839818) & 0xD16EAE78) - 895557673;
  v813 = v810 - (v791 ^ 0xF1C1D3AC) + (v812 & 0x72FE50BF ^ 0xEDB7FF7C) + (v812 & 0x72FE50BF ^ 0x9F49AFC3);
  v814 = v796;
  LODWORD(STACK[0x598]) = v796;
  v815 = v796 + v782 - v781;
  v816 = v795 - v815 + 491702212 - ((2 * (v795 - v815 + 491702212) + 282082606) & 0xCE29A26A);
  v817 = ((2 * v518) & 0xFBCBBFBA ^ 0xE383A718) + (v518 ^ 0x8C240C71);
  LODWORD(STACK[0x680]) = v809 + 427517559;
  LODWORD(v518) = ((2 * ((v809 + 427517559) ^ (234233500 - v811))) & 0xBFE7DFEC)
                + ((v809 + 427517559) ^ (234233500 - v811) ^ 0x5FF3EFF6);
  v818 = v812 ^ (v811 - 234233500);
  LODWORD(STACK[0x628]) = v818;
  LODWORD(STACK[0x5A4]) = v813 + 2;
  LODWORD(STACK[0x67C]) = v813 + 2 - v809;
  v819 = v811
       - v518
       + (v818 ^ 0x62CAC1A6)
       - 1722264100
       + v813
       + 2
       - v809
       + 2086914516
       - ((2 * (v811 - v518 + (v818 ^ 0x62CAC1A6) - 1722264100 + v813 + 2 - v809)) & 0xF8C793A8);
  LODWORD(v518) = v518 - 1609822198;
  v820 = v518 + (v812 ^ (v811 - 234233500) ^ 0x9D353E59);
  LODWORD(v518) = v518 + (v819 ^ v820 ^ 0x7C63C9D4) + ((2 * (v819 ^ v820)) ^ 0x7386C57) + 1;
  v821 = v518 - 1895101373 - ((2 * v518) & 0x1E161886);
  v822 = v821 ^ (LODWORD(STACK[0x6D0]) - 1895101373 - ((2 * LODWORD(STACK[0x6D0])) & 0x1E161886));
  v823 = (v822 - ((2 * v822) & 0x35AD86D0) - 1697201304) ^ v819 ^ v820;
  v824 = STACK[0x688];
  v825 = (v823 ^ 0x79823430)
       + (LODWORD(STACK[0x688]) ^ 0x60C8C173 ^ ((v823 ^ 0xE6B50ABC)
                                              - 946361583
                                              - ((2 * (v823 ^ 0xE6B50ABC)) & 0x8F2F5622)));
  v826 = v816 - 277024820;
  v827 = (v816 - 277024820) ^ (v817 - ((2 * (v817 + 1948516743)) & 0xCE29A26A) - 617033028);
  LODWORD(STACK[0x618]) = v827;
  v828 = v815 - ((2 * v815 + 492661232) & 0x11486DD2) + 659745761;
  LODWORD(STACK[0x620]) = v828;
  LODWORD(STACK[0x58C]) = v814 - v817;
  LODWORD(STACK[0x624]) = v814 - v817 - v815 + 354469667;
  v829 = v828 ^ (343946594 - v817 - ((397933810 - 2 * v817) & 0x11486DD2));
  LODWORD(STACK[0x61C]) = v827 ^ 0x75826965;
  v830 = (v827 ^ 0x75826965) + v829;
  v831 = v814 - v815 - 1991980886 - v830;
  LODWORD(STACK[0x630]) = v831 ^ v830;
  v832 = ((2 * (v829 - (v831 ^ v830))) & 0x77F7DFDE) + ((v829 - (v831 ^ v830)) ^ 0xBBFBEFEF);
  LODWORD(STACK[0x610]) = v832;
  v833 = v819;
  LODWORD(STACK[0x6A0]) = v819;
  v834 = ((2 * ((v819 ^ 0xBE57CD27) + 558097747)) & 0x4377F3FE) + (((v819 ^ 0xBE57CD27) + 558097747) ^ 0xA1BBF9FF);
  LODWORD(STACK[0x6A8]) = v834;
  v835 = v832 + v817;
  v836 = v835
       + v834
       + v803
       + 376182681
       + ((-1141116945 - v832 + (v824 ^ 0xC797AB11 ^ (v832 + 1141116945))) ^ ((v824 ^ 0xC797AB11 ^ v831 ^ v830)
                                                                            - (v831 ^ v830)) ^ (v825 + 1));
  v837 = (v831 ^ 0x3D733553) - v835;
  v838 = ((v831 ^ 0x3DCBFB0C) + 12111456) ^ ((v831 ^ 0x3D733553) + 1);
  LODWORD(v518) = v831 ^ 0x62D5467D ^ (v838 - 1604743982 + (~(2 * v838) | 0xBF4CE65D));
  v839 = v836 - ((2 * v836) & 0xB25FDE86) - 651169981;
  LODWORD(STACK[0x608]) = v837 + 1205333609;
  LODWORD(STACK[0x584]) = v518;
  v840 = ((v518 + 12111455) ^ (v837 + 1205333609)) - ((2 * ((v518 + 12111455) ^ (v837 + 1205333609))) & 0x8DC7E364);
  v841 = 7 * (HIBYTE(v839) & 0xF ^ 9) + 3640;
  v842 = (v821 ^ 0x70F4F3BC) - v811 + 234233501;
  v843 = LODWORD(STACK[0x6D8]) ^ 0x8EACCC08;
  v844 = (v833 ^ 0x4110FC87) + v842;
  LODWORD(STACK[0x578]) = v808 + 1263005901;
  LODWORD(STACK[0x600]) = v518 + 2088009110;
  v845 = v843 + v808 + 1263005901 - (v518 + 2088009110) + 1132357519 + v842;
  v846 = v845 + 1398254139 - ((2 * v845) & 0xA6AF5476);
  v847 = 7 * ((v839 >> 20) & 0xF ^ 2) + 3640;
  v848 = 7 * (~HIWORD(v839) & 0xF) + 3640;
  v849 = STACK[0x6B8];
  v850 = (((*(unsigned __int8 *)(STACK[0x6B8]
                               + (unsigned __int16)(v841
                                                  - 960 * ((unsigned __int16)((2185 * v841) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(7 * ((v839 >> 28) ^ 0xD) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v839 >> 28) ^ 0xD) + 3640)) >> 16) >> 5))) ^ 6) << 12) | *(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(v848 - 960 * ((unsigned __int16)((2185 * v848) >> 16) >> 5))) ^ 0x46) ^ (16 * (*(unsigned __int8 *)(STACK[0x6B8] + (unsigned __int16)(v847 - 960 * ((unsigned __int16)((2185 * v847) >> 16) >> 5))) ^ 0x46));
  v851 = 7 * (((unsigned __int16)v839 >> 12) ^ 0xE) + 3640;
  LODWORD(STACK[0x634]) = v839;
  v852 = 7 * ((v839 >> 4) ^ 4) + 3640;
  LODWORD(v518) = (v850 << 16) + 813795261 - ((v850 << 17) & 0x61020000);
  LODWORD(STACK[0x698]) = v518;
  v853 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(v852
                                               - 960 * ((unsigned __int16)((2185 * v852) >> 16) >> 5))) ^ 0x46;
  v854 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * (v839 & 0xF ^ 3)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v839 & 0xF ^ 3) + 3640)) >> 16) >> 5))) ^ 0x46;
  v855 = ((v518 ^ 0x308187BD)
        + ((*(unsigned __int8 *)(v849
                               + (unsigned __int16)(7 * (535 - ((v839 >> 8) & 0xF))
                                                  - 960
                                                  * ((unsigned __int16)((15295 * (535 - ((v839 >> 8) & 0xF))) >> 16) >> 5))) ^ 0x46) << 8)) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(v851 - 960 * ((unsigned __int16)((2185 * v851) >> 16) >> 5))) ^ 0x46) << 12);
  v856 = (v855 | v854) ^ (16 * v853);
  v857 = 7 * (HIBYTE(v846) & 0xF ^ 3) + 3640;
  LOBYTE(v798) = (STACK[0x694] & 0x5C ^ 0x5C) + (STACK[0x694] & 0x5C);
  LODWORD(STACK[0x6D0]) = v840 - 958139982;
  v858 = (v846 ^ 0x5357AA3B) >> ((_BYTE)v798 + ((v840 - 78) & 0xB4 ^ 0xB0 | (v840 - 78) & 0xB4 ^ 4));
  v859 = ((*(unsigned __int8 *)(v849
                              + (unsigned __int16)(v857
                                                 - 960 * ((unsigned __int16)((2185 * v857) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(7 * ((v846 >> 28) ^ 5) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v846 >> 28) ^ 5) + 3640)) >> 16) >> 5))) ^ 0x46) << 12);
  LOWORD(v857) = 7 * (v858 >> 4)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v858 >> 4) + 3640)) >> 16) >> 5);
  v860 = v859 | *(unsigned __int8 *)(v849
                                   + (unsigned __int16)(7 * (v858 & 0xF)
                                                      + 3640
                                                      - 960
                                                      * ((unsigned __int16)((2185 * (7 * (v858 & 0xF) + 3640)) >> 16) >> 5))) ^ 0x46;
  v861 = 7 * (((unsigned __int16)(v846 & 0xF000) >> 12) ^ 0xA) + 3640;
  LODWORD(v798) = 7 * ((v846 >> 8) & 0xF ^ 0xA) + 3640;
  v862 = (v860 << 8) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)v857) ^ 0x46) << 12);
  v863 = 7 * ((v846 >> 4) ^ 3) + 3640;
  v864 = v862 | *(unsigned __int8 *)(v849
                                   + (unsigned __int16)((_WORD)v798
                                                      - 960
                                                      * ((unsigned __int16)((2185 * (_DWORD)v798) >> 16) >> 5))) ^ 0x46;
  v865 = (v864 << 8) - 475575754 - ((v864 << 9) & 0xC74E9400);
  v866 = v865 ^ ((*(unsigned __int8 *)(v849
                                     + (unsigned __int16)(v861
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v861) >> 16) >> 5))) ^ 0x46) << 12);
  v867 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * (v846 & 0xF ^ 0xB)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v846 & 0xF ^ 0xB) + 3640)) >> 16) >> 5))) ^ 0x46;
  v868 = (v866 ^ 0xE3A74A36 | v867) ^ (16
                                     * (*(unsigned __int8 *)(v849
                                                           + (unsigned __int16)(v863
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v863) >> 16) >> 5))) ^ 0x46));
  LODWORD(STACK[0x5F8]) = v854 & 0xF;
  v869 = 7 * (v854 & 0xF | (16 * (v867 & 0xF)));
  v870 = (unsigned __int16)(v869 + 3983) % 0x3C0u;
  if (v869 >= 0x3C0)
    v869 -= 960;
  LODWORD(STACK[0x5EC]) = v856;
  v871 = (v856 >> 4) - ((v856 >> 3) & 0x184886BC);
  v872 = *(unsigned __int8 *)(v849 + v870);
  v873 = LODWORD(STACK[0x56C]) ^ 0x46;
  LODWORD(STACK[0x574]) = v873;
  v874 = v872 ^ v873;
  LODWORD(STACK[0x5E8]) = 7 * v874;
  LODWORD(STACK[0x5E4]) = 244671 * v874;
  v875 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * v874
                                               - 960 * ((unsigned __int16)((244671 * v874) >> 16) >> 9)));
  v876 = 7
       * ((((v875 >> 4) ^ 4) - 2 * (((v875 >> 4) ^ 4) & 7 ^ ((v875 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v849 + v869))
       + 3983;
  v877 = ((_BYTE)v871 + 94) & 0xF ^ 0xE;
  LODWORD(STACK[0x5F0]) = v877;
  v878 = v868 & 0xF0 | v877;
  v879 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7
                                               * (v878
                                                + ((((v871 + 17246) & 0xD ^ 0xC) + ((v871 + 17246) & 0xD ^ 0x331)) & 0x23B)))
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v849
                                                             + (unsigned __int16)(v876
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v876) >> 16) >> 7))) ^ 0x46));
  v880 = 7 * v878;
  v881 = v880 - 960;
  if (v880 < 0x3C0)
    v881 = v880;
  v882 = v844 + 1;
  v883 = v882 - ((2 * v882) & 0xC313D800) + 1636428800;
  LODWORD(STACK[0x5FC]) = v883 ^ v820;
  v884 = v879 ^ 0x46;
  LODWORD(STACK[0x5DC]) = 7 * v884;
  v885 = (*(unsigned __int8 *)(v849
                             + (unsigned __int16)(7 * v884
                                                - 960 * ((unsigned __int16)((244671 * v884) >> 16) >> 9))) ^ 0x46u) >> ((v882 ^ v820 ^ 0x16) + ((v882 ^ v820 ^ 0x27) & 0xE5 ^ 0xDE) + ((v882 ^ v820 ^ 0x27) & 0x1A ^ 0xA) - 21);
  v886 = 7 * ((v885 - ((2 * v885) & 0x8C) + 70) ^ *(unsigned __int8 *)(v849 + v881)) + 3983;
  v887 = 7 * ((v868 >> 4) & 0xF0 | (v856 >> 8) & 0xF);
  v888 = *(unsigned __int8 *)(v849 + (unsigned __int16)(7 * ((v868 >> 4) & 0xF0 | (v856 >> 8) & 0xF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v849 + (unsigned __int16)(v886 - 960 * ((unsigned __int16)((8739 * v886) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LODWORD(STACK[0x5D4]) = 7 * v888;
  v889 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * v888
                                               - 960 * ((unsigned __int16)((244671 * v888) >> 16) >> 9)));
  if (v887 >= 0x3C0)
    v887 -= 960;
  v890 = 7
       * ((((v889 >> 4) ^ 4) - 2 * (((v889 >> 4) ^ 4) & 7 ^ ((v889 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v849 + v887))
       + 3983;
  LODWORD(STACK[0x5D0]) = v855;
  v891 = 7 * (((v866 >> 8) & 0xF0 | ((unsigned __int16)v855 >> 12)) ^ 0x40);
  v892 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * (((v866 >> 8) & 0xF0 | ((unsigned __int16)v855 >> 12)) ^ 0x40)
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v849
                                                             + (unsigned __int16)(v890
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v890) >> 16) >> 7))) ^ 0x46));
  if (v891 >= 0x3C0)
    v891 -= 960;
  v893 = v892 ^ 0x46;
  LODWORD(STACK[0x5B4]) = 7 * v893;
  LODWORD(STACK[0x5B0]) = 244671 * v893;
  v894 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * v893
                                               - 960 * ((unsigned __int16)((244671 * v893) >> 16) >> 9))) >> 4;
  v895 = 7
       * (((v894 ^ 4) - 2 * ((v894 ^ 4) & 0xE ^ v894 & 8) + 70) ^ *(unsigned __int8 *)(v849 + v891))
       + 3983;
  v896 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7
                                               * (BYTE2(v855) & 0xF | (16
                                                                     * ((HIWORD(v866) ^ 7) & ((((_BYTE)v808 - 40) & 0xF ^ 0xF)
                                                                                            + (((_BYTE)v808 - 40) & 0xF)))))
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v849
                                                             + (unsigned __int16)(v895
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v895) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  LODWORD(STACK[0x5A8]) = 7 * v896;
  v897 = (*(unsigned __int8 *)(v849
                             + (unsigned __int16)(7 * v896
                                                - 960 * ((unsigned __int16)((244671 * v896) >> 16) >> 9))) >> 4) ^ 4;
  v898 = 7
       * ((v897 - ((2 * v897) & 0xC) + 70) ^ *(unsigned __int8 *)(v849
                                                                                 + (unsigned __int16)(7 * (BYTE2(v855) & 0xF | (16 * ((HIWORD(v866) ^ 7) & ((((_BYTE)v808 - 40) & 0xF ^ 0xF) + (((_BYTE)v808 - 40) & 0xF))))))
                                                                                 % 0x3C0u))
       + 3983;
  v899 = v865;
  LODWORD(STACK[0x570]) = v865;
  v900 = HIWORD(v865) & 0xF0;
  v901 = STACK[0x698];
  v902 = 7 * ((v900 & 0xFFFFFFF0 | (LODWORD(STACK[0x698]) >> 20) & 0xF) ^ 0xA8);
  v903 = *(unsigned __int8 *)(v849 + (unsigned __int16)(v902 + 3983) % 0x3C0u) ^ (16
                                                                                * (*(unsigned __int8 *)(v849 + (unsigned __int16)(v898 - 960 * ((unsigned __int16)((8739 * v898) >> 16) >> 7))) ^ 0x46));
  if (v902 >= 0x3C0)
    v902 -= 960;
  v904 = v903 ^ 0x46;
  LODWORD(STACK[0x5A0]) = 7 * v904;
  LODWORD(STACK[0x59C]) = 244671 * v904;
  v905 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * v904
                                               - 960 * ((unsigned __int16)((244671 * v904) >> 16) >> 9)));
  LODWORD(STACK[0x590]) = (7
                         * ((((v905 >> 4) ^ 4) - 2 * (((v905 >> 4) ^ 4) & 7 ^ ((v905 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v849 + v902))
                         + 3983)
                        % (((STACK[0x614] & 0x362B9D ^ 0x162914) + (STACK[0x614] & 0x362B9D ^ 0x200289) + 5167190) & 0x70EFCCu);
  v906 = STACK[0x5E0];
  HIDWORD(v908) = LODWORD(STACK[0x5E0]) ^ 0xB11;
  LODWORD(v908) = LODWORD(STACK[0x5E0]) ^ 0xC797A000;
  v907 = v908 >> 13;
  HIDWORD(v908) = LODWORD(STACK[0x5E0]) ^ 1;
  LODWORD(v908) = LODWORD(STACK[0x5E0]) ^ 0xC797AB10;
  v909 = v908 >> 2;
  HIDWORD(v908) = LODWORD(STACK[0x5E0]) ^ 0x17AB11;
  LODWORD(v908) = LODWORD(STACK[0x5E0]) ^ 0xC7800000;
  v910 = v909 ^ v907 ^ (v908 >> 22);
  v911 = STACK[0x5D8];
  LODWORD(STACK[0x6D8]) = STACK[0x5D8];
  v912 = v911 ^ 0x8EACCC08;
  LODWORD(STACK[0x614]) = v906;
  v906 ^= 0xC797AB11;
  v913 = LODWORD(STACK[0x6C8]) ^ 0x8EACCC08;
  v914 = v906 & v913 ^ v906 & (v911 ^ 0x8EACCC08);
  v915 = STACK[0x638];
  v916 = STACK[0x6B0];
  v917 = LODWORD(STACK[0x6B0]) ^ 0x8EACCC08;
  LODWORD(STACK[0x688]) = STACK[0x638];
  v918 = v915 ^ 0xC797AB11;
  v919 = (v917 ^ v913) & (v915 ^ 0xC797AB11) ^ v914;
  v920 = LODWORD(STACK[0x6B4]) ^ 0xC797AB11;
  v921 = v919 ^ v920 & v917 ^ v920 & v912;
  LODWORD(STACK[0x54C]) = v913;
  LODWORD(STACK[0x558]) = v920;
  LODWORD(STACK[0x550]) = v906;
  v922 = v917 & v913 ^ v913 & v912 ^ v917 & v912 ^ v906 & v918 ^ v920 & v906 ^ v920 & v918;
  v923 = (((v809 + 1370183136) ^ v922) - ((2 * ((v809 + 1370183136) ^ v922)) & 0xD16EAE78) - 390637764) ^ v812;
  v924 = ((v826 ^ 0x98EB2ECA) + (v921 ^ 0x6714D135 ^ v826) + 1) ^ (v921 - 2 * (v921 & (v815 + 1457431649))) ^ ((v921 ^ 0xC1ABA799 ^ (v923 - 1045715047 - ((2 * v923) & 0x83574F32))) - v923);
  v925 = STACK[0x6A0];
  v926 = (LODWORD(STACK[0x6A0]) ^ 0x41A832D8)
       + (v821 ^ 0x8F0B0C43)
       + v882
       + 248252609
       - ((2 * ((LODWORD(STACK[0x6A0]) ^ 0x41A832D8) + (v821 ^ 0x8F0B0C43) + v882 + 1)) & 0x1D981180);
  LODWORD(STACK[0x594]) = v926;
  v927 = v910 - LODWORD(STACK[0x58C]) + LODWORD(STACK[0x5AC]) + v924 + LODWORD(STACK[0x588]);
  v928 = v883 ^ v925;
  LODWORD(STACK[0x5E0]) = v883 ^ v925;
  v929 = v883 ^ v925 ^ 0x1440DD1;
  LODWORD(STACK[0x58C]) = v929;
  v930 = (LODWORD(STACK[0x6A8]) + 1581516290 + v929) ^ v928;
  LODWORD(STACK[0x638]) = v930;
  LODWORD(STACK[0x588]) = v930 ^ 0xFEBBF22E;
  v931 = v927
       - 1392087331
       + (v930 ^ 0xFEBBF22E)
       - ((2 * (v927 - 1392087331 + (v930 ^ 0xFEBBF22E))) & 0xD0718B88)
       + 1748551108;
  HIDWORD(v908) = v916 ^ 0xC08;
  LODWORD(v908) = v916 ^ 0x8EACC000;
  v932 = v908 >> 13;
  HIDWORD(v908) = v916 ^ 0x2CCC08;
  LODWORD(v908) = v916 ^ 0x8E800000;
  v933 = v908 >> 22;
  LODWORD(STACK[0x554]) = v917;
  HIDWORD(v908) = v916;
  LODWORD(v908) = v916 ^ 0x8EACCC08;
  v934 = v932 ^ (v908 >> 2) ^ v933;
  v935 = LODWORD(STACK[0x5CC]) ^ v910 ^ (LODWORD(STACK[0x5C0]) + 1745633487);
  v936 = LODWORD(STACK[0x598])
       - 1209139717
       - 2 * LODWORD(STACK[0x598])
       + ((((LODWORD(STACK[0x5BC]) + 1634045053) ^ v934) - LODWORD(STACK[0x5BC]) - 1634045053) ^ ((v934 ^ LODWORD(STACK[0x5B8]))
                                                                                                - LODWORD(STACK[0x5B8])) ^ ((v934 ^ 0x4EF5F89E ^ (v935 + 1324742814 - ((2 * v935) & 0x9DEBF13C))) - v935));
  v937 = (v936 ^ 0xFFEDDC67) + v922 + ((2 * v936) & 0xFFDBB8CE) + LODWORD(STACK[0x5A4]);
  LODWORD(STACK[0x5B8]) = v937;
  v938 = 7 * (((v899 >> 20) & 0xF0 | HIBYTE(v901) & 0xF) ^ 0x30);
  v939 = LODWORD(STACK[0x584]) + 570209203;
  v940 = STACK[0x6D0];
  v941 = LODWORD(STACK[0x6D0]) ^ 0x1879DD44;
  LODWORD(STACK[0x5CC]) = v941;
  v942 = (v939 + v941) ^ v940;
  LODWORD(STACK[0x5D8]) = v942;
  v943 = v937
       + LODWORD(STACK[0x578])
       + (v942 ^ 0x1879DD44)
       - ((2 * (v937 + LODWORD(STACK[0x578]) + (v942 ^ 0x1879DD44)) + 305234570) & 0x2DC10ACC);
  LODWORD(STACK[0x5AC]) = v931;
  v944 = 7 * (HIBYTE(v931) & 0xF ^ 8) + 3640;
  v945 = 7 * ((v931 >> 20) & 0xF ^ 3) + 3640;
  v946 = 7 * (HIWORD(v931) & 0xF ^ 8) + 3640;
  v947 = ((*(unsigned __int8 *)(v849
                              + (unsigned __int16)(v944
                                                 - 960 * ((unsigned __int16)((2185 * v944) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v849 + (7 * ((v931 >> 28) ^ 6) + 3640) % ((v926 & 0x3C0 ^ 0x300) + (v926 & 0x3C0 ^ 0xC0))) ^ 0x46) << 12) | *(unsigned __int8 *)(v849 + (unsigned __int16)(v946 - 960 * ((unsigned __int16)((2185 * v946) >> 16) >> 5))) ^ 0x46;
  v948 = 7 * (((unsigned __int16)v931 >> 12) ^ 0xC) + 3640;
  v949 = 7 * ((v931 >> 8) & 0xF ^ 5) + 3640;
  v950 = 7 * ((v931 >> 4) ^ 0xC) + 3640;
  v951 = (v947 << 8) ^ (16
                      * (*(unsigned __int8 *)(v849
                                            + (unsigned __int16)(v948
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v948) >> 16) >> 5))) ^ 0x46)) ^ (*(unsigned __int8 *)(v849 + (unsigned __int16)(v949 - 960 * ((unsigned __int16)((2185 * v949) >> 16) >> 5))) ^ 0x46 | ((*(unsigned __int8 *)(v849 + (unsigned __int16)(v945 - 960 * ((unsigned __int16)((2185 * v945) >> 16) >> 5))) ^ 0x46) << 12));
  v952 = (v951 << 8) - 1422659721 - ((v951 << 9) & 0x5667DE00);
  v943 += 2147042987;
  v953 = 7 * (HIBYTE(v943) & 0xF ^ 6) + 3640;
  LOWORD(v948) = v953 - 960 * ((unsigned __int16)((2185 * v953) >> 16) >> 5);
  v954 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * (v931 & 0xF ^ 4)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v931 & 0xF ^ 4) + 3640)) >> 16) >> 5))) ^ 0x46;
  v955 = (v952 ^ 0xAB33EF77 | v954) ^ (16
                                     * (*(unsigned __int8 *)(v849
                                                           + (unsigned __int16)(v950
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v950) >> 16) >> 5))) ^ 0x46));
  v956 = 7 * ((v943 >> 20) & 0xF ^ 0xE) + 3640;
  v957 = ((((*(unsigned __int8 *)(v849 + (unsigned __int16)v948) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(7 * ((v943 >> 28) ^ 9) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v943 >> 28) ^ 9) + 3640)) >> 16) >> 5))) ^ 0x46) << 12) | *(unsigned __int8 *)(v849 + (unsigned __int16)(7 * (BYTE2(v943) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v943) & 0xF) + 3640)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(v956 - 960 * ((unsigned __int16)((2185 * v956) >> 16) >> 5))) ^ 0x46) << 12);
  v958 = 7 * ((v943 >> 8) & 0xF ^ 5) + 3640;
  v959 = 7 * (((unsigned __int16)v943 >> 12) ^ 8) + 3640;
  v960 = 7 * ((v943 >> 4) ^ 6) + 3640;
  v961 = ((v957 | *(unsigned __int8 *)(v849
                                     + (unsigned __int16)(v958
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v958) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(v959 - 960 * ((unsigned __int16)((2185 * v959) >> 16) >> 5))) ^ 0x46) << 12);
  v962 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * (v943 & 0xF ^ 6)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v943 & 0xF ^ 6) + 3640)) >> 16) >> 5))) ^ 0x46;
  v963 = (v961 | v962) ^ (16
                        * (*(unsigned __int8 *)(v849
                                              + (unsigned __int16)(v960
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v960) >> 16) >> 5))) ^ 0x46));
  v964 = v954 & 0xF;
  LODWORD(STACK[0x5C0]) = v964;
  v965 = 7 * (v964 & 0xFFFFFF0F | (16 * (v962 & 0xF)));
  v966 = *(unsigned __int8 *)(v849 + (unsigned __int16)(v965 + 3983) % 0x3C0u) ^ LODWORD(STACK[0x574]);
  if (v938 >= 0x3C0)
    v967 = v938 - 960;
  else
    v967 = v938;
  LODWORD(STACK[0x598]) = v967;
  v968 = v965 - 960;
  if (v965 < 0x3C0)
    v968 = v965;
  v969 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * v966
                                               - 960 * ((unsigned __int16)((244671 * v966) >> 16) >> 9)));
  v970 = 7
       * ((((v969 >> 4) ^ 4) - 2 * (((v969 >> 4) ^ 4) & 7 ^ ((v969 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v849 + v968))
       + 3983;
  LODWORD(STACK[0x5BC]) = v955;
  v971 = 7 * (v963 & 0xF0 | (v955 >> 4));
  v972 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(v970
                                               - 960 * ((unsigned __int16)((8739 * v970) >> 16) >> 7)));
  if (v971 >= 0x3C0)
    v971 -= 960;
  v973 = *(unsigned __int8 *)(v849 + (unsigned __int16)(7 * (v963 & 0xF0 | (v955 >> 4)) + 3983)
                                   % 0x3C0u) ^ (16 * (v972 ^ 0x46)) ^ 0x46;
  v974 = *(_BYTE *)(v849 + v971);
  LODWORD(STACK[0x5A4]) = 7 * v973;
  v975 = (*(unsigned __int8 *)(v849
                             + (unsigned __int16)(7 * v973
                                                - 960 * ((unsigned __int16)((244671 * v973) >> 16) >> 9))) >> 4) ^ 4;
  v976 = 7 * (v975 + (v974 ^ 0x46) - 2 * (v975 & (v974 ^ 6))) + 3983;
  v977 = (v963 >> 4) & 0xF0 | (v955 >> 8) & 0xF;
  v978 = v977 + 188982373 - ((2 * v977) & 0xCA);
  v979 = ((2 * v978) & 0x72 ^ 0x42) + (v978 ^ 0xB43A65C);
  v980 = *(unsigned __int8 *)(v849
                            + ((v979 & 0xB9) + (v979 & 0xB9 ^ 0xB9) + 78) * v979 % 0x3C0) ^ (16 * (*(unsigned __int8 *)(v849 + (unsigned __int16)(v976 - 960 * ((unsigned __int16)((8739 * v976) >> 16) >> 7))) ^ 0x46)) ^ 0x46;
  v981 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(7 * v980
                                               - 960 * ((unsigned __int16)((244671 * v980) >> 16) >> 9)));
  v982 = 7
       * ((((v981 >> 4) ^ 4) - 2 * (((v981 >> 4) ^ 4) & 7 ^ ((v981 & 0x10) != 0)) + 70) ^ *(unsigned __int8 *)(v849 + (unsigned __int16)(7 * (v978 ^ 0xA465)) % 0x3C0u))
       + 3023;
  LOWORD(v978) = v982 - 960 * ((unsigned __int16)((8739 * v982) >> 16) >> 7);
  v983 = v963 >> 8 >> ((v978 & 4 ^ 4) + (v978 & 4));
  v984 = (~HIBYTE(v952) & 0xE | 0x48F9BA21) - (((v952 & 0x1000000) == 0) | 0x370645DE) + 923157982;
  v985 = ((v983 - ((2 * v983) & 0x52579E) + 388574159) >> 8) & 0xF0 ^ 0x20 | v984 ^ 0x48F9BA25;
  LODWORD(STACK[0x584]) = ((unsigned __int16)(7 * ((v985 - 3480 - ((2 * v985) & 0xE4D0)) ^ 0xF268)
                                            - ((14 * ((v985 - 3480 - ((2 * v985) & 0xE4D0)) ^ 0xF268)) & 0x6FF4)
                                            - 18438) ^ 0xB7FAu)
                        % (((HIBYTE(v952) & 8 ^ (v984 ^ 0xB70645DA) & 0x1F68 ^ 8) + 25720) & (HIBYTE(v952) & 0xB ^ 0xB ^ (v984 ^ 0xB70645DA) & 0x4BDB));
  v986 = STACK[0x640];
  v987 = (LODWORD(STACK[0x640]) ^ 0x75826965 ^ (LODWORD(STACK[0x618])
                                              - 1831554316
                                              - ((2 * LODWORD(STACK[0x618])) & 0x25A965E8)))
       - LODWORD(STACK[0x61C]);
  LODWORD(STACK[0x67C]) += LODWORD(STACK[0x648]) + 331091621;
  v988 = LODWORD(STACK[0x644]) ^ LODWORD(STACK[0x680]) ^ 0x4AD6D9DA ^ LODWORD(STACK[0x628]);
  v989 = (v987 ^ ((LODWORD(STACK[0x620]) ^ 0x775BC916) + (v986 ^ 0x1A70841D ^ LODWORD(STACK[0x620])) + 1) ^ (((v988 - 1831554316 - ((2 * v988) & 0x25A965E8)) ^ v986) - v988))
       - LODWORD(STACK[0x624]);
  LODWORD(STACK[0x680]) = (v989 ^ 0xF6FD63BF) + 2080309240 + ((2 * v989) & 0xEDFAC77E);
  v990 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(LODWORD(STACK[0x5E8])
                                               - 960 * ((LODWORD(STACK[0x5E4]) + 139217799) >> 25)
                                               + 3983)) ^ (16
                                                         * (*(unsigned __int8 *)(v849
                                                                               + (unsigned __int16)(LOWORD(STACK[0x5DC])
                                                                                                  + 3983)
                                                                               % 0x3C0u) ^ 0x46)) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(LOWORD(STACK[0x5D4]) + 3983) % 0x3C0u) ^ 0x46) << (STACK[0x6D8] & 8 ^ 8) << (STACK[0x6D8] & 8));
  v991 = *(unsigned __int8 *)(v849
                            + (unsigned __int16)(LODWORD(STACK[0x5B4])
                                               - 960 * ((LODWORD(STACK[0x5B0]) + 139217799) >> 25)
                                               + 3983)) ^ 0x46;
  v992 = v990 ^ 0x7CFB6FE2 ^ ((v991 << 12) + 2096852900 - ((v991 << 13) & 0x16C000));
  v993 = *(unsigned __int8 *)(v849 + (unsigned __int16)(v938 + 3983) % 0x3C0u) ^ (16
                                                                                * (*(unsigned __int8 *)(v849 + LODWORD(STACK[0x590])) ^ 0x46)) ^ 0x46;
  v994 = (unsigned __int16)(7 * v993 + 3983) % 0x3C0u;
  v995 = (*(unsigned __int8 *)(v849
                             + (unsigned __int16)(7 * v993
                                                - 960 * ((unsigned __int16)((244671 * v993) >> 16) >> 9))) >> 4) ^ 4;
  v996 = 7 * ((v995 - ((2 * v995) & 0xC) + 70) ^ *(unsigned __int8 *)(v849 + LODWORD(STACK[0x598])))
       + 3983;
  v997 = LODWORD(STACK[0x6D0]) ^ LODWORD(STACK[0x630]);
  v998 = ((*(unsigned __int8 *)(v849
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v849
                                                                       + 7
                                                                       * (((((LODWORD(STACK[0x6A8]) + 239339009) | ((LODWORD(STACK[0x6A0]) ^ 0x1A832D8) + 247208621)) & 0x8A81EFE | (((LODWORD(STACK[0x5B8]) + 1188761) & 0x242508F1 ^ 0x242508F1) + ((LODWORD(STACK[0x5B8]) + 1188761) & 0x242508F1))) & (v997 & 0x40420239 ^ 0x40420030 | v997 & 0x40420239 ^ 0x209))
                                                                        + ((HIBYTE(LODWORD(STACK[0x570])) & 0xF0 | (LODWORD(STACK[0x698]) >> 28)) ^ 0xE3))
                                                                       % 0x3C0) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v849 + (unsigned __int16)(v996 - 960 * ((unsigned __int16)((8739 * v996) >> 16) >> 7))) ^ 0x46)) ^ 0x46)
                                                 + 3983)
                              % 0x3C0u) ^ 6) << 28) ^ ((*(unsigned __int8 *)(v849 + v994) ^ 0x46) << 24);
  v999 = v992 ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(LOWORD(STACK[0x5A8]) + 3983) % 0x3C0u) ^ 0x46) << 16);
  v1000 = v999 ^ ((*(unsigned __int8 *)(v849
                                      + (unsigned __int16)(LOWORD(STACK[0x5A0])
                                                         - 960
                                                         * ((LODWORD(STACK[0x59C]) + 139217799) >> 25)
                                                         + 3983)) ^ 0x46) << 20);
  v1001 = v1000 ^ 0xD6329168 ^ (v998 - 701329048 - ((2 * v998) & 0xAC000000));
  v1002 = 7 * (STACK[0x5F8] & 0xFFFFFF0F | (16 * ((v990 ^ 0x46) & 0xF))) + 1813;
  v1003 = 7 * ((v990 ^ 0x46) & 0xF0 | LODWORD(STACK[0x5F0])) + 1813;
  v1004 = 7 * ((v990 >> 4) & 0xF0 | (LODWORD(STACK[0x5EC]) >> 8) & 0xF) + 1813;
  v1005 = *(unsigned __int8 *)(v849
                             + (unsigned __int16)(v1003
                                                - 960 * ((unsigned __int16)((2185 * v1003) >> 16) >> 5)));
  v1006 = (((v1005 ^ 1) & 7) + (v1005 & 7 ^ 6))
        * (((v992 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5D0]) >> 12)) + 259);
  v1007 = ((*(unsigned __int8 *)(v849
                               + (unsigned __int16)(v1006
                                                  - 960 * ((unsigned __int16)((17477 * v1006) >> 16) >> 8))) ^ 0x46) << 12) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(v1004 - 960 * ((unsigned __int16)((2185 * v1004) >> 16) >> 5))) ^ 0x46) << 8);
  v1008 = 7 * ((v999 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5D0])) & 0xF) + 1813;
  v1009 = 7 * ((HIWORD(v1000) & 0xF0 | (LODWORD(STACK[0x698]) >> 20) & 0xF) ^ 8) + 1813;
  v1010 = 7 * ((v1001 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x698])) & 0xF) + 1813;
  v1011 = 7 * ((HIBYTE(v1001) & 0xF0 | (LODWORD(STACK[0x698]) >> 28)) ^ 3) + 1813;
  v1012 = *(unsigned __int8 *)(v849 + (unsigned __int16)(v1002 - 960 * ((unsigned __int16)((2185 * v1002) >> 16) >> 5)));
  v1013 = ((*(unsigned __int8 *)(v849
                               + (unsigned __int16)(v1011
                                                  - 960 * ((unsigned __int16)((2185 * v1011) >> 16) >> 5))) ^ 6) << 28) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(v1010 - 960 * ((unsigned __int16)((2185 * v1010) >> 16) >> 5))) ^ 0x46) << 24);
  v1014 = v1012 ^ (16 * (v1005 ^ 0x46)) ^ 0x46;
  v1015 = v1007 ^ v1014 ^ ((*(unsigned __int8 *)(v849
                                               + (unsigned __int16)(v1008
                                                                  - 960
                                                                  * ((unsigned __int16)((2185 * v1008) >> 16) >> 5))) ^ 0x46) << 16);
  v1016 = v1015 ^ ((*(unsigned __int8 *)(v849
                                       + (unsigned __int16)(v1009
                                                          - 960
                                                          * ((unsigned __int16)((2185 * v1009) >> 16) >> 5))) ^ 0x46) << 20);
  v1017 = v1013 ^ v1016;
  v1018 = *(unsigned __int8 *)(v849
                             + (unsigned __int16)(7 * (BYTE2(v1015) & 0xF)
                                                + 3822
                                                - 960
                                                * ((unsigned __int16)((2185
                                                                                   * (7 * (HIWORD(v1015) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46 ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(7 * (HIBYTE(v1017) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIBYTE(v1017) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(7 * (v1017 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v1017 >> 28) + 3822)) >> 16) >> 5))) ^ 6) << 12) ^ (16 * (*(unsigned __int8 *)(v849 + (unsigned __int16)(7 * ((v1016 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v1016 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0x46));
  v1019 = 7 * (((v1007 ^ v1014) >> 8) & 0xF) + 3822;
  LODWORD(STACK[0x6A8]) = (LODWORD(STACK[0x610])
                         + LODWORD(STACK[0x608])
                         - LODWORD(STACK[0x600])
                         + 157427230
                         - ((2 * (LODWORD(STACK[0x610]) + LODWORD(STACK[0x608]) - LODWORD(STACK[0x600]) - 1077952696)) & 0x9344CDAC)) ^ (16 * (*(unsigned __int8 *)(v849 + (unsigned __int16)(7 * (v1014 >> 4) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v1014 >> 4) + 3822)) >> 16) >> 5))) ^ 0x46)) ^ (((*(unsigned __int8 *)(v849 + (unsigned __int16)(v1019 - 960 * ((unsigned __int16)((2185 * v1019) >> 16) >> 5))) ^ 0x46) << 8) ^ ((*(unsigned __int8 *)(v849 + (unsigned __int16)(7 * ((unsigned __int16)v1007 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v1007 >> 12) + 3822)) >> 16) >> 5))) ^ 0x46) << 12) ^ (v1018 << 16) | *(unsigned __int8 *)(v849 + (unsigned __int16)(7 * (v1012 & 0xF ^ 6) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v1012 & 0xF ^ 6u) + 3822)) >> 16) >> 5))) ^ 0x46);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0]
                                        + 8
                                        * (LODWORD(STACK[0x670]) | (2
                                                                  * (((LODWORD(STACK[0x650])
                                                                                   + 1725311254
                                                                                   - ((2 * LODWORD(STACK[0x650]) + 2) & 0xCDAC522C)
                                                                                   + 1) ^ 0x66D62900) < 0x40))))
                            - 4))();
}

void sub_2085B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;

  LODWORD(STACK[0x6D0]) = a7;
  LODWORD(STACK[0x5E0]) = v8;
  LODWORD(STACK[0x6A8]) = a8 ^ 0xB1924DC3;
  LODWORD(STACK[0x638]) = STACK[0x6B4];
  LODWORD(STACK[0x5D8]) = STACK[0x6C8];
  LODWORD(STACK[0x6C8]) = STACK[0x6B0];
  LODWORD(STACK[0x6B0]) = v9;
  LODWORD(STACK[0x6B4]) = STACK[0x614];
  JUMPOUT(0x2053D4);
}

uint64_t sub_208640@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  uint64_t v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  unint64_t v132;
  unsigned int v133;
  unsigned int v134;
  int v135;

  LODWORD(STACK[0x6D0]) = LODWORD(STACK[0x54C]) + LODWORD(STACK[0x524]);
  LODWORD(STACK[0x67C]) += LODWORD(STACK[0x51C]);
  v17 = v14 - ((2 * v9 + 648300812) & 0x62B59E7E);
  v18 = (v11 - ((2 * (v11 + 308334852)) & 0x8F2F5622) - 638026731) ^ a2 ^ v8;
  v19 = a8 + 811737335 + v11 + 308334852;
  v20 = v17 - 1319448769;
  LODWORD(STACK[0x6A0]) = ((((v17 - 1319448769) ^ 0x4EA530C0) + ((v17 - 1319448769) ^ 0xD7AE023B ^ v12) + 1) ^ (((a1 - 751805499) ^ 0x66F4CD04 ^ v12) - a1 + 751805499) ^ (((v18 - 1901278200 - ((2 * v18) & 0x1D599810)) ^ v13) - v18))
                        - a3;
  v21 = a1 + a3;
  v22 = (STACK[0x668] & 0x21 ^ 0x60C8C172 | STACK[0x668] & 0x21 ^ 1) ^ a6;
  LODWORD(STACK[0x694]) = v22;
  v23 = a8 - ((2 * a8 - 925199206) & 0xB80A806C) - 1066235261;
  v24 = (v23 ^ 0x5C054036) + (a7 ^ 0x2B3C8E4F) - v19;
  v25 = ((2 * ((v23 ^ 0x5C054036) + v19)) & 0xCFF7FF7E) + (((v23 ^ 0x5C054036) + v19) ^ 0xE7FBFFBF);
  v21 += 1817187242;
  v26 = a3 - ((2 * a3 + 441827958) & 0x713668DE) + 96867754;
  v27 = (a4 ^ 0xCA82AD78) - v21 + (v26 ^ 0x389B346F);
  v28 = ((2 * ((v26 ^ 0x389B346F) + v21)) & 0xEBFF2FE8) + (((v26 ^ 0x389B346F) + v21) ^ 0x75FF97F4);
  v29 = v25 + 402915393 + (a2 ^ 0x6748B063);
  LODWORD(STACK[0x670]) = (v23 ^ 0x793EF76F) + LODWORD(STACK[0x550]);
  HIDWORD(v30) = v23 ^ 0xEF76F;
  LODWORD(v30) = v23 ^ 0x79300000;
  v31 = (v25 + 402915393) ^ LODWORD(STACK[0x614]) ^ (v29 - 946361583 - ((2 * v29) & 0x8F2F5622));
  v32 = v28 + (v20 ^ 0xD6127F5C);
  v33 = v32 - 1979684852;
  v34 = STACK[0x6B0];
  v35 = (1979684852 - v32 + (LODWORD(STACK[0x554]) ^ (v32 - 1979684852))) ^ (1979684852
                                                                           - v28
                                                                           + (LODWORD(STACK[0x554]) ^ (v28 - 1979684852))) ^ (((v31 - 1901278200 - ((2 * v31) & 0x1D599810)) ^ LODWORD(STACK[0x6B0])) - v31);
  v36 = ((2 * v23) & 0xFDE02EE6 ^ 0x5C800062) + (v23 ^ 0x51BDD742);
  v37 = v27 ^ v26 ^ 0x1DA08336;
  LODWORD(STACK[0x698]) = v35 - (v26 ^ 0x1DA08336);
  v38 = ((2 * v26) & 0xFEF61DC ^ 0x7A760D0) + (v26 ^ 0xCC240486);
  v39 = v37 + v38 + v33;
  v40 = v25 + 1598916380;
  LODWORD(v30) = __ROR4__((v30 >> 20) ^ __ROR4__(v24, 20) ^ 0x1C044D73, 12);
  v41 = v29 + v36 + (v30 ^ 0xD731C044);
  v42 = (v30 ^ 0xD731C044) - v36;
  v43 = v37 - v38;
  v44 = (v43 - 2013810450) ^ (v28 - 783683865);
  v45 = (v34 & 0xB0595C6B ^ 0x80084C08 | v34 & 0xB0595C6B ^ 0x30511063) - 1806191586 + ((v42 + 2129663859) ^ v40);
  v46 = (((v45 - 1152454793) ^ (v41 - 2129663859))
       - 1901278200
       - ((2 * ((v45 - 1152454793) ^ (v41 - 2129663859))) & 0x1D599810)) ^ LODWORD(STACK[0x6C8]);
  v47 = ((2 * (v45 - v41 + 977209066)) & 0xBF997EFE) + ((v45 - v41 + 977209066) ^ 0xDFCCBF7F);
  v48 = ((2 * (v44 - v39 - 2013810450)) & 0xAFDCFC5C) + ((v44 - v39 - 2013810450) ^ 0xD7EE7E2E);
  v49 = (-2013810450 - v39 + (LODWORD(STACK[0x558]) ^ (v39 + 2013810450))) ^ ((LODWORD(STACK[0x558]) ^ v44)
                                                                            + v44
                                                                            - 2 * v44) ^ (((v46
                                                                                          - 946361583
                                                                                          - ((2 * v46) & 0x8F2F5622)) ^ LODWORD(STACK[0x6B4]))
                                                                                        - v46);
  v50 = v43 - v48 - 1252468903 - ((2 * (v43 - v48 + 1608920860)) & 0xAAE5507A);
  v51 = v36 - 1932889159;
  v41 += 1935151523;
  v52 = (v42 - v47 + 1589434098) ^ v41;
  v53 = ((v47 + 540229761 + v51 - v52) ^ 0x1EF799DB) - 519543259 + ((2 * (v47 + 540229761 + v51 - v52)) & 0x3DEF33B6);
  v54 = (v47 + 540229761) ^ v41;
  v55 = v53 + v41 + 432065845 - ((2 * (v53 + v41)) & 0x33819A6A);
  LODWORD(STACK[0x6C8]) = v49 - (v38 - 2084382146);
  v56 = v39 - ((2 * v39 - 727650224) & 0xAAE5507A) - 1077731227;
  v48 += 672235986;
  v57 = v50 ^ v56;
  v58 = v48 + v38 - 2084382146 - (v50 ^ v56) + 1898380091 - ((2 * (v48 + v38 - 2084382146 - (v50 ^ v56))) & 0xE24DF676);
  v59 = (v56 ^ 0x5572A83D ^ v48) - ((2 * (v56 ^ 0x5572A83D ^ v48)) & 0x4D0E335A) - 1501095507;
  v60 = v55 ^ ((v54 ^ v22) + 432065845 - ((2 * (v54 ^ v22)) & 0x33819A6A));
  v61 = (v58 ^ 0x7126FB3B)
      + (v56 ^ 0x5572A83D)
      - 1406599422
      - ((2 * ((v58 ^ 0x7126FB3B) + (v56 ^ 0x5572A83D))) & 0x5851FE04);
  v62 = ((v61 ^ 0x53D700FD) + (LODWORD(STACK[0x688]) ^ 0x6BBF5413 ^ v61) + 1) ^ ((v59 ^ 0x5978E652)
                                                                               + (LODWORD(STACK[0x688]) ^ 0x6110B2BC ^ v59)
                                                                               + 1) ^ (((v60
                                                                                       - 946361583
                                                                                       - ((2 * v60) & 0x8F2F5622)) ^ LODWORD(STACK[0x688]))
                                                                                     - v60);
  v63 = ((2 * v54) & 0xF6FF7DAA ^ 0x242E7102) + (v54 ^ 0xE9E8C756);
  v64 = v53 ^ 0x19C0CD35 ^ v55;
  v65 = v63 - 2112673299 + (v55 ^ 0x19C0CD35);
  v66 = ((2 * v59) & 0x9E79EDBE ^ 0x820C01C) + (v59 ^ 0xFB2C96F1);
  v67 = v58 ^ 0xDD0E0439 ^ v61;
  v68 = v66 - 1329395423 + (v61 ^ 0xAC28FF02);
  v69 = v64 - ((2 * v64 + 1388539768) & 0x716F59EC) - 501652302;
  v70 = v68 - ((2 * v68 + 455463300) & 0x1926D7F4) - 1977199428;
  v71 = (v70 & 0xBB4EEF77 ^ 0xF7FD948D)
      + (v69 ^ (v63 - ((2 * v63 + 2139728862) & 0x716F59EC) - 1199799579))
      - ((-2106779843 - v68) & 0xBB4EEF77);
  v72 = (v63 - ((2 * v63 - 1237511458) & 0xAFC7CF06) + 855798002) ^ a5 ^ v65;
  v73 = (v72 - 1831554316 - ((2 * v72) & 0x25A965E8)) ^ v15;
  v74 = v57 - 1817899640;
  v75 = v67 + v66;
  v76 = v73 - v72;
  v77 = v52 - 1817899640;
  v78 = v63 + 75510976 + v64 + 3179;
  v79 = v78 + (a5 ^ 0xD7E3E783);
  v80 = ((v70 ^ 0xF36C9405) + (v70 ^ 0x45310D2C ^ v16) + 1) ^ (((v66 + 123818341) ^ 0x49A266D6 ^ v16) - v66 - 123818341) ^ v76;
  v81 = (v69 ^ 0x38B7ACF6) + (v78 ^ v77);
  v82 = v67 - ((2 * v67 + 1388539768) & 0x7F8D0688) - 383239424;
  v83 = (v82 ^ 0x3FC68344) + ((v67 + v66 - 1329395423) ^ v74);
  v84 = ((2 * (v71 + 1)) & 0xFFDFF76E) + ((v71 + 1) ^ 0xFFEFFBB7);
  v85 = (v84 - 1151405120) ^ v81;
  v86 = (v84 - 1151405120) ^ (((2 * ((v65 ^ 0xE0F2C694) - 1856670317)) & 0x4169ED96)
                            + (((v65 ^ 0xE0F2C694) - 1856670317) ^ 0xA0B4F6CB));
  v87 = (v86 - 672929917 - ((2 * v86) & 0xAFC7CF06)) ^ LODWORD(STACK[0x668]);
  v88 = v65 ^ 0xD8456A62 ^ v69;
  v89 = v82 ^ (v66 + 738696677);
  v90 = v82 ^ 0xD3A72E2A ^ v70;
  v91 = v70 ^ 0xEC61AD6E;
  v92 = ((2 * ((v70 ^ 0xEC61AD6E) + 839543902)) & 0xFE5FA93E) + (((v70 ^ 0xEC61AD6E) + 839543902) ^ 0x7F2FD49F);
  v93 = v89 ^ 0x6B313C70 ^ (v83 - ((2 * v83) & 0xA9EF7E68) + 1425522484);
  v94 = (2133841055 - v92 + (LODWORD(STACK[0x55C]) ^ (v92 - 2133841055))) ^ ((v89 ^ 0xC0397CBB)
                                                                           + (LODWORD(STACK[0x658]) ^ 0xAD1231B0 ^ v89)
                                                                           + 1) ^ (((v87
                                                                                   - 1831554316
                                                                                   - ((2 * v87) & 0x25A965E8)) ^ LODWORD(STACK[0x658]))
                                                                                 - v87);
  v89 ^= 0x3FC68344u;
  v95 = v94 - v90;
  v96 = v90 + v89;
  v97 = ((2 * (v89 - 1432952250)) & 0xD785FEF6) + ((v89 - 1432952250) ^ 0x6BC2FF7B);
  v98 = v88 + LODWORD(STACK[0x564]);
  v99 = v88 - 523919925 + v84;
  v100 = LODWORD(STACK[0x568]) ^ (v84 + 1710609926) ^ (v99 + (v65 ^ 0xE0F2C694) - 736378615);
  v101 = v93 - (v92 + v97);
  v96 += 627485195;
  v102 = v96 + v91;
  v103 = (1807941499 - v97 + (LODWORD(STACK[0x560]) ^ (v97 - 1807941499))) ^ ((LODWORD(STACK[0x560]) ^ (v102 - 736378615))
                                                                            - v102
                                                                            + 736378615) ^ (((v100
                                                                                            - 1831554316
                                                                                            - ((2 * v100) & 0x25A965E8)) ^ LODWORD(STACK[0x660]))
                                                                                          - v100);
  v104 = v102 + 1750647182 + v97;
  v105 = (v65 ^ 0x1F0D396B) - v84 + 1744813469 + v85 + v99 + LODWORD(STACK[0x568]);
  v101 -= 353184742;
  v106 = v101 + v96;
  v107 = v103 - v106;
  v108 = v102 + 1515750521;
  v109 = v106 ^ (v102 + 1515750521);
  v110 = v101 - v109;
  v111 = v110 ^ v104;
  LODWORD(STACK[0x6D8]) = v110 + v102 + 1515750521 + 224302801 - ((2 * (v110 + v102 + 1515750521)) & 0x1ABD2DA2);
  v112 = LODWORD(STACK[0x534]) + (v58 ^ 0x8ED904C4) + v62;
  v113 = LODWORD(STACK[0x504]) + 811737335 + a8 + (v10 ^ 0x49A26690);
  v114 = v113 - 717629396 - ((2 * v113) & 0xAA73B058);
  v115 = LODWORD(STACK[0x520])
       - v75
       - 424846853
       + v80
       - ((2 * (LODWORD(STACK[0x520]) - v75 - 424846853 + v80) + 136430940) & 0x9010F8C);
  LODWORD(STACK[0x524]) = LODWORD(STACK[0x6D0]) + v51;
  v116 = (v79 + 708764304 - ((2 * v79) & 0x547DC520)) ^ LODWORD(STACK[0x528]);
  v117 = LODWORD(STACK[0x6A0]) + 1725974555;
  LODWORD(STACK[0x528]) = v116
                        + 2 * (v79 & STACK[0x4EC])
                        + 708764304
                        - 2 * ((v116 + 2 * (v79 & STACK[0x4EC])) & 0x2A3EE291 ^ v116 & 1);
  v118 = v95 ^ 0xB9E2DB3B;
  v119 = (2 * v95) & 0x73C5B676;
  LODWORD(STACK[0x534]) = v112 + 1;
  v120 = v115 - 929994124;
  LODWORD(STACK[0x52C]) = LODWORD(STACK[0x52C]) - 1929143223 + LODWORD(STACK[0x680]);
  v121 = v107 + LODWORD(STACK[0x4E0]) + 1127675144 - ((2 * (v107 + LODWORD(STACK[0x4E0]))) & 0x866DEA10);
  v122 = LODWORD(STACK[0x698])
       + LODWORD(STACK[0x4F8])
       + 257597868
       - ((2 * (LODWORD(STACK[0x698]) + LODWORD(STACK[0x4F8]))) & 0x1EB54358);
  LODWORD(STACK[0x6D0]) = v109 ^ 0x3AEEC605;
  v123 = LODWORD(STACK[0x694])
       + LODWORD(STACK[0x4F0])
       + v53
       + 439558143
       - ((2 * (LODWORD(STACK[0x694]) + LODWORD(STACK[0x4F0]) + v53)) & 0x34663FFE);
  v124 = LODWORD(STACK[0x4E8])
       + v118
       + v119
       + 651686511
       - ((2 * (LODWORD(STACK[0x4E8]) + v118 + v119 + 1176315077)) & 0xC1759B54);
  if (LODWORD(STACK[0x3A0]) == 52)
  {
    v126 = v111 + v108 - 2 * v111 - 983073743 - ((2 * (v111 + v108 - 2 * v111)) & 0x8ACEF862);
    v127 = STACK[0x300] & 0x965845FB;
    LODWORD(STACK[0x320]) = LODWORD(STACK[0x518])
                          - 1047808314
                          + v117
                          - ((2 * (LODWORD(STACK[0x518]) - 1047808314 + v117)) & 0xB847E358)
                          + (v127 ^ 0xDC23F517);
    LODWORD(STACK[0x318]) = LODWORD(STACK[0x670])
                          + LODWORD(STACK[0x39C])
                          + 2067874945
                          - ((2 * (LODWORD(STACK[0x670]) + LODWORD(STACK[0x39C]))) & 0xF6828902);
    LODWORD(STACK[0x358]) = v105
                          + LODWORD(STACK[0x394])
                          + 1910881815
                          - ((2 * (v105 + LODWORD(STACK[0x394]))) & 0xE3CB7C2E);
    v128 = LODWORD(STACK[0x388])
         + 1810781665
         + v98
         + 1288197500
         - ((2 * (LODWORD(STACK[0x388]) + 1810781665 + v98)) & 0x9990AAF8);
    LODWORD(STACK[0x324]) = LODWORD(STACK[0x6C8])
                          + LODWORD(STACK[0x398])
                          - 195075461
                          - ((2 * (LODWORD(STACK[0x6C8]) + LODWORD(STACK[0x398]))) & 0xE8BEC4F6);
    v129 = LODWORD(STACK[0x534]) - ((2 * LODWORD(STACK[0x534]) + 1306278774) & 0xFCCB980E);
    LODWORD(STACK[0x348]) = v128;
    v130 = (v128 & 0x3B482A80 ^ 0x33002A80 | v128 & 0x3B482A80 ^ 0x8480000) + LODWORD(STACK[0x67C]) + 514785157;
    v131 = v130 - 2 * (v130 & 0x62A4BC47 ^ (LOBYTE(STACK[0x67C]) - 123) & 4);
    v132 = STACK[0x6C0];
    LODWORD(STACK[0x338]) = v129 + 626256322;
    LODWORD(STACK[0x364]) = v131 - 492520381;
    LODWORD(STACK[0x310]) = v122;
    LODWORD(STACK[0x33C]) = v123;
    LODWORD(STACK[0x35C]) = v121;
    LODWORD(STACK[0x330]) = STACK[0x528];
    LODWORD(STACK[0x304]) = v114;
    LODWORD(STACK[0x340]) = v124;
    LODWORD(STACK[0x334]) = v120;
    LODWORD(STACK[0x360]) = STACK[0x52C];
    LODWORD(STACK[0x52C]) = STACK[0x374];
    LODWORD(STACK[0x31C]) = STACK[0x524];
  }
  else
  {
    if (LODWORD(STACK[0x3A0]) != 86)
      return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0]
                                            + 8
                                            * ((LODWORD(STACK[0x390]) + 1282) ^ (21
                                                                               * ((LODWORD(STACK[0x3AC])
                                                                                               - 1434761972) < 0x81))))
                                - 9 * ((LODWORD(STACK[0x390]) - 266) & 0xFFFFFCF7)
                                + 1149))();
    v126 = v111 + v108 - 2 * v111 - 983073743 - ((2 * (v111 + v108 - 2 * v111)) & 0x8ACEF862);
    v133 = LODWORD(STACK[0x518])
         - 1047808314
         + v117
         - 601625359
         - ((2 * (LODWORD(STACK[0x518]) - 1047808314 + v117)) & 0xB847E358);
    LODWORD(STACK[0x314]) = LODWORD(STACK[0x670])
                          + LODWORD(STACK[0x39C])
                          + 2067874945
                          - ((2 * (LODWORD(STACK[0x670]) + LODWORD(STACK[0x39C]))) & 0xF6828902);
    LODWORD(STACK[0x368]) = v105
                          + LODWORD(STACK[0x394])
                          + 1910881815
                          - ((2 * (v105 + LODWORD(STACK[0x394]))) & 0xE3CB7C2E);
    LODWORD(STACK[0x350]) = LODWORD(STACK[0x388])
                          + 1810781665
                          + v98
                          + 1288197500
                          - ((2 * (LODWORD(STACK[0x388]) + 1810781665 + v98)) & 0x9990AAF8);
    LODWORD(STACK[0x32C]) = LODWORD(STACK[0x6C8])
                          + LODWORD(STACK[0x398])
                          - 195075461
                          - ((2 * (LODWORD(STACK[0x6C8]) + LODWORD(STACK[0x398]))) & 0xE8BEC4F6);
    v134 = LODWORD(STACK[0x67C]) - ((2 * LODWORD(STACK[0x67C]) - 1276226550) & 0x8A55FA0A);
    v135 = LODWORD(STACK[0x534]) - ((2 * LODWORD(STACK[0x534]) + 98319222) & 0x5E126C8);
    v127 = STACK[0x2FC] & 0xDAE5ACBB;
    LODWORD(STACK[0x30C]) = v133 + v127;
    LODWORD(STACK[0x36C]) = v134 - 1625151734;
    LODWORD(STACK[0x370]) = v135 + 702460191;
    LODWORD(STACK[0x308]) = v114;
    LODWORD(STACK[0x34C]) = STACK[0x528];
    LODWORD(STACK[0x344]) = v124;
    LODWORD(STACK[0x328]) = v120;
    v132 = STACK[0x6C0];
  }
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v132
                                                      + 8
                                                      * (int)((119
                                                             * ((LODWORD(STACK[0x38C]) ^ (v127 - 36)) & 1)) ^ v127))
                                          - ((v127 + 1413643040) & 0xABBD87FC ^ 0x7D0)))(v126);
}

void sub_209AFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;

  v8 = ((a4 - 629654939 + 7 * (v4 ^ 0x729)) & 0xBE79D9C8) - ((629653251 - a4) & 0x41862637);
  LODWORD(STACK[0x384]) = ((2 * v8) & 0xFFBBCA76) + (v8 ^ 0x7FDDE53B) - 416284672;
  LODWORD(STACK[0x3A0]) = 86;
  LODWORD(STACK[0x38C]) = 1;
  LODWORD(STACK[0x380]) = v7;
  LODWORD(STACK[0x37C]) = v5;
  LODWORD(STACK[0x378]) = v6;
  LODWORD(STACK[0x374]) = STACK[0x52C];
  JUMPOUT(0x1F8894);
}

uint64_t sub_209C18@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;

  v31 = a2 & 0x5F899BFB;
  STACK[0x808] = 0xA095E15CB3FB94FELL;
  v32 = LODWORD(STACK[0x304]) ^ 0x8E00FA5C;
  v33 = LODWORD(STACK[0x308]) ^ 0x2044081C;
  v34 = LODWORD(STACK[0x30C]) ^ 0x7D66781A;
  STACK[0x800] = 0xED1701ED17397B41;
  STACK[0x7F8] = 0xC76AB0337C826D5BLL;
  v35 = LODWORD(STACK[0x320]) ^ 0xF13AF817;
  v36 = LODWORD(STACK[0x314]) ^ 0xDA04CD37;
  v37 = LODWORD(STACK[0x318]) ^ 0x56584D3A;
  v38 = STACK[0x324];
  v39 = STACK[0x324] & 0x883DD861 ^ 0x399021;
  v40 = (v34 + 1663319554) * ((STACK[0x320] & 0x883DD861 ^ 0x1C0841) + (STACK[0x320] & 0x883DD861 ^ 0x8821D020));
  v41 = -2009212831 * (LODWORD(STACK[0x310]) ^ 0x546383DC) - 75026750;
  LODWORD(STACK[0x708]) = -2009212831 * v32 - 75026750;
  LODWORD(STACK[0x70C]) = v41;
  LODWORD(STACK[0x748]) = -2009212831 * (v33 ^ ((v31 ^ 0x72D) - 819)) - 75026750;
  LODWORD(STACK[0x74C]) = -2009212831 * (v30 ^ 0xFA277017) - 75026750;
  LODWORD(STACK[0x6E8]) = -2009212831 * v35 - 75026750;
  LODWORD(STACK[0x6EC]) = -2009212831 * v37 - 75026750;
  v42 = (v39 | (v38 ^ 0xD9466BC0) & 0x883DD861) * ((v38 ^ 0xD9466BC0) + 1663319554);
  v43 = LODWORD(STACK[0x32C]) ^ 0x551AEBCD;
  v44 = v42 - ((2 * v42) & 0x6F861B0C) + 935529862;
  v45 = (v44 & 0x5B392270 ^ 0x13010000 | v44 & 0x5B392270 ^ 0x48382270) ^ (LODWORD(STACK[0x31C]) - 1728963899);
  LODWORD(STACK[0x728]) = v40;
  LODWORD(STACK[0x72C]) = -2009212831 * v36 - 75026750;
  v46 = LODWORD(STACK[0x33C]) ^ 0x410A3D8F;
  v47 = LODWORD(STACK[0x330]) ^ 0x7107C0E0;
  v48 = LODWORD(STACK[0x328]) ^ 0xA5C50E70;
  v49 = -2009212831 * (LODWORD(STACK[0x338]) ^ 0xD37CC5BC) - 75026750;
  LODWORD(STACK[0x6F0]) = v44 ^ 0x37C30D86;
  LODWORD(STACK[0x6F4]) = v49;
  LODWORD(STACK[0x710]) = -2009212831 * v45 - 75026750;
  LODWORD(STACK[0x714]) = -2009212831 * v46 - 75026750;
  v50 = LODWORD(STACK[0x334]) ^ 0x29998E7D;
  v51 = LODWORD(STACK[0x344]) ^ 0x15C71C11;
  LODWORD(STACK[0x754]) = -2009212831 * (v29 ^ 0xEF4ECE44) - 75026750;
  LODWORD(STACK[0x750]) = -2009212831 * ((a1 - 1728963899) ^ 0xF57DD1BB) - 75026750;
  v52 = LODWORD(STACK[0x348]) ^ 0x61D15CC7;
  v53 = STACK[0x370];
  LODWORD(STACK[0x734]) = -2009212831 * (LODWORD(STACK[0x370]) ^ 0xA3B51AD2) - 75026750;
  LODWORD(STACK[0x730]) = -2009212831 * v43 - 75026750;
  v54 = LODWORD(STACK[0x340]) ^ 0xBB83EFDA;
  v55 = LODWORD(STACK[0x358]) ^ 0x5CFCB7AC;
  v56 = *(_QWORD *)(a28 + 40);
  LODWORD(STACK[0x6FC]) = -2009212831 * v52 - 75026750;
  LODWORD(STACK[0x6F8]) = -2009212831 * v50 - 75026750;
  v57 = -2009212831 * (LODWORD(STACK[0x34C]) ^ 0xDF43332B) - 75026750;
  v58 = -2009212831 * (LODWORD(STACK[0x350]) ^ 0xED8DDCCA) - 75026750;
  LODWORD(STACK[0x738]) = -2009212831 * v48 - 75026750;
  LODWORD(STACK[0x73C]) = v58;
  STACK[0x7F0] = 0xA41D84DC6A0C0394;
  STACK[0x7E8] = 0x75EBBB32EB3EBEDDLL;
  LODWORD(STACK[0x718]) = -2009212831 * v47 - 75026750;
  LODWORD(STACK[0x71C]) = -2009212831 * v54 - 75026750;
  v59 = -2009212831 * v55;
  v60 = -2009212831 * v55 - 75026750;
  v61 = -2009212831 * (LODWORD(STACK[0x35C]) ^ 0x180FD778) - 75026750;
  v62 = LODWORD(STACK[0x368]) ^ 0xD0A037A1;
  v63 = LODWORD(STACK[0x364]) ^ 0xCFBDB5F8;
  LODWORD(STACK[0x758]) = v57;
  LODWORD(STACK[0x75C]) = -2009212831 * v51 - 75026750;
  v64 = -2009212831 * ((LODWORD(STACK[0x360]) - 1929143223) ^ 0x5B392270) - 75026750;
  LODWORD(STACK[0x720]) = v61;
  LODWORD(STACK[0x724]) = v64;
  v65 = -2009212831 * (LODWORD(STACK[0x36C]) ^ 0xE46F74B3) - 75026750;
  LODWORD(STACK[0x740]) = -2009212831 * v62 - 75026750;
  LODWORD(STACK[0x744]) = v65;
  LODWORD(STACK[0x7BC]) = -2015130205;
  LODWORD(STACK[0x7C0]) = -195043156;
  v66 = -2009212831 * v63 - 75026750;
  LODWORD(STACK[0x7AC]) = 1186736741;
  LODWORD(STACK[0x7B0]) = -1721533476;
  v67 = STACK[0x52C];
  LODWORD(STACK[0x770]) = -979297607;
  LODWORD(STACK[0x77C]) = -860825652;
  LODWORD(STACK[0x700]) = v60;
  LODWORD(STACK[0x704]) = v66;
  STACK[0x768] = 0x9252130A5DAD3C1BLL;
  LODWORD(STACK[0x760]) = -2009212831 * (v28 ^ 0xB64B24B3) - 75026750;
  LODWORD(STACK[0x764]) = -2009212831
                        * (((2 * v67 + 436680850) & 0xC6487C04 ^ 0xC2482004) + ((v67 - 1929143223) ^ 0x9659EFB9));
  LODWORD(STACK[0x7B4]) = (v53 & 0xAB81EB98 ^ 0xA3810A90) + ((v53 ^ 0x5C4AE52D) & 0xAB81EB98);
  LODWORD(STACK[0x7B8]) = 137270289;
  STACK[0x774] = 0xDF813F2468DCC8FFLL;
  LODWORD(STACK[0x7A8]) = 1722071606;
  LODWORD(STACK[0x780]) = (v53 ^ 0x21910A80 | v53 ^ 0x5C4AE52D) & 0x6DD30F89;
  *((_DWORD *)&STACK[0x6E8] + ((v60 ^ (61 - v59)) & 0x64 ^ 0x43u)) = -625775389;
  STACK[0x788] = 0xF5E92B098515022ALL;
  STACK[0x790] = 0x67965045607FE52ELL;
  STACK[0x7D4] = 0x1C67CD625361AD6ALL;
  STACK[0x7CC] = 0x5A7E41037F5795AELL;
  LODWORD(STACK[0x7E4]) = 879427265;
  STACK[0x7DC] = 0x482B0D70887343F8;
  LODWORD(STACK[0x7A4]) = 376509910;
  LODWORD(STACK[0x798]) = -317382065;
  STACK[0x79C] = 0x94BC1945619BE0DFLL;
  STACK[0x7C4] = 0x863E4107CCA6F88CLL;
  STACK[0x6E0] -= 2064;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0]
                                        + 8
                                        * ((1379 * (*(_QWORD *)(v56 - 0x74C05FF805FC435ALL) != 0)) ^ v31))
                            - 4))();
}

uint64_t sub_20A26C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  int v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned __int8 v41;
  unint64_t v42;
  unsigned int v43;

  v27 = a1 + 366;
  v28 = *(_DWORD *)(v25 + 8) + STACK[0x2F0] + (v27 ^ 0xBD863FA2);
  LODWORD(STACK[0x5A4]) = 1848834774;
  LODWORD(STACK[0x5A8]) = -841217491;
  v29 = v28;
  v30 = *(unsigned __int8 **)(v26 + 24);
  v31 = 1554976193 * (((1554976193 * (_DWORD)v30) >> ((v27 + 83) ^ 0x6F)) ^ (1554976193 * (_DWORD)v30));
  v32 = (char *)*(&off_38F180 + v27 - 1495) - 12;
  v33 = (uint64_t)*(&off_38F180 + v27 - 1414);
  v34 = (char *)*(&off_38F180 + (v27 ^ 0x678)) - 12;
  v35 = v32[v31 >> 24] ^ *v30 ^ *(unsigned __int8 *)(v33 + (v31 >> 24)) ^ v34[v31 >> 24] ^ v31 ^ (-51 * ((1554976193 * (((1554976193 * (_DWORD)v30) >> ((v27 + 83) ^ 0x6F)) ^ (1554976193 * (_DWORD)v30))) >> 24));
  v36 = 1554976193 * (((1554976193 * ((_DWORD)v30 + 1)) >> (v27 - 28)) ^ (1554976193 * ((_DWORD)v30 + 1)));
  v37 = 1554976193 * ((1554976193 * ((_DWORD)v30 + 2)) ^ ((1554976193 * ((_DWORD)v30 + 2)) >> 16));
  v38 = v32[v37 >> 24];
  v39 = -51
      * ((1554976193 * ((1554976193 * ((_DWORD)v30 + 2)) ^ ((1554976193 * ((_DWORD)v30 + 2)) >> 16))) >> 24);
  v40 = (v35 << 24) | (((-63
                                        * (((1554976193 * ((_DWORD)v30 + 1)) >> (v27 - 28)) ^ (-63 * ((_BYTE)v30 + 1)))) ^ v30[1] ^ v32[v36 >> 24] ^ *(_BYTE *)(v33 + (v36 >> 24)) ^ (-51 * ((1554976193 * (((1554976193 * ((_DWORD)v30 + 1)) >> (v27 - 28)) ^ (1554976193 * ((_DWORD)v30 + 1)))) >> 24)) ^ v34[v36 >> 24]) << 16) | (((-51 * ((1554976193 * ((1554976193 * ((_DWORD)v30 + 2)) ^ ((1554976193 * ((_DWORD)v30 + 2)) >> 16))) >> 24)) ^ (-63 * ((-63 * ((_BYTE)v30 + 2)) ^ ((1554976193 * ((_DWORD)v30 + 2)) >> 16))) ^ v30[2] ^ v38 ^ *(_BYTE *)(v33 + (v37 >> 24)) ^ v34[v37 >> 24]) << 8);
  v41 = v30[3];
  v42 = 1554976193 * ((1554976193 * ((_DWORD)v30 + 3)) ^ ((1554976193 * ((_DWORD)v30 + 3)) >> 16));
  v43 = v40 & 0xFFFFFF00 | ((-51 * BYTE3(v42)) ^ v42 ^ v41 ^ v32[v42 >> 24] ^ *(_BYTE *)(v33 + (v42 >> 24)) ^ v34[v42 >> 24]);
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * ((3501 * (((v43 + 1287862447 - ((2 * v43) & 0x9986715E)) ^ 0x4CC338AF) != (_DWORD)v29)) ^ v27)) - 8))(v34, v38, v39, v29, 1903, 1656, 4061731653, 3828496010, a2, 0xFFBADE9DDBBFFDFELL, 0xCB2479C001000D9FLL, 0x859F22C241DA4265, 0x5FFFDDEFCFDE0600, 0x112467FFFD7B4, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_20A618()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(v2 + 24);
  STACK[0x6E0] += 2112;
  STACK[0x6C8] = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((238 * (v3 == 0)) ^ v0)))();
}

uint64_t sub_20A654@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t (*v7)(uint64_t);

  STACK[0x350] = v3;
  v4 = (v1 ^ 0x5E) + a1 - (((a1 << (v1 ^ 0x7E)) + 182775114) & 0xBA0B874) + 2067975102;
  v5 = ((2 * v4) & 0xCE9F3EC6 ^ 0xA803844) + (v4 ^ 0x629FC359);
  v6 = ((v1 ^ 0x5E) - 136497250) & 0x822CB5F ^ 0xE74F957C;
  LODWORD(STACK[0x59C]) = v5;
  LODWORD(STACK[0x6B4]) = v6;
  v7 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((2996 * (v5 != v6)) ^ v1 ^ 0x5E))
                                       - (((v1 ^ 0x5E) + 1600630814) & 0xA0984DEF)
                                       + 1323);
  LODWORD(STACK[0x6D8]) = 1752937139;
  return v7(610295734);
}

uint64_t sub_20A778()
{
  int v0;
  unsigned int v1;
  _BOOL4 v2;

  v1 = LODWORD(STACK[0x59C]) + 1342158620;
  v2 = v1 < v0 + 927945040;
  if (v1 >= v0 + 927945040)
    v2 = v1 > 0x374F5680;
  return (*(uint64_t (**)(void))(STACK[0x6C0] + 8 * ((474 * v2) ^ (v0 - 58))))();
}

void sub_20ABB8()
{
  JUMPOUT(0x20A7C4);
}

uint64_t sub_20ABD4()
{
  int v0;
  unsigned int v1;
  unsigned int v2;
  _BOOL4 v3;

  LODWORD(STACK[0x6D8]) = v0 - 1845594855;
  v2 = LODWORD(STACK[0x59C]) + 476676840;
  v3 = v2 < 0x3B9224B || v2 > 0x3B9224C;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8 * ((633 * !v3) ^ v1)) - 4))();
}

void sub_20B028()
{
  JUMPOUT(0x20AC24);
}

uint64_t sub_20B030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  char v7;
  int v8;

  STACK[0x6B8] = (unint64_t)&STACK[0x810] + v6;
  *((_BYTE *)&STACK[0x810] + v6 + 1609) = ((v7 + 76) | (((a6 + 127) & 0x73) - 22) ^ 0xFB) - 3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(STACK[0x6C0]
                                                              + 8 * (v8 | (a6 - 1521904257) & 0x5AB66A73u)))(a1, a2, 393228);
}

void sub_20B0C0()
{
  JUMPOUT(0x20B06CLL);
}

uint64_t sub_20B0CC(int a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  _BYTE *v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unsigned int v17;
  char v18;
  unsigned int v19;
  char v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unsigned int v28;
  char v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  char v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  v8 = STACK[0x6D8];
  v9 = LODWORD(STACK[0x6D8]) - 2092976628;
  v10 = (_BYTE *)STACK[0x6B8];
  v11 = *(_BYTE *)(STACK[0x6B8] + 1609);
  v12 = ((a1 & 0xF) * v5 + 393228 - 965
                                                * ((4450744 * (unint64_t)((a1 & 0xFu) * v5 + 393228)) >> 32));
  v10[1609] = *(_BYTE *)(v4 + v12);
  *(_BYTE *)(v4 + v12) = v11;
  v13 = v10[1306];
  v14 = (v9 % 0xF * v5 + 393890 - 965 * ((4450744 * (unint64_t)(v9 % 0xF * v5 + 393890)) >> 32));
  v10[1306] = *(_BYTE *)(v4 + v14);
  LODWORD(v12) = v3
               - 580522348
               - 14 * (((((v3 - 580522348) >> 1) * (unint64_t)v7) >> 32) >> 2);
  *(_BYTE *)(v4 + v14) = v13;
  LODWORD(v14) = v3 - ((2 * v3 + 1162712208) & 0x4C656C6A);
  v15 = (unint64_t)((((int)v12 - 1775872639 - 2 * (v12 & 1)) ^ 0x96265581) * v5 + 394552) % 0x3C5;
  v16 = v10[1968];
  v10[1968] = *(_BYTE *)(v4 + v15);
  *(_BYTE *)(v4 + v15) = v16;
  LODWORD(v14) = v14 + 1222213757;
  LODWORD(v15) = (v2 ^ 0x345203F5) - (v2 ^ 0x345203F5u) / 0xD * v6;
  v17 = ((2 * ((v2 ^ 0xCBADFC0A) + (a1 ^ 0xFA8E0120) + 1)) & 0xFF7B3788)
      + (((v2 ^ 0xCBADFC0A) + (a1 ^ 0xFA8E0120) + 1) ^ 0xFFBD9BC4);
  v18 = v10[1665];
  v10[1665] = *(_BYTE *)(v4
                       + (v15 * v5
                                      + 395214
                                      - 965 * ((4450744 * (unint64_t)(v15 * v5 + 395214)) >> 32)));
  v19 = v14 ^ v2;
  *(_BYTE *)(v4
           + (((v15 + 21) & 0x16 ^ 0x96 | (v15 + 597) & 0x216) * (v15 + 597)
                          - 965
                          * ((4450744
                            * (unint64_t)((((_DWORD)v15 + 21) & 0x16 ^ 0x96 | ((_DWORD)v15 + 597) & 0x216u)
                                               * ((_DWORD)v15 + 597))) >> 32))) = v18;
  LODWORD(v15) = (v17 + 4351036 + (v19 ^ 0x86C55FC4) + 1) % 0xC;
  v20 = v10[1362];
  v19 ^= 0x793AA03Bu;
  v21 = v19 ^ (v8 - 2088625592 + v17);
  v22 = v17 + 4351036;
  v23 = ((v22 + (v14 ^ 0xA632B635)) ^ 0xFF76FFFE) + 8978434 + ((2 * (v22 + (v14 ^ 0xA632B635))) & 0xFEEDFFFC);
  v24 = (v15 * v5 + 395876 - 965 * ((4450744 * (unint64_t)(v15 * v5 + 395876)) >> 32));
  v10[1362] = *(_BYTE *)(v4 + v24);
  *(_BYTE *)(v4 + v24) = v20;
  v25 = (v21 % 0xB * v5 + 396538 - 965 * ((4450744 * (unint64_t)(v21 % 0xB * v5 + 396538)) >> 32));
  LODWORD(v12) = v19 % 9;
  v26 = v10[2024];
  v10[2024] = *(_BYTE *)(v4 + v25);
  v27 = (v23 % 0xA * v5 + 397200 - 965 * ((4450744 * (unint64_t)(v23 % 0xA * v5 + 397200)) >> 32));
  *(_BYTE *)(v4 + v25) = v26;
  v28 = ((2 * (v23 + v21)) & 0xAEBFFFFA) + ((v23 + v21) ^ 0xD75FFFFD);
  v29 = v10[1721];
  v10[1721] = *(_BYTE *)(v4 + v27);
  *(_BYTE *)(v4 + v27) = v29;
  v30 = v19 - 681574403 - v28;
  v31 = v12 * v5 + 397862;
  v32 = v31 - 1930 * ((2225372 * (unint64_t)v31) >> 32);
  v33 = ((2 * v32) & 0xF6C) + (v32 ^ 0xFE7F8FB7);
  v34 = v17 - ((2 * v17 + 1343984468) & 0x5E8BE372) - 682378397;
  if (v33 + 25194569 >= 0x3C5)
    v35 = 1774057227;
  else
    v35 = 1774058192;
  v36 = v10[1418];
  v10[1418] = *(_BYTE *)(v4 + v33 - 1748863623 + v35);
  *(_BYTE *)(v4 + (v31 - 965 * ((4450744 * (unint64_t)v31) >> 32))) = v36;
  v37 = v10[2080];
  v38 = (v30 ^ v22) - 76990935 - ((2 * (v30 ^ v22)) & 0xF6D26C52);
  v39 = ((v34 & 7 ^ 1) * v5
                     + 398524
                     - 965 * ((4450744 * (unint64_t)((v34 & 7 ^ 1u) * v5 + 398524)) >> 32));
  v40 = ((2 * ((v38 ^ 0xFB693629) + (v23 ^ 0x55432CDB))) & 0xDACBD94E)
      + (((v38 ^ 0xFB693629) + (v23 ^ 0x55432CDB)) ^ 0x6D65ECA7);
  v10[2080] = *(_BYTE *)(v4 + v39);
  *(_BYTE *)(v4 + v39) = v37;
  LODWORD(v39) = v38 ^ 0x496C9D6;
  v41 = ((2 * (v28 + 681574404 + (v38 ^ 0x496C9D6))) & 0xFF76F6FE)
      + ((v28 + 681574404 + (v38 ^ 0x496C9D6)) ^ 0x7FBB7B7F);
  v42 = v10[1777];
  v43 = ((v41 - 2142993279) % 7 * v5
                     + 399186
                     - 965 * ((4450744 * (unint64_t)((v41 - 2142993279) % 7 * v5 + 399186)) >> 32));
  v10[1777] = *(_BYTE *)(v4 + v43);
  *(_BYTE *)(v4 + v43) = v42;
  LODWORD(v43) = (v40 - 1835396263) % 6;
  v44 = v10[1474];
  v10[1474] = *(_BYTE *)(v4
                       + (v43 * v5
                                      + 399848
                                      - 965 * ((4450744 * (unint64_t)(v43 * v5 + 399848)) >> 32)));
  LODWORD(v43) = (((v43 + 604) | (163 - v43)) & v5) * (v43 + 604);
  *(_BYTE *)(v4 + (v43 - 965 * ((4450744 * (unint64_t)v43) >> 32))) = v44;
  v45 = ((v38 ^ 0xFB693629) % 5 * v5
                     + 400510
                     - 965 * ((4450744 * (unint64_t)((v38 ^ 0xFB693629) % 5 * v5 + 400510)) >> 32));
  v46 = (v40 + 423175725) ^ v38;
  LOBYTE(v43) = v10[1171];
  v10[1171] = *(_BYTE *)(v4 + v45);
  *(_BYTE *)(v4 + v45) = v43;
  v47 = ((v34 ^ 0x2F45F1B9 ^ (v41 - 2142993279)) + (v46 ^ 0x496C9D6) + 1) ^ 0xA6BE0D8F;
  v48 = (806946219 - (v47 & 0xB801000 | 0x301905AB) + (v47 & 0x8050A | 0xCFE6FA54)) ^ v47 & 0xB881509;
  v49 = v39 + v41 - v40;
  v50 = ((((v48 & 0x8D8CCB2D ^ 0x800021) + (v48 & 0x42733452 ^ 0x40623453) - 1) ^ 0x8F04CE24) * v5 + 401172) % 0x3C5;
  LOBYTE(v41) = *(_BYTE *)(v4 + (v50 & 0x2B9 ^ 0x2B9) + (v50 & 0x2B9));
  v10[1833] = *(_BYTE *)(v4 + v50);
  *(_BYTE *)(v4 + v50) = v41;
  LOBYTE(v50) = v10[1530];
  v51 = (((((v49 - 307597015) % 3u) ^ 0xFAB7DF9F) + 2 * ((v49 - 307597015) % 3u)) * v5 - 1467360128) % 0x3C5;
  v10[1530] = *(_BYTE *)(v4 + v51);
  *(_BYTE *)(v4 + v51) = v50;
  v52 = 91;
  if ((v46 & 1) == 0)
    v52 = 753;
  v53 = v10[1227];
  v10[1227] = *(_BYTE *)(v4 + v52);
  *(_BYTE *)(v4 + v52) = v53;
  *(_BYTE *)(v4
           + ((*(unsigned __int8 *)(v4 + (887836675 * v5 + 663033930) % 0x3C5u) ^ 0xFC)
            * (((v1 - 764) | 0x304) ^ 0x192u)
            + 438603)
           % 0x3C5) = -4;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8 * v1) - 12))();
}

uint64_t sub_20B8A0(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;

  *(_BYTE *)(v4
           + v2 * v6
           + 1345773066
           - ((((v2 * v6 + 1345773066) * (unint64_t)v8) >> 32) >> 4) * v7) = v2 - (((v2 << ((v1 + 65) ^ 0x44)) + 58) & 0x78) - 103;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v2 + 1 == v3 + 3380) * v5) ^ v1)) - 12))();
}

uint64_t sub_20B8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  unint64_t v45;
  int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  char v52;
  _BYTE *v53;
  char v54;
  uint64_t v55;
  char v56;
  unsigned int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  char v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  int v75;
  unsigned int v76;
  char v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  char v82;
  uint64_t v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unsigned int v93;

  v50 = (((v44 & 0xF ^ 0x3DFBFFB6) + (v44 & 0xF ^ 0x28909086) + (v44 & 0xF ^ 0xC24C0069) + 1) ^ 0x28D890A9) * v46
      + 393228;
  v51 = v50 - (((v50 * (unint64_t)v48) >> 32) >> 4) * v47;
  v52 = *(_BYTE *)(v45 + v51);
  STACK[0x6D8] = v45;
  v53 = (_BYTE *)STACK[0x6B8];
  v54 = *(_BYTE *)(STACK[0x6B8] + 1609);
  v53[1609] = v52;
  *(_BYTE *)(STACK[0x6D8] + v51) = v54;
  LODWORD(v51) = v42
               - 267295245
               - 14 * (((((v42 - 267295245) >> 1) * (unint64_t)v49) >> 32) >> 2);
  v55 = ((v41 - 1099242528) % 0xFu * v46
                     + 393890
                     - ((4450744 * (unint64_t)((v41 - 1099242528) % 0xFu * v46 + 393890)) >> 32) * v47);
  v56 = v53[1306];
  v57 = ((2 * ((v40 ^ 0xC86EED9F) + (v44 ^ 0x9B94114F) + 1)) & 0xF7BADFF6)
      + (((v40 ^ 0xC86EED9F) + (v44 ^ 0x9B94114F) + 1) ^ 0x7BDD6FFB);
  v53[1306] = *(_BYTE *)(STACK[0x6D8] + v55);
  *(_BYTE *)(STACK[0x6D8] + v55) = v56;
  LODWORD(v51) = (2 * (v51 & 3) + (v51 ^ 0xCF6F7FD3)) * v46 - 1783531114;
  LOBYTE(v55) = v53[1968];
  v58 = v51 - (((v51 * (unint64_t)v48) >> 32) >> 4) * v47;
  v53[1968] = *(_BYTE *)(STACK[0x6D8] + v58);
  *(_BYTE *)(STACK[0x6D8] + v58) = v55;
  v59 = v42 - ((2 * v42 + 715424590) & 0x28C8CF64) - 910775975;
  LODWORD(v58) = (((2 * ((v40 ^ 0x37911260u) % 0xD)) & 0x1C) + (((v40 ^ 0x37911260u) % 0xD) ^ 0xCE7F7FFE)) * v46
               + 38866170;
  v60 = v58 - (((v58 * (unint64_t)v48) >> 32) >> 4) * v47;
  v61 = v53[1665];
  LODWORD(v55) = v57 - 2078109691;
  v62 = v57
      - 2078109691
      + (v59 ^ 0x146467B2)
      - 1778456809
      - ((2 * (v57 - 2078109691 + (v59 ^ 0x146467B2))) & 0x2BFDCE2E);
  v63 = v59 ^ v40;
  v64 = v57 + v41;
  v65 = ((2 * v63) & 0xF77FD99C ^ 0x915EC010) + (v63 ^ 0xB3108CE7);
  v53[1665] = *(_BYTE *)(STACK[0x6D8] + v60);
  *(_BYTE *)(STACK[0x6D8] + v60) = v61;
  LODWORD(v60) = 662
               * (((v57 - v65 - 1934125) % 0xC - 429804141 - 2 * (((v57 - v65 - 1934125) % 0xC) & 3)) ^ 0xE661B593)
               + 395876;
  v66 = v60 - (((v60 * (unint64_t)v48) >> 32) >> 4) * v47;
  v67 = v53[1362];
  v53[1362] = *(_BYTE *)(STACK[0x6D8] + v66);
  v68 = v63 ^ 0xEB5A15FB ^ (v64 - ((2 * v64 + 87746506) & 0x47EAEBA4) + 1720904119);
  *(_BYTE *)(STACK[0x6D8] + v66) = v67;
  v69 = (662 * (v68 % 0xB)
                     + 396538
                     - ((4450744 * (unint64_t)(662 * (v68 % 0xB) + 396538)) >> 32) * v47);
  v70 = v53[2024];
  v53[2024] = *(_BYTE *)(STACK[0x6D8] + v69);
  *(_BYTE *)(STACK[0x6D8] + v69) = v70;
  v71 = (662 * ((v62 ^ 0x95FEE717) % 0xA)
                     + 397200
                     - ((4450744 * (unint64_t)(662 * ((v62 ^ 0x95FEE717) % 0xA) + 397200)) >> 32) * v47);
  v72 = v53[1721];
  v73 = ((2 * (v68 + (v62 ^ 0x95FEE717))) & 0x6F7FA1EA) + ((v68 + (v62 ^ 0x95FEE717)) ^ 0xB7BFD0F5);
  v53[1721] = *(_BYTE *)(STACK[0x6D8] + v71);
  *(_BYTE *)(STACK[0x6D8] + v71) = v72;
  LOBYTE(v68) = v57 - ((2 * v57 - 26) & 0x64) - 91;
  LODWORD(v71) = 662 * (((v65 - 2076175566) % 9 - 327383551 - 2 * (((v65 - 2076175566) % 9) & 1)) ^ 0xEC7C8601) + 397862;
  LOBYTE(v57) = v53[1418];
  v74 = v71 - (((v71 * (unint64_t)v48) >> 32) >> 4) * v47;
  v53[1418] = *(_BYTE *)(STACK[0x6D8] + v74);
  v75 = ((v65 - v73 + 1006625831) ^ v55) - 291591730 - ((2 * ((v65 - v73 + 1006625831) ^ v55)) & 0xDD3D539C);
  *(_BYTE *)(STACK[0x6D8] + v74) = v57;
  LODWORD(v74) = ((2 * (v68 & 7)) ^ 4) + (v68 & 7 ^ 0x6FFDADFD);
  v76 = (v74 - 1878895194) * (v74 - 1878895194) - 109561 + (1878895525 - v74) * (v74 - 1878895525);
  LOBYTE(v64) = *(_BYTE *)(STACK[0x6D8] + v76 - (((v76 * (unint64_t)v48) >> 32) >> 4) * v47);
  v77 = v53[2080];
  v78 = v75 ^ 0x11615631;
  LODWORD(v55) = ((2 * (v73 + 1212165900 + (v75 ^ 0x11615631))) & 0x6455DDF6)
               + ((v73 + 1212165900 + (v75 ^ 0x11615631)) ^ 0xB22AEEFB);
  v53[2080] = v64;
  v79 = ((int)v55 + 1305809157) % 7u + 1862619588 - ((2 * (((int)v55 + 1305809157) % 7u)) & 0xA) + 9;
  *(_BYTE *)(STACK[0x6D8]
           + 662 * (_DWORD)v74
           + 1711678290
           - ((((662 * v74 + 1711678290) * (unint64_t)v48) >> 32) >> 4) * v47) = v77;
  LODWORD(v74) = ((2 * ((v75 ^ 0xEE9EA9CE) + (v62 ^ 0xC0BDCBCC))) & 0xEFDFD71E)
               + (((v75 ^ 0xEE9EA9CE) + (v62 ^ 0xC0BDCBCC)) ^ 0x77EFEB8F);
  v80 = v62 & 0x252 ^ 0x12 | v62 & 0x252 ^ 0x240;
  v81 = (~(2 * v79) & 2) + (v79 ^ 0x6F0551C4);
  v82 = v53[1777];
  v53[1777] = *(_BYTE *)(STACK[0x6D8]
                       + 662 * v81
                       + 393228
                       - ((((662 * v81 + 393228) * (unint64_t)v48) >> 32) >> 4) * v47);
  *(_BYTE *)(STACK[0x6D8]
           + 662 * (v81 + v80)
           - ((((662 * (v81 + v80)) * (unint64_t)v48) >> 32) >> 4) * v47) = v82;
  LOBYTE(v81) = v53[1474];
  v83 = (662 * (((int)v74 - 2012212111) % 6u)
                     + 399848
                     - ((4450744 * (unint64_t)(662 * (((int)v74 - 2012212111) % 6u) + 399848)) >> 32) * v47);
  v53[1474] = *(_BYTE *)(STACK[0x6D8] + v83);
  *(_BYTE *)(STACK[0x6D8] + v83) = v81;
  v84 = (v75 ^ 0xEE9EA9CE) % 5;
  v85 = 662 * v84;
  v86 = ((662 * v84) ^ 0xFEEF583B) + ((1324 * v84) & 0x3074);
  LOBYTE(v83) = v53[1171];
  v53[1171] = *(_BYTE *)(STACK[0x6D8]
                       + (v85
                                      + 400510
                                      - ((4450744 * (unint64_t)(v85 + 400510)) >> 32) * v47));
  *(_BYTE *)(STACK[0x6D8] + (v86 + 18269251)
                          % ((((v86 + 443459) & a40) + ((-18269253 - v86) & 0xDD78DF12)) ^ 0xDD7CDCD7)) = v83;
  LOBYTE(v75) = (v74 + 69) ^ v75;
  v87 = 662 * ((((v68 ^ (v55 + 1)) ^ 2) + (v75 ^ 1) + 1) & 3) + 401172;
  v88 = (v87 - ((4450744 * (unint64_t)v87) >> 32) * v47);
  v89 = v78 - 976946444 + v55;
  LOBYTE(v78) = v53[1833];
  LODWORD(v74) = v89 - v74 + 417;
  v53[1833] = *(_BYTE *)(STACK[0x6D8] + v88);
  *(_BYTE *)(STACK[0x6D8] + v88) = v78;
  LOBYTE(v89) = v53[1530];
  LODWORD(v88) = 662 * ((v88 & 0xD) + v74 % 3 + (v88 & 0xD ^ 0xD)) + 393228;
  v90 = (v88 - ((4450744 * (unint64_t)v88) >> 32) * v47);
  v53[1530] = *(_BYTE *)(STACK[0x6D8] + v90);
  *(_BYTE *)(STACK[0x6D8] + v90) = v89;
  LODWORD(v90) = 662 * (((v75 & 1 ^ 0xFD6BBA9D) + 238658376) ^ 0xBA55DE5) + 402496;
  LOBYTE(v75) = v53[1227];
  v91 = v90 - (((v90 * (unint64_t)v48) >> 32) >> 4) * v47;
  v53[1227] = *(_BYTE *)(STACK[0x6D8] + v91);
  v92 = STACK[0x6D8];
  *(_BYTE *)(STACK[0x6D8] + v91) = v75;
  v93 = 673
      * (*(unsigned __int8 *)(v92 + 493) ^ 0x5F ^ (((16
                                                                    * *(_BYTE *)(v92
                                                                               + (662 * ((v43 - 1350) & 0x407E600u)
                                                                                + 439568)
                                                                               % 0x3C5)) ^ 0x3F)
                                                 - 3) & 0xFC)
      + 359382;
  LODWORD(v74) = *((unsigned __int8 *)*(&off_38F180 + v43 - 1555)
                 + (v93 - 1184 * ((3627507 * (unint64_t)v93) >> 32))
                 - 12);
  *(_BYTE *)(v92 + 918) = *(_BYTE *)(v92
                                   + (662 * (v74 ^ 0xBC)
                                                  + 393228
                                                  - 965
                                                  * ((4450744
                                                    * (unint64_t)(662 * (v74 ^ 0xBC) + 393228)) >> 32)));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * v43) - 4))(2435, 538400, 116080198);
}

uint64_t sub_20C28C@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;

  v13 = (((v3 - 1110031748) >> 3) & 0x1FBCFFCE) + (((v3 - 1110031748) >> 4) ^ 0xFFDE7FE7);
  v14 = (((_BYTE)v3 + 12) & 0xF) * v5 + 439568;
  v15 = (((((v2 ^ 0xB6) + v13 - 43) + 664) & 0x296)
       + ((78 - v13) & 0x96)
       + (((v13 - 79) & 0xDF) + ((78 - v13) & 0xDF) + 33))
      * (((v2 ^ 0xB6) + v13 - 43) + 664);
  LOBYTE(v15) = *(_BYTE *)(v6 + (v15 - ((4450744 * (unint64_t)v15) >> 32) * v11));
  v16 = v9
      + 673
      * (*(unsigned __int8 *)(v6 + (v14 - ((v14 * (unint64_t)v10) >> 32) * v11)) ^ 0xB3 ^ (((32 * v15) ^ 0x7F) + ((16 * v15) ^ 0xC3) - 6) & 0xFC);
  v17 = v7
      + 662 * ((*(unsigned __int8 *)(a1 + (v16 - ((v16 * (unint64_t)a2) >> 32) * v8)) >> 4) ^ 0xB);
  LOBYTE(v17) = (16 * *(_BYTE *)(v6 + (v17 - ((4450744 * (unint64_t)v17) >> 32) * v11))) ^ 0xC0;
  *(_BYTE *)(v6
           + 662 * v3
           - 401609560
           - ((((662 * v3 - 401609560) * (unint64_t)v12) >> 32) >> 4) * v11) = v17 + ~(2 * v17) - 3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((491 * (v3 == 1110032003)) ^ v2)) - 12))();
}

uint64_t sub_20C408@<X0>(uint64_t a1@<X3>, unsigned int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;

  v13 = (((2
         * (((((v2 - 1110) ^ 0xA11A84F1) + v3) >> 4)
          - (((((v2 - 1110) ^ 0xA11A84F1) + v3) >> 3) & 0x132B3D1C)
          + 1234542222)) & 0x130 ^ 0x110)
       + ((((((v2 - 1110) ^ 0xA11A84F1) + v3) >> 4)
                          - (((((v2 - 1110) ^ 0xA11A84F1) + v3) >> 3) & 0x1C)
                          - 114) ^ 0x216))
      * v6;
  LOBYTE(v13) = *(_BYTE *)(v7 + (v13 - ((v13 * (unint64_t)v10) >> 32) * v11));
  v14 = (*(unsigned __int8 *)(v7
                            + ((((_BYTE)v3 - 1) & 0xF) * v6
                                           + 439568
                                           - ((((((_BYTE)v3 - 1) & 0xFu) * v6 + 439568) * (unint64_t)v10) >> 32)
                                           * v11)) ^ (((16 * v13) ^ 0xC0)
                                                    + ((32 * v13) ^ 0x7F)
                                                    - 3) & 0xFC ^ 2)
      * v4
      + 174980;
  LOBYTE(v14) = *(_BYTE *)(a1 + (v14 - ((v14 * (unint64_t)a2) >> 32) * v9));
  v15 = v8 + ((((8 * v14) ^ 0x10) + 16) ^ ((v14 ^ 0xAD) - 32)) * v6;
  *(_BYTE *)(v7
           + v3 * v6
           - 1701172858
           - ((((v3 * v6 - 1701172858) * (unint64_t)v12) >> 32) >> 4) * v11) = *(_BYTE *)(v7 + (v15 - ((v15 * (unint64_t)v10) >> 32) * v11));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((22 * (v3 == 1592097504)) ^ v2)) - 8))();
}

uint64_t sub_20C560@<X0>(uint64_t a1@<X3>, int a2@<W7>, unsigned int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;

  v14 = *(unsigned __int8 *)(v10
                           + v4 * v8
                           + a2
                           - ((((v4 * v8 + a2) * (unint64_t)v13) >> 32) >> 4) * v12);
  *(_BYTE *)(v10
           + v4 * v8
           + 1380612054
           - ((((v4 * v8 + 1380612054) * (unint64_t)v13) >> 32) >> 4) * v12) = v14 ^ 0x92 ^ *(_BYTE *)(a1 + (v9 + (v7 & ~v14) * v5 - (((v9 + (v7 & ~v14) * v5) * (unint64_t)a3) >> 32) * v11));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((504 * (v4 != -326478116)) ^ v3)) - 4))();
}

uint64_t sub_20C5F4(int a1, int a2, unsigned int a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  int v15;
  char v16;
  unsigned int v17;

  v16 = *(_BYTE *)(a4
                 + (a2
                                + (v6 ^ v15) * ((v5 ^ 0xBFF) - 1648)
                                - ((((a2 + (v6 ^ v15) * ((v5 ^ 0xBFFu) - 1648)) >> 5) * (unint64_t)a3) >> 32)
                                * v11));
  v17 = v10 + ((v16 ^ (((16 * v16) ^ (8 * v16) ^ 0x40) - ((16 * v16) & 0x10) - 115)) ^ 0xF0) * v8;
  *(_BYTE *)(v9
           + v4 * v8
           + 405099492
           - ((((v4 * v8 + 405099492) * (unint64_t)v14) >> 32) >> 4) * v13) = *(_BYTE *)(v9 + (v17 - ((v17 * (unint64_t)v12) >> 32) * v13));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v4 == 823347729) * a1) ^ v5)) - 4))();
}

uint64_t sub_20C6B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int v4;
  uint64_t v5;

  STACK[0x6D0] = a4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((76 * (LODWORD(STACK[0x59C]) != LODWORD(STACK[0x6B4]))) | v4))
                            - ((v4 - 2310) | 0x180u)
                            + 391))();
}

uint64_t sub_20C6E8()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v2 = 2 * (v0 ^ 0x9E0) + 1835;
  v3 = (v2 ^ 0xBAF50F9A) + v1;
  v4 = v3 < 0xA244A5FA || v3 > 0xA244A5FB;
  return (*(uint64_t (**)(void))(STACK[0x6C0] + 8 * (((8 * !v4) | (16 * !v4)) ^ v2)))();
}

void sub_20CBF0()
{
  JUMPOUT(0x20C790);
}

#error "216F80: call analysis failed (funcsize=8282)"

uint64_t sub_216F84(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  int v42;
  int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;

  v45 = v43 - v44 + 1058407376 + (v44 ^ a1 ^ 0xE6C1ED5B);
  v46 = ((v45 + 102012871 - ((2 * v45) & 0xC292F8E)) ^ (v44 - 1991716327 - ((2 * v44 + 107508900) & 0xC292F8E)))
      + ((v45 + 102012871 - ((2 * v45) & 0xC292F8E)) & 0x520027C ^ 0xFBFFFDBB)
      + ((v45 + 102012871 - ((2 * v45) & 0xC292F8E)) & 0x520027C ^ 0xFEDFFFC7)
      + 2;
  LODWORD(STACK[0x628]) = (v46 ^ 0x5B3DAB7E) - 16875540 + ((2 * v46) & 0xB67B56FC);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (a42 ^ (((v42 ^ 0x8856EFCF) == -1094447401) | (2
                                                                                       * ((v42 ^ 0x8856EFCF) == -1094447401)))))
                            - ((a42 + 658527513) & 0xD8BFA35D ^ (a42 - 1393897784) & 0x53152AFB ^ 0x3F9)))();
}

uint64_t sub_217220@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W5>, int a4@<W7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, int a12)
{
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  int v150;
  unsigned int v151;
  _BYTE *v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  uint64_t v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  int v197;
  char v198;
  char v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  char v208;
  int v209;
  int v210;
  unsigned int v211;
  int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  _BOOL4 v231;
  _BOOL4 v232;
  _BOOL4 v233;

  v15 = v12 ^ 0x6C;
  v16 = ((v13 - 914435990) ^ 0xB33E67BF) + 1342176219 + ((2 * (v13 - 914435990)) & 0x667CCF7E);
  v17 = ((2 * ((a5 ^ 0x1CF7E2BB) - 158109904)) & 0x5E5F5FF8)
      + (((v12 ^ 0x6C) + 791653687) ^ ((a5 ^ 0x1CF7E2BB) - 158109904))
      - 33728812;
  LODWORD(STACK[0x5A0]) = 1142926438;
  v18 = STACK[0x628];
  LODWORD(STACK[0x6B4]) = v15 ^ 0x5B4;
  v19 = v14
      + a2
      - a3
      - 2 * ((v14 + a2 - a3 + 521972824) & 0x7480A83F ^ (v14 + a2 - a3) & ((5 * (v15 ^ 0x28A)) ^ 0x18E))
      - 1818405742;
  v20 = a3 - 2 * ((a3 + 46127984) & 0x86F05D7 ^ a3 & 6) - 1422991039;
  v21 = (v15 ^ 0x5B4) + v16 - a4 + (a1 ^ 0x1CF7E2BB);
  v22 = v17 - 599815680 + (a1 ^ 0x1CF7E2BB);
  v23 = a4 - ((2 * a4 - 499010026) & 0xA9123252) + 1168766004;
  v24 = v16 + 2 * a4 + (v23 ^ 0xAB76E6D6) + 923535041;
  v25 = ((2 * v24) & 0xFEBF8FDE) + (v24 ^ 0xFF5FC7EF);
  v26 = v25 + (v22 ^ 0xFF602B1C) + 10500113 - ((2 * (v25 + (v22 ^ 0xFF602B1C) + 10500113)) & 0xB9A397E2) - 590230543;
  v27 = v14 + 2 * a3 - 1362692958 + (v20 ^ 0xF790FA2E);
  v28 = ((2 * v27) & 0xFFBCFFF6) + (v27 ^ 0x7FDE7FFB);
  v29 = ((a2 + v18 + 985110974) ^ 0xFF602B1C) - 2145288187 + v28;
  v30 = v29 - ((2 * v29) & 0xE7BB3BA) - 2025989667;
  v19 ^= 0xF480A83A;
  v31 = v19 + (v20 ^ 0x70AD23F3 ^ v30) + 1 - ((2 * (v19 + (v20 ^ 0x70AD23F3 ^ v30) + 1)) & 0xD4C0E0AE) + 1784705111;
  v32 = v31 ^ v20;
  v33 = ((2 * (v28 + 680332821 + (v32 ^ 0x620F7586))) & 0x64FE77BA)
      + ((v28 + 680332821 + (v32 ^ 0x620F7586)) ^ 0x327F3BDD);
  v34 = (v19 ^ (v33 - 847199197)) - 608066497 - ((2 * (v19 ^ (v33 - 847199197))) & 0xB783487E);
  v35 = ((2 * ((v34 ^ 0xDBC1A43F) + (v30 ^ 0xED5DA98A ^ v31))) & 0x7ABFFFFE)
      + (((v34 ^ 0xDBC1A43F) + (v30 ^ 0xED5DA98A ^ v31)) ^ 0x3D5FFFFF);
  v36 = v21
      - 13959407
      + (v23 ^ 0x77A72D27 ^ v26)
      - ((2 * (v21 - 13959407 + (v23 ^ 0x77A72D27 ^ v26)) + 1518333170) & 0xEE751F26)
      + 612009484;
  v37 = v26 ^ 0xABEB4462 ^ v36;
  v38 = v36 ^ v23;
  v39 = ((2 * (v25 - 1458846175 + (v38 ^ 0x23B396BA))) & 0xD6D98F90)
      + ((v25 - 1458846175 + (v38 ^ 0x23B396BA)) ^ 0xEB6CC7C8);
  v40 = ((v39 + 345192504) ^ (v21 - 1402276471))
      + 757230827
      - ((2 * ((v39 + 345192504) ^ (v21 - 1402276471))) & 0x5A44D9D6);
  v41 = (v40 ^ 0x2D226CEB) + v37 - ((2 * ((v40 ^ 0x2D226CEB) + v37) - 70408090) & 0xE303F982) + 1869140212;
  v42 = (v35 - 1064905676) ^ (v33 - 1300930846);
  v43 = v32 ^ 0x24948669 ^ (v33 - ((2 * v33 + 1646688108) & 0xC41EEB0C) - 1826442948);
  v44 = v41 ^ (v39 - 108539145);
  v45 = ((2 * ((v34 ^ 0xD19DBDBD) + v35 - 1029701631 + v42)) & 0xFFEEFB9E)
      + (((v34 ^ 0xD19DBDBD) + v35 - 1029701631 + v42) ^ 0xFFF77DCF);
  v33 -= 675747679;
  v46 = (v45 + 1868950968) ^ v33;
  v47 = (v40 ^ 0x277E7569) + (v41 ^ 0x7181FCC1) + (v44 ^ 0x7181FCC1) + 1903597396;
  v48 = v47 + (v44 ^ 0x343FBCE5);
  v49 = v47 + (v38 ^ 0x24948669 ^ (v39 - ((2 * v39 + 1883987862) & 0x47672D74) - 1680259451));
  v33 ^= 0x770390Eu;
  v50 = ((2 * (v33 + 623525687)) & 0xFFD776BA) + ((v33 + 623525687) ^ 0xFFEBBB5D);
  v51 = (v46 ^ 0x211AB831 ^ (v45 + 1868950968 + v43 - ((2 * (v45 + 1868950968 + v43)) & 0x4CD5027E) + 644514111)) + v50;
  v52 = (v39 + 516644022) ^ 0x770390E;
  v53 = (v52 ^ v47) + 781253844 - ((2 * (v52 ^ v47)) & 0x5D21F9A8);
  v54 = ((2 * (v52 + 623525687)) & 0x99FE7FDE) + ((v52 + 623525687) ^ 0xCCFF3FEF);
  v55 = (v42 ^ 0x45BE4024) + v45 - v51 - 710751219;
  v56 = ((v49 + 781253844 - ((2 * v49) & 0x5D21F9A8)) ^ v53) + v54;
  v57 = v48 + v56 - 1975663163 - 2 * (v56 - 1975663163);
  v58 = ((2 * (v33 - 1328291 - v51)) & 0xFCEE39FE) + ((v33 - 1328291 - v51) ^ 0xFE771CFF);
  v59 = v50 + ((v50 + 1328291) ^ 0x770390E ^ v46) - v58 - 739820269;
  v60 = v59 + 560041321 - ((2 * v59) & 0x42C31AD2);
  v61 = v52 - v56;
  v62 = v60 ^ (v55 + 560041321 - ((2 * v55) & 0x42C31AD2));
  v63 = v54 + ((v54 + 855687185) ^ 0x2E90FCD4 ^ v53) - v61 + 995974035;
  v64 = v63 + 183546832 - ((2 * v63) & 0x15E167A0);
  v65 = (v57 - ((2 * v57 + 454840664) & 0x15E167A0) - 931210116) ^ v64;
  v66 = ((2 * v65) & 0x7B6DB7DE ^ 0x79600686) + (v65 ^ 0xC307DCBC);
  v67 = v58 - ((2 * v58 - 1966221946) & 0xA0F110E0) + 366965555;
  v68 = (v60 ^ 0x21618D69) - ((2 * (v60 ^ 0x21618D69) - 1107551178) & 0xA63B2ED4) - 1306811003;
  v69 = (v51 - 706343093 + (v62 ^ 0x814EF8AC)) ^ v67;
  v70 = (v62 ^ 0x7EB10753) - v58 - 741148559 + (v69 ^ 0xAF87778F);
  v71 = ((2 * v70) & 0x7DF6595A) + (v70 ^ 0x3EFB2CAD);
  v72 = v61 - ((2 * v61 + 565874530) & 0x2CFE1DC4) + 660362899;
  v73 = (v56 - 964073817 - v66) ^ v72;
  v74 = (v64 ^ 0xAF0B3D0) + 1417585570 + (~(2 * (v64 ^ 0xAF0B3D0) - 1107551178) | 0x14FED4F3);
  v75 = v66 - v61 - 1088306967 + (v73 ^ 0x6980F11D);
  v76 = (v69 ^ 0x3651F1A ^ v68)
      - 1056648365
      + v71
      - 1586026985
      + (~(2 * ((v69 ^ 0x3651F1A ^ v68) - 1056648365 + v71)) | 0xBD11B3D1)
      + 1;
  v77 = ((2 * ((v72 ^ 0x967F0EE2) + (v74 ^ 0xA7F6A79) + 1)) & 0xFBFFBCDE)
      + (((v72 ^ 0x967F0EE2) + (v74 ^ 0xA7F6A79) + 1) ^ 0xFDFFDE6F);
  v78 = ((2 * (v76 ^ v69)) & 0xBBFB6FFA ^ 0xA21B4CCA) + (v76 ^ v69 ^ 0x2CF2199A);
  v79 = v76 ^ 0xA1772617;
  v80 = (v74 ^ 0x63FF9B64 ^ v73) + v75;
  v81 = v75 - v77 - ((2 * (v75 - v77) + 360878824) & 0x1831B6FA) + 1188701425;
  v82 = (v67 ^ 0x50788870) + (v68 ^ 0xACE26895) + 570574852 + v78;
  v83 = ((2 * v82) & 0x5E6BFBDC) + (v82 ^ 0xAF35FDEE);
  v84 = v71 - v83;
  v85 = ((2 * ((v80 - 1954283861) ^ v73)) & 0xDF9BD6FA ^ 0xC9A14C0) + ((v80 - 1954283861) ^ v73 ^ 0x79B2E59F);
  v86 = v84 + v78 - ((2 * (v84 + v78) + 116722492) & 0xF299576) - 888188839;
  v87 = v85 + v77;
  v88 = v79 + v78 - v83 - 109015067 + (v86 ^ 0x8794CABB);
  v89 = v88 - 829334142 - ((2 * v88) & 0x9D22BB04);
  v90 = v89 ^ (v78 + 243724696);
  v91 = v86 ^ 0x49059739 ^ v90;
  v92 = (((v90 ^ 0xCE915D82) + 1611192199) ^ 0x7D7ECF57)
      - 620905282
      + ((2 * ((v90 ^ 0xCE915D82) + 1611192199)) & 0xFAFD9EAE);
  v93 = v80 + (v81 ^ 0xC18DB7D) + v85 - v87 - 1312020722;
  v94 = v93 + 2041210300 - ((2 * v93) & 0xF354CB78);
  v95 = v91 - 679848122 + v92;
  v96 = v83 + 804211483 + v92;
  v97 = v94 ^ (v85 - 55132648);
  v98 = v81 ^ 0x75B2BEC1 ^ v97;
  v99 = (((v97 ^ 0x79AA65BC) + 1611192199) ^ 0x7DF755FE)
      - 1141900770
      + ((2 * ((v97 ^ 0x79AA65BC) + 1611192199)) & 0xFBEEABFC);
  v100 = v98 + v99;
  v101 = v87 - 204751986 + v99;
  v102 = (v94 ^ 0x79AA65BC) - v101;
  v103 = (v89 ^ 0xCE915D82) - v95 - v96;
  v104 = v103 + v95;
  v105 = v103 + v95 + 56845896;
  v106 = v101 - (v102 - 918784533) - ((2 * (v101 - (v102 - 918784533)) + 1599824536) & 0x4DD1CB7A) - 694774007;
  v107 = v102 - 415078720;
  v108 = v96 - v104 + 1299872414 - ((2 * (v96 - v104 + 1299872414) + 1097433958) & 0x480B1464) - 2068165659;
  v109 = (v102 - 918784533 - v100 + 1126207968) ^ 0x26E8E5BD ^ v106;
  v110 = (v108 ^ 0xDBFA75CD) - v83 + ((v103 + 512596626) ^ 0x24058A32 ^ v108) + 1259113067;
  v111 = v110 - ((2 * v110) & 0xE3A04524) + 1909465746;
  v112 = ((2 * ((v105 ^ 0xDAE5085A) + (v111 ^ 0x8E2FDD6D) + 1)) & 0xFEF53636)
       + (((v105 ^ 0xDAE5085A) + (v111 ^ 0x8E2FDD6D) + 1) ^ 0xFF7A9B1B);
  v113 = ((2 * ((v111 ^ 0x5AC7B17C) - v83 + 1267855184 + v112)) & 0xBDBBDFFA)
       + (((v111 ^ 0x5AC7B17C) - v83 + 1267855184 + v112) ^ 0x5EDDEFFD);
  v114 = (v106 ^ 0xD9171A42)
       - v87
       + v109
       - 1985718679
       - ((2 * ((v106 ^ 0xD9171A42) - v87 + v109 - 1985718679)) & 0x3D6EB62A)
       - 1632150763;
  v115 = ((2 * ((v107 ^ 0xDAE5085A) + (v114 ^ 0x6148A4EA) + 1)) & 0xFFFFF5BE)
       + (((v107 ^ 0xDAE5085A) + (v114 ^ 0x6148A4EA) + 1) ^ 0x7FFFFADF);
  v108 ^= 0x24058A32u;
  v116 = (v111 ^ 0xA5384E83) + v108;
  v117 = (v108 ^ (v113 - 1591603197)) - 1223838323 - ((2 * (v108 ^ (v113 - 1591603197))) & 0x6E1B6B1A);
  v118 = ((2 * (v117 ^ (v112 - 1286721487))) & 0xF7DE7FF4 ^ 0x661A6B10) + (v117 ^ (v112 - 1286721487) ^ 0xCCE28A77);
  v119 = v115
       - v87
       + (v114 ^ 0xB5A0C8FB)
       - ((2 * (v115 - v87 + (v114 ^ 0xB5A0C8FB)) + 323532564) & 0xCCDB38C6)
       + 1880225773;
  v120 = (v114 ^ 0x4A5F3704) + (v106 ^ 0x26E8E5BD);
  v121 = v119 ^ v106;
  v117 ^= 0xB70DB58D;
  v122 = ((2 * (v116 + v117)) & 0x9D87BBFE) + ((v116 + v117) ^ 0x4EC3DDFF);
  v123 = v113 - v118 + 487673853;
  v124 = v121 ^ (v115 + 852021357);
  v125 = v118 + v122;
  v126 = ((2 * (v117 - v113 + 1591603197)) & 0x7FBEEFD8) + ((v117 - v113 + 1591603197) ^ 0xBFDF77EC);
  v121 ^= 0x408579DEu;
  v127 = (v120 ^ 0x7C7FF1E9) + ((2 * v120) & 0xF8FFE3D2) - 2088759785 + v121;
  v128 = ((2 * v127) & 0xFDDD7FEE) + (v127 ^ 0xFEEEBFF7);
  v129 = ((2 * ((v119 ^ 0x9992639C) + v121 + 1)) & 0xE5FD577A) + (((v119 ^ 0x9992639C) + v121 + 1) ^ 0x72FEABBD);
  v130 = (v119 ^ 0x666D9C63)
       + (v124 ^ 0xBF7A8621)
       + 1
       - ((2 * ((v119 ^ 0x666D9C63) + (v124 ^ 0xBF7A8621) + 1)) & 0x768115E)
       + 62130351;
  v131 = v128 + v129;
  v132 = v126 + v122;
  v133 = v125
       + ((2 * (v123 ^ 0x404BD274)) ^ 0xA2B41B6D)
       - ((2 * (v125 + ((2 * (v123 ^ 0x404BD274)) ^ 0xA2B41B6D)) + 1788462096) & 0xB2CA01BE)
       + 246538983;
  v134 = ((2 * (v126 + 1521559145 + (v123 ^ 0x404BD274))) & 0x7BFDE3FE ^ 0x313C4340)
       + ((v126 + 1521559145 + (v123 ^ 0x404BD274)) ^ 0x6561DC5F);
  v135 = (v124 ^ 0x408579DE) + v128 + 17907722 + ((2 * v130) ^ 0x254BAEDB);
  v136 = ((2 * v135) & 0xEF6FFEAE) + (v135 ^ 0xF7B7FF57);
  v137 = ((2 * (v132 + 200099946 + (v123 ^ 0xEEEE203D))) & 0xDDBAFFFE)
       + ((v132 + 200099946 + (v123 ^ 0xEEEE203D)) ^ 0x6EDD7FFF);
  v138 = v137 - v134;
  v139 = ((2 * (v131 - 1465699679 + (v130 ^ 0xED5A2892))) & 0xB5DFF7EC)
       + ((v131 - 1465699679 + (v130 ^ 0xED5A2892)) ^ 0xDAEFFBF6);
  v140 = ((2 * (v129 - 1483607400 + (v130 ^ 0x43FFDADB))) & 0x7FB9EFFA ^ 0x31384B40)
       + ((v129 - 1483607400 + (v130 ^ 0x43FFDADB)) ^ 0xE743DA5D);
  v141 = v134 - v132 - ((2 * (v134 - v132) + 1814530862) & 0xCC788CFE) - 1672475626;
  v142 = v139 - v140 + 1147331506;
  v143 = v133 ^ 0x3F5946A0 ^ v141;
  v144 = v140 - v131;
  v145 = (a12 & (2 * (v138 - 819891712 + (v141 ^ 0xE63C467F))))
       + ((v138 - 819891712 + (v141 ^ 0xE63C467F)) ^ 0x3FFFEBDA);
  v146 = ((2 * (v137 - 1860009983 + (v133 ^ 0xD96500DF))) & 0xFBCFFBFA)
       + ((v137 - 1860009983 + (v133 ^ 0xD96500DF)) ^ 0x7DE7FDFD);
  v147 = v143 - v145;
  v148 = v143 - v145 + v138;
  v149 = (v144 - 1753229982) ^ (v136 + 138936489);
  v150 = v144 - 787226845 + v142;
  v151 = v136 + v139;
  v152 = (_BYTE *)STACK[0x6B8];
  v152[2092] = (v147 - 38) ^ 0xAA;
  v153 = v149 - v150;
  v154 = v149 - v150 - 1493309304;
  v152[1609] = v154 - 2 * (((v154 & 0x7E) + 100) ^ v154 & 2) - 32;
  v155 = v154 + v142;
  v152[1665] = v144 + 35 + v142 - 2 * ((((v144 + 35 + v142) & 0x7E) + 20) ^ (v144 + 35 + v142) & 2) - 112;
  v156 = ((2 * ((v155 - 1835654855) ^ (v153 - 1727401620))) & 0x57F5FFFE)
       + ((v155 - 1835654855) ^ (v153 - 1727401620) ^ 0xABFAFFFF);
  v157 = ((2 * ((v148 + 253844954) ^ (v147 + 1073736666))) & 0xEF77F77E)
       + ((v148 + 253844954) ^ (v147 + 1073736666) ^ 0xF7BBFBBF);
  v152[1789] = (v148 - 38) ^ 0xAA;
  v152[1968] = v151 + ((-104 - 2 * v151) | 7) - 80;
  v152[1183] = (v145 + 38) ^ 0xAA;
  v152[1486] = (v146 + 3) ^ 0xAA;
  v152[1306] = v155 + ((-116 - 2 * v155) | 7) + 54;
  v158 = v157 + v146 - (v148 - 2053864309);
  LOBYTE(v142) = v158 - 114;
  v159 = v158 + 973010574 - ((2 * v158 + 396973852) & 0x5C549600);
  v160 = v145 - v148 + v157;
  LOBYTE(v145) = v160 + 67;
  LOBYTE(v144) = v148 - 117 - (v160 + 67);
  v161 = v156 + v150 - v155;
  v162 = ((v160 - 1188906355) ^ (v157 + 416171738))
       + 1216528854
       - ((2 * ((v160 - 1188906355) ^ (v157 + 416171738))) & 0x910583AC);
  v163 = v156 + v151 - v155 - ((2 * (v156 + v151 - v155) - 208092120) & 0xE94F10AC) + 1853090410;
  v164 = v155 - v161 + 1710579556;
  v165 = v156 - ((2 * v156 + 152995124) & 0x383BF31E) - 2136130519;
  v152[1845] = (v157 - 38) ^ 0xAA;
  v152[1542] = (v144 + 108) ^ 0xAA;
  v152[1721] = v163 ^ 0xAA;
  v152[1362] = v165 ^ 0x73;
  v152[1239] = v142 ^ 0xAA;
  v166 = ((2 * v159) & 0xF5DEAEFE ^ 0x9582AA56) + (v159 ^ 0xB43EA254) + (v162 ^ 0x4882C1D6);
  LOBYTE(v162) = ((2 * (v144 + 109 + (v162 ^ 0x29))) & 0xFA) + ((v144 + 109 + (v162 ^ 0x29)) ^ 0xFD);
  v152[1901] = (v160 - 115) ^ 0xAA;
  v152[2024] = v164 - ((2 * v164) & 0xF8) + 28;
  v167 = ((2 * (v165 ^ (v161 + 677703004))) & 0xF7EFFFFE ^ 0x302BF31E) + (v165 ^ (v161 + 677703004) ^ 0xE7EA0670);
  LOBYTE(v144) = v162 - (((2 * v159) ^ 0x56) + (v159 ^ 0x54));
  v168 = v164 - v167;
  v169 = ((2 * v163) & 0xEBFEEFFA ^ 0x28B86CFA) + (v163 ^ 0xE1A34180);
  v170 = v169 + v167;
  v152[1418] = v161 - 2 * (((v161 & 0xFD) + 92) ^ v161 & 1) + 88;
  v171 = v161 - v168 + 859215741;
  v172 = v168 - v169;
  v152[2080] = v170 - 2 * (v170 & 3 ^ (v170 + 4));
  v152[1295] = (v144 - 126) ^ 0xAA;
  LOBYTE(v162) = v145 - v162 - ((2 * (v145 - v162) - 114) & 0xEC) + 61;
  v173 = v166 - ((2 * v166 - 481048746) & 0xE8E14D28) + 1713015359;
  v152[1598] = (v166 - 127) ^ 0xAA;
  v152[1957] = v142 ^ 0x86;
  v152[1654] = v162 ^ 0x4C;
  v152[1474] = v163 ^ 0x86;
  v152[1171] = v171 ^ 0xEC;
  v174 = v170 - ((2 * v170 + 356746844) & 0x1BA68214) - 2005597128;
  v175 = (v159 ^ 0xDD7DA92C) - ((2 * (v159 ^ 0xDD7DA92C) + 1539272406) & 0x4E805014) + 354410357;
  v176 = v171 ^ 0xC777CF10;
  v177 = ((2 * v173) & 0xF9FF7FFE ^ 0xBB431C) + (v173 ^ 0xFEA21E71);
  v152[1777] = v172 - 2 * (v172 & 3 ^ (v172 + 92)) - 40;
  v178 = v177 - ((2 * v177 - 71271670) & 0xC326E4B8) - 546066463;
  v179 = ((2 * ((v163 ^ 0x87F06A7A) - 304105621)) & 0xE52E7546) + (((v163 ^ 0x87F06A7A) - 304105621) ^ 0x72973AA3);
  LOBYTE(v144) = (v175 ^ 0xA) + v144 + ((2 * v173) ^ 0x1C) + (v173 ^ 0x71);
  LOBYTE(v163) = v144 - 126;
  v180 = (((2 * v178) & 0xA4004F8 ^ 0x20004B8) + (v178 ^ 0x64B37020)) ^ v175;
  v181 = ((v180 ^ 0x2740280A) - ((2 * (v180 ^ 0x2740280A)) & 0xCCCCCCCC) + 614) & 0x2B9;
  v152[1351] = v173 ^ 0x24;
  *(_BYTE *)(STACK[0x6D8] + (v181 ^ 0x99 | v181 ^ 0x220)) = v174 ^ 0xEC;
  v182 = ((2 * (v179 + v172 + 2023134009 + (v174 ^ 0x7BFE4610))) & 0xDBABCE56)
       + ((v179 + v172 + 2023134009 + (v174 ^ 0x7BFE4610)) ^ 0x6DD5E72B);
  v183 = ((v179 - 1922513571) ^ 0x7BFE4610 ^ v174)
       - 868572440
       - ((2 * ((v179 - 1922513571) ^ 0x7BFE4610 ^ v174)) & 0x987545D0);
  LOBYTE(v172) = ((2 * (v144 - 125 + (v178 ^ 0x5C))) & 0xD6) + ((v144 - 125 + (v178 ^ 0x5C)) ^ 0xEB);
  LOBYTE(v162) = v144 + (v173 ^ 0x6B) + (v162 ^ 0xE6);
  v152[2013] = (v144 - 125) ^ 0xAA;
  v152[1227] = v183 ^ 0x14;
  v152[1530] = v182 - ((2 * v182 - 86) & 0xF8) - 47;
  v184 = v176 + (v174 ^ 0x722CBEF5) + v182 + 1;
  v152[1889] = v184 - ((2 * v184 - 86) & 0xF8) - 47;
  v152[1710] = v180 ^ 0xA0;
  LOBYTE(v144) = v162 + v177 - 123 - 2 * ((v162 + v177 - 123) & 0xF1 ^ (v162 + v177 - 123) & 1) - 16;
  LODWORD(v181) = (v174 ^ 0x7BFE4610) - 1842734891;
  v185 = v184 + v181 - 1654506674 - ((2 * (v184 + v181)) & 0x3AC4769C);
  LODWORD(v181) = v182 + v181 + 1278503768 - ((2 * (v182 + v181)) & 0x9868D6B0);
  v152[1407] = (v162 - 124) ^ 0xAA;
  v186 = (v185 ^ 0x9D623B4E)
       + (v183 ^ 0xCC3AA2E8)
       - ((2 * ((v185 ^ 0x9D623B4E) + (v183 ^ 0xCC3AA2E8)) + 1765706182) & 0x6D0648E8)
       + 1797417303;
  LOBYTE(v175) = (v180 ^ 0xA) + (v144 ^ 0xF0) - 29 - ((2 * ((v180 ^ 0xA) + (v144 ^ 0xF0) - 29)) & 0x92) + 73;
  LOBYTE(v180) = v144 ^ v173;
  v174 ^= 0xD57C6C5D;
  v187 = v185 ^ v174;
  v188 = v181 ^ v174;
  v152[1586] = v188 ^ 0xF5;
  v152[1283] = (v181 ^ 0x58) - ((2 * (v181 ^ 0x58) - 6) & 0xF8) + 121;
  LOBYTE(v173) = (((2 * v173) ^ 0x1C) + (v173 ^ 0x71) + 2 + v163) ^ v173;
  v152[2069] = v173 ^ 0x38;
  v152[1766] = (v172 + 14) ^ 0xAA;
  v152[1642] = v187 ^ 0xE3;
  v152[1463] = v175 ^ 0xE3;
  v152[1945] = ((v185 ^ 0x4E) + (v183 ^ 0xE8) - ((2 * ((v185 ^ 0x4E) + (v183 ^ 0xE8)) - 58) & 0xE8) + 87) ^ 0x88;
  v152[1160] = v180 ^ 0xC8;
  v189 = ((2 * ((v187 ^ 0x989ECD1F) + 2131316819)) & 0xE5FF6EFE) + (((v187 ^ 0x989ECD1F) + 2131316819) ^ 0x72FFB77F);
  v190 = v186 ^ 0x22F27B4B;
  LOBYTE(v186) = (((v180 ^ 0x62) + 83) ^ 0xB3) + 112 + ((2 * ((v180 ^ 0x62) + 83)) & 0x66);
  LOBYTE(v180) = (v175 ^ 0x76) - v186;
  v191 = v190 - v189;
  LOBYTE(v163) = v172 - v180;
  LOBYTE(v183) = v172 - v180 + 42;
  v192 = v188 ^ 0x5AC1EAC6;
  v193 = (v181 ^ 0x4C346B58) - (v190 - v189) + 823901663;
  v194 = -((v181 ^ 0x4C346B58) - v190 + 823901663);
  v152[2001] = (v181 ^ 0x58) - (v190 - v189) - 33 - ((2 * ((v181 ^ 0x58) - (v190 - v189) - 33)) & 0xF8) + 28;
  LOBYTE(v189) = v186 - v183;
  v195 = v192 + 1929361279 + v191 - ((2 * (v192 + 1929361279 + v191)) & 0xE757E482) + 1940648513;
  LOBYTE(v182) = v180 - 35 + ((2 * v173) & 0xBC ^ 0xB8) + (v173 ^ 0x83);
  v152[1822] = (v182 + 104) ^ 0xAA;
  v152[1339] = v195 ^ 0xBD;
  LOBYTE(v177) = v189 + v180 - 35;
  v152[1698] = v191 + ((-2 * v191) | 7) + 124;
  LOBYTE(v181) = v182 + 104;
  v152[1395] = v194 + (~(2 * v194 + 66) | 7) - 98;
  v152[1878] = (v189 + 91) ^ 0xAA;
  v152[1216] = (v180 + 35) ^ 0xAA;
  v196 = v190 - v193;
  v197 = v196 - 1355972580;
  v198 = v183 - v189 - 35;
  v199 = v189 - ((2 * v189 + 84) & 0xF2) - 93;
  v200 = v196 - 1355972580 - 2 * ((v196 - 1270551552) & 0x411F141D ^ (v196 - 1355972580) & 1) + 1177976832;
  v152[1272] = v198 ^ 0xAA;
  v152[1451] = (v196 + 28 - 2 * (v196 & 0x1D ^ (v196 + 28) & 1)) ^ 0xE0;
  LOBYTE(v183) = (v181 ^ 0xB8) - 93;
  v201 = (v195 ^ 0xF639B0F9) + 1092157442 - ((2 * (v195 ^ 0xF639B0F9) - 57407674) & 0x859E0DB6) + 2684;
  v152[1519] = (v163 - 84) ^ 0xAA;
  v152[1575] = v183 ^ 0xAA;
  v202 = v193 - v194 - ((2 * (v193 - v194) + 1601400810) & 0xEE68C9E6) + 653139176;
  v203 = v194 - ((2 * v194 + 2000135648) & 0xA79E699C) + 258672574;
  v152[1148] = (v194 - ((2 * v194 - 32) & 0x9C) - 66) ^ 0x32;
  v152[2057] = ((v195 ^ 0xF9) + 2 - ((2 * (v195 ^ 0xF9) + 70) & 0xB6) + 124) ^ 0x27;
  v152[1754] = v202 ^ 0xF;
  v152[1631] = v199 ^ 0x53;
  LOBYTE(v180) = v177 - ((2 * v177 + 76) & 0x10) + 46;
  LOBYTE(v196) = v198 ^ v183;
  LOBYTE(v191) = (v183 ^ 0x93) + (v180 ^ 0x77) + 81 - ((2 * ((v183 ^ 0x93) + (v180 ^ 0x77) + 1)) & 0xA0);
  v204 = v201 ^ v202;
  LODWORD(v181) = v197 - ((2 * v197 + 601886226) & 0x61BC69EC) + 1120812031;
  LOBYTE(v194) = v198 ^ v183 ^ 0x93;
  LOBYTE(v202) = v199 ^ 0x23 ^ (v177 - ((2 * v177 + 2) & 0xB4) + 91);
  v152[1934] = (v177 - ((2 * v177 + 2) & 0xB4) + 91) ^ 0x70;
  v205 = (v181 ^ 0xCF21CB09)
       + (v201 ^ 0xFB148048)
       - 502313068
       - ((2 * ((v181 ^ 0xCF21CB09) + (v201 ^ 0xFB148048) + 1)) & 0xC41E9F26);
  v152[1810] = v205 ^ 0x6F;
  v152[1990] = ((v180 ^ 0x5A) + v194) ^ 0xAA;
  v152[1507] = (v204 ^ 0xBB) + (v181 ^ 0x24) - ((2 * ((v204 ^ 0xBB) + (v181 ^ 0x24))) & 0xF8) - 4;
  v206 = v203 ^ 0x92D020D2 ^ v200;
  v207 = v206 + 453317453 - ((2 * v206 + 1764025130) & 0xCCE5436C) - 2;
  v152[1866] = v207 ^ 0x4A;
  v152[1328] = v191 ^ 0xFA;
  v152[1687] = v180 ^ 0xF0;
  v152[1204] = (v197 - ((2 * v197 + 18) & 0xEC) - 1) ^ 0xD8;
  v208 = (v202 - ((2 * v202 + 42) & 0xCA) - 6) ^ v191 ^ 0x35;
  LOBYTE(v200) = ((2 * ((v191 ^ 0x50) + (v180 ^ 0x5A))) & 0xDE) + (((v191 ^ 0x50) + (v180 ^ 0x5A)) ^ a11);
  v152[1384] = (v202 - ((2 * v202 + 42) & 0xCA) - 6) ^ 0xCF;
  LOBYTE(v180) = v208 - 30 + v200 + v202 - ((2 * (v208 - 30 + v200 + v202)) & 0xE) - 121;
  v209 = ((2 * ((v205 ^ 0xE20F4F93) + (v181 ^ 0x8E127A24))) & 0xFF4777CE)
       + (((v205 ^ 0xE20F4F93) + (v181 ^ 0x8E127A24)) ^ 0xFFA3BBE7);
  LODWORD(v181) = v207 ^ 0x47DEE25 ^ v205;
  v210 = v209 + v206;
  LODWORD(v181) = v181 - 1495903766 + v209 + v206 - ((2 * (v181 - 1495903766 + v209 + v206)) & 0x8D9A1D38) + 1187843740;
  v152[2046] = v180 ^ 0x2D;
  v211 = ((2 * ((v204 ^ 0xC20E4BB) - 1463087300)) & 0xAEDDFB78) + (((v204 ^ 0xC20E4BB) - 1463087300) ^ 0xD76EFDBC);
  v152[1563] = v181 ^ 0x60;
  v152[1743] = (v194 + 60) ^ 0xAA;
  v152[1440] = (v200 + 116) ^ 0xAA;
  v152[1922] = v209 - 2 * (((v209 & 0x7E) + 124) ^ v209 & 2) + 120;
  LOBYTE(v207) = (v180 ^ 0x78) + (v196 ^ 0x93);
  v152[1619] = v209 + v206 - 2 * ((v209 + v206 + 106) & 0xFD ^ (v209 + v206) & 1) - 26;
  v152[1137] = (v200 + v202 - 30) ^ 0xAA;
  LOBYTE(v177) = 87 - v202 - ((-106 - 2 * v202) & 0x18);
  LOBYTE(v202) = v207 - v202;
  v152[1260] = v211 - 2 * (v211 & 3 ^ (v211 + 68)) + 64;
  LOBYTE(v180) = (-(((v209 + 124) | (-125 - v209)) & 0xD6) - 91 + v202) ^ v180;
  v212 = (v181 ^ 0xB932F163)
       + v211
       - v206
       - ((2 * ((v181 ^ 0xB932F163) + v211 - v206) + 819445166) & 0x64EA9882)
       + 182528792;
  v213 = v212 ^ v181;
  v152[1496] = (v202 - 49) ^ 0xAA;
  v214 = -2131457020 - v206 - ((1308602006 - 2 * v206) & 0xB3E96972);
  v152[1675] = v214 ^ 0x45;
  LOBYTE(v206) = v207 + v200 - ((2 * (v207 + v200) - 48) & 0x88) - 84;
  v152[1978] = v212 ^ 0xBD;
  v215 = v212 ^ 0xB2754C41;
  v216 = v210
       + 1241058977
       + (v212 ^ 0xB2754C41)
       - ((2 * (v210 + 1241058977 + (v212 ^ 0xB2754C41))) & 0xEB49493A)
       + 1973724317;
  LOBYTE(v181) = v202 - 37 - ((2 * v202 + 44) & 0xCC) - 95;
  LOBYTE(v194) = ((2 * ((v180 ^ 0x2C) - 123 + (v181 ^ 0x19))) & 0x18) + (((v180 ^ 0x2C) - 123 + (v181 ^ 0x19)) ^ 0xC);
  v152[1372] = v216 ^ 0x61;
  v152[1193] = v177 ^ 0xA6;
  v152[1799] = v180 ^ 0x86;
  v217 = v216 ^ v214;
  LOBYTE(v202) = (v206 ^ 0x44) - v202 - 95 + v194 - 116 - ((2 * ((v206 ^ 0x44) - v202 - 95 + v194)) & 0x18);
  LOBYTE(v180) = v202 ^ v181;
  v152[1316] = v213 ^ 0x8A;
  LOBYTE(v181) = v206 ^ v177 ^ (v194 - ((2 * v194 + 12) & 0x18) - 110);
  v218 = v215 - ((2 * v215 + 262110606) & 0x94EBB8B0) - 767190241;
  v219 = ((2 * ((v213 ^ 0x84CE2E76) + (v218 ^ 0xB58A23A7) + 1)) & 0xB9FFBD76)
       + (((v213 ^ 0x84CE2E76) + (v218 ^ 0xB58A23A7) + 1) ^ 0xDCFFDEBB);
  v220 = v219 + v210 - 2 * ((v219 + v210 + 217657318) & 0x1B43640F ^ (v219 + v210) & 1) + 138187764;
  v152[2034] = (v219 - ((2 * v219 - 74) & 0xAE) + 50) ^ 0x2B;
  v221 = v220 ^ v218;
  v222 = v217 ^ (v219 - ((2 * v219 - 1318530890) & 0xA96DADAE) - 1385480398);
  v152[1731] = v221 ^ 0xAA;
  v152[1855] = v206 ^ 0xEE;
  v152[1552] = (v194 - 122) ^ 0xAA;
  v152[1911] = v181 ^ 0xEE;
  v152[1428] = v222 ^ 0xF;
  LOBYTE(v210) = (v180 ^ 0xE2) + (v181 ^ v202 ^ 0x37) + 1;
  LOBYTE(v210) = ((2 * v210) & 0x88) + (v210 ^ 0xC4);
  LOBYTE(v213) = ((2 * ((v181 ^ v202 ^ 0xC8) + 102)) & 0x6E) + (((v181 ^ v202 ^ 0xC8) + 102) ^ 0xB7);
  v152[1249] = v180 ^ 0xC0;
  v152[2090] = v220 ^ 0xF2;
  v223 = v220 ^ v222;
  LOBYTE(v180) = v213 + v194;
  v224 = ((2 * ((v223 ^ 0x1C5A5D02) + (v221 ^ 0x40625DE) + 1)) & 0x7FEC1FF4)
       + (((v223 ^ 0x1C5A5D02) + (v221 ^ 0x40625DE) + 1) ^ 0xBFF60FFA);
  LOBYTE(v194) = (v202 ^ 0x8C) - ((2 * (v202 ^ 0x8C) + 124) & 0x48) + 98;
  v152[1484] = v224 - 2 * ((v224 + 6) & 0xFD ^ v224 & 1) + 2;
  v225 = ((2 * ((v223 ^ 0xE3A5A2FD) - 662545050)) & 0x27BBFCF2) + (((v223 ^ 0xE3A5A2FD) - 662545050) ^ 0x13DDFE79);
  v226 = v225 + v219 - ((2 * (v225 + v219) - 1738347134) & 0xC53CC70E) - 1362109880;
  v152[1787] = v226 ^ 0x7B;
  v152[1608] = v202 ^ 0x26;
  v227 = (v220 ^ 0x9B43640E) - ((2 * (v220 ^ 0x9B43640E) - 1993636228) & 0xC8B78FCC) + 686918436;
  v152[1305] = (v180 - 82) ^ 0xAA;
  v152[1843] = v227 ^ 0x1A;
  v152[1181] = v225 + ((-16 - 2 * v225) | 7) - 124;
  LOBYTE(v180) = ((2 * ((v180 - 82) ^ v194)) & 0xAA ^ 8) + ((v180 - 82) ^ v194 ^ 0x71);
  v152[1967] = (v210 + 60) ^ 0xAA;
  v152[1664] = (v213 + 73) ^ 0xAA;
  LOBYTE(v202) = v213 + v180;
  v228 = v227 ^ 0x86C5A461 ^ v226;
  LOBYTE(v223) = ((2 * (v225 - 121 + v228)) & 0x5E) + ((v225 - 121 + v228) ^ 0x2F);
  LOBYTE(v226) = v194 ^ 0x24;
  v152[1361] = v194 ^ 0x8E;
  LOBYTE(v225) = (v227 ^ 0xE6) + 47;
  v229 = -v224 - 1684120692 + v228 - ((2 * (-v224 - 1684120692 + v228)) & 0x3DDF6A9C) - 1628457650;
  v152[1540] = (-(char)v224 - 116 + v228 - ((2 * (-(char)v224 - 116 + v228)) & 0x9C) + 78) ^ 0xB2;
  LOBYTE(v227) = (((v194 ^ 0x24) + 110) & 0x7C) + (((v194 ^ 0x24) + 110) & 0x7C ^ 0x7C);
  LOBYTE(v194) = v180 - v210;
  LOBYTE(v228) = v210 - (v202 - 34);
  LOBYTE(v227) = v227 + v180 - v210 + v202 - 34;
  LOBYTE(v210) = v228 - 90;
  LOBYTE(v224) = v224 - v223;
  v152[1596] = v225 - v223 - 2 * ((v225 - v223) & 3 ^ (v225 - v223 + 68)) + 64;
  v152[1720] = (v228 + 106) ^ 0xAA;
  v152[1237] = v224 - ((2 * v224 - 14) & 0xF8) + 117;
  v152[2023] = (v194 + 1) ^ 0xAA;
  v152[2079] = (v226 - (v202 - 34) + 46) ^ 0xAA;
  v152[1899] = v223 + (~(2 * v223 - 10) | 7) - 8;
  LOBYTE(v180) = ((2 * v229) & 0x3A ^ 0x18) + (v229 ^ 0xD3);
  LOBYTE(v223) = v223 - 5 + v180;
  v152[1417] = (v202 + 30) ^ 0xAA;
  LOBYTE(v226) = v226 + 62 + v227 + 34 - ((2 * (v226 + 62 + v227 + 34) + 118) & 0x64) - 19;
  LOBYTE(v207) = v223 + v225 - ((2 * (v223 + v225) + 20) & 0x5A) + 55;
  v152[1652] = v223 + ((104 - 2 * v223) | 7) - 56;
  LOBYTE(v224) = v224 - 16 + (v229 ^ 0xB1);
  LOBYTE(v225) = v224 + v180;
  v152[1293] = v180 + (~(2 * v180 - 42) | 7) - 24;
  v152[1776] = (v194 - 119) ^ 0xAA;
  LOBYTE(v202) = v223 - (v224 + v180);
  LOBYTE(v224) = v223 - v224 - 32;
  LOBYTE(v223) = v227 + 34 - (v228 - 90);
  v152[1349] = v207 ^ 0xD1;
  v152[1473] = (v228 - 14) ^ 0xAA;
  LOBYTE(v202) = (v207 ^ 0x4E) + v202 - ((2 * ((v207 ^ 0x4E) + v202) - 82) & 0xC0) - 73;
  LOBYTE(v228) = v224 + 97 + (v207 ^ 0xB1) + 83 - ((2 * (v224 + 97 + (v207 ^ 0xB1))) & 0xA6);
  v152[1955] = v225 + ((20 - 2 * v225) | 7) + 114;
  v152[1170] = (v227 + 45) ^ 0xAA;
  LOBYTE(v194) = v223 + v194;
  v152[1832] = v226 ^ 0x18;
  LOBYTE(v223) = (v226 ^ 0xD1) + v223 - 2 * (((v226 ^ 0xD1) + v223 - 64) & 0xDF ^ ((v226 ^ 0xD1) + v223) & 0x18) - 121;
  LOBYTE(v180) = v194 + 72 + (v226 ^ 0x2E) + 63 - ((2 * (v194 + 72 + (v226 ^ 0x2E))) & 0x7E);
  LOBYTE(v229) = (v180 ^ 0x3F) + v210 - ((2 * ((v180 ^ 0x3F) + v210) + 48) & 0xE) + 31;
  LOBYTE(v225) = v225 + 65 + (v228 ^ 0x53) - ((2 * (v225 + 65 + (v228 ^ 0x53))) & 0x7A) + 61;
  v152[1529] = (v194 - 75) ^ 0xAA;
  v152[2011] = v224 - ((2 * v224 - 100) & 0xF8) - 54;
  LOBYTE(v194) = v194 - 75 + (v223 ^ 0xC7) - 29 - ((2 * (v194 - 75 + (v223 ^ 0xC7))) & 0xC6);
  v152[1405] = v202 ^ 0x9C;
  v152[1226] = v229 ^ 0xAD;
  v152[2067] = v228 ^ 0xAF;
  LOBYTE(v181) = v228 ^ 0x6E ^ v225;
  LOBYTE(v226) = v180 ^ 0x38 ^ v229;
  v152[1888] = v223 ^ 0x6D;
  LOBYTE(v210) = ((2 * v223) & 0x6A ^ 0x22) + (v223 ^ 0xA6);
  LOBYTE(v223) = v224 - 50 + (v202 ^ 0x60) + 58 - ((2 * (v224 - 50 + (v202 ^ 0x60))) & 0x74);
  v152[1585] = v180 ^ 0x95;
  v152[1708] = v225 ^ 0xC1;
  LOBYTE(v228) = v194 ^ v229;
  v152[1282] = (((2 * ((v194 ^ 0xE3) - v210 - 75)) & 0xDE) + (((v194 ^ 0xE3) - v210 - 75) ^ 0xEF) + 17) ^ 0xAA;
  LOBYTE(v194) = ((2 * v202) & 0xF4 ^ 0x60) + (v202 ^ 0x4E);
  v152[1461] = v223 ^ v225 ^ 6;
  v152[1764] = ((2 * ((v223 ^ 0x3A) - v194 - 6)) & 0x7E)
             + (((v223 ^ 0x3A) - v194 - 6) ^ 0x3F)
             - ((2 * (((2 * ((v223 ^ 0x3A) - v194 - 6)) & 0x7E) + (((v223 ^ 0x3A) - v194 - 6) ^ 0x3F)) - 126) & 0xF8)
             - 67;
  v152[1820] = v181 - v194 - ((2 * (v181 - v194) - 12) & 0xF8) - 10;
  v152[1944] = v228 ^ 0xB3;
  v230 = LODWORD(STACK[0x59C]) - 919494909;
  v152[1158] = v194 - 2 * (((v194 & 0xFD) + 48) ^ v194 & 1) - 84;
  v152[1641] = (v210 - 11) ^ 0xAA;
  v152[1338] = (v226 - v210 - 75) ^ 0xAA;
  v231 = v230 < 0xB0813E66;
  v232 = v230 < 0xB0813EA6;
  v233 = !v231 && v232;
  return (*(uint64_t (**)(void))(STACK[0x6C0] + 8 * ((14 * v233) ^ v15)))();
}

uint64_t sub_2172D0()
{
  int v0;
  int v1;
  unint64_t v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;

  LODWORD(STACK[0x5A0]) = 1142926438;
  v2 = STACK[0x5F0];
  LODWORD(STACK[0x6B4]) = STACK[0x5F0] + 1185;
  v3 = (((v2 + 1661) | 0x2A7) ^ 0x3A359B0B ^ (2 * (v0 ^ 0x9882BCA)) & 0xBB3FFBEE) + (v0 ^ 0x6B0D1CEF);
  v4 = v1 + 1777632311 + v3;
  v5 = v3 + 1363420058 < v4;
  if (v4 < 0xAEE42191 != (v3 + 1363420058) < 0xAEE42191)
    v5 = v4 < 0xAEE42191;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6C0] + 8 * ((4001 * v5) ^ ((int)v2 + 532))))(2352, 2859930182, 21819, 2713864654, 3504415975, 1388735778, 3658339229, 636628719);
}

uint64_t sub_217364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  unsigned int v34;
  int v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  LODWORD(STACK[0x634]) = a8;
  LODWORD(STACK[0x618]) = a6;
  LODWORD(STACK[0x61C]) = a2;
  LODWORD(STACK[0x614]) = a9 ^ 0x875D663;
  v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 + 8 * ((222 * (((((v35 + 1798123571) ^ 0x6B2D325B) + 915594540) ^ v34) > 0x3F)) ^ v35)) - 4);
  LODWORD(STACK[0x5A0]) = 1142926438;
  return v36(a1, a2, a3, a4, a5, STACK[0x6D0], a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_21745C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  unsigned __int8 *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int *v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  unsigned __int8 *v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;

  LODWORD(STACK[0x6B4]) = 176092;
  LODWORD(STACK[0x6B0]) = 176754;
  LODWORD(STACK[0x6A8]) = 177416;
  LODWORD(STACK[0x624]) = 178740;
  LODWORD(STACK[0x6A0]) = 179402;
  LODWORD(STACK[0x620]) = 180064;
  LODWORD(STACK[0x698]) = 180726;
  LODWORD(STACK[0x694]) = 395876;
  LODWORD(STACK[0x688]) = 396538;
  LODWORD(STACK[0x680]) = 397200;
  LODWORD(STACK[0x67C]) = 398524;
  LODWORD(STACK[0x670]) = 399186;
  LODWORD(STACK[0x668]) = 399848;
  LODWORD(STACK[0x660]) = 400510;
  LODWORD(STACK[0x658]) = 401172;
  LODWORD(STACK[0x650]) = 401834;
  LODWORD(STACK[0x648]) = 402496;
  LODWORD(STACK[0x644]) = 403158;
  LODWORD(STACK[0x640]) = 173444;
  LODWORD(STACK[0x638]) = 178078;
  v9 = STACK[0x61C];
  v10 = STACK[0x618];
  v11 = STACK[0x628];
  v12 = STACK[0x614];
  LODWORD(STACK[0x5DC]) = v8;
  LODWORD(STACK[0x628]) = 0;
  LODWORD(STACK[0x614]) = 171458;
  LODWORD(STACK[0x618]) = 170796;
  v13 = 79 * (v8 ^ 0x3D1);
  v14 = (v7[956] ^ 0xAAAAAAAA) << 24;
  v15 = v7[653];
  LODWORD(STACK[0x630]) = v13;
  LODWORD(STACK[0x5E8]) = 1944015168;
  v16 = v14 | ((v15 ^ 0xAA) << 16) | ((v7[(v13 ^ 0x8C234E93)
                                        - 965 * (((v13 ^ 0x8C234E93) + 1944015168) / 0x3C5)
                                        + 1944015168] ^ 0xAA) << 8);
  LODWORD(STACK[0x5E0]) = 397862;
  LODWORD(STACK[0x61C]) = 282;
  LODWORD(STACK[0x610]) = 172782;
  v17 = v7[47] ^ 0xFC;
  LODWORD(STACK[0x5EC]) = 395214;
  LODWORD(STACK[0x5F0]) = 394552;
  LODWORD(STACK[0x5E4]) = 393228;
  v18 = (v16 | v17) + 1298282637 + ~(2 * ((v16 | v17) & 0x4D6238DF ^ v17 & 4)) + 79;
  v19 = v18 ^ (v11 - 1427908846);
  v20 = ((v7[473] ^ 0xFC) << 24) | ((v7[832] ^ 0xFC) << 8);
  v21 = (int *)STACK[0x6B8];
  *(_DWORD *)(STACK[0x6B8] + 392) = v19 ^ 0xF0FB82D4;
  LODWORD(STACK[0x5F8]) = 393890;
  v22 = v18 ^ (a5 - ((2 * a5 + 531072344) & 0x9AC471B6) - 583664761);
  v23 = v7[529] ^ 0xFC;
  v24 = v20 | ((v7[170] ^ 0xFC) << 16) | v23;
  v25 = v24 - 2087664667 - 2 * (v24 & 0x390C3FD ^ v23 & 0x18);
  v26 = (v22 ^ 0xFFFFFFA9) + (v22 ^ v25 ^ v12 ^ 0x9712F76B);
  v27 = 393228 - 965 * (LODWORD(STACK[0x680]) / 0x3C5);
  v28 = ((v9 ^ 0xE3081D44) + (v9 ^ 0x8BE51586 ^ v25 ^ v12) + 1) ^ ((v12 ^ 0xEB7DCB27) + (v25 ^ 0x8390C3E5) + 1);
  LODWORD(STACK[0x5FC]) = 175430;
  *v21 = v25 ^ v12;
  LODWORD(STACK[0x600]) = 174768;
  v21[260] = (v28 ^ (v26 + 1)) - v5 - ((2 * ((v28 ^ (v26 + 1)) - v5) + 383723478) & 0x2E25EE7A) + 578980648;
  LODWORD(STACK[0x608]) = 174106;
  v21[254] = v6
           + 329773977
           + (v19 ^ 0x4D62388D)
           + 1356380750
           - ((2 * (v6 + 329773977 + (v19 ^ 0x4D62388D)) + 864781858) & 0x2E25EE7A);
  v29 = v11 + v10 - ((2 * (v11 + v10) + 55024730) & 0x6AFB5C1A) - 148800454;
  v30 = v29 ^ (a5 - 1881947476);
  v31 = v10;
  v32 = v30 ^ 0xB57DAE0D;
  v33 = v7[765] ^ 0xFC;
  v34 = ((v7[173444 - 965 * (LODWORD(STACK[0x640]) / 0x3C5)] ^ 0xAAAAAAAA) << 24) | ((v7[406] ^ 0xAA) << 16) | ((v7[103] ^ 0xAA) << 8) | v33;
  v35 = v34 + 1523093919 - 2 * (v34 & 0x5AC891CD ^ v33 & 4) + 42;
  v36 = v35 ^ ((v30 ^ 0xB57DAE0D) + 759110277);
  v21[23] = v36 ^ 0xE7512BC6;
  v37 = LODWORD(STACK[0x634]) - 450824522;
  v38 = v37 + (v12 ^ 0x148234D8) + 1122356420 - ((2 * (v37 + (v12 ^ 0x148234D8))) & 0x85CB9988);
  v39 = v38 ^ v9;
  v40 = v30 ^ 0xB57DAE0D ^ (v31 - 1765804261);
  v30 ^= 0x4A8251F2u;
  v41 = v6 + 329773977 + v30;
  v42 = v7;
  v43 = v30 + v40 + 581381375 - ((2 * (v30 + v40 + 1)) & 0x454E59FC);
  v44 = v39 ^ 0x5E122E7F;
  v45 = v39 ^ 0x5E122E7F ^ v37;
  v39 ^= 0xA1EDD180;
  v46 = v5 - 1290322821 + v39;
  v47 = v39 + v45 + 1 - ((2 * (v39 + v45 + 1)) & 0xD8F8073A) - 327416931;
  v48 = (v29 ^ 0xB57DAE0D)
      + (v43 ^ 0xDD58D301)
      + 358595262
      - ((2 * ((v29 ^ 0xB57DAE0D) + (v43 ^ 0xDD58D301) + 1)) & 0x2ABF757A);
  v49 = (v38 ^ 0x42E5CCC4)
      + (v47 ^ 0x1383FC62)
      - 925585230
      - ((2 * ((v38 ^ 0x42E5CCC4) + (v47 ^ 0x1383FC62) + 1)) & 0x91A96162);
  v50 = ((2 * (v44 + 759110277)) & 0xCECFBFFA) + ((v44 + 759110277) ^ 0xE767DFFD);
  v51 = v42[v27 + 3972] ^ 0xFC;
  v52 = v42[LODWORD(STACK[0x61C])] ^ 0xFC;
  v53 = ((v42[395876 - 965 * (LODWORD(STACK[0x694]) / 0x3C5)] ^ 0xFC) << 24) | ((v42[396538
                                                                                   - 965
                                                                                   * (LODWORD(STACK[0x688])
                                                                                    / 0x3C5)] ^ 0xFC) << 16) | (v51 << 8) | v52;
  v54 = v53 - 15651142 - 2 * (v53 & 0x7F112EBE ^ v52 & 4);
  v55 = ((v50 + 412622851) ^ 0xFF112EBA ^ v54)
      - 1760364739
      - ((2 * ((v50 + 412622851) ^ 0xFF112EBA ^ v54)) & 0x2E25EE7A);
  v56 = (v49 ^ 0x372B4F4E) + (v49 ^ 0x5FC6478C ^ v55);
  LODWORD(STACK[0x634]) = 404709 - 965 * (LODWORD(STACK[0x644]) / 0x3C5);
  v57 = v35 ^ v48;
  v21[208] = v55;
  v58 = v35 ^ v48 ^ 0xD885DC1F ^ v55;
  v59 = 397862 - 965 * (LODWORD(STACK[0x660]) / 0x3C5);
  v60 = v43 ^ (v41 + 1);
  v61 = (v57 ^ 0xB068D4DD) + v58;
  v62 = -412622851 - v50 + (v54 ^ 0xFF112EBA);
  v63 = 397862 - 965 * (LODWORD(STACK[0x668]) / 0x3C5);
  v64 = v47 ^ (v46 + 1);
  v65 = (v64 ^ 0x1383FC62) + ((v56 + 1) ^ v62 ^ (v61 + 1));
  v66 = (v36 ^ 0x5AC8919F)
      + (v60 ^ 0x22A72CFE)
      - 711342173
      - ((2 * ((v36 ^ 0x5AC8919F) + (v60 ^ 0x22A72CFE)) + 1024303308) & 0x2E25EE7A);
  v67 = 397862 - 965 * (LODWORD(STACK[0x670]) / 0x3C5);
  v21[185] = v66;
  v68 = 178078 - 965 * (LODWORD(STACK[0x638]) / 0x3C5);
  v21[179] = v65 + 1356380751 - ((2 * (v65 + 1) + 864781858) & 0x2E25EE7A);
  v69 = v47 ^ 0x24A8B32C ^ v49;
  v70 = v49 ^ v64;
  v71 = ((2 * ((v49 ^ 0xC8D4B0B1) + 1507285244)) & 0xFEFEEEEE) + (((v49 ^ 0xC8D4B0B1) + 1507285244) ^ 0xFF7F7777);
  v72 = v69 - 8423561 - v71 - ((2 * (v69 - 8423561 - v71)) & 0xABB4F840);
  v73 = v48 ^ v60;
  v74 = v48 ^ 0x155FBABD;
  v75 = (((v42[176092 - 965 * (LODWORD(STACK[0x6B4]) / 0x3C5)] ^ 0xAAAAAAAA) << 24) | ((v42[176754
                                                                                          - 965
                                                                                          * (LODWORD(STACK[0x6B0])
                                                                                           / 0x3C5)] ^ 0xAA) << 16) | ((v42[177416 - 965 * (LODWORD(STACK[0x6A8]) / 0x3C5)] ^ 0xAA) << 8) | v42[v68] ^ 0xFC) ^ v73;
  v21[231] = v75 ^ 0x4DF2A418;
  v76 = ((2 * ((v48 ^ 0x155FBABD) + 1507285244)) & 0xDDF5BB4C) + (((v48 ^ 0x155FBABD) + 1507285244) ^ 0xEEFADDA6);
  v77 = (v43 ^ 0x37F89643 ^ v48) - 285549146 - v76 - ((2 * ((v43 ^ 0x37F89643 ^ v48) - 285549146 - v76)) & 0x68766F26);
  v78 = v50 - v71 - ((2 * (v50 - v71) + 808398580) & 0xF7E65344) - 1811234532;
  v79 = v32 - v76 - ((2 * (v32 - v76) + 947122262) & 0x2BC20A84) - 1306854035;
  v80 = (v79 ^ 0x6A1EFABD) + v74 - ((2 * ((v79 ^ 0x6A1EFABD) + v74) - 1280396806) & 0x9DF1B43E);
  v81 = v79 ^ v73;
  v82 = (v78 ^ 0x840CD65D) + v71 - ((2 * ((v78 ^ 0x840CD65D) + v71) + 16847124) & 0x7B6E28D8) + 1043832054;
  v83 = ((v42[398524 - 965 * (LODWORD(STACK[0x67C]) / 0x3C5)] ^ 0xFC) << 24) | ((v42[v67 + 1324] ^ 0xFC) << 16);
  v84 = v78 ^ v70;
  v85 = v42[v63 + 1986];
  v86 = v80 + 684733212;
  v87 = (v83 | ((v85 ^ 0xFC) << 8) | v42[v59 + 2648] ^ 0xFC) ^ v70;
  v21[133] = v87 ^ 0x7429CC45;
  v88 = ((v80 + 684733212) ^ v79 ^ v73 ^ v87 ^ 0x70258D99) + (v75 ^ 0x7FB16C27 ^ (v80 + 684733212) ^ v79 ^ v73 ^ v87);
  v89 = (v87 ^ 0xE33B3B78) + (v73 ^ 0xF06B1E17);
  v90 = 404709 - 965 * (LODWORD(STACK[0x648]) / 0x3C5);
  v91 = 397862 - 965 * (LODWORD(STACK[0x650]) / 0x3C5);
  v92 = (v70 ^ 0x1CC4C487)
      + (((v78 ^ v70 ^ 0xA0A46571) + (v78 ^ v70 ^ v75 ^ 0xAF3084CF) + 1) ^ ((v82 ^ 0xC248EB93)
                                                                          + (v82 ^ LODWORD(STACK[0x5A8]) ^ v75)
                                                                          + 1) ^ (v88 + 1));
  v93 = 397862 - 965 * (LODWORD(STACK[0x658]) / 0x3C5);
  v21[110] = v89 - 711342173 - ((2 * v89 + 1024303308) & 0x2E25EE7A);
  v94 = 178078 - 965 * (LODWORD(STACK[0x698]) / 0x3C5);
  v95 = v72 + 1440381984;
  v77 -= 1271187565;
  v96 = v81 ^ 0xA2199301;
  v21[104] = v92 + 1356380751 - ((2 * (v92 + 1) + 864781858) & 0x2E25EE7A);
  v97 = ((v77 ^ 0x4BC4C86C) + (v81 ^ 0xA2199301) + 1) ^ v79;
  v98 = ((2 * v97) & 0x79DFF7DA ^ 0x20C51208) + (v97 ^ 0x6E9D76FB);
  v99 = v84 ^ 0x5F5B9A8E;
  v100 = (v82 ^ 0x3DB7146C) + (v84 ^ 0x5F5B9A8E);
  v101 = ((2 * (((v95 ^ 0xAA2583DF) + v99 + 1) ^ v78)) & 0xE7D7FC4E ^ 0x60C1404C)
       + (((v95 ^ 0xAA2583DF) + v99 + 1) ^ v78 ^ 0xCF8B5FD1);
  v102 = ((2 * ((v78 ^ 0xBC60A1F6) - 1196423713)) & 0xD2F6FF7E) + (((v78 ^ 0xBC60A1F6) - 1196423713) ^ 0xE97B7FBF);
  v103 = (v77 ^ 0xB5939807) - v98;
  v104 = (v95 ^ 0x5472D3B4) - v101;
  v105 = (((v42[178740 - 965 * (LODWORD(STACK[0x624]) / 0x3C5)] ^ 0xAAAAAAAA) << 24) | ((v42[179402
                                                                                           - 965
                                                                                           * (LODWORD(STACK[0x6A0])
                                                                                            / 0x3C5)] ^ 0xAA) << 16) | ((v42[180064 - 965 * (LODWORD(STACK[0x620]) / 0x3C5)] ^ 0xAA) << 8) | v42[v94 + 2648] ^ 0xFC) ^ (v103 + 1022360557);
  v106 = v105 - 1643596414 - ((2 * v105) & 0x3C116B04);
  v21[156] = v106 ^ 0x23910F8D;
  v107 = ((2 * ((v79 ^ 0x52728D16) - 1196423713)) & 0xF8FF7FEA)
       + (((v79 ^ 0x52728D16) - 1196423713) ^ 0x7C7FBFF5)
       - 2088746997
       + (v106 ^ 0x9E08B5D4);
  v108 = (((v42[v93 + 3310] ^ 0xFC) << 24) | ((v42[v91 + 3972] ^ 0xFC) << 16) | ((v42[v90 - 2213] ^ 0xFC) << 8) | v42[LODWORD(STACK[0x634]) - 1551] ^ 0xFC) ^ (v104 + 1944845863);
  v109 = v108 - 1760364739 - ((2 * v108) & 0x2E25EE7A);
  v110 = ((1944845863 - (v100 - v104) + ((v100 - v104 - 1944845863) ^ 0x9712F73D ^ v109)) ^ (1944845863
                                                                                           - v101
                                                                                           + ((v101 - 1944845863) ^ 0x9712F73D ^ v109)) ^ ((((v86 ^ 0xCEF8DA1F) + v96 - v103 - 1022360557) ^ (v98 - 1022360557) ^ v106 ^ 0x61F74A2B) + (((v86 ^ 0xCEF8DA1F) + v96 - v103 - 1022360557) ^ (v98 - 1022360557) ^ v106 ^ v109 ^ 0x91A42E9) + 1))
       - v102;
  v21[58] = v109;
  v21[35] = v110 - ((2 * v110 + 268738634) & 0x2E25EE7A) - 1089124510;
  v21[29] = v107 + 1356380750 - ((2 * v107 + 864781858) & 0x2E25EE7A);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0]
                                        + 8
                                        * ((39 * ((LODWORD(STACK[0x628]) + 4) > 0xF)) ^ LODWORD(STACK[0x5DC])))
                            - 4))();
}

void sub_2188E8()
{
  int v0;
  int v1;
  int v2;

  LODWORD(STACK[0x634]) = v2;
  LODWORD(STACK[0x644]) += 10592;
  LODWORD(STACK[0x648]) += 10592;
  LODWORD(STACK[0x650]) += 10592;
  LODWORD(STACK[0x658]) += 10592;
  LODWORD(STACK[0x698]) += 10592;
  LODWORD(STACK[0x620]) = v0 + 10592;
  LODWORD(STACK[0x6A0]) += 10592;
  LODWORD(STACK[0x624]) = v1 + 10592;
  LODWORD(STACK[0x660]) += 10592;
  LODWORD(STACK[0x668]) += 10592;
  LODWORD(STACK[0x670]) += 10592;
  LODWORD(STACK[0x67C]) += 10592;
  LODWORD(STACK[0x638]) += 10592;
  LODWORD(STACK[0x6A8]) += 10592;
  LODWORD(STACK[0x6B0]) += 10592;
  LODWORD(STACK[0x6B4]) += 10592;
  LODWORD(STACK[0x680]) += 10592;
  LODWORD(STACK[0x688]) += 10592;
  LODWORD(STACK[0x694]) += 10592;
  LODWORD(STACK[0x640]) += 10592;
  JUMPOUT(0x21758CLL);
}

uint64_t sub_218A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unint64_t v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unint64_t v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unint64_t v70;
  unsigned int v71;
  unint64_t v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unint64_t v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;

  v15 = STACK[0x630];
  v16 = v9;
  LODWORD(STACK[0x6B0]) = 0;
  v17 = (v15 + 2183) | 0x41;
  v18 = STACK[0x6B8];
  v19 = *(_DWORD *)(STACK[0x6B8] + 92);
  LODWORD(STACK[0x6B4]) = v17;
  LODWORD(STACK[0x658]) = 1439497856;
  v20 = *(_DWORD *)(v18 + 4 * ((v17 ^ 0xAA330803) - 283 * (((v17 ^ 0xAA330803) + 1439497856) / 0x11B) + 1439497856));
  LODWORD(STACK[0x660]) = 2912;
  HIDWORD(v22) = v19 ^ 0x59;
  LODWORD(v22) = v19 ^ 0xBD99BA00;
  v21 = v22 >> 7;
  HIDWORD(v22) = v19 ^ 0x1BA59;
  LODWORD(v22) = v19 ^ 0xBD980000;
  v23 = v21 ^ (v19 >> 3) ^ (v22 >> 18);
  HIDWORD(v22) = v20 ^ 0x3D;
  LODWORD(v22) = v20 ^ 0x9712F700;
  v24 = (v22 >> 7) ^ (v20 >> 3);
  HIDWORD(v22) = v20 ^ 0x2F73D;
  LODWORD(v22) = v20 ^ 0x97100000;
  v25 = *(_DWORD *)(v18 + 720);
  v26 = v24 ^ (v22 >> 18);
  HIDWORD(v22) = v25 ^ 0x1BA59;
  LODWORD(v22) = v25 ^ 0xBD980000;
  v27 = (v22 >> 17) - ((2 * (v22 >> 17)) & 0xDFF42D1C) - 268822898;
  HIDWORD(v22) = v25 ^ 0x1BA59;
  LODWORD(v22) = v25 ^ 0xBD980000;
  v28 = *(_DWORD *)(v18 + 328);
  v29 = (v28 ^ 0x9712F73D) << ((v27 & 0xF ^ 0xE) + (v27 & 0xF ^ 1));
  v30 = (v22 >> 19) ^ (v25 >> 10);
  HIDWORD(v22) = v28 ^ 0x2F73D;
  LODWORD(v22) = v28 ^ 0x97100000;
  v31 = v22 >> 19;
  v32 = v30 ^ v27;
  v33 = a8 - ((2 * a8 + 365407780) & 0x298E4FF4) + 1068171020;
  HIDWORD(v22) = v12 ^ v26 ^ 0xE15BC5C;
  LODWORD(v22) = v12 ^ v26;
  v34 = v22 >> 28;
  HIDWORD(v22) = v34 ^ 0x55555555;
  LODWORD(v22) = v34 ^ 0x937D6320;
  v35 = v11 ^ 0x6606A3F ^ v26;
  v36 = 2 * a5 + 531072344;
  v37 = v11;
  v38 = (a5 - (v36 & 0x298E4FF4) + 614132390) ^ v33 ^ v23;
  v39 = (v38 ^ 0xE84CC8B4) + (v38 ^ v26 ^ 0x55169AC) + 1;
  v40 = (v28 >> 10) ^ (v28 >> 17) ^ v31 ^ v29;
  v41 = v23 ^ 0x17B3374B;
  v42 = v39 ^ ((v37 ^ 0xEB7DCB27) + v35 + 1) ^ ((v12 ^ 0xE3081D44) + ((v22 >> 4) ^ 0x5937D632) + 1);
  v43 = a5 - (v36 & 0xEA2FE95E) - 2064926885;
  v44 = ((2 * (v13 + 852535997 + (v43 ^ 0xAE80B50))) & 0xEFDAFCEA)
      + ((v13 + 852535997 + (v43 ^ 0xAE80B50)) ^ 0x77ED7E75);
  v45 = v37 ^ v12;
  v46 = ((v16 + 329773977) ^ 0xF517F4AF ^ v43)
      - ((2 * ((v16 + 329773977) ^ 0xF517F4AF ^ v43) + 1891836984) & 0x57504608)
      - 1542867680;
  v47 = v43 ^ v33;
  v48 = v12 ^ v10;
  v49 = v12 ^ v10 ^ (v8 - 1290322821);
  v50 = ((2 * ((v12 ^ 0xE3081D44) + v14 - 2127451560)) & 0xBFBDF7A6)
      + (((v12 ^ 0xE3081D44) + v14 - 2127451560) ^ 0x5FDEFBD3);
  v51 = (v47 ^ 0x9E2F2CAA) + a5 - ((2 * ((v47 ^ 0x9E2F2CAA) + a5) + 360770764) & 0xCCEA2146) + 1899333385;
  v52 = v49 - ((2 * v49 + 1891836984) & 0x488E066A) + 480810321;
  v53 = v52 ^ v45;
  v54 = v46 ^ v47;
  v55 = v48 + (v45 ^ 0xF78A299C) + 1 - ((2 * (v48 + (v45 ^ 0xF78A299C) + 1) - 170301582) & 0x85A4177E) - 1111572616;
  v56 = v32 ^ 0xEFD570E0;
  v57 = v16;
  v58 = ((v53 ^ 0x53CD2AA9) + (v53 ^ 0xAC175A62 ^ v40) + 1) ^ ((v55 ^ 0xBD2DF440) + (v55 ^ 0x42F7848B ^ v40) + 1) ^ ((v54 ^ v51 ^ v32 ^ 0x3C276FED) + (v40 ^ v54 ^ v51 ^ v32 ^ 0xC3FD1F26) + 1);
  v59 = v44 - 2 * ((v44 + 165492280) & 0x711333DA ^ v44 & 2) - 84907504;
  LODWORD(STACK[0x6A8]) = ((2 * (v44 - 2012053109 + (v54 ^ 0x4A78F051))) & 0xBFE87BFA)
                        + ((v44 - 2012053109 + (v54 ^ 0x4A78F051)) ^ 0xDFF43DFD);
  v60 = v50 - 1608448979 + (v53 ^ 0xAC32D556);
  LODWORD(STACK[0x6A0]) = v60;
  LODWORD(STACK[0x698]) = ((2 * v60) & 0xCFBA44AC) + (v60 ^ 0xE7DD2256);
  LODWORD(STACK[0x680]) = v55 ^ v52 ^ 0xE695088A;
  LOBYTE(v36) = (v44 - 2 * ((v44 + 56) & 0xDA ^ v44 & 2) + 16) ^ v51;
  v61 = ((2 * (v59 ^ v51)) & 0xFFC3FFE6 ^ 0x2EC046E6) + (v59 ^ v51 ^ 0x6887DC88);
  v62 = ((2 * (v55 ^ (v50 - 1578387238))) & 0xDBFC73FE ^ 0x81A4137E) + (v55 ^ (v50 - 1578387238) ^ 0x2F2C3240);
  LODWORD(STACK[0x694]) = v62;
  v63 = ((2 * ((v59 ^ 0x711333D8) - v61 + 2145517555)) & 0x3FFF7ECA)
      + (((v59 ^ 0x711333D8) - v61 + 2145517555) ^ 0x9FFFBF65);
  LODWORD(STACK[0x688]) = v63;
  LODWORD(STACK[0x668]) = v50 - v62;
  v64 = (v52 ^ 0x5BB8FCCA)
      - v8
      + (*(_DWORD *)(v18 + 1040) ^ 0x9712F73D)
      + (*(_DWORD *)(v18 + 604) ^ 0x9712F73D)
      + v42
      - 807722310
      + v58;
  v65 = v64 + v63 + 1610629275 + 1866179642 - ((2 * (v64 + v63 + 1610629275)) & 0xDE774874);
  *(_DWORD *)(v18 + 768) = v64 - 711342173 - ((2 * v64 + 1024303308) & 0x2E25EE7A);
  v66 = *(_DWORD *)(v18 + 1016);
  LODWORD(STACK[0x67C]) = 0;
  v67 = *(_DWORD *)(v18 + 580) ^ 0x9712F73D;
  v68 = v57 + (v66 ^ 0x9712F73D) + (v46 ^ 0x2BA82304) + v41 + 1507995784 + v56;
  v69 = ((2 * v68) & 0xFEF9D5BE) + (v68 ^ 0xFF7CEADF);
  *(_DWORD *)(v18 + 744) = v67 + 8590625 + v69 - 1760364739 - ((2 * (v67 + 8590625 + v69)) & 0x2E25EE7A);
  v70 = v18;
  v71 = v69 + v67 - (v50 - v62) - ((2 * (v69 + v67 - (v50 - v62)) + 1839644270) & 0xFC0E2D42);
  v72 = STACK[0x6D8];
  v73 = v71 + 886732248;
  LODWORD(v18) = 662 * (~HIBYTE(v65) & 0xF) + 439568;
  v74 = 662 * ((v65 >> 20) & 0xF ^ 3) + 439568;
  v75 = 662 * (HIWORD(v65) & 0xF ^ 0xB) + 439568;
  v76 = 662 * (((unsigned __int16)v65 >> 12) ^ 0xA) + 439568;
  LODWORD(v18) = ((*(unsigned __int8 *)(STACK[0x6D8]
                                      + (v18
                                                     - 965 * ((4450744 * (unint64_t)v18) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(STACK[0x6D8] + (662 * ((v65 >> 28) ^ 6) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v65 >> 28) ^ 6) + 439568)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(STACK[0x6D8] + (v75 - 965 * ((4450744 * (unint64_t)v75) >> 32))) ^ 0xFC;
  v77 = *(unsigned __int8 *)(STACK[0x6D8] + (v76 - 965 * ((4450744 * (unint64_t)v76) >> 32))) ^ 0xFC;
  v78 = 662 * ((v65 >> 8) & 0xF ^ 4) + 439568;
  v79 = 662 * ((v65 >> 4) ^ 3) + 439568;
  v80 = *(unsigned __int8 *)(STACK[0x6D8]
                           + (662 * ((-886732249 - v71) >> 28)
                                          + 439568
                                          - 965
                                          * ((4450744 * (unint64_t)(662 * ((-886732249 - v71) >> 28) + 439568)) >> 32)));
  LODWORD(v18) = (((_DWORD)v18 << 8) ^ ((*(unsigned __int8 *)(STACK[0x6D8]
                                                            + (v74
                                                                           - 965
                                                                           * ((4450744 * (unint64_t)v74) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(STACK[0x6D8] + (v78 - 965 * ((4450744 * (unint64_t)v78) >> 32))) ^ 0xFC) ^ (16 * v77);
  v81 = ((_DWORD)v18 << 8) + 626612074 - (((_DWORD)v18 << 9) & 0x4AB2AE00);
  v82 = 662 * (HIBYTE(v73) & 0xF ^ 0xE) + 439568;
  v83 = *(unsigned __int8 *)(STACK[0x6D8]
                           + (662 * (v65 & 0xF ^ 0xA)
                                          + 439568
                                          - 965
                                          * ((4450744 * (unint64_t)(662 * (v65 & 0xF ^ 0xA) + 439568)) >> 32))) ^ 0xFC;
  v84 = v83 + 805199239 - ((2 * v83) & 0xFFFFFF0F);
  v85 = (v81 ^ 0x2559576A | v84 ^ 0x2FFE5D87) ^ (16
                                               * (*(unsigned __int8 *)(STACK[0x6D8]
                                                                     + (v79
                                                                                    - 965
                                                                                    * ((4450744 * (unint64_t)v79) >> 32))) ^ 0xFC));
  LODWORD(v18) = ((*(unsigned __int8 *)(STACK[0x6D8]
                                      + (v82 - 965 * ((4450744 * (unint64_t)v82) >> 32))) ^ 0xFC) << 8) ^ ((v80 ^ 0xFC) << 12);
  v86 = 662 * (HIWORD(v73) & 0xF ^ 7) + 439568;
  v87 = 662 * (((unsigned __int16)v73 >> 12) ^ 1) + 439568;
  LODWORD(v18) = v18 | *(unsigned __int8 *)(STACK[0x6D8]
                                          + (v86 - 965 * ((4450744 * (unint64_t)v86) >> 32))) ^ 0xFC;
  v88 = *(unsigned __int8 *)(STACK[0x6D8] + (v87 - 965 * ((4450744 * (unint64_t)v87) >> 32)));
  v89 = v73 & 0xF ^ 1;
  v90 = 662 * ((v73 >> 8) & 0xF ^ 6) + 439568;
  v91 = v84 & 0xF;
  LODWORD(v18) = ((_DWORD)v18 << 8) ^ ((*(unsigned __int8 *)(STACK[0x6D8]
                                                           + (662 * ((v73 >> 20) & 0xF)
                                                                          + 439568
                                                                          - 965
                                                                          * ((4450744
                                                                            * (unint64_t)(662
                                                                                               * ((v73 >> 20) & 0xF)
                                                                                               + 439568)) >> 32))) ^ 0xFC) << 12);
  v92 = 662 * ((v73 >> 4) ^ 0xA) + 439568;
  v93 = *(unsigned __int8 *)(STACK[0x6D8] + (v90 - 965 * ((4450744 * (unint64_t)v90) >> 32))) ^ 0xFC;
  v94 = ((v18 | v93) << 8) - 769963405 - (((v18 | v93) << 9) & 0xA4369400);
  v95 = v94 ^ ((v88 ^ 0xFC) << 12);
  LODWORD(v18) = *(unsigned __int8 *)(STACK[0x6D8]
                                    + (662 * v89
                                                   + 439568
                                                   - 965
                                                   * ((4450744 * (unint64_t)(662 * v89 + 439568)) >> 32))) ^ 0xFC;
  LODWORD(v18) = v18 + 634812644 - ((2 * v18) & 0x1C8);
  v96 = (v95 ^ 0xD21B4A73 | v18 ^ 0x25D678E4) ^ (16
                                               * (*(unsigned __int8 *)(STACK[0x6D8]
                                                                     + (v92
                                                                                    - 965
                                                                                    * ((4450744 * (unint64_t)v92) >> 32))) ^ 0xFC));
  LODWORD(v18) = (v91 & 0xFFFFFF0F | (16 * (v18 & 0xF))) ^ 0x47;
  LODWORD(v18) = 662 * ((v18 - 1084186077 - ((2 * v18) & 0x46)) ^ 0xBF60A223);
  v97 = 662
      * (*(unsigned __int8 *)(STACK[0x6D8] + ((int)v18 + 466048) % 0x3C5u) ^ (16
                                                                            * (*(unsigned __int8 *)(v70 + 1629) ^ 0xFC)) ^ 0xFC);
  LOBYTE(v54) = *(_BYTE *)(STACK[0x6D8] + (v97 + 466048) % 0x3C5);
  v98 = ~*(unsigned __int8 *)(STACK[0x6D8] + (v97 - 965 * ((4450744 * (unint64_t)v97) >> 32)));
  LODWORD(v18) = 662
               * (((v98 >> 4) - ((v98 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(STACK[0x6D8] + v18 % 0x3C5))
               + 466048;
  v99 = (((v85 >> 4) | 0xFABDE9AA)
       - ((v85 >> 4) | 0xA28D0020)
       + ((v85 >> 4) & 5 | 0x80800020)) ^ 0xD8B0E9AA;
  v100 = 662 * (((v96 & 0xF0 | v99) + 903920532 - 2 * ((v96 & 0x90 | v99 & 0x35E0BB9D) ^ v99 & 9)) ^ 0x35E0BB94);
  v101 = *(unsigned __int8 *)(STACK[0x6D8] + (v100 + 466048) % 0x3C5);
  v102 = *(unsigned __int8 *)(STACK[0x6D8] + v100 % 0x3C5);
  LODWORD(v18) = 662
               * (v101 ^ (16
                        * (*(unsigned __int8 *)(STACK[0x6D8]
                                              + (v18
                                                             - 965
                                                             * ((4450744 * (unint64_t)v18) >> 32))) ^ 0xFC)) ^ 0xFC);
  v103 = *(unsigned __int8 *)(STACK[0x6D8]
                            + (_DWORD)v18
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(v18 + 466048)) >> 32) >> 1));
  v104 = *(unsigned __int8 *)(STACK[0x6D8]
                            + (v18 - 965 * ((4450744 * (unint64_t)v18) >> 32)));
  LODWORD(STACK[0x670]) = v46 ^ 0x4DDD33A7 ^ v51;
  v105 = 16 * (v103 ^ 0xFC) - ((32 * (v103 ^ 0xFC)) & 0x1280);
  v106 = ((~((v104 ^ 0xFFu) >> 3) | 0xE7) + ((v104 ^ 0xFFu) >> 4) - 3) ^ v102;
  LOBYTE(v103) = (v54 ^ 0xFC) - ((2 * (v54 ^ 0xFC)) & 0x1F);
  v107 = (v96 >> 4) & 0xF0 | (v85 >> 8) & 0xF;
  v108 = 662 * ((v107 + 457932029 - 2 * (v107 ^ (v85 >> 8) & 2)) ^ 0x1B4B7CFD);
  v109 = 662
       * (*(unsigned __int8 *)(v72 + (v108 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v72
                                                                                     + ((((2 * v106) & 0x1A6)
                                                                                       + (v106 ^ 0xBFAEE7D3)
                                                                                       + 1079057464)
                                                                                      * (((2 * v106) & 0x1A6)
                                                                                       + (v106 ^ 0xBFAEE7D3)
                                                                                       + 1079057464)
                                                                                      - 109561
                                                                                      + (-1079057133
                                                                                       - (((2 * v106) & 0x1A6)
                                                                                        + (v106 ^ 0xBFAEE7D3)))
                                                                                      * (((2 * v106) & 0x1A6)
                                                                                       + (v106 ^ 0xBFAEE7D3)
                                                                                       + 1079057133))
                                                                                     % 0x3C5) ^ 0xFC)) ^ 0xFC);
  v110 = *(unsigned __int8 *)(v72
                            + v109
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v109 + 466048)) >> 32) >> 1)) ^ 0xFC;
  v111 = (*(unsigned __int8 *)(v72 + (v109 - 965 * ((4450744 * (unint64_t)v109) >> 32))) ^ 0xFCu) >> ((v54 & 4 ^ 4) + (v54 & 4));
  v112 = (v111 - ((2 * v111) & 0xF8) - 4) ^ *(unsigned __int8 *)(v72 + v108 % 0x3C5);
  v113 = ((v95 >> 8) & 0xF0 | ((unsigned __int16)v81 >> 12)) ^ 0x45;
  v114 = 662 * ((v113 - 6058145 - ((2 * v113) & 0xBE)) ^ 0xFFA38F5F);
  v115 = 662
       * (*(unsigned __int8 *)(v72 + (v114 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v72
                                                                                     + (662 * v112 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v112 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  v116 = *(unsigned __int8 *)(v72
                            + v115
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v115 + 466048)) >> 32) >> 1));
  v117 = ~*(unsigned __int8 *)(v72 + (v115 - 965 * ((4450744 * (unint64_t)v115) >> 32)));
  v118 = ((v117 >> 4) - ((v117 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v72 + v114 % 0x3C5);
  v119 = ((v116 ^ 0xFC) << 12) ^ (v110 << 8);
  v120 = ((v95 >> 12) & 0xF0 | HIWORD(v81) & 0xF) ^ 0xB9;
  v121 = 662 * ((v120 - 1092377860 - ((2 * v120) & 0x1F8)) ^ 0xBEE3A2FC);
  v122 = *(unsigned __int8 *)(v72 + v121 % 0x3C5);
  v123 = 662
       * (*(unsigned __int8 *)(v72 + (v121 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v72
                                                                                     + ((((2 * v118) & 0x1B6)
                                                                                       + (v118 ^ 0xFEF7EADB)
                                                                                       + 17307952)
                                                                                      * (((2 * v118) & 0x1B6)
                                                                                       + (v118 ^ 0xFEF7EADB)
                                                                                       + 17307952)
                                                                                      - 109561
                                                                                      + (-17307621
                                                                                       - (((2 * v118) & 0x1B6)
                                                                                        + (v118 ^ 0xFEF7EADB)))
                                                                                      * (((2 * v118) & 0x1B6)
                                                                                       + (v118 ^ 0xFEF7EADB)
                                                                                       + 17307621))
                                                                                     % 0x3C5) ^ 0xFC)) ^ 0xFC);
  v124 = v123 + 466048 - 965 * (((8901487 * (unint64_t)(v123 + 466048)) >> 32) >> 1);
  v125 = *(unsigned __int8 *)(v72 + (v123 - 965 * ((4450744 * (unint64_t)v123) >> 32))) ^ 0xFF;
  v126 = (HIWORD(v94) & 0xF0 | (v81 >> 20) & 0xF) ^ 0x15;
  v127 = 662 * (((~(v125 >> 3) | 0xE7) + (v125 >> 4) - 3) ^ v122) + 466048;
  v128 = 662 * ((v126 + 164974779 - ((2 * v126) & 0x77777777)) ^ 0x9D550BB);
  v129 = 662
       * (*(unsigned __int8 *)(v72 + (v128 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v72
                                                                                     + (v127 - 965 * ((4450744 * (unint64_t)v127) >> 32))) ^ 0xFC)) ^ 0xFC);
  v130 = ((v94 >> 20) & 0xF0 | HIBYTE(v81) & 0xF) ^ 0x25;
  v131 = (v130 + 1612389857 - 2 * (v130 & 0xEB ^ HIBYTE(v81) & 0xA)) ^ 0x601B1DE1;
  v132 = 662 * v131;
  v133 = ((662 * v131) ^ 0xBEB783ED) + ((1324 * v131) & 0x7D6F07D8);
  v134 = ~*(unsigned __int8 *)(v72 + (v129 - 965 * ((4450744 * (unint64_t)v129) >> 32)));
  v135 = 662
       * (((v134 >> 4) - ((v134 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v72 + v128 % 0x3C5))
       + 466048;
  LOBYTE(v103) = v103 - 113;
  v136 = ((*(unsigned __int8 *)(v72
                              + v129
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v129 + 466048)) >> 32) >> 1)) ^ 0xFC) << 20) ^ ((*(unsigned __int8 *)(v72 + v124) ^ 0xFC) << 16);
  v137 = 662
       * (*(unsigned __int8 *)(v72
                             + (v133 + 1095735443)
                             % (-1032533004 - ((v133 + 497811) & 0x4C82E | (-1095735444 - v133) & 0xC274C82F))) ^ (16 * (*(unsigned __int8 *)(v72 + (v135 - 965 * ((4450744 * (unint64_t)v135) >> 32))) ^ 0xFC)) ^ 0xFC);
  v138 = ((2 * (v91 & 0xFFFFFF0F | (16 * (v103 & 0xF)))) & 0xBE ^ 0xAE)
       + ((v91 & 0xFFFFFF0F | (16 * (v103 & 0xF))) ^ 0x7FF985A8);
  v139 = v137 + 466048 - 965 * (((8901487 * (unint64_t)(v137 + 466048)) >> 32) >> 1);
  v140 = ~*(unsigned __int8 *)(v72 + (v137 - 965 * ((4450744 * (unint64_t)v137) >> 32)));
  v141 = 662
       * (((v140 >> 4) - ((v140 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v72 + v132 % 0x3C5))
       + 466048;
  v142 = 662 * ((HIBYTE(v94) & 0xF0 | (v81 >> 28)) ^ 0xD2) + 466048;
  v143 = 662
       * (*(unsigned __int8 *)(v72 + (v142 - 965 * ((4450744 * (unint64_t)v142) >> 32))) ^ (16 * (*(unsigned __int8 *)(v72 + (v141 - 965 * ((4450744 * (unint64_t)v141) >> 32))) ^ 0xFC)) ^ 0xFC)
       + 466048;
  v144 = ((v138 - 2147058378) * (v138 - 2147058378) - 109561 + (2147058709 - v138) * (v138 - 2147058709)) % 0x3C5;
  v145 = v119 ^ (v105 + 421517643);
  v146 = ((v105 + 75) ^ v103) & 0xF0 ^ 0xC0 | v99;
  v147 = v145 ^ 0x254B0AC0 ^ v136;
  v148 = v147 ^ ((*(unsigned __int8 *)(v72 + v139) ^ 0xFC) << 24);
  v149 = ((v145 >> 4) & 0xF0 | (v85 >> 8) & 0xF) ^ 0x90;
  v150 = (662 * v146 + 218460) % 0x3C5u;
  v151 = 662 * v149 + 218460 - 965 * ((4450744 * (unint64_t)(662 * v149 + 218460)) >> 32);
  v152 = ((v147 >> 12) & 0xF0 | HIWORD(v81) & 0xF) ^ 0x49;
  v153 = 662 * (((v119 >> 8) & 0xF0 | ((unsigned __int16)v81 >> 12)) ^ 5) + 218460;
  v154 = v153 - 965 * ((4450744 * (unint64_t)v153) >> 32);
  v155 = 662 * v152 + 218460 - 965 * ((4450744 * (unint64_t)(662 * v152 + 218460)) >> 32);
  v156 = 662 * ((HIWORD(v136) & 0xF0 | (v81 >> 20) & 0xF) ^ 5) + 218460;
  v157 = v156 - 965 * ((4450744 * (unint64_t)v156) >> 32);
  v158 = ((v148 ^ ((*(unsigned __int8 *)(v72
                                       + v143
                                       - 965 * (((8901487 * (unint64_t)v143) >> 32) >> 1)) ^ 0xC) << 28)) >> 24) & 0xF0 | (v81 >> 28);
  v159 = ((2 * v158) & 0x1BC ^ 0x24) + (v158 ^ 0x5B7FEFEC);
  v160 = 662 * (((v148 >> 20) & 0xF0 | HIBYTE(v81) & 0xF) ^ 0xC5) + 218460;
  LODWORD(v70) = STACK[0x6B0];
  v161 = ((*(unsigned __int8 *)(v72
                              + ((v159 - 1535110473) * (v159 - 1535110473)
                               - 109561
                               + (1535110804 - v159) * (v159 - 1535110804))
                              % 0x3C5u) ^ 0xC) << 28) ^ ((*(unsigned __int8 *)(v72
                                                                             + (v160
                                                                                            - 965
                                                                                            * ((4450744
                                                                                              * (unint64_t)v160) >> 32))) ^ 0xFC) << 24);
  v162 = STACK[0x67C];
  v163 = *(unsigned __int8 *)(v72 + v144);
  v164 = (v61 - 2 * ((v61 + 559925692) & 0x6F3BA43B ^ v36 & 1) - 1868861962) ^ 0xBD99BA59 ^ v65;
  v165 = v163 ^ (16 * (*(unsigned __int8 *)(v72 + v150) ^ 0xFC));
  v166 = v165 ^ ((*(unsigned __int8 *)(v72 + v151) ^ 0xFC) << 8);
  v167 = v166 ^ ((*(unsigned __int8 *)(v72 + v154) ^ 0xFC) << 12);
  v168 = v167 ^ ((*(unsigned __int8 *)(v72 + v155) ^ 0xFC) << 16);
  v169 = v168 ^ ((*(unsigned __int8 *)(v72 + v157) ^ 0xFC) << 20);
  v170 = STACK[0x6B8];
  *(_DWORD *)(STACK[0x6B8] + 4 * (unsigned __int16)(v162 - 18528 - 283 * ((((_WORD)v162 - 18528) & 0xFFF0u) / 0x11B))) = v164;
  v171 = (((v161 - ((2 * v161) & 0xA8000000) - 725297868) ^ v169) >> 24) ^ 0xD4;
  v172 = 662 * ((v166 >> 8) & 0xF)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * ((v166 >> 8) & 0xF) + 454132)) >> 32);
  v173 = ((v165 >> 3) | 0xFFFFFFE1) - (v165 >> 4) + 76574783;
  v174 = STACK[0x630];
  v175 = ((((((*(unsigned __int8 *)(v72
                                  + (662 * (v171 & 0xF)
                                                 + 454132
                                                 - 965
                                                 * ((4450744 * (unint64_t)(662 * (v171 & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v72 + (662 * (((v171 - ((2 * v171) & 0x180) + 2027223744) >> 4) ^ 0x78D4FAC) + 454132) % 0x3C5) ^ 0xFC) << 12) | *(unsigned __int8 *)(v72 + (662 * (HIWORD(v168) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v168) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v72 + (662 * ((v169 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v169 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v72 + v172) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v72 + (662 * ((unsigned __int16)v167 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v167 >> 12) + 454132)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v72 + (662 * (v163 & 0xF ^ 0xC) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v163 & 0xF ^ 0xCu) + 454132)) >> 32))) ^ 0xFC;
  *(_DWORD *)(v170 + 4 * (unsigned __int16)(v162 + 3328 - 283 * ((((_WORD)v162 + 3328) & 0xFFF0u) / 0x11B))) = (LODWORD(STACK[0x694]) - ((2 * LODWORD(STACK[0x694]) + 1720131424) & 0x443423F4) + 1432199594) ^ (16 * (*(unsigned __int8 *)(v72 + 662 * (((2 * v173) & 0x15C ^ 0x5C) + (v173 ^ 0x4907281)) % 0x3C5) ^ 0xFC)) ^ 0xB508E6C7 ^ v175;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0] + 8 * ((2620 * ((_DWORD)v70 == 47)) ^ (v174 + 482))) - 4))();
}

void sub_21A268()
{
  JUMPOUT(0x218A64);
}

uint64_t sub_21A2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14)
{
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  int v41;
  unsigned __int8 v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  unint64_t v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unint64_t v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unsigned int v133;
  int v134;
  unint64_t v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  unsigned int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unint64_t v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  int v338;
  int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  int v367;
  int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  int v380;
  int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  unsigned int v391;
  int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  int v457;
  unsigned int v458;
  unsigned int v459;
  int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  unsigned int v465;
  int v466;
  unsigned int v467;
  unint64_t v468;
  int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  int v474;
  int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  int v480;
  unsigned int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  unsigned int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  int v505;
  unsigned int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  int v520;
  int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  int v529;
  int v530;
  int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  int v541;
  unsigned int v542;
  int v543;
  unsigned int v544;
  unsigned int v545;
  unsigned int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  uint64_t v552;
  unsigned int v553;
  unsigned int v554;
  unint64_t v555;
  int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  unsigned int v563;
  int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  int v571;
  unsigned int v572;
  int v573;
  unsigned int v574;
  unsigned int v575;
  int v576;
  unsigned int v577;
  int v578;
  unsigned int v579;
  unsigned int v580;
  int v581;
  int v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  unsigned int v595;
  unsigned int v596;
  int v597;
  int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  int v609;
  unsigned int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  int v615;
  unsigned int v616;
  unsigned int v617;
  unsigned int v618;
  unsigned int v619;
  unsigned int v620;
  int v621;
  unsigned int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  unsigned int v628;
  unsigned int v629;
  unsigned int v630;
  unsigned int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  int v642;
  unsigned int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  int v649;
  int v650;
  int v651;
  unsigned int v652;
  int v653;
  int v654;
  unsigned int v655;
  int v656;
  int v657;
  unsigned int v658;
  int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  unsigned int v663;
  int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  int v669;
  unsigned int v670;
  unsigned int v671;
  unsigned int v672;
  unsigned int v673;
  unsigned int v674;
  unsigned int v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  int v682;
  unsigned int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  int v687;
  int v688;
  unsigned int v689;
  unsigned int v690;
  unsigned int v691;
  int v692;
  int v693;
  unsigned int v694;
  int v695;
  int v696;
  int v697;
  int v698;
  int v699;
  unsigned int v700;
  int v701;
  unsigned int v702;
  int v703;
  unsigned int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  unsigned __int8 v708;
  int v709;
  int v710;
  int v711;
  unsigned int v712;
  unsigned int v713;
  int v714;
  unsigned int v715;
  unsigned int v716;
  int v717;
  unsigned int v718;
  unsigned int v719;
  int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  int v727;
  int v728;
  int v729;
  int v730;
  int v731;
  unsigned int v732;
  unsigned int v733;
  int v734;
  unsigned int v735;
  int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  unsigned int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  int v758;
  unsigned int v759;
  int v760;
  int v761;
  int v762;
  unsigned int v763;
  int v764;
  int v765;
  int v766;
  unsigned int v767;
  int v768;
  int v769;
  unsigned int v770;
  unsigned int v771;
  unsigned int v772;
  unsigned int v773;
  unsigned int v774;
  unsigned int v775;
  unsigned int v776;
  int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  unsigned int v783;
  unsigned int v784;
  int v785;
  unsigned int v786;
  unsigned int v787;
  int v788;
  unsigned int v789;
  unint64_t v790;
  int v791;
  unsigned int v792;
  int v793;
  int v794;
  unsigned int v795;
  int v796;
  unsigned int v797;
  unsigned int v798;
  unsigned int v799;
  unsigned int v800;
  int v801;
  unsigned int v802;
  unsigned int v803;
  unsigned int v804;
  int v805;
  int v806;
  unsigned int v807;
  unsigned int v808;
  unsigned int v809;
  unsigned int v810;
  int v811;
  int v812;
  int v813;
  unsigned int v814;
  unsigned int v815;
  int v816;
  unsigned int v817;
  int v818;
  int v819;
  int v820;
  unsigned int v821;
  int v822;
  unsigned int v823;
  unsigned int v824;
  int v825;
  int v826;
  int v827;
  int v828;
  unint64_t v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  int v833;
  unsigned int v834;
  int v835;
  int v836;
  int v837;
  int v838;
  int v839;
  int v840;
  int v841;
  unsigned int v842;
  unsigned int v843;
  unsigned int v844;
  unsigned int v845;
  unsigned int v846;
  int v847;
  unsigned int v848;
  unsigned int v849;
  unsigned int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  unsigned int v854;
  int v855;
  unsigned int v856;
  unsigned int v857;
  unsigned int v858;
  int v859;
  int v860;
  int v861;
  unsigned int v862;
  unsigned int v863;
  unsigned int v864;
  int v865;
  unsigned int v866;
  int v867;
  int v868;
  unsigned int v869;
  int v870;
  unsigned int v871;
  unsigned int v872;
  int v873;
  int v874;
  int v875;
  unsigned int v876;
  unsigned int v877;
  unsigned int v878;
  unsigned int v879;
  int v880;
  int v881;
  unsigned int v882;
  unsigned int v883;
  int v884;
  int v885;
  unsigned int v886;
  unsigned int v887;
  int v888;
  unsigned int v889;
  unsigned int v890;
  unsigned int v891;
  unint64_t v892;
  int v893;
  unsigned int v894;
  int v895;
  unsigned int v896;
  int v897;
  unsigned int v898;
  int v899;
  int v900;
  unsigned int v901;
  unsigned int v902;
  int v903;
  unsigned int v904;
  int v905;
  unsigned int v906;
  int v907;
  unsigned int v908;
  unsigned int v909;
  int v910;
  unsigned int v911;
  int v912;
  int v913;
  unsigned int v914;
  unsigned int v915;
  unsigned int v916;
  int v917;
  int v918;
  unsigned int v919;
  unsigned int v920;
  int v921;
  unsigned int v922;
  unsigned int v923;
  unsigned int v924;
  unsigned int v925;
  int v926;
  int v927;
  unsigned int v928;
  unsigned int v929;
  unsigned int v930;
  int v931;
  unsigned int v932;
  int v933;
  unsigned int v934;
  unsigned int v935;
  unsigned int v936;
  unsigned int v937;
  int v938;
  unsigned int v939;
  unsigned int v940;
  unsigned int v941;
  unsigned int v942;
  int v943;
  unsigned int v944;
  unsigned int v945;
  unsigned int v946;
  unsigned int v947;
  unsigned int v948;
  unsigned int v949;
  int v950;
  unsigned int v951;
  unsigned int v952;
  int v953;
  unsigned int v954;
  unsigned int v955;
  int v956;
  unsigned int v957;
  unsigned int v958;
  unsigned int v959;
  unsigned int v960;
  unsigned int v961;
  unsigned int v962;
  unsigned int v963;
  int v964;
  int v965;
  unsigned int v966;
  unsigned int v967;
  unsigned int v968;
  unsigned int v969;
  unsigned int v970;
  unsigned int v971;
  unsigned int v972;
  unsigned int v973;
  unsigned int v974;
  unsigned int v975;
  int v976;
  unsigned int v977;
  int v978;
  unsigned int v979;
  unsigned int v980;
  unsigned int v981;
  unsigned int v982;
  unsigned int v983;
  int v984;
  int v985;
  int v986;
  unsigned int v987;
  unsigned int v988;
  int v989;
  unsigned int v990;
  unsigned int v991;
  int v992;
  int v993;
  int v995;
  int v996;
  unsigned int v997;
  unsigned int v998;
  unsigned int v999;
  unsigned int v1000;
  int v1001;
  unsigned int v1002;
  unsigned int v1003;
  unsigned int v1004;
  unsigned int v1005;
  unsigned int v1006;
  int v1007;
  unsigned int v1008;
  unsigned int v1009;
  int v1010;
  unsigned int v1011;
  unsigned int v1012;
  unsigned int v1013;
  int v1014;
  unsigned int v1015;
  unsigned int v1016;
  unsigned int v1017;
  unsigned int v1018;
  unsigned int v1019;
  unsigned int v1020;
  unsigned int v1021;
  unsigned int v1022;
  unsigned int v1023;
  unsigned int v1024;
  unsigned int v1025;
  char v1026;
  unsigned int v1027;
  int v1028;
  int v1029;
  unsigned int v1030;
  unsigned int v1031;
  int v1032;
  unsigned int v1033;
  unsigned int v1034;
  int v1035;
  unsigned int v1036;
  unsigned int v1037;

  v24 = *(unsigned __int8 *)(STACK[0x6B8] + 1629) ^ 0xFC;
  LODWORD(STACK[0x650]) = 16 * v24;
  LODWORD(STACK[0x658]) = 32 * v24;
  v25 = 16 * v24 - 1977203719 - ((32 * v24) & 0x7E0);
  LODWORD(STACK[0x6A8]) = v25;
  v26 = a5 - ((2 * a5 + 531072344) & 0xC3F35932) + 1909288773;
  LODWORD(STACK[0x6B0]) = v26;
  v27 = ((2 * (v26 ^ (v16 - 25054717))) & 0xB5FFFBFE ^ 0x81F35932) + (v26 ^ (v16 - 25054717) ^ 0xBB065166);
  v28 = ((2 * (v18 ^ (v23 - 1368693695))) & 0xBD2EFF36 ^ 0x392EC536) + (v18 ^ (v23 - 1368693695) ^ 0xC2609D20);
  LODWORD(STACK[0x6A0]) = v28;
  v29 = ((v15 + 1588800914) ^ 0x15403E3B)
      - v27
      - 1625985702
      + (~(2 * (((v15 + 1588800914) ^ 0x15403E3B) - v27 + 1526726143)) | 0x77D52149)
      + 1;
  LODWORD(STACK[0x698]) = v29;
  v30 = ((v29 & 0x15403E3B ^ 0x11401020 | v29 & 0x15403E3B ^ 0x4002E1B) ^ (v14 - 1584876284)) - v28;
  LODWORD(STACK[0x680]) = v30;
  v31 = v25 ^ 0x8A2643F9;
  v32 = v29 ^ 0x44156F5B;
  v33 = LODWORD(STACK[0x4D0])
      - 1654404774
      + (v29 ^ 0x44156F5B)
      - ((2 * (LODWORD(STACK[0x4D0]) - 1654404774 + (v29 ^ 0x44156F5B))) & 0x763526EA)
      - 1155886219;
  v34 = LODWORD(STACK[0x4F0])
      - v30
      + 2023225002
      - 2 * ((LODWORD(STACK[0x4F0]) - v30 + 447191724) & 0x5DF05BFF ^ (LODWORD(STACK[0x4F0]) - v30) & 1);
  v35 = STACK[0x6D8];
  v36 = ((~(v33 >> 23) & 0x10) + (HIBYTE(v33) & 0xF ^ 0x293)) * v19;
  v37 = ((v33 >> 20) & 0xF ^ 1) * v19 + 439568;
  v38 = ((*(unsigned __int8 *)(STACK[0x6D8] + (v36 - 965 * ((v36 * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(STACK[0x6D8] + (((v33 >> 28) ^ 0xB) * v19 + 439568 - 965 * (((((v33 >> 28) ^ 0xB) * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  v39 = (HIWORD(v33) & 0xF ^ 0xA) * v19 + 439568;
  v40 = v38 | *(unsigned __int8 *)(STACK[0x6D8] + (v39 - 965 * ((v39 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v41 = *(unsigned __int8 *)(STACK[0x6D8] + (v37 - 965 * ((v37 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v42 = LOBYTE(STACK[0x4D0]) + 90 + (v29 ^ 0x5B) - ((2 * (LOBYTE(STACK[0x4D0]) + 90 + (v29 ^ 0x5B))) & 0xEA) + 117;
  LODWORD(STACK[0x688]) = v33;
  v43 = (((unsigned __int16)v33 >> 12) ^ 9) * v19 + 439568;
  v44 = ((v33 >> 8) & 0xF ^ 3) * v19 + 439568;
  v45 = ((v42 >> 4) ^ 7) * v19 + 439568;
  v46 = (v40 << 8) ^ (v41 << 12);
  v47 = *(unsigned __int8 *)(v35 + (v45 - 965 * ((v45 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v48 = *(unsigned __int8 *)(v35
                           + ((v33 & 0xF ^ 5) * v19
                                          + 439568
                                          - 965 * ((((v33 & 0xF ^ 5) * v19 + 439568) * (unint64_t)v20) >> 32)));
  v49 = *(unsigned __int8 *)(v35 + (v44 - 965 * ((v44 * (unint64_t)v20) >> 32))) ^ v46 ^ (16 * (*(unsigned __int8 *)(v35 + (v43 - 965 * ((v43 * (unint64_t)v20) >> 32))) ^ 0xFC));
  LODWORD(STACK[0x628]) = a8;
  v50 = ((v49 ^ 0xFC) << 8) - 1870594411 - (((v49 ^ 0xFC) << 9) & 0x2101FC00);
  v51 = (HIBYTE(v34) & 0xF ^ 0xD) * v19 + 439568;
  v52 = (~(v34 >> 20) & 0xF) * v19 + 439568;
  v53 = *(unsigned __int8 *)(v35 + (v52 - 965 * ((v52 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v54 = (v48 ^ 0xFC) + 1990680337 - ((2 * (v48 ^ 0xFC)) & 0x22222222);
  v55 = (v50 ^ 0x9080FE95 | v54 ^ 0x76A75F11) ^ (16 * v47);
  v56 = (((unsigned __int16)v34 >> 12) ^ 5) * v19 + 439568;
  v57 = ((((*(unsigned __int8 *)(v35 + (v51 - 965 * ((v51 * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (((v34 >> 28) ^ 0xD) * v19 + 439568 - 965 * (((((v34 >> 28) ^ 0xD) * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + ((HIWORD(v34) & 0xF) * v19 + 439568 - 965 * ((((HIWORD(v34) & 0xF) * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ (v53 << 12);
  v58 = ((v34 >> 8) & 0xF ^ 0xB) * v19 + 439568;
  v59 = *(unsigned __int8 *)(v35 + (v56 - 965 * ((v56 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v60 = ~(v34 >> 4) & 0xF;
  v61 = *(unsigned __int8 *)(v35
                           + ((v34 & 0xF ^ 0xE) * v19
                                          + 439568
                                          - 965 * ((((v34 & 0xF ^ 0xE) * v19 + 439568) * (unint64_t)v20) >> 32)));
  v62 = ((v57 | *(unsigned __int8 *)(v35 + (v58 - 965 * ((v58 * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ (v59 << 12);
  v63 = (v61 ^ 0xFC) + 969753548 - ((2 * (v61 ^ 0xFC)) & 0x99999999);
  v64 = v63 ^ 0x39CD43CC | v62;
  v65 = *(unsigned __int8 *)(v35
                           + (v60 * v19
                                          + 439568
                                          - 965 * (((v60 * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC;
  v66 = ((2 * (v54 & 0xF ^ 0x6C59E0C3)) | 0x49AAD598) - (v54 & 0xF ^ 0x6C59E0C3);
  v67 = (((v66 - 617966284) & 0x88008B0 ^ 0x800260A1) + ((v66 - 617966284) & 0x400C834F) - 1) ^ 0xC88EEAAE;
  LODWORD(STACK[0x670]) = v67;
  v68 = ((((16 * (v63 & 0xF)) ^ 0xC0 | v67) - 1098887996 - 2
                                                         * (((16 * (v63 & 0xF)) ^ 0xC0 | v67) & 0x3E804CC5 ^ v66 & 1)) ^ 0xBE804CC4)
      * v19;
  v69 = (v68 + 466048) % 0x3C5;
  v70 = *(unsigned __int8 *)(v35 + v68 % 0x3C5);
  v71 = v64 ^ (16 * v65);
  v72 = *(unsigned __int8 *)(v35 + v69) ^ v31;
  LODWORD(STACK[0x648]) = v55;
  v73 = ((v55 >> 4) ^ 0xF6FD733) & 0x4D8359 ^ 0x6B1F0252 ^ (-1800569153
                                                          - (((v55 >> 4) ^ 0xF6FD733) & 0x408140 | 0x94AD7EBF)
                                                          + (((v55 >> 4) ^ 0xF6FD733) & 0xD0216 | 0x6B528140));
  v74 = (v72 ^ 0xFC) * v19;
  LODWORD(STACK[0x644]) = v74;
  v75 = ~*(unsigned __int8 *)(v35 + v74 % 0x3C5);
  v76 = (((v75 >> 4) - ((v75 >> 3) & 0x18) - 4) ^ v70) * v19 + 466048;
  v77 = (((2 * v73) & 0x87E9610) - v73 - 1144998665) ^ 0xBB8D37E6;
  LODWORD(STACK[0x660]) = v77;
  v78 = (((v77 | v71 & 0xF0) - 1349527017 - ((2 * (v77 | v71 & 0xF0)) & 0x5F1FB42E)) ^ 0xAF8FDA17) * v19;
  v79 = *(unsigned __int8 *)(v35 + (v78 + 466048) % 0x3C5);
  v80 = *(unsigned __int8 *)(v35 + v78 % 0x3C5);
  v81 = (v79 ^ (16
              * (*(unsigned __int8 *)(v35 + (v76 - 965 * ((v76 * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
      * v19;
  LODWORD(STACK[0x630]) = v81;
  v82 = *(unsigned __int8 *)(v35 + (v81 - 965 * ((v81 * (unint64_t)v20) >> 32))) ^ 0xFF;
  v83 = (((~(v82 >> 3) | 0xE7) + (v82 >> 4) - 3) ^ v80) * v19 + 466048;
  v84 = (v71 >> 4) & 0xF0 | (v55 >> 8) & 0xF;
  v85 = ((v84 - 1162187292 - ((2 * v84) & 0x1C8)) ^ 0xBABA6DE4) * v19;
  v86 = *(unsigned __int8 *)(v35 + (v85 + 466048) % 0x3C5) ^ (16
                                                            * (*(unsigned __int8 *)(v35
                                                                                  + (v83
                                                                                                 - 965
                                                                                                 * ((v83 * (unint64_t)v20) >> 32))) ^ 0xFC));
  LODWORD(STACK[0x624]) = v86 ^ 0xFC;
  v87 = (((v86 ^ 0xFC) + 331) ^ 0xC9B3CFED) + 910962707 + ((2 * ((v86 ^ 0xFC) + 331)) & 0x1FDA);
  v88 = ~*(unsigned __int8 *)(v35 + ((v86 ^ 0xFC) + (v86 ^ 0xFC) * (v86 ^ 0xFFFFFF03) - 109561 + v87 * v87) % 0x3C5);
  v89 = ((v88 >> 4) - ((v88 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v85 % 0x3C5);
  v90 = ((v62 >> 8) & 0xF0 | ((unsigned __int16)v50 >> 12)) ^ 0xF;
  v91 = ((v90 - 1423534190 - ((2 * v90) & 0x124)) ^ 0xAB269792) * v19;
  v92 = HIWORD(v62);
  v93 = (*(unsigned __int8 *)(v35 + (v91 + 466048) % 0x3C5) ^ (16
                                                             * (*(unsigned __int8 *)(v35
                                                                                   + (v89 * v19
                                                                                                  + 466048
                                                                                                  - 965 * (((v89 * v19 + 466048) * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
      * v19;
  LODWORD(STACK[0x620]) = v93;
  v94 = *(unsigned __int8 *)(v35 + v91 % 0x3C5);
  v95 = ~*(unsigned __int8 *)(v35 + (v93 - 965 * ((v93 * (unint64_t)v20) >> 32)));
  v96 = (((v95 >> 4) - ((v95 >> 3) & 0x18) - 4) ^ v94) * v19 + 465083;
  v97 = (-2
       - ((~((HIWORD(v50) ^ 0xDCFC115E) & 0x9C386942) | 0xD8324E60)
        + ((HIWORD(v50) ^ 0xDCFC115E) & 0x98304840 | 0x27CDB19F))) ^ (HIWORD(v50) ^ 0xDCFC115E) & 0x9C38694D;
  v98 = (v97 & 0xFEE083E0 ^ 0xBAE080C0) + (v97 ^ 0x440A4F22) - ((v97 ^ 0x440A4F22) & 0xFEE083E0);
  v99 = (((v98 ^ 0x62D882AC | (v62 >> 12) & 0xF0) + 1651939598 - ((2 * (v98 ^ 0x62D882AC)) & 0x44ED321C)) ^ 0x6276990E)
      * v19;
  v100 = *(unsigned __int8 *)(v35 + (v99 + 466048) % 0x3C5);
  v101 = *(unsigned __int8 *)(v35 + v99 % 0x3C5);
  v102 = (v100 ^ (16
                * (*(unsigned __int8 *)(v35 + (v96 - 965 * ((v96 * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
       * v19;
  LODWORD(STACK[0x614]) = v102;
  v103 = ~*(unsigned __int8 *)(v35 + (v102 - 965 * ((v102 * (unint64_t)v20) >> 32)));
  LODWORD(STACK[0x610]) = v50;
  v104 = (((v103 >> 4) - ((v103 >> 3) & 0x18) - 4) ^ v101) * v19 + 466048;
  v105 = v92 >> ((104 * ((v98 ^ 0xAC) + (v98 ^ 0xC3)) - 20) & 0xFC);
  LODWORD(STACK[0x618]) = v105 - ((2 * v105) & 0xBD6) + 594736619;
  v106 = *(unsigned __int8 *)(v35 + (v104 - 965 * ((v104 * (unint64_t)v20) >> 32)));
  LODWORD(v105) = ((v50 >> 20) & 0xF | (16 * (((_BYTE)v105 - ((2 * (_BYTE)v105) & 0xD6) - 21) & 0xF))) ^ 0xB8;
  v107 = (v105 + 1858489290 - 2 * (v105 & 0xCB ^ (v50 >> 20) & 1)) ^ 0x6EC64BCA;
  LODWORD(STACK[0x608]) = v107;
  v108 = *(unsigned __int8 *)(v35 + (v107 * v19 + 466048) % 0x3C5u) ^ (16 * (v106 ^ 0xFC)) ^ 0xFC;
  LODWORD(STACK[0x600]) = v108 * v19;
  v109 = v108 * v19 + 2127249750 - ((1324 * v108) & 0x1682AC);
  LODWORD(STACK[0x5FC]) = (v109 ^ 0x7ECB4156u) % ((v109 & 0x3C4 ^ 0x281) + (v109 & 0x3C4 ^ 0x144u));
  LODWORD(v92) = LODWORD(STACK[0x6A0]) + v22 - ((2 * (LODWORD(STACK[0x6A0]) + v22) + 582929964) & 0x58C3CDEC);
  v110 = LODWORD(STACK[0x6A0]) - ((2 * LODWORD(STACK[0x6A0]) + 414612874) & 0x21A576A8) - 584189415;
  v111 = LODWORD(STACK[0x4DC])
       + 841318848
       + v27
       + v21
       - ((2 * (LODWORD(STACK[0x4DC]) + 841318848 + v27 + v21) + 111843446) & 0x44C779F6)
       - 440858314;
  LODWORD(STACK[0x6A0]) = v111;
  v1034 = (v111 & 0xF ^ 0xB) * v19
        + 439568
        - 965 * ((((v111 & 0xF ^ 0xBu) * v19 + 439568) * (unint64_t)v20) >> 32);
  LODWORD(v105) = *(unsigned __int8 *)(v35 + v1034) ^ 0xFC;
  v1032 = v105 - 1568165378 - ((2 * v105) & 0x1FC);
  v112 = v92 + 2109820428;
  v1026 = v92 + 12;
  v1029 = ((v92 + 2109820428) ^ 0xD39E1909) + LODWORD(STACK[0x4F8]);
  LODWORD(STACK[0x634]) = v1029 - 928951906;
  LODWORD(v92) = *(unsigned __int8 *)(v35
                                    + ((((_BYTE)v1029 - 98) & 0xF) * v19
                                                   + 439568
                                                   - 965
                                                   * ((((((_BYTE)v1029 - 98) & 0xFu) * v19 + 439568)
                                                     * (unint64_t)v20) >> 32))) ^ 0xFC;
  LODWORD(STACK[0x61C]) = v92 + 1056380820 - ((2 * v92) & 0x128);
  LODWORD(v105) = ((((_BYTE)v1032 + 32) & 0xF ^ 9) - ((2 * (((_BYTE)v1032 + 32) & 0xF ^ 9)) & 0xFFFFFFF7) + 43) ^ 0x2C;
  v113 = (((((16 * (((_BYTE)v92 - 108 - ((2 * (_BYTE)v92) & 0x28)) & 0xF)) | v105) ^ 0x40)
         + 1689448282
         - 2 * ((((16 * (((_BYTE)v92 - 108 - ((2 * (_BYTE)v92) & 0x28)) & 0xF)) | v105) ^ 0x40) & 0x5E ^ v105 & 4)) ^ 0x64B2EF5A)
       * v19;
  LODWORD(STACK[0x5B0]) = v113;
  v1036 = (*(unsigned __int8 *)(v35 + (v113 + 466048) % 0x3C5u) ^ v31 ^ 0xFC) * v19;
  LODWORD(v92) = *(unsigned __int8 *)(v35 + (v1036 + 466048) % 0x3C5) ^ 0xFC;
  v114 = v92 - ((2 * v92) & 0xCE) + 47364967;
  LODWORD(STACK[0x5B8]) = v114;
  v115 = *(unsigned __int8 *)(v35 + (((16 * (v114 & 0xF)) ^ 0x70 | v105) * v19 + 218460) % 0x3C5);
  LODWORD(STACK[0x5C0]) = v115;
  v116 = (v115 & 0xF ^ 0xC) * v19
       + 454132
       - 965 * ((((v115 & 0xF ^ 0xCu) * v19 + 454132) * (unint64_t)v20) >> 32);
  LODWORD(STACK[0x640]) = v116;
  LODWORD(v105) = v27
                + LODWORD(STACK[0x628])
                - v21
                - ((2 * (v27 + LODWORD(STACK[0x628]) - v21) + 847339706) & 0xD0CC4242);
  v117 = v27 - ((2 * v27 - 1612349246) & 0xD0CC4242) - 1202134654;
  LODWORD(STACK[0x638]) = v117;
  v118 = ((2 * v117) & 0x7CFFDFFC ^ 0x64E886E0) + (v117 ^ 0x8C0BBC8F);
  v119 = v32
       - ((v27 + v21 - 2036995817) ^ (v27 - 806174623))
       + v118
       + 1465000153
       + (v116 & 0x329)
       + (v116 & 0x329 ^ 0xEA2DEF29);
  v120 = ((2 * v110) & 0xA6D6FEBA ^ 0x84809208) + (v110 ^ 0x99ABB659);
  LODWORD(STACK[0x5E4]) = v110;
  v121 = STACK[0x680];
  v122 = v120 + (v110 ^ 0x434CA25D ^ v112) + LODWORD(STACK[0x680]);
  v123 = v120
       - ((-1465000154 - v118) & 0xF1D0196F)
       - ((v118 + 1465000153) & 0xF1D0196F)
       - 904331687
       - ((2 * (v120 - ((-1465000154 - v118) & 0xF1D0196F) - ((v118 + 1465000153) & 0xF1D0196F) + 747929763)) & 0x3B08FB6C);
  LODWORD(STACK[0x628]) = v118;
  LODWORD(STACK[0x5F8]) = 2 * v118;
  v124 = v118 + 195479145 + (~(2 * v118 + 526380326) | 0x88126055);
  LODWORD(STACK[0x5EC]) = v124;
  LODWORD(STACK[0x5F0]) = v123;
  v125 = (((v17 ^ 0x148234D8)
         - v23
         + 1368693695
         + (v110 ^ 0x90D2BB54)
         - 1865237676
         - ((2 * ((v17 ^ 0x148234D8) - v23 + 1368693695 + (v110 ^ 0x90D2BB54))) & 0x21A576A8)) ^ v110)
       - v120
       - 747929763
       + (v123 ^ 0x9D847DB6);
  v126 = v125 - 666318960 - ((2 * v125) & 0xB0918F20);
  v127 = ((v105 - 2119773826) ^ v117) - ((2 * ((v105 - 2119773826) ^ v117) + 476040482) & 0xAA63D832) + 1667355306;
  LODWORD(v105) = v127 ^ LODWORD(STACK[0x698]);
  v128 = v119 ^ v124;
  LODWORD(STACK[0x5E8]) = v119 ^ v124;
  v129 = ((2 * ((v127 ^ 0x5531EC19) + (v128 ^ 0x4409302A) + 1)) & 0x7BF6CFE2)
       + (((v127 ^ 0x5531EC19) + (v128 ^ 0x4409302A) + 1) ^ 0x3DFB67F1);
  v130 = v122 - ((2 * v122 + 374866046) & 0x56F96288) + 917025155;
  LODWORD(STACK[0x694]) = v130;
  v131 = v126 ^ (v121 - 560496741);
  v132 = v123 ^ v130;
  v133 = (v132 ^ 0x4907330D)
       + (v126 ^ 0xD848C790)
       + 598597369
       - ((2 * ((v132 ^ 0x4907330D) + (v126 ^ 0xD848C790) + 1)) & 0x475BBDF0);
  LODWORD(STACK[0x5D4]) = v133;
  LODWORD(STACK[0x668]) = v129;
  HIDWORD(v135) = v105 ^ 0x142 ^ (v129 + 15);
  LODWORD(v135) = v105 ^ 0x11248200 ^ (v129 - 1039886321);
  v134 = v135 >> 9;
  HIDWORD(v135) = v134 ^ 0x7D4A8C;
  LODWORD(v135) = v134 ^ 0xBC000000;
  v1028 = (v135 >> 23) - ((2 * (v135 >> 23)) & 0xD49ECD0E) + 1783588487;
  v136 = ((v128 ^ 0xBBF6CFD5) - 501969881) ^ 0x4DE3F232;
  LODWORD(STACK[0x5E0]) = v136;
  v137 = (v1028 ^ 0xBCC9B513) + v136;
  v1021 = v137;
  v138 = v137 + 1234117562 + LODWORD(STACK[0x4D4]);
  v139 = (2 * v138 - 1079183308) & 0x89DA1F20;
  v138 -= 1530688598;
  v140 = v138 - v139;
  v141 = (((v138 - v139) >> 28) ^ 4) * v19 + 439568;
  v142 = (HIBYTE(v140) & 0xF ^ 4) * v19 + 439568;
  LODWORD(v105) = ((v140 >> 20) & 0xF ^ 0xE) * v19 + 439568;
  LODWORD(STACK[0x680]) = v131 ^ v133;
  v143 = ((v132 ^ 0xB6F8CCF2) - 501969881) ^ 0x4DE3F232;
  LODWORD(STACK[0x5D8]) = v143;
  v144 = (v131 ^ v133 ^ 0xD7F6D384) + v143;
  LODWORD(STACK[0x698]) = v144 + 1070558250;
  v1016 = v144;
  v145 = LODWORD(STACK[0x560])
       - (v144
        + 1070558250)
       - ((2 * (LODWORD(STACK[0x560]) - (v144 + 1070558250)) + 227702404) & 0x7C5E2BB2);
  LODWORD(v92) = (HIWORD(v140) & 0xF ^ 0xD) * v19 + 439568;
  v146 = ((*(unsigned __int8 *)(v35 + (v142 - 965 * ((v142 * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v141 - 965 * ((v141 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (v92 - 965 * ((v92 * (unint64_t)v20) >> 32))) ^ 0xFC;
  LODWORD(STACK[0x5DC]) = v140;
  v147 = (v146 << 8) ^ ((*(unsigned __int8 *)(v35
                                            + (v105
                                                           - 965 * ((v105 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  LODWORD(v105) = (~(v140 >> 8) & 0xF) * v19 + 439568;
  LODWORD(v92) = ((v140 >> 4) ^ 9) * v19 + 439568;
  v148 = v147 | *(unsigned __int8 *)(v35
                                   + (v105 - 965 * ((v105 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v149 = (v148 << 8) - 1790760728 - ((v148 << 9) & 0x2A865000);
  v150 = *(unsigned __int8 *)(v35
                            + ((v138 & 0xF) * v19
                                           + 439568
                                           - 965 * ((((v138 & 0xFu) * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC;
  v151 = v150 + 1139588358 - ((2 * v150) & 0xC);
  v152 = v149 ^ ((*(unsigned __int8 *)(v35
                                     + (((unsigned __int16)v140 >> 12) * v19
                                                    + 439568
                                                    - 965
                                                    * (((((unsigned __int16)v140 >> 12) * v19 + 439568)
                                                      * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  v1023 = v149;
  v153 = (v152 ^ 0x954328E8 | v151 ^ 0x43ECBD06) ^ (16
                                                  * (*(unsigned __int8 *)(v35
                                                                        + (v92
                                                                                       - 965
                                                                                       * ((v92
                                                                                         * (unint64_t)v20) >> 32))) ^ 0xFC));
  v154 = v145 - 990359269;
  v155 = (((v145 - 990359269) >> 28) ^ 3) * v19 + 439568;
  v156 = (HIBYTE(v154) & 0xF ^ 0xE) * v19 + 439568;
  LODWORD(v105) = ((v154 >> 20) & 0xF ^ 2) * v19 + 439568;
  LODWORD(v92) = (~HIWORD(v154) & 0xF) * v19 + 439568;
  v157 = ((*(unsigned __int8 *)(v35 + (v156 - 965 * ((v156 * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v155 - 965 * ((v155 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  v158 = (((unsigned __int16)v154 >> 12) ^ 1) * v19 + 439568;
  v159 = v157 | *(unsigned __int8 *)(v35
                                   + (v92 - 965 * ((v92 * (unint64_t)v20) >> 32))) ^ 0xFC;
  LODWORD(v92) = ((v154 >> 8) & 0xF ^ 5) * v19 + 439568;
  v160 = (v159 << 8) ^ ((*(unsigned __int8 *)(v35
                                            + (v105
                                                           - 965 * ((v105 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  LODWORD(v105) = ((v154 >> 4) ^ 0xD) * v19 + 439568;
  v161 = v160 | *(unsigned __int8 *)(v35
                                   + (v92 - 965 * ((v92 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v162 = (v161 << 8) - 1031447409 - ((v161 << 9) & 0x850AB800);
  v163 = *(unsigned __int8 *)(v35
                            + ((v154 & 0xF ^ 9) * v19
                                           + 439568
                                           - 965 * ((((v154 & 0xF ^ 9) * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC;
  LODWORD(v92) = v163 - 839422508 - ((2 * v163) & 0x1A8);
  v164 = v162 ^ ((*(unsigned __int8 *)(v35 + (v158 - 965 * ((v158 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  v1024 = v162;
  v165 = (v164 ^ 0xC2855C8F | v92 ^ 0xCDF76DD4) ^ (16
                                                 * (*(unsigned __int8 *)(v35
                                                                       + (v105
                                                                                      - 965
                                                                                      * ((v105
                                                                                        * (unint64_t)v20) >> 32))) ^ 0xFC));
  LODWORD(v105) = ((v151 & 0xF ^ 0xFFFFFFFA) + 1552224524 + ((2 * (v151 & 0xF)) | 0x46F5DDEA)) ^ 0xA37AEEF6;
  LODWORD(STACK[0x5CC]) = v105;
  v166 = ((16 * (v92 & 0xF)) ^ 0x40 | v105)
       + 572361328
       - 2 * (((16 * (v92 & 0xF)) ^ 0x40 | v105) & 0x221D8A7D ^ v105 & 0xD);
  v167 = ((v153 >> 4) ^ 0xD2EA6335) & 0x510C9840 ^ 0xAE85E825 ^ ((((v153 >> 4) ^ 0xD2EA6335) & 0x510C984F)
                                                               - (((v153 >> 4) ^ 0xD2EA6335) & 0x500C8800)
                                                               + (((v153 >> 4) ^ 0xD2EA6335) & 0xC8800 ^ 0xAE8DE820));
  v168 = (v167 | 0xD69249E6) - (v167 | 0x296DB619) + 695055897;
  LODWORD(STACK[0x5BC]) = v168 ^ 0x869A49E6;
  LODWORD(v105) = *(unsigned __int8 *)(v35 + ((v166 ^ 0x221D8A70u) * v19 + 466048) % 0x3C5) ^ v31;
  v169 = v31;
  LODWORD(STACK[0x67C]) = v31;
  v170 = (v105 ^ 0xFC) * v19;
  LODWORD(STACK[0x5AC]) = v170;
  LODWORD(v105) = *(unsigned __int8 *)(v35 + v170 % 0x3C5);
  v171 = (((~(_BYTE)v105 >> 4) - ((~(_DWORD)v105 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + (v166 & 0x96 ^ 0x286 | v166 & 0x96 ^ 0x10) * (v166 ^ 0x221D8A70u) % 0x3C5))
       * v19
       + 466048;
  v172 = (((v168 ^ 0x869A49E6 | v165 & 0xF0)
         - 1799010406
         - 2 * (((v168 ^ 0x869A49E6) & 0x14C5479B | v165 & 0x90) ^ v168 & 1)) ^ 0x94C5479A)
       * v19;
  v1031 = (*(unsigned __int8 *)(v35 + (v172 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v35
                                                                                      + (v171 - 965 * ((v171 * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
        * v19;
  v173 = ~*(unsigned __int8 *)(v35 + (v1031 - 965 * ((v1031 * (unint64_t)v20) >> 32)));
  v174 = ((v173 >> 4) - ((v173 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v172 % 0x3C5);
  LODWORD(STACK[0x5D0]) = v153;
  v175 = (v165 >> 4) & 0xF0 | (v153 >> 8) & 0xF;
  v176 = ((v175 + 651237564 - 2 * (v175 & 0xBE ^ (v153 >> 8) & 2)) ^ 0x26D118BC) * v19;
  v1025 = (*(unsigned __int8 *)(v35 + (v176 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v35
                                                                                      + (v174 * v19 + 466048 - 965 * (((v174 * v19 + 466048) * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
        * v19;
  v177 = *(unsigned __int8 *)(v35 + (v1025 - 965 * ((v1025 * (unint64_t)v20) >> 32))) ^ 0xFF;
  v178 = ((~(v177 >> 3) | 0xE7) + (v177 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v176 % 0x3C5);
  v179 = (v164 >> 8) & 0xF0 | ((unsigned __int16)v152 >> 12);
  v180 = (((v179 ^ 0x52) - 1476709724 - ((2 * v179) & 0x148)) ^ 0xA7FB32A4) * v19;
  v1022 = (*(unsigned __int8 *)(v35 + (v180 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v35
                                                                                      + (v178 * v19 + 466048 - 965 * (((v178 * v19 + 466048) * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
        * v19;
  v181 = ~*(unsigned __int8 *)(v35 + (v1022 - 965 * ((v1022 * (unint64_t)v20) >> 32)));
  v182 = (((v181 >> 4) - ((v181 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v180 % 0x3C5))
       * v19
       + 466048;
  LODWORD(STACK[0x5B4]) = v152;
  v183 = ((v164 >> 12) & 0xF0 | HIWORD(v152) & 0xF) ^ 0x53;
  v184 = ((v183 - 55130685 - 2 * (v183 & 0xFFFFFFCF ^ HIWORD(v152) & 0xC)) ^ 0xFCB6C5C3) * v19;
  v1019 = (*(unsigned __int8 *)(v35 + (v184 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v35
                                                                                      + (v182 - 965 * ((v182 * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
        * v19;
  v185 = ~*(unsigned __int8 *)(v35 + (v1019 - 965 * ((v1019 * (unint64_t)v20) >> 32)));
  v186 = (((v185 >> 4) - ((v185 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v184 % 0x3C5))
       * v19
       + 466048;
  v187 = (HIWORD(v162) & 0xF0 | (v149 >> 20) & 0xF) ^ 0x84;
  v1018 = ((v187 + 1486566025 - ((2 * v187) & 0x112)) ^ 0x589B3289) * v19;
  v188 = *(unsigned __int8 *)(v35 + (v1018 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v186 - 965 * ((v186 * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC;
  v1017 = v188 * v19;
  v189 = ((v188 * v19) ^ 0x37FAAFF8) + ((1324 * v188) & 0x755FF0);
  v1020 = (v189 - 938709880) % (((v189 + 136) | (118 - v189)) & 0x84 | 0x341u);
  v190 = v137 - ((2 * (v137 + 1234117562) - 376003850) & 0xD43CA3B8) - 1468479727;
  v1013 = v190;
  v191 = LODWORD(STACK[0x4EC])
       - 630374936
       + (v190 ^ 0xDC132FC7)
       - ((2 * (LODWORD(STACK[0x4EC]) - 630374936 + (v190 ^ 0xDC132FC7))) & 0xBF5E7A14);
  v192 = (((v191 - 542163702) >> 28) ^ 0xD) * v19 + 439568;
  v193 = v192 - 965 * ((v192 * (unint64_t)v20) >> 32);
  v194 = v144 - ((2 * LODWORD(STACK[0x698]) - 48885226) & 0x8174BAA2) - 15412602;
  LODWORD(STACK[0x698]) = v194;
  v195 = (~((v191 - 542163702) >> 24) & 0xF) * v19 + 439568;
  v196 = (((v191 - 542163702) >> 20) & 0xF ^ 0xA) * v19 + 439568;
  v197 = (~((v191 - 542163702) >> 16) & 0xF) * v19 + 439568;
  v198 = ((*(unsigned __int8 *)(v35 + (v195 - 965 * ((v195 * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + v193) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (v197 - 965 * ((v197 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v199 = (((unsigned __int16)(v191 + 15626) >> 12) ^ 3) * v19 + 439568;
  v200 = v199 - 965 * ((v199 * (unint64_t)v20) >> 32);
  v201 = (v198 << 8) ^ ((*(unsigned __int8 *)(v35 + (v196 - 965 * ((v196 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  v1015 = v191 - 542163702;
  v202 = (((v191 - 542163702) >> 8) & 0xF ^ 0xD) * v19 + 439568;
  v203 = ((v191 + 10) >> 4) * v19 + 439568;
  LODWORD(v105) = v203 - 965 * ((v203 * (unint64_t)v20) >> 32);
  v204 = v201 | *(unsigned __int8 *)(v35 + (v202 - 965 * ((v202 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v205 = (v204 << 8) - 497429607 - ((v204 << 9) & 0xC4B3A600);
  v206 = (((_BYTE)v191 + 42) & 0xF ^ 0xA) * v19 + 439568;
  v207 = *(unsigned __int8 *)(v35 + (v206 - 965 * ((v206 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v208 = v207 - 462861357 - ((2 * v207) & 0x1A6);
  v209 = v205 ^ ((*(unsigned __int8 *)(v35 + v200) ^ 0xFC) << 12);
  v210 = LODWORD(STACK[0x508])
       - 1000417853
       + (v194 ^ 0x8948DCB5)
       - ((2 * (LODWORD(STACK[0x508]) - 1000417853 + (v194 ^ 0x8948DCB5)) + 1659857818) & 0xE14E3BDA)
       - 1575038022;
  v211 = (v209 ^ 0xE259D399 | v208 ^ 0xE4694BD3) ^ (16 * (*(unsigned __int8 *)(v35 + v105) ^ 0xFC));
  v212 = ((v210 >> 20) & 0xF ^ 0xA) * v19 + 439568;
  LODWORD(v105) = (HIWORD(v210) & 0xF ^ 7) * v19 + 439568;
  LODWORD(v92) = (((unsigned __int16)v210 >> 12) ^ 1) * v19 + 439568;
  v213 = ((((*(unsigned __int8 *)(v35
                                + ((HIBYTE(v210) & 0xF) * v19
                                               + 439568
                                               - 965
                                               * ((((HIBYTE(v210) & 0xF) * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (((v210 >> 28) ^ 7) * v19 + 439568 - 965 * (((((v210 >> 28) ^ 7) * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (v105 - 965 * ((v105 * (unint64_t)v20) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v212 - 965 * ((v212 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  LODWORD(v105) = ((v210 >> 8) & 0xF ^ 0xD) * v19 + 439568;
  v214 = ((v210 >> 4) ^ 0xE) * v19 + 439568;
  v215 = v213 | *(unsigned __int8 *)(v35
                                   + (v105 - 965 * ((v105 * (unint64_t)v20) >> 32))) ^ 0xFC;
  v216 = (v215 << 8) - 1864909348 - ((v215 << 9) & 0x21AF7A00);
  v217 = *(unsigned __int8 *)(v35
                            + ((v210 & 0xF ^ 0xD) * v19
                                           + 439568
                                           - 965 * ((((v210 & 0xF ^ 0xD) * v19 + 439568) * (unint64_t)v20) >> 32))) ^ 0xFC;
  LODWORD(v105) = v217 - 1867983466 - ((2 * v217) & 0x12C);
  v218 = v216 ^ ((*(unsigned __int8 *)(v35
                                     + (v92 - 965 * ((v92 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  v219 = (v218 ^ 0x90D7BDDC | v105 ^ 0x90A8D596) ^ (16
                                                  * (*(unsigned __int8 *)(v35
                                                                        + (v214
                                                                                       - 965
                                                                                       * ((v214 * (unint64_t)v20) >> 32))) ^ 0xFC));
  v220 = v208 & 0xF;
  v221 = (v220 | (16 * (v105 & 0xF))) ^ 0x63;
  v222 = ((v221 - 122913830 + (~(2 * v221) | 0xFFFFFE4B) + 1) ^ 0xF8AC7BDA) * v19;
  LODWORD(v92) = (*(unsigned __int8 *)(v35 + (v222 + 466048) % 0x3C5) ^ v169 ^ 0xFC) * v19;
  LODWORD(v105) = *(unsigned __int8 *)(v35 + ((int)v92 + 466048) % 0x3C5u) ^ 0xFC;
  LODWORD(v92) = *(unsigned __int8 *)(v35 + v92 % 0x3C5) ^ 0xFF;
  v223 = ((~(v92 >> 3) | 0xE7) + (v92 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v222 % 0x3C5);
  LODWORD(v92) = ((v211 >> 4) ^ 0x6D428F2E) & 0x833C3A0 ^ 0xA16BA8B8 ^ ((((v211 >> 4) ^ 0x6D428F2E) & 0x4833C3AF)
                                                                      - ((2 * ((v211 >> 4) ^ 0x6D428F2E)) & 0x8047840A)
                                                                      + 1696849413);
  LODWORD(v92) = (371006092 - (v92 | 0x161D1A8C) + (v92 | 0xE9E2E573)) ^ 0x6DAA93C0;
  v224 = (((v92 | v219 & 0xF0) + 503766718 - ((2 * (v92 | v219 & 0xF0)) & 0x3C0DBD7C)) ^ 0x1E06DEBE) * v19;
  v225 = v224 % 0x3C5;
  v226 = (*(unsigned __int8 *)(v35 + (v224 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v223 * v19 + 466048 - 965 * (((v223 * v19 + 466048) * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
       * v19;
  v227 = v226 + 466048 - 965 * (((8901487 * (unint64_t)(v226 + 466048)) >> 32) >> 1);
  v228 = ~*(unsigned __int8 *)(v35 + (v226 - 965 * ((v226 * (unint64_t)v20) >> 32)));
  v229 = ((v228 >> 4) - ((v228 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v225);
  v230 = (v219 >> 4) & 0xF0 | (v211 >> 8) & 0xF;
  v231 = ((v230 - 1998562286 - 2 * (v230 & 0x1F ^ (v211 >> 8) & 0xD)) ^ 0x88E05C12) * v19;
  v232 = (*(unsigned __int8 *)(v35 + (v231 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v229 * v19 + 466048 - 965 * (((v229 * v19 + 466048) * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
       * v19;
  v233 = v232 + 466048 - 965 * (((8901487 * (unint64_t)(v232 + 466048)) >> 32) >> 1);
  v234 = *(unsigned __int8 *)(v35 + (v232 - 965 * ((v232 * (unint64_t)v20) >> 32))) ^ 0xFF;
  v235 = (((~(v234 >> 3) | 0xE7) + (v234 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v231 % 0x3C5))
       * v19
       + 466048;
  v236 = ((v218 >> 8) & 0xF0 | ((unsigned __int16)v209 >> 12)) ^ 0xBD;
  v237 = ((v236 - 1468427739 - ((2 * v236) & 0x4A)) ^ 0xA8799225) * v19;
  v238 = (*(unsigned __int8 *)(v35 + (v237 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v235 - 965 * ((v235 * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
       * v19;
  v239 = v238 + 466048 - 965 * (((8901487 * (unint64_t)(v238 + 466048)) >> 32) >> 1);
  v240 = ~*(unsigned __int8 *)(v35 + (v238 - 965 * ((v238 * (unint64_t)v20) >> 32)));
  v241 = (((v240 >> 4) - ((v240 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v237 % 0x3C5))
       * v19
       + 466048;
  v242 = ((v218 >> 12) & 0xF0 | HIWORD(v209) & 0xF) ^ 0x79;
  v243 = v242 + 1849728820 - 2 * (v242 & 0x36 ^ HIWORD(v209) & 2);
  v244 = ((*(unsigned __int8 *)(v35 + v239) ^ 0xFC) << 12) ^ ((*(unsigned __int8 *)(v35 + v233) ^ 0xFC) << 8);
  v245 = (v243 ^ 0x6E409F34) * v19;
  v246 = (*(unsigned __int8 *)(v35 + (v245 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v241 - 965 * ((v241 * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
       * v19;
  v247 = *(unsigned __int8 *)(v35 + (v246 - 965 * ((v246 * (unint64_t)v20) >> 32))) ^ 0xFF;
  v248 = ((~(v247 >> 3) | 0xE7) + (v247 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v245 % 0x3C5);
  v249 = v246 + 466048 - 965 * (((8901487 * (unint64_t)(v246 + 466048)) >> 32) >> 1);
  v250 = v248 * v19 + 466048 - 965 * (((v248 * v19 + 466048) * (unint64_t)v20) >> 32);
  v251 = (HIWORD(v216) & 0xF0 | (v205 >> 20) & 0xF) ^ 0xD5;
  v252 = ((v251 + 1419610381 - ((2 * v251) & 0x1A)) ^ 0x549D890D) * v19;
  v253 = (*(unsigned __int8 *)(v35 + (v252 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v35 + v250) ^ 0xFC)) ^ 0xFC)
       * v19;
  v254 = v253 + 466048 - 965 * (((8901487 * (unint64_t)(v253 + 466048)) >> 32) >> 1);
  v255 = ~*(unsigned __int8 *)(v35 + (v253 - 965 * ((v253 * (unint64_t)v20) >> 32)));
  v256 = (((v255 >> 4) - ((v255 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v252 % 0x3C5))
       * v19
       + 466048;
  v257 = v256 - 965 * ((v256 * (unint64_t)v20) >> 32);
  v258 = ((*(unsigned __int8 *)(v35 + v254) ^ 0xFC) << 20) ^ ((*(unsigned __int8 *)(v35 + v249) ^ 0xFC) << 16);
  v259 = (((((v216 >> 20) & 0xF0 | HIBYTE(v205) & 0xF) ^ 2)
         - 200476143
         - 2 * (((v216 >> 20) & 0x10 | HIBYTE(v205) & 5) ^ HIBYTE(v205) & 4)) ^ 0xF40CFA11)
       * v19;
  v260 = v259 % 0x3C5;
  v261 = (*(unsigned __int8 *)(v35 + (v259 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v35 + v257) ^ 0xFC)) ^ 0xFC)
       * v19;
  v262 = v261 + 466048 - 965 * (((8901487 * (unint64_t)(v261 + 466048)) >> 32) >> 1);
  v263 = ~*(unsigned __int8 *)(v35 + (v261 - 965 * ((v261 * (unint64_t)v20) >> 32)));
  v264 = (((v263 >> 4) - ((v263 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v260))
       * v19
       + 466048;
  v265 = ((HIBYTE(v216) & 0xF0 | (v205 >> 28)) ^ 0x9E) * v19 + 466048;
  v266 = (*(unsigned __int8 *)(v35 + (v265 - 965 * ((v265 * (unint64_t)v20) >> 32))) ^ (16 * (*(unsigned __int8 *)(v35 + (v264 - 965 * ((v264 * (unint64_t)v20) >> 32))) ^ 0xFC)) ^ 0xFC)
       * v19
       + 466048;
  LODWORD(v105) = v105 - ((2 * v105) & 0x1CA) + 1386733797;
  v267 = v105 ^ (16 * (*(unsigned __int8 *)(v35 + v227) ^ 0xFC));
  v268 = v220 & 0xFFFFFF0F | (16 * (v105 & 0xF));
  LODWORD(v105) = (v267 & 0xF0 ^ 0xE0 | v92) * v19 + 218460;
  LODWORD(v92) = v244 ^ v267;
  v269 = ((v244 ^ v267) >> 4) & 0xF0 | (v211 >> 8) & 0xF;
  v270 = (*(unsigned __int8 *)(v35
                             + ((v268 ^ 0x53) * v19
                                            + 218460
                                            - 965 * ((((v268 ^ 0x53u) * v19 + 218460) * (unint64_t)v20) >> 32))) ^ 0xFC | ((*(unsigned __int8 *)(v35 + (v269 * v19 + 218460 - 965 * (((v269 * v19 + 218460) * (unint64_t)v20) >> 32))) ^ 0xFC) << 8)) ^ (16 * (*(unsigned __int8 *)(v35 + v105 % 0x3C5) ^ 0xFC));
  v271 = (((v244 >> 8) & 0xF0 | ((unsigned __int16)v209 >> 12)) ^ 0xD) * v19 + 218460;
  v272 = v270 ^ ((*(unsigned __int8 *)(v35 + (v271 - 965 * ((v271 * (unint64_t)v20) >> 32))) ^ 0xFC) << 12);
  v273 = v92 ^ 0xDB9AEB5C ^ v258;
  v274 = v273 ^ ((*(unsigned __int8 *)(v35 + v262) ^ 0xFC) << 24);
  v275 = (((v273 >> 12) & 0xF0 | HIWORD(v209) & 0xF) ^ 0xD9) * v19 + 218460;
  v276 = v272 ^ ((*(unsigned __int8 *)(v35 + (v275 - 965 * ((v275 * (unint64_t)v20) >> 32))) ^ 0xFC) << 16);
  v277 = ((HIWORD(v258) & 0xF0 | (v205 >> 20) & 0xF) ^ 5) * v19 + 218460;
  v278 = v274 ^ ((*(unsigned __int8 *)(v35 + v266
                                           - 965 * (((8901487 * (unint64_t)v266) >> 32) >> 1)) ^ 0xC) << 28);
  v279 = (((v274 >> 20) & 0xF0 | HIBYTE(v205) & 0xF) ^ 0x92) * v19 + 218460;
  v280 = ((HIBYTE(v278) & 0xF0 | (v205 >> 28)) ^ 0x8E) * v19 + 218460;
  v281 = v280 - 965 * ((v280 * (unint64_t)v20) >> 32);
  v1011 = v276 ^ ((*(unsigned __int8 *)(v35 + (v277 - 965 * ((v277 * (unint64_t)v20) >> 32))) ^ 0xFC) << 20) ^ ((*(unsigned __int8 *)(v35 + (v279 - 965 * ((v279 * (unint64_t)v20) >> 32))) ^ 0xFC) << 24) ^ ((unint64_t)(*(unsigned __int8 *)(v35 + v281) ^ 0xFCu) << ((v281 & 0x1C ^ 0x1C) + (v281 & 0x1C)));
  v282 = ((*(unsigned __int8 *)(v35
                              + (662 * (HIBYTE(v1011) & 0xF)
                                             + 454132
                                             - 965
                                             * ((4450744 * (unint64_t)(662 * (HIBYTE(v1011) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * (v1011 >> 28) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v1011 >> 28) + 454132)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * (HIWORD(v1011) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v1011) & 0xF) + 454132)) >> 32))) ^ 0xFC;
  v1014 = v190 ^ 0x67EEE;
  v1010 = v282 - ((2 * v282) & 0x4F6F8) + 1338145660;
  v283 = LODWORD(STACK[0x504])
       - 415556591
       + (v190 ^ 0x67EEE)
       - ((2 * (LODWORD(STACK[0x504]) - 415556591 + (v190 ^ 0x67EEE))) & 0x840314EE)
       - 1040086409;
  v284 = LODWORD(STACK[0x634]) - ((2 * v1029 + 871633852) & 0x5D4E8F80);
  v285 = STACK[0x6A0];
  v286 = 662 * ((LODWORD(STACK[0x6A0]) >> 28) ^ 0xA) + 439568;
  v287 = 662 * (HIBYTE(LODWORD(STACK[0x6A0])) & 0xF ^ 2) + 439568;
  v288 = 662 * ((LODWORD(STACK[0x6A0]) >> 20) & 0xF ^ 6) + 439568;
  v289 = 662 * (HIWORD(LODWORD(STACK[0x6A0])) & 0xF ^ 3) + 439568;
  v290 = ((*(unsigned __int8 *)(v35 + (v287 - 965 * ((4450744 * (unint64_t)v287) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v286 - 965 * ((4450744 * (unint64_t)v286) >> 32))) ^ 0xFC) << 12);
  v291 = 662 * (((unsigned __int16)LODWORD(STACK[0x6A0]) >> 12) ^ 0xB) + 439568;
  v292 = ((v290 | *(unsigned __int8 *)(v35 + (v289 - 965 * ((4450744 * (unint64_t)v289) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v288 - 965 * ((4450744 * (unint64_t)v288) >> 32))) ^ 0xFC) << 12);
  v293 = 662 * ((LODWORD(STACK[0x6A0]) >> 8) & 0xF ^ 0xC) + 439568;
  v294 = 662 * (~(LODWORD(STACK[0x6A0]) >> 4) & 0xF) + 439568;
  v295 = v292 | *(unsigned __int8 *)(v35 + (v293 - 965 * ((4450744 * (unint64_t)v293) >> 32))) ^ 0xFC;
  v296 = *(unsigned __int8 *)(v35 + (v291 - 965 * ((4450744 * (unint64_t)v291) >> 32)));
  LODWORD(STACK[0x634]) = v22;
  v1005 = (v295 << 8) + 1177006856 - ((v295 << 9) & 0x8C4F6600);
  v1004 = v1005 ^ ((v296 ^ 0xFC) << 12);
  v297 = 662 * ((v1034 & 0x298) + ((v284 >> 28) ^ 2) + (v1034 & 0x298 ^ 0x298));
  v298 = (v1004 ^ 0x4627B308 | v1032 ^ 0xA287B1FE) ^ (16
                                                    * (*(unsigned __int8 *)(v35
                                                                          + (v294
                                                                                         - 965
                                                                                         * ((4450744
                                                                                           * (unint64_t)v294) >> 32))) ^ 0xFC));
  v299 = 662 * (HIBYTE(v284) & 0xF ^ 0xE) + 439568;
  v300 = 662 * ((v284 >> 20) & 0xF ^ 0xA) + 439568;
  v301 = (unint64_t)(v284 ^ 0x2EA747C0) >> ((v1026 & 8 ^ 8) + (v1026 & 8u));
  LODWORD(v92) = 662 * (HIWORD(v284) & 0xF ^ 7) + 439568;
  v1001 = (((*(unsigned __int8 *)(v35 + (v299 - 965 * ((4450744 * (unint64_t)v299) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v297 - 965 * ((4450744 * (unint64_t)v297) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (v92 - 965 * ((4450744 * (unint64_t)v92) >> 32)))) ^ (16 * (*(unsigned __int8 *)(v35 + (v300 - 965 * ((4450744 * (unint64_t)v300) >> 32))) ^ 0xFC));
  v302 = v301 - ((2 * v301) & 0xBF0B6B0C) - 544885370;
  v303 = (v302 & 0xF ^ 0x29E) + ((2 * v302) & 0x10);
  v304 = 662 * ((v302 >> 4) ^ 8) + 439568;
  v305 = 662 * ((v284 >> 4) ^ 0xC) + 439568;
  v1003 = ((v1001 << 16) ^ 0xFC0000) - 947600587 - ((2 * ((v1001 << 16) ^ 0xFC0000)) & 0x8F080000);
  v306 = ((v1003 ^ 0xC784C335)
        + ((*(unsigned __int8 *)(v35
                               + (662 * v303
                                              - 965 * ((4450744 * (unint64_t)(662 * v303)) >> 32))) ^ 0xFC) << 8)) ^ ((*(unsigned __int8 *)(v35 + (v304 - 965 * ((4450744 * (unint64_t)v304) >> 32))) ^ 0xFC) << 12);
  v307 = (v306 | LODWORD(STACK[0x61C]) ^ 0x3EF71794) ^ (16
                                                      * (*(unsigned __int8 *)(v35
                                                                            + (v305
                                                                                           - 965
                                                                                           * ((4450744
                                                                                             * (unint64_t)v305) >> 32))) ^ 0xFC));
  v308 = v298 >> ((v285 & 4 ^ 4) + (v285 & 4));
  v309 = v308 - ((2 * v308) & 0xC7A23F16);
  v310 = *(unsigned __int8 *)(v35 + v1036 % 0x3C5) ^ 0xFF;
  v311 = 662
       * (((~(v310 >> 3) | 0xE7) + (v310 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + LODWORD(STACK[0x5B0]) % 0x3C5))
       + 466048;
  LODWORD(v301) = (v307 & 0xF0 | ((_BYTE)v309 - 101) & 0xF) ^ 0xB;
  v312 = 662 * ((v301 + 665889115 - 2 * (v301 & 0x5F ^ ((_BYTE)v309 - 101) & 4)) ^ 0x27B0A95B);
  v313 = 662
       * (*(unsigned __int8 *)(v35 + (v312 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v311 - 965 * ((4450744 * (unint64_t)v311) >> 32))) ^ 0xFC)) ^ 0xFC);
  LODWORD(v301) = *(unsigned __int8 *)(v35
                                     + v313
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v313 + 466048)) >> 32) >> 1));
  v314 = (*(unsigned __int8 *)(v35 + (v313 - 965 * ((4450744 * (unint64_t)v313) >> 32))) ^ 0xFCu) >> ((v301 & 4 ^ 4) + (v301 & 4));
  v315 = 662 * ((v314 - ((2 * v314) & 0xF8) - 4) ^ *(unsigned __int8 *)(v35 + v312 % 0x3C5)) + 466048;
  v316 = v21;
  v317 = v309 + 1674649483;
  v318 = (v307 >> 4) & 0xF0 | ((v309 - 117) >> 4);
  v319 = 662 * (((v318 ^ 8) - 559989001 - ((2 * v318) & 0xFFFFFFEF)) ^ 0xDE9F3EF7);
  v320 = 662
       * (*(unsigned __int8 *)(v35 + (v319 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v315 - 965 * ((4450744 * (unint64_t)v315) >> 32))) ^ 0xFC)) ^ 0xFC);
  v321 = v320 + 466048 - 965 * (((8901487 * (unint64_t)(v320 + 466048)) >> 32) >> 1);
  v322 = *(unsigned __int8 *)(v35 + (v320 - 965 * ((4450744 * (unint64_t)v320) >> 32))) ^ 0xFF;
  v323 = 662
       * (((~(v322 >> 3) | 0xE7) + (v322 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v319 % 0x3C5))
       + 466048;
  v997 = 662
       * ((-146007120 - ((v306 >> 7) & 0x160) + (((v306 >> 8) & 0xF0 | ((v309 + 1674649483) >> 8) & 0xF) ^ 0xF)) ^ 0xF74C1BB0);
  v324 = *(unsigned __int8 *)(v35 + (v997 + 466048) % 0x3C5) ^ (16
                                                              * (*(unsigned __int8 *)(v35
                                                                                    + (v323 - 965 * ((4450744 * (unint64_t)v323) >> 32))) ^ 0xFC)) ^ 0xFC;
  LODWORD(STACK[0x61C]) = v18;
  v325 = 662 * v324;
  v326 = *(unsigned __int8 *)(v35
                            + v325
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v325 + 466048)) >> 32) >> 1)) ^ 0xFC;
  v327 = 662
       * ((((16 * (v301 ^ 0xFC) - ((32 * (v301 ^ 0xFC)) & 0x20) + 23) ^ LODWORD(STACK[0x5B8])) & 0xF0 | (v298 >> 4)) ^ 0x70)
       + 218460;
  v996 = (v326 << 12) - ((v326 << 13) & 0x8A000) + 1930713796;
  v998 = v996 ^ ((*(unsigned __int8 *)(v35 + v321) ^ 0xFC) << 8);
  v328 = 662
       * ((((v998 ^ (16 * (v301 ^ 0xFC) - ((32 * (v301 ^ 0xFC)) & 0x420) - 385867241)) >> 4) & 0xF0 | (v298 >> 8) & 0xF) ^ 0x80)
       + 218460;
  v1002 = LODWORD(STACK[0x5C0]) ^ (16
                                 * (*(unsigned __int8 *)(v35
                                                       + (v327
                                                                      - 965 * ((4450744 * (unint64_t)v327) >> 32))) ^ 0xFC));
  v999 = v1002 ^ ((*(unsigned __int8 *)(v35 + (v328 - 965 * ((4450744 * (unint64_t)v328) >> 32))) ^ 0xFC) << 8);
  v329 = 662 * ((v999 >> 8) & 0xF)
       + 454132
       - 1930 * ((2225372 * (unint64_t)(662 * ((v999 >> 8) & 0xF) + 454132)) >> 32);
  v1000 = ((2 * v329) & 0xE3C) + (v329 ^ 0xCDF7FF1F);
  v1012 = v283;
  v330 = 662 * (HIBYTE(v283) & 0xF ^ 2) + 439568;
  v331 = *(unsigned __int8 *)(v35
                            + (662 * (HIWORD(v283) & 0xF ^ 1) + 439568)
                            % (v1010 & 0x3C5 ^ 0x344 | v1010 & 0x3C5 ^ 0x81u)) ^ 0xFC | ((*(unsigned __int8 *)(v35 + (v330 - 965 * ((4450744 * (unint64_t)v330) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((v283 >> 28) ^ 0xC) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v283 >> 28) ^ 0xC) + 439568)) >> 32))) ^ 0xFC) << 12);
  v332 = 662 * (((unsigned __int16)v283 >> 12) ^ 8) + 439568;
  v333 = 662 * ((v283 >> 8) & 0xF ^ 0xA) + 439568;
  v334 = 662 * ((v283 >> 4) ^ 7) + 439568;
  v335 = (LODWORD(STACK[0x698]) ^ 0x555D8D9C)
       + LODWORD(STACK[0x4E0])
       - ((2 * ((LODWORD(STACK[0x698]) ^ 0x555D8D9C) + LODWORD(STACK[0x4E0])) + 175463190) & 0x23B10B72)
       - 149736636;
  v336 = ((v331 << 8) ^ ((*(unsigned __int8 *)(v35
                                             + (662 * ((v283 >> 20) & 0xF)
                                                            + 439568
                                                            - 965
                                                            * ((4450744
                                                              * (unint64_t)(662 * ((v283 >> 20) & 0xF) + 439568)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (v333 - 965 * ((4450744 * (unint64_t)v333) >> 32))) ^ 0xFC) ^ (16 * (*(unsigned __int8 *)(v35 + (v332 - 965 * ((4450744 * (unint64_t)v332) >> 32))) ^ 0xFC));
  v337 = (v336 << 8) + 1460004341 - ((v336 << 9) & 0xAE0BCA00);
  v338 = *(unsigned __int8 *)(v35
                            + (662 * (v283 & 0xF ^ 7)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v283 & 0xF ^ 7) + 439568)) >> 32))) ^ 0xFC;
  v339 = v338 - 1799579910 - ((2 * v338) & 0x1F4);
  v340 = 662 * (HIBYTE(v335) & 0xF ^ 1) + 439568;
  v341 = (v337 ^ 0x5705E5F5 | v339 ^ 0x94BC96FA) ^ (16
                                                  * (*(unsigned __int8 *)(v35
                                                                        + (v334
                                                                                       - 965
                                                                                       * ((4450744
                                                                                         * (unint64_t)v334) >> 32))) ^ 0xFC));
  v342 = 662 * ((v335 >> 20) & 0xF ^ 0xD) + 439568;
  v343 = 662 * (HIWORD(v335) & 0xF ^ 8) + 439568;
  v1035 = *(unsigned __int8 *)(v35 + (v343 - 965 * ((4450744 * (unint64_t)v343) >> 32))) ^ (16 * (*(unsigned __int8 *)(v35 + (v342 - 965 * ((4450744 * (unint64_t)v342) >> 32))) ^ 0xFC));
  v344 = ((*(unsigned __int8 *)(v35 + (v340 - 965 * ((4450744 * (unint64_t)v340) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((v335 >> 28) ^ 1) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v335 >> 28) ^ 1) + 439568)) >> 32))) ^ 0xFC) << 12);
  v345 = 662
       * (((unsigned __int16)((LOWORD(STACK[0x698]) ^ 0x8D9C)
                            + LOWORD(STACK[0x4E0])
                            - ((2 * ((LOWORD(STACK[0x698]) ^ 0x8D9C) + LOWORD(STACK[0x4E0])) + 23318) & 0xB72)
                            + 13124) >> 12) ^ 8)
       + 439568;
  v346 = v1035 ^ 0x5FAC3293 ^ (v344 + 78447 - ((2 * v344) & 0x6400));
  v347 = 662 * ((v335 >> 8) & 0xF ^ 5) + 439568;
  v348 = 662
       * ((((LOBYTE(STACK[0x698]) ^ 0x9C)
                           + LOBYTE(STACK[0x4E0])
                           - ((2 * ((LOBYTE(STACK[0x698]) ^ 0x9C) + LOBYTE(STACK[0x4E0])) + 22) & 0x72)
                           + 68) >> 4) ^ 0xB)
       + 439568;
  LODWORD(v301) = (v346 << 16) + 1577560497 - ((v346 << 17) & 0xBC0E0000);
  LODWORD(STACK[0x5B0]) = v301;
  v349 = ((v301 ^ 0x5E07A9B1)
        + ((*(unsigned __int8 *)(v35 + (v347 - 965 * ((4450744 * (unint64_t)v347) >> 32))) ^ 0xFC) << 8)) ^ ((*(unsigned __int8 *)(v35 + (v345 - 965 * ((4450744 * (unint64_t)v345) >> 32))) ^ 0xFC) << 12);
  v350 = *(unsigned __int8 *)(v35
                            + (662 * (v335 & 0xF ^ 9)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v335 & 0xF ^ 9) + 439568)) >> 32))) ^ 0xFC;
  v351 = v350 + 1396699373 - ((2 * v350) & 0x1DA);
  v352 = (v349 | v351 ^ 0x533FF0ED) ^ (16
                                     * (*(unsigned __int8 *)(v35
                                                           + (v348
                                                                          - 965
                                                                          * ((4450744 * (unint64_t)v348) >> 32))) ^ 0xFC));
  v353 = ((v339 & 0xF ^ 6) - ((2 * (v339 & 0xF ^ 6)) & 0xFFFFFFF7) + 43) ^ 0x27;
  LODWORD(STACK[0x5B8]) = v353;
  v354 = 662
       * ((((16 * (v351 & 0xF)) ^ 0xD0 | v353) + 1666854382 - ((2 * ((16 * (v351 & 0xF)) ^ 0xD0 | v353)) & 0x3DC)) ^ 0x635A2DEE);
  v1033 = 662 * (*(unsigned __int8 *)(v35 + (v354 + 466048) % 0x3C5) ^ LODWORD(STACK[0x67C]) ^ 0xFC);
  v355 = *(unsigned __int8 *)(v35 + v1033 % 0x3C5) ^ 0xFF;
  v356 = ((~(v355 >> 3) | 0xE7) + (v355 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v354 % 0x3C5);
  LODWORD(STACK[0x5C0]) = v341;
  v357 = 662
       * (((v352 & 0xF0 | (v341 >> 4))
         + 1923558094
         - ((2 * (v352 & 0xF0 | (v341 >> 4))) & 0x19C)) ^ 0x72A72ACE);
  v1030 = 662
        * (*(unsigned __int8 *)(v35 + (v357 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v35
                                                                                      + (662 * v356 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v356 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  v358 = ~*(unsigned __int8 *)(v35 + (v1030 - 965 * ((4450744 * (unint64_t)v1030) >> 32)));
  v359 = ((v358 >> 4) - ((v358 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v357 % 0x3C5);
  v360 = 662
       * ((((v352 >> 4) & 0xF0 | (v341 >> 8) & 0xF)
         + 1838307627
         - 2 * (((v352 >> 4) & 0x30 | (v341 >> 8) & 0xB) ^ (v352 >> 4) & 0x10)) ^ 0x6D92592B);
  v1037 = v337;
  v1027 = 662
        * (*(unsigned __int8 *)(v35 + (v360 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v35
                                                                                      + ((((2 * v359) & 0x1D2)
                                                                                        + (v359 ^ 0x7FFCE3E9)
                                                                                        + 727) & 0x296 | (40 - (((2 * v359) & 0x1D2) + (v359 ^ 0x7FFCE3E9))) & 0x96)
                                                                                      * (((2 * v359) & 0x1D2)
                                                                                       + (v359 ^ 0x7FFCE3E9u)
                                                                                       - 2147279145)
                                                                                      % 0x3C5) ^ 0xFC)) ^ 0xFC);
  v361 = ~*(unsigned __int8 *)(v35 + (v1027 - 965 * ((4450744 * (unint64_t)v1027) >> 32)));
  v362 = 662
       * (((v361 >> 4) - ((v361 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v360 % 0x3C5))
       + 466048;
  v363 = 662
       * ((976339792 - ((v349 >> 7) & 0xA0) + (((v349 >> 8) & 0xF0 | ((unsigned __int16)v337 >> 12)) ^ 0xE)) ^ 0x3A31C350);
  v1009 = 662
        * (*(unsigned __int8 *)(v35 + (v363 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v35
                                                                                      + (v362 - 965 * ((4450744 * (unint64_t)v362) >> 32))) ^ 0xFC)) ^ 0xFC);
  v364 = *(unsigned __int8 *)(v35 + (v1009 - 965 * ((4450744 * (unint64_t)v1009) >> 32)));
  v365 = 662
       * ((((v364 ^ 0xFF) >> 4) - (((v364 ^ 0xFF) >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v363 % 0x3C5))
       + 466048;
  v1008 = 662 * ((-440997056 - ((v349 >> 11) & 0x80) + (((v349 >> 12) & 0xF0 | HIWORD(v337) & 0xF) ^ 5)) ^ 0xE5B6EB40);
  v366 = *(unsigned __int8 *)(v35 + (v1008 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v365 - 965 * ((4450744 * (unint64_t)v365) >> 32))) ^ 0xFC)) ^ 0xFC;
  v1007 = 662 * v366;
  v367 = 662 * v366 + 580948024 - ((1324 * v366) & 0x4127F8);
  if (v1000 + 839385313 >= 0x3C5)
    v368 = 860862250;
  else
    v368 = 860863215;
  v995 = v368;
  v369 = (v367 + 965) ^ 0x22A09038;
  if (v364 > 0xEF)
    v369 = 965;
  v1006 = ((v367 + 965) ^ 0x22A093FDu) % (v369 & ((v367 + 965) ^ 0xDD5F6C02) | (-966 - v367) & 0x3C4);
  v370 = v316 + LODWORD(STACK[0x594]) - ((2 * (v316 + LODWORD(STACK[0x594])) + 698880156) & 0xCF2F669A) + 2087435163;
  v371 = 662 * (HIBYTE(v370) & 0xF ^ 7) + 439568;
  v372 = ((*(unsigned __int8 *)(v35 + (v371 - 965 * ((4450744 * (unint64_t)v371) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((v370 >> 28) ^ 6) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v370 >> 28) ^ 6) + 439568)) >> 32))) ^ 0xFC) << 12);
  v373 = 662 * ((v370 >> 20) & 0xF ^ 9) + 439568;
  v374 = 662 * (HIWORD(v370) & 0xF ^ 7) + 439568;
  v375 = v372 | *(unsigned __int8 *)(v35 + (v374 - 965 * ((4450744 * (unint64_t)v374) >> 32))) ^ 0xFC;
  v376 = 662
       * (((unsigned __int16)(v316 + LOWORD(STACK[0x594]) - ((2 * (v316 + LOWORD(STACK[0x594])) + 4252) & 0x669A) - 17509) >> 12) ^ 0xB)
       + 439568;
  v377 = (v375 << 8) ^ ((*(unsigned __int8 *)(v35
                                            + (v373 - 965 * ((4450744 * (unint64_t)v373) >> 32))) ^ 0xFC) << 12);
  v378 = 662 * ((v370 >> 8) & 0xF ^ 3) + 439568;
  v379 = 662
       * (((v316 + LOBYTE(STACK[0x594]) - ((2 * (v316 + LOBYTE(STACK[0x594])) - 100) & 0x9A) - 101) >> 4) ^ 4)
       + 439568;
  v380 = *(unsigned __int8 *)(v35
                            + (662 * (v370 & 0xF ^ 0xD)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v370 & 0xF ^ 0xD) + 439568)) >> 32))) ^ 0xFC;
  v381 = v380 + 1825323637 - ((2 * v380) & 0xEA);
  v382 = v377 | *(unsigned __int8 *)(v35 + (v378 - 965 * ((4450744 * (unint64_t)v378) >> 32))) ^ 0xFC;
  v383 = (v382 << 8) + 602757528 - ((v382 << 9) & 0x47DAB200);
  v384 = v383 ^ ((*(unsigned __int8 *)(v35 + (v376 - 965 * ((4450744 * (unint64_t)v376) >> 32))) ^ 0xFC) << 12);
  v385 = (v384 ^ 0x23ED5998 | v381 ^ 0x6CCC3A75) ^ (16
                                                  * (*(unsigned __int8 *)(v35
                                                                        + (v379
                                                                                       - 965
                                                                                       * ((4450744
                                                                                         * (unint64_t)v379) >> 32))) ^ 0xFC));
  v386 = LODWORD(STACK[0x510])
       - LODWORD(STACK[0x634])
       - ((2 * (LODWORD(STACK[0x510]) - LODWORD(STACK[0x634])) + 1665794466) & 0x5A8D714C)
       - 1628718729;
  v387 = 662 * (HIBYTE(v386) & 0xF ^ 0xD) + 439568;
  v388 = 662 * ((v386 >> 20) & 0xF ^ 4) + 439568;
  v389 = 662 * (HIWORD(v386) & 0xF ^ 6) + 439568;
  v390 = ((*(unsigned __int8 *)(v35 + (v387 - 965 * ((4450744 * (unint64_t)v387) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((v386 >> 28) ^ 0xA) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v386 >> 28) ^ 0xA) + 439568)) >> 32))) ^ 0xFC) << 12);
  v391 = 662 * (((unsigned __int16)v386 >> 12) ^ 0xB) + 439568;
  v392 = v390 | *(unsigned __int8 *)(v35 + (v389 - 965 * ((4450744 * (unint64_t)v389) >> 32))) ^ 0xFC;
  v393 = 662 * ((v386 >> 8) & 0xF ^ 8) + 439568;
  v394 = (v392 << 8) ^ ((*(unsigned __int8 *)(v35
                                            + (v388 - 965 * ((4450744 * (unint64_t)v388) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (v393 - 965 * ((4450744 * (unint64_t)v393) >> 32))) ^ 0xFC;
  v395 = (v394 << 8) - 1791409778 - ((v394 << 9) & 0x2A728200);
  v396 = 662
       * (((LOBYTE(STACK[0x510])
                           - LOBYTE(STACK[0x634])
                           - ((2 * (LOBYTE(STACK[0x510]) - LOBYTE(STACK[0x634])) - 94) & 0x4C)
                           + 119) >> 4) ^ 0xA)
       + 439568;
  v397 = *(unsigned __int8 *)(v35
                            + (662 * (v386 & 0xF ^ 6)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v386 & 0xF ^ 6) + 439568)) >> 32))) ^ 0xFC;
  v398 = v395 ^ ((*(unsigned __int8 *)(v35 + (v391 - 965 * ((4450744 * (unint64_t)v391) >> 32))) ^ 0xFC) << 12);
  v399 = *(unsigned __int8 *)(v35 + (v396 - 965 * ((4450744 * (unint64_t)v396) >> 32)));
  v400 = v397 + 1331849280 + (~(2 * v397) | 0xFFFFFF7F) + 1;
  v401 = (v398 ^ 0x9539418E | v400 ^ 0x4F626840) ^ (16 * (v399 ^ 0xFC));
  v402 = (-188077117 - (v381 & 0xF ^ 6 | 0xF4CA2BC3) + (v381 & 0xF ^ 6 | 0xB35D43C)) ^ 0xB35D43F;
  v403 = 662
       * ((((16 * (v400 & 0xF)) | v402) - 239589595 - ((2 * ((16 * (v400 & 0xF)) | v402)) & 0x63704E4A)) ^ 0xF1B82725);
  v404 = 662 * (*(unsigned __int8 *)(v35 + (v403 + 466048) % 0x3C5) ^ LODWORD(STACK[0x6A8]) ^ 0x8A2643F9 ^ 0xFC);
  v405 = ~*(unsigned __int8 *)(v35 + v404 % 0x3C5);
  v406 = ((v405 >> 4) - ((v405 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v403 % 0x3C5);
  v407 = v404 + 466048;
  v408 = ((((v385 >> 4) ^ 0x8ADB419E) & 0x4A953BA) + 45709837 - ((2 * ((v385 >> 4) ^ 0x8ADB419E)) & 0x152A404) - 10) ^ ((v385 >> 4) ^ 0x8ADB419E) & 0x4A953B5;
  v409 = 662
       * ((((v401 & 0xF0 | v408) ^ 0x2B97A0D)
         + 168678825
         - 2 * (((v401 & 0xF0 | v408) ^ 0x2B97A0D) & 0xA0DD5BB ^ (v401 & 0x10 | v408 & 0x12))) ^ 0xA0DD5A9);
  v410 = 662
       * (*(unsigned __int8 *)(v35 + (v409 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (662 * v406 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v406 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  v411 = v410 + 466048 - 965 * (((8901487 * (unint64_t)(v410 + 466048)) >> 32) >> 1);
  v412 = ((((v385 >> 8) ^ 0xA1E4BEFE) & 0xF45AF1)
        - (((v385 >> 8) ^ 0xA1E4BEFE) & 0x48B1)
        + (((v385 >> 8) ^ 0xA1E4BEFE) & 0x48B1 ^ 0xB3024CB9)) ^ ((v385 >> 8) ^ 0xA1E4BEFE) & 0xF45AFE;
  v413 = (v401 >> 4) & 0xF0;
  v414 = ((v412 & 0x9142BD22 ^ 0x808A922) + (v412 ^ 0xB3E65649) - ((v412 ^ 0xB3E65649) & 0x994ABD22)) ^ 0x99AEA7DC;
  v415 = ~*(unsigned __int8 *)(v35 + (v410 - 965 * ((4450744 * (unint64_t)v410) >> 32)));
  v416 = 662
       * (((v415 >> 4) - ((v415 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v409 % 0x3C5))
       + 466048;
  v417 = 662 * (((v414 | v413) - 1841120287 - ((2 * (v414 | v413)) & 0x248577C2)) ^ 0x9242BBE1);
  v418 = 662
       * (*(unsigned __int8 *)(v35 + (v417 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v416 - 965 * ((4450744 * (unint64_t)v416) >> 32))) ^ 0xFC)) ^ 0xFC);
  v419 = *(unsigned __int8 *)(v35 + (v418 - 965 * ((4450744 * (unint64_t)v418) >> 32))) ^ 0xFF;
  v420 = 662
       * (((~(v419 >> 3) | 0xE7) + (v419 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v417 % 0x3C5))
       + 466048;
  v421 = v420 - 965 * ((4450744 * (unint64_t)v420) >> 32);
  v422 = *(unsigned __int8 *)(v35 + v407 % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v35 + v411) ^ 0xFC)) ^ ((*(unsigned __int8 *)(v35 + v418 + 466048 - 965 * (((8901487 * (unint64_t)(v418 + 466048)) >> 32) >> 1)) ^ 0xFC) << ((v421 & 8 ^ 8) + (v421 & 8)));
  v423 = ((v398 >> 8) & 0xF0 | ((unsigned __int16)v384 >> 12)) ^ 0x45;
  v424 = 662 * ((v423 - 446774988 - 2 * (v423 & 0x36 ^ (v384 >> 12) & 2)) ^ 0xE55EC134);
  v425 = 662
       * (*(unsigned __int8 *)(v35 + (v424 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v35 + v421) ^ 0xFC)) ^ 0xFC);
  v426 = *(unsigned __int8 *)(v35 + (v425 - 965 * ((4450744 * (unint64_t)v425) >> 32)));
  v427 = v425 + 466048 - 965 * (((8901487 * (unint64_t)(v425 + 466048)) >> 32) >> 1);
  v428 = 662
       * (((~(_BYTE)v426 >> 4) - ((~v426 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v424 % 0x3C5))
       + 466048;
  v429 = ((v398 >> 12) & 0xF0 | HIWORD(v384) & 0xF) ^ 0x9D;
  v430 = 662 * ((v429 + 1488692574 - ((2 * v429) & 0xBC)) ^ 0x58BBA55E);
  v431 = 662
       * (*(unsigned __int8 *)(v35 + (v430 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v428 - 965 * ((4450744 * (unint64_t)v428) >> 32))) ^ 0xFC)) ^ 0xFC);
  v432 = v431 + 466048 - 965 * (((8901487 * (unint64_t)(v431 + 466048)) >> 32) >> 1);
  v433 = ~*(unsigned __int8 *)(v35 + (v431 - 965 * ((4450744 * (unint64_t)v431) >> 32)));
  v434 = 662
       * (((v433 >> 4) - ((v433 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v430 % 0x3C5))
       + 466048;
  v435 = v434 - 965 * ((4450744 * (unint64_t)v434) >> 32);
  v436 = *(unsigned __int8 *)(v35 + v432);
  v437 = 662 * ((v383 >> 20) & 0xF ^ (((v395 >> 20) & 0xF ^ 3) << ((v436 & 4 ^ 4) + (v436 & 4))) ^ 0xE);
  v438 = 662
       * (*(unsigned __int8 *)(v35 + (v437 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v35 + v435) ^ 0xFC)) ^ 0xFC);
  v439 = v438 + 466048 - 965 * (((8901487 * (unint64_t)(v438 + 466048)) >> 32) >> 1);
  v440 = ~*(unsigned __int8 *)(v35 + (v438 - 965 * ((4450744 * (unint64_t)v438) >> 32)));
  v441 = 662
       * (((v440 >> 4) - ((v440 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v437 % 0x3C5))
       + 466048;
  v442 = ((v395 >> 20) & 0xF0 | HIBYTE(v383) & 0xF) ^ 0x53;
  v443 = 662 * ((v442 + 1598140719 - ((2 * v442) & 0x5E)) ^ 0x5F41B12F);
  v444 = 662
       * (*(unsigned __int8 *)(v35 + (v443 + 465083) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v441 - 965 * ((4450744 * (unint64_t)v441) >> 32))) ^ 0xFC)) ^ 0xFC);
  v445 = ~*(unsigned __int8 *)(v35 + (v444 - 965 * ((4450744 * (unint64_t)v444) >> 32)));
  v446 = 662
       * (((v445 >> 4) - ((v445 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v443 % 0x3C5))
       + 466048;
  v447 = 662 * ((HIBYTE(v395) & 0xF0 | (v383 >> 28)) ^ 0x92) + 466048;
  v448 = 662
       * (*(unsigned __int8 *)(v35 + (v447 - 965 * ((4450744 * (unint64_t)v447) >> 32))) ^ (16 * (*(unsigned __int8 *)(v35 + (v446 - 965 * ((4450744 * (unint64_t)v446) >> 32))) ^ 0xFC)) ^ 0xFC)
       + 466048;
  v449 = 662 * ((16 * ((v422 ^ 0xFC) & 0xF)) | v402) + 218460;
  v450 = v422 ^ 0xFC ^ ((*(unsigned __int8 *)(v35 + v427) ^ 0xFC) << 12);
  v451 = 662 * (((v422 ^ 0xFC) & 0xF0 | v408) ^ 0x2B97A0D) + 218460;
  v452 = 662 * ((v422 >> 4) & 0xF0 | v414) + 218460;
  v453 = v450 ^ ((v436 ^ 0xFC) << 16);
  v454 = 662 * (((v450 >> 8) & 0xF0 | ((unsigned __int16)v384 >> 12)) ^ 5) + 218460;
  v455 = v453 ^ ((*(unsigned __int8 *)(v35 + v439) ^ 0xFC) << 20);
  v456 = 662 * (((v453 >> 12) & 0xF0 | HIWORD(v384) & 0xF) ^ 0xD) + 218460;
  v457 = ((*(unsigned __int8 *)(v35 + (v454 - 965 * ((4450744 * (unint64_t)v454) >> 32))) ^ 0xFC) << 12) ^ ((*(unsigned __int8 *)(v35 + v452 % 0x3C5) ^ 0xFC) << 8);
  v458 = v455 ^ ((*(unsigned __int8 *)(v35
                                     + v444
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v444 + 466048)) >> 32) >> 1)) ^ 0xFC) << 24);
  v459 = 662 * ((HIWORD(v455) & 0xF0 | (v383 >> 20) & 0xF) ^ 0xE) + 218460;
  v460 = ((*(unsigned __int8 *)(v35 + (v459 - 965 * ((4450744 * (unint64_t)v459) >> 32))) ^ 0xFC) << 20) ^ ((*(unsigned __int8 *)(v35 + (v456 - 965 * ((4450744 * (unint64_t)v456) >> 32))) ^ 0xFC) << 16);
  v461 = v458 ^ ((*(unsigned __int8 *)(v35 + v448
                                           - 965 * (((8901487 * (unint64_t)v448) >> 32) >> 1)) ^ 0xC) << 28);
  v462 = 662 * (((v458 >> 20) & 0xF0 | HIBYTE(v383) & 0xF) ^ 3) + 218460;
  v463 = 662 * ((HIBYTE(v461) & 0xF0 | (v383 >> 28)) ^ 2) + 218460;
  v464 = *(unsigned __int8 *)(v35 + v449 % 0x3C5);
  v465 = v464 ^ (16 * (*(unsigned __int8 *)(v35 + v451 % 0x3C5) ^ 0xFC));
  v466 = v457 ^ v465 ^ 0x222C29FD;
  v467 = v466 ^ ((*(unsigned __int8 *)(v35 + (v462 - 965 * ((4450744 * (unint64_t)v462) >> 32))) ^ 0xFC) << 24) ^ ((*(unsigned __int8 *)(v35 + (v463 - 965 * ((4450744 * (unint64_t)v463) >> 32))) ^ 0xC) << 28) ^ (v460 + 573319425 - ((2 * v460) & 0x4580000));
  v468 = (unint64_t)(v467 >> (v465 & 0x10 ^ 0x10)) >> (v465 & 0x10);
  LOBYTE(v462) = v468 - ((2 * v468) & 0xBC) + 94;
  LODWORD(v468) = 662 * ((v462 >> 4) ^ 5) + 454132;
  v469 = *(unsigned __int8 *)(v35
                            + (662 * (v462 & 0xF ^ 0xE)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v462 & 0xF ^ 0xE) + 454132)) >> 32))) ^ ((*(unsigned __int8 *)(v35 + (662 * (HIBYTE(v467) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIBYTE(v467) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * (v467 >> 28) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v467 >> 28) + 454132)) >> 32))) ^ 0xC) << 12) ^ (16 * (*(unsigned __int8 *)(v35 + (v468 - 965 * ((4450744 * (unint64_t)v468) >> 32))) ^ 0xFC));
  v470 = v457 ^ v465 ^ 0x788655BF;
  LODWORD(v468) = ((v470 & 0x296 ^ 0x294) + (v466 & 0x296)) * (((unsigned __int16)v457 >> 12) + 686);
  v471 = 662 * ((v470 >> 8) & 0xF ^ 5) + 454132;
  v472 = 662 * (~(v465 >> 4) & 0xF) + 454132;
  LODWORD(STACK[0x6A8]) = LODWORD(STACK[0x61C]) ^ (16
                                                 * (*(unsigned __int8 *)(v35
                                                                       + (v472
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v472) >> 32))) ^ 0xFC)) ^ 0x8E47CE4B ^ (((*(unsigned __int8 *)(v35 + (v471 - 965 * ((4450744 * (unint64_t)v471) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v468 - 965 * ((4450744 * (unint64_t)v468) >> 32))) ^ 0xFC) << 12) ^ ((v469 ^ 0xFC) << 16) | *(unsigned __int8 *)(v35 + (662 * (v464 & 0xF ^ 0xC) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v464 & 0xF ^ 0xCu) + 454132)) >> 32))) ^ 0xFC);
  LODWORD(STACK[0x6B0]) ^= v370 ^ 0xCC6B820E;
  v473 = ~*(unsigned __int8 *)(v35 + (v325 - 965 * ((4450744 * (unint64_t)v325) >> 32)));
  v474 = ((v473 >> 4) - ((v473 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v997 % 0x3C5);
  v475 = ((v306 >> 12) & 0xF0 | ((unsigned __int16)v317 >> 12)) ^ 1;
  v476 = 662 * ((v475 + 1459914995 - ((2 * v475) & 0xFFFFFFE7)) ^ 0x570488F3);
  v477 = 662
       * (*(unsigned __int8 *)(v35 + (v476 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (662 * v474 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v474 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  LODWORD(v468) = v477 + 466048 - 965 * (((8901487 * (unint64_t)(v477 + 466048)) >> 32) >> 1);
  v478 = ~*(unsigned __int8 *)(v35 + (v477 - 965 * ((4450744 * (unint64_t)v477) >> 32)));
  v479 = ((v478 >> 4) - ((v478 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v476 % 0x3C5);
  v480 = *(unsigned __int8 *)(v35 + v468) ^ 0xFC;
  LODWORD(v468) = (v1001 & 0xF0 | HIWORD(v317) & 0xF) ^ 0xF1;
  LODWORD(v468) = 662 * ((v468 - 1944938093 - 2 * (v468 & 0xFFFFFF9F ^ HIWORD(v317) & 0xC)) ^ 0x8C129993);
  v481 = 662
       * (*(unsigned __int8 *)(v35 + ((int)v468 + 466048) % 0x3C5u) ^ (16
                                                                     * (*(unsigned __int8 *)(v35
                                                                                           + (662 * v479 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v479 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  v482 = (v480 << 16) - ((v480 << 17) & 0xEC0000) - 1518963450;
  v483 = *(unsigned __int8 *)(v35
                            + v481
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v481 + 466048)) >> 32) >> 1)) ^ 0xFC;
  v484 = (v483 << 21) & 0x6000000;
  v485 = (v483 << 20) + 184716407;
  v486 = v485 - v484;
  v487 = v485 ^ v482;
  v488 = ~*(unsigned __int8 *)(v35 + (v481 - 965 * ((4450744 * (unint64_t)v481) >> 32)));
  v489 = 662
       * (((v488 >> 4) - ((v488 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v468 % 0x3C5))
       + 466048;
  LODWORD(v468) = ((v1003 >> 20) & 0xF0 | (v317 >> 20) & 0xF) ^ 0x7D;
  LODWORD(v468) = 662 * ((v468 - 1056429211 - ((2 * v468) & 0xCA)) ^ 0xC1082B65);
  v490 = 662
       * (*(unsigned __int8 *)(v35 + ((int)v468 + 466048) % 0x3C5u) ^ (16
                                                                     * (*(unsigned __int8 *)(v35
                                                                                           + (v489 - 965 * ((4450744 * (unint64_t)v489) >> 32))) ^ 0xFC)) ^ 0xFC);
  v491 = v490 + 466048 - 965 * (((8901487 * (unint64_t)(v490 + 466048)) >> 32) >> 1);
  v492 = ~*(unsigned __int8 *)(v35 + (v490 - 965 * ((4450744 * (unint64_t)v490) >> 32)));
  v493 = 662
       * (((v492 >> 4) - ((v492 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v468 % 0x3C5))
       + 466048;
  LODWORD(v468) = 662 * ((HIBYTE(v1003) & 0xF0 | HIBYTE(v317) & 0xF) ^ 0xC3) + 466048;
  v494 = 662
       * (*(unsigned __int8 *)(v35
                             + (v468 - 965 * ((4450744 * (unint64_t)v468) >> 32))) ^ (16 * (*(unsigned __int8 *)(v35 + (v493 - 965 * ((4450744 * (unint64_t)v493) >> 32))) ^ 0xFC)) ^ 0xFC)
       + 466048;
  LODWORD(v468) = (*(unsigned __int8 *)(v35 + v491) ^ 0xFC) << 24;
  v495 = v468 ^ ((*(unsigned __int8 *)(v35 + v494
                                           - 965 * (((8901487 * (unint64_t)v494) >> 32) >> 1)) ^ 0xC) << 28);
  LODWORD(v468) = v468 ^ v486;
  v496 = 662 * (((v998 >> 8) & 0xF0 | ((unsigned __int16)v1004 >> 12)) ^ 0x5B) + 218460;
  v497 = 662 * ((((v482 ^ v996) >> 12) & 0xF0 | HIWORD(v1004) & 0xF) ^ 0x27) + 218460;
  v498 = v999 ^ ((*(unsigned __int8 *)(v35 + (v496 - 965 * ((4450744 * (unint64_t)v496) >> 32))) ^ 0xFC) << 12);
  v499 = 662 * ((HIWORD(v487) & 0xF0 | (v1005 >> 20) & 0xF) ^ 0x72) + 218460;
  LODWORD(v468) = 662 * (((v468 >> 20) & 0xF0 | HIBYTE(v1005) & 0xF) ^ 0xB6) + 218460;
  v500 = 662 * ((HIBYTE(v495) & 0xF0 | (v1005 >> 28)) ^ 4) + 218460;
  v501 = *(unsigned __int8 *)(v35 + (v500 - 965 * ((4450744 * (unint64_t)v500) >> 32))) ^ 0xC;
  v502 = v498 ^ ((*(unsigned __int8 *)(v35 + (v497 - 965 * ((4450744 * (unint64_t)v497) >> 32))) ^ 0xFC) << 16);
  v503 = v502 ^ ((*(unsigned __int8 *)(v35 + (v499 - 965 * ((4450744 * (unint64_t)v499) >> 32))) ^ 0xFC) << 20);
  LODWORD(v468) = v503 ^ ((*(unsigned __int8 *)(v35
                                              + (v468
                                                             - 965
                                                             * ((4450744 * (unint64_t)v468) >> 32))) ^ 0xFC) << 24);
  v504 = 662 * (((((v501 << 28) - (v501 >> 1 << 30) + 1781935410) ^ v468) >> 28) ^ 6) + 454132;
  v505 = ((((*(unsigned __int8 *)(v35
                                + (662 * (BYTE3(v468) & 0xF)
                                               + 454132
                                               - 965
                                               * ((4450744 * (unint64_t)(662 * (BYTE3(v468) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v504 - 965 * ((4450744 * (unint64_t)v504) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * (HIWORD(v502) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v502) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((v503 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v503 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 12);
  v506 = 662 * (~(v1002 >> 4) & 0xF) + 454132;
  LODWORD(v468) = *(unsigned __int8 *)(v35 + v1000 - 21477902 + v995);
  LODWORD(STACK[0x638]) ^= LODWORD(STACK[0x6A0]);
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x5E4]) ^ (16
                                                 * (*(unsigned __int8 *)(v35
                                                                       + (v506
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v506) >> 32))) ^ 0xFC)) ^ 0x26297A4 ^ (((v505 | v468 ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((unsigned __int16)v498 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v498 >> 12) + 454132)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + LODWORD(STACK[0x640])) ^ 0xFC);
  v507 = *(unsigned __int8 *)(v35
                            + LODWORD(STACK[0x630])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x630]) + 466048)) >> 32) >> 1)) ^ 0xFC;
  LOBYTE(v502) = *(_BYTE *)(v35 + (LODWORD(STACK[0x644]) + 466048) % 0x3C5u) ^ 0xFC;
  LODWORD(v468) = *(unsigned __int8 *)(v35 + (662 * LODWORD(STACK[0x624]) + 466048) % 0x3C5u) ^ 0xFC;
  v508 = *(unsigned __int8 *)(v35
                            + LODWORD(STACK[0x614])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x614]) + 466048)) >> 32) >> 1)) ^ 0xFC;
  v509 = *(unsigned __int8 *)(v35
                            + LODWORD(STACK[0x620])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x620]) + 466048)) >> 32) >> 1)) ^ 0xFC;
  v510 = (v509 << 12) - 518813481;
  v511 = v510 - ((v509 << 13) & 0x70000);
  v512 = (v508 << 16) - ((v508 << 17) & 0x10C0000) + 92683713;
  v513 = *(unsigned __int8 *)(v35
                            + LODWORD(STACK[0x600])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x600]) + 466048)) >> 32) >> 1)) ^ 0xFC;
  v514 = (v513 << 21) & 0x8000000;
  v515 = (v513 << 20) + 67524389;
  v516 = v515 - v514;
  v517 = v515 ^ v512;
  v518 = v512 ^ v511;
  v519 = ~*(unsigned __int8 *)(v35 + LODWORD(STACK[0x5FC]));
  v520 = ((v519 >> 4) - ((v519 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + LODWORD(STACK[0x608]) * (((LODWORD(STACK[0x610]) >> 20) & 0xB ^ 0x76A18E03) + ((LODWORD(STACK[0x610]) >> 20) & 0xB ^ 8) - 1990298485) % 0x3C5);
  v521 = (STACK[0x618] & 0xF0 | HIBYTE(LODWORD(STACK[0x610])) & 0xF) ^ 0xE0;
  v522 = 662 * ((v521 - 1319180154 - ((2 * v521) & 0x10C)) ^ 0xB15EE886);
  v523 = 662
       * (*(unsigned __int8 *)(v35 + (v522 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (662 * v520 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v520 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  v524 = v523 + 466048 - 965 * (((8901487 * (unint64_t)(v523 + 466048)) >> 32) >> 1);
  v525 = ~*(unsigned __int8 *)(v35 + (v523 - 965 * ((4450744 * (unint64_t)v523) >> 32)));
  v526 = 662
       * (((v525 >> 4) - ((v525 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v522 % 0x3C5))
       + 466048;
  v527 = 662 * (((LODWORD(STACK[0x618]) >> 4) & 0xF0 | (LODWORD(STACK[0x610]) >> 28)) ^ 0x59) + 466048;
  v528 = 662
       * (*(unsigned __int8 *)(v35 + (v527 - 965 * ((4450744 * (unint64_t)v527) >> 32))) ^ (16 * (*(unsigned __int8 *)(v35 + (v526 - 965 * ((4450744 * (unint64_t)v526) >> 32))) ^ 0xFC)) ^ 0xFC)
       + 466048;
  v529 = *(unsigned __int8 *)(v35 + v524) ^ 0xFC;
  v530 = (v529 << 24) + 2139781525 - (v529 << 25);
  v531 = *(unsigned __int8 *)(v35 + v528 - 965 * (((8901487 * (unint64_t)v528) >> 32) >> 1)) ^ 0xC;
  v532 = ((v531 << 28) + 2139781525 - (v531 << 29)) ^ v530;
  v533 = v530 ^ v516;
  v534 = 16 * v507 - ((32 * v507) & 0x12C0) - 397137564;
  LOBYTE(v502) = v502 - ((2 * v502) & 0xCA) + 101;
  LODWORD(v468) = ((_DWORD)v468 << 8) - (((_DWORD)v468 << 9) & 0x1FC00) - 1453261107;
  v535 = v510 ^ v468;
  LODWORD(v468) = v468 ^ v534;
  LOBYTE(v534) = v534 ^ v502;
  LODWORD(v468) = 662 * (((v468 >> 4) & 0xF0 | (LODWORD(STACK[0x648]) >> 8) & 0xF) ^ 0x70) + 218460;
  v536 = 662 * (((v535 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x610]) >> 12)) ^ 0x7F) + 218460;
  v537 = 662 * (((v518 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x610])) & 0xF) ^ 0x50) + 218460;
  v538 = 662 * ((HIWORD(v517) & 0xF0 | (LODWORD(STACK[0x610]) >> 20) & 0xF) ^ 0x88) + 218460;
  v539 = 662 * (((v533 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x610])) & 0xF) ^ 0xB0) + 218460;
  v540 = 662 * ((HIBYTE(v532) & 0xF0 | (LODWORD(STACK[0x610]) >> 28)) ^ 9) + 218460;
  v541 = *(unsigned __int8 *)(v35 + (662 * ((16 * (v502 & 0xF)) ^ 0x50 | LODWORD(STACK[0x670])) + 218460) % 0x3C5);
  v542 = v541 ^ (16
               * (*(unsigned __int8 *)(v35 + (662 * (v534 & 0xF0u | LODWORD(STACK[0x660])) + 218460) % 0x3C5) ^ 0xFC));
  LODWORD(v468) = v542 ^ ((*(unsigned __int8 *)(v35
                                              + (v468
                                                             - 965
                                                             * ((4450744 * (unint64_t)v468) >> 32))) ^ 0xFC) << 8);
  v543 = v468 ^ ((*(unsigned __int8 *)(v35 + (v536 - 965 * ((4450744 * (unint64_t)v536) >> 32))) ^ 0xFC) << 12);
  v544 = v543 ^ ((*(unsigned __int8 *)(v35 + (v537 - 965 * ((4450744 * (unint64_t)v537) >> 32))) ^ 0xFC) << 16);
  v545 = v544 ^ ((*(unsigned __int8 *)(v35 + (v538 - 965 * ((4450744 * (unint64_t)v538) >> 32))) ^ 0xFC) << 20);
  v546 = v545 ^ ((*(unsigned __int8 *)(v35 + (v539 - 965 * ((4450744 * (unint64_t)v539) >> 32))) ^ 0xFC) << 24);
  v547 = 662
       * ((((-268435456
           * (*(unsigned __int8 *)(v35 + (v540 - 965 * ((4450744 * (unint64_t)v540) >> 32))) ^ 0xC)
           + 1950947619) ^ v546) >> 28) ^ 7)
       + 454132;
  v548 = 662 * (~(v542 >> 4) & 0xF) + 454132;
  LODWORD(v468) = ((((*(unsigned __int8 *)(v35
                                         + (662 * (HIBYTE(v546) & 0xF)
                                                        + 454132
                                                        - 965
                                                        * ((4450744
                                                          * (unint64_t)(662 * (HIBYTE(v546) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v547 - 965 * ((4450744 * (unint64_t)v547) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * (HIWORD(v544) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v544) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((v545 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v545 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * ((v468 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v468 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xFC;
  LODWORD(STACK[0x6A0]) = LODWORD(STACK[0x688]) ^ 0x6B5A1C33 ^ LODWORD(STACK[0x5EC]);
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x5F0]) ^ (16
                                                 * (*(unsigned __int8 *)(v35
                                                                       + (v548
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v548) >> 32))) ^ 0xFC)) ^ 0xF345146 ^ (((_DWORD)v468 << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((unsigned __int16)v543 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v543 >> 12) + 454132)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * (v541 & 0xF ^ 0xC) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v541 & 0xF ^ 0xCu) + 454132)) >> 32))) ^ 0xFC);
  LODWORD(v468) = ((2 * v1028) & 0xADFE535E ^ 0x21B4535E) + (v1028 ^ 0xC6255650);
  LODWORD(STACK[0x670]) = v468;
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x5E8]) ^ (LODWORD(STACK[0x628])
                                                 - ((LODWORD(STACK[0x5F8]) - 1621103322) & 0xEB679248)
                                                 + 1164165047);
  LODWORD(v468) = v468
                + LODWORD(STACK[0x4E8])
                - ((2 * (v468 + LODWORD(STACK[0x4E8])) - 1366342198) & 0xC93F1CE6)
                - 1142476456;
  v549 = 662 * (BYTE3(v468) & 0xF ^ 4) + 439568;
  v550 = 662 * ((v468 >> 20) & 0xF ^ 9) + 439568;
  v551 = 662 * ((~(v468 >> 15) & 0x10) + (WORD1(v468) & 0xF ^ 0x297));
  v552 = ((*(unsigned __int8 *)(v35 + (v549 - 965 * ((4450744 * (unint64_t)v549) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((v468 >> 28) ^ 6) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v468 >> 28) ^ 6) + 439568)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (v551 - 965 * ((4450744 * (unint64_t)v551) >> 32))) ^ 0xFCu;
  v553 = 662 * (((unsigned __int16)v468 >> 12) ^ 8) + 439568;
  v554 = 662 * ((v468 >> 8) & 0xF ^ 0xE) + 439568;
  v555 = (v552 << 8) ^ ((unint64_t)(*(unsigned __int8 *)(v35
                                                              + (v550
                                                                             - 965
                                                                             * ((4450744 * (unint64_t)v550) >> 32))) ^ 0xFCu) << 12);
  v556 = *(unsigned __int8 *)(v35 + (v554 - 965 * ((4450744 * (unint64_t)v554) >> 32)));
  v557 = 662 * ((v468 >> 4) ^ 7) + 439568;
  LODWORD(v555) = (((2 * ((v555 | v556 & 0xFE ^ 0xFCLL) >> 1)) ^ (16
                                                                                               * (*(unsigned __int8 *)(v35 + (v553 - 965 * ((4450744 * (unint64_t)v553) >> 32))) ^ 0xFC)) | ((((v555 | v556 & 0xFE ^ 0xFCLL) >> 1) ^ (v556 << 31)) >> 31)) << 8) ^ 0x19C0B500;
  v558 = v555 - 834874954 - ((2 * v555) & 0x9C79A200);
  v559 = (LODWORD(STACK[0x680]) ^ 0x41AE697)
       + LODWORD(STACK[0x4D8])
       - ((2 * ((LODWORD(STACK[0x680]) ^ 0x41AE697) + LODWORD(STACK[0x4D8])) + 1001978302) & 0x54C78498)
       - 2009055445;
  v560 = 662 * (HIBYTE(v559) & 0xF ^ 0xA) + 439568;
  v561 = v560 - 965 * ((4450744 * (unint64_t)v560) >> 32);
  v562 = 662 * ((v559 >> 20) & 0xF ^ 6) + 439568;
  v563 = v562 - 965 * ((4450744 * (unint64_t)v562) >> 32);
  v564 = *(unsigned __int8 *)(v35
                            + (662 * (v468 & 0xF ^ 3)
                                           + 439568
                                           - 965 * ((4450744 * (662 * (v468 & 0xF ^ 3) + 439568)) >> 32))) ^ 0xFC;
  v565 = v564 + 1855696375 - ((2 * v564) & 0xFFFFFFEF);
  v566 = 662 * (HIWORD(v559) & 0xF ^ 3) + 439568;
  v567 = v566 - 965 * ((4450744 * (unint64_t)v566) >> 32);
  v568 = v558 ^ 0xCE3CD1B6;
  v569 = (v558 ^ 0xCE3CD1B6 | v565 ^ 0x6E9BADF7) ^ (16
                                                  * (*(unsigned __int8 *)(v35
                                                                        + (v557
                                                                                       - 965
                                                                                       * ((4450744
                                                                                         * (unint64_t)v557) >> 32))) ^ 0xFC));
  v570 = 662
       * (((unsigned __int16)((LOWORD(STACK[0x680]) ^ 0xE697)
                            + LOWORD(STACK[0x4D8])
                            - ((2 * ((LOWORD(STACK[0x680]) ^ 0xE697) + LOWORD(STACK[0x4D8])) - 1602) & 0x8498)
                            + 16171) >> 12) ^ 0xC)
       + 439568;
  v571 = ((*(unsigned __int8 *)(v35 + v561) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35
                                                                                 + (662
                                                                                                * ((v559 >> 28) ^ 0xA)
                                                                                                + 439568
                                                                                                - 965
                                                                                                * ((4450744
                                                                                                  * (unint64_t)(662 * ((v559 >> 28) ^ 0xA) + 439568)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + v567) ^ 0xFC;
  v572 = 662 * ((v559 >> 8) & 0xF ^ 2) + 439568;
  v573 = (v571 << 8) ^ ((*(unsigned __int8 *)(v35 + v563) ^ 0xFC) << 12);
  v574 = 662
       * ((((LOBYTE(STACK[0x680]) ^ 0x97)
                           + LOBYTE(STACK[0x4D8])
                           - ((2 * ((LOBYTE(STACK[0x680]) ^ 0x97) + LOBYTE(STACK[0x4D8])) - 66) & 0x98)
                           + 43) >> 4) ^ 4)
       + 439568;
  v575 = 662 * (v559 & 0xF ^ 0xC)
       + 439568
       - 965 * ((4450744 * (unint64_t)(662 * (v559 & 0xF ^ 0xC) + 439568)) >> 32);
  v576 = v573 | *(unsigned __int8 *)(v35 + (v572 - 965 * ((4450744 * (unint64_t)v572) >> 32))) ^ 0xFC;
  v577 = (v576 << 8) - 403766504 - (a14 & (v576 << 9));
  v578 = *(unsigned __int8 *)(v35 + v575) ^ 0xFC;
  v579 = v577 ^ ((*(unsigned __int8 *)(v35 + (v570 - 965 * ((4450744 * (unint64_t)v570) >> 32))) ^ 0xFC) << 12);
  v580 = (v579 ^ 0xE7EF0318 | (v578 - 1463494816 - ((2 * v578) & 0xC0)) ^ 0xA8C4D760) ^ (16
                                                                                       * (*(unsigned __int8 *)(v35 + (v574 - 965 * ((4450744 * (unint64_t)v574) >> 32))) ^ 0xFC));
  v581 = 16 * (v578 & 0xF);
  v582 = (((2 * v565) | 0x65) - (v565 & 0xF) + 93) & 0x7F ^ 0x45;
  v583 = 662 * (((v581 | v582) + 744140206 - ((2 * (v581 | v582)) & 0x15C)) ^ 0x2C5AADAE);
  v584 = 662 * (*(unsigned __int8 *)(v35 + (v583 + 466048) % 0x3C5) ^ LODWORD(STACK[0x67C]) ^ 0xFC);
  v585 = (v584 + 466048) % 0x3C5;
  v586 = ~*(unsigned __int8 *)(v35 + v584 % 0x3C5);
  v587 = ((v586 >> 4) - ((v586 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v583 % 0x3C5);
  v588 = 662 * v587 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v587 + 466048)) >> 32);
  v589 = ((v569 >> 4) ^ 0x43118048 | 0xA81BFB3D)
       - ((v569 >> 4) ^ 0x43118048 | 0x57E404C2)
       + 1474561218;
  v590 = 662
       * (((v589 ^ 0xEB0A7B75 | v580 & 0xF0) - 1845512563 - ((2 * (v589 ^ 0xEB0A7B75 | v580 & 0xF0)) & 0x23FF6D1A)) ^ 0x91FFB68D);
  v591 = 662
       * (*(unsigned __int8 *)(v35 + (v590 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v35 + v588) ^ 0xFC)) ^ 0xFC);
  v592 = v591 + 466048 - 965 * (((8901487 * (unint64_t)(v591 + 466048)) >> 32) >> 1);
  v593 = ~*(unsigned __int8 *)(v35 + (v591 - 965 * ((4450744 * (unint64_t)v591) >> 32)));
  v594 = ((v593 >> 4) - ((v593 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v590 % 0x3C5);
  v595 = ((v569 >> 8) & 0xF ^ 9 | 0xC17D1511) - ((v569 >> 8) & 0xF ^ 9 | 0x3E82EAEE) + 1048767214;
  v596 = (v595 & 0x40000513 ^ 0x4004C12) + (v595 ^ 0xF1DA3105) - ((v595 ^ 0xF1DA3105) & 0x54026D13);
  v597 = *(unsigned __int8 *)(v35 + v585) ^ 0xFC;
  v598 = v597 - ((2 * v597) & 0x16E);
  v599 = 662
       * ((((v596 | (v580 >> 4) & 0xF0) ^ 0x64A5490B)
         - 384027680
         - ((2 * ((v596 | (v580 >> 4) & 0xF0) ^ 0x64A5490B)) & 0x523867C0)) ^ 0xE91C33E0);
  v600 = 662
       * (*(unsigned __int8 *)(v35 + (v599 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (662 * v594 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v594 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  v601 = ~*(unsigned __int8 *)(v35 + (v600 - 965 * ((4450744 * (unint64_t)v600) >> 32)));
  v602 = 662
       * (((v601 >> 4) - ((v601 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v599 % 0x3C5))
       + 466048;
  v603 = v602 - 965 * ((4450744 * (unint64_t)v602) >> 32);
  v604 = ((*(unsigned __int8 *)(v35
                              + v600
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v600 + 466048)) >> 32) >> 1)) ^ 0xFC) << 8) ^ (16 * (*(unsigned __int8 *)(v35 + v592) ^ 0xFC));
  v605 = ((v558 >> 12) ^ 0x745B169D) & 0x40F3CDC ^ 0x3A80D7E4 ^ ((((v558 >> 12) ^ 0x745B169D) & 0x441F3CD3)
                                                               - ((2 * ((v558 >> 12) ^ 0x745B169D)) & 0x80C7926)
                                                               + 1049034679);
  v606 = (v605 - ((2 * v605) & 0xD8627832) + 1831943193) ^ 0x29271441;
  v607 = 662
       * (((v606 | (v579 >> 8) & 0xF0) + 625320244 - 2 * ((v606 & 0x2545A13D | (v579 >> 8) & 0x30) ^ v606 & 9)) ^ 0x2545A134);
  v608 = 662
       * (*(unsigned __int8 *)(v35 + (v607 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v35 + v603) ^ 0xFC)) ^ 0xFC);
  v609 = *(unsigned __int8 *)(v35 + (v608 - 965 * ((4450744 * (unint64_t)v608) >> 32)));
  LODWORD(STACK[0x67C]) = v608
                        + 466048
                        - 965 * (((8901487 * (unint64_t)(v608 + 466048)) >> 32) >> 1);
  LODWORD(v555) = (HIWORD(v558) ^ 0x8FA67693) & 0xBA234FF ^ 0x54DE834F ^ (((HIWORD(v558) ^ 0x8FA67693) & 0xBA234F0)
                                                                        + 1423868736
                                                                        - ((2 * (HIWORD(v558) ^ 0x8FA67693)) & 0x1040080));
  v610 = 662
       * (((~(_BYTE)v609 >> 4) - ((~v609 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v607 % 0x3C5))
       + 466048;
  v611 = 662
       * (((v555 | ~(v579 >> 12) & 0xF0) - 197153403 - ((2 * (v555 | ~(v579 >> 12) & 0xF0)) & 0x687F5B0A)) ^ 0xF43FAD85);
  v612 = 662
       * (*(unsigned __int8 *)(v35 + (v611 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v610 - 965 * ((4450744 * (unint64_t)v610) >> 32))) ^ 0xFC)) ^ 0xFC);
  v613 = v612 + 466048 - 965 * (((8901487 * (unint64_t)(v612 + 466048)) >> 32) >> 1);
  v614 = ~*(unsigned __int8 *)(v35 + (v612 - 965 * ((4450744 * (unint64_t)v612) >> 32)));
  v615 = ((v614 >> 4) - ((v614 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v611 % 0x3C5);
  v616 = ((2 * (((v558 ^ 0xCE3CD1B6) >> 20) & 0xF ^ 0x2600B02D)) | 0x3D9D2844)
       - (((v558 ^ 0xCE3CD1B6) >> 20) & 0xF ^ 0x2600B02D)
       + 1630628830;
  v617 = (v616 | HIWORD(v577) & 0xF0 ^ 0xE0) ^ 0xB8CE2403;
  v618 = 662 * ((v617 + 1994072780 - ((2 * v617) & 0x6DB64598)) ^ 0x76DB22CC);
  v619 = 662
       * (*(unsigned __int8 *)(v35 + (v618 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (662 * v615 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v615 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  v620 = v619 + 466048 - 965 * (((8901487 * (unint64_t)(v619 + 466048)) >> 32) >> 1);
  v621 = (HIBYTE(v558) ^ 0x7D9BBE9B) & 0x48034CB ^ 0x1105419F ^ (((HIBYTE(v558) ^ 0x7D9BBE9B) & 0x4C9034C4)
                                                               - ((HIBYTE(v558) ^ 0x7D9BBE9B) & 0x48034C0)
                                                               + ((HIBYTE(v558) ^ 0x7D9BBE9B) & 0xC0 ^ 0x110541DB));
  v622 = *(unsigned __int8 *)(v35 + (v619 - 965 * ((4450744 * (unint64_t)v619) >> 32))) ^ 0xFF;
  v623 = 662
       * (((~(v622 >> 3) | 0xE7) + (v622 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v618 % 0x3C5))
       + 466048;
  v624 = (1116026538 - (v621 | 0x428536AA) + (v621 | 0xBD7AC955)) ^ 0xF1EAFD1D;
  v625 = ((2 * (v624 | (v577 >> 20) & 0xF0 ^ 0x70)) & 0x337FD2BE) + ((v624 | (v577 >> 20) & 0xF0 ^ 0x70) ^ 0xD9BFE95F);
  v598 -= 638516553;
  v626 = v598 ^ 0xBBA52FF2 ^ v604;
  v627 = 662
       * (*(unsigned __int8 *)(v35 + (662 * (v625 + (v626 & 0x2C0 ^ 0x280 | v626 & 0x2C0 ^ 0x40)) - 373652394) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v35 + (v623 - 965 * ((4450744 * (unint64_t)v623) >> 32))) ^ 0xFC)) ^ 0xFC);
  v628 = v627 + 466048 - 965 * (((8901487 * (unint64_t)(v627 + 466048)) >> 32) >> 1);
  v629 = ~*(unsigned __int8 *)(v35 + (v627 - 965 * ((4450744 * (unint64_t)v627) >> 32)));
  v630 = 662
       * (((v629 >> 4) - ((v629 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + (662 * v625 - 373652394) % 0x3C5))
       + 466048;
  v631 = 662 * ((HIBYTE(v577) & 0xF0 | (v568 >> 28)) ^ 0xE1) + 466048;
  v632 = 662
       * (*(unsigned __int8 *)(v35 + (v631 - 965 * ((4450744 * (unint64_t)v631) >> 32))) ^ (16 * (*(unsigned __int8 *)(v35 + (v630 - 965 * ((4450744 * (unint64_t)v630) >> 32))) ^ 0xFC)) ^ 0xFC)
       + 466048;
  v633 = (v626 & 0xF0 ^ 0xD77BBF99) + 679755815 + ((2 * v626) & 0x1A0 ^ 0x80);
  v634 = 662 * ((16 * (v598 & 0xF)) ^ 0x70 | v582) + 218460;
  v635 = (v633 - (v633 | v589 ^ 0xEB0A7B75)) ^ ((v589 ^ 0x14F5848A) + 1);
  v636 = 662 * ((v589 ^ 0x48599E91 ^ (v635 - ((2 * v635) & 0x46A7CBC8) - 1554782748)) + v633) + 218460;
  v637 = v604 ^ ((*(unsigned __int8 *)(v35 + LODWORD(STACK[0x67C])) ^ 0xFC) << 12);
  v638 = 662 * (((v604 >> 4) & 0xF0 | v596) ^ 0x64A5490B) + 218460;
  v639 = v637 ^ ((*(unsigned __int8 *)(v35 + v613) ^ 0xFC) << 16);
  v640 = v639 ^ ((*(unsigned __int8 *)(v35 + v620) ^ 0xFC) << 20);
  v641 = 662 * ((v639 >> 12) & 0xF0 | v555) + 218460;
  v642 = *(unsigned __int8 *)(v35 + (v634 - 965 * ((4450744 * (unint64_t)v634) >> 32)));
  v643 = v642 ^ (16 * (*(unsigned __int8 *)(v35 + v636 % 0x3C5) ^ 0xFC));
  v644 = (v643 | ((*(unsigned __int8 *)(v35 + (662 * ((v637 >> 8) & 0xF0 | v606) + 218460) % 0x3C5) ^ 0xFC) << 12)) ^ ((*(unsigned __int8 *)(v35 + v638 % 0x3C5) ^ 0xFC) << 8);
  v645 = v640 ^ ((*(unsigned __int8 *)(v35 + v628) ^ 0xFC) << 24);
  LODWORD(v555) = 662
                * ((((v645 ^ ((*(unsigned __int8 *)(v35
                                                  + v632
                                                  - 965
                                                  * (((8901487 * (unint64_t)v632) >> 32) >> 1)) ^ 0xC) << 28)) >> 24) & 0xF0 | (v568 >> 28)) ^ 1)
                + 218460;
  v646 = v644 ^ ((*(unsigned __int8 *)(v35 + v641 % 0x3C5) ^ 0xFC) << 16);
  v647 = v646 ^ ((*(unsigned __int8 *)(v35 + (662 * ((HIWORD(v640) & 0xF0 | v616) ^ 0xB8CE2403) + 218460) % 0x3C5) ^ 0xFC) << 20);
  v648 = v647 ^ ((*(unsigned __int8 *)(v35 + (662 * ((v645 >> 20) & 0xF0 | v624) + 218460) % 0x3C5) ^ 0xFC) << 24);
  LODWORD(v555) = 662
                * ((v648 ^ ((*(unsigned __int8 *)(v35
                                                + (v555
                                                               - 965
                                                               * ((4450744 * (unint64_t)v555) >> 32))) ^ 0xC) << 28)) >> 28)
                + 454132;
  LODWORD(v555) = *(unsigned __int8 *)(v35
                                     + (v555
                                                    - 965 * ((4450744 * (unint64_t)v555) >> 32))) ^ 0xFC;
  v649 = *(unsigned __int8 *)(v35
                            + (662 * (HIBYTE(v648) & 0xF)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (HIBYTE(v648) & 0xF) + 454132)) >> 32))) ^ 0xFC;
  v650 = (v649 << 9) & 0x1B800;
  v651 = (v649 << 8) - 2085364546;
  LODWORD(v555) = (((_DWORD)v555 << 12) - 2085364546 - (((_DWORD)v555 << 13) & 0x7A000)) ^ (v651 - v650);
  v652 = 662 * ((v651 & 0x200 | (v647 >> 20) & 0xF) + (v651 & 0x200 ^ 0x2AE));
  v653 = v555
       + (*(unsigned __int8 *)(v35
                             + (662 * (HIWORD(v646) & 0xF)
                                            + 454132
                                            - 965
                                            * ((4450744 * (unint64_t)(662 * (HIWORD(v646) & 0xF) + 454132)) >> 32))) ^ 0xFC);
  LODWORD(v555) = 662 * (((v644 >> 8) & 0xF ^ 0x2AE) + ((v644 >> 7) & 0x1C));
  v654 = (v653 << 8) ^ ((*(unsigned __int8 *)(v35
                                            + (v652 - 965 * ((4450744 * (unint64_t)v652) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (v555 - 965 * ((4450744 * (unint64_t)v555) >> 32))) ^ 0xFC;
  LODWORD(v555) = 662 * (~(v643 >> 4) & 0xF) + 454132;
  v655 = 662 * (v642 & 0xF ^ 0xC)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * (v642 & 0xF ^ 0xCu) + 454132)) >> 32);
  v656 = (v654 << 8) ^ ((*(unsigned __int8 *)(v35
                                            + (662 * ((unsigned __int16)v644 >> 12)
                                                           + 454132
                                                           - 965
                                                           * ((4450744
                                                             * (unint64_t)(662
                                                                                * ((unsigned __int16)v644 >> 12)
                                                                                + 454132)) >> 32))) ^ 0xFC) << 12);
  v657 = STACK[0x660];
  LODWORD(STACK[0x61C]) = LODWORD(STACK[0x660]) ^ 0xAF99C12E ^ v468;
  LODWORD(v468) = (v656 | *(unsigned __int8 *)(v35 + v655) ^ 0xFC) ^ (16
                                                                    * (*(unsigned __int8 *)(v35
                                                                                          + (v555 - 965 * ((4450744 * (unint64_t)v555) >> 32))) ^ 0xFC));
  v658 = (v657 ^ 0xA0B00FCE) + 366088407 + (v655 & 0x329) + (v655 & 0x329 ^ 0xEA2DEF29);
  v659 = LODWORD(STACK[0x670]) + LODWORD(STACK[0x668]);
  LODWORD(STACK[0x670]) = v468 - ((2 * v468) & 0x56F96288);
  v660 = (LODWORD(STACK[0x680]) ^ 0xFBE51968) + (LODWORD(STACK[0x5D4]) ^ 0x23ADDEF8);
  v661 = v659 - ((2 * v659 - 703931200) & 0xD5C1DD78);
  LODWORD(v468) = *(unsigned __int8 *)(v35
                                     + v1031
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v1031 + 466048)) >> 32) >> 1)) ^ 0xFC;
  LOBYTE(v659) = *(_BYTE *)(v35 + (LODWORD(STACK[0x5AC]) + 466048) % 0x3C5u) ^ 0xFC;
  LOBYTE(v647) = v659 - ((2 * v659) & 0x3C);
  v662 = ((*(unsigned __int8 *)(v35
                              + v1022
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v1022 + 466048)) >> 32) >> 1)) ^ 0xFC) << 12) ^ ((*(unsigned __int8 *)(v35 + v1025 + 466048 - 965 * (((8901487 * (unint64_t)(v1025 + 466048)) >> 32) >> 1)) ^ 0xFC) << 8);
  v663 = ~*(unsigned __int8 *)(v35 + (v1017 - 965 * ((4450744 * (unint64_t)v1017) >> 32)));
  LODWORD(v555) = ((v663 >> 4) - ((v663 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v1018 % 0x3C5);
  v664 = ((v1024 >> 20) & 0xF0 | HIBYTE(v1023) & 0xF) ^ 0x25;
  v665 = 662 * ((v664 + 273318078 - ((2 * v664) & 0x17C)) ^ 0x104A80BE);
  v666 = 662
       * (*(unsigned __int8 *)(v35 + (v665 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (662 * v555 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v555 + 466048)) >> 32))) ^ 0xFC)) ^ 0xFC);
  LODWORD(v555) = *(unsigned __int8 *)(v35 + (v666 - 965 * ((4450744 * (unint64_t)v666) >> 32))) ^ 0xFF;
  LODWORD(v555) = 662
                * (((~(v555 >> 3) | 0xE7) + (v555 >> 4) - 3) ^ *(unsigned __int8 *)(v35 + v665 % 0x3C5))
                + 466048;
  LOBYTE(v633) = ((v658 ^ 0x73) - ((2 * (v658 ^ 0x73) - 120) & 0x74) + 14) & 4;
  v667 = 662
       * (*(unsigned __int8 *)(v35
                             + (662 * ((((v1024 >> 28) ^ 0xC) << v633 << (v633 ^ 4)) ^ (v1023 >> 28) ^ 9) + 466048)
                             % 0x3C5) ^ (16
                                       * (*(unsigned __int8 *)(v35
                                                             + (v555
                                                                            - 965
                                                                            * ((4450744
                                                                              * (unint64_t)v555) >> 32))) ^ 0xFC)) ^ 0xFC)
       + 466048;
  LOBYTE(v647) = v647 - 98;
  v668 = 662 * ((16 * (v647 & 0xF)) ^ 0xE0 | LODWORD(STACK[0x5CC])) + 218460;
  LODWORD(v468) = 16 * v468 - ((32 * v468) & 0xFFFFF83F) + 762915862;
  v669 = (v468 ^ v647) & 0xF0 ^ 0x80 | LODWORD(STACK[0x5BC]);
  LODWORD(v468) = v468 ^ 0x19154821 ^ v662;
  v670 = v468 ^ ((*(unsigned __int8 *)(v35
                                     + v1019
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v1019 + 466048)) >> 32) >> 1)) ^ 0xFC) << 16);
  v671 = (v468 >> 4) & 0xF0 | (LODWORD(STACK[0x5D0]) >> 8) & 0xF;
  LODWORD(v468) = *(unsigned __int8 *)(v35 + v668 % 0x3C5);
  v672 = (v468 ^ 0xFC | ((*(unsigned __int8 *)(v35
                                             + (662 * (v671 ^ 0x40)
                                                            + 218460
                                                            - 965
                                                            * ((4450744
                                                              * (unint64_t)(662 * (v671 ^ 0x40) + 218460)) >> 32))) ^ 0xFC) << 8)) ^ (16 * (*(unsigned __int8 *)(v35 + (662 * v669 + 218460) % 0x3C5u) ^ 0xFC));
  v673 = 662 * (((v662 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5B4]) >> 12)) ^ 2) + 218460;
  v674 = v670 ^ ((*(unsigned __int8 *)(v35 + v1020) ^ 0xFC) << 20);
  v675 = 662 * (((v670 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5B4])) & 0xF) ^ 0xC3) + 218460;
  v676 = v674 ^ ((*(unsigned __int8 *)(v35
                                     + v666
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v666 + 466048)) >> 32) >> 1)) ^ 0xFC) << 24);
  v677 = 662 * ((HIWORD(v674) & 0xF0 | (v1023 >> 20) & 0xF) ^ 0x64) + 218460;
  v678 = v676 ^ ((*(unsigned __int8 *)(v35 + v667
                                           - 965 * (((8901487 * (unint64_t)v667) >> 32) >> 1)) ^ 0xC) << 28);
  v679 = 662 * (((v676 >> 20) & 0xF0 | HIBYTE(v1023) & 0xF) ^ 0x45) + 218460;
  v680 = 662 * ((HIBYTE(v678) & 0xF0 | (v1023 >> 28)) ^ 0x39) + 218460;
  v681 = *(unsigned __int8 *)(v35 + (v680 - 965 * ((4450744 * (unint64_t)v680) >> 32))) ^ 0xC;
  v682 = v672 ^ ((*(unsigned __int8 *)(v35 + (v673 - 965 * ((4450744 * (unint64_t)v673) >> 32))) ^ 0xFC) << 12);
  v683 = ((*(unsigned __int8 *)(v35 + (v677 - 965 * ((4450744 * (unint64_t)v677) >> 32))) ^ 0xFC) << 20) ^ ((*(unsigned __int8 *)(v35 + (v675 - 965 * ((4450744 * (unint64_t)v675) >> 32))) ^ 0xFC) << 16) ^ v682;
  v684 = v683 ^ ((*(unsigned __int8 *)(v35 + (v679 - 965 * ((4450744 * (unint64_t)v679) >> 32))) ^ 0xFC) << 24);
  v685 = 662 * (((((v681 << 28) - (v681 >> 1 << 30) - 280750126) ^ v684) >> 28) ^ 0xE) + 454132;
  v686 = 662 * ((v683 >> 20) & 0xF)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * ((v683 >> 20) & 0xF) + 454132)) >> 32);
  v687 = ((((((*(unsigned __int8 *)(v35
                                  + (662 * (HIBYTE(v684) & 0xF)
                                                 + 454132
                                                 - 965
                                                 * ((4450744 * (unint64_t)(662 * (HIBYTE(v684) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v685 - 965 * ((4450744 * (unint64_t)v685) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * (HIWORD(v683) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v683) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + v686) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * ((v672 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v672 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((unsigned __int16)v682 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v682 >> 12) + 454132)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * (v468 & 0xF ^ 0xC) + 454132 - 965 * ((4450744 * (662 * (v468 & 0xF ^ 0xC) + 454132)) >> 32))) ^ 0xFC;
  v688 = STACK[0x694];
  v689 = (v1016 + 199597561) ^ LODWORD(STACK[0x694]) ^ (v660 - ((2 * v660) & 0xDC325FF6) + 1847144443);
  LODWORD(STACK[0x644]) = v689;
  LODWORD(v468) = LODWORD(STACK[0x5DC]) ^ 0x81F74652 ^ ((v658 ^ 0xA15B4C73) + 9162093);
  v690 = (v658 ^ 0xA15B4C73) - ((2 * (v658 ^ 0xA15B4C73) + 750501000) & 0x4FEA0F74) + 1045620222;
  v691 = LODWORD(STACK[0x5E0])
       + 199597561
       + (v1013 ^ 0x95E1AE23)
       + (v690 ^ 0x3227176C)
       + ((2 * v690) & 0xD45BDE52 ^ 0xBBB5F1AF);
  v692 = v688 ^ 0x64D2F408;
  v693 = 2 * (v688 ^ 0x64D2F408);
  v694 = (v688 ^ 0x64D2F408) - ((v693 + 18324186) & 0xDF89592A) - 263161342;
  LODWORD(STACK[0x67C]) = v694 ^ (16
                                * (*(unsigned __int8 *)(v35
                                                      + (662 * (v672 >> 4)
                                                                     + 454132
                                                                     - 965
                                                                     * ((4450744
                                                                       * (unint64_t)(662
                                                                                          * (v672 >> 4)
                                                                                          + 454132)) >> 32))) ^ 0xFC)) ^ 0x5B69FB4D ^ v687;
  v695 = STACK[0x698];
  v696 = LODWORD(STACK[0x5D8]) + 199597561 + (v694 ^ 0x103B536A) + (LODWORD(STACK[0x698]) ^ 0x3F45A2AE);
  v697 = v692 - ((v693 + 448717868) & a13);
  v698 = *(unsigned __int8 *)(v35
                            + (662 * (v1011 & 0xF)
                                           + 454132
                                           - 965 * ((4450744 * (unint64_t)(662 * (v1011 & 0xF) + 454132)) >> 32))) ^ 0xFC;
  v699 = ((((v1010 << 8) ^ ((*(unsigned __int8 *)(v35
                                                + (662 * ((v1011 >> 20) & 0xF)
                                                               + 454132
                                                               - 965
                                                               * ((4450744
                                                                 * (unint64_t)(662 * ((v1011 >> 20) & 0xF)
                                                                                    + 454132)) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * ((v1011 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v1011 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (662 * ((unsigned __int16)v1011 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v1011 >> 12) + 454132)) >> 32))) ^ 0xFC) << 12) | v698) ^ ((16 * (*(unsigned __int8 *)(v35 + (662 * (v1011 >> 4) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v1011 >> 4) + 454132)) >> 32))) ^ 0xFC)) | 0x7B7C0000);
  LODWORD(STACK[0x648]) = v699 - 2 * (v699 & 0x42CF9163 ^ v698 & 2);
  LODWORD(v555) = (v658 ^ 0xA15B4C73) + 224358934;
  v700 = (v691 + 3) ^ 0xD248A134;
  LODWORD(STACK[0x660]) = v700;
  v701 = (v700 + (v555 ^ 0x12FDF2A0) - ((2 * (v700 + (v555 ^ 0x12FDF2A0))) & 0x304004CE) + 404750951) ^ v1013;
  LODWORD(STACK[0x680]) = v1015 ^ 0x8488668 ^ v555;
  LODWORD(STACK[0x668]) = v697 - 802225289;
  v702 = (v696 + 2) ^ 0xD248A134;
  v703 = (v1021 + 199597561) ^ 0x8A82AF7 ^ (v661 - 706323172) ^ v658;
  v704 = (v702
        + ((v697 - 802225289) ^ 0xD03263C1)
        - ((2 * (v702 + ((v697 - 802225289) ^ 0xD03263C1))) & 0x8174BAA2)
        - 1061528239) ^ v695;
  v705 = (v689 ^ 0xC9D853CB)
       + 1593311431
       + (v704 ^ 0x2FC7BCD)
       + 147671881
       - ((2 * ((v689 ^ 0xC9D853CB) + 1593311431 + (v704 ^ 0x2FC7BCD))) & 0x119A9692);
  v706 = (v704 ^ 0x2FC7BCD) + v702;
  v707 = *(unsigned __int8 *)(v35
                            + v1030
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v1030 + 466048)) >> 32) >> 1)) ^ 0xFC;
  LOBYTE(v702) = *(_BYTE *)(v35 + (v1033 + 466048) % 0x3C5) ^ 0xFC;
  v708 = v702 - ((2 * v702) & 0x58);
  v709 = *(unsigned __int8 *)(v35
                            + v1009
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v1009 + 466048)) >> 32) >> 1)) ^ 0xFC;
  v710 = *(unsigned __int8 *)(v35
                            + v1007
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(v1007 + 466048)) >> 32) >> 1)) ^ 0xFC;
  v711 = (v710 << 16) - 424753098 - ((v710 << 17) & 0x15C0000);
  v712 = ~*(unsigned __int8 *)(v35 + v1006);
  v713 = 662
       * (((v712 >> 4) - ((v712 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v1008 % 0x3C5))
       + 466048;
  v714 = (v1035 & 0xF0 | (v1037 >> 20) & 0xF) ^ 0xF0;
  v715 = 662 * ((v714 - 1607111734 - ((2 * v714) & 0x194)) ^ 0xA0356BCA);
  v716 = 662
       * (*(unsigned __int8 *)(v35 + (v715 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v713 - 965 * ((4450744 * (unint64_t)v713) >> 32))) ^ 0xFC)) ^ 0xFC);
  v717 = *(unsigned __int8 *)(v35
                            + v716
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v716 + 466048)) >> 32) >> 1));
  v718 = ~*(unsigned __int8 *)(v35 + (v716 - 965 * ((4450744 * (unint64_t)v716) >> 32)));
  v719 = 662
       * (((v718 >> 4) - ((v718 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v715 % 0x3C5))
       + 466048;
  v720 = (LODWORD(STACK[0x5B0]) >> 20) & 0xF0 | HIBYTE(v1037) & 0xF;
  v721 = 662
       * (((v720 ^ 0xE7)
         - 1489551323
         - 2 * ((v720 ^ 0xE7) & 0x3D ^ ((LODWORD(STACK[0x5B0]) >> 20) & 0x10 | HIBYTE(v1037) & 8))) ^ 0xA7374025);
  v722 = 662
       * (*(unsigned __int8 *)(v35 + (v721 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v35
                                                                                     + (v719 - 965 * ((4450744 * (unint64_t)v719) >> 32))) ^ 0xFC)) ^ 0xFC);
  v723 = v722 + 466048 - 965 * (((8901487 * (unint64_t)(v722 + 466048)) >> 32) >> 1);
  v724 = ~*(unsigned __int8 *)(v35 + (v722 - 965 * ((4450744 * (unint64_t)v722) >> 32)));
  v725 = 662
       * (((v724 >> 4) - ((v724 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v35 + v721 % 0x3C5))
       + 466048;
  v726 = 662 * ((HIBYTE(LODWORD(STACK[0x5B0])) & 0xF0 | (v1037 >> 28)) ^ 0x55) + 466048;
  v727 = *(unsigned __int8 *)(v35 + (v726 - 965 * ((4450744 * (unint64_t)v726) >> 32))) ^ (16 * (*(unsigned __int8 *)(v35 + (v725 - 965 * ((4450744 * (unint64_t)v725) >> 32))) ^ 0xFC));
  v728 = *(unsigned __int8 *)(v35
                            + v1027
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v1027 + 466048)) >> 32) >> 1)) ^ 0xFC;
  v729 = (v728 << 9) & 0x6000;
  v730 = (v728 << 8) + 672444469;
  v731 = (v709 << 12) + 2124111728 - ((v709 << 13) & 0x16C000) + 433;
  v732 = v731 ^ (v730 - v729);
  v733 = v711 ^ v731;
  v734 = *(unsigned __int8 *)(v35
                            + 662 * (v727 ^ 0xFC)
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(662 * (v727 ^ 0xFCu) + 466048)) >> 32) >> 1));
  v735 = (((v717 ^ 0xFC) << 20) - 424753098 - (((v717 ^ 0xFC) << 21) & 0xD400000)) ^ v711 ^ ((*(unsigned __int8 *)(v35 + v723) ^ 0xFC) << 24) ^ ((v734 ^ 0xC) << 28);
  v736 = 16 * v707 - ((32 * v707) & 0x240) - 964837088;
  v708 += 44;
  v737 = v730 ^ v736;
  v738 = 662 * ((v736 ^ v708) & 0xF0 | (LODWORD(STACK[0x5C0]) >> 4)) + 218460;
  v739 = 662 * (((v737 >> 4) & 0xF0 | (LODWORD(STACK[0x5C0]) >> 8) & 0xF) ^ 0x10) + 218460;
  v740 = 662 * (((v732 >> 8) & 0xF0 | ((unsigned __int16)v1037 >> 12)) ^ 0xDE) + 218460;
  v741 = (v735 >> 20) + 1079189314 - ((v735 >> 19) & 0x1E84);
  v742 = 662 * (((v733 >> 12) & 0xF0 | HIWORD(v1037) & 0xF) ^ 0x55) + 218460;
  v743 = v742 - 965 * ((4450744 * (unint64_t)v742) >> 32);
  LOBYTE(v742) = -30 - (v734 & 4 | 0xEB);
  v744 = (v741 ^ 0x40531F42u) >> (v742 & 4);
  v745 = 662 * (((v1037 >> 20) & 0xF | (16 * (v741 & 0xF))) ^ 0x20) + 218460;
  LOBYTE(v742) = (v744 >> (v742 ^ 0xF7)) - ((2 * (v744 >> (v742 ^ 0xF7))) & 0xA) + 5;
  v746 = 662 * ((HIBYTE(v1037) & 0xF | (16 * (v742 & 0xF))) ^ 0x57) + 218460;
  v747 = 662 * ((v742 & 0xF0 | (v1037 >> 28)) ^ 5) + 218460;
  v748 = v747 - 965 * ((4450744 * (unint64_t)v747) >> 32);
  v749 = *(unsigned __int8 *)(v35 + (662 * (((16 * (v708 & 0xF)) | LODWORD(STACK[0x5B8])) ^ 0xC0u) + 218460) % 0x3C5);
  v750 = v749 ^ (16
               * (*(unsigned __int8 *)(v35 + (v738 - 965 * ((4450744 * (unint64_t)v738) >> 32))) ^ 0xFC));
  v751 = v750 ^ ((*(unsigned __int8 *)(v35 + (v739 - 965 * ((4450744 * (unint64_t)v739) >> 32))) ^ 0xFC) << 8);
  v752 = v751 ^ ((*(unsigned __int8 *)(v35 + (v740 - 965 * ((4450744 * (unint64_t)v740) >> 32))) ^ 0xFC) << 12);
  v753 = v752 ^ ((*(unsigned __int8 *)(v35 + v743) ^ 0xFC) << 16);
  v754 = v753 ^ ((*(unsigned __int8 *)(v35 + (v745 - 965 * ((4450744 * (unint64_t)v745) >> 32))) ^ 0xFC) << 20);
  v755 = v754 ^ ((*(unsigned __int8 *)(v35 + (v746 - 965 * ((4450744 * (unint64_t)v746) >> 32))) ^ 0xFC) << 24);
  v756 = 662 * ((v755 ^ ((*(unsigned __int8 *)(v35 + v748) ^ 0xC) << 28)) >> 28) + 454132;
  v757 = 662 * (((v754 >> 20) & 0xF ^ 0x2AE) + ((v754 >> 19) & 0x1C));
  v758 = ((*(unsigned __int8 *)(v35
                              + (662 * (HIBYTE(v755) & 0xF)
                                             + 454132
                                             - 965
                                             * ((4450744 * (unint64_t)(662 * (HIBYTE(v755) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v35 + (v756 - 965 * ((4450744 * (unint64_t)v756) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * (HIWORD(v753) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v753) & 0xF) + 454132)) >> 32))) ^ 0xFC;
  v759 = 662 * (((v752 >> 11) & 0x1C) + (((unsigned __int16)v752 >> 12) ^ 0x2AE));
  v760 = v701 ^ 0x70C22876;
  v761 = v703
       + 366088407
       + (v701 ^ 0x70C22876)
       - 2
       * ((v703 + 366088407 + (v701 ^ 0x70C22876) + 153481200) & 0x2EE7D8AE ^ (v703 + 366088407 + (v701 ^ 0x70C22876)) & 0xC)
       - 133314414;
  v762 = v1012 ^ 0x77D9EBC3 ^ v701;
  v763 = 662 * (~(v750 >> 4) & 0xF) + 454132;
  v764 = (v701 ^ 0x70C22876) + LODWORD(STACK[0x660]);
  v765 = (v758 << 8) ^ ((*(unsigned __int8 *)(v35
                                            + (v757 - 965 * ((4450744 * (unint64_t)v757) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v35 + (662 * ((v751 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v751 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xFC;
  v766 = STACK[0x67C];
  v767 = v760 + (v761 ^ 0x5118275D) + 1 - ((2 * (v760 + (v761 ^ 0x5118275D) + 1)) & 0xF8BE3FE6);
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x4CC]) - 1044350668;
  v768 = LODWORD(STACK[0x648]) - 1026584223;
  v769 = (v706 + 147671881 - ((2 * v706) & 0x119A9692)) ^ v705;
  v767 -= 60874765;
  v770 = *(unsigned __int8 *)(v35
                            + (662 * (v749 & 0xF ^ 0xC)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v749 & 0xF ^ 0xCu) + 454132)) >> 32))) ^ v704 ^ (((*(unsigned __int8 *)(v35 + (v759 - 965 * ((4450744 * (unint64_t)v759) >> 32))) ^ 0xFC) << 12) | (16 * (*(unsigned __int8 *)(v35 + (v763 - 965 * ((4450744 * (unint64_t)v763) >> 32))) ^ 0xFC))) ^ (v765 << 8) ^ 0xB6512CE9;
  v771 = (v705 ^ 0x8CD4B49) + (LODWORD(STACK[0x698]) ^ 0xAAA27263);
  v772 = (LODWORD(STACK[0x644]) ^ 0x3627AC34)
       - ((2 * (LODWORD(STACK[0x644]) ^ 0x3627AC34) + 1108344436) & 0xFDCC335E)
       - 1611786007;
  v773 = v705 ^ 0xE30FF48B;
  v774 = v761 ^ 0xB97A7893 ^ v767;
  v775 = v773 + (v772 ^ 0xFEE619AF) - 1812200341 - ((2 * (v773 + (v772 ^ 0xFEE619AF))) & 0x27F808D6);
  v776 = v774 + 2 * ((v767 ^ 0x7C5F1FF3) & (v761 ^ 0x45256760));
  v777 = v776 + 983784461 + ~(2 * (v776 & 0x3AA35C0D ^ v774 & 1));
  v778 = STACK[0x680];
  v779 = v769 ^ v775;
  v780 = (v769 ^ v775 ^ v771 ^ 0xA83FCB5) + 2130458472 + ((2 * (v769 ^ v775 ^ v771)) & 0x32FFF1BC ^ 0x22F80094);
  v781 = v761 ^ (v764 - 1360537438 - ((2 * v764) & 0x5DCFB144)) ^ v777;
  v782 = v781 ^ 0x65E490C0;
  v783 = v772 ^ 0xEBF0A35C ^ v769 ^ v775;
  v784 = (v781 ^ ((v761 ^ 0xAEE7D8A2) + v1014) ^ 0x480D8BF7)
       - 8392800
       + ((2 * (v781 ^ ((v761 ^ 0xAEE7D8A2) + v1014))) & 0xE55DAFF6 ^ 0x6544A810);
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x694]) ^ 0x7C4525CF ^ (LODWORD(STACK[0x670]) + 729592132);
  v785 = v767 ^ 0xD47C7C ^ v781 ^ 0x65E490C0;
  v786 = (((v779 ^ 0x93FC046B) + 749426951) ^ 0x7CBF7FBF) + ((2 * ((v779 ^ 0x93FC046B) + 749426951)) & 0xF97EFF7E);
  v787 = LODWORD(STACK[0x668]) ^ 0xA650A578 ^ v768;
  LODWORD(STACK[0x5C0]) = ((LODWORD(STACK[0x560]) + 639401514) | 0xC8812365)
                        + ((434340309 - LODWORD(STACK[0x560])) & 0x377EDC9A)
                        + 1;
  LODWORD(STACK[0x5BC]) = LODWORD(STACK[0x650]) + 1799998799 - (STACK[0x658] & 0x1A80);
  LODWORD(STACK[0x5DC]) = 1391662310;
  LODWORD(STACK[0x698]) = 29120;
  LODWORD(STACK[0x694]) = 14976;
  LODWORD(STACK[0x5E0]) = 2;
  LODWORD(STACK[0x644]) = 63;
  LODWORD(STACK[0x668]) = STACK[0x50C];
  v788 = v468;
  v789 = v787;
  LODWORD(v468) = (LODWORD(STACK[0x6B4]) - 2120) | 0x160;
  LODWORD(STACK[0x5D8]) = v468;
  HIDWORD(v790) = v468 ^ v766 ^ 0xFFFFFFF3;
  LODWORD(v790) = v766 ^ 0xB4AD57C0;
  LODWORD(v468) = v790 >> 6;
  HIDWORD(v790) = v766 ^ 0x7D8;
  LODWORD(v790) = v766 ^ 0xB4AD5000;
  v791 = v790 >> 11;
  LODWORD(STACK[0x608]) = v770;
  v792 = ((v788 ^ 0xC51A49C2) & (v770 ^ 0xB4AD57D8))
       + 1961627834
       - ((2 * ((v788 ^ 0xC51A49C2) & (v770 ^ 0xB4AD57D8))) & 0xE9D82174);
  HIDWORD(v790) = v788 ^ 2;
  LODWORD(v790) = v788 ^ 0xC51A49C0;
  v793 = v790 >> 6;
  HIDWORD(v790) = v766 ^ 0xAD57D8;
  LODWORD(v790) = v766 ^ 0xB4000000;
  LODWORD(STACK[0x67C]) = v766;
  LODWORD(v468) = v791 ^ (v790 >> 25) ^ v468;
  HIDWORD(v790) = v788 ^ 0x1C2;
  LODWORD(v790) = v788 ^ 0xC51A4800;
  v794 = v790 >> 11;
  LODWORD(STACK[0x650]) = v788;
  HIDWORD(v790) = v788 ^ 0x11A49C2;
  LODWORD(v790) = v788 ^ 0xC4000000;
  LODWORD(STACK[0x658]) = v789;
  v789 ^= 0xB4AD57D8;
  LODWORD(STACK[0x680]) = v778;
  v795 = (v778 ^ v762) & (v766 ^ 0xB4AD57D8) ^ (v788 ^ 0xC51A49C2) & v789;
  v796 = v794 ^ (v790 >> 25) ^ v793;
  v797 = LODWORD(STACK[0x5C0])
       + (LODWORD(STACK[0x638]) ^ 0x4A059DDA)
       + 1807106195
       - ((2 * (LODWORD(STACK[0x5C0]) + (LODWORD(STACK[0x638]) ^ 0x4A059DDA))) & 0xD76C8126);
  v798 = (v795 + (v792 ^ 0x8B13EF45 ^ v795) + 1) ^ ((v792 ^ 0x8B13EF45) + 1);
  v799 = ((v798 + 1961627834 - ((2 * v798) & 0xE9D82174)) ^ v792) + v795;
  LODWORD(STACK[0x5B8]) = v789;
  LODWORD(STACK[0x5D4]) = v788 ^ 0xC51A49C2;
  LODWORD(STACK[0x5D0]) = v766 ^ 0xB4AD57D8;
  v800 = (v766 ^ 0xB4AD57D8) & (v770 ^ 0xB4AD57D8) ^ v762 ^ (v766 ^ 0xB4AD57D8) & v789 ^ (v778 ^ v762) & (v788 ^ 0xC51A49C2);
  v801 = v785 ^ v777;
  v777 ^= 0x3AA35C0Cu;
  v802 = v777 - ((2 * v777 + 107943916) & 0xBA5D07CA) + 1617301467;
  v803 = ((2 * (v785 ^ v802)) & 0xFBBFFBF0 ^ 0xF9845940) + (v785 ^ v802 ^ 0x833DD15E);
  v804 = ((2 * (v777 + 53971958)) & 0xBF3FF72E) + ((v777 + 53971958) ^ 0x5F9FFB97);
  v805 = ((v783 ^ 0x79154167) + (v783 ^ 0x86EABE98 ^ v796) + 1) ^ ((v775 ^ 0x6C03FB94) + (v775 ^ 0x93FC046B ^ v796) + 1) ^ ((v801 ^ v468 ^ 0x66900CB0) + (v796 ^ 0x996FF34F ^ v801 ^ v468) + 1);
  v806 = v804 + (v782 ^ 0x5F47CCCC) + (v802 ^ 0x5D2E83E5);
  LODWORD(v555) = v803 - v804 - 1020969994 - ((2 * (v803 - v804) - 1015022786) & 0xC2CA7CAE);
  v807 = (v775 ^ 0x93FC046B)
       - 2 * (((v775 ^ 0x93FC046B) + 53971958) & 0x6E094EDF ^ (v775 ^ 0x93FC046B) & 1)
       + 1900075732;
  v808 = v783 ^ 0xE8E3F046 ^ v807;
  v809 = (v807 ^ 0x91F6B121) + v808 + 856066014 - ((2 * ((v807 ^ 0x91F6B121) + v808 + 1)) & 0x660D0FBA);
  v810 = ((2 * v807) ^ 0xDC129DBC) + v786 - 280502278;
  v811 = v799 ^ v770;
  v812 = v555 ^ v802;
  v813 = (v555 ^ v802 ^ v800 ^ 0x294D6BAD) + (v811 ^ 0x621FC38A ^ v555 ^ v802 ^ v800);
  v814 = ((v784 + (v802 ^ 0xF2CDE3C7) + 933107567 + v803) ^ 0x7F9CB2EB)
       - 17834113
       + ((2 * (v784 + (v802 ^ 0xF2CDE3C7) + 933107567 + v803)) & 0xFF3965D6);
  v815 = ((2 * (v780 + (v807 ^ 0xC1EA2EFC) + v808 + 254848188)) & 0xA3F7ACFC)
       + ((v780 + (v807 ^ 0xC1EA2EFC) + v808 + 254848188) ^ 0x51FBD67E);
  v816 = v809 ^ v807;
  v817 = ((v809 ^ 0xCCF97822) + (v809 ^ 0x87ABD005 ^ v811) + 1) ^ ((v807 ^ 0x3E15D103) + (v807 ^ 0x75477924 ^ v811) + 1) ^ (v813 + 1);
  v818 = ((2 * (v815 - 1375458942 + (v809 ^ 0x330687DD))) & 0x7BDF7DBE)
       + ((v815 - 1375458942 + (v809 ^ 0x330687DD)) ^ 0x3DEFBEDF);
  v819 = v814 + (v555 ^ 0xE1653E57);
  v820 = 2 * (v819 - 926708174);
  v821 = v814 + ((v819 - 1757053331) ^ 0xEA2DEF29) - 1408701055 + ((v820 - 1660690314) & 0xD45BDE52);
  v822 = *((_DWORD *)*(&off_38F180 + LODWORD(STACK[0x6B4]) - 2429) + 189);
  v823 = *((_DWORD *)*(&off_38F180 + LODWORD(STACK[0x6B4]) - 2429) + 9) ^ 0xA0E08184;
  v824 = 280502278 - v786 + LODWORD(STACK[0x660]) + (v800 ^ 0xC51A49C2);
  LODWORD(STACK[0x600]) = STACK[0x670];
  v825 = STACK[0x688];
  v826 = STACK[0x640];
  v827 = v806;
  LODWORD(STACK[0x620]) = v806;
  v828 = v824 + v806 + v805;
  v829 = STACK[0x6B8];
  v830 = LODWORD(STACK[0x698]) % 0x11B;
  v831 = v828 + (*(_DWORD *)(STACK[0x6B8] + 4 * (LODWORD(STACK[0x694]) % 0x11B)) ^ 0x9712F73D) + 882592804 + v823;
  LODWORD(STACK[0x610]) = v831;
  v832 = *(_DWORD *)(v829 + 4 * v830) ^ 0x9712F73D;
  LODWORD(STACK[0x614]) = v810;
  LODWORD(v468) = (v782 ^ 0x5F47CCCC) - v810 + LODWORD(STACK[0x668]) + v468 + v832 + v817;
  v833 = STACK[0x6A8];
  v834 = LODWORD(STACK[0x6A8]) ^ 0x92B02CF0;
  HIDWORD(v790) = STACK[0x6A8];
  LODWORD(v790) = v834;
  v835 = v790 >> 2;
  LODWORD(v468) = v468 + (((v822 ^ 0x2C182022) + 536929007) ^ 0x53D5FEB5);
  HIDWORD(v790) = LODWORD(STACK[0x6A8]) ^ 0x302CF0;
  LODWORD(v790) = LODWORD(STACK[0x6A8]) ^ 0x92800000;
  v836 = v790 >> 22;
  HIDWORD(v790) = LODWORD(STACK[0x6A8]) ^ 0xCF0;
  LODWORD(v790) = LODWORD(STACK[0x6A8]) ^ 0x92B02000;
  v837 = (v790 >> 13) ^ v835 ^ v836;
  LODWORD(STACK[0x638]) = v837;
  v838 = LODWORD(STACK[0x6B0]) ^ 0x4A059DDA;
  HIDWORD(v790) = LODWORD(STACK[0x6B0]) ^ 2;
  LODWORD(v790) = LODWORD(STACK[0x6B0]) ^ 0x4A059DD8;
  v839 = v790 >> 2;
  HIDWORD(v790) = LODWORD(STACK[0x6B0]) ^ 0x1DDA;
  LODWORD(v790) = LODWORD(STACK[0x6B0]) ^ 0x4A058000;
  v840 = (v790 >> 13) ^ v839;
  HIDWORD(v790) = LODWORD(STACK[0x6B0]) ^ 0x59DDA;
  LODWORD(v790) = LODWORD(STACK[0x6B0]) ^ 0x4A000000;
  LODWORD(STACK[0x648]) = v797;
  v797 ^= 0x6BB64093u;
  v841 = LODWORD(STACK[0x6A0]) ^ 0x6BB64093;
  v842 = (v825 ^ 0x92B02CF0 ^ v826 ^ 0x92B02CF0) & v838 ^ (v825 ^ 0x92B02CF0) & v797 ^ v834 & v797 ^ v841 & (v833 ^ v826);
  LODWORD(STACK[0x5CC]) = v825 ^ 0x92B02CF0;
  LODWORD(STACK[0x688]) = v826;
  LODWORD(STACK[0x670]) = v825;
  LODWORD(STACK[0x5B4]) = v834;
  LODWORD(STACK[0x5B0]) = v797;
  LODWORD(STACK[0x5AC]) = v841;
  v843 = (v825 ^ 0x92B02CF0) & (v826 ^ 0x92B02CF0) ^ v834 & (v825 ^ v826) ^ v841 & v838 ^ v797 & v838 ^ v841 & v797;
  LODWORD(STACK[0x630]) = v843;
  v844 = v812 ^ 0x9E6E33E2;
  v845 = (v819 - 926708174 - ((v820 + 442408660) & 0x1B8DDCE4) - 352961060) ^ v812 ^ 0x9E6E33E2;
  v846 = v818 - ((2 * v818 - 853581234) & 0xD164E306) - 817749334;
  v847 = v816 ^ v846;
  LODWORD(STACK[0x634]) = ((v847 ^ 0x65A1275D) + (v847 ^ 0x9A5ED8A2 ^ v840 ^ (v790 >> 22)) + 1) ^ ((v846 ^ 0x974D8E7C)
                                                                                                 + (v840 ^ (v790 >> 22) ^ 0x68B27183 ^ v846)
                                                                                                 + 1) ^ ((v844 ^ v837 ^ 0x7239118D) + (v840 ^ (v790 >> 22) ^ 0x8DC6EE72 ^ v844 ^ v837) + 1);
  LODWORD(STACK[0x618]) = v818 + v815;
  v848 = (v847 ^ 0x9A5ED8A2) + 2 * (v818 + v815) - 1580256984;
  v849 = ((2 * v848) & 0x7BBFEDF2) + (v848 ^ 0xBDDFF6F9);
  LODWORD(STACK[0x628]) = v821;
  v850 = v845 + 2 * v821;
  v851 = ((v819 + 963991407) ^ v843 ^ (v850 + 1820023820))
       + 443851116
       + (~(2 * ((v819 + 963991407) ^ v843 ^ (v850 + 1820023820))) | 0xCB16BD27)
       + 1;
  LODWORD(STACK[0x624]) = (-1109395719 - v849 + ((v849 + 1109395719) ^ v842)) ^ ((v842 ^ (v818 + 2048011002))
                                                                               - v818
                                                                               - 2048011002) ^ ((v851 ^ 0xE58B5E93)
                                                                                              + (v842 ^ 0x1A74A16C ^ v851)
                                                                                              + 1);
  v852 = v818 + v815 + v818;
  v853 = v849 - (v852 + 871448194);
  v854 = v818 + v853;
  v855 = (v854 + 623488757) ^ (v810 - (v852 + 871448194) - 2045794376);
  v856 = v855 + 2081646011 - ((2 * v855) & 0xF826CB76);
  v857 = v854 + v853 - 338418876 - ((2 * (v854 + v853 - 338418876) - 925229224) & 0xAC0E52FE);
  v858 = v850 - (v821 + v819 - 926708174);
  v859 = (v850 - v821 - 1237471738) ^ (v827 - (v821 + v819 - 926708174) + 792425130);
  v860 = v850 - v821 + 1952201254 + v858 + 677002420;
  LODWORD(STACK[0x668]) = ((v859 + (v762 ^ 0xC51A49C2)) ^ 0xAFDE5DFC)
                        + 1605889896
                        + ((2 * (v859 + (v762 ^ 0xC51A49C2))) & 0x5FBCBBF8);
  LODWORD(v555) = (v821 + v819 - 926708174 - ((2 * (v821 + v819 - 926708174) + 233564748) & 0x1D042604) - 1518860248) ^ 0xE821302;
  v861 = v858 - ((2 * v858 + 588067618) & 0x3A142CB0) - 1366249495;
  v862 = v861 ^ v762 ^ (v860 - ((2 * v860 - 1104791574) & 0x8A349384) + 606954935);
  v863 = v853 - ((2 * v853 - 299601530) & 0xD6FA2912) - 493925044;
  v857 -= 1166788309;
  v864 = ((v857 ^ 0x29F8D680) + (LODWORD(STACK[0x608]) ^ 0x62AA7EA7 ^ v857) + 1) ^ ((v863 ^ 0x1482EB76)
                                                                                  + (LODWORD(STACK[0x608]) ^ 0x5FD04351 ^ v863)
                                                                                  + 1) ^ ((v862 ^ 0xE2F5E9A7)
                                                                                        + (LODWORD(STACK[0x608]) ^ 0xA9A74180 ^ v862)
                                                                                        + 1);
  v865 = v863 ^ 0x3D7A3DF6 ^ v857;
  v866 = ((2 * (v859 - 1228702806)) & 0xA8FBFF74) + ((v859 - 1228702806) ^ 0xD47DFFBA);
  LODWORD(STACK[0x660]) = (v856 ^ 0x83EC9A44) - 569685022 + v864;
  v867 = v866 + 729940038 + ((v860 - ((2 * v860 + 1042692074) & 0x3A142CB0) + 2082288205) ^ v861);
  v868 = v867 - 1112187350 - ((2 * v867) & 0x7B6ABC54);
  v869 = v856 ^ (v852 - ((2 * (v852 + 871448194) + 236848606) & 0xF826CB76) - 1223448788);
  v870 = v856 ^ 0x7C1365BB;
  v871 = (((v856 ^ 0x7C1365BB) - 1228702806) ^ 0x7F75FDFF)
       - 1342215426
       + ((2 * ((v856 ^ 0x7C1365BB) - 1228702806)) & 0xFEEBFBFE);
  v872 = v866 + v858;
  v873 = ((2 * (((v555 ^ v859) + v859) ^ (v858 + 622978955))) & 0xDFDCFFFE)
       + (((v555 ^ v859) + v859) ^ (v858 + 622978955) ^ 0x6FEE7FFF);
  v874 = STACK[0x600];
  v875 = (v866 + v858 - ((2 * (v866 + v858) + 558354338) & 0x256059E0) - 481028927) ^ LODWORD(STACK[0x600]) ^ v868;
  v876 = ((2 * ((v869 + v870) ^ (v853 - 1968339267))) & 0xEFAFBEDE) + ((v869 + v870) ^ (v853 - 1968339267) ^ 0x77D7DF6F);
  LODWORD(v555) = (v875 ^ 0x424AA1D5) + (LODWORD(STACK[0x61C]) ^ 0xD6031EB9 ^ v875);
  v877 = v853 + v871 + 1176;
  v878 = v865 + v871 + 1176;
  v879 = ((2 * (v870 - 2138462770)) & 0xCF6B7E7E) + ((v870 - 2138462770) ^ 0x67B5BF3F);
  v880 = LODWORD(STACK[0x61C]) ^ 0x6BB64093;
  v881 = v880 ^ (v877 + 1530403112);
  v882 = ((2 * (v859 - 2138462770)) & 0xFF99B4FE) + ((v859 - 2138462770) ^ 0xFFCCDA7F);
  v877 -= 200651568;
  v883 = v878 + 196910268;
  LODWORD(v555) = (v881 - v877 - 1731054680) ^ ((v880 ^ (v878 - 796224917)) - (v878 + 196910268) + 993135185) ^ (v555 + 1);
  v884 = ((2 * (v882 + 3351937)) & 0x1FF79BBE ^ 0x7E69A04) + ((v882 + 3351937) ^ 0x4C0C80DD);
  LODWORD(STACK[0x608]) = v873 + v872;
  v885 = (v873 - v884 - 1609740832) ^ (v873 + v872 - 524982318);
  LODWORD(STACK[0x640]) = v885;
  v886 = (v874 ^ 0x92B02CF0) + v831 + v882 - 1045670629 + v885;
  v887 = ((2 * (v879 - 1739964223)) & 0xFDFFEFFE ^ 0x85EE8A04) + ((v879 - 1739964223) ^ 0x3D08BAFD);
  v888 = v876 + v877 - ((2 * (v876 + v877) + 1588320722) & 0x54B7B68A) - 1716402130;
  v889 = ((2 * (v888 ^ (v876 - v887 + 120068240))) & 0xB2DFCFFE ^ 0x1097868A)
       + (v888 ^ (v876 - v887 + 120068240) ^ 0xF3343CBA);
  LODWORD(STACK[0x5F0]) = (-3351937 - v882 + (v868 ^ 0xBDB55E2A)) ^ (v884 - 1375537139);
  v890 = v886 - ((2 * v886) & 0x84A47A58) + 1112685868;
  LODWORD(STACK[0x5F8]) = ((2 * ((v888 ^ 0xAA5BDB45) + 1571000102)) & 0xFDE4EBFA)
                        + (((v888 ^ 0xAA5BDB45) + 1571000102) ^ 0xFEF275FD);
  LODWORD(STACK[0x5FC]) = (v887 + 1056886253) ^ (v883 - v879 + 746829038);
  v891 = 662 * (HIBYTE(v890) & 0xF ^ 2) + 439568;
  v892 = STACK[0x6D8];
  v893 = ((*(unsigned __int8 *)(STACK[0x6D8] + (v891 - 965 * ((4450744 * (unint64_t)v891) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(STACK[0x6D8] + (662 * ((v890 >> 28) ^ 4) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v890 >> 28) ^ 4) + 439568)) >> 32))) ^ 0xFC) << 12);
  v894 = 662 * ((v890 >> 20) & 0xF ^ 5) + 439568;
  LODWORD(v468) = v468 - 1994626212;
  LODWORD(STACK[0x5E8]) = v468;
  LODWORD(v555) = v468
                - v879
                - v889
                + v555
                + 123724845
                - 1143099546
                - ((2 * (v468 - v879 - v889 + v555 + 123724845)) & 0x77BB5ECC);
  LODWORD(v468) = 662 * (HIWORD(v890) & 0xF ^ 2) + 439568;
  v895 = v893 | *(unsigned __int8 *)(v892
                                   + (v468 - 965
                                                         * ((4450744 * (unint64_t)v468) >> 32))) ^ 0xFC;
  LODWORD(v468) = 662 * (((unsigned __int16)v890 >> 12) ^ 3) + 439568;
  v896 = 662 * ((v890 >> 8) & 0xF ^ 0xD) + 439568;
  v897 = (v895 << 8) ^ ((*(unsigned __int8 *)(v892
                                            + (v894 - 965 * ((4450744 * (unint64_t)v894) >> 32))) ^ 0xFC) << 12);
  v898 = 662 * ((v890 >> 4) ^ 2) + 439568;
  LODWORD(v468) = ((v897 | *(unsigned __int8 *)(v892
                                              + (v896 - 965 * ((4450744 * (unint64_t)v896) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v892 + (v468 - 965 * ((4450744 * (unint64_t)v468) >> 32))) ^ 0xFC) << 12);
  v899 = *(unsigned __int8 *)(v892
                            + (662 * (v890 & 0xF ^ 0xC)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v890 & 0xF ^ 0xC) + 439568)) >> 32))) ^ 0xFC;
  v900 = (((v899 + 671809148 - ((2 * v899) & 0xF8)) ^ 0xD7F50183) + 1) ^ (v899 + 671809148 - ((2 * v899) & 0xF8)) ^ (v468 - ((v899 + 671809148 - ((2 * v899) & 0xF8)) ^ 0x280AFE7C | v468));
  v901 = 662 * (BYTE3(v555) & 0xF ^ 0xB) + 439568;
  v902 = 662
       * ((((((2 * v555) ^ 0x8844A133)
           + (v555 ^ 0xBBDDAF66)
           - ((2 * (((2 * v555) ^ 0x8844A133) + (v555 ^ 0xBBDDAF66))) & 0x2CC)
           + 870) ^ v555) & 0x298)
        + ((v555 >> 20) & 0xF ^ 0xD));
  v903 = ((*(unsigned __int8 *)(v892 + (v901 - 965 * ((4450744 * (unint64_t)v901) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v892 + (662 * ((v555 >> 28) ^ 0xB) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v555 >> 28) ^ 0xB) + 439568)) >> 32))) ^ 0xFC) << 12);
  v904 = 662 * (WORD1(v555) & 0xF ^ 0xD) + 439568;
  v905 = v903 | *(unsigned __int8 *)(v892 + (v904 - 965 * ((4450744 * (unint64_t)v904) >> 32))) ^ 0xFC;
  v906 = 662 * (((unsigned __int16)v555 >> 12) ^ 0xA) + 439568;
  v907 = (v905 << 8) ^ ((*(unsigned __int8 *)(v892
                                            + (v902 - 965 * ((4450744 * (unint64_t)v902) >> 32))) ^ 0xFC) << 12);
  v908 = 662 * (~(v555 >> 8) & 0xF) + 439568;
  v909 = 662 * ((v555 >> 4) ^ 6) + 439568;
  v910 = v907 | *(unsigned __int8 *)(v892 + (v908 - 965 * ((4450744 * (unint64_t)v908) >> 32))) ^ 0xFC;
  v911 = (v910 << 8) + 1911415378 - ((v910 << 9) & 0xE3DBC400);
  v912 = *(unsigned __int8 *)(v892
                            + (662 * (v555 & 0xF ^ 6)
                                           + 439568
                                           - 965 * ((4450744 * (662 * (v555 & 0xF ^ 6) + 439568)) >> 32))) ^ 0xFC;
  v913 = v912 + 1313727917 - ((2 * v912) & 0x15A);
  v914 = v911 ^ ((*(unsigned __int8 *)(v892 + (v906 - 965 * ((4450744 * (unint64_t)v906) >> 32))) ^ 0xFC) << 12);
  LODWORD(v555) = (v914 ^ 0x71EDE252 | v913 ^ 0x4E4DE5AD) ^ (16
                                                           * (*(unsigned __int8 *)(v892
                                                                                 + (v909
                                                                                                - 965
                                                                                                * ((4450744
                                                                                                  * (unint64_t)v909) >> 32))) ^ 0xFC));
  v915 = (-2 - ((~(v900 & 0xF) | 0xC8AFDD1E) + (v900 & 0xE | 0x375022E1))) ^ 0xC8AFDD12;
  v916 = 662
       * ((((16 * (v913 & 0xF)) ^ 0xD0 | v915) - 427700499 - ((2 * ((16 * (v913 & 0xF)) ^ 0xD0 | v915)) & 0x4D039DDA)) ^ 0xE681CEED);
  v917 = *(unsigned __int8 *)(v892 + (v916 + 466048) % 0x3C5);
  v918 = LODWORD(STACK[0x5BC]) ^ 0x6B49CD4F;
  LODWORD(STACK[0x600]) = v918;
  v919 = 662 * (v917 ^ v918 ^ 0xFC);
  v920 = ~*(unsigned __int8 *)(v892 + v919 % 0x3C5);
  v921 = ((v920 >> 4) - ((v920 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v892 + v916 % 0x3C5);
  v922 = v919 + 466048;
  v923 = 662 * v921 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v921 + 466048)) >> 32);
  v924 = (v900 ^ 0x280AFE7C) + v468 - ((2 * ((v900 ^ 0x280AFE7C) + v468)) & 0x246FE1FA) + 305656061;
  v925 = v924 ^ (16
               * (*(unsigned __int8 *)(v892 + (v898 - 965 * ((4450744 * (unint64_t)v898) >> 32))) ^ 0xFC));
  LODWORD(v468) = (v925 >> 4) ^ 0x626D31CD;
  v926 = ((2 * (v468 & 0x4B430F3D)) | 0x3F977C20) - (v468 & 0x4B430F3D);
  v927 = v468 & 0x4B430F32 ^ 0x1FCBBE12 ^ (v926 - 533446160);
  LODWORD(v468) = 662
                * (((v927 | v555 & 0xF0) - 1412689701 - 2 * ((v927 & 0x2BCC10DF | v555 & 0xD0) ^ v926 & 4)) ^ 0xABCC10DB);
  v928 = 662
       * (*(unsigned __int8 *)(v892 + ((int)v468 + 466048) % 0x3C5u) ^ (16 * (*(unsigned __int8 *)(v892 + v923) ^ 0xFC)) ^ 0xFC);
  v929 = v928 + 466048 - 965 * (((8901487 * (unint64_t)(v928 + 466048)) >> 32) >> 1);
  v930 = *(unsigned __int8 *)(v892 + (v928 - 965 * ((4450744 * (unint64_t)v928) >> 32))) ^ 0xFF;
  LODWORD(v468) = ((~(v930 >> 3) | 0xE7) + (v930 >> 4) - 3) ^ *(unsigned __int8 *)(v892 + v468 % 0x3C5);
  v931 = ((((v925 >> 8) ^ 0x7485B0B4) & 0x30B0640B)
        - (((v925 >> 8) ^ 0x7485B0B4) & 0x3000600B)
        + (((v925 >> 8) ^ 0x7485B0B4) & 0x600B ^ 0x490A695B)) ^ ((v925 >> 8) ^ 0x7485B0B4) & 0x30B06404;
  v932 = (v931 & 0x1028C441 ^ 0x94248280) + (v931 ^ 0x499A6D5B) - ((v931 ^ 0x499A6D5B) & 0x942CC6C1);
  v933 = *(unsigned __int8 *)(v892 + v922 % 0x3C5) ^ 0xFC;
  v934 = 662 * v468 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v468 + 466048)) >> 32);
  LODWORD(v468) = v932 ^ 0xA4BCC2C5;
  LODWORD(v555) = 662
                * (((v932 ^ 0xA4BCC2C5 | (v555 >> 4) & 0xF0)
                  + 812710387
                  - 2 * (((v932 ^ 0xA4BCC2C5) & 0x3070F9FB | (v555 >> 4) & 0xF0) ^ v932 & 8)) ^ 0x3070F9F3);
  v935 = 662
       * (*(unsigned __int8 *)(v892 + ((int)v555 + 466048) % 0x3C5u) ^ (16 * (*(unsigned __int8 *)(v892 + v934) ^ 0xFC)) ^ 0xFC);
  v936 = v935 + 466048 - 965 * (((8901487 * (unint64_t)(v935 + 466048)) >> 32) >> 1);
  v937 = ~*(unsigned __int8 *)(v892 + (v935 - 965 * ((4450744 * (unint64_t)v935) >> 32)));
  LODWORD(v555) = 662
                * (((v937 >> 4) - ((v937 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v892 + v555 % 0x3C5))
                + 466048;
  v938 = ((v914 >> 8) & 0xF0 | ((unsigned __int16)v924 >> 12)) ^ 0xEF;
  v939 = 662
       * ((v938 + 1971817152 + ((2 * (v938 & 0xFFFFFFCF ^ ((unsigned __int16)v924 >> 12))) ^ 0xFFFFFFE1) + 1) ^ 0x75878AC0);
  LODWORD(v555) = 662
                * (*(unsigned __int8 *)(v892 + (v939 + 466048) % 0x3C5) ^ (16
                                                                         * (*(unsigned __int8 *)(v892
                                                                                               + (v555 - 965 * ((4450744 * (unint64_t)v555) >> 32))) ^ 0xFC)) ^ 0xFC);
  v940 = v555 - 965 * ((4450744 * (unint64_t)v555) >> 32);
  LODWORD(v555) = ((*(unsigned __int8 *)(v892
                                       + (_DWORD)v555
                                       + 466048
                                       - 965
                                       * (((8901487 * (unint64_t)(v555 + 466048)) >> 32) >> 1)) ^ 0xFC) << 12) ^ ((*(unsigned __int8 *)(v892 + v936) ^ 0xFC) << 8);
  v941 = ~*(unsigned __int8 *)(v892 + v940);
  v942 = 662
       * (((v941 >> 4) - ((v941 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v892 + v939 % 0x3C5))
       + 466048;
  v943 = (v914 >> 12) & 0xF0 | HIWORD(v924) & 0xF;
  v944 = 662 * (((v943 ^ 0xD7) - 1188883479 + ((2 * ((v943 ^ 0xD7 | 0x7FFFFFE9) ^ v943)) ^ 0x183) + 1) ^ 0xB92313E9);
  v945 = v944 % 0x3C5;
  v946 = 662
       * (*(unsigned __int8 *)(v892 + (v944 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v892
                                                                                      + (v942 - 965 * ((4450744 * (unint64_t)v942) >> 32))) ^ 0xFC)) ^ 0xFC);
  v947 = v946 + 466048 - 965 * (((8901487 * (unint64_t)(v946 + 466048)) >> 32) >> 1);
  v948 = ~*(unsigned __int8 *)(v892 + (v946 - 965 * ((4450744 * (unint64_t)v946) >> 32)));
  v949 = 662
       * (((v948 >> 4) - ((v948 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v892 + v945))
       + 466048;
  v950 = (HIWORD(v911) & 0xF0 | (v924 >> 20) & 0xF) ^ 0xE3;
  v951 = 662 * ((v950 + 553124167 - 2 * (v950 & 0x4F ^ (v924 >> 20) & 8)) ^ 0x20F80147);
  v952 = 662
       * (*(unsigned __int8 *)(v892 + (v951 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v892
                                                                                      + (v949 - 965 * ((4450744 * (unint64_t)v949) >> 32))) ^ 0xFC)) ^ 0xFC);
  v953 = *(unsigned __int8 *)(v892 + (v952 - 965 * ((4450744 * (unint64_t)v952) >> 32)));
  v954 = v952 + 466048 - 965 * (((8901487 * (unint64_t)(v952 + 466048)) >> 32) >> 1);
  v955 = 662
       * (((~(_BYTE)v953 >> 4) - ((~v953 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v892 + v951 % 0x3C5))
       + 466048;
  v956 = ((v911 >> 20) & 0xF0 | HIBYTE(v924) & 0xF) ^ 0x12;
  v957 = 662 * ((v956 + 1104448703 - ((2 * v956) & 0xFFFFFF7F)) ^ 0x41D48CBF);
  v958 = 662
       * (*(unsigned __int8 *)(v892 + (v957 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v892
                                                                                      + (v955 - 965 * ((4450744 * (unint64_t)v955) >> 32))) ^ 0xFC)) ^ 0xFC);
  v959 = ~*(unsigned __int8 *)(v892 + (v958 - 965 * ((4450744 * (unint64_t)v958) >> 32)));
  v960 = 662
       * (((v959 >> 4) - ((v959 >> 3) & 0x18) - 4) ^ *(unsigned __int8 *)(v892 + v957 % 0x3C5))
       + 466048;
  v961 = 662 * ((HIBYTE(v911) & 0xF0 | (v924 >> 28)) ^ 0x71) + 466048;
  v962 = 662
       * (*(unsigned __int8 *)(v892 + (v961 - 965 * ((4450744 * (unint64_t)v961) >> 32))) ^ (16 * (*(unsigned __int8 *)(v892 + (v960 - 965 * ((4450744 * (unint64_t)v960) >> 32))) ^ 0xFC)) ^ 0xFC)
       + 466048;
  v963 = v962 - 965 * (((8901487 * (unint64_t)v962) >> 32) >> 1);
  v964 = v933 - ((2 * v933) & 0x112) - 197426039;
  v965 = v964 ^ (16 * (*(unsigned __int8 *)(v892 + v929) ^ 0xFC));
  v966 = 662 * ((16 * (v964 & 0xF)) ^ 0x90 | v915) + 218460;
  v967 = 662 * (v927 | v965 & 0xF0 ^ 0x80) + 218460;
  v968 = v965 ^ 0x49164F82 ^ v555;
  v969 = v968 ^ ((*(unsigned __int8 *)(v892 + v947) ^ 0xFC) << 16);
  LODWORD(v468) = 662 * ((v968 >> 4) & 0xF0 ^ 0xB0 | v468) + 218460;
  LODWORD(v555) = 662 * (((v555 >> 8) & 0xF0 | ((unsigned __int16)v924 >> 12)) ^ 0xF) + 218460;
  v970 = v969 ^ ((*(unsigned __int8 *)(v892 + v954) ^ 0xFC) << 20);
  v971 = 662 * (((v969 >> 12) & 0xF0 | HIWORD(v924) & 0xF) ^ 0xD7) + 218460;
  v972 = v970 ^ ((*(unsigned __int8 *)(v892
                                     + v958
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v958 + 466048)) >> 32) >> 1)) ^ 0xFC) << 24);
  v973 = 662 * ((HIWORD(v970) & 0xF0 | (v924 >> 20) & 0xF) ^ 0x23) + 218460;
  v974 = v972 ^ ((*(unsigned __int8 *)(v892 + v963) ^ 0xC) << 28);
  v975 = 662 * (((v972 >> 20) & 0xF0 | HIBYTE(v924) & 0xF) ^ 0xD2) + 218460;
  v976 = *(unsigned __int8 *)(v892 + v966 % 0x3C5);
  v977 = 662 * ((HIBYTE(v974) & 0xF0 | (v924 >> 28)) ^ 0xB1) + 218460;
  v978 = *(unsigned __int8 *)(v892 + v468 % 0x3C5);
  LODWORD(v468) = v976 ^ (16 * (*(unsigned __int8 *)(v892 + v967 % 0x3C5) ^ 0xFC));
  v979 = v468 ^ ((v978 ^ 0xFC) << 8);
  LODWORD(v555) = v979 ^ ((*(unsigned __int8 *)(v892
                                              + (v555
                                                             - 965
                                                             * ((4450744 * (unint64_t)v555) >> 32))) ^ 0xFC) << 12);
  v980 = v555 ^ ((*(unsigned __int8 *)(v892 + (v971 - 965 * ((4450744 * (unint64_t)v971) >> 32))) ^ 0xFC) << 16);
  v981 = v980 ^ ((*(unsigned __int8 *)(v892 + (v973 - 965 * ((4450744 * (unint64_t)v973) >> 32))) ^ 0xFC) << 20);
  v982 = v981 ^ ((*(unsigned __int8 *)(v892 + (v975 - 965 * ((4450744 * (unint64_t)v975) >> 32))) ^ 0xFC) << 24);
  v983 = 662
       * ((v982 ^ ((*(unsigned __int8 *)(v892 + (v977 - 965 * ((4450744 * (unint64_t)v977) >> 32))) ^ 0xC) << 28)) >> 28)
       + 454132;
  v984 = *(unsigned __int8 *)(v892
                            + (662 * ((v979 >> 8) & 0xF)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * ((v979 >> 8) & 0xF) + 454132)) >> 32))) ^ ((((*(unsigned __int8 *)(v892 + (662 * (HIBYTE(v982) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIBYTE(v982) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v892 + (v983 - 965 * ((4450744 * (unint64_t)v983) >> 32))) ^ 0xFC) << 12) | *(unsigned __int8 *)(v892 + (662 * (HIWORD(v980) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v980) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 8) ^ ((*(unsigned __int8 *)(v892 + (662 * ((v981 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v981 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xFC) << 12) ^ (16 * (*(unsigned __int8 *)(v892 + (662 * ((unsigned __int16)v555 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v555 >> 12) + 454132)) >> 32))) ^ 0xFC));
  LODWORD(v555) = v884 - ((2 * v884 + 208614300) & 0x11B7AB42);
  v985 = LODWORD(STACK[0x640]) - ((2 * LODWORD(STACK[0x640]) + 15020846) & 0x1A2DDFEC);
  LODWORD(v468) = 662 * (~(v468 >> 4) & 0xF) + 454132;
  v986 = STACK[0x5F0];
  LODWORD(STACK[0x640]) = v890 ^ LODWORD(STACK[0x5F0]);
  LODWORD(STACK[0x61C]) = v555 - 15503505;
  v987 = LODWORD(STACK[0x608]) + 1046017784 + ((v985 + 1300859277) ^ 0x8D16EFF6);
  LODWORD(v555) = ((v555 - 15503505) ^ 0x8DBD5A1) + v986 + ((v985 + 1300859277) ^ 0x8D16EFF6);
  LODWORD(STACK[0x5E4]) = v555 + 1609249047 - ((2 * v555) & 0xBFD6622E);
  LODWORD(v555) = STACK[0x5FC];
  LODWORD(STACK[0x5EC]) = *(unsigned __int8 *)(v892
                                             + (662 * (v976 & 0xF ^ 0xC)
                                                            + 454132
                                                            - 965
                                                            * ((4450744
                                                              * (unint64_t)(662 * (v976 & 0xF ^ 0xCu) + 454132)) >> 32))) ^ LODWORD(STACK[0x5FC]) ^ (16 * (*(unsigned __int8 *)(v892 + (v468 - 965 * ((4450744 * (unint64_t)v468) >> 32))) ^ 0xFC)) ^ ((v984 ^ 0xFC) << 8);
  LODWORD(STACK[0x5F0]) = v987 - 1927876618 - ((2 * v987) & 0x1A2DDFEC);
  v988 = v887 - ((2 * v887 + 241622876) & 0xB05FB1DA) + 1600342171;
  LODWORD(STACK[0x608]) = v988;
  LODWORD(STACK[0x5FC]) = v555
                        + (v988 ^ 0xD82FD8ED)
                        + 1728229784
                        + v889
                        - 688154042
                        - ((2 * (v555 + (v988 ^ 0xD82FD8ED) + 1728229784 + v889)) & 0xADF7348C);
  LODWORD(STACK[0x634]) = (v985 + 1300859277) ^ 0x9D359B33;
  LODWORD(v468) = LODWORD(STACK[0x5F8]) + v889;
  v989 = v889 + 1998988893 - ((2 * v889 + 235234096) & 0x2046E98A);
  LODWORD(STACK[0x624]) = v989 + 1794838075 - ((2 * v989) & 0xD5F61C76);
  LODWORD(STACK[0x638]) = v468 - ((2 * v468 - 803178698) & 0xD5F61C76);
  v990 = (LODWORD(STACK[0x61C]) ^ 0xAE6E314D) - ((v985 + 1300859277) ^ 0x102374C5 ^ LODWORD(STACK[0x5F0]));
  v991 = ((v985 + 1300859277) ^ 0xC2DEAA24 ^ LODWORD(STACK[0x5E4])) + 299609540 - v990;
  v992 = LODWORD(STACK[0x624]) ^ (LODWORD(STACK[0x638]) - 754234922);
  v993 = (LODWORD(STACK[0x624]) ^ 0x6AFB0E3B ^ ((LODWORD(STACK[0x608]) ^ 0x7E9A3C01) - v992 - 299609540))
       - ((LODWORD(STACK[0x608]) ^ 0x7E9A3C01)
        - v992)
       + 710401546;
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6C0]
                                                                     + 8
                                                                     * ((282 * (LODWORD(STACK[0x644]) == 0)) ^ LODWORD(STACK[0x6B4])))
                                                         - 12))(v993 + v992 - ((2 * (v993 + v992) + 851376892) & 0x27F808D6u) - 1923382807, v990 - ((2 * v990 - 1087011754) & 0xBE8F9998) - 1092448521, v991 - 1546868457 - ((2 * v991) & 0x47995E86) + 1580);
}

void sub_224208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;

  v7 = STACK[0x5E0];
  v8 = LODWORD(STACK[0x5DC]) + 1;
  LODWORD(STACK[0x698]) += 208;
  LODWORD(STACK[0x694]) += 208;
  LODWORD(STACK[0x5E0]) = v7 + 2;
  LODWORD(STACK[0x644]) = a5 - 1;
  LODWORD(STACK[0x638]) = STACK[0x6B0];
  LODWORD(STACK[0x6B0]) = v5;
  LODWORD(STACK[0x640]) = STACK[0x6A8];
  LODWORD(STACK[0x6A8]) = v6;
  LODWORD(STACK[0x61C]) = STACK[0x6A0];
  LODWORD(STACK[0x5DC]) = v8;
  LODWORD(STACK[0x6A0]) = STACK[0x648];
  JUMPOUT(0x221350);
}

uint64_t sub_2242C8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W6>, int a5@<W8>, uint64_t a6, __int16 a7, __int16 a8, char a9, int a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  BOOL v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  _BYTE *v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  char v240;
  uint64_t v241;
  int v242;
  uint64_t v243;
  unint64_t v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  int v249;
  char v250;
  char v251;
  char v252;
  char v253;
  char v254;
  char v255;
  char v256;

  LODWORD(STACK[0x630]) = LODWORD(STACK[0x5AC]) + LODWORD(STACK[0x4D8]);
  LODWORD(STACK[0x634]) = LODWORD(STACK[0x5B4]) + LODWORD(STACK[0x4DC]);
  LODWORD(STACK[0x638]) = LODWORD(STACK[0x5B0]) + LODWORD(STACK[0x4D0]);
  LODWORD(STACK[0x644]) = LODWORD(STACK[0x4E0]) + LODWORD(STACK[0x5B8]);
  LODWORD(STACK[0x694]) = LODWORD(STACK[0x4D4]) + a5;
  LODWORD(STACK[0x5A0]) += 64;
  LODWORD(STACK[0x698]) = LODWORD(STACK[0x4CC]) + LODWORD(STACK[0x660]);
  v52 = LODWORD(STACK[0x59C]) + 2098578990;
  LODWORD(STACK[0x628]) = (a42 + 1273991599) < 0x64656591;
  LODWORD(STACK[0x624]) = v52 < 0x64656591;
  v53 = a42 + 1273991599 >= v52;
  v54 = (LODWORD(STACK[0x5D8]) - 838790078) & 0x31FEEE7E;
  v55 = (LODWORD(STACK[0x5D8]) + 1223878542) & 0xB70D17AF;
  LODWORD(STACK[0x6B4]) = v54;
  LODWORD(STACK[0x618]) = v55;
  v56 = ((v54 - 1546868457) ^ a3) + (v55 ^ 0x2F41A8F4) - ((2 * ((v54 - 1546868457) ^ a3) + 732176814) & 0x32DF330C);
  v57 = v47 - ((2 * v46 + 627665958) & 0xB896D65A);
  v58 = ((2 * v56) & 0xD45BDE52 ^ 0x105B1200) + (v56 ^ 0xF34276AF);
  v59 = (v43 ^ 0x79154167) + (v43 ^ v50 ^ 0x145A9268);
  v60 = (v45 ^ a3 ^ v49 ^ 0x2C95916A) + (v50 ^ a12 ^ v45 ^ a3 ^ v49);
  v61 = (a1 ^ 0x6C03FB94) + (v50 ^ a1 ^ 0x14C289B);
  v62 = v51 - ((2 * v42 + 416193232) & 0x1E38A4FE) + 635141617;
  v63 = v44
      + 1603977771
      + (v62 ^ 0x8F1C527F)
      + 1439549310
      - ((2 * (v44 + 1603977771 + (v62 ^ 0x8F1C527F))) & 0xAB9B8EFC);
  v57 += 1930073759;
  LODWORD(STACK[0x620]) = a2 ^ 0x5F47CCCC;
  v64 = (v57 ^ 0xDC4B6B2D)
      + (a2 ^ 0x5F47CCCC)
      - 1186088343
      - ((2 * ((v57 ^ 0xDC4B6B2D) + (a2 ^ 0x5F47CCCC))) & 0x729B74D2);
  LODWORD(STACK[0x61C]) = (v61 + 1) ^ (v59 + 1) ^ (v60 + 1);
  v65 = ((2 * (v58 - ((2 * v58) & 0xBB533D6E) + 1571397303)) & 0x2FD7F208 ^ 0x792F208)
      + ((v58 - ((2 * v58) & 0xBB533D6E) + 1571397303) ^ 0xF42282E9);
  v66 = (a1 ^ 0x93FC046B)
      - 1511535791
      + (v63 ^ 0x55CDC77E)
      + 126555874
      + (~(2 * ((a1 ^ 0x93FC046B) - 1511535791 + (v63 ^ 0x55CDC77E))) | 0xF0E9D23B);
  v67 = ((2 * ((v64 ^ 0xB94DBA69) + (v45 ^ 0x3AA35C0C))) & 0xCCE7EFFC)
      + (((v64 ^ 0xB94DBA69) + (v45 ^ 0x3AA35C0C)) ^ 0xE673F7FE);
  v68 = v65 - ((2 * v65 + 341565010) & 0x1B2C78AC) + 2009344895;
  v69 = v68 ^ v64;
  v70 = (v57 ^ 0x6506D144 ^ v64) + (v68 ^ v64 ^ a11) + 1;
  v71 = v70 - ((2 * v70) & 0x9D5697C);
  v72 = v62 ^ 0xDAD19501 ^ v63;
  v73 = (v43 ^ 0x388A5BC2) - ((2 * (v43 ^ 0x388A5BC2) + 70504538) & 0xA060C728) - 766882879;
  v74 = v63 ^ v73;
  v75 = (v74 ^ 0x7A025B15) + 1;
  LODWORD(STACK[0x660]) = v75;
  v76 = v75 + v72 - ((2 * (v75 + v72)) & 0x946E8DA4);
  v77 = (v67 - 1082928301) ^ LODWORD(STACK[0x6A8]) ^ (v65 - 366088407);
  LODWORD(STACK[0x6B0]) = (((v66 + 1) ^ 0xF874E91D) + (LODWORD(STACK[0x6B0]) ^ 0x4D8E8B38 ^ (v66 + 1)) + 1) ^ ((v73 ^ 0x2FCF9C6B) + (LODWORD(STACK[0x6B0]) ^ 0x9A35FE4E ^ v73) + 1) ^ ((v77 ^ 0x6D4FD30F) + (LODWORD(STACK[0x6B0]) ^ 0xD8B5B12A ^ v77) + 1);
  v78 = (v67 + 248372310 + ~((2 * v67 + 1177499524) & 0xD76C8126)) ^ LODWORD(STACK[0x648]);
  v79 = (v66 + 1) ^ v74;
  v80 = (v66 + 1) ^ 0x78B16E2;
  v81 = v80 + 141856982 + (~(2 * v80 + 1195872478) | 0xB65E6F33);
  v76 -= 902347054;
  v82 = v73 ^ 0x1A072546 ^ v76;
  v83 = v76 ^ v79;
  v71 += 82490558;
  v84 = v69 ^ (v67 - 1082928301);
  v85 = v71 ^ v84;
  v86 = (v68 ^ 0x897C88E8 ^ v71) + (v71 ^ v84 ^ 0xCFCECD7E) + 1;
  v87 = v82 + (v83 ^ 0xB7BE0B25) + 1 - ((2 * (v82 + (v83 ^ 0xB7BE0B25) + 1)) & 0xDBCBAB86) + 1843779011;
  v88 = (v87 ^ 0x921A2A3C) + (LODWORD(STACK[0x688]) ^ 0xFF55F933 ^ v87);
  v89 = v87 ^ v81;
  v90 = v86 - ((2 * v86) & 0x15D34300) + 183083392;
  LODWORD(STACK[0x6A8]) = (v88 + 1) ^ ((v81 ^ 0xDB2F3799) + (LODWORD(STACK[0x688]) ^ 0xB660E496 ^ v81) + 1) ^ ((v78 ^ v90 ^ 0xF5165E7F) + (LODWORD(STACK[0x688]) ^ 0x98598D70 ^ v78 ^ v90) + 1);
  v91 = v67 - ((2 * v67 + 103757700) & 0x30AD0628) - 1150411050;
  v92 = v84 ^ 0xC25276E7;
  v93 = v90 ^ v91;
  v94 = ((2 * (v92 + (v90 ^ v91 ^ 0xED40DD6B) + 1)) & 0xDB7F8B3C) + ((v92 + (v90 ^ v91 ^ 0xED40DD6B) + 1) ^ 0x6DBFC59E);
  v95 = ((2 * ((v91 ^ 0x18568314) + 1841284510 - v94)) & 0xDDFEFC36)
      + (((v91 ^ 0x18568314) + 1841284510 - v94) ^ 0xEEFF7E1B);
  v96 = ((2 * ((v79 ^ 0x74FF42D0) + (v89 ^ 0xB6CAE25A) + 1)) & 0x75EBFFCE)
      + (((v79 ^ 0x74FF42D0) + (v89 ^ 0xB6CAE25A) + 1) ^ 0x3AF5FFE7);
  v97 = (v89 ^ 0x49351DA5 ^ (v96 - 989200359))
      - 1644854405
      - ((2 * (v89 ^ 0x49351DA5 ^ (v96 - 989200359))) & 0x3BEB06F6);
  v98 = (v93 ^ 0x12BF2294 ^ (v94 - 1841284510))
      - 1196583597
      - ((2 * (v93 ^ 0x12BF2294 ^ (v94 - 1841284510))) & 0x715B2AA6);
  v99 = v80 - v96;
  v100 = v98 ^ LODWORD(STACK[0x6A0]) ^ (v95 - ((2 * v95 + 433129804) & 0xD76C8126) + 2023671097);
  LODWORD(STACK[0x6A0]) = ((v97 ^ 0x620A7C84) + (LODWORD(STACK[0x670]) ^ 0xF45AF8B ^ v97) + 1) ^ ((LODWORD(STACK[0x5CC]) ^ (v99 + 444713751))
                                                                                                - v99
                                                                                                - 444713751) ^ ((v100 ^ 0x47526AAC) + (LODWORD(STACK[0x670]) ^ 0x2A1DB9A3 ^ v100) + 1);
  v101 = v96 - ((2 * v96 + 529941414) & 0x18645EAE);
  v102 = v98 ^ v85;
  v98 ^= 0xB8AD9553;
  v103 = v95 + 285245925 + v98;
  v104 = ((2 * v103) & 0xF5DB9FDC) + (v103 ^ 0xFAEDCFEE);
  v105 = v97 ^ v83;
  v97 ^= 0x9DF5837B;
  v106 = v97 + v99 + 444713751 - 622293998 - ((2 * (v97 + v99 + 444713751)) & 0xB5D11824);
  v107 = (v98 - ((2 * v98 + 166307116) & 0xBB27B098) + 1653123810) ^ v102;
  v108 = (v104 + 16397011) ^ v102;
  v109 = v107 ^ (v104 - 2 * ((v104 + 426925424) & 0x34AD57DE ^ v104 & 6) + 236959048) ^ v48;
  v110 = (v97 - 2064330090) ^ v105;
  v111 = v106 ^ v105;
  v112 = (v106 ^ 0xDAE88C12) - ((2 * (v106 ^ 0xDAE88C12) + 821056826) & 0x40A0A40E) - 121078620;
  v113 = v111 ^ 0x1AE2775F ^ v112;
  v114 = (v110 ^ 0xDA909DD0) + 1;
  v115 = ((v112 ^ 0x5FAFADF8) + (LODWORD(STACK[0x640]) ^ 0xE2026F2B ^ v112) + 1) ^ (v114
                                                                                  + (LODWORD(STACK[0x640]) ^ 0x673D5F03 ^ v110)) ^ ((v109 ^ 0x5A2B95EF) + (LODWORD(STACK[0x640]) ^ 0xE786573C ^ v109) + 1);
  v116 = v94 - ((2 * v94 + 436385848) & 0x290B8140) + 25631932;
  v117 = ((2 * ((v116 ^ 0x173D1AFD) + (v107 ^ 0x5A2B95EF) + 1)) & 0xC9D75EBC)
       + (((v116 ^ 0x173D1AFD) + (v107 ^ 0x5A2B95EF) + 1) ^ 0x64EBAF5E);
  v118 = v101 - 1409461974;
  v119 = ((2 * (v114 + (v118 ^ 0x8F8AF50A))) & 0x77E6FBBE) + ((v114 + (v118 ^ 0x8F8AF50A)) ^ 0xBBF37DDF);
  v120 = (v116 ^ 0xE8C2E502) + 1;
  v121 = ((2 * ((v108 ^ 0xB72173EC) + v120)) & 0xFDBFFEFE) + (((v108 ^ 0xB72173EC) + v120) ^ 0x7EDFFF7F);
  v122 = v108 ^ v116 ^ 0x48659171 ^ (((v104 + 1500667248) ^ 0xF0DB158E)
                                   + 1599638412
                                   - 2 * (((v104 + 1500667248) ^ 0xF0DB158E) & 0x5F588B8D ^ v103 & 1));
  v123 = (v117 - 187626920 + (v116 ^ 0xE8C2E502 ^ (v117 - 187626920)) + 1) ^ v120;
  v124 = ((2 * ((v118 ^ 0x70750AF5) + (v111 ^ 0x30E12F8D) + 1)) & 0x5EEF6DF6)
       + (((v118 ^ 0x70750AF5) + (v111 ^ 0x30E12F8D) + 1) ^ 0x2F77B6FB);
  v125 = ((2 * ((v118 ^ 0x8F8AF50A) - 1074086811)) & 0xF7FBA77E) + (((v118 ^ 0x8F8AF50A) - 1074086811) ^ 0x7BFDD3BF);
  v126 = ((v116 ^ 0x173D1AFD) - 2062220758 - ((2 * (v116 ^ 0x173D1AFD) + 2146793674) & 0x8A349384) + 1021) ^ LODWORD(STACK[0x650]) ^ v122;
  v127 = ((v113 ^ v118 ^ 0xB792BEC6 ^ 0x82D27F56) + (LODWORD(STACK[0x67C]) ^ 0xC980D771 ^ v113 ^ v118 ^ 0xB792BEC6) + 1) ^ (2080232383 - v125 + (LODWORD(STACK[0x5D0]) ^ (v125 - 2080232383))) ^ ((v126 ^ 0x7763582D) + (LODWORD(STACK[0x67C]) ^ 0x3C31F00A ^ v126) + 1);
  v128 = ((v123 + 1599638412 - ((2 * v123) & 0xBEB11718)) ^ v116 ^ 0x48659171) + v117;
  v129 = ((v128 - 187626920) ^ v122 ^ 0x889CA7D2)
       - 2130702946
       - 2 * (((v128 - 187626920) ^ v122 ^ 0x889CA7D2) & a10 ^ ((v128 - 187626920) ^ v122) & 1);
  v130 = v129 ^ 0x81000D9E;
  v131 = ((2 * ((v129 ^ 0x81000D9E) - 434367386)) & 0xFBFCFB64) + (((v129 ^ 0x81000D9E) - 434367386) ^ 0xFDFE7DB2);
  v132 = (v116 ^ 0x173D1AFD) - v121;
  v133 = v128 - v132 + (v129 & 0xEA2DEF29 ^ 0x7FFFF2F7) + (v129 & 0xEA2DEF29 ^ 0x95D21DDE) + 243670933;
  v134 = ((2 * v133) & 0x9EAD45DE) + (v133 ^ 0xCF56A2EF);
  v135 = v119 - ((2 * v119 + 999454638) & 0xC027BA46) + 2111641850;
  v136 = v135 ^ (v101 - 1409461974) ^ 0xB792BEC6;
  v137 = v135 ^ v113 ^ 0xA5261646;
  v138 = v125 - v124;
  v139 = v138 - ((2 * v138 + 408643636) & 0xC44828A8) + 1850853486;
  v140 = (v132 + 395218114) ^ LODWORD(STACK[0x658]) ^ (v131 + 33653326);
  v141 = ((2 * (v137 - 434367386)) & 0x2EB8F2B6) + ((v137 - 434367386) ^ 0x975C795B);
  v142 = (-1755547301 - v141 + (LODWORD(STACK[0x680]) ^ 0xC51A49C2 ^ (v141 + 1755547301))) ^ ((v139 ^ 0x1DDBEBAB)
                                                                                            + (LODWORD(STACK[0x680]) ^ 0x273E5D96 ^ v139)
                                                                                            + 1) ^ ((v140 ^ 0x4B52A827)
                                                                                                  + (LODWORD(STACK[0x680]) ^ 0x71B71E1A ^ v140)
                                                                                                  + 1);
  v143 = (v136 ^ 0xD80B96EF) - v138;
  v144 = v143 - 983249083 + v141;
  v145 = v124 + v137;
  v146 = v121 + v130;
  LODWORD(STACK[0x4F8]) += LODWORD(STACK[0x660]) + LODWORD(STACK[0x6B0]);
  LODWORD(STACK[0x4D8]) = LODWORD(STACK[0x630]) + (v116 ^ 0x1485C0A0);
  LODWORD(STACK[0x594]) = LODWORD(STACK[0x594]) - v44 - 1603977771 + LODWORD(STACK[0x61C]);
  v147 = LODWORD(STACK[0x4E8]) + ((v101 - 1409461974) ^ 0x73CDD0A8) + LODWORD(STACK[0x6A0]);
  v148 = LODWORD(STACK[0x4EC]) + (v136 ^ 0x27F46910) + v127;
  LODWORD(STACK[0x4DC]) = LODWORD(STACK[0x634]) + (v69 ^ 0x34DB863F);
  v149 = !v53;
  if (LODWORD(STACK[0x624]) != LODWORD(STACK[0x628]))
    v150 = STACK[0x624];
  else
    v150 = v149;
  LODWORD(STACK[0x510]) += LODWORD(STACK[0x620]) + (a4 ^ 0xD6FB9ABA);
  LODWORD(STACK[0x508]) = LODWORD(STACK[0x508]) - 187626920 + LODWORD(STACK[0x5D4]) + v128;
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x560]) - 1141670433 - v119 + v115;
  LODWORD(STACK[0x50C]) = LODWORD(STACK[0x50C]) - 261508452 + LODWORD(STACK[0x668]);
  v151 = LODWORD(STACK[0x4F0]) + (v79 ^ 0x8B00BD2F) + LODWORD(STACK[0x6A8]);
  v152 = v146 + v131;
  v153 = v134 + v131;
  v154 = v134 - (v146 + v131);
  v155 = v132 + v154 - 1066199203;
  v156 = v153 - (v154 - 1066199203);
  LODWORD(STACK[0x4D0]) = LODWORD(STACK[0x638]) + v92;
  LODWORD(STACK[0x4E0]) = LODWORD(STACK[0x644]) + 816405777 + v134;
  v157 = v145 - v143 + v144;
  v158 = v143 - (v157 + 1969695661);
  v159 = v144 - (v158 - 1332326481);
  v160 = (_BYTE *)STACK[0x6B8];
  v160[1609] = v159 - ((2 * v159 + 2) & 0xF8) + 125;
  v161 = v138 + 1452957145 + v158 - 1332326481;
  v160[1306] = v161 - ((2 * v161 + 54) & 0xF8) + 23;
  v160[2092] = (v156 + 52) ^ 0xAA;
  v160[1183] = (v152 + 86) ^ 0xAA;
  LODWORD(STACK[0x4D4]) = LODWORD(STACK[0x694]) + v117 - 1693167454;
  LODWORD(STACK[0x504]) = LODWORD(STACK[0x504]) - v143 + 1159201094 + v142;
  v160[1665] = v157 - 83 - ((2 * (v157 - 83) + 126) & 0xF8) + 59;
  v162 = ((v154 - 1383605694) ^ 0xCBAB92E)
       + 1593962750
       - 2 * (((v154 - 1383605694) ^ 0xCBAB92E) & 0x5F01F0FF ^ (v154 - 1383605694) & 1);
  v163 = v155 + v154 + 511286566 - ((2 * (v155 + v154 + 511286566) + 531382420) & 0x1F3BEA4A) - 1619782289;
  v160[1789] = (v155 + 46) ^ 0xAA;
  v160[1968] = v143 - (v157 - 83) - 81 - ((2 * (v143 - (v157 - 83) - 81) - 90) & 0xF8) + 79;
  v164 = v161 + v158 - 1332326481 - ((2 * (v161 + v158 - 1332326481) + 322387164) & 0x75E1B2E0) - 2071169058;
  v165 = ((2 * ((v162 ^ 0xA0FE0F01) + (v163 ^ 0x8F9DF525) + 1)) & 0xCD7BBFEC)
       + (((v162 ^ 0xA0FE0F01) + (v163 ^ 0x8F9DF525) + 1) ^ 0xE6BDDFF6);
  v166 = v163 ^ (v156 + 1121896626);
  v160[1845] = v166 ^ 0x8F;
  v167 = v164 ^ (v159 + 1333626879);
  v168 = ((2 * ((v162 ^ 0x5F01F0FE) + 357086072)) & 0x919B3BF6) + (((v162 ^ 0x5F01F0FE) + 357086072) ^ 0x48CD9DFB);
  v160[1362] = v164 ^ (v159 - 1) ^ 0x8C;
  v169 = ((v158 - 1131927038) ^ 0xCBAB92E)
       + 1352465036
       - 2 * (((v158 - 1131927038) ^ 0xCBAB92E) & 0x509CFA9C ^ (v158 - 1131927038) & 0x10);
  v170 = ((2 * ((v169 ^ 0xAF630573) + (v164 ^ 0xBAF0D970) + 1)) & 0x6DEFEA7E)
       + (((v169 ^ 0xAF630573) + (v164 ^ 0xBAF0D970) + 1) ^ 0xB6F7F53F);
  v171 = ((2 * ((v169 ^ 0x509CFA8C) + 357086072)) & 0xBBFFFEC8) + (((v169 ^ 0x509CFA8C) + 357086072) ^ 0x5DFFFF64);
  v172 = v166 ^ (v152 + 1095850301);
  v173 = ((2 * (v167 ^ (v157 + 838260435))) & 0x5FFFEFD2 ^ 0x55E1A2C0) + (v167 ^ (v157 + 838260435) ^ 0x950F2E99);
  v160[1239] = (v168 + 5) ^ 0xAA;
  v160[1418] = v173 - ((2 * v173 + 46) & 0xF8) + 19;
  v160[1486] = (v154 + 66) ^ 0xAA;
  v174 = v172 ^ 0x8F9DF525;
  v175 = ((2 * ((v172 ^ 0x8F9DF525) + v168 - 1221434875)) & 0xCB7B7FF6)
       + (((v172 ^ 0x8F9DF525) + v168 - 1221434875) ^ 0x65BDBFFB);
  v160[1721] = v171 - ((2 * v171) & 0xF8) + 96;
  v176 = v173 + v171;
  v160[2024] = v170 + ((124 - 2 * v170) | 7) - 66;
  v177 = ((2 * ((v167 ^ 0xBAF0D970) + 212972025)) & 0xEF7F9DFA)
       + (((v167 ^ 0xBAF0D970) + 212972025) ^ 0x77BFCEFD)
       - (v173
        + v171);
  v178 = ((v165 - 1283170289 + v175) ^ (v175 - 1706934267))
       + 1882480525
       - ((2 * ((v165 - 1283170289 + v175) ^ (v175 - 1706934267))) & 0xE068BF1A);
  v160[1901] = v172 ^ 0x8F;
  v160[2080] = v177 - ((2 * v177) & 0xF8) - 84;
  v179 = -v171 - ((-2 * v171 + 201326280) & 0xF1A11DE);
  v180 = (v173 + v171 + 1912604851) ^ (v170 - 1157098636 + v173 + v171);
  v181 = v180 - 1398918486 - ((2 * v180) & 0x593C6554);
  v182 = (v166 ^ 0x8F9DF525) - v175;
  v160[1598] = (v182 - 12) ^ 0xAA;
  v179 -= 443742125;
  v160[1542] = (v165 + 10) ^ 0xAA;
  v183 = (v166 ^ 0x70620ADA) + 1706934267 + v174 + v182 + 1;
  v184 = v183 - ((2 * v183) & 0xCDC1B358) - 421471828;
  v160[1295] = (((v165 + 15 + v175) ^ (v175 + 5)) - 115 - ((2 * ((v165 + 15 + v175) ^ (v175 + 5))) & 0x1A)) ^ 0x27;
  v160[1777] = v181 ^ 0x56;
  v160[1171] = v179 ^ 0x13;
  v185 = v178 ^ 0x70345F8D;
  v186 = ((2 * (v182 + 1919906292 + (v178 ^ 0x70345F8D))) & 0xBBAFF7FC)
       + ((v182 + 1919906292 + (v178 ^ 0x70345F8D)) ^ 0xDDD7FBFE);
  v187 = v178 ^ v184;
  v188 = v181 ^ 0xAC9E32AA;
  v189 = ((2 * (v177 + 373303376 + (v181 ^ 0xAC9E32AA))) & 0xDAD0E3BA)
       + ((v177 + 373303376 + (v181 ^ 0xAC9E32AA)) ^ 0xED6871DD);
  v190 = v179 ^ v181;
  v191 = (v187 ^ 0x692B79DE)
       + v175
       - 2 * (((v187 ^ 0x692B79DE) + v175 + 1442322688) & 0x5E2BEB5B ^ ((v187 ^ 0x692B79DE) + v175) & 0x18)
       + 874775619;
  v160[1474] = v176 - ((2 * v176 + 90) & 0xF8) - 87;
  v160[1654] = v184 ^ 6;
  v192 = (v187 ^ 0x96D48621)
       + 573047810
       + v186
       + 1318443898
       - ((2 * ((v187 ^ 0x96D48621) + 573047810 + v186)) & 0x9D2BB6F4);
  v193 = (v190 ^ 0xD4ECC5BA) + v176 - ((2 * ((v190 ^ 0xD4ECC5BA) + v176) + 460047196) & 0x3C94F41E) - 872391747;
  v194 = (v190 ^ 0x2B133A45)
       + 311922211
       + v189
       - 1617376442
       - ((2 * ((v190 ^ 0x2B133A45) + 311922211 + v189)) & 0x3F31968C);
  v195 = v191 ^ (v186 + 1350260447);
  v196 = v189 - 2 * ((v189 + 1089134848) & 0x78E8125E ^ v189 & 4) - 1177357478;
  v160[1957] = (v175 - 1) ^ 0xAA;
  v160[1833] = v196 ^ 0xA6;
  v197 = v192 ^ (v185 + 1470844795);
  v198 = v194 ^ (v188 + 1470844795);
  v160[1530] = v198 ^ 0xBA;
  v160[2013] = v197 ^ 0xD0;
  v199 = v196 ^ v193;
  v200 = v197 ^ v195;
  v160[1227] = v199 ^ 0xA9;
  v160[1889] = v194 ^ 0xBA;
  v160[1710] = v191 ^ (v186 - 33) ^ 0xE9;
  v201 = v193 ^ 0x81D2B149 ^ v198;
  v202 = v191 ^ v197 ^ 0x10BE3039;
  v203 = ((2 * ((v197 ^ v195 ^ 0x10BE3039) + (v192 ^ 0x4E95DB7A))) & 0xF7EEF4DE)
       + (((v197 ^ v195 ^ 0x10BE3039) + (v192 ^ 0x4E95DB7A)) ^ 0x7BF77A6F);
  v204 = v199 ^ v198 ^ 0xF93AA313;
  v205 = ((2 * (v204 + (v194 ^ 0x9F98CB46))) & 0x1D6BBFEC) + ((v204 + (v194 ^ 0x9F98CB46)) ^ 0xEB5DFF6);
  v206 = v202 + 2079816303 - v203 - 54126780 - ((2 * (v202 + 2079816303 - v203)) & 0xF98C2E88);
  v160[1407] = v192 ^ 0xD0;
  v207 = (v194 ^ 0xF93AA313 ^ v199 ^ (v205 - 246800374))
       + 1128318308
       - ((2 * (v194 ^ 0xF93AA313 ^ v199 ^ (v205 - 246800374))) & 0x86818AC8);
  v160[1351] = (v186 - 33) ^ 0xAA;
  v208 = v201 - v205 + 2141562586;
  v209 = v206 ^ v200;
  v210 = (v192 ^ 0x10BE3039 ^ v195 ^ (v203 - 2079816303))
       + 521511822
       - ((2 * (v192 ^ 0x10BE3039 ^ v195 ^ (v203 - 2079816303))) & 0x3E2B471C);
  v211 = v201 - v205 + 246800374;
  v212 = (v204 ^ v211) - 792366972 + (~(2 * (v204 ^ v211)) | 0x5E751EF7) + 1;
  v160[2069] = v206 ^ 0xEE;
  v160[1945] = v207 ^ 0x98;
  v160[1283] = v212 ^ 0x78;
  v206 ^= 0xFCC61744;
  v213 = ((2 * ((v209 ^ 0xEC78277D) + v206)) & 0xE6BBDAE6) + (((v209 ^ 0xEC78277D) + v206) ^ 0x735DED73);
  LOBYTE(v206) = ((2 * (v206 - v203 + 111)) & 0x9E) + ((v206 - v203 + 111) ^ 0xCF);
  v160[1586] = v208 - 2 * (((v208 & 0xFD) + 28) ^ v208 & 1) + 24;
  v160[1766] = v209 ^ 0xD7;
  v160[1463] = v210 ^ 0x24;
  v214 = ((2 * ((v212 ^ 0xD0C57084) + v211)) & 0xEF76BFFE) + (((v212 ^ 0xD0C57084) + v211) ^ 0xF7BB5FFF);
  v160[1642] = v205 - 2 * (((v205 & 0xFD) + 96) ^ v205 & 1) - 36;
  v215 = ((v210 ^ 0x1F15A38E) + 1935535475 - v213) ^ (v203 - 1936383860);
  v216 = v215 - 2005825863 - ((2 * v215) & 0x10E30D72);
  v217 = v208 - v205;
  v160[1160] = (v203 + 103) ^ 0xAA;
  v218 = ((v207 ^ 0x4340C564) - 138715137 - v214) ^ (v205 - 103367931);
  v219 = v218 - 1636456493 - ((2 * v218) & 0x3CEB4FA6);
  v160[1698] = v219 ^ 0x2F;
  v220 = v214 - v205;
  v160[1395] = v205 - 2 * (v205 & 3 ^ (v205 + 84)) + 80;
  v160[1339] = v217 - ((2 * v217 - 110) & 0xF8) - 59;
  v221 = v219 ^ 0x9E75A7D3;
  v222 = ((2 * ((v219 ^ 0x9E75A7D3) - 520242382)) & 0xFA6BF5FE) + (((v219 ^ 0x9E75A7D3) - 520242382) ^ 0xFD35FAFF);
  v160[2001] = v214 - v205 + ~(2 * ((((v214 - v205) & 0x7D) + 124) ^ (v214 - v205) & 1)) - 7;
  v160[1822] = (v206 - 24) ^ 0xAA;
  v223 = v216 ^ 0x887186B9;
  v224 = ((2 * ((v216 ^ 0x887186B9) - 520242382)) & 0xF5DFD7C) + (((v216 ^ 0x887186B9) - 520242382) ^ 0x7AEFEBE);
  v225 = v213 - v203;
  v160[1216] = v216 ^ 0x13;
  LOBYTE(v216) = v225 - v206;
  v160[1878] = (v203 - 37) ^ 0xAA;
  v160[1519] = (v225 + 1) ^ 0xAA;
  v226 = v205 - v220 + 879088888 + v222;
  v160[1148] = v226 + ((60 - 2 * v226) | 7) + 94;
  v160[1575] = (v225 - 34) ^ 0xAA;
  v160[1451] = v222 - ((2 * v222 + 2) & 0xF8) - 3;
  LOBYTE(v206) = v225 - v206 - ((2 * (v225 - v206) - 114) & 0xDE) - 74;
  v227 = v220 - v217;
  v228 = v224 + v203 - v225;
  v160[1272] = ((~(2 * v206) & 0x52) + (v206 ^ 0xC6)) ^ 0xAA;
  v160[1934] = (v224 + 66) ^ 0xAA;
  v160[1754] = v227 - ((2 * v227 + 20) & 0xF8) + 6;
  v229 = v226 + v222 - ((2 * (v226 + v222) + 2007803076) & 0x5E47029A);
  v160[2057] = v220 + ((76 - 2 * v220) | 7) - 42;
  v160[1631] = (v228 + 28) ^ 0xAA;
  LOBYTE(v226) = v224 + v216;
  v230 = v229 - 1426467921;
  LOBYTE(v216) = v216 + v225 - ((2 * (v216 + v225) - 100) & 0x44) - 16;
  v231 = v227 + v220 - ((2 * (v227 + v220) + 216667078) & 0x1687D176) - 1581714786;
  v232 = v228 + v224 - ((2 * (v228 + v224) + 2027090108) & 0x47CD1BDC) + 1615857228;
  v233 = v232 ^ (v223 - 756629542);
  v234 = v222 + v227 - 2 * ((v222 + v227 + 399946244) & 0x1BEC4A0B ^ (v222 + v227) & 2) + 331545613;
  v160[1507] = v234 ^ 0xF5;
  v235 = v230 ^ (v221 - 756629542);
  LOBYTE(v232) = (v232 ^ 0xEE) - ((2 * (v232 ^ 0xEE) - 58) & 0x72) + 28;
  v236 = (v230 ^ 0xAF23814D) - ((2 * (v230 ^ 0xAF23814D) + 2009165766) & 0xD4A16854) - 1506710515;
  LOBYTE(v221) = v232 ^ (v226 + 43);
  v237 = v236 ^ v234;
  v160[1866] = v236 ^ 0xD6;
  v160[1990] = (v226 + 43) ^ 0xAA;
  v238 = v233 ^ 0xA3E68DEE;
  v239 = ((v235 ^ 0xAF23814D)
        + (v237 ^ 0x8E4301DC)
        + 1
        - ((2 * ((v235 ^ 0xAF23814D) + (v237 ^ 0x8E4301DC) + 1)) & 0xD4A16854)
        + 1783673898) ^ v236;
  v240 = ((v233 ^ 0xEE) + (v221 ^ 0xC6) + 1) ^ v232;
  v160[1384] = v232 ^ 0x93;
  v160[1328] = v216 ^ 0x88;
  v160[2046] = v216 ^ 0x88;
  v160[1810] = v231 ^ 0x47;
  v160[1563] = v231 ^ 0x47;
  v160[1204] = v235 ^ 0xB1;
  LOBYTE(v233) = v233 ^ 0x44;
  v160[1687] = v233;
  v160[1260] = (v237 ^ 0x23) + ((-40 - 2 * (v237 ^ 0x23)) | 7) + 16;
  v160[1743] = ((v221 ^ 0x39) + 19) ^ 0xAA;
  v241 = (v238 - ((2 * v238) & 0xD8) + 108) & 0x1E3;
  v160[1440] = v233;
  v242 = (v237 ^ 0x71BCFE23) - 847298151;
  v243 = (v241 ^ 0x183) + (v241 ^ 0x60);
  v160[1922] = v235 ^ 0xB1;
  LOBYTE(v241) = ((2 * (v238 - 121)) & 0xF4) + ((v238 - 121) ^ 0xFA);
  LOBYTE(v235) = ((2 * ((v235 ^ 0x4D) - 121)) & 0xF2) + (((v235 ^ 0x4D) - 121) ^ 0xF9);
  v160[1137] = v240 ^ 0xBA;
  LOBYTE(v233) = (v240 ^ 0x10) + (v216 ^ 0xA3);
  LOBYTE(v232) = (v221 ^ 0x39) - ((2 * (v221 ^ 0x39) + 50) & 0xF0) + 17;
  v244 = STACK[0x6D8];
  *(_BYTE *)(v244 + v243) = v239 ^ 0xD5;
  v245 = ((2 * ((v231 ^ 0x2A73233A) + (v239 ^ 0xAD180829) + 1)) & 0xCFBFF7FE)
       + (((v231 ^ 0x2A73233A) + (v239 ^ 0xAD180829) + 1) ^ 0xE7DFFBFF);
  v160[1799] = v216 ^ 0x10;
  v160[1372] = 2 * ((v231 ^ 0x3A) + (v239 ^ 0x29) + 1)
             + ~((v231 ^ 0x3A) + (v239 ^ 0x29) + 1)
             - ((2 * (2 * ((v231 ^ 0x3A) + (v239 ^ 0x29) + 1) + ~((v231 ^ 0x3A) + (v239 ^ 0x29) + 1)) - 22) & 0xF8)
             - 15;
  LOBYTE(v243) = ((2 * v232) & 0xAE ^ 0xA8) + (v232 ^ 0x83);
  v160[1675] = v235
             - (2 * ((v231 ^ 0x3A) + (v239 ^ 0x29) + 1)
              + ~((v231 ^ 0x3A) + (v239 ^ 0x29) + 1))
             - ((2 * (v235 - (2 * ((v231 ^ 0x3A) + (v239 ^ 0x29) + 1) + ~((v231 ^ 0x3A) + (v239 ^ 0x29) + 1))) + 36) & 0xF8)
             + 14;
  v160[1316] = v231 ^ 0xDF;
  v160[1496] = (v243 + 41) ^ 0xAA;
  LOBYTE(v232) = v243 + v241 - ((2 * (v243 + v241) + 94) & 0x88);
  v246 = ((2 * v242) & 0x4BB6EFFE ^ 0xB026658) + (v242 ^ 0xEA7EC4D3);
  v160[1978] = v246 - ((2 * v246 + 2) & 0xF8) - 3;
  LOBYTE(v225) = -54 - v243 - ((-82 - 2 * v243) & 0x72) + 70;
  v160[1855] = (v233 - 11) ^ 0xAA;
  LOBYTE(v238) = ((v233 - 29) ^ 0x39 ^ v225) - ((2 * ((v233 - 29) ^ 0x39 ^ v225)) & 0xA6) - 45;
  LOBYTE(v243) = ((2 * ((v216 ^ 0xBA) + 119 + (v238 ^ 0x2C))) & 0x3A) + (((v216 ^ 0xBA) + 119 + (v238 ^ 0x2C)) ^ a9);
  v160[1193] = (v241 - v233 + 17) ^ 0xAA;
  v247 = 1887383351 - v246 - ((1270280190 - 2 * v246) & 0x95476E70);
  v160[1428] = (55 - v246 - ((-2 - 2 * v246) & 0x70)) ^ 0xC4;
  v160[1552] = (v243 + 99) ^ 0xAA;
  v248 = (v247 ^ 0x4AA3B738 ^ (v245 - 1880033821))
       + 800062948
       - ((2 * (v247 ^ 0x4AA3B738 ^ (v245 - 1880033821))) & 0x5F5FFBC8);
  LOBYTE(v232) = v232 + 115;
  v160[1249] = v232 ^ 0x59;
  v249 = (v248 ^ 0x2FAFFDE4) - ((2 * (v248 ^ 0x2FAFFDE4)) & 0x35A);
  LOBYTE(v241) = v235 + 8 + v246;
  v160[1731] = v241 ^ 0x4B;
  v160[1911] = v225 ^ 0x93;
  LOBYTE(v216) = ((2 * ((v225 ^ 0xC6) + 100 + v243)) & 0xDE) + (((v225 ^ 0xC6) + 100 + v243) ^ 0x6F);
  v160[2034] = (a7 & (2 * ((v231 ^ 0x23) + 119 + (v248 ^ 0x1B))))
             + ~((v231 ^ 0x23) + 119 + (v248 ^ 0x1B))
             - ((2 * ((a7 & (2 * ((v231 ^ 0x23) + 119 + (v248 ^ 0x1B)))) + ~((v231 ^ 0x23) + 119 + (v248 ^ 0x1B))) + 2) & 0xF8)
             - 3;
  LOWORD(v235) = (a7 & (2 * ((v231 ^ 0x3723) + 27255 + (v248 ^ 0x21B))))
               + (((v231 ^ 0x3723) + 27255 + (v248 ^ 0x21B)) ^ 0xFEFF)
               + v246;
  LOBYTE(v246) = (v225 ^ 0xFD) + v233;
  v160[1608] = v238 ^ 0x79;
  LODWORD(STACK[0x4E8]) = v147 + 1;
  LODWORD(STACK[0x4EC]) = v148 + 1;
  LODWORD(STACK[0x4F0]) = v151 + 1;
  v250 = v216 + v233 - ((2 * (v216 + v233) - 46) & 0xE8) - 35;
  v251 = v246 - v216 - ((2 * (v246 - v216) - 70) & 0x54) + 7;
  *(_BYTE *)(v244 + ((v249 + 429) & 0x3BALL ^ 0x212 | (v249 + 429) & 0x3BALL ^ 0x1A8)) = ((v247 ^ 0x38 ^ (v245 - 29))
                                                                                        - 28
                                                                                        - ((2
                                                                                          * (v247 ^ 0x38 ^ (v245 - 29))) & 0xC8)) ^ 0x18;
  LOBYTE(v231) = v250 ^ v251;
  LOWORD(v243) = v245 + (v247 ^ 0xC3FC);
  LOBYTE(v232) = (v232 ^ 0xF3) - v246 - v216 - 116 - ((2 * ((v232 ^ 0xF3) - v246 - v216 - 116)) & 0x2C) + 22;
  v160[1843] = (v235 + v245 - ((2 * (v235 + v245) - 76) & 0xF4) - 44) ^ 0x86;
  v160[1181] = v243 - ((2 * v243 - 58) & 0xF8) - 33;
  LOBYTE(v241) = (v241 ^ 0xB7) - v243 - v235 + 27 - ((2 * ((v241 ^ 0xB7) - v243 - v235 + 27)) & 0xA2) - 47;
  v160[1967] = v232 ^ 0xBC;
  v160[1305] = (v216 + 6) ^ 0xAA;
  v160[1787] = v235 - ((2 * v235 - 18) & 0xF8) + 115;
  v160[1484] = v241 ^ 0x2D;
  LOWORD(v243) = v243 - v235 - ((2 * (v243 - v235) + 18136) & 0xABC) - 22326;
  LOBYTE(v232) = v250 ^ v251 ^ v232;
  LOWORD(v233) = (v235 + v245 - ((2 * (v235 + v245) - 28492) & 0xC8F4) + 11476) ^ v243;
  LOBYTE(v241) = (v235 + v245 - ((2 * (v235 + v245) - 76) & 0xF4) - 44) ^ v243 ^ v241;
  v160[1361] = v250 ^ 0x5E;
  v160[1664] = (v246 - 29) ^ 0xAA;
  LOWORD(v151) = v235 + 2372 + (v233 ^ 0x623F) - ((2 * (v235 + 2372 + (v233 ^ 0x623F))) & 0x5612) - 21751;
  LOBYTE(v216) = ((2 * (v216 - 118 + (v231 ^ 0xC5))) & 0x1A) + ((v216 - 118 + (v231 ^ 0xC5)) ^ 0x8D);
  LOBYTE(v243) = (v243 ^ 0x5E) - ((2 * (v243 ^ 0x5E) + 102) & 0x66) + 102;
  LOBYTE(v245) = (v251 ^ 0x2A) - ((2 * (v251 ^ 0x2A) + 102) & 0x18) - 65;
  v160[1720] = v232 ^ 0x62;
  v160[2023] = (v216 - 68) ^ 0xAA;
  v160[1540] = (v235 + 68 + (v233 ^ 0x3F) - ((2 * (v235 + 68 + (v233 ^ 0x3F))) & 0x12) + 9) ^ 0xF5;
  v252 = v245 ^ v250 ^ v251;
  *(_BYTE *)(v244 + (unsigned __int16)(25919 * ((v151 & 0x3D5B ^ 0x2909) + (v151 & 0x3D5B ^ 0x1452)))) = v241 ^ 9;
  v160[1899] = v243 ^ 0xCF;
  v160[1596] = v233 ^ 0xC3;
  LOBYTE(v235) = v245 ^ 0x26;
  LOBYTE(v232) = v232 ^ 0xC8;
  v253 = v232 ^ (v216 - 68);
  LOBYTE(v245) = ((2 * (v253 + (v245 ^ 0x8C))) & 0x6E) + ((v253 + (v245 ^ 0x8C)) ^ 0xB7);
  LOBYTE(v216) = v243 ^ v233;
  LOBYTE(v232) = ((2 * (v232 + 73 + v245)) & 0xE0) + ((v232 + 73 + v245) ^ 0xF0);
  v160[2079] = v231 ^ 0x6F;
  v160[1417] = v235;
  v254 = ((2 * (v253 + 16 + v232)) & 0x7E) + ((v253 + 16 + v232) ^ 0xBF);
  LOBYTE(v231) = v241 ^ 0xFC ^ v151;
  LOBYTE(v243) = ((2 * (v231 + (v243 ^ 0x33))) & 0x7C) + ((v231 + (v243 ^ 0x33)) ^ 0xBE);
  LOBYTE(v232) = v232 + (v252 ^ 0xB6) - ((2 * (v232 + (v252 ^ 0xB6)) + 34) & 0x12) - 102;
  LOBYTE(v241) = ((2 * ((v241 ^ 0xF5) + 66 + v243)) & 0xEE) + (((v241 ^ 0xF5) + 66 + v243) ^ 0xF7);
  LOBYTE(v151) = ((2 * (v231 + 9 + v241)) & 0xEE) + ((v231 + 9 + v241) ^ 0xF7);
  LOBYTE(v231) = v151 + v243 - ((2 * (v151 + v243) - 106) & 0x90) + 19;
  v160[1293] = v151 - ((2 * v151 + 18) & 0xF8) + 5;
  LOBYTE(v243) = v241 + (v216 ^ 0xF3) - ((2 * (v241 + (v216 ^ 0xF3)) + 20) & 0xCE) + 113;
  LOBYTE(v241) = v254 + v245 - ((2 * (v254 + v245) + 20) & 0xA8) - 34;
  LOBYTE(v216) = (v216 ^ 0xC) - 9 - v151 - ((2 * ((v216 ^ 0xC) - 9 - v151)) & 0xC2) + 97;
  LOBYTE(v233) = (v252 ^ 0x49) - 65 - v254 - ((2 * ((v252 ^ 0x49) - 65 - v254)) & 0x26) - 109;
  v160[1349] = v216 ^ 0x9D;
  v255 = v233 ^ v232;
  v160[1955] = v243 ^ 0x9B;
  LOBYTE(v243) = v216 ^ v243;
  v160[1776] = (v254 + 65) ^ 0xAA;
  v160[1473] = v232 ^ 0x23;
  v160[1832] = v233 ^ 0x39;
  v160[1652] = v231 ^ 0x34;
  LOBYTE(v245) = ((2 * v255) ^ 0xCB) + v254 - ((2 * (((2 * v255) ^ 0xCB) + v254) - 124) & 0xCE) + 41;
  v256 = v233 ^ 0xF0 ^ v241;
  LOBYTE(v235) = ((2 * ((v255 ^ 0x1A) - 42)) & 0x9E) + (((v255 ^ 0x1A) - 42) ^ 0xCF);
  LOBYTE(v233) = ((2 * v243) ^ 0xF3) + v151 - ((2 * (((2 * v243) ^ 0xF3) + v151) + 20) & 0x4C) + 48;
  v160[2011] = v233 ^ 0xDA;
  v160[1529] = v245 ^ 0x4D;
  LOBYTE(v243) = ((2 * ((v243 ^ 6) - 42)) & 0xEE) + (((v243 ^ 6) - 42) ^ 0xF7);
  v160[1708] = v243 - ((2 * v243 + 18) & 0xF8) + 5;
  LOBYTE(v246) = (v216 ^ 0x9E ^ v231) - 9 - v243 - ((2 * ((v216 ^ 0x9E ^ v231) - 9 - v243)) & 0x7E) - 65;
  v160[1405] = v246 ^ 0x43;
  v160[1170] = v241 ^ 0xFE;
  LOBYTE(v238) = v256 - 49 - v235 - ((2 * (v256 - 49 - v235)) & 0x36) + 27;
  v160[1226] = ((v255 ^ 0x1A) - 42) ^ 0xAA;
  v160[2067] = v231 ^ 0x34;
  v160[1888] = v238 ^ 0xB1;
  v160[1585] = v241 ^ 0xFE;
  v160[1282] = ((v245 ^ 0xE7) - ((2 * (v245 ^ 0xE7) - 126) & 0xF8) - 67) ^ 0x5D;
  v160[1158] = v246 ^ v233 ^ 0x59;
  v160[1944] = ((v238 ^ 0xE4)
              + v235
              + (v238 ^ v245 ^ 0x3F)
              - ((2 * ((v238 ^ 0xE4) + v235 + (v238 ^ v245 ^ 0x3F)) + 102) & 0x1E)
              + 66) ^ 0xA5;
  v160[1641] = v238 ^ v245 ^ 0x6A;
  v160[1764] = ((v233 ^ 0x26) - 63) ^ 0xF7;
  v160[1461] = ((v246 ^ 0x40)
              + v243
              + (v246 ^ v233 ^ 0x5A)
              - ((2 * ((v246 ^ 0x40) + v243 + (v246 ^ v233 ^ 0x5A)) + 22) & 0xC2)
              - 20) ^ 0x1D;
  v160[1820] = ((v231 ^ 0xC8) + 126) ^ 0xAC;
  v160[1338] = ((v241 ^ 0x54) - ((2 * (v241 ^ 0x54) - 4) & 0xA2) - 49) ^ 0xAB;
  LODWORD(STACK[0x4CC]) = LODWORD(STACK[0x698]) + 569685023;
  return (*(uint64_t (**)(void))(STACK[0x6C0] + 8 * (LODWORD(STACK[0x5D8]) ^ (244 * (v150 ^ 1)))))();
}

void sub_226E90()
{
  JUMPOUT(0x2270A8);
}

void sub_229DF0()
{
  JUMPOUT(0x229E58);
}

uint64_t sub_229EFC@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  unsigned int v29;
  _BOOL4 v30;

  v21 = v10 - 1808;
  v22 = v11 + v21 - 25316646;
  v23 = STACK[0x6D8];
  v24 = STACK[0x6C8] + (a9 - 385059419 + v21 - 25316646);
  *(_BYTE *)(v23 + (v22 * v14 + v13) % 0x3C5u) = *(_BYTE *)v24 ^ *(_BYTE *)(STACK[0x6D8] + (v22 * v14 + v13) % 0x3C5u);
  v25 = (v21 + a7) & a8;
  LODWORD(STACK[0x6B4]) = v25;
  v26 = (v25 + v15 + v22 * v14) % 0x3C5u;
  v27 = v17 + 1554976193 * v24 - ((-1185014910 * v24) & a2);
  v28 = ((a3 ^ HIWORD(v27)) + v17 - (v12 & (2 * (a3 ^ HIWORD(v27))))) ^ v27;
  v29 = 1554976193 * v28 - ((-1185014910 * v28) & a4) + a5;
  *(_BYTE *)(v23 + v26) ^= v29 ^ 0xAC ^ *(_BYTE *)(STACK[0x6D0]
                                                 + (673 * (v16 ^ HIBYTE(v29))
                                                                - ((673 * (v16 ^ HIBYTE(v29)) * (unint64_t)v19) >> 32)
                                                                * v20));
  v30 = v22 + a6 < v9;
  if (v9 < v18 != v22 + a6 < v18)
    v30 = v9 < v18;
  return (*(uint64_t (**)(void))(STACK[0x6C0] + 8 * ((v30 * a1) ^ v21)))();
}

void sub_22A03C()
{
  JUMPOUT(0x229F20);
}

uint64_t sub_22A044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,int a37,int a38,int a39,int a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,char a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  int a66;
  int a67;
  int a68;
  int a69;
  unsigned int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  int a78;
  unsigned int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  int a84;
  int a85;
  int a86;
  int a87;
  int a88;
  int a89;
  int a90;
  int a91;
  int a92;
  int a93;
  int a94;
  int a95;
  int a96;
  int a97;
  int a98;
  int a99;
  int a100;
  int a101;
  int a102;
  int a103;
  int a104;
  int a105;
  int a106;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  _BOOL4 v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  unsigned int v210;
  int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  unsigned int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  int v229;
  unsigned int v230;
  unint64_t v231;
  int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  int v274;
  unsigned int v275;
  int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  int v291;
  unsigned int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  int v310;
  int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  int v323;
  BOOL v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  int v329;
  unsigned int v330;
  int v331;
  int v332;
  unint64_t v333;
  int v334;
  int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  unsigned int v349;
  int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  int v362;
  unsigned int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  int v389;
  int v390;
  unsigned int v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  unsigned int v396;
  int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  unsigned int v415;
  int v416;
  int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  unsigned int v439;
  int v440;
  int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  int v447;
  unsigned int v448;
  int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  int v458;
  int v459;
  int v460;
  unsigned int v461;
  unsigned int v462;
  int v463;
  unsigned int v464;
  int v465;
  unsigned int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  unsigned int v483;
  int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  int v488;
  unsigned int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  int v500;
  unsigned int v501;
  unsigned int v502;
  int v503;
  int v504;
  unsigned int v505;
  unsigned int v506;
  int v507;
  int v508;
  int v509;
  unsigned int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  unsigned int v515;
  int v516;
  int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  unsigned int v529;
  int v530;
  unsigned int v531;
  int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  unsigned int v536;
  int v537;
  unsigned int v538;
  int v539;
  int v540;
  unsigned int v541;
  int v542;
  unsigned int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  int v556;
  int v557;
  unsigned int v558;
  unsigned int v559;
  int v560;
  unsigned int v561;
  unsigned int v562;
  int v563;
  int v564;
  unsigned int v565;
  int v566;
  unsigned int v567;
  int v568;
  int v569;
  unsigned int v570;
  unsigned int v571;
  int v572;
  int v573;
  int v574;
  int v575;
  int v576;
  int v577;
  unsigned int v578;
  unsigned int v579;
  int v580;
  int v581;
  unsigned int v582;
  unsigned int v583;
  unsigned int v584;
  int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  int v592;
  unsigned __int8 *v593;
  int v594;
  int v595;
  int v596;
  unsigned int v597;
  int v598;
  int v599;
  unint64_t v600;
  int v601;
  int v602;
  int v603;
  int v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  uint64_t v614;
  unsigned int v615;
  int v616;
  int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  int v621;
  int v622;
  uint64_t v623;
  unsigned int v624;
  int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  int v629;
  int v630;
  unsigned int v631;
  int v632;
  int v633;
  int v634;
  int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  int v639;
  int v640;
  int v641;
  int v642;
  unsigned int v643;
  int v644;
  unsigned int v645;
  unsigned int v646;
  unsigned int v647;
  int v648;
  int v649;
  int v650;
  int v651;
  int v652;
  int v653;
  unsigned int v654;
  int v655;
  unsigned int v656;
  int v657;
  int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  int v663;
  int v664;
  int v665;
  unsigned int v666;
  int v667;
  int v668;
  unsigned int v669;
  unsigned int v670;
  unsigned int v671;
  int v672;
  int v673;
  int v674;
  unsigned int v675;
  int v676;
  unsigned int v677;
  int v678;
  int v679;
  unsigned int v680;
  int v681;
  unsigned int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  unsigned int v687;
  unsigned int v688;
  unsigned int v689;
  int v690;
  unsigned int v691;
  int v692;
  unsigned int v693;
  int v694;
  unsigned int v695;
  int v696;
  unsigned int v697;
  unsigned int v698;
  int v699;
  int v700;
  int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  int v705;
  int v706;
  int v707;
  unsigned int v708;
  unsigned int v709;
  int v710;
  int v711;
  int v712;
  unsigned int v713;
  int v714;
  unsigned int v715;
  int v716;
  int v717;
  int v718;
  unsigned int v719;
  unsigned int v720;
  int v721;
  int v722;
  unsigned int v723;
  int v724;
  unsigned int v725;
  int v726;
  unsigned int v727;
  int v728;
  int v729;
  unsigned int v730;
  unsigned int v731;
  unsigned int v732;
  int v733;
  int v734;
  unsigned int v735;
  int v736;
  unsigned int v737;
  int v738;
  unsigned int v739;
  int v740;
  unsigned int v741;
  int v742;
  unsigned int v743;
  unsigned int v744;
  int v745;
  int v746;
  unsigned int v747;
  int v748;
  int v749;
  unsigned int v750;
  int v751;
  int v752;
  unsigned int v753;
  int v754;
  unsigned int v755;
  int v756;
  int v757;
  int v758;
  unsigned int v759;
  int v760;
  int v761;
  int v762;
  unsigned int v763;
  int v764;
  unsigned int v765;
  unsigned int v766;
  int v767;
  unsigned int v768;
  int v769;
  unsigned int v770;
  int v771;
  unsigned int v772;
  int v773;
  unsigned int v774;
  unsigned int v775;
  unsigned int v776;
  unsigned int v777;
  int v778;
  int v779;
  int v780;
  int v781;
  int v782;
  unsigned int v783;
  unsigned int v784;
  int v785;
  int v786;
  int v787;
  unsigned int v788;
  int v789;
  unsigned int v790;
  unsigned int v791;
  unsigned int v792;
  unsigned int v793;
  int v794;
  unsigned int v795;
  unsigned int v796;
  int v797;
  int v798;
  unsigned int v799;
  unsigned int v800;
  int v801;
  int v802;
  unsigned int v803;
  int v804;
  unsigned int v805;
  int v806;
  unsigned int v807;
  int v808;
  int v809;
  int v810;
  unsigned int v811;
  int v812;
  int v813;
  int v814;
  int v815;
  int v816;
  int v817;
  int v818;
  unsigned int v819;
  unsigned int v820;
  unsigned int v821;
  unsigned int v822;
  unsigned int v823;
  int v824;
  int v825;
  unsigned int v826;
  int v827;
  unsigned int v828;
  unsigned int v829;
  int v830;
  unsigned int v831;
  int v832;
  unsigned int v833;
  unsigned int v834;
  int v835;
  unsigned int v836;
  unsigned int v837;
  int v838;
  int v839;
  unsigned int v840;
  unsigned int v841;
  int v842;
  unsigned int v843;
  int v844;
  unsigned int v845;
  unsigned int v846;
  unsigned int v847;
  int v848;
  unsigned int v849;
  int v850;
  unsigned int v851;
  int v852;
  unsigned int v853;
  unsigned int v854;
  unsigned int v855;
  unsigned int v856;
  unsigned int v857;
  unsigned int v858;
  unsigned int v859;
  unsigned int v860;
  unsigned int v861;
  uint64_t v862;
  unsigned int v863;
  int v864;
  int v865;
  unsigned int v866;
  unsigned int v867;
  unsigned int v868;
  int v869;
  int v870;
  int v871;
  int v872;
  unsigned int v873;
  unsigned int v874;
  int v875;
  unsigned int v876;
  int v877;
  unsigned int v878;
  int v879;
  unsigned int v880;
  unsigned int v881;
  int v882;
  unsigned int v883;
  int v884;
  unsigned int v885;
  int v886;
  int v887;
  unsigned int v888;
  unsigned int v889;
  unsigned int v890;
  int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  int v897;
  int v898;
  int v899;
  int v900;
  int v901;
  int v902;
  unsigned int v903;
  unsigned int v904;
  unsigned int v905;
  unsigned int v906;
  int v907;
  int v908;
  int v909;
  int v910;
  int v911;
  int v912;
  int v913;
  int v914;
  unsigned int v915;
  int v916;
  int v917;
  unsigned int v918;
  int v919;
  int v920;
  unsigned int v921;
  int v922;
  unsigned int v923;
  unsigned int v924;
  int v925;
  int v926;
  int v927;
  unsigned int v928;
  int v929;
  unsigned int v930;
  int v931;
  int v932;
  unsigned int v933;
  unsigned int v934;
  int v935;
  unsigned int v936;
  unsigned int v937;
  unsigned int v938;
  int v939;
  int v940;
  int v941;
  int v942;
  unsigned int v943;
  unsigned int v944;
  int v945;
  unsigned int v946;
  unsigned int v947;
  int v948;
  int v949;
  unsigned int v950;
  int v951;
  int v952;
  int v953;
  int v954;
  unsigned int v955;
  int v956;
  int v957;
  int v958;
  int v959;
  unsigned int v960;
  unint64_t v961;
  int v962;
  unsigned int v963;
  unsigned int v964;
  unsigned int v965;
  unsigned int v966;
  unsigned int v967;
  int v968;
  unsigned int v969;
  unsigned int v970;
  unsigned int v971;
  int v972;
  int v973;
  unsigned int v974;
  int v975;
  unsigned int v976;
  int v977;
  int v978;
  int v979;
  int v980;
  int v981;
  int v982;
  int v983;
  int v984;
  int v985;
  int v986;
  unsigned int v987;
  int v988;
  unsigned int v989;
  int v990;
  int v991;
  int v992;
  unsigned int v993;
  unsigned int v994;
  unsigned int v995;
  unsigned int v996;
  unsigned int v997;
  int v998;
  int v999;
  unsigned int v1000;
  int v1001;
  unsigned int v1002;
  unsigned int v1003;
  int v1004;
  int v1005;
  int v1006;
  unsigned int v1007;
  int v1008;
  unsigned int v1009;
  int v1010;
  unsigned int v1011;
  int v1012;
  unsigned int v1013;
  unsigned int v1014;
  unsigned int v1015;
  int v1016;
  int v1017;
  int v1018;
  int v1019;
  int v1020;
  int v1021;
  int v1022;
  unsigned int v1023;
  unsigned int v1024;
  unsigned int v1025;
  int v1026;
  unsigned int v1027;
  unsigned int v1028;
  unsigned int v1029;
  int v1030;
  int v1031;
  int v1032;
  int v1033;
  unsigned int v1034;
  int v1035;
  unsigned int v1036;
  unsigned int v1037;
  int v1038;
  int v1039;
  unsigned int v1040;
  int v1041;
  int v1042;
  unsigned int v1043;
  int v1044;
  unsigned int v1045;
  int v1046;
  unsigned int v1047;
  int v1048;
  unsigned int v1049;
  int v1050;
  unsigned int v1051;
  unsigned int v1052;
  unsigned int v1053;
  int v1054;
  unsigned int v1055;
  int v1056;
  unsigned int v1057;
  int v1058;
  int v1059;
  int v1060;
  unsigned int v1061;
  int v1062;
  unsigned int v1063;
  unsigned int v1064;
  unsigned int v1065;
  unsigned int v1066;
  int v1067;
  unsigned int v1068;
  unsigned int v1069;
  unsigned int v1070;
  int v1071;
  unsigned int v1072;
  unsigned int v1073;
  int v1074;
  int v1075;
  int v1076;
  unsigned int v1077;
  unsigned int v1078;
  unsigned int v1079;
  unsigned int v1080;
  int v1081;
  int v1082;
  int v1083;
  unsigned int v1084;
  int v1085;
  int v1086;
  unsigned int v1087;
  unsigned int v1088;
  unsigned int v1089;
  int v1090;
  int v1091;
  unsigned int v1092;
  int v1093;
  unsigned int v1094;
  unsigned int v1095;
  int v1096;
  int v1097;
  unsigned int v1098;
  unsigned int v1099;
  unsigned int v1100;
  int v1101;
  int v1102;
  unsigned int v1103;
  int v1104;
  int v1105;
  int v1106;
  int v1107;
  int v1108;
  int v1109;
  unsigned int v1110;
  unsigned int v1111;
  unsigned int v1112;
  int v1113;
  unsigned int v1114;
  unsigned int v1115;
  int v1116;
  int v1117;
  int v1118;
  int v1119;
  unsigned int v1120;
  int v1121;
  unsigned int v1122;
  unsigned int v1123;
  int v1124;
  int v1125;
  unsigned int v1126;
  int v1127;
  int v1128;
  unsigned int v1129;
  unsigned int v1130;
  int v1131;
  unsigned int v1132;
  unsigned int v1133;
  int v1134;
  unsigned int v1135;
  unsigned int v1136;
  int v1137;
  unsigned int v1138;
  unsigned int v1139;
  int v1140;
  unsigned int v1141;
  unsigned int v1142;
  unsigned int v1143;
  unsigned int v1144;
  unsigned int v1145;
  unsigned int v1146;
  unsigned __int8 *v1147;
  int v1148;
  int v1149;
  int v1150;
  unsigned int v1151;
  int v1152;
  unsigned int v1153;
  unsigned int v1154;
  int v1155;
  int v1156;
  int v1157;
  int v1158;
  int v1159;
  int v1160;
  int v1161;
  unsigned int v1162;
  int v1163;
  int v1164;
  int v1165;
  int v1166;
  int v1167;
  int v1168;
  unsigned int v1169;
  int v1170;
  int v1171;
  int v1172;
  int v1173;
  int v1174;
  unsigned int v1175;
  int v1176;
  unsigned int v1177;
  int v1178;
  int v1179;
  unsigned int v1180;
  int v1181;
  int v1182;
  int v1183;
  int v1184;
  int v1185;
  unsigned __int8 *v1186;
  int v1187;
  int v1188;
  int v1189;
  int v1190;
  int v1191;
  int v1192;
  int v1193;
  int v1194;
  int v1195;
  int v1196;
  int v1197;
  int v1198;
  int v1199;
  int v1200;
  int v1201;
  int v1202;
  int v1203;
  int v1204;
  int v1205;
  int v1206;
  int v1207;
  unsigned int v1208;
  unsigned int v1209;
  int v1210;

  v106 = LODWORD(STACK[0x248]) | (LODWORD(STACK[0x244]) << 7);
  v107 = a47 ^ LODWORD(STACK[0x358]);
  LODWORD(STACK[0x5EC]) = v107;
  LODWORD(STACK[0x5F8]) = a52 ^ a53;
  v108 = LODWORD(STACK[0x22C]) ^ LODWORD(STACK[0x3F8]);
  v109 = LODWORD(STACK[0x204]) ^ a97;
  LODWORD(STACK[0x5E4]) = a55 ^ a54;
  LODWORD(STACK[0x5FC]) = a68 ^ a69;
  LODWORD(STACK[0x5CC]) = a45 - LODWORD(STACK[0x5A0]);
  v110 = a48 ^ (LODWORD(STACK[0x470]) >> 20) ^ (LODWORD(STACK[0x45C]) >> 1) ^ 0x7F686B12;
  v111 = (v110 + 998191628 - ((2 * v110) & 0x76FE6418)) ^ LODWORD(STACK[0x438]);
  v112 = (v111 - 1679444690 - ((2 * v111) & 0x37CB6A5C)) ^ LODWORD(STACK[0x42C]);
  v113 = (v112 - 305438390 - ((2 * v112) & 0xDB96C294)) ^ LODWORD(STACK[0x448]);
  v114 = (v113 + 1948644875 - ((2 * v113) & 0xE84BEC16)) ^ LODWORD(STACK[0x444]);
  v115 = (v114 - 2087729549 - ((2 * v114) & 0x71F8CE6)) ^ LODWORD(STACK[0x430]);
  v116 = (v115 + 664790047 - ((2 * v115) & 0x4F3FC83E)) ^ a50;
  v117 = (v116 + 1531796391 - ((2 * v116) & 0xB69AB74E)) ^ a49;
  v118 = (v117 + 1046458619 - ((2 * v117) & 0x7CBF61F6)) ^ LODWORD(STACK[0x428]);
  v119 = (v118 - 637946741 - ((2 * v118) & 0xB3F36916)) ^ a51;
  v120 = (v119 + 710637345 - ((2 * v119) & 0x54B6EE42)) ^ a46;
  v121 = v120 + 1505609135 - ((2 * v120) & 0xB37B8B5E);
  v122 = (((LODWORD(STACK[0x20C]) >> 26) ^ (SLODWORD(STACK[0x20C]) >= 0))
        + 117902885
        - 2
        * (((LODWORD(STACK[0x20C]) >> 26) ^ (SLODWORD(STACK[0x20C]) >= 0)) & 0x2D ^ (LODWORD(STACK[0x20C]) >> 26) & 8)) ^ a98;
  v123 = (v122 - 671054101 - ((2 * v122) & 0x30010DD6)) ^ a95;
  v124 = (v123 - 478196755 - ((2 * v123) & 0x46FE97DA)) ^ a102;
  v125 = (v124 - 1689009985 - ((2 * v124) & 0x36A78E3A) + 1630) ^ a96;
  v126 = (v125 + 966789249 - ((2 * v125) & 0x73401102)) ^ a100;
  v127 = (~((2 * v126) & 0x73C80FC0) + v126 + 971245537) ^ a99;
  v128 = (v127 - 2119042270 - ((2 * v127) & 0x363FC90) + 806) ^ a94;
  v129 = (v128 + 645018924 - ((2 * v128) & 0x4CE46A58)) ^ a101;
  v130 = (v129 - 1786916859 - ((2 * v129) & 0x2AFBA00A)) ^ a92;
  v131 = a84 ^ a80 ^ (v130 - 843607925 - ((2 * v130) & 0x9B6F2116));
  v132 = a93 & 0x17448E2 ^ (LODWORD(STACK[0x20C]) >> 3) ^ (v131 & 0xE68BB71D ^ a93 & 0x8BB71D | v131 & 0x197448E2);
  v133 = a83 ^ a82 ^ ((v132 ^ 0xA2EB2C) + 893524867 - 2 * ((v132 ^ 0xA2EB2C) & 0x35421B93 ^ v132 & 0x10));
  v134 = (v133 >> 21) ^ (v133 >> 27);
  v135 = a103 ^ (32 * v134) ^ (v134 << 11) ^ 0xEEA02DC4 ^ (2 * LODWORD(STACK[0x20C])) ^ (LODWORD(STACK[0x20C]) << 6) ^ (4 * v133) ^ (v133 << 11) ^ (32 * v133) ^ (4 * v134);
  v136 = (v135
        - 1771479441
        - 2
        * (v135 & 0x16695E7F ^ (((2 * LOBYTE(STACK[0x20C])) ^ (LOBYTE(STACK[0x20C]) << 6) ^ (4 * v133) ^ (32 * v133)) ^ (4 * v134)) & 0x10)) ^ a91;
  v137 = (v136 + 1048794780 - ((2 * v136) & 0x7D06AD38)) ^ a106;
  v138 = (v137 + 317624184 - ((2 * v137) & 0x25DD1EF0)) ^ a105;
  v139 = (v138 - 1839886537 - ((2 * v138) & 0x24AB1E6E)) ^ LODWORD(STACK[0x3A4]);
  v140 = (v139 - 899048909 - ((2 * v139) & 0x94D33466)) ^ LODWORD(STACK[0x39C]);
  v141 = (v140 - 739800857 - ((2 * v140) & 0xA7CF11CE)) ^ LODWORD(STACK[0x528]);
  v142 = (v141 - 1177712202 - ((2 * v141) & 0x739B136C)) ^ LODWORD(STACK[0x200]);
  v143 = (v142 - 1315638977 - ((2 * v142) & 0x6329E27E)) ^ LODWORD(STACK[0x3A0]);
  v144 = (v143 + 837320685 - ((2 * v143) & 0x63D0FFDA)) ^ a104;
  v145 = (v144 + 2003901207 - ((2 * v144) & 0xEEE2362E)) ^ LODWORD(STACK[0x390]);
  v146 = (v145 - 1725296516 - ((2 * v145) & 0x325420F8)) ^ LODWORD(STACK[0x398]);
  v147 = (v146 - 469083903 - ((2 * v146) & 0xC814B202)) ^ LODWORD(STACK[0x388]);
  v148 = (v147 + 853329095 - ((2 * v147) & 0x65B9898E)) ^ LODWORD(STACK[0x38C]);
  v149 = (v148 - 1528726175 - ((2 * v148) & 0x49C2FAC2)) ^ LODWORD(STACK[0x394]);
  v150 = (v149 - 572213733 - ((2 * v149) & 0xBBC96C36)) ^ LODWORD(STACK[0x524]);
  v151 = v133 ^ 0xEA1DC5FA ^ (v150 - 364154982 + (~(2 * v150) | 0x2B6920CD));
  v152 = a66 ^ (a70 >> 21);
  v153 = v134 ^ (8 * a81) ^ (16 * a81) ^ (32 * a81) ^ (~a81 << 30) ^ (v151 - ((2 * v151) & 0xD89CFAB6) - 330400421) ^ (4 * a70) ^ (32 * a70) ^ (a70 << 11) ^ (4 * v152) ^ (32 * v152) ^ (v152 << 11) ^ 0x32976D31;
  v154 = (v153 + 1077289037 - ((2 * v153) & 0x806C409A)) ^ LODWORD(STACK[0x520]);
  v155 = (v154 + 2101441893 - ((2 * v154) & 0xFA82EACA)) ^ LODWORD(STACK[0x368]);
  v156 = (v155 - 218538686 - ((2 * v155) & 0xE5F2BA84)) ^ LODWORD(STACK[0x518]);
  v157 = (v156 + 657686933 - ((2 * v156) & 0x4E67032A)) ^ LODWORD(STACK[0x51C]);
  v158 = (v157 - 3588351 - ((2 * v157) & 0xFF927E02)) ^ LODWORD(STACK[0x384]);
  v159 = (v158 + 1393620264 - ((2 * v158) & 0xA621EA50)) ^ LODWORD(STACK[0x378]);
  v160 = (v159 - 265725831 - ((2 * v159) & 0xE052B0F2)) ^ a74;
  v161 = (v160 - 900160690 - ((2 * v160) & 0x94B1469C)) ^ LODWORD(STACK[0x374]);
  v162 = (v161 + 1850322503 - ((2 * v161) & 0xDC935C8E)) ^ LODWORD(STACK[0x370]);
  v163 = (v162 + 1869114938 - ((2 * v162) & 0xDED0DC74)) ^ LODWORD(STACK[0x36C]);
  v164 = (v163 + 656148421 - ((2 * v163) & 0x4E380F8A)) ^ LODWORD(STACK[0x514]);
  v165 = (v164 + 2032031279 - ((2 * v164) & 0xF23CAC5E)) ^ a65;
  v166 = (v165 - 1114556289 - ((2 * v165) & 0x7B2270FE)) ^ LODWORD(STACK[0x380]);
  v167 = a70 ^ (v166 - ((2 * v166) & 0xE62DF1B8) - 216598308) ^ 0xF5E6DD2B;
  v168 = (v167 - ((2 * v167) & 0x89106CAE) + 1149777495) ^ v152 ^ (LODWORD(STACK[0x364]) << 13) ^ (LODWORD(STACK[0x364]) << 12) ^ (~LODWORD(STACK[0x364]) << 31) ^ ((unint64_t)(LODWORD(STACK[0x364]) ^ 0xC3B194DF) << (((STACK[0x464] & 0xD0 ^ 0x80 | STACK[0x464] & 0xD0 ^ 0x53) + 63) & 0xFE));
  v169 = SLODWORD(STACK[0x470]) >= 0;
  LODWORD(STACK[0x5E8]) = v169;
  v170 = v107 ^ v121;
  v171 = v169 ^ ((v107 ^ v121) >> 21) ^ ((v107 ^ v121) >> 27);
  v172 = v168 ^ (4 * (v107 ^ v121)) ^ (32 * (v107 ^ v121)) ^ ((v107 ^ v121) << 11) ^ (4 * v171);
  v173 = (32 * v171) ^ (v171 << 11) ^ 0xC5295C00 ^ v172;
  v174 = (v173 - 727099216 - 2 * (v173 & 0x54A958BF ^ v172 & 0xF)) ^ LODWORD(STACK[0x420]);
  v175 = (v174 + 909950212 - ((2 * v174) & 0x6C797A08)) ^ LODWORD(STACK[0x550]);
  v176 = (v175 - 1397008081 - ((2 * v175) & 0x5976B25E)) ^ LODWORD(STACK[0x548]);
  v177 = (v176 + 854555886 - ((2 * v176) & 0x65DEF9DC)) ^ a57;
  v178 = (v177 + 584915324 - ((2 * v177) & 0x45BA32F8)) ^ LODWORD(STACK[0x458]);
  v179 = (v178 + 779366157 - ((2 * v178) & 0x5CE85E1A)) ^ LODWORD(STACK[0x540]);
  v180 = (v179 + 722078545 - ((2 * v179) & 0x561416A2)) ^ a56;
  v181 = (v180 + 288568464 - ((2 * v180) & 0x22666920)) ^ LODWORD(STACK[0x54C]);
  v182 = (v181 + 1180650880 - ((2 * v181) & 0x8CBE9B00)) ^ LODWORD(STACK[0x538]);
  v183 = (v182 + 196856248 - ((2 * v182) & 0x17779370)) ^ LODWORD(STACK[0x360]);
  v184 = (v183 + 235949366 - ((2 * v183) & 0x1C209A6C)) ^ LODWORD(STACK[0x35C]);
  v185 = (v184 + 472840051 - ((2 * v184) & 0x385DEEE6)) ^ LODWORD(STACK[0x454]);
  v186 = (v185 - ((2 * v185) & 0x2A7D1ACA) - 1791062683) ^ v170;
  LODWORD(STACK[0x680]) = ((v186 ^ 0x9AD38143) - 2 * ((v186 ^ 0x9AD38143) & 0x540E36FF ^ v186 & 4) - 737265925) ^ v171;
  v187 = (LODWORD(STACK[0x494]) ^ 0x1FAEEFBu) >> ((a58 & 0xE ^ 4) + (a58 & 0xE ^ 0xA));
  v188 = v187 + 14047659 - ((2 * v187) & 0x1ACB356);
  v189 = HIBYTE(LODWORD(STACK[0x498])) ^ (LODWORD(STACK[0x498]) >> 17) ^ 0xFC;
  v190 = (v188 >> 27) ^ (v188 >> 30);
  v191 = v188 ^ (v189 + 14047659 - ((2 * v189) & 0xB356));
  v192 = (v191 - ((2 * v191) & 0xA720A96C) - 745515850) ^ a52 ^ a53;
  v193 = (v192 - 1776493471 - ((2 * v192) & 0x2C39B8C2)) ^ a62;
  v194 = (v193 - 56152455 - ((2 * v193) & 0xF94E5CF2)) ^ a61;
  v195 = (v194 + 2110944150 - ((2 * v194) & 0xFBA4E72C)) ^ LODWORD(STACK[0x554]);
  v196 = (v195 + 690580860 - ((2 * v195) & 0x5252DAF8)) ^ LODWORD(STACK[0x46C]);
  v197 = (v196 - 56336821 - ((2 * v196) & 0xF948BC96)) ^ a60;
  v198 = (v197 - 1025642168 - ((2 * v197) & 0x85BBE290)) ^ a59;
  v199 = (v198 - 2035952272 - ((2 * v198) & 0xD4BAAE0)) ^ LODWORD(STACK[0x468]);
  v200 = (v199 + 1605244902 - ((2 * v199) & 0xBF5C2FCC)) ^ LODWORD(STACK[0x484]);
  v201 = (LODWORD(STACK[0x494]) >> 9) ^ 0xAF41CFE6;
  LODWORD(STACK[0x5F0]) = v201;
  v202 = (v200 - 1354681711 - ((2 * v200) & 0x5E826522)) ^ v201;
  v203 = (v202 + 1614216661 - ((2 * v202) & 0xC06DFBAA)) ^ a64;
  v204 = (v203 - 1010373484 - ((2 * v203) & 0x878DD928)) ^ a63;
  v205 = v204 + 1375525987 - ((2 * v204) & 0xA3F9B8C6);
  v206 = STACK[0x588];
  v207 = (((LODWORD(STACK[0x588]) >> 20) ^ 0x1FAEECBE ^ (LODWORD(STACK[0x588]) >> 1))
        + 801737749
        - ((2 * ((LODWORD(STACK[0x588]) >> 20) ^ 0x1FAEECBE ^ (LODWORD(STACK[0x588]) >> 1))) & 0x5F93182A)) ^ LODWORD(STACK[0x4A4]);
  v208 = (v207 - 1789946124 - ((2 * v207) & 0x2A9F2DE8)) ^ LODWORD(STACK[0x4A8]);
  v209 = (v208 + 70823846 - ((2 * v208) & 0x8715F4C)) ^ a90;
  v210 = (v209 + 2141979942 - ((2 * v209) & 0xFF580A4C)) ^ LODWORD(STACK[0x4B4]);
  v211 = (v210 + 487024392 - ((2 * v210) & 0x3A0ECE10)) ^ LODWORD(STACK[0x4AC]);
  v212 = (v211 - 1296071753 - ((2 * v211) & 0x657F076E)) ^ LODWORD(STACK[0x4A0]);
  v213 = (v212 - 586602734 - ((2 * v212) & 0xBA124E24)) ^ a88;
  v214 = (v213 + 1362328270 - ((2 * v213) & 0xA266F59C)) ^ a87;
  v215 = (v214 - 615775543 - ((2 * v214) & 0xB6980592)) ^ LODWORD(STACK[0x49C]);
  v216 = (v215 + 391518138 - ((2 * v215) & 0x2EAC2F74)) ^ a89;
  v217 = (v216 - 1264433231 - ((2 * v216) & 0x69448F62)) ^ a85;
  v218 = a86 ^ LODWORD(STACK[0x4B0]) ^ (v217 + 519289134 - ((2 * v217) & 0x3DE7725C));
  v219 = (LODWORD(STACK[0x250]) ^ (LODWORD(STACK[0x294]) >> 26) ^ 0x37)
       + 1415752520
       - ((LODWORD(STACK[0x294]) >> 25) & 0x10);
  v220 = ((v219 ^ LODWORD(STACK[0x290]))
        + 1460331657
        - 2 * ((v219 ^ LODWORD(STACK[0x290])) & 0x570AE49F ^ v219 & 0x10)
        + 6) ^ LODWORD(STACK[0x270]);
  v221 = (v220 + 1367499428 - ((2 * v220) & 0x2304C548)) ^ LODWORD(STACK[0x264]);
  v222 = (v221 + 1195442869 - ((2 * v221) & 0xE82056A)) ^ LODWORD(STACK[0x268]);
  v223 = (v222 + 139822481 - ((2 * v222) & 0x10AB0B22)) ^ LODWORD(STACK[0x260]);
  v224 = (v223 + 2085346167 - ((2 * v223) & 0x7897B6EE)) ^ LODWORD(STACK[0x274]);
  v225 = (v224 - 287512035 - ((2 * v224) & 0x5DB9D43A)) ^ LODWORD(STACK[0x25C]);
  v226 = (v225 + 502366661 - ((2 * v225) & 0x3BE3038A)) ^ LODWORD(STACK[0x26C]);
  v227 = (v226 + 1492486461 - ((2 * v226) & 0x31EB127A)) ^ LODWORD(STACK[0x258]);
  v228 = (v227 + 1405915840 - ((2 * v227) & 0x27992580)) ^ LODWORD(STACK[0x3FC]);
  v229 = (v228 + 380299746 - ((2 * v228) & 0x2D55D3C4)) ^ LODWORD(STACK[0x24C]);
  v230 = v108 ^ (v229 - 661963033 - ((2 * v229) & 0xB1167DCE));
  HIDWORD(v231) = v230 ^ 0x17599EF;
  LODWORD(v231) = v230 ^ 0x2000000;
  v232 = (v231 >> 25) ^ v106;
  HIDWORD(v231) = v232 ^ 0x14;
  LODWORD(v231) = v232 ^ 0x57725B00;
  v233 = (v231 >> 7) - 1731469710 - ((2 * (v231 >> 7)) & 0x3197BCE4);
  v234 = v233 ^ (((LODWORD(STACK[0x294]) >> 3) ^ 0x1BACCF7B)
               - 1731469710
               - ((2 * ((LODWORD(STACK[0x294]) >> 3) ^ 0x1BACCF7B)) & 0x3197BCE4));
  v235 = (2 * LODWORD(STACK[0x294])) ^ (LODWORD(STACK[0x294]) << 6) ^ (LODWORD(STACK[0x294]) << 29) ^ (4 * v234) ^ (v234 << 11) ^ (32 * v234) ^ 0x9DB835F4;
  v236 = (v235 - 580486180 - ((2 * v235) & 0xBACCF7BA)) ^ LODWORD(STACK[0x294]);
  v237 = (v236 + 946627549 - ((2 * v236) & 0x70D8C7BA)) ^ LODWORD(STACK[0x288]);
  v238 = (v237 + 1786843705 - ((2 * v237) & 0xD5022472)) ^ LODWORD(STACK[0x284]);
  v239 = (v238 - 139831553 - ((2 * v238) & 0xEF54ADFE)) ^ LODWORD(STACK[0x404]);
  v240 = (v239 + 208844009 - ((2 * v239) & 0x18E569D2)) ^ LODWORD(STACK[0x418]);
  v241 = (v240 - 1700272285 - ((2 * v240) & 0x354FCEC6)) ^ LODWORD(STACK[0x400]);
  v242 = (v241 + 250928070 - ((2 * v241) & 0x1DE9B78C)) ^ LODWORD(STACK[0x27C]);
  v243 = (v242 - 1936604014 - ((2 * v242) & 0x19238924)) ^ LODWORD(STACK[0x41C]);
  v244 = (v243 + 940263050 - ((2 * v243) & 0x70168D14)) ^ LODWORD(STACK[0x28C]);
  v245 = (v244 - 669342327 - ((2 * v244) & 0xB0354B12)) ^ LODWORD(STACK[0x408]);
  v246 = (v245 + 1726702224 - ((2 * v245) & 0xCDD6C520)) ^ LODWORD(STACK[0x410]);
  v247 = (v246 + 867027146 - ((2 * v246) & 0x675B9194)) ^ LODWORD(STACK[0x40C]);
  v248 = (v247 + 1771048452 - ((2 * v247) & 0xD3201C08)) ^ LODWORD(STACK[0x414]);
  v249 = (v248 - 1091319421 - ((2 * v248) & 0x7DE79306)) ^ LODWORD(STACK[0x278]);
  v250 = (v249 + 1427293115 - ((2 * v249) & 0xAA258776)) ^ LODWORD(STACK[0x280]);
  v251 = (v234 >> 27) ^ ((v233 + 0x80000000) >> 30) ^ (v234 >> 21);
  v252 = v234 ^ 0x3CFA7D9D ^ (v250 - ((2 * v250) & 0x3305FD2C) + 428015254);
  v253 = (16 * LODWORD(STACK[0x240])) ^ (32 * LODWORD(STACK[0x240])) ^ 0x510CE230;
  v254 = ((v253 ^ (LODWORD(STACK[0x240]) << 30)) + 1032937943 - ((2 * v253) & 0x7B22C3A0)) ^ LODWORD(STACK[0x3C4]);
  v255 = (v254 + 1056165185 - ((2 * v254) & 0x7DE79A82)) ^ LODWORD(STACK[0x3C8]);
  v256 = (v255 - 481564468 - ((2 * v255) & 0xC697D198)) ^ LODWORD(STACK[0x3F0]);
  v257 = (v256 + 1291924053 - ((2 * v256) & 0x9A0264AA)) ^ LODWORD(STACK[0x52C]);
  v258 = (v257 - 693109138 - ((2 * v257) & 0xAD5FFCDC)) ^ LODWORD(STACK[0x23C]);
  v259 = (v258 - 1928084834 - ((2 * v258) & 0x1A27853C)) ^ LODWORD(STACK[0x3C0]);
  v260 = (v259 + 1774190802 - ((2 * v259) & 0xD38001A4)) ^ LODWORD(STACK[0x224]);
  v261 = (v260 - 132101672 - ((2 * v260) & 0xF04093B0)) ^ LODWORD(STACK[0x220]);
  v262 = (v261 - 757394584 - ((2 * v261) & 0xA5B626D0)) ^ LODWORD(STACK[0x3E8]);
  v263 = (v262 + 34927762 - ((2 * v262) & 0x429E924)) ^ LODWORD(STACK[0x3B8]);
  v264 = (v263 - 336919482 - ((2 * v263) & 0xD7D6088C)) ^ LODWORD(STACK[0x3E0]);
  v265 = (v264 - 610968572 - ((2 * v264) & 0xB72AB808)) ^ LODWORD(STACK[0x3BC]);
  v266 = (((LODWORD(STACK[0x240]) >> 2) ^ 0x303C1178)
        + 1555190241
        - ((2 * ((LODWORD(STACK[0x240]) >> 2) ^ 0x303C1178)) & 0x3964A3C2)) ^ LODWORD(STACK[0x234]);
  v267 = (v266 + 1315181536 - ((2 * v266) & 0x9CC827C0)) ^ LODWORD(STACK[0x230]);
  v268 = (v267 + 213382402 - ((2 * v267) & 0x196FEA04)) ^ LODWORD(STACK[0x228]);
  v269 = (LODWORD(STACK[0x254]) >> 27) ^ (LODWORD(STACK[0x254]) >> 28) ^ LODWORD(STACK[0x3CC]) ^ 0xEA3DB6A2 ^ (v268 - ((2 * v268) & 0x7B330E) + 4036999);
  v270 = (v269 + 729487293 - ((2 * v269) & 0x56F62F7A)) ^ LODWORD(STACK[0x3DC]);
  v271 = (v270 + 1705774193 - ((2 * v270) & 0xCB5818E2)) ^ LODWORD(STACK[0x21C]);
  v272 = (v271 - 309276992 - ((2 * v271) & 0xDB219D80)) ^ LODWORD(STACK[0x218]);
  v273 = (v272 - 1126326512 - ((2 * v272) & 0x79BB3E20)) ^ LODWORD(STACK[0x214]);
  v274 = (v273 + 350766785 - ((2 * v273) & 0x29D08D82)) ^ LODWORD(STACK[0x238]);
  v275 = (v274 - ((2 * v274) & 0xD003F4E4) + 1744960114) ^ LODWORD(STACK[0x210]);
  v276 = ((v275 ^ 0x68618250) + 1049510781 - 2 * ((v275 ^ 0x68618250) & 0x3E8E437F ^ v275 & 2)) ^ LODWORD(STACK[0x3D0]);
  v277 = v109 ^ (v276 - ((2 * v276) & 0xC9F2D170) + 1694066872);
  v278 = v251 ^ (32 * v251) ^ (4 * v251) ^ (v251 << 11) ^ LODWORD(STACK[0x530]) ^ (v265
                                                                                 + 680544831
                                                                                 - ((2 * v265) & 0x5120947E)) ^ (v252 - ((2 * v252) & 0xEB6A8D90) + 1974814408);
  v279 = (v277 >> 27) ^ (v277 >> 21);
  v280 = v278 ^ (32 * v277) ^ (v277 << 11) ^ (32 * v279) ^ (v279 << 11) ^ (4 * (v279 ^ v277)) ^ 0x9F2B8617;
  v281 = v277 ^ 0x15D0FE09 ^ (v280 - ((2 * v280) & 0xF6422180) + 2065764544);
  v282 = ((a79 << 27) ^ 0x88000000) + (a73 & 0x80000000) - 968801000;
  LODWORD(STACK[0x5D8]) = v282;
  v283 = (a79 << 8) ^ (a79 << 15) ^ a75 ^ a72 ^ 0x67E59100;
  v284 = (v283 + 407024021 - ((2 * v283) & 0x30856200)) ^ LODWORD(STACK[0x37C]);
  v285 = (v284 - 861286134 - ((2 * v284) & 0x9953A214)) ^ a55 ^ a54;
  v286 = (v285 + 823839620 - ((2 * v285) & 0x62359708)) ^ a78;
  v287 = (a67 ^ 0xA7E08800) - 521294887 - ((2 * (a67 ^ 0xA7E08800)) & 0xC1DB5000);
  LODWORD(STACK[0x5DC]) = v287;
  v288 = (v286 - 521294887 - ((2 * v286) & 0xC1DB57B2)) ^ v287;
  v289 = (v288 + 527386118 - ((2 * v288) & 0x3EDE8C0C)) ^ LODWORD(STACK[0x48C]);
  v290 = (v289 + 1656312981 - ((2 * v289) & 0xC572A92A)) ^ LODWORD(STACK[0x47C]);
  v291 = (v290 - 1174551912 - ((2 * v290) & 0x73FB8530)) ^ a76;
  v292 = (v291 - 355958289 - ((2 * v291) & 0xD59103DE)) ^ LODWORD(STACK[0x478]);
  v293 = a71 ^ (a79 >> 5);
  LODWORD(STACK[0x5D0]) = v293;
  v294 = ((a79 << 23) ^ 0x8800000) + 670026672 - ((2 * ((a79 << 23) ^ 0x8800000)) & 0x4F000000);
  LODWORD(STACK[0x5E0]) = v294;
  v295 = (v292 - 1848395724 - ((2 * v292) & 0x23A77068)) ^ LODWORD(STACK[0x55C]);
  v296 = (v295 + 670026672 - ((2 * v295) & 0x4FDF9760)) ^ v294;
  v297 = (v296 - 760466648 - ((2 * v296) & 0xA5586650)) ^ a77;
  v298 = (v297 + 1390218474 - ((2 * v297) & 0xA5BA19D4)) ^ LODWORD(STACK[0x480]);
  v299 = (v279 | (LODWORD(STACK[0x3B4]) << 31)) ^ 0xDFBBF14C ^ (v206 << 12) ^ (v281
                                                                             - ((2 * v281) & 0x460A7D6C)
                                                                             + 587546294);
  v300 = LODWORD(STACK[0x4C4]) >> 31;
  LODWORD(STACK[0x5D4]) = v300;
  v301 = v300 ^ (v218 >> 21) ^ (v218 >> 27);
  v302 = v190 ^ ((v293 ^ v205) >> 21);
  LODWORD(STACK[0x688]) = v302;
  v303 = v299 ^ (32 * v218) ^ (4 * v218) ^ (v218 << 11) ^ (4 * v301) ^ (32 * v301) ^ (v301 << 11) ^ v282 ^ (v298 - 968801000 - ((2 * v298) & 0x8C828A30)) ^ (4 * (v293 ^ v205)) ^ (32 * (v293 ^ v205)) ^ ((v293 ^ v205) << 11) ^ (4 * v302) ^ (32 * v302) ^ (v302 << 11);
  v304 = (v303 + 1952435935 - ((2 * v303) & 0xE8BF9DBE)) ^ LODWORD(STACK[0x56C]);
  v305 = (v304 + 479103276 - ((2 * v304) & 0x391D1258)) ^ LODWORD(STACK[0x58C]);
  v306 = (v305 - 1803175815 - ((2 * v305) & 0x290B70F2)) ^ LODWORD(STACK[0x424]);
  v307 = (v306 + 1403646017 - ((2 * v306) & 0xA753E082)) ^ LODWORD(STACK[0x584]);
  v308 = (v307 + 1190533702 - ((2 * v307) & 0x8DEC348C)) ^ LODWORD(STACK[0x3A8]);
  v309 = (v308 - 361490979 - ((2 * v308) & 0xD4E82BBA)) ^ LODWORD(STACK[0x590]);
  v310 = (v309 + 391390397 - ((2 * v309) & 0x2EA8497A)) ^ LODWORD(STACK[0x4BC]);
  v311 = (v310 + 168170031 - ((2 * v310) & 0x140C245E)) ^ LODWORD(STACK[0x574]);
  v312 = (v311 - 918995527 - ((2 * v311) & 0x92727B72)) ^ LODWORD(STACK[0x3AC]);
  v313 = (v312 + 2068243628 - ((2 * v312) & 0xF68DC958)) ^ LODWORD(STACK[0x208]);
  v314 = (v313 + 2073991959 - ((2 * v313) & 0xF73D362E)) ^ LODWORD(STACK[0x578]);
  v315 = (v314 + 68343603 - ((2 * v314) & 0x825AE66)) ^ LODWORD(STACK[0x3B0]);
  v316 = (v315 + 1461832953 - ((2 * v315) & 0xAE4399F2)) ^ LODWORD(STACK[0x568]);
  v317 = (v316 + 834751015 - ((2 * v316) & 0x6382944E)) ^ LODWORD(STACK[0x570]);
  v318 = v218 ^ 0xEDEF251D ^ (v317 - ((2 * v317) & 0xDC35F1E8) - 300222220);
  v319 = v293 ^ v205 ^ v301 ^ (v318 - ((2 * v318) & 0xB1DC2890) + 1491997768);
  LODWORD(STACK[0x5AC]) = v319 >> 29;
  LODWORD(STACK[0x524]) = v319;
  v320 = (v319 >> 30) ^ 0xAF3BD9F1;
  LODWORD(STACK[0x5A0]) = v320;
  LODWORD(STACK[0x5B4]) = v319 >> 25;
  v321 = v320 ^ (v319 >> 25) ^ (((v319 >> 29) ^ HIBYTE(v319) ^ 0xB)
                              - 1355032079
                              - ((2 * ((v319 >> 29) ^ HIBYTE(v319) ^ 0xB)) & 0xFFFFFFE3));
  LODWORD(STACK[0x5BC]) = v321;
  v322 = (v321 & 0x10 ^ 0xA0FFAC3F) + 2 * (v321 & 0x10);
  LODWORD(STACK[0x5B0]) = v319 >> 22;
  v323 = (v319 >> 22) ^ 0x2E;
  LODWORD(STACK[0x5B8]) = v323;
  v324 = ((v322 + 961) & v323) == 0;
  v325 = v322 + 64510;
  v326 = 21628 - v322;
  if (v324)
    v327 = v325;
  else
    v327 = v326;
  LODWORD(STACK[0x5C0]) = v327;
  v328 = STACK[0x598];
  LODWORD(STACK[0x658]) = ((4 * LODWORD(STACK[0x598])) ^ 0xCCFDA2B0)
                        - 1806674821
                        - 2
                        * (((4 * LODWORD(STACK[0x598])) ^ 0xCCFDA2B0) & 0x1450547C ^ (4 * LODWORD(STACK[0x598])) & 4);
  LODWORD(STACK[0x650]) = ((8 * v328) ^ 0x99FB4560) + 1554625007 - ((2 * ((8 * v328) ^ 0x99FB4560)) & 0xB95363D0);
  LODWORD(STACK[0x6A8]) = ((v328 << 10) ^ 0xFDA2B000) - 842784390 - ((2 * ((v328 << 10) ^ 0xFDA2B000)) & 0x9B884000);
  LODWORD(STACK[0x660]) = ((v328 << 22) ^ 0x2B000000) - 873663130 - ((2 * ((v328 << 22) ^ 0x2B000000)) & 0x97800000);
  LODWORD(STACK[0x6A0]) = ((v328 << 7) ^ 0x9FB45600) + 2116873648 - ((2 * ((v328 << 7) ^ 0x9FB45600)) & 0xFC59DB00);
  LODWORD(STACK[0x6C8]) = ((v328 << 13) ^ 0xED158000) - 1380683053 - ((2 * ((v328 << 13) ^ 0xED158000)) & 0x5B68C000);
  LODWORD(STACK[0x608]) = ((v328 << 16) ^ 0x68AC0000) - 482066750 - ((2 * ((v328 << 16) ^ 0x68AC0000)) & 0xC6880000);
  LODWORD(STACK[0x600]) = ((v328 << 20) ^ 0x8AC00000) + 485791539 - ((2 * ((v328 << 20) ^ 0x8AC00000)) & 0x39E00000);
  LODWORD(STACK[0x670]) = ((v328 << 14) ^ 0xDA2B0000) + 1256806602 - ((2 * ((v328 << 14) ^ 0xDA2B0000)) & 0x95D28000);
  LODWORD(STACK[0x67C]) = ((v328 << 28) ^ 0xC0000000) + 1480201960 - ((2 * ((v328 << 28) ^ 0xC0000000)) & 0xA0000000);
  LODWORD(STACK[0x648]) = ((v328 << 24) ^ 0xAC000000) + 543620853 - ((2 * ((v328 << 24) ^ 0xAC000000)) & 0x40000000);
  LODWORD(STACK[0x694]) = ((v328 << 25) ^ 0x58000000) + 1425588524 - ((2 * ((v328 << 25) ^ 0x58000000)) & 0xA8000000);
  LODWORD(STACK[0x6B0]) = ((v328 << 26) ^ 0xB0000000) - 2032006482 - ((v328 << 27) & 0x8000000);
  LODWORD(STACK[0x698]) = ((v328 << 11) ^ 0xFB456000) - 720297807 - ((2 * ((v328 << 11) ^ 0xFB456000)) & 0xAA224000);
  v329 = *(unsigned __int8 *)(STACK[0x6B8] + 1338);
  LODWORD(STACK[0x3DC]) = v329;
  v330 = ((v328 << 18) ^ 0xA2B00000) - 2004207424 - ((2 * ((v328 << 18) ^ 0xA2B00000)) & 0x11111111);
  LODWORD(STACK[0x620]) = v330;
  LODWORD(STACK[0x6D0]) = ((v328 << 21) ^ 0x15800000) + 1697522742 - ((2 * ((v328 << 21) ^ 0x15800000)) & 0xCA400000);
  LODWORD(STACK[0x668]) = ((v328 << 19) ^ 0x45600000) + 1761709710 - ((2 * ((v328 << 19) ^ 0x45600000)) & 0xD2000000);
  v331 = ((v328 << 23) ^ 0x56000000) + 430119940 - ((2 * ((v328 << 23) ^ 0x56000000)) & 0x33333333);
  LODWORD(STACK[0x520]) = v331;
  v332 = ((v328 << 27) ^ 0x60000000) - 1601708455 - ((2 * ((v328 << 27) ^ 0x60000000)) & 0x40000000);
  LODWORD(STACK[0x59C]) = v332;
  v333 = v328 ^ 0x733F68AC;
  STACK[0x3D0] = v333;
  v334 = (unsigned __int16)(v333 >> (v329 & 0x15 ^ 0x14 | v329 & 0x15 ^ 1));
  LODWORD(v333) = STACK[0x558];
  v335 = LODWORD(STACK[0x558]) >> 11;
  v336 = (LODWORD(STACK[0x558]) >> 28) ^ (LODWORD(STACK[0x558]) >> 27) ^ v335 ^ (v328 >> 2) ^ (v328 >> 10) ^ 0x1CDD7215 ^ v334;
  v337 = (LODWORD(STACK[0x558]) >> 29) ^ 0x888C1983;
  LODWORD(STACK[0x518]) = v337;
  v338 = (v333 >> 30) ^ 0xAF3ED12;
  LODWORD(STACK[0x41C]) = v338;
  v339 = v337 ^ v338;
  v340 = (v336 - 2105543533 - ((2 * v336) & 0x4FFE926)) ^ v337 ^ v338;
  v341 = (v333 >> 19) ^ 0x64F147B3;
  v342 = (v340 + 1693534676 - ((2 * v340) & 0xC9E293A8)) ^ v341;
  v343 = v333 >> 18;
  v344 = (v333 >> 18) ^ 0xE274D0E1;
  LODWORD(STACK[0x514]) = v344;
  v345 = (v342 - 495662034 - ((2 * v342) & 0xC4E9985C)) ^ v344;
  v346 = (v333 >> 15) ^ 0x2FCAF847;
  LODWORD(STACK[0x51C]) = v346;
  v347 = (v345 + 801775161 - ((2 * v345) & 0x5F943C72)) ^ v346;
  v348 = v333 >> 14;
  v349 = (v333 >> 14) ^ 0x1DD25CF9;
  v350 = (v347 + 500404228 - ((2 * v347) & 0x3BA72008)) ^ v349;
  v351 = (v333 >> 13) ^ 0x8868C333;
  v352 = v333;
  v353 = (v350 - 2006230328 - ((2 * v350) & 0x10D6B590)) ^ v351;
  v354 = (v328 >> 6) ^ 0x4095E067;
  v355 = (v353 + 1096359365 - ((2 * v353) & 0x82B23B8A)) ^ v354;
  v356 = (v328 >> 9) ^ 0xE24923E1;
  v357 = (v355 - 495928235 - ((2 * v355) & 0xC4E178AA)) ^ v356;
  LODWORD(STACK[0x644]) = v354 ^ (v328 >> 4);
  LODWORD(v333) = (v328 >> 5) ^ (v328 >> 4) ^ (v357 - ((2 * v357) & 0x13AB5338) + 164997532);
  LODWORD(STACK[0x530]) = v333;
  LODWORD(v333) = v333 ^ 0xA4C52D9;
  LODWORD(STACK[0x52C]) = v333;
  LODWORD(v333) = v333 >> 21;
  LODWORD(STACK[0x528]) = v333;
  LODWORD(STACK[0x40C]) = HIWORD(v352);
  v358 = HIWORD(v352) ^ (v352 >> 20) ^ v343 ^ (v328 >> 1) ^ 0x399FDC95 ^ (unsigned __int16)((v328 ^ 0x733F68AC) >> ((v333 & 0x16 ^ 6) + (v333 & 0x16 ^ 0x10)));
  v359 = (v352 >> 21) ^ 0xEB91D701;
  v360 = (v358 - 342764392 - ((2 * v358) & 0xD723A930)) ^ v359;
  v361 = (v352 >> 25) ^ 0x3B5715BC;
  v362 = (v360 + 995562885 - ((2 * v360) & 0x76AE2B0A)) ^ v361;
  LODWORD(STACK[0x408]) = v361;
  LODWORD(v333) = v341;
  LODWORD(STACK[0x414]) = v341;
  v363 = (v362 + 1693534676 - ((2 * v362) & 0xC9E293A8)) ^ v341;
  v364 = (v363 + 500404228 - ((2 * v363) & 0x3BA72008)) ^ v349;
  v365 = (v352 >> 12) ^ 0xD800A258;
  v366 = (v364 - 670592594 - ((2 * v364) & 0xB00F235C)) ^ v365;
  LODWORD(STACK[0x404]) = v365;
  v367 = (v366 - 2006230328 - ((2 * v366) & 0x10D6B590)) ^ v351;
  v368 = (v367 + 469753753 - ((2 * v367) & 0x37FFBF32)) ^ v335 ^ 0x1BF1B874;
  v369 = (v328 >> 7) ^ 0xA09CB7E5;
  LODWORD(STACK[0x400]) = v369;
  v370 = (v368 - 1602565836 - ((2 * v368) & 0x40F59268)) ^ v369;
  LODWORD(STACK[0x61C]) = v370 + 1096359365 - ((2 * v370) & 0x82B23B8A);
  v371 = (v348 ^ HIWORD(v352) ^ 0x1BFC2)
       - 670592594
       - 2 * ((v348 ^ HIWORD(v352) ^ 0x1BFC2) & 0x391BF ^ (v348 ^ HIWORD(v352)) & 0x11);
  v372 = HIBYTE(v352) ^ (v352 >> 17);
  v352 >>= 22;
  LODWORD(STACK[0x3F0]) = v352;
  v373 = ((v372 ^ v352 ^ v365 ^ v371 ^ 0x3820)
        + 995562885
        - 2 * ((v372 ^ v352 ^ v365 ^ v371 ^ 0x3820) & 0x3B57159F ^ (v372 ^ v352 ^ v365 ^ v371) & 0x1A)) ^ v361;
  v374 = (v373 - 2105543533 - ((2 * v373) & 0x4FFE926)) ^ v339;
  v375 = (v374 - 342764392 - ((2 * v374) & 0xD723A930)) ^ v359;
  v376 = (v375 + 1693534676 - ((2 * v375) & 0xC9E293A8)) ^ v333;
  v377 = (v376 + 469753753 - ((2 * v376) & 0x37FFBF32)) ^ v335 ^ 0x1BF1B874;
  LODWORD(v333) = (v328 >> 10) ^ 0x996DF2CF;
  LODWORD(STACK[0x3E8]) = v333;
  v378 = (v377 - 1720632043 - ((2 * v377) & 0x32E27A2A)) ^ v333;
  v379 = (v378 - 495928235 - ((2 * v378) & 0xC4E178AA)) ^ v356;
  LODWORD(v333) = (v328 >> 8) ^ 0xC868EFDE;
  LODWORD(STACK[0x3E0]) = v333;
  v380 = v333 ^ (v328 >> 7) ^ (v379 - 937701194 - ((2 * v379) & 0x9037A16C));
  v381 = (v328 >> 5) ^ (v328 >> 6) ^ v380;
  v382 = ((unint64_t)(v381 ^ 0x2B37836) >> (((v380 & 0x7F ^ 0x2E)
                                                                                    + (v380 & 0x7F ^ 0x51)) & ((v380 & 0x9B ^ 0xA) + (v380 & 0x9B ^ 0x91)))) ^ (v381 >> 21);
  v383 = LODWORD(STACK[0x680]) ^ (v328 << 8) ^ (v328 << 15) ^ ((v332 ^ 0xF47F1F75 ^ LODWORD(STACK[0x694]))
                                                             - ((2 * (v332 ^ 0xF47F1F75 ^ LODWORD(STACK[0x694]))) & 0x5D2758A)
                                                             + 48839365) ^ (4 * v381) ^ (32 * v381) ^ (v381 << 11) ^ (4 * v382) ^ (32 * v382) ^ (v382 << 11) ^ 0x4797D727;
  v384 = (v383 + 2116873648 - ((2 * v383) & 0xFC59DB60)) ^ LODWORD(STACK[0x6A0]);
  v385 = (v384 - 1806674821 - ((2 * v384) & 0x28A0A8F6)) ^ LODWORD(STACK[0x658]);
  v386 = (v385 + 1554625007 - ((2 * v385) & 0xB95363DE)) ^ LODWORD(STACK[0x650]);
  v387 = (v386 - 842784390 - ((2 * v386) & 0x9B8842F4)) ^ LODWORD(STACK[0x6A8]);
  v388 = (v387 - 720297807 - ((2 * v387) & 0xAA224162)) ^ LODWORD(STACK[0x698]);
  v389 = (v388 - 1380683053 - ((2 * v388) & 0x5B68E5A6)) ^ LODWORD(STACK[0x6C8]);
  v390 = STACK[0x608];
  v391 = (v389 - 482066750 - ((2 * v389) & 0xC6887D84)) ^ LODWORD(STACK[0x608]);
  v392 = (v391 - 2004207424 - ((2 * v391) & 0x11147180)) ^ v330;
  v393 = STACK[0x600];
  v394 = (v392 + 485791539 - ((2 * v392) & 0x39E92E66)) ^ LODWORD(STACK[0x600]);
  v395 = (v394 + 1697522742 - ((2 * v394) & 0xCA5C486C)) ^ LODWORD(STACK[0x6D0]);
  v396 = (v395 - 873663130 - ((2 * v395) & 0x97D9EACC)) ^ LODWORD(STACK[0x660]);
  v397 = (v396 + 430119940 - ((2 * v396) & 0x33463808)) ^ v331;
  v398 = (v397 + 543620853 - ((2 * v397) & 0x40CDFDEA)) ^ LODWORD(STACK[0x648]);
  LODWORD(v333) = v381 ^ LODWORD(STACK[0x6B0]) ^ (v398 - 2032006482 - ((2 * v398) & 0xDC4155C));
  LODWORD(STACK[0x628]) = v333;
  v399 = v333 ^ v382;
  v400 = v333 ^ v382 ^ 0xCA46DF7F;
  v401 = ((4 * v400) ^ 0x23D69D70) + 226072756 - 2 * (((4 * v400) ^ 0x23D69D70) & 0xD7998BC ^ (4 * v400) & 8);
  LODWORD(STACK[0x418]) = v401;
  v402 = ((8 * v400) ^ 0x47AD3AE0) + 790661645 - ((2 * ((8 * v400) ^ 0x47AD3AE0)) & 0x5E411410);
  LODWORD(STACK[0x410]) = v402;
  v403 = ((v400 << 11) ^ 0xAD3AE000) - 157871880 - ((2 * ((v400 << 11) ^ 0xAD3AE000)) & 0xED2E2000);
  LODWORD(STACK[0x640]) = v403;
  v404 = ((v400 << 18) ^ 0x9D700000) + 521023488 - ((2 * ((v400 << 18) ^ 0x9D700000)) & 0x3E180000);
  LODWORD(STACK[0x638]) = v404;
  v405 = ((v400 << 21) ^ 0xEB800000) - 959298149 - ((2 * ((v400 << 21) ^ 0xEB800000)) & 0x8D800000);
  LODWORD(STACK[0x634]) = v405;
  v406 = ((v400 << 22) ^ 0xD7000000) + 1793638454 - ((2 * ((v400 << 22) ^ 0xD7000000)) & 0xD5800000);
  LODWORD(STACK[0x3FC]) = v406;
  v407 = (a38 ^ (v400 << 23)) + 1177605952 - ((2 * (a38 ^ (v400 << 23))) & 0x8C000000);
  LODWORD(STACK[0x3F8]) = v407;
  v408 = ((v400 << 26) ^ 0x70000000) + 1733877356 - ((2 * ((v400 << 26) ^ 0x70000000)) & 0xC8000000);
  LODWORD(STACK[0x630]) = v408;
  v409 = ((v400 << 7) ^ 0x7AD3AE00) + 1012149900 - ((2 * ((v400 << 7) ^ 0x7AD3AE00)) & 0x78A85D00);
  LODWORD(STACK[0x3C4]) = v409;
  v410 = ((v400 << 10) ^ 0xD69D7000) + 1715865532 - ((2 * ((v400 << 10) ^ 0xD69D7000)) & 0xCC8C0800);
  LODWORD(STACK[0x3C0]) = v410;
  v411 = ((v400 << 13) ^ 0xB4EB8000) - 498052695 - ((2 * ((v400 << 13) ^ 0xB4EB8000)) & 0xC4A08000);
  LODWORD(STACK[0x3BC]) = v411;
  v412 = (a36 ^ (v400 << 16)) + 1256799278 - ((2 * (a36 ^ (v400 << 16))) & 0x95D20000);
  LODWORD(STACK[0x3B8]) = v412;
  v413 = ((v400 << 20) ^ 0x75C00000) + 888420411 - ((2 * ((v400 << 20) ^ 0x75C00000)) & 0x69E00000);
  LODWORD(STACK[0x3B4]) = v413;
  v414 = ((v400 << 25) ^ 0xB8000000) + 1957331248 - ((2 * ((v400 << 25) ^ 0xB8000000)) & 0xE8000000);
  LODWORD(STACK[0x3B0]) = v414;
  v415 = ((v333 ^ v382) << 24) ^ (v400 << 15) ^ (v400 << 8) ^ 0x5095C00;
  v416 = (v415 + 790661645 - ((2 * v415) & 0x5E411400)) ^ v402;
  v417 = (v416 + 226072756 - ((2 * v416) & 0x1AF33168)) ^ v401;
  v418 = (v417 + 1012149900 - ((2 * v417) & 0x78A85D18)) ^ v409;
  v419 = (v418 + 1715865532 - ((2 * v418) & 0xCC8C0F78)) ^ v410;
  v420 = (v419 - 498052695 - ((2 * v419) & 0xC4A0A352)) ^ v411;
  v421 = (v420 - 157871880 - ((2 * v420) & 0xED2E21F0)) ^ v403;
  v422 = (v421 + 1256799278 - ((2 * v421) & 0x95D2785C)) ^ v412;
  v423 = (v422 + 521023488 - ((2 * v422) & 0x3E1C6000)) ^ v404;
  v424 = (v423 + 888420411 - ((2 * v423) & 0x69E87076)) ^ v413;
  v425 = (v424 - 959298149 - ((2 * v424) & 0x8DA48B36)) ^ v405;
  v426 = (v425 + 1793638454 - ((2 * v425) & 0xD5D1806C)) ^ v406;
  v427 = STACK[0x628];
  v428 = HIBYTE(LODWORD(STACK[0x628])) ^ 0x2B223 ^ (LODWORD(STACK[0x628]) >> 17) ^ ((v333 ^ v382) >> 8);
  LODWORD(v333) = ((LODWORD(STACK[0x628]) >> 30) | 0x5ABCEC94) ^ (LODWORD(STACK[0x628]) >> 29);
  LODWORD(STACK[0x378]) = v333;
  v429 = (v428 + 1522330772 - ((2 * v428) & 0x179D928)) ^ v333;
  LODWORD(v333) = (v427 >> 25) ^ 0xFF0AAB71;
  LODWORD(STACK[0x39C]) = v333;
  v430 = (v429 - 16077968 - ((2 * v429) & 0x7E1556E0)) ^ v333;
  LODWORD(v333) = (v427 >> 21) ^ 0x76D6244A;
  LODWORD(STACK[0x398]) = v333;
  v431 = (v430 + 1993745503 - ((2 * v430) & 0xEDAC48BE)) ^ v333;
  LODWORD(v333) = (v427 >> 22) ^ 0xB944DCFA;
  LODWORD(STACK[0x388]) = v333;
  v432 = (v431 - 1186669328 - ((2 * v431) & 0x7289B9E0)) ^ v333;
  LODWORD(STACK[0x364]) = v427 >> 19;
  LODWORD(v333) = (v427 >> 19) ^ 0xEAA00139;
  LODWORD(STACK[0x394]) = v333;
  v433 = (v432 - 358612625 - ((2 * v432) & 0xD54002DE)) ^ v333;
  LODWORD(v333) = HIWORD(v427) ^ 0x3F31AFE4;
  LODWORD(STACK[0x390]) = v333;
  v434 = (v433 + 1060220247 - ((2 * v433) & 0x7E635AAE)) ^ v333;
  LODWORD(v333) = (v427 >> 14) ^ 0x9AF22542;
  LODWORD(STACK[0x38C]) = v333;
  v435 = (v434 - 1695404145 - ((2 * v434) & 0x35E45F1E)) ^ v333;
  LODWORD(v333) = (v427 >> 11) ^ 0xAC71CB49;
  LODWORD(STACK[0x380]) = v333;
  v436 = (v435 - 1401840346 - ((2 * v435) & 0x58E33A4C)) ^ v333;
  LODWORD(v333) = (v427 >> 12) ^ 0xDF3DAE3F;
  LODWORD(STACK[0x384]) = v333;
  v437 = (v436 - 549616376 - ((2 * v436) & 0xBE7B0A10)) ^ v333;
  LODWORD(v333) = (v399 >> 10) ^ 0x79E6B417;
  LODWORD(STACK[0x360]) = v333;
  v438 = (v437 + 2045122761 - ((2 * v437) & 0xF3CC3192)) ^ v333;
  v439 = (v426 + 1177605952 - ((2 * v426) & 0x8C61AE80)) ^ v407;
  LODWORD(v333) = (v399 >> 9) ^ 0xD6C249E4;
  LODWORD(STACK[0x35C]) = v333;
  LODWORD(STACK[0x3CC]) = v399;
  v440 = (v438 - 691859368 - ((2 * v438) & 0xAD8620B0)) ^ v333;
  LODWORD(v333) = (v399 >> 7) ^ 0x3F668E03;
  LODWORD(STACK[0x368]) = v333;
  v441 = (v440 + 1063512307 - ((2 * v440) & 0x7EC7D1E6)) ^ v333;
  v442 = (v439 + 1957331248 - ((2 * v439) & 0xE9550260)) ^ v414;
  v443 = v442 + 1733877356 - ((2 * v442) & 0xCEB1BCD8);
  v444 = v400;
  LODWORD(STACK[0x624]) = v400;
  v400 >>= 5;
  LODWORD(STACK[0x294]) = v400;
  LODWORD(v333) = (v399 >> 6) ^ 0xA1E1A24F;
  LODWORD(STACK[0x37C]) = v333;
  v445 = v400 ^ v333 ^ (v441 - 1578405969 - ((2 * v441) & 0x43D6DF5E));
  LODWORD(v333) = ((v444 << 27) ^ 0xE0000000) - 2056037254;
  LODWORD(STACK[0x3C8]) = v333;
  v446 = STACK[0x598];
  v447 = (LODWORD(STACK[0x598]) << 12) ^ (LODWORD(STACK[0x598]) << 31) ^ v333 ^ (4 * v445) ^ (32 * v445) ^ (v445 << 11) ^ (v445 >> 21) ^ (32 * (v445 >> 21)) ^ (v445 >> 21 << 11) ^ (((4 * (v445 >> 21)) ^ 0xC8) - ((2 * ((4 * (v445 >> 21)) ^ 0xC8)) & 0x1980) - 1756189503) ^ ((v443 ^ v408) - 2056037254 - ((2 * (v443 ^ v408)) & 0xAE6B8F4));
  v448 = LODWORD(STACK[0x644]) ^ LODWORD(STACK[0x61C]);
  LODWORD(v333) = LODWORD(STACK[0x558]) >> 31;
  LODWORD(STACK[0x278]) = v333;
  v449 = v333 ^ (v448 >> 21) ^ (v448 >> 27);
  v450 = v447 ^ (4 * v448) ^ (32 * v448) ^ (v448 << 11) ^ (4 * v449) ^ (32 * v449) ^ (v449 << 11) ^ 0xE85FADB7;
  v451 = (v450 + 1256806602 - ((2 * v450) & 0x95D2B194)) ^ LODWORD(STACK[0x670]);
  v452 = (v451 - 482066750 - ((2 * v451) & 0xC6887D84)) ^ v390;
  v453 = (v452 + 1761709710 - ((2 * v452) & 0xD2031D1C)) ^ LODWORD(STACK[0x668]);
  v454 = (v453 + 2116873648 - ((2 * v453) & 0xFC59DB60)) ^ LODWORD(STACK[0x6A0]);
  LODWORD(STACK[0x27C]) = v446 ^ 0x397E20BB;
  v455 = (v454 + 1245792279 - ((2 * v454) & 0x9482902E)) ^ v446 ^ 0x397E20BB;
  v456 = (v455 - 842784390 - ((2 * v455) & 0x9B8842F4)) ^ LODWORD(STACK[0x6A8]);
  v457 = (v456 - 720297807 - ((2 * v456) & 0xAA224162)) ^ LODWORD(STACK[0x698]);
  v458 = (v457 - 1380683053 - ((2 * v457) & 0x5B68E5A6)) ^ LODWORD(STACK[0x6C8]);
  v459 = (v458 - 2004207424 - ((2 * v458) & 0x11147180)) ^ LODWORD(STACK[0x620]);
  v460 = (v459 + 485791539 - ((2 * v459) & 0x39E92E66)) ^ v393;
  v461 = (v460 + 1697522742 - ((2 * v460) & 0xCA5C486C)) ^ LODWORD(STACK[0x6D0]);
  v462 = (v461 + 1425588524 - ((2 * v461) & 0xA9F18258)) ^ LODWORD(STACK[0x694]);
  v463 = (v462 - 2032006482 - ((2 * v462) & 0xDC4155C)) ^ LODWORD(STACK[0x6B0]);
  v464 = (v463 + 1480201960 - ((2 * v463) & 0xB0742DD0)) ^ LODWORD(STACK[0x67C]);
  v465 = STACK[0x474];
  v466 = LODWORD(STACK[0x474]) ^ (v464 - ((2 * v464) & 0xC625817A) - 485310275) ^ 0x64F9CB14;
  v467 = (v466 - ((2 * v466) & 0x43E2AD80) - 1578019136) ^ v448;
  LODWORD(v333) = ((v467 ^ 0xA6C2A04A) + 407544530 - 2 * ((v467 ^ 0xA6C2A04A) & 0x184AA2D7 ^ v467 & 5)) ^ v445;
  LODWORD(STACK[0x3AC]) = v333;
  v468 = v333 ^ v449;
  v469 = ((8 * (v333 ^ v449)) ^ 0xF0687E88) + 1119463697 - ((2 * ((8 * (v333 ^ v449)) ^ 0xF0687E88)) & 0x85735220);
  LODWORD(STACK[0x3A4]) = v469;
  v470 = ((4 * (v333 ^ v449)) ^ 0x78343F44) + 1959496926 - ((2 * ((4 * (v333 ^ v449)) ^ 0x78343F44)) & 0xE99719B8);
  LODWORD(STACK[0x3A0]) = v470;
  v471 = (((v333 ^ v449) << 7) ^ 0x687E880)
       + 1824540193
       - ((2 * (((v333 ^ v449) << 7) ^ 0x687E880)) & 0xD9808C00);
  LODWORD(STACK[0x61C]) = v471;
  v472 = (((v333 ^ v449) << 10) ^ 0x343F4400)
       - 925691350
       - ((2 * (((v333 ^ v449) << 10) ^ 0x343F4400)) & 0x91A62000);
  LODWORD(STACK[0x618]) = v472;
  v473 = (((v333 ^ v449) << 14) ^ 0x43F44000)
       + 1309707630
       - ((2 * (((v333 ^ v449) << 14) ^ 0x43F44000)) & 0x9C210000);
  LODWORD(STACK[0x28C]) = v473;
  v474 = ((v468 << 13) ^ 0xA1FA2000) - 1815950607 - ((2 * ((v468 << 13) ^ 0xA1FA2000)) & 0x27858000);
  LODWORD(STACK[0x374]) = v474;
  v475 = ((v468 << 20) ^ 0xFD100000) - 1247467252 - ((2 * ((v468 << 20) ^ 0xFD100000)) & 0x6B400000);
  LODWORD(STACK[0x614]) = v475;
  v476 = ((v468 << 16) ^ 0xFD10000) + 2050094668 - ((2 * ((v468 << 16) ^ 0xFD10000)) & 0xF4620000);
  LODWORD(STACK[0x370]) = v476;
  v477 = ((v468 << 22) ^ 0xF4400000) + 924021367 - ((2 * ((v468 << 22) ^ 0xF4400000)) & 0x6E000000);
  LODWORD(STACK[0x36C]) = v477;
  v478 = (2 * v468) ^ (v468 << 6) ^ (v468 << 17) ^ 0xA0FBEBE2;
  LODWORD(STACK[0x288]) = v333 ^ v449 ^ 0xFB994FE3;
  LODWORD(STACK[0x3A8]) = v333 ^ v449;
  v479 = (v478 - 443269070 - ((2 * v478) & 0xCB288064)) ^ v333 ^ v449 ^ 0xFB994FE3;
  v480 = (v479 + 1959496926 - ((2 * v479) & 0xE99719BC)) ^ v470;
  LODWORD(STACK[0x358]) = -2056039902;
  v481 = (v480 + 1119463697 - ((2 * v480) & 0x85735222)) ^ v469;
  v482 = (v481 + 1824540193 - ((2 * v481) & 0xD9808C42)) ^ v471;
  v483 = (v482 - 925691350 - ((2 * v482) & 0x91A62454)) ^ v472;
  v484 = (v483 - 1815950607 - ((2 * v483) & 0x278595E2)) ^ v474;
  v485 = (v484 + 1309707630 - ((2 * v484) & 0x9C211ADC)) ^ v473;
  v486 = ((v468 << 24) ^ 0xD1000000) + 398223149 - ((2 * ((v468 << 24) ^ 0xD1000000)) & 0x2E000000);
  LODWORD(STACK[0x290]) = v486;
  v487 = (v485 + 2050094668 - ((2 * v485) & 0xF463EC98)) ^ v476;
  v488 = (v487 - 1247467252 - ((2 * v487) & 0x6B4A5218)) ^ v475;
  v489 = (((v333 ^ v449) << 25) ^ 0xA2000000)
       + 515404313
       - ((2 * (((v333 ^ v449) << 25) ^ 0xA2000000)) & 0x3C000000);
  LODWORD(STACK[0x610]) = v489;
  v490 = v486 ^ v477 ^ (v488 + 924021367 - ((2 * v488) & 0x6E26E4EE));
  LODWORD(STACK[0x284]) = v490;
  v491 = ((-3 - v489) & 0x8000000 ^ 0x3FEE75FF) + 2 * ((-3 - v489) & 0x8000000);
  LODWORD(STACK[0x280]) = v491;
  v324 = ((v490 ^ 0x10000000) & (v491 - 1072592383)) == 0;
  v492 = LODWORD(STACK[0x5E8]) ^ (LODWORD(STACK[0x470]) >> 26) ^ (LODWORD(STACK[0x45C]) >> 3) ^ LODWORD(STACK[0x2EC]) ^ LODWORD(STACK[0x2F0]) ^ (LODWORD(STACK[0x6B4]) + 517563151);
  v493 = (((v492 + 1558958519 - ((2 * v492) & 0x39D7A36E)) ^ LODWORD(STACK[0x300]))
        - 1648068448
        - 2
        * (((v492 + 1558958519 - ((2 * v492) & 0x39D7A36E)) ^ LODWORD(STACK[0x300])) & 0x1DC478A8 ^ (v492 + 1558958519 - ((2 * v492) & 0x39D7A36E)) & 8)) ^ LODWORD(STACK[0x308]);
  v494 = (v493 + 998191628 - ((2 * v493) & 0x76FE6418)) ^ LODWORD(STACK[0x438]);
  v495 = (v494 - 1679444690 - ((2 * v494) & 0x37CB6A5C)) ^ LODWORD(STACK[0x42C]);
  v496 = (v495 - 305438390 - ((2 * v495) & 0xDB96C294)) ^ LODWORD(STACK[0x448]);
  v497 = (v496 + 1948644875 - ((2 * v496) & 0xE84BEC16)) ^ LODWORD(STACK[0x444]);
  v498 = (v497 - 2087729549 - ((2 * v497) & 0x71F8CE6)) ^ LODWORD(STACK[0x430]);
  v499 = (v498 + 1720233555 - ((2 * v498) & 0xCD115CA6)) ^ LODWORD(STACK[0x304]);
  v500 = (v499 + 1046458619 - ((2 * v499) & 0x7CBF61F6)) ^ LODWORD(STACK[0x428]);
  v501 = (v500 - 729373303 - ((2 * v500) & 0xA90D4B12)) ^ LODWORD(STACK[0x2FC]);
  v502 = LODWORD(STACK[0x5EC]) ^ (v501 + 1505609135 - ((2 * v501) & 0xB37B8B5E));
  v503 = (v502 >> 21) ^ (v502 >> 27);
  v504 = (2 * LODWORD(STACK[0x45C])) ^ (LODWORD(STACK[0x45C]) << 6) ^ (LODWORD(STACK[0x45C]) << 29) ^ LODWORD(STACK[0x30C]) ^ LODWORD(STACK[0x44C]) ^ LODWORD(STACK[0x450]) ^ (4 * v502) ^ (32 * v502) ^ (v502 << 11) ^ v503 ^ (4 * v503) ^ (32 * v503) ^ (v503 << 11) ^ 0x4174D876;
  v505 = (v504 - 727099216 - ((2 * v504) & 0xA952B160)) ^ LODWORD(STACK[0x420]);
  v506 = (v505 - 266778968 - ((2 * v505) & 0xE0328D50)) ^ LODWORD(STACK[0x464]);
  v507 = (v506 - 1884781822 - ((2 * v506) & 0x1F510604)) ^ LODWORD(STACK[0x314]);
  v508 = (v507 + 909950212 - ((2 * v507) & 0x6C797A08)) ^ LODWORD(STACK[0x550]);
  v509 = (v508 - 1397008081 - ((2 * v508) & 0x5976B25E)) ^ LODWORD(STACK[0x548]);
  v510 = (v509 - 611118821 - ((2 * v509) & 0xB7262236)) ^ LODWORD(STACK[0x460]);
  v511 = (v510 + 584915324 - ((2 * v510) & 0x45BA32F8)) ^ LODWORD(STACK[0x458]);
  v512 = (v511 + 779366157 - ((2 * v511) & 0x5CE85E1A)) ^ LODWORD(STACK[0x540]);
  v513 = (v512 - 1978511814 - ((2 * v512) & 0x14249C74)) ^ LODWORD(STACK[0x310]);
  v514 = (v513 + 288568464 - ((2 * v513) & 0x22666920)) ^ LODWORD(STACK[0x54C]);
  v515 = (v514 + 1180650880 - ((2 * v514) & 0x8CBE9B00)) ^ LODWORD(STACK[0x538]);
  v516 = (v515 + 472840051 - ((2 * v515) & 0x385DEEE6)) ^ LODWORD(STACK[0x454]);
  v517 = (v516 - ((2 * v516) & 0x6371DC82) + 834203201) ^ v502;
  LODWORD(STACK[0x42C]) = v517;
  LODWORD(STACK[0x550]) = (LODWORD(STACK[0x2E4]) ^ (-1673081951 * LODWORD(STACK[0x2A0])
                                                  - 1441636497
                                                  - ((411932482 * LODWORD(STACK[0x2A0]) + 431457276) & 0x1A6D3AE2)))
                        + LODWORD(STACK[0x2B8]);
  v518 = -1673081951 * LODWORD(STACK[0x298])
       - 2096455008
       - ((948803394 * LODWORD(STACK[0x298]) + 968328188) & 0xCC5DC144);
  v519 = -1673081951 * LODWORD(STACK[0x2A4])
       - 541082109
       - ((948803394 * LODWORD(STACK[0x2A4]) + 968328188) & 0x85C7F80A);
  v520 = -1673081951 * LODWORD(STACK[0x2A8])
       - 2096455008
       - ((948803394 * LODWORD(STACK[0x2A8]) + 968328188) & 0xCC5DC144);
  v521 = -1673081951 * LODWORD(STACK[0x2AC])
       - 541082109
       - ((948803394 * LODWORD(STACK[0x2AC]) + 968328188) & 0x85C7F80A);
  v522 = -1673081951 * LODWORD(STACK[0x2B0])
       - 2096455008
       - ((948803394 * LODWORD(STACK[0x2B0]) + 968328188) & 0xCC5DC144);
  v523 = -1673081951 * LODWORD(STACK[0x2B4])
       - 2096455008
       - 2
       * ((-1673081951 * LODWORD(STACK[0x2B4]) + 484164094) & 0x662EE0A3 ^ (-1673081951 * LODWORD(STACK[0x2B4])) & 1);
  v524 = -1673081951 * LODWORD(STACK[0x2BC])
       - 541082109
       - ((948803394 * LODWORD(STACK[0x2BC]) + 968328188) & 0x85C7F80A);
  v525 = -1673081951 * LODWORD(STACK[0x2C0])
       - 2096455008
       - ((948803394 * LODWORD(STACK[0x2C0]) + 968328188) & 0xCC5DC144);
  v526 = -1673081951 * LODWORD(STACK[0x2C4])
       - 541082109
       - ((948803394 * LODWORD(STACK[0x2C4]) + 968328188) & 0x85C7F80A);
  v527 = -1673081951 * LODWORD(STACK[0x2C8])
       - 2096455008
       - ((948803394 * LODWORD(STACK[0x2C8]) + 968328188) & 0xCC5DC144);
  v528 = -1673081951 * LODWORD(STACK[0x2CC])
       - 541082109
       - ((948803394 * LODWORD(STACK[0x2CC]) + 968328188) & 0x85C7F80A);
  v529 = -1673081951 * LODWORD(STACK[0x2D0])
       - 541082109
       - ((948803394 * LODWORD(STACK[0x2D0]) + 968328188) & 0x85C7F80A);
  v530 = -1673081951 * LODWORD(STACK[0x2D4])
       - 2096455008
       - 2
       * ((-1673081951 * LODWORD(STACK[0x2D4]) + 484164094) & 0x662EE0A3 ^ (-1673081951 * LODWORD(STACK[0x2D4])) & 1);
  v531 = -1673081951 * LODWORD(STACK[0x2D8])
       - 541082109
       - ((948803394 * LODWORD(STACK[0x2D8]) + 968328188) & 0x85C7F80A);
  LODWORD(v333) = STACK[0x2E0];
  LODWORD(STACK[0x54C]) = LODWORD(STACK[0x2E0]) ^ (-1673081951 * LODWORD(STACK[0x29C])
                                                 - 541082109
                                                 - ((948803394 * LODWORD(STACK[0x29C]) + 968328188) & 0x85C7F80A));
  LODWORD(STACK[0x540]) = v333 ^ v519;
  LODWORD(STACK[0x538]) = v333 ^ v521;
  LODWORD(STACK[0x460]) = v333 ^ v524;
  LODWORD(STACK[0x45C]) = v333 ^ v526;
  LODWORD(STACK[0x450]) = v333 ^ v528;
  LODWORD(STACK[0x444]) = v333 ^ v529;
  LODWORD(STACK[0x44C]) = v333 ^ v531;
  v532 = -1673081951 * LODWORD(STACK[0x2DC])
       - 2096455008
       - 2
       * ((-1673081951 * LODWORD(STACK[0x2DC]) + 484164094) & 0x662EE0A3 ^ (-1673081951 * LODWORD(STACK[0x2DC])) & 1);
  LODWORD(v333) = STACK[0x2E8];
  LODWORD(STACK[0x548]) = LODWORD(STACK[0x2E8]) ^ v518;
  LODWORD(STACK[0x470]) = v333 ^ v520;
  LODWORD(STACK[0x464]) = v333 ^ v522;
  LODWORD(STACK[0x448]) = v333 ^ v523;
  LODWORD(STACK[0x458]) = v333 ^ v525;
  LODWORD(STACK[0x454]) = v333 ^ v527;
  LODWORD(STACK[0x438]) = v333 ^ v530;
  LODWORD(STACK[0x430]) = v333 ^ v532;
  v533 = (LODWORD(STACK[0x498]) >> 28) ^ (LODWORD(STACK[0x498]) >> 27) ^ (LODWORD(STACK[0x494]) >> 4) ^ (LODWORD(STACK[0x494]) >> 2);
  v534 = ((LODWORD(STACK[0x5F8]) ^ 0xD3F141E7 ^ v533)
        + 690580860
        - ((2 * (LODWORD(STACK[0x5F8]) ^ 0xD3F141E7 ^ v533)) & 0x5252DAF8)) ^ LODWORD(STACK[0x46C]);
  v535 = (v534 + 2110944150 - ((2 * v534) & 0xFBA4E72C)) ^ LODWORD(STACK[0x554]);
  v536 = (v535 + 1578486699 - ((2 * v535) & 0xBC2B9756)) ^ LODWORD(STACK[0x488]);
  v537 = (v536 - 1359314810 - ((2 * v536) & 0x5DF5010C)) ^ LODWORD(STACK[0x328]);
  v538 = (v537 - 998305340 - ((2 * v537) & 0x88FE2388)) ^ LODWORD(STACK[0x31C]);
  v539 = (v538 - 2143802700 - ((2 * v538) & 0x705568)) ^ LODWORD(STACK[0x318]);
  v540 = (v539 - 2035952272 - ((2 * v539) & 0xD4BAAE0)) ^ LODWORD(STACK[0x468]);
  v541 = (v540 + 1605244902 - ((2 * v540) & 0xBF5C2FCC)) ^ LODWORD(STACK[0x484]);
  v542 = (v541 - 1354681711 - ((2 * v541) & 0x5E826522)) ^ LODWORD(STACK[0x5F0]);
  v543 = LODWORD(STACK[0x5D0]) ^ (v542 + 1375525987 - ((2 * v542) & 0xA3F9B8C6));
  v544 = (v543 >> 21) ^ (v533 >> 27);
  v545 = LODWORD(STACK[0x5D4]) ^ (LODWORD(STACK[0x588]) >> 26) ^ 0xF;
  v546 = (v545 + 2096500040 - ((2 * v545) & 0x16) + 3) ^ LODWORD(STACK[0x33C]);
  v547 = (v546 - 1728509594 - ((2 * v546) & 0x31F212CC)) ^ LODWORD(STACK[0x340]);
  v548 = (v547 + 801737749 - ((2 * v547) & 0x5F93182A)) ^ LODWORD(STACK[0x4A4]);
  v549 = (v548 - 1789946124 - ((2 * v548) & 0x2A9F2DE8)) ^ LODWORD(STACK[0x4A8]);
  v550 = (v549 + 2141979942 - ((2 * v549) & 0x7F580A4C)) ^ LODWORD(STACK[0x4B4]);
  v551 = (v550 + 487024392 - ((2 * v550) & 0x3A0ECE10)) ^ LODWORD(STACK[0x4AC]);
  v552 = (v551 - 1296071753 - ((2 * v551) & 0x657F076E)) ^ LODWORD(STACK[0x4A0]);
  v553 = (v552 - 615775543 - ((2 * v552) & 0x36980592)) ^ LODWORD(STACK[0x49C]);
  v554 = (v553 + 1722142674 + (~(2 * v553) | 0xB2B4605B) + 1) ^ LODWORD(STACK[0x344]);
  v555 = (v554 - 510128511 - ((2 * v554) & 0xC3301D02)) ^ LODWORD(STACK[0x338]);
  v556 = LODWORD(STACK[0x5FC]) ^ 0x7EBBBD ^ (v555 + 204866613 - ((2 * v555) & 0x186C086A));
  v557 = v556 + (LODWORD(STACK[0x334]) ^ 0xFD777A) - 2 * (v556 & (LODWORD(STACK[0x334]) ^ 0xFD777A));
  v558 = v557 + 745271345 - ((2 * v557) & 0x58D7E062);
  v559 = (((LODWORD(STACK[0x588]) >> 3) ^ 0x7EBBBD2)
        + 745271345
        - 2 * (((LODWORD(STACK[0x588]) >> 3) ^ 0x7EBBBD2) & 0xC6BF035 ^ (LODWORD(STACK[0x588]) >> 3) & 4)) ^ LODWORD(STACK[0x4B0]) ^ v558;
  v560 = (16 * LODWORD(STACK[0x494])) ^ (32 * LODWORD(STACK[0x494])) ^ (LODWORD(STACK[0x320]) << 30) ^ 0x20F330D0;
  v561 = (v560 - 861286134 - ((2 * v560) & 0x9953A200)) ^ LODWORD(STACK[0x5E4]);
  v562 = (v561 - 521294887 - ((2 * v561) & 0xC1DB57B2)) ^ LODWORD(STACK[0x5DC]);
  v563 = (((v562 + 527386118 - ((2 * v562) & 0x3EDE8C0C)) ^ LODWORD(STACK[0x48C]))
        + 127520014
        - 2
        * (((v562 + 527386118 - ((2 * v562) & 0x3EDE8C0C)) ^ LODWORD(STACK[0x48C])) & 0x799CD1F ^ (v562
                                                                                                 + 527386118
                                                                                                 - ((2 * v562) & 0x3EDE8C0C)) & 0x11)) ^ LODWORD(STACK[0x330]);
  v564 = (v563 + 979957622 - ((2 * v563) & 0x74D1EEEC)) ^ LODWORD(STACK[0x32C]);
  v565 = (v564 + 1656312981 - ((2 * v564) & 0xC572A92A)) ^ LODWORD(STACK[0x47C]);
  v566 = (v565 - 1799261800 - ((2 * v565) & 0x2982E330)) ^ LODWORD(STACK[0x324]);
  v567 = (v566 - 355958289 - ((2 * v566) & 0xD59103DE)) ^ LODWORD(STACK[0x478]);
  v568 = (v567 - 1848395724 - ((2 * v567) & 0x23A77068)) ^ LODWORD(STACK[0x55C]);
  v569 = (v568 + 670026672 - ((2 * v568) & 0x4FDF9760)) ^ LODWORD(STACK[0x5E0]);
  v570 = (v569 + 1390218474 - ((2 * v569) & 0xA5BA19D4)) ^ LODWORD(STACK[0x480]);
  v571 = (v570 - 968801000 - ((2 * v570) & 0x8C828A30)) ^ LODWORD(STACK[0x5D8]);
  v572 = (v559 >> 27) ^ (v558 >> 30) ^ (v559 >> 21);
  v573 = (LODWORD(STACK[0x4C4]) << 29) ^ (LODWORD(STACK[0x588]) << 6) ^ (2 * LODWORD(STACK[0x588])) ^ (4 * v559) ^ (32 * v559) ^ (v559 << 11) ^ (4 * v572) ^ (32 * v572) ^ (v572 << 11) ^ LODWORD(STACK[0x490]) ^ (4 * v543) ^ (32 * v543) ^ (v543 << 11) ^ (4 * v544) ^ (32 * v544) ^ (v544 << 11) ^ (v571 + 410430949 - ((2 * v571) & 0x30ED5BCA)) ^ 0x489BB42C;
  v574 = (v573 - 1803175815 - ((2 * v573) & 0x290B70F2)) ^ LODWORD(STACK[0x424]);
  v575 = (v574 + 740538630 - ((2 * v574) & 0x5847720C)) ^ LODWORD(STACK[0x4C8]);
  v576 = (v575 + 424171756 - ((2 * v575) & 0x3290B1D8)) ^ LODWORD(STACK[0x348]);
  v577 = (v576 + 479103276 - ((2 * v576) & 0x391D1258)) ^ LODWORD(STACK[0x58C]);
  v578 = (v577 + 1403646017 - ((2 * v577) & 0xA753E082)) ^ LODWORD(STACK[0x584]);
  v579 = (v578 - 361490979 - ((2 * v578) & 0xD4E82BBA)) ^ LODWORD(STACK[0x590]);
  v580 = (v579 + 391390397 - ((2 * v579) & 0x2EA8497A)) ^ LODWORD(STACK[0x4BC]);
  v581 = (v580 + 168170031 - ((2 * v580) & 0x140C245E)) ^ LODWORD(STACK[0x574]);
  v582 = (v581 + 1490909765 - ((2 * v581) & 0xB1BAF48A)) ^ LODWORD(STACK[0x34C]);
  v583 = (v582 + 2073991959 - ((2 * v582) & 0xF73D362E)) ^ LODWORD(STACK[0x578]);
  v584 = (v583 - 861766355 - ((2 * v583) & 0x9944FA5A)) ^ LODWORD(STACK[0x4C0]);
  v585 = (v584 - 1096462986 - ((2 * v584) & 0x7D4A9AEC)) ^ LODWORD(STACK[0x4B8]);
  v586 = (v585 + 1461832953 - ((2 * v585) & 0xAE4399F2)) ^ LODWORD(STACK[0x568]);
  v587 = (v586 + 834751015 - ((2 * v586) & 0x6382944E)) ^ LODWORD(STACK[0x570]);
  v588 = (v587 + 1952435935 - ((2 * v587) & 0xE8BF9DBE)) ^ LODWORD(STACK[0x56C]);
  v589 = (v588 - ((2 * v588) & 0xA50C8BB2) - 762952231) ^ v559;
  v590 = v572 ^ 0x8985F517 ^ ((v589 ^ 0xD1739830) - 1987709688 - 2 * ((v589 ^ 0xD1739830) & 0x985F50F ^ v589 & 7));
  v591 = v543 ^ 0xC5BF0B2E ^ (v590 - ((2 * v590) & 0x86F1599C) - 1015501618);
  v592 = (v591 - ((2 * v591) & 0x4B45B3D8) - 1516054036) ^ v544;
  LODWORD(STACK[0x46C]) = v592;
  v593 = (unsigned __int8 *)STACK[0x6B8];
  LODWORD(STACK[0x484]) = ((*(unsigned __int8 *)(STACK[0x6B8] + 2092) ^ 0xFC) << 16) | ((*(unsigned __int8 *)(STACK[0x6B8] + 1789) ^ 0xAA) << 8) | *(unsigned __int8 *)(STACK[0x6B8] + 1486) ^ 0xAA;
  v594 = v593[1306] ^ 0xFC;
  v595 = v594 | ((v593[1609] ^ 0xFC) << 8);
  v596 = v595 - 2 * (v595 & 0x9CF3 ^ v594 & 0x20) - 1584620333;
  v597 = (v596 & 0xA086FFFF ^ 0xE38D9CD3) - ((2 * (v596 & 0xA086FFFF ^ 0xE38D9CD3)) & 0x861380AE) - 686178217;
  v598 = ((v597 << 8) ^ 0x19C05700) - ((2 * ((v597 << 8) ^ 0x19C05700)) & 0x2BC2E800) + 1440838684;
  v599 = v593[1845] ^ (((((unsigned __int16)v596 ^ 0x9CD3) - ((2 * ((unsigned __int16)v596 ^ 0x9CD3)) & 0x80AE) - 16297) & 0x7A56 ^ 0x4056)
                     + (v596 & 0x7A56 ^ 0x6204));
  LOWORD(v597) = ((LODWORD(STACK[0x594]) + 5766) | 0x4CC2) - ((LODWORD(STACK[0x594]) + 5766) & 0xB33D);
  LODWORD(STACK[0x498]) = v593[1665] ^ 0xFC | ((v598 ^ 0xE1741C | v593[1968] ^ 0xFC) << 8);
  LODWORD(STACK[0x4A0]) = ((v599 ^ 0xFC) << 16) | ((v593[1542] ^ 0xFC) << 8) | v593[1239] ^ 0xFC;
  v600 = STACK[0x6D8];
  LODWORD(STACK[0x4B4]) = v593[1721] ^ 0xFC | ((v593[2024] ^ 0xFC) << 8) | ((*(unsigned __int8 *)(STACK[0x6D8]
                                                                                                + (unsigned __int16)(v597 + (v598 & 0xB400 ^ 0x801F) + (v598 & 0xB400 ^ 0x3400) + 1)) ^ 0xFC) << 16);
  LODWORD(STACK[0x494]) = ((v593[1295] ^ 0xFC) << 8) | ((v593[1598] ^ 0xFC) << 16) | v593[1957] ^ 0xFC;
  LODWORD(STACK[0x480]) = ((v593[1777] ^ 0xFC) << 8) | ((v593[2080] ^ 0xFC) << 16) | v593[1474] ^ 0xFC;
  LODWORD(STACK[0x4AC]) = ((v593[2013] ^ 0xFC) << 8) | ((v593[1351] ^ 0xFC) << 16) | v593[1710] ^ 0xFC;
  LODWORD(STACK[0x488]) = v593[1889] ^ 0xFC | ((((v593[1530] ^ 0xFC) << 8) | ((v593[1833] ^ 0xFC) << 16) | v593[1227] ^ 0xFC) << 8);
  LODWORD(STACK[0x4C8]) = ((v593[2069] ^ 0xFC) << 16) | ((v593[1766] ^ 0xFC) << 8) | v593[1463] ^ 0xFC;
  LODWORD(STACK[0x4B8]) = v593[1642] ^ 0xFC | ((v593[1945] ^ 0xFC | ((v593[1586] ^ 0xFC) << 16) | ((v593[1283] ^ 0xFC) << 8)) << 8);
  v601 = ((v593[1339] ^ 0xFC) << 16) | ((v593[2001] ^ 0xFC) << 8);
  LODWORD(STACK[0x588]) = ((v593[1822] ^ 0xFC) << 16) | ((v593[1519] ^ 0xFC) << 8) | v593[1216] ^ 0xFC;
  LODWORD(STACK[0x48C]) = v601 | v593[1698] ^ 0xFC;
  v602 = v593[1272] ^ 0xFC;
  v603 = (v602 << 8) + 1511654653;
  v604 = (v603 - ((v602 << 9) & 0x800)) ^ 0x1A04FD | ((v593[1575] ^ 0xFC) << 16);
  LODWORD(STACK[0x574]) = ((v593[2057] ^ 0xFC) << 16) | ((v593[1754] ^ 0xFC) << 8) | v593[1451] ^ 0xFC;
  LODWORD(STACK[0x4A4]) = (*(unsigned __int8 *)(v600 + (v603 & 0x300 ^ 0x11ELL | v603 & 0x300 ^ 0x200)) ^ 0xFC) + v604;
  v605 = v593[1384];
  v606 = *(unsigned __int8 *)(v600 + (((v605 & 0x1C ^ 0x1CLL) + (v605 & 0x1C)) ^ 0x2BE));
  LODWORD(STACK[0x58C]) = v605 ^ 0xFC | ((v593[1687] ^ 0xFC | ((v593[1990] ^ 0xFC) << 8) | ((v593[1328] ^ 0xFC) << 16)) << 8);
  LODWORD(STACK[0x47C]) = ((v593[1507] ^ 0xFC) << 8) | ((v606 ^ 0xFC) << 16) | v593[1204] ^ 0xFC;
  LODWORD(STACK[0x584]) = ((v593[2046] ^ 0xFC) << 24) | ((v593[1743] ^ 0xAA) << 16) | ((v593[1440] ^ 0xFC) << 8);
  LODWORD(STACK[0x490]) = v593[1619] ^ 0xFC | ((((v593[1260] ^ 0xFC) << 8) | ((v593[1563] ^ 0xFC) << 16) | v593[1922] ^ 0xFC) << 8);
  v607 = v593[1193] ^ 0xFC | ((v593[1799] ^ 0xFC) << 16) | ((v593[1496] ^ 0xFC) << 8);
  LODWORD(STACK[0x4A8]) = ((v593[1316] ^ 0xFC) << 16) | ((v593[1978] ^ 0xFC) << 8) | v593[1675] ^ 0xFC;
  LODWORD(STACK[0x49C]) = v593[1855] ^ 0xFC | (v607 << 8);
  LODWORD(STACK[0x55C]) = ((v593[1552] ^ 0xFC) << 16) | ((v593[1249] ^ 0xFC) << 8) | v593[1911] ^ 0xAA;
  LODWORD(STACK[0x590]) = v593[2090] ^ 0xFC | ((((v593[1731] ^ 0xFC) << 8) | ((v593[2034] ^ 0xFC) << 16) | v593[1428] ^ 0xFC) << 8);
  LODWORD(STACK[0x4C0]) = v593[1664] ^ 0xFC | ((v593[1967] ^ 0xFC) << 8) | ((v593[1305] ^ 0xFC) << 16);
  LODWORD(STACK[0x4C4]) = v593[1181] ^ 0xFC | ((v593[1484] ^ 0xFC) << 8) | ((v593[1787] ^ 0xFC) << 16);
  LODWORD(STACK[0x578]) = v593[1417] ^ 0xFC | ((v593[1720] ^ 0xFC) << 8) | ((v593[2023] ^ 0xFC) << 16);
  LODWORD(STACK[0x56C]) = ((v593[1540] ^ 0xFC) << 16) | ((v593[1237] ^ 0xFC) << 8) | v593[1899] ^ 0xFC;
  LODWORD(STACK[0x570]) = ((v593[1776] ^ 0xFC) << 16) | ((v593[1473] ^ 0xFC) << 8) | v593[1170] ^ 0xFC;
  LODWORD(STACK[0x568]) = ((v593[1293] ^ 0xFC) << 16) | ((v593[1955] ^ 0xFC) << 8) | v593[1652] ^ 0xFC;
  LODWORD(STACK[0x554]) = ((v593[1529] ^ 0xFC) << 16) | ((v593[1226] ^ 0xFC) << 8) | v593[1888] ^ 0xFC;
  LODWORD(STACK[0x4BC]) = ((v593[2011] ^ 0xFC) << 16) | ((v593[1708] ^ 0xFC) << 8) | v593[1405] ^ 0xFC;
  v608 = v593[1641] ^ 0xFC | ((v593[1944] ^ 0xFC) << 8) | ((v593[1282] ^ 0xFC) << 16);
  LODWORD(STACK[0x4B0]) = v593[1158] ^ 0xFC | ((v593[1461] ^ 0xFC) << 8) | ((v593[1764] ^ 0xFC) << 16);
  v609 = STACK[0x3DC];
  v610 = (LODWORD(STACK[0x3DC]) ^ 0xFC) - 1319346639 - ((2 * (LODWORD(STACK[0x3DC]) ^ 0xFC)) & 0x62);
  LODWORD(STACK[0x428]) = v610;
  v611 = (v610 ^ 0xB15C5E31 | (v608 << 8)) - ((2 * (v610 ^ 0xB15C5E31 | (v608 << 8))) & 0xD29F78B6);
  LODWORD(STACK[0x7F0]) = -2009212831 * (LODWORD(STACK[0x534]) ^ 0x469E51FC) - 75026750;
  LODWORD(STACK[0x7F4]) = -2009212831 * (v592 ^ 0xC3789A63) - 75026750;
  LODWORD(STACK[0x7F8]) = -2009212831 * (LODWORD(STACK[0x564]) ^ 0xAC3A195E) - 75026750;
  v612 = STACK[0x524];
  v613 = LODWORD(STACK[0x524]) ^ LODWORD(STACK[0x688]);
  v614 = v613 ^ 0xB8D62BD;
  LODWORD(STACK[0x7FC]) = -2009212831 * v614 - 75026750;
  LODWORD(STACK[0x804]) = -2009212831 * (v465 ^ 0x87EB0BA9) - 75026750;
  LODWORD(STACK[0x808]) = -2009212831 * (LODWORD(STACK[0x680]) ^ 0x923BD0E) - 75026750;
  LODWORD(STACK[0x800]) = -2009212831 * (v517 ^ 0x2380FE9C) - 75026750;
  LODWORD(STACK[0x5F0]) = (((v613 ^ 0xFAA297C2) << 11) ^ 0x7FABF800)
                        + 1043059859
                        - ((2 * (((v613 ^ 0xFAA297C2) << 11) ^ 0x7FABF800)) & 0x7C57A000);
  LODWORD(STACK[0x80C]) = -2009212831 * STACK[0x3D0] - 75026750;
  LODWORD(STACK[0x5D0]) = ((8 * (v613 ^ 0xFAA297C2)) ^ 0x897FABF8)
                        - 1397554518
                        - ((2 * ((8 * (v613 ^ 0xFAA297C2)) ^ 0x897FABF8)) & 0x59660550);
  LODWORD(v600) = v593[1148];
  LODWORD(STACK[0x478]) = v600;
  LOBYTE(v523) = (v600 & 0xD ^ 0xC) + (v600 & 0xD ^ 1);
  LODWORD(STACK[0x5FC]) = (((v613 ^ 0xFAA297C2) << 14) ^ 0xFD5FC000)
                        - 2079086876
                        - ((2 * (((v613 ^ 0xFAA297C2) << 14) ^ 0xFD5FC000)) & 0x8270000);
  v615 = v612;
  v616 = (v612 >> 27) ^ (v612 >> 28) ^ LODWORD(STACK[0x5AC]);
  v617 = (v613 ^ 0x55D683D) << 26;
  LODWORD(STACK[0x5E8]) = v617;
  v618 = (v613 ^ 0x55D683D) << 27;
  LODWORD(STACK[0x6D8]) = v617 - 762704287 - (v618 & 0xA0000000);
  LODWORD(STACK[0x5F8]) = (((v613 ^ 0xFAA297C2) << 18) ^ 0xD5FC0000)
                        - 1098115730
                        - ((2 * (((v613 ^ 0xFAA297C2) << 18) ^ 0xD5FC0000)) & 0x7D180000);
  v619 = (((v613 ^ 0xFAA297C2) << 19) ^ 0xABF80000)
       - 1948965288
       - ((2 * (((v613 ^ 0xFAA297C2) << 19) ^ 0xABF80000)) & 0x17A00000);
  LODWORD(STACK[0x474]) = v619;
  LODWORD(STACK[0x5D4]) = (((v613 ^ 0xFAA297C2) << 22) ^ 0x5FC00000)
                        - 446182882
                        - ((2 * (((v613 ^ 0xFAA297C2) << 22) ^ 0x5FC00000)) & 0xCA800000);
  LODWORD(v600) = v593[1585];
  LODWORD(STACK[0x680]) = v600;
  LODWORD(STACK[0x5AC]) = v611 - 380650405;
  v620 = (((v613 ^ 0xFAA297C2) << 23) ^ 0xBF800000)
       + 1031182801
       - ((2 * (((v613 ^ 0xFAA297C2) << 23) ^ 0xBF800000)) & 0x7A000000);
  LODWORD(STACK[0x3DC]) = v620;
  v621 = (_DWORD)v614 << (((v611 + 91) & 2) + (v609 & 2));
  v622 = (_DWORD)v614 << v523;
  v623 = v614 << ((v600 & 0x75 ^ 0x74 | v600 & 0x75 ^ 1) ^ 0x60);
  v624 = v614 >> (((((v611 + 91) ^ 0xA4) - 2 * (((v611 + 91) ^ 0xA4) & 6 ^ (v611 + 91) & 2) + 12) ^ v609) & 0xB);
  v625 = v624 - 1194356410 - ((2 * v624) & 0x719F228C);
  LODWORD(v614) = v618 + 1409561855 - (((v613 ^ 0x55D683D) << 28) & 0xA0000000);
  LODWORD(STACK[0x420]) = v614;
  v626 = ((v613 << 28) ^ 0xD0000000) - 1418409489 - ((v613 << 29) & 0x40000000);
  LODWORD(STACK[0x468]) = v626;
  v627 = ((v613 ^ 0xFAA297C2) >> 2) ^ (v612 >> 15) ^ ((v616 ^ 1)
                                                    - 1355032079
                                                    - 2 * ((v616 ^ 1) & 0xFFFFFFFB ^ v616 & 0xAAAAAAAA));
  v628 = v625 ^ ((LODWORD(STACK[0x5A0]) ^ 0x3C4BEA45 ^ v627)
               - 1194356410
               - 2 * ((LODWORD(STACK[0x5A0]) ^ 0x3C4BEA45 ^ v627) & 0x38CF914E ^ v627 & 8));
  v629 = (v612 >> 21) ^ 0x1C03C4B0;
  v630 = (v628 + 470009068 - ((2 * v628) & 0x380789D8)) ^ v629;
  v631 = (v612 >> 19) ^ 0x8FBA3E08;
  v632 = (v630 - 1883619463 - ((2 * v630) & 0x1F747EF2)) ^ v631;
  v633 = (v612 >> 18) ^ 0xDFA30D3;
  v634 = (v632 + 234500656 - ((2 * v632) & 0x1BF46460)) ^ v633;
  v635 = (v612 >> 14) ^ 0x65272EA5;
  v636 = (v634 + 1697054864 - ((2 * v634) & 0xCA4E0120)) ^ v635;
  v637 = v636 + 1858764334 - ((2 * v636) & 0xDD94FC5C);
  v638 = (v615 >> 13) ^ 0x6ECA2245;
  LODWORD(v600) = (v613 >> 10) ^ 0x35C60FF1;
  LODWORD(STACK[0x3D0]) = v600;
  v639 = ((v637 ^ v638) + 902098089 - ((2 * (v637 ^ v638)) & 0x6B89D952)) ^ v600;
  LODWORD(v600) = (v613 >> 9) ^ 0x8D58E32E;
  LODWORD(STACK[0x34C]) = v600;
  v640 = (v639 - 1923275361 - ((2 * v639) & 0x1ABA4B3E)) ^ v600;
  v641 = v640 + 175063628 - ((2 * v640) & 0x14DE8498);
  v642 = (v613 >> 6) ^ 0xA4177C6;
  v643 = (v613 ^ 0xFAA297C2) >> 4;
  LODWORD(v600) = (v613 ^ 0xFAA297C2) >> 5;
  LODWORD(STACK[0x348]) = v600;
  LODWORD(v593) = v600 ^ v643 ^ ((v641 ^ v642) - ((2 * (v641 ^ v642)) & 0x5907A6A0) + 746836816);
  LODWORD(STACK[0x5EC]) = (((v613 ^ 0xFAA297C2) << 13) ^ 0xFEAFE000)
                        + 1691629307
                        - ((2 * (((v613 ^ 0xFAA297C2) << 13) ^ 0xFEAFE000)) & 0xC9A84000);
  v644 = (32 * (v613 ^ 0xFAA297C2)) ^ (v613 << 30) ^ (16 * (v613 ^ 0xFAA297C2)) ^ ((v613 ^ 0xFAA297C2) << 17) ^ v622 ^ v623 ^ v621;
  v645 = ((v593 ^ 0x2B0AACFB) >> 27) ^ ((v625 + 0x80000000) >> 30) ^ ((v593 ^ 0x2B0AACFB) >> 21);
  v646 = v644 ^ (4 * (v593 ^ 0x2B0AACFB)) ^ (32 * (v593 ^ 0x2B0AACFB)) ^ ((v593 ^ 0x2B0AACFB) << 11) ^ (32 * v645) ^ (4 * v645);
  v647 = ((v646 ^ (v645 << 11) ^ 0xD4129168)
        - 1397554518
        - 2 * ((v646 ^ (v645 << 11) ^ 0xD4129168) & 0x2CB302BA ^ v646 & 0x10)) ^ LODWORD(STACK[0x5D0]);
  v648 = STACK[0x5F0];
  v649 = (v647 + 1043059859 - ((2 * v647) & 0x7C57A926)) ^ LODWORD(STACK[0x5F0]);
  v650 = (v649 - 2079086876 - ((2 * v649) & 0x8274DC8)) ^ LODWORD(STACK[0x5FC]);
  v651 = STACK[0x5F8];
  v652 = (v650 - 1098115730 - ((2 * v650) & 0x7D182ADC)) ^ LODWORD(STACK[0x5F8]);
  v653 = (v652 - 1948965288 - ((2 * v652) & 0x17AA4CB0)) ^ v619;
  v654 = (v653 - 446182882 - ((2 * v653) & 0xCACF943C)) ^ LODWORD(STACK[0x5D4]);
  v655 = (v654 + 1031182801 - ((2 * v654) & 0x7AED33A2)) ^ v620;
  v656 = (v655 - 762704287 - ((2 * v655) & 0xA5141CC2)) ^ LODWORD(STACK[0x6D8]);
  v657 = (v656 - 1418409489 - ((2 * v656) & 0x56E993DE)) ^ v626;
  v658 = (v657 + 1409561855 - ((2 * v657) & 0xA80869FE)) ^ v614;
  v659 = LODWORD(STACK[0x534]) ^ (v658 - ((2 * v658) & 0x4E2B4BE6) - 1491753485) ^ 0xE18BF40F;
  v660 = v593 ^ 0x19C8B352 ^ (v659 - ((2 * v659) & 0x7BA1C1FC) + 1037099262);
  LODWORD(STACK[0x424]) = v645 ^ 0x6C33193 ^ (v660 + 113455507 - ((2 * v660) & 0xD8663D4) + 87);
  LODWORD(STACK[0x5D8]) = (((v613 ^ 0xFAA297C2) << 7) ^ 0x97FABF80)
                        + 1147321188
                        - ((2 * (((v613 ^ 0xFAA297C2) << 7) ^ 0x97FABF80)) & 0x88C57600);
  LODWORD(STACK[0x5DC]) = (((v613 ^ 0xFAA297C2) << 10) ^ 0xBFD5FC00)
                        + 377860362
                        - ((2 * (((v613 ^ 0xFAA297C2) << 10) ^ 0xBFD5FC00)) & 0x2D0B6000);
  LODWORD(v593) = (((v613 ^ 0xFAA297C2) << 16) ^ 0xF57F0000)
                + 1588219474
                - ((2 * (((v613 ^ 0xFAA297C2) << 16) ^ 0xF57F0000)) & 0xBD540000);
  LODWORD(STACK[0x5A0]) = (_DWORD)v593;
  LODWORD(STACK[0x5E4]) = (((v613 ^ 0xFAA297C2) << 20) ^ 0x57F00000)
                        + 628417459
                        - ((2 * (((v613 ^ 0xFAA297C2) << 20) ^ 0x57F00000)) & 0x4AE00000);
  LODWORD(STACK[0x5E8]) = ((v613 ^ 0x55D683D) << 25) + 860532226 - (STACK[0x5E8] & 0x66666666);
  LODWORD(STACK[0x5E0]) = (((v613 ^ 0xFAA297C2) << 21) ^ 0xAFE00000)
                        - 1168931966
                        - ((2 * (((v613 ^ 0xFAA297C2) << 21) ^ 0xAFE00000)) & 0x74800000);
  v661 = (v615 >> 20) ^ 0x7897FA07 ^ ((v613 ^ 0xFAA297C2) >> 1);
  v662 = HIWORD(v615) ^ 0xB7E02D0D;
  v663 = (v661 - 1210046848 - ((2 * v661) & 0x6FC04D00)) ^ v662;
  v664 = (v663 + 234500656 - ((2 * v663) & 0x1BF46460)) ^ v633;
  v665 = LODWORD(STACK[0x5B4]) ^ 0xB17ADB7 ^ (v664 + 186101170 - ((2 * v664) & 0x162F5B64));
  v666 = LODWORD(STACK[0x5B0]) ^ 0xA44A3894 ^ (v665 - 1538639724 - ((2 * v665) & 0x48947174) + 38);
  v667 = (v666 + 470009068 - ((2 * v666) & 0x380789D8)) ^ v629;
  v668 = (v667 - 1883619463 - ((2 * v667) & 0x1F747EF2)) ^ v631;
  v669 = (v668 + 1697054864 - ((2 * v668) & 0xCA4E0120)) ^ v635;
  v670 = (v669 + 1858764334 - ((2 * v669) & 0xDD94FC5C)) ^ v638;
  v671 = (v615 >> 12) ^ 0x9567A6FA;
  v672 = (v670 - 1788404180 - ((2 * v670) & 0x2ACE3C58)) ^ v671;
  v673 = (v615 >> 11) ^ 0x28543CA9;
  v674 = (v672 + 676678917 - ((2 * v672) & 0x50AA9A0A)) ^ v673;
  v675 = (v613 >> 7) ^ 0x94BCD802;
  v676 = (v674 - 1800682809 - ((2 * v674) & 0x2957858E)) ^ v675;
  LODWORD(v600) = v643 ^ v642 ^ (v676 + 175063628 - ((2 * v676) & 0x14DE8498));
  LODWORD(STACK[0x5B4]) = v600;
  LODWORD(v600) = (v600 >> 21) ^ (v615 >> 31) ^ (v600 >> 27);
  LODWORD(STACK[0x5B0]) = v600;
  LODWORD(STACK[0x534]) = ((4 * v600) ^ 0x1E4) + 1425312056 + (~(2 * ((4 * v600) ^ 0x1E4)) | 0xFFFFED97);
  LOWORD(v676) = LODWORD(STACK[0x5B8]) + 22467 + LODWORD(STACK[0x5C0]);
  LODWORD(STACK[0x5C0]) = v615 ^ ~LODWORD(STACK[0x688]);
  LODWORD(v600) = (v615 >> 17) ^ (v613 >> 8) ^ STACK[0x5BC] & 0xEF ^ 0xB88A1 ^ (unsigned __int16)v676;
  LODWORD(v600) = (v600 + 470009068 - ((2 * v600) & 0x789D8)) ^ v629;
  LODWORD(v600) = (v600 - 1883619463 - ((2 * v600) & 0x1F747EF2)) ^ v631;
  LODWORD(v600) = (v600 - 1210046848 - ((2 * v600) & 0x6FC04D00)) ^ v662;
  LODWORD(v600) = (v600 + 1697054864 - ((2 * v600) & 0xCA4E0120)) ^ v635;
  LODWORD(v600) = (v600 - 1788404180 - ((2 * v600) & 0x2ACE3C58)) ^ v671;
  LODWORD(v600) = (v600 + 676678917 - ((2 * v600) & 0x50AA9A0A)) ^ v673;
  LODWORD(v600) = (v600 + 902098089 - ((2 * v600) & 0x6B89D952)) ^ LODWORD(STACK[0x3D0]);
  LODWORD(v600) = (v600 - 1923275361 - ((2 * v600) & 0x1ABA4B3E)) ^ LODWORD(STACK[0x34C]);
  LODWORD(v600) = (v600 - 1800682809 - ((2 * v600) & 0x2957858E)) ^ v675;
  v677 = LODWORD(STACK[0x348]) ^ v642 ^ (v600 + 175063628 - ((2 * v600) & 0x14DE8498));
  LODWORD(v600) = (4 * v613) ^ (v613 << 8) ^ (v613 << 15) ^ (v613 << 24) ^ (4 * v677);
  LODWORD(v600) = ((v600 ^ 0xB12C4958) - 1397554518 - 2 * ((v600 ^ 0xB12C4958) & 0x2CB302AF ^ v600 & 4)) ^ LODWORD(STACK[0x5D0]);
  LODWORD(v600) = (v600 + 1147321188 - ((2 * v600) & 0x88C576C8)) ^ LODWORD(STACK[0x5D8]);
  LODWORD(v600) = (v600 + 377860362 - ((2 * v600) & 0x2D0B6214)) ^ LODWORD(STACK[0x5DC]);
  LODWORD(v600) = (v600 + 1588219474 - ((2 * v600) & 0xBD549CA4)) ^ v593;
  LODWORD(v600) = (v600 + 1691629307 - ((2 * v600) & 0xC9A86DF6)) ^ LODWORD(STACK[0x5EC]);
  LODWORD(v600) = (v600 + 1043059859 - ((2 * v600) & 0x7C57A926)) ^ v648;
  LODWORD(v600) = (v600 - 1098115730 - ((2 * v600) & 0x7D182ADC)) ^ v651;
  LODWORD(v600) = (v600 + 628417459 - ((2 * v600) & 0x4AE9C766)) ^ LODWORD(STACK[0x5E4]);
  LODWORD(v600) = (v600 - 1168931966 - ((2 * v600) & 0x74A70704)) ^ LODWORD(STACK[0x5E0]);
  LODWORD(v600) = (v600 - 446182882 - ((2 * v600) & 0xCACF943C)) ^ LODWORD(STACK[0x5D4]);
  LODWORD(v600) = (v600 + 1031182801 - ((2 * v600) & 0x7AED33A2)) ^ LODWORD(STACK[0x3DC]);
  LODWORD(v600) = (v600 + 860532226 - ((2 * v600) & 0x66955C04)) ^ LODWORD(STACK[0x5E8]);
  LODWORD(v600) = (v600 - 762704287 - ((2 * v600) & 0xA5141CC2)) ^ LODWORD(STACK[0x6D8]);
  LODWORD(v600) = (v600 + 1409561855 - ((2 * v600) & 0xA80869FE)) ^ LODWORD(STACK[0x420]);
  v678 = v677 ^ LODWORD(STACK[0x564]) ^ (v600 - ((2 * v600) & 0x8A79B832) - 985867239);
  LOBYTE(v600) = (v677 ^ LOBYTE(STACK[0x564]) ^ (v600 - ((2 * v600) & 0x32) + 25)) & 5;
  v679 = (v677 ^ 0x7897FAB) << ((v600 ^ 1) + (v600 ^ 4));
  LODWORD(v600) = v677 >> 21;
  v680 = (4 * (v677 >> 21)) ^ (v677 << 11) ^ (32 * (v677 >> 21)) ^ (v677 >> 21 << 11) ^ v678 ^ v679;
  v681 = STACK[0x598];
  v682 = ((LODWORD(STACK[0x598]) << 17) ^ 0xD1580000)
       + 1031295769
       - ((2 * ((LODWORD(STACK[0x598]) << 17) ^ 0xD1580000)) & 0x7AF00000);
  v683 = LODWORD(STACK[0x278]) ^ (LODWORD(STACK[0x558]) >> 26) ^ LODWORD(STACK[0x3F0]) ^ (LODWORD(STACK[0x598]) >> 3) ^ 0xE67ECC5;
  v684 = (v683 + 183758098 - ((2 * v683) & 0x15E7DA26) + 1) ^ LODWORD(STACK[0x41C]);
  v685 = (v684 - 2004084352 - ((2 * v684) & 0x11183300)) ^ LODWORD(STACK[0x518]);
  v686 = (v685 + 995562885 - 2 * (v685 & 0x3B571595 ^ v684 & 0x10)) ^ LODWORD(STACK[0x408]);
  v687 = (v686 + 1693534676 - ((2 * v686) & 0xC9E293A8)) ^ LODWORD(STACK[0x414]);
  v688 = (v687 - 495662034 - ((2 * v687) & 0xC4E9985C)) ^ LODWORD(STACK[0x514]);
  v689 = LODWORD(STACK[0x40C]) ^ 0x63C0E8FF ^ (v688 - ((2 * v688) & 0xC7813780) + 1673567168);
  v690 = (v689 + 801775161 - ((2 * v689) & 0x5F943C72)) ^ LODWORD(STACK[0x51C]);
  v691 = (v690 - 670592594 - ((2 * v690) & 0xB00F235C)) ^ LODWORD(STACK[0x404]);
  v692 = (v691 - 1720632043 - ((2 * v691) & 0x32E27A2A)) ^ LODWORD(STACK[0x3E8]);
  v693 = (v692 - 937701194 - ((2 * v692) & 0x9037A16C)) ^ LODWORD(STACK[0x3E0]);
  v694 = (v693 - 1602565836 - ((2 * v693) & 0x40F59268)) ^ LODWORD(STACK[0x400]);
  v695 = LODWORD(STACK[0x644]) ^ (v694 + 1096359365 - ((2 * v694) & 0x82B23B8A));
  v696 = (v695 >> 27) ^ (v695 >> 21);
  LODWORD(STACK[0x688]) = v696;
  v697 = (2 * v681) ^ (v681 << 6) ^ (v681 << 29) ^ (4 * v695) ^ (v695 << 11) ^ (32 * v695) ^ (4 * v696) ^ (32 * v696) ^ (v696 << 11) ^ 0xCCA06EF4;
  v698 = (v697 + 1245792279 - ((2 * v697) & 0x9482902E)) ^ LODWORD(STACK[0x27C]);
  v699 = STACK[0x658];
  v700 = (v698 - 1806674821 - ((2 * v698) & 0x28A0A8F6)) ^ LODWORD(STACK[0x658]);
  v701 = STACK[0x650];
  v702 = (v700 + 1554625007 - ((2 * v700) & 0xB95363DE)) ^ LODWORD(STACK[0x650]);
  v703 = (v702 + 2116873648 - ((2 * v702) & 0xFC59DB60)) ^ LODWORD(STACK[0x6A0]);
  v704 = (v703 - 842784390 - ((2 * v703) & 0x9B8842F4)) ^ LODWORD(STACK[0x6A8]);
  v705 = STACK[0x6C8];
  v706 = (v704 - 1380683053 - ((2 * v704) & 0x5B68E5A6)) ^ LODWORD(STACK[0x6C8]);
  v707 = STACK[0x670];
  v708 = (v706 + 1256806602 - ((2 * v706) & 0x95D2B194)) ^ LODWORD(STACK[0x670]);
  v709 = (v708 - 482066750 - ((2 * v708) & 0xC6887D84)) ^ LODWORD(STACK[0x608]);
  v710 = (v709 + 1031295769 - ((2 * v709) & 0x7AF0A632)) ^ v682;
  v711 = (v710 + 485791539 - ((2 * v710) & 0x39E92E66)) ^ LODWORD(STACK[0x600]);
  v712 = STACK[0x660];
  v713 = (v711 - 873663130 - ((2 * v711) & 0x97D9EACC)) ^ LODWORD(STACK[0x660]);
  v714 = (v713 + 543620853 - ((2 * v713) & 0x40CDFDEA)) ^ LODWORD(STACK[0x648]);
  v715 = (v714 + 1425588524 - ((2 * v714) & 0xA9F18258)) ^ LODWORD(STACK[0x694]);
  v716 = STACK[0x6B0];
  v717 = (v715 - 2032006482 - ((2 * v715) & 0xDC4155C)) ^ LODWORD(STACK[0x6B0]);
  v718 = STACK[0x67C];
  v719 = (v717 + 1480201960 - ((2 * v717) & 0xB0742DD0)) ^ LODWORD(STACK[0x67C]);
  v720 = v695 ^ 0xE08CCE52 ^ (v719 - 407635752 - ((2 * v719) & 0xCF7E71B0) + 737280);
  LODWORD(STACK[0x6A8]) = v720 - ((2 * v720) & 0xA4051E76);
  LODWORD(v614) = LODWORD(STACK[0x528]) ^ (LODWORD(STACK[0x52C]) >> 27);
  v721 = (16 * v681) ^ (32 * v681) ^ (v681 << 30) ^ (4 * LODWORD(STACK[0x52C])) ^ (32 * LODWORD(STACK[0x52C])) ^ (LODWORD(STACK[0x52C]) << 11);
  LODWORD(STACK[0x694]) = v614;
  v722 = v721 ^ (4 * v614) ^ (32 * v614) ^ ((_DWORD)v614 << 11) ^ 0x311F0BEC;
  v723 = (v722 + 1554625007 - ((2 * v722) & 0xB95363DE)) ^ v701;
  v724 = (v723 - 1806674821 - ((2 * v723) & 0x28A0A8F6)) ^ v699;
  v725 = (v724 - 720297807 - ((2 * v724) & 0xAA224162)) ^ LODWORD(STACK[0x698]);
  v726 = (v725 - 1380683053 - ((2 * v725) & 0x5B68E5A6)) ^ v705;
  v727 = (v726 + 1256806602 - ((2 * v726) & 0x95D2B194)) ^ v707;
  v728 = (v727 + 1031295769 - ((2 * v727) & 0x7AF0A632)) ^ v682;
  v729 = (v728 - 2004207424 - ((2 * v728) & 0x11147180)) ^ LODWORD(STACK[0x620]);
  v730 = (v729 + 1761709710 - ((2 * v729) & 0xD2031D1C)) ^ LODWORD(STACK[0x668]);
  v731 = (v730 + 1697522742 - ((2 * v730) & 0xCA5C486C)) ^ LODWORD(STACK[0x6D0]);
  v732 = (v731 - 873663130 - ((2 * v731) & 0x97D9EACC)) ^ v712;
  v733 = (v732 + 430119940 - ((2 * v732) & 0x33463808)) ^ LODWORD(STACK[0x520]);
  v734 = (v733 - 2032006482 - ((2 * v733) & 0xDC4155C)) ^ v716;
  v735 = (v734 + 1480201960 - ((2 * v734) & 0xB0742DD0)) ^ v718;
  v736 = (v735 - 1601708455 - ((2 * v735) & 0x410FBCB2)) ^ LODWORD(STACK[0x59C]);
  v737 = LODWORD(STACK[0x42C]) ^ (v736 - ((2 * v736) & 0x47417680) - 1549747392) ^ 0x802045DC;
  v738 = LODWORD(STACK[0x530]) ^ 0x18F92A31 ^ (v737 - ((2 * v737) & 0x2B0D1CC4) + 361139810);
  LODWORD(STACK[0x6C8]) = v738 - ((2 * v738) & 0xF2F99E72);
  v739 = v680 ^ v600;
  LODWORD(v600) = v680 ^ v600 ^ 0x5F5291EB;
  v740 = ((4 * v600) ^ 0xE886512C) - 106098293 - ((2 * ((4 * v600) ^ 0xE886512C)) & 0xF35A2310);
  LODWORD(STACK[0x6D0]) = v740;
  v741 = (((_DWORD)v600 << 16) ^ 0x944B0000) + 1186063250 - ((2 * (((_DWORD)v600 << 16) ^ 0x944B0000)) & 0x8D620000);
  LODWORD(STACK[0x644]) = v741;
  v742 = ((8 * v600) ^ 0xD10CA258) - 1095043550 - ((2 * ((8 * v600) ^ 0xD10CA258)) & 0x7D75EC40);
  LODWORD(STACK[0x67C]) = v742;
  v743 = (((_DWORD)v600 << 10) ^ 0x86512C00) + 662362873 - ((2 * (((_DWORD)v600 << 10) ^ 0x86512C00)) & 0x4EF5B000);
  LODWORD(STACK[0x650]) = v743;
  v744 = (((_DWORD)v600 << 7) ^ 0x10CA2580) - 372185929 - ((2 * (((_DWORD)v600 << 7) ^ 0x10CA2580)) & 0xD3A1C900);
  LODWORD(STACK[0x648]) = v744;
  v745 = (((_DWORD)v600 << 14) ^ 0x6512C000) - 1626213737 - ((2 * (((_DWORD)v600 << 14) ^ 0x6512C000)) & 0x3E238000);
  v746 = (((_DWORD)v600 << 13) ^ 0x32896000) - 1276891384 - ((2 * (((_DWORD)v600 << 13) ^ 0x32896000)) & 0x67C84000);
  LODWORD(v623) = (((_DWORD)v600 << 20) ^ 0x44B00000)
                - 24912855
                - ((2 * (((_DWORD)v600 << 20) ^ 0x44B00000)) & 0xFD000000);
  LODWORD(STACK[0x620]) = v623;
  v747 = (((_DWORD)v600 << 25) ^ 0x96000000) - 1555089457 - ((2 * (((_DWORD)v600 << 25) ^ 0x96000000)) & 0x44000000);
  LODWORD(STACK[0x608]) = v747;
  v748 = (((_DWORD)v600 << 22) ^ 0x12C00000) + 2006878253 - (a40 & (2 * (((_DWORD)v600 << 22) ^ 0x12C00000)));
  LODWORD(STACK[0x6A0]) = v748;
  v749 = (((_DWORD)v600 << 24) ^ 0x4B000000) + 304640364 - ((2 * (((_DWORD)v600 << 24) ^ 0x4B000000)) & 0x24000000);
  LODWORD(STACK[0x670]) = v749;
  v750 = (((_DWORD)v600 << 26) ^ 0x2C000000) - 335176848 - ((2 * (((_DWORD)v600 << 26) ^ 0x2C000000)) & 0xD8000000);
  v751 = (2 * v600) ^ ((_DWORD)v600 << 6) ^ ((_DWORD)v600 << 17) ^ ((_DWORD)v600 << 29) ^ ((v739 ^ 0x257305A0) << (STACK[0x428] & 0x1C ^ 0xC | STACK[0x428] & 0x1C ^ 0x10)) ^ 0x34B03A56;
  v752 = (v751 + 1001294336 - ((2 * v751) & 0x775D1400)) ^ v739 ^ 0x1EDD8FA0;
  v753 = (v752 - 106098293 - ((2 * v752) & 0xF35A2316)) ^ v740;
  v754 = (v753 - 1095043550 - ((2 * v753) & 0x7D75EC44)) ^ v742;
  v755 = (v754 - 372185929 - ((2 * v754) & 0xD3A1C96E)) ^ v744;
  v756 = (v755 + 662362873 - ((2 * v755) & 0x4EF5B5F2)) ^ v743;
  v757 = (v756 - 1276891384 - ((2 * v756) & 0x67C85E10)) ^ v746;
  v758 = (v757 - 1626213737 - ((2 * v757) & 0x3E23E52E)) ^ v745;
  v759 = (v758 + 1186063250 - ((2 * v758) & 0x8D63C724)) ^ v741;
  v760 = (((v759 - 24912855 - ((2 * v759) & 0xFD07B852)) ^ v623)
        + 2006878253
        - 2
        * (((v759 - 24912855 - ((2 * v759) & 0xFD07B852)) ^ v623) & 0x779E883D ^ ((_BYTE)v759
                                                                                + 41
                                                                                - ((2 * (_BYTE)v759) & 0x52)
                                                                                + 32) & 0x10)) ^ v748;
  v761 = (v760 + 304640364 - ((2 * v760) & 0x2450E2D8)) ^ v749;
  v762 = (v761 - 1555089457 - ((2 * v761) & 0x469E6F9E)) ^ v747;
  v763 = v762 - 335176848 - ((2 * v762) & 0xD80B36E0);
  LODWORD(STACK[0x668]) = v680 >> 31;
  LODWORD(v614) = (v680 >> 26) ^ (v680 >> 15) ^ (v680 >> 31) ^ (v600 >> 3);
  v764 = (v680 >> 30) ^ 0x246CF9A2;
  LODWORD(STACK[0x660]) = v764;
  LODWORD(v614) = ((v614 ^ 0xF447866) + 611121570 - 2 * ((v614 ^ 0xF447866) & 0x46CF9AB ^ v614 & 9)) ^ v764;
  LODWORD(v614) = (v680 >> 29) ^ 0x2E39630C ^ (v614 + 775512844 - ((2 * v614) & 0x5C72C61A) + 1);
  LODWORD(v623) = (v680 >> 25) ^ 0x57040C8A;
  LODWORD(v614) = (v614 + 1459883160 - ((2 * v614) & 0xAE081930)) ^ v623;
  v765 = (v680 >> 22) ^ 0x98E091F0;
  LODWORD(v614) = (v614 - 1730113179 - ((2 * v614) & 0x31C122CA)) ^ v765;
  v766 = (v680 >> 18) ^ 0x9A7CE267;
  LODWORD(v614) = (v614 - 1703089349 - ((2 * v614) & 0x34F9D676)) ^ v766;
  v767 = (v680 >> 19) ^ 0x6909A490;
  LODWORD(STACK[0x5BC]) = v767;
  LODWORD(v614) = (v614 + 1762238526 - ((2 * v614) & 0xD213407C)) ^ v767;
  v768 = HIWORD(v680) ^ 0xCF082DFB;
  LODWORD(v614) = (v614 - 821557112 - ((2 * v614) & 0x9E101110)) ^ v768;
  v769 = (v680 >> 12) ^ 0x6DE46F21;
  LODWORD(v614) = (v614 + 1843804177 - ((2 * v614) & 0xDBCC7022)) ^ v769;
  v770 = (v739 >> 10) ^ 0xBEED4A5F;
  LODWORD(STACK[0x600]) = v770;
  LODWORD(v614) = (v614 - 1092348258 - ((2 * v614) & 0x7DC82D3C)) ^ v770;
  v771 = (v739 >> 8) ^ 0x6F7AD28C;
  LODWORD(STACK[0x5D4]) = v771;
  LODWORD(v614) = (v614 + 1868538249 - ((2 * v614) & 0xDEBF4312)) ^ v771;
  LODWORD(STACK[0x658]) = v600 >> 7;
  v772 = (v600 >> 7) ^ 0x47792A5C;
  LODWORD(v614) = (v614 + 1200449908 - ((2 * v614) & 0x8F1AD2E8)) ^ v772;
  LODWORD(STACK[0x59C]) = v750;
  v773 = (v763 ^ v750) - ((2 * (v763 ^ v750)) & 0x1D679FC4);
  v774 = (((_DWORD)v600 << 11) ^ 0xCA25800) + 1637027974 - ((2 * (((_DWORD)v600 << 11) ^ 0xCA25800)) & 0xC3262000);
  LODWORD(STACK[0x5B8]) = v774;
  v775 = (v739 >> 6) ^ 0xCFCA2F17;
  LODWORD(STACK[0x5D0]) = v775;
  v776 = v775 ^ (v600 >> 4);
  LODWORD(v614) = v776 ^ (v614 - 815799551 - ((2 * v614) & 0x9EBFC602));
  v777 = (v614 >> 27) ^ (v614 >> 21);
  LODWORD(STACK[0x6B0]) = v777;
  v778 = v614 ^ (32 * v614) ^ ((_DWORD)v614 << 11) ^ (4 * (v614 ^ v777)) ^ (32 * v777) ^ (v777 << 11) ^ (v773 + 246665186) ^ 0xF3115462;
  LODWORD(STACK[0x698]) = v778 - 376696832 - (a39 & (2 * v778));
  LODWORD(v614) = v745 ^ ((_DWORD)v600 << 12);
  v779 = v746 ^ 0xCA4E9260 ^ v614;
  LODWORD(v614) = v614 ^ 0x86554297;
  v780 = (v779 + v614 + 1) ^ ((v746 ^ 0x4C1BD0F7) + 1);
  v781 = ((v780 - 1276891384 - ((2 * v780) & 0x67C85E10)) ^ v746) + v614;
  v782 = (((_DWORD)v600 << 18) ^ 0x512C0000) + 782865495 - ((2 * (((_DWORD)v600 << 18) ^ 0x512C0000)) & 0x5D500000);
  v783 = (((_DWORD)v600 << 21) ^ 0x89600000) - 1951336261 - ((2 * (((_DWORD)v600 << 21) ^ 0x89600000)) & 0x17400000);
  LODWORD(STACK[0x564]) = v783;
  v784 = (v680 >> 13) ^ (v680 >> 20) ^ (v600 >> 1) ^ 0x3D11E3EA ^ (unsigned __int16)((v739 ^ 0x257305A0) >> ((v680 >> 25) & 0x13 ^ 1 | (v680 >> 25) & 0x13 ^ 0x12));
  v785 = (v784 + 1459883160 - ((2 * v784) & 0xAE081930)) ^ v623;
  v786 = (v785 - 1730113179 - ((2 * v785) & 0x31C122CA)) ^ v765;
  v787 = (v680 >> 21) ^ 0x7A492421;
  v788 = (v786 + 2051613962 - ((2 * v786) & 0xF4924A14)) ^ v787;
  v789 = (v788 - 1703089349 - ((2 * v788) & 0x34F9D676)) ^ v766;
  v790 = (v789 - 821557112 - ((2 * v789) & 0x9E101110)) ^ v768;
  v791 = (v680 >> 14) ^ 0xC9179DB1;
  v792 = (v790 - 921237379 - ((2 * v790) & 0x922E10FA)) ^ v791;
  v793 = (v792 + 1843804177 - ((2 * v792) & 0xDBCC7022)) ^ v769;
  LODWORD(v614) = (v680 >> 11) ^ 0xFD27669;
  v794 = (v793 + 265738249 - ((2 * v793) & 0x1FADB012)) ^ v614;
  v795 = (v794 + 1200449908 - ((2 * v794) & 0x8F1AD2E8)) ^ v772;
  v796 = v776 ^ (v795 - 815799551 - ((2 * v795) & 0x9EBFC602));
  v797 = ((4 * v796) ^ 0x1E886510) - 1214961010 - ((2 * ((4 * v796) ^ 0x1E886510)) & 0x6F2A5518);
  v798 = ((_DWORD)v600 << 19) ^ (v739 << 31) ^ ((_DWORD)v600 << 28) ^ v781 ^ (LODWORD(STACK[0x424])
                                                                            - ((2 * LODWORD(STACK[0x424])) & 0x24270C02)
                                                                            - 1844214271) ^ v796;
  v799 = ((v798 ^ 0x87E99F45) + 1001294336 + ((2 * ((v798 ^ 0x87E99F45) & 0x3BAE8A0C ^ v798 & 0xC)) ^ 0xFFFFFFF7) + 1) ^ v739 ^ 0x1EDD8FA0;
  LODWORD(v593) = STACK[0x648];
  v800 = (v799 - 372185929 - ((2 * v799) & 0xD3A1C96E)) ^ LODWORD(STACK[0x648]);
  v801 = STACK[0x650];
  v802 = (v800 + 662362873 - ((2 * v800) & 0x4EF5B5F2)) ^ LODWORD(STACK[0x650]);
  v803 = (v802 + 1637027974 - ((2 * v802) & 0xC326210C)) ^ v774;
  v804 = STACK[0x644];
  v805 = (v803 + 1186063250 - ((2 * v803) & 0x8D63C724)) ^ LODWORD(STACK[0x644]);
  v806 = STACK[0x620];
  v807 = (v805 - 24912855 - ((2 * v805) & 0xFD07B852)) ^ LODWORD(STACK[0x620]);
  v808 = (v807 - 1951336261 - ((2 * v807) & 0x1761F176)) ^ v783;
  v809 = (v808 + 782865495 - ((2 * v808) & 0x5D5328AE)) ^ v782;
  v810 = STACK[0x608];
  v811 = ((((_DWORD)v600 << 26) ^ 0x2C000000) - 335176848 - ((2 * (((_DWORD)v600 << 26) ^ 0x2C000000)) & 0xD8000000)) ^ LODWORD(STACK[0x608]) ^ (v809 - 1555089457 - ((2 * v809) & 0x469E6F9E));
  v812 = LODWORD(STACK[0x668]) ^ (v796 >> 21) ^ (v796 >> 27);
  LODWORD(STACK[0x668]) = v812;
  v813 = (((v680 >> 29) & 3 ^ 1) + 611121570 + ((2 * (((v680 >> 29) & 3 ^ 1 | 0x7FFFFFF2) ^ (v680 >> 29))) | 0x19) + 1) ^ LODWORD(STACK[0x660]) | (v680 >> 29) & 4;
  v814 = (32 * v796) ^ (v796 << 11) ^ (4 * v812) ^ (32 * v812) ^ ((unint64_t)(v812 ^ 0x3Du) << (38 - (v812 & 0x1B ^ 0x19 | v812 & 0x1B ^ 2u))) ^ 0xE4890FD4 ^ ((v811 ^ 0xEC059B70) + (v797 ^ 0xB7952A8E) - 2 * ((v811 ^ 0x6C059B70) & (v797 ^ 0x37952A8E)));
  LODWORD(STACK[0x660]) = v814 - ((2 * v814) & 0x77CD0708);
  v815 = (v680 >> 17) ^ HIBYTE(v680) ^ (v739 >> 9) ^ (v739 >> 5) ^ 0x1393333 ^ v813;
  v816 = (v815 - 815799551 - ((2 * v815) & 0x1EBFC602)) ^ LODWORD(STACK[0x5D0]);
  v817 = (v816 + 1459883160 - ((2 * v816) & 0x2E081930)) ^ v623;
  v818 = (v817 - 1730113179 - ((2 * v817) & 0x31C122CA)) ^ v765;
  v819 = (v818 + 2051613962 - ((2 * v818) & 0xF4924A14)) ^ v787;
  v820 = (v819 + 1762238526 - ((2 * v819) & 0xD213407C)) ^ LODWORD(STACK[0x5BC]);
  v821 = (v820 - 821557112 - ((2 * v820) & 0x9E101110)) ^ v768;
  v822 = (v821 - 921237379 - ((2 * v821) & 0x922E10FA)) ^ v791;
  v823 = (v822 + 1843804177 - ((2 * v822) & 0xDBCC7022)) ^ v769;
  v824 = (v823 + 265738249 - ((2 * v823) & 0x1FADB012)) ^ v614;
  v825 = (v824 - 1092348258 - ((2 * v824) & 0x7DC82D3C)) ^ LODWORD(STACK[0x600]);
  v826 = LODWORD(STACK[0x658]) ^ LODWORD(STACK[0x5D4]) ^ (v825 + 1868538249 - ((2 * v825) & 0xDEBF4312));
  LODWORD(v600) = (v739 << 27) ^ (v739 << 15) ^ ((_DWORD)v600 << 8) ^ (((v739 << 23) ^ 0xD0000000)
                                                                     + 304640364
                                                                     - ((2 * ((v739 << 23) ^ 0xD0000000)) & 0x24000000)) ^ LODWORD(STACK[0x670]) ^ 0xA3444B00;
  LODWORD(v600) = (v600 + 1186063250 - ((2 * v600) & 0x8D63C73C)) ^ v804;
  LODWORD(v600) = (v600 - 1095043550 - ((2 * v600) & 0x7D75EC44)) ^ LODWORD(STACK[0x67C]);
  LODWORD(v600) = (v600 - 106098293 - ((2 * v600) & 0xF35A2316)) ^ LODWORD(STACK[0x6D0]);
  LODWORD(v600) = (v600 - 372185929 - ((2 * v600) & 0xD3A1C96E)) ^ v593;
  LODWORD(v600) = (v600 + 662362873 - ((2 * v600) & 0x4EF5B5F2)) ^ v801;
  LODWORD(v600) = (v600 + 1637027974 - ((2 * v600) & 0xC326210C)) ^ LODWORD(STACK[0x5B8]);
  LODWORD(v600) = (v600 - 1276891384 - ((2 * v600) & 0x67C85E10)) ^ v746;
  LODWORD(v600) = (v600 + 782865495 - ((2 * v600) & 0x5D5328AE)) ^ v782;
  LODWORD(v600) = (((v600 - 24912855 - ((2 * v600) & 0xFD07B852)) ^ v806)
                 - 1951336261
                 - 2
                 * (((v600 - 24912855 - ((2 * v600) & 0xFD07B852)) ^ v806) & 0xBB0F8BF ^ (v600
                                                                                        - 24912855
                                                                                        - ((2 * v600) & 0xFD07B852)) & 4)) ^ LODWORD(STACK[0x564]);
  LODWORD(v600) = (v600 + 2006878253 - ((2 * v600) & 0xEF3D105A)) ^ LODWORD(STACK[0x6A0]);
  LODWORD(v600) = (v600 - 1555089457 - ((2 * v600) & 0x469E6F9E)) ^ v810;
  LODWORD(v600) = ((v613 ^ 0xFAA297C2) << 12) ^ (LODWORD(STACK[0x5C0]) << 31) ^ (4 * LODWORD(STACK[0x5B4])) ^ (32 * LODWORD(STACK[0x5B4])) ^ (LODWORD(STACK[0x5B4]) << 11) ^ LODWORD(STACK[0x5B0]) ^ (32 * LODWORD(STACK[0x5B0])) ^ (LODWORD(STACK[0x5B0]) << 11) ^ LODWORD(STACK[0x534]) ^ (v600 - 335176848 - ((2 * v600) & 0xD80B36E0));
  v827 = LODWORD(STACK[0x59C]) ^ (32 * v826) ^ (v826 << 11) ^ (4 * v826) ^ (v826 >> 21 << 11) ^ (32 * (v826 >> 21)) ^ (4 * (v826 >> 21)) ^ v600 ^ 0x5D0E008E;
  LODWORD(v600) = (v827 + 1147321188 - 2 * (v827 & 0x4462BB65 ^ v600 & 1)) ^ LODWORD(STACK[0x5D8]);
  LODWORD(v600) = v613 ^ 0x3D84B78 ^ (v600 - ((2 * v600) & 0x10AA538A) + 139798981);
  LODWORD(v600) = (v600 + 377860362 - ((2 * v600) & 0x2D0B6214)) ^ LODWORD(STACK[0x5DC]);
  LODWORD(v600) = (v600 + 1043059859 - ((2 * v600) & 0x7C57A926)) ^ LODWORD(STACK[0x5F0]);
  LODWORD(v600) = (v600 + 1691629307 - ((2 * v600) & 0xC9A86DF6)) ^ LODWORD(STACK[0x5EC]);
  LODWORD(v600) = (v600 - 2079086876 - ((2 * v600) & 0x8274DC8)) ^ LODWORD(STACK[0x5FC]);
  LODWORD(v600) = (v600 + 1588219474 - ((2 * v600) & 0xBD549CA4)) ^ LODWORD(STACK[0x5A0]);
  LODWORD(v600) = (v600 - 1098115730 - ((2 * v600) & 0x7D182ADC)) ^ LODWORD(STACK[0x5F8]);
  LODWORD(v600) = (v600 - 1948965288 - ((2 * v600) & 0x17AA4CB0)) ^ LODWORD(STACK[0x474]);
  LODWORD(v600) = (v600 + 628417459 - ((2 * v600) & 0x4AE9C766)) ^ LODWORD(STACK[0x5E4]);
  LODWORD(v600) = (v600 - 1168931966 - ((2 * v600) & 0x74A70704)) ^ LODWORD(STACK[0x5E0]);
  LODWORD(v600) = (((v600 + 860532226 - ((2 * v600) & 0x66955C04)) ^ LODWORD(STACK[0x5E8]))
                 - 762704287
                 - 2
                 * (((v600 + 860532226 - ((2 * v600) & 0x66955C04)) ^ LODWORD(STACK[0x5E8])) & 0x528A0E75 ^ (v600 + 860532226 - ((2 * v600) & 0x66955C04)) & 0x14)) ^ LODWORD(STACK[0x6D8]);
  LODWORD(v600) = (v600 - 1418409489 - ((2 * v600) & 0x56E993DE)) ^ LODWORD(STACK[0x468]);
  LODWORD(v600) = LODWORD(STACK[0x5B4]) ^ 0x96B37532 ^ (v600 - ((2 * v600) & 0x334314CA) - 1717466523);
  v828 = v826 ^ LODWORD(STACK[0x46C]) ^ (v600 - ((2 * v600) & 0x2DAC342) + 23945633);
  v829 = v828 ^ (v826 >> 21);
  v830 = STACK[0x3CC];
  LODWORD(STACK[0x670]) = (LODWORD(STACK[0x3CC]) ^ 0x2B37823) << ((v829 ^ 0x88) & 0xD ^ 5) << ((v829 ^ 0x88) & 0xD ^ 8);
  v831 = STACK[0x624];
  LODWORD(STACK[0x6D0]) = ((LODWORD(STACK[0x624]) << 19) ^ 0x3AE00000)
                        + 1929538202
                        - ((2 * ((LODWORD(STACK[0x624]) << 19) ^ 0x3AE00000)) & 0xE6000000);
  v832 = ((v831 << 14) ^ 0x69D70000) - 1281598496 - ((2 * ((v831 << 14) ^ 0x69D70000)) & 0x67388000);
  LODWORD(STACK[0x6A0]) = v832;
  LODWORD(STACK[0x6D8]) = ((v831 << 28) ^ 0xC0000000) + 1120214494 + (((v831 << 28) ^ 0xC0000000) >> 30 << 31);
  v833 = STACK[0x628];
  v834 = v831;
  LODWORD(v600) = (LODWORD(STACK[0x628]) >> 28) ^ (LODWORD(STACK[0x628]) >> 27) ^ (LODWORD(STACK[0x628]) >> 15) ^ LODWORD(STACK[0x364]) ^ (v831 >> 2) ^ 0x323D6CE7;
  LODWORD(v600) = (v600 + 1522330772 - ((2 * v600) & 0x3579D928)) ^ LODWORD(STACK[0x378]);
  v835 = STACK[0x398];
  LODWORD(v600) = (v600 + 1993745503 - ((2 * v600) & 0xEDAC48BE)) ^ LODWORD(STACK[0x398]);
  v836 = (LODWORD(STACK[0x628]) >> 18) ^ 0xA9184FD6;
  LODWORD(v600) = (v600 - 1458024582 - ((2 * v600) & 0x52309EF4)) ^ v836;
  LODWORD(v623) = STACK[0x38C];
  LODWORD(v600) = (v600 - 1695404145 - ((2 * v600) & 0x35E45F1E)) ^ LODWORD(STACK[0x38C]);
  v837 = (LODWORD(STACK[0x628]) >> 13) ^ 0xBECFB6AE;
  LODWORD(v600) = (v600 - 1093688523 - ((2 * v600) & 0x7D9F466A)) ^ v837;
  v838 = STACK[0x380];
  LODWORD(v600) = (v600 - 1401840346 - ((2 * v600) & 0x58E33A4C)) ^ LODWORD(STACK[0x380]);
  LODWORD(v600) = (v600 + 2045122761 - ((2 * v600) & 0xF3CC3192)) ^ LODWORD(STACK[0x360]);
  LODWORD(v600) = (v600 - 691859368 - ((2 * v600) & 0xAD8620B0)) ^ LODWORD(STACK[0x35C]);
  v839 = STACK[0x37C];
  LODWORD(v600) = (v600 - 1578405969 - ((2 * v600) & 0x43D6DF5E)) ^ LODWORD(STACK[0x37C]);
  LODWORD(v614) = (v834 >> 4) ^ LODWORD(STACK[0x294]) ^ (v600 - ((2 * v600) & 0xA963B5A8) - 726541612);
  LODWORD(STACK[0x67C]) = v614;
  v840 = v614 ^ 0xD2F677EE;
  LODWORD(v600) = ((v840 >> 26) & 0x1C) + ((v840 >> 27) ^ 0x7AFFEFEF);
  LODWORD(v614) = ((v840 >> 20) & 0xB4C ^ 0x48) + ((v840 >> 21) ^ 0xBF36FDC2);
  LODWORD(v600) = v600 + v614 - 2 * ((v614 + 1086915162) & (v600 + 83890194)) - 976678292;
  LODWORD(STACK[0x658]) = (v600 ^ a37) + ((2 * v600) & 0xFFDFF78C);
  LODWORD(v600) = (((v834 >> 1) ^ (v833 >> 20) ^ 0x647AD385)
                 - 1401840346
                 - 2 * (((v834 >> 1) ^ (v833 >> 20) ^ 0x647AD385) & 0x2C719D36 ^ ((v834 >> 1) ^ (v833 >> 20)) & 0x10)) ^ v838;
  LODWORD(v600) = (v600 + 1063512307 - ((2 * v600) & 0x7EC7D1E6)) ^ LODWORD(STACK[0x368]);
  LODWORD(v600) = (v600 - 1186669328 - ((2 * v600) & 0x7289B9E0)) ^ LODWORD(STACK[0x388]);
  LODWORD(v600) = (v600 + 1993745503 - ((2 * v600) & 0xEDAC48BE)) ^ v835;
  LODWORD(v600) = (v600 - 16077968 - ((2 * v600) & 0xFE1556E0)) ^ LODWORD(STACK[0x39C]);
  LODWORD(v600) = (v600 - 358612625 - ((2 * v600) & 0xD54002DE)) ^ LODWORD(STACK[0x394]);
  LODWORD(v600) = (v600 - 1458024582 - ((2 * v600) & 0x52309EF4)) ^ v836;
  LODWORD(v600) = (v600 + 1060220247 - ((2 * v600) & 0x7E635AAE)) ^ LODWORD(STACK[0x390]);
  LODWORD(v600) = (v600 - 1695404145 - ((2 * v600) & 0x35E45F1E)) ^ v623;
  LODWORD(v600) = (v600 - 1093688523 - ((2 * v600) & 0x7D9F466A)) ^ v837;
  LODWORD(v600) = (v600 - 549616376 - ((2 * v600) & 0xBE7B0A10)) ^ LODWORD(STACK[0x384]);
  LODWORD(v600) = (v834 >> 4) ^ v839 ^ (v600 - 1578405969 - ((2 * v600) & 0x43D6DF5E));
  v841 = (v600 >> 27) ^ (v833 >> 31) ^ (v600 >> 21);
  v842 = ((v834 << 31) | 0x7A0FA540) ^ (v834 << 12) ^ (4 * v600) ^ ((_DWORD)v600 << 11) ^ (32 * v600) ^ (4 * v841) ^ (v841 << 11) ^ (32 * v841) ^ LODWORD(STACK[0x694]) ^ (LODWORD(STACK[0x6C8]) - 109260999);
  v843 = v830 ^ 0x44096AE1 ^ (v842 - ((2 * v842) & 0x8D742584) + 1186599618);
  v844 = (v843 + 1012149900 - ((2 * v843) & 0x78A85D18)) ^ LODWORD(STACK[0x3C4]);
  v845 = (v844 + 1715865532 - ((2 * v844) & 0xCC8C0F78)) ^ LODWORD(STACK[0x3C0]);
  v846 = (v845 - 157871880 - ((2 * v845) & 0xED2E21F0)) ^ LODWORD(STACK[0x640]);
  v847 = (v846 - 498052695 - ((2 * v846) & 0xC4A0A352)) ^ LODWORD(STACK[0x3BC]);
  v848 = (v847 - 1281598496 - ((2 * v847) & 0x6738B7C0)) ^ v832;
  v849 = (v848 + 1256799278 - ((2 * v848) & 0x95D2785C)) ^ LODWORD(STACK[0x3B8]);
  v850 = (v849 + 521023488 - ((2 * v849) & 0x3E1C6000)) ^ LODWORD(STACK[0x638]);
  v851 = (v850 + 1929538202 - ((2 * v850) & 0xE604D534)) ^ LODWORD(STACK[0x6D0]);
  v852 = (v851 + 888420411 - ((2 * v851) & 0x69E87076)) ^ LODWORD(STACK[0x3B4]);
  v853 = (v852 - 959298149 - ((2 * v852) & 0x8DA48B36)) ^ LODWORD(STACK[0x634]);
  v854 = (v853 + 1957331248 - ((2 * v853) & 0xE9550260)) ^ LODWORD(STACK[0x3B0]);
  v855 = (v854 + 1733877356 - ((2 * v854) & 0xCEB1BCD8)) ^ LODWORD(STACK[0x630]);
  v856 = (v855 + 1120214494 - ((2 * v855) & 0x858A3BBC)) ^ LODWORD(STACK[0x6D8]);
  LODWORD(STACK[0x694]) = v841 ^ v600 ^ (v856 - ((2 * v856) & 0x981B6A70) + 1275966776);
  v857 = ((v828 >> 29) | 0x8D722A58) ^ ((v828 >> 30) | 0x27CD22F4);
  v858 = (((v829 ^ 0xDB837B88) << 13) ^ 0x586CA000)
       + 1233495116
       - ((2 * (((v829 ^ 0xDB837B88) << 13) ^ 0x586CA000)) & 0x930B4000);
  v859 = (((v829 ^ 0xDB837B88) << 11) ^ 0x161B2800)
       + 1465606519
       - ((2 * (((v829 ^ 0xDB837B88) << 11) ^ 0x161B2800)) & 0xAEB6C000);
  v860 = (((v829 ^ 0xDB837B88) << 18) ^ 0xD940000)
       + 339054508
       - ((2 * (((v829 ^ 0xDB837B88) << 18) ^ 0xD940000)) & 0x28680000);
  v861 = (((v829 ^ 0xDB837B88) << 27) ^ 0x28000000)
       + 1703080101
       - ((((v829 ^ 0xDB837B88) << 27) ^ 0x28000000) >> 29 << 30);
  v862 = v829 ^ 0xC2E1B8ED;
  LODWORD(v614) = v862 >> (STACK[0x598] & 0xF ^ 0xC) >> (STACK[0x598] & 0xF ^ 3);
  v863 = v614 + 1461306064 - ((2 * v614) & 0xAE3385A0);
  LODWORD(v614) = (((v829 ^ 0xDB837B88) << 23) ^ 0xB2800000)
                + 1847591631
                - ((2 * (((v829 ^ 0xDB837B88) << 23) ^ 0xB2800000)) & 0xDC000000);
  v864 = (v828 >> 28) ^ (v828 >> 27) ^ (v828 >> 18);
  v865 = (v864 ^ 0x30AC) + 1461306064 - 2 * ((v864 ^ 0x30AC) & 0x2D3 ^ v864 & 3);
  v866 = (((v829 ^ 0xDB837B88) << 26) ^ 0x94000000)
       - 1163071408
       - ((2 * (((v829 ^ 0xDB837B88) << 26) ^ 0x94000000)) & 0x70000000);
  v867 = (((v829 ^ 0xDB837B88) << 22) ^ 0xD9400000)
       - 1517283024
       - ((2 * (((v829 ^ 0xDB837B88) << 22) ^ 0xD9400000)) & 0x4B000000);
  v868 = (v828 >> 13) ^ ((v829 ^ 0xDB837B88) >> 4) ^ v863 ^ 0x1903B3B ^ v865;
  v869 = (v868 - 1430320983 - ((2 * v868) & 0x557E1152)) ^ v857;
  v870 = (v828 >> 21) ^ 0x3C937E8F;
  v871 = (v869 + 1016297624 - ((2 * v869) & 0x7926F130)) ^ v870;
  v872 = (v828 >> 19) ^ 0x7886253C;
  v873 = (v871 + 2022063456 - ((2 * v871) & 0xF10C7AC0)) ^ v872;
  v874 = (v828 >> 14) ^ 0x90A70117;
  v875 = (v873 - 1868297583 - ((2 * v873) & 0x21481522)) ^ v874;
  v876 = (v828 >> 11) ^ 0x8492FF53;
  v877 = (v875 - 2071288988 - ((2 * v875) & 0x91546C8)) ^ v876;
  v878 = (v829 >> 10) ^ 0x9CA5DE6F;
  v879 = (v877 - 1667930623 - ((2 * v877) & 0x392ACC02)) ^ v878;
  LODWORD(v593) = (v829 >> 9) ^ 0x523CDB67;
  v880 = (v879 + 1381870523 - ((2 * v879) & 0xA4BB5776)) ^ v593;
  v881 = (v829 >> 6) ^ ((v829 ^ 0xDB837B88) >> 5) ^ 0x9305B5F8;
  v882 = v881 ^ (v880 - 1878117605 - ((2 * v880) & 0x201C6636));
  v883 = v882 ^ ((v829 ^ 0xDB837B88) >> 2);
  v884 = (v883 >> 27) ^ (v863 >> 30) ^ (v883 >> 21);
  v885 = (LODWORD(STACK[0x6B0]) | (v829 << 30)) ^ (32 * (v829 ^ 0xDB837B88)) ^ (16 * (v829 ^ 0xDB837B88)) ^ ((v829 ^ 0xDB837B88) << 14) ^ ((v829 ^ 0xDB837B88) << 17) ^ ((v829 ^ 0xDB837B88) << 19) ^ ((v829 ^ 0xDB837B88) << 28) ^ (4 * v883) ^ (32 * v883) ^ (v884 | (v883 << 11)) ^ (4 * v884) ^ (LODWORD(STACK[0x698]) + 1025);
  v886 = (32 * v884) ^ (v884 << 11) ^ 0x3BCEF3C5 ^ v885;
  v887 = v886 - 126134111 - 2 * (v886 & 0x787B58B3 ^ v885 & 0x12);
  v888 = (4 * (v829 ^ 0xDB837B88)) ^ (8 * (v829 ^ 0xDB837B88)) ^ 0x56E64E1D;
  v889 = ((v887 ^ v888) + 1465606519 - ((2 * (v887 ^ v888)) & 0xAEB6C2EE)) ^ v859;
  v890 = (v889 + 1233495116 - ((2 * v889) & 0x930B4898)) ^ v858;
  v891 = (v890 + 339054508 - ((2 * v890) & 0x286B1F58)) ^ v860;
  LODWORD(v623) = (((v829 ^ 0xDB837B88) << 21) ^ 0x6CA00000)
                + 1193923779
                + (~(2 * (((v829 ^ 0xDB837B88) << 21) ^ 0x6CA00000)) | 0x71BFFFFF)
                + 1;
  v892 = (v891 + 1193923779 - ((2 * v891) & 0x8E53A986)) ^ v623;
  v893 = (v892 - 1517283024 - ((2 * v892) & 0x4B203260)) ^ v867;
  v894 = (v893 + 1847591631 - ((2 * v893) & 0xDC40059E)) ^ v614;
  v895 = (v894 - 1163071408 - ((2 * v894) & 0x7559E0A0)) ^ v866;
  LODWORD(STACK[0x6C8]) = v883 ^ v861 ^ (v895 + 1703080101 - ((2 * v895) & 0xCB05E14A));
  v896 = (v828 >> 22) ^ HIBYTE(v828) ^ (v828 >> 25) ^ (v828 >> 17) ^ HIWORD(v828) ^ (v828 >> 12) ^ (v829 >> 7) ^ (v829 >> 8) ^ 0x14BACEB;
  v897 = (v896 + 1016297624 - ((2 * v896) & 0x7926F130)) ^ v870;
  v898 = (v897 - 1430320983 - ((2 * v897) & 0x557E1152)) ^ v857;
  v899 = (v898 + 2022063456 - ((2 * v898) & 0x710C7AC0)) ^ v872;
  v900 = (v899 - 1868297583 - ((2 * v899) & 0x21481522)) ^ v874;
  v901 = (v900 - 2071288988 - ((2 * v900) & 0x91546C8)) ^ v876;
  v902 = (v901 - 1667930623 - ((2 * v901) & 0x392ACC02)) ^ v878;
  v903 = (v902 + 1381870523 - ((2 * v902) & 0xA4BB5776)) ^ v593;
  v904 = v881 ^ (v903 - 1878117605 - ((2 * v903) & 0x201C6636));
  v905 = (LODWORD(STACK[0x668]) | (v829 << 24)) ^ (v829 << 25) ^ ((v829 ^ 0xDB837B88) << 8) ^ ((v829 ^ 0xDB837B88) << 7) ^ ((v829 ^ 0xDB837B88) << 10) ^ ((v829 ^ 0xDB837B88) << 16) ^ ((v829 ^ 0xDB837B88) << 20);
  v906 = ((32 * v904) ^ 0x1962C360) + 2072126902 - ((2 * ((32 * v904) ^ 0x1962C360)) & 0xF7044B40);
  LOBYTE(v897) = (-2 - (((32 * v904) ^ 0x60) - 74 - ((2 * ((32 * v904) ^ 0x60)) & 0x40))) & 0x80;
  v907 = (4 * v904) ^ (32 * (v904 >> 21)) ^ __ROR4__(v904, 21) ^ (v904 >> 21 << 11) ^ 0x5B9CB0AA ^ ((unint64_t)((v904 >> 21) ^ 6) << ((119 * ((v897 ^ 0x8E) + v897)) & 0xFE));
  v908 = v904 ^ 0x176E7859 ^ (v907 - ((2 * v907) & 0x2F4ADC84) + 396717634);
  LODWORD(v862) = v905 ^ v888 ^ (v862 << ((85 * ((v882 & 0xD3 ^ 0x13) + (v882 & 0xD3 ^ 0xC0))) | 6u)) ^ (v908 - 126134111 - ((2 * v908) & 0xF0F6B142));
  LODWORD(STACK[0x668]) = v862;
  v909 = LODWORD(STACK[0x660]) + 1004962692;
  LODWORD(STACK[0x660]) = v909;
  LODWORD(STACK[0x650]) = v862 ^ v909;
  v910 = ((((v859 ^ 0xF627A14E ^ v862 ^ v909) + 1233495116 - ((2 * (v859 ^ 0xF627A14E ^ v862 ^ v909)) & 0x930B4898)) ^ v858)
        + 339054508
        - ((2
          * (((v859 ^ 0xF627A14E ^ v862 ^ v909) + 1233495116 - ((2 * (v859 ^ 0xF627A14E ^ v862 ^ v909)) & 0x930B4898)) ^ v858)) & 0x286B1F58)) ^ v860;
  v911 = (v910 + 1193923779 - ((2 * v910) & 0x8E53A986)) ^ v623;
  v912 = (v911 - 1517283024 - ((2 * v911) & 0x4B203260)) ^ v867;
  v913 = (v912 + 1847591631 - ((2 * v912) & 0xDC40059E)) ^ v614;
  v914 = (v913 - 1163071408 - ((2 * v913) & 0x7559E0A0)) ^ v866;
  v915 = v906 ^ v861 ^ (v914 + 1703080101 - ((2 * v914) & 0xCB05E14A));
  v916 = LODWORD(STACK[0x280]) - 170276040;
  if (!v324)
    v916 = 1974908726 - LODWORD(STACK[0x280]);
  v917 = (LODWORD(STACK[0x284]) ^ 0x17BC672D) - 902316343 + v916;
  v918 = STACK[0x3A8];
  v919 = ((LODWORD(STACK[0x3A8]) << 26) ^ 0x44000000) + 439940143;
  v920 = LODWORD(STACK[0x3A8]) << 27;
  LODWORD(STACK[0x644]) = v920;
  v921 = v919 + (~v920 | 0xCFFFFFFF);
  v922 = STACK[0x610];
  v923 = (STACK[0x610] & 0xF6000000 ^ 0x16000000 ^ v917)
       + 439940142
       - 2 * ((STACK[0x610] & 0xF6000000 ^ 0x16000000 ^ v917) & 0x1A38F42F ^ v917 & 1);
  v924 = STACK[0x3AC];
  v925 = (LODWORD(STACK[0x3AC]) >> 31) ^ (LODWORD(STACK[0x3AC]) >> 29) ^ (LODWORD(STACK[0x3AC]) >> 26) ^ (LODWORD(STACK[0x3AC]) >> 15) ^ (v918 >> 3);
  v926 = (LODWORD(STACK[0x3AC]) >> 30) ^ 0x56C0DA32;
  LODWORD(STACK[0x5F8]) = v926;
  v927 = ((v925 ^ 0x3C19DE7) + 1455479346 - 2 * ((v925 ^ 0x3C19DE7) & 0x56C0DA3A ^ v925 & 8)) ^ v926;
  v928 = (v924 >> 25) ^ 0x96DB2067;
  v929 = (v927 - 1764024216 - ((2 * v927) & 0x2DB640D0)) ^ v928;
  v930 = (v924 >> 22) ^ 0xA5938FA3;
  v931 = (v929 - 1517056037 - ((2 * v929) & 0x4B271FB6)) ^ v930;
  v932 = (v924 >> 19) ^ 0x5D6D0DF8;
  v933 = (v931 + 1567428153 - ((2 * v931) & 0xBADA1C72)) ^ v932;
  v934 = (v924 >> 18) ^ 0xA462BA0F ^ (v933 - 1537033713 - ((2 * v933) & 0x48C57B18) + 893);
  LODWORD(STACK[0x620]) = HIWORD(v924);
  v935 = HIWORD(v924) ^ 0x77A4B5FF;
  v936 = (v934 + 2007280626 - ((2 * v934) & 0xEF4957E4)) ^ v935;
  v937 = (v924 >> 12) ^ 0xC42490F4;
  v938 = (v936 - 1004179420 - ((2 * v936) & 0x884AE048)) ^ v937;
  v939 = (v918 >> 10) ^ 0x323D15A9;
  LODWORD(STACK[0x5F0]) = v939;
  v940 = (v938 + 842700522 - ((2 * v938) & 0x64752DD4)) ^ v939;
  v941 = (v918 >> 8) ^ 0x1839BA3A;
  LODWORD(STACK[0x628]) = v941;
  v942 = (v940 + 405255989 - ((2 * v940) & 0x304F6E6A)) ^ v941;
  v943 = (v918 >> 7) ^ 0xCB6FB176;
  v944 = (v942 - 883709079 - ((2 * v942) & 0x96A756D2)) ^ v943;
  v945 = ((v918 << 28) ^ 0x10000000) - 1242725400 - ((2 * ((v918 << 28) ^ 0x10000000)) & 0x60000000);
  LODWORD(STACK[0x648]) = v918 >> 6;
  v946 = (v918 >> 6) ^ (v918 >> 4) ^ 0x97025E5F;
  v947 = v946 ^ (v944 - 1753585056 - ((2 * v944) & 0x2EF4D4C0));
  v948 = (v947 >> 27) ^ (v947 >> 21);
  v949 = v921 ^ (v918 << 29) ^ (4 * v947) ^ (32 * v947) ^ (v947 << 11) ^ (4 * v948) ^ v923;
  v950 = ((v918 << 11) ^ 0x687E8800) - 1014961664 - ((2 * ((v918 << 11) ^ 0x687E8800)) & 0x8701D000);
  LODWORD(STACK[0x5FC]) = v950;
  v951 = (((v924 >> 20) ^ 0x1E0) - 1517056037 - ((2 * ((v924 >> 20) ^ 0x1E0)) & 0x1FB6)) ^ v930;
  v952 = (v951 - 1764024216 - ((2 * v951) & 0x2DB640D0)) ^ v928;
  LODWORD(STACK[0x6B0]) = v948;
  v953 = (32 * v948) ^ (v948 << 11) ^ 0x1D1ECD88 ^ v949;
  v954 = (v953 - 1242725400 - 2 * (v953 & 0x35ED83ED ^ v949 & 5)) ^ v945;
  v955 = v947 ^ 0x9B9BC289 ^ (v954 - ((2 * v954) & 0x34F624E8) - 1703210380);
  LODWORD(STACK[0x698]) = v955 - ((2 * v955) & 0xF5E269D8);
  v956 = (v924 >> 21) ^ 0x1C360299;
  v957 = (v952 + 473301609 - ((2 * v952) & 0x386C04D2)) ^ v956;
  v958 = v932 ^ (v924 >> 18) ^ (v957 + 1567428153 - ((2 * v957) & 0x3ADA1C72));
  v959 = ((v918 << 18) ^ 0x3F440000) + 2245471 - ((v918 << 19) & 0x400000);
  LODWORD(STACK[0x600]) = v959;
  v960 = ((v918 << 21) ^ 0xFA200000) + 391173200 - ((2 * ((v918 << 21) ^ 0xFA200000)) & 0x2E800000);
  LODWORD(STACK[0x608]) = v960;
  v961 = v918 ^ 0x1E0D0FD1;
  v962 = (v918 >> 1) ^ (v924 >> 13) ^ (v961 >> ((STACK[0x680] & 0x91 ^ 0xFE) + (STACK[0x680] & 0x91 ^ 0x6Fu) - 98));
  v963 = ((v962 ^ 0xF067780) + 2007280626 - 2 * ((v962 ^ 0xF067780) & 0x77A4ABF3 ^ v962 & 1)) ^ v935 ^ v958;
  v964 = (((v924 >> 14) ^ 0x7FB7 ^ v963) - 1004179420 - ((2 * ((v924 >> 14) ^ 0x7FB7 ^ v963)) & 0x884AE048)) ^ v937;
  v965 = (v964 - 883709079 - ((2 * v964) & 0x96A756D2)) ^ v943;
  v966 = v946 ^ (v965 - 1753585056 - ((2 * v965) & 0x2EF4D4C0));
  v967 = (v918 << 12) ^ 0xAE751000 ^ (v918 << 19) ^ ((_DWORD)v961 << (v958 & 0x1F ^ 3 | v958 & 0x1F ^ 0x1C));
  v968 = (v967 + 1824540193 - 2 * (v967 & 0x6CC0462F ^ ((_DWORD)v961 << (v958 & 0x1F ^ 3 | v958 & 0x1F ^ 0x1C)) & 0xE)) ^ LODWORD(STACK[0x61C]);
  v969 = (v968 - 443269070 - ((2 * v968) & 0xCB288064)) ^ LODWORD(STACK[0x288]);
  v970 = (v969 - 925691350 - ((2 * v969) & 0x91A62454)) ^ LODWORD(STACK[0x618]);
  v971 = (v970 - 1014961664 - ((2 * v970) & 0x8701D400)) ^ v950;
  v972 = STACK[0x374];
  v973 = (v971 - 1815950607 - ((2 * v971) & 0x278595E2)) ^ LODWORD(STACK[0x374]);
  v974 = (v973 + 1309707630 - ((2 * v973) & 0x9C211ADC)) ^ LODWORD(STACK[0x28C]);
  v975 = STACK[0x370];
  v976 = (v974 + 2050094668 - ((2 * v974) & 0xF463EC98)) ^ LODWORD(STACK[0x370]);
  v977 = (v976 + 2245471 - ((2 * v976) & 0x4486BE)) ^ v959;
  v978 = (v977 - 1247467252 - ((2 * v977) & 0x6B4A5218)) ^ LODWORD(STACK[0x614]);
  v979 = (v978 + 391173200 - ((2 * v978) & 0x2EA1A8A0)) ^ v960;
  v980 = (v979 + 515404313 - ((2 * v979) & 0x3D70E432)) ^ v922;
  v981 = (v980 + 439940142 - ((2 * v980) & 0x3471E85C)) ^ v921;
  v982 = STACK[0x694];
  LOBYTE(v946) = STACK[0x694] & 0x1D ^ 8 | STACK[0x694] & 0x1D ^ 0x15;
  v983 = (2 * (LODWORD(STACK[0x658]) + 1082)) & 0x1D6E6;
  v984 = (unsigned __int16)(LOWORD(STACK[0x658]) + 1082);
  v985 = (v966 >> 27) ^ (v963 >> 30) ^ (v966 >> 21);
  v986 = LODWORD(STACK[0x688]) ^ (32 * LODWORD(STACK[0x624])) ^ (16 * LODWORD(STACK[0x624])) ^ (LODWORD(STACK[0x624]) << 17) ^ (LODWORD(STACK[0x624]) << 30) ^ (LODWORD(STACK[0x6A8]) + 1375899451) ^ LODWORD(STACK[0x670]) ^ (4 * v840) ^ (32 * v840) ^ (v840 << 11) ^ v984 ^ (4 * (v984 - v983 + 299101043)) ^ (32 * (v984 - v983 + 299101043)) ^ ((v984 - v983 + 299101043) << 11) ^ v945 ^ (4 * v966) ^ (32 * v966) ^ (v966 << 11) ^ (4 * v985);
  LODWORD(STACK[0x6A8]) = v985;
  v987 = v986 ^ 0x8B2671F2 ^ (v981 - 1242725400 - ((2 * v981) & 0x6BDB07D0));
  v988 = (v987 + 790661645 - ((2 * v987) & 0x5E41141A)) ^ LODWORD(STACK[0x410]);
  v989 = (v988 - 157871880 - ((2 * v988) & 0xED2E21F0)) ^ LODWORD(STACK[0x640]);
  v990 = (v989 + 226072756 - ((2 * v989) & 0x1AF33168)) ^ LODWORD(STACK[0x418]);
  v991 = (v990 - 1281598496 - ((2 * v990) & 0x6738B7C0)) ^ LODWORD(STACK[0x6A0]);
  v992 = (v991 + 521023488 - ((2 * v991) & 0x3E1C6000)) ^ LODWORD(STACK[0x638]);
  v993 = (v992 + 1929538202 - ((2 * v992) & 0xE604D534)) ^ LODWORD(STACK[0x6D0]);
  v994 = (v993 - 959298149 - ((2 * v993) & 0x8DA48B36)) ^ LODWORD(STACK[0x634]);
  v995 = (v994 + 1793638454 - ((2 * v994) & 0xD5D1806C)) ^ LODWORD(STACK[0x3FC]);
  v996 = (v995 + 1177605952 - ((2 * v995) & 0x8C61AE80)) ^ LODWORD(STACK[0x3F8]);
  v997 = (v996 + 1733877356 - ((2 * v996) & 0xCEB1BCD8)) ^ LODWORD(STACK[0x630]);
  v998 = (v997 - 2056037254 - ((2 * v997) & 0xAE6B8F4)) ^ LODWORD(STACK[0x3C8]);
  v999 = (v998 + 1120214494 - 2 * (v998 & 0x42C51DDF ^ v994 & 1)) ^ LODWORD(STACK[0x6D8]);
  v1000 = LODWORD(STACK[0x67C]) ^ 0xB2EDB1BD ^ (v999 + 1821678631 + (~(2 * v999) | 0x26D6C7B3));
  v1001 = v985 ^ v966 ^ (v1000 - ((2 * v1000) & 0x433BC018) - 1583489012);
  LODWORD(STACK[0x6D0]) = v1001;
  LODWORD(v961) = (v924 >> 17) ^ HIBYTE(v924) ^ (v924 >> 11) ^ LODWORD(STACK[0x620]) ^ (v961 >> 9) ^ (((v918 >> 5) ^ 0xF0687E) - ((2 * ((v918 >> 5) ^ 0xF0687E)) & 0x270FEA) - 669808651) ^ (v961 >> v946) ^ 0xD8105741;
  LODWORD(v961) = (v961 + 1455479346 - ((2 * v961) & 0x2D81B464)) ^ LODWORD(STACK[0x5F8]);
  LODWORD(v961) = (v961 - 1764024216 - ((2 * v961) & 0x2DB640D0)) ^ v928;
  LODWORD(v961) = (v961 - 1517056037 - ((2 * v961) & 0x4B271FB6)) ^ v930;
  LODWORD(v961) = (v961 + 473301609 - ((2 * v961) & 0x386C04D2)) ^ v956;
  LODWORD(v961) = (v961 + 1567428153 - ((2 * v961) & 0xBADA1C72)) ^ v932;
  LODWORD(v961) = (v961 - ((2 * v961) & 0x39C7CD06) - 1662785917) ^ (v924 >> 14);
  LODWORD(v961) = ((v961 ^ 0x9CE39EB7) - 1004179420 - 2 * ((v961 ^ 0x9CE39EB7) & 0x4425702C ^ v961 & 8)) ^ v937;
  LODWORD(v961) = (v961 + 842700522 - ((2 * v961) & 0x64752DD4)) ^ LODWORD(STACK[0x5F0]);
  LODWORD(v961) = (v961 + 405255989 - ((2 * v961) & 0x304F6E6A)) ^ LODWORD(STACK[0x628]);
  LODWORD(v961) = v943 ^ LODWORD(STACK[0x648]) ^ (v961 - 883709079 - ((2 * v961) & 0x96A756D2));
  v1002 = ((v961 >> 21) ^ 0xFFFFFFFC) + ((2 * (v961 >> 21)) ^ 6) + 1;
  v1003 = ((v915 << 7) ^ 0xC112DB00) - 1510628958 - ((2 * ((v915 << 7) ^ 0xC112DB00)) & 0x4BEB4300);
  v1004 = ((v915 << 10) ^ 0x896D800) - 1826388327 - ((2 * ((v915 << 10) ^ 0x896D800)) & 0x26470800);
  v1005 = (v918 << 15) ^ (v918 << 8) ^ (v918 << 23) ^ LODWORD(STACK[0x644]);
  v1006 = (unsigned __int16)((v1002 ^ 0xB8BF) + 18241 + ((2 * v1002) & 0x717E));
  v1007 = v1006 - ((2 * ((v1002 ^ 0xA3F5B8BF) + 18241 + ((2 * v1002) & 0x47EB717E))) & 0x1D640) + 1859578656;
  v1008 = v1005 ^ (4 * v961) ^ (32 * v961) ^ ((_DWORD)v961 << 11) ^ v1006 ^ (4 * v1007) ^ (32 * v1007) ^ (v1007 << 11) ^ 0xF3FF369C;
  v1009 = (v1008 - 1014961664 - ((2 * v1008) & 0x8701D400)) ^ LODWORD(STACK[0x5FC]);
  v1010 = (v1009 - 1815950607 - ((2 * v1009) & 0x278595E2)) ^ v972;
  v1011 = (v1010 + 1959496926 - ((2 * v1010) & 0xE99719BC)) ^ LODWORD(STACK[0x3A0]);
  v1012 = (v1011 + 1119463697 - (STACK[0x358] & (2 * v1011))) ^ LODWORD(STACK[0x3A4]);
  v1013 = (v1012 + 1824540193 - ((2 * v1012) & 0xD9808C42)) ^ LODWORD(STACK[0x61C]);
  v1014 = (v1013 - 925691350 - ((2 * v1013) & 0x91A62454)) ^ LODWORD(STACK[0x618]);
  v1015 = (v1014 + 2050094668 - ((2 * v1014) & 0xF463EC98)) ^ v975;
  v1016 = (v1015 + 2245471 - ((2 * v1015) & 0x4486BE)) ^ LODWORD(STACK[0x600]);
  v1017 = (v1016 - 1247467252 - ((2 * v1016) & 0x6B4A5218)) ^ LODWORD(STACK[0x614]);
  v1018 = (v1017 + 391173200 - ((2 * v1017) & 0x2EA1A8A0)) ^ LODWORD(STACK[0x608]);
  v1019 = (v1018 + 924021367 - ((2 * v1018) & 0x6E26E4EE)) ^ LODWORD(STACK[0x36C]);
  v1020 = (v1019 + 398223149 - ((2 * v1019) & 0x2F78CE5A)) ^ LODWORD(STACK[0x290]);
  v1021 = (v1020 + 515404313 - ((2 * v1020) & 0x3D70E432)) ^ LODWORD(STACK[0x610]);
  v1022 = (v1021 + 439940142 - ((2 * v1021) & 0x3471E85C)) ^ v921;
  LODWORD(STACK[0x6A0]) = v1022 + 2025000341 + ~(2 * (v1022 & 0x78B30D95 ^ v1021 & 1));
  LODWORD(STACK[0x694]) = v961 ^ v982;
  v1023 = ((v915 << 16) ^ 0x25B60000) + 1573828842 - ((2 * ((v915 << 16) ^ 0x25B60000)) & 0xBB9C0000);
  v1024 = ((v915 << 13) ^ 0x44B6C000) + 1680418753 - ((2 * ((v915 << 13) ^ 0x44B6C000)) & 0xC8524000);
  LODWORD(v961) = ((v915 >> 7) & 0x1FBF254 ^ 0xF30040) + ((v915 >> 8) ^ 0x36867B0F);
  v1025 = (v915 >> 19) ^ 0xC1DE009D;
  v1026 = (((v915 >> 18) ^ 0x1EE0) - 1042411539 - 2 * (((v915 >> 18) ^ 0x1EE0) & 0xFFD ^ (v915 >> 18) & 0x10)) ^ v1025;
  v1027 = (v915 >> 22) ^ 0xCDEDA8D8 ^ (v1026 - 840062760 - ((2 * v1026) & 0x1BDB526C) + 94);
  v1028 = ((v915 << 20) ^ 0x5B600000) - 384532024 - ((2 * ((v915 << 20) ^ 0x5B600000)) & 0xD2200000);
  v1029 = ((v915 << 26) ^ 0xD8000000) + 1429518235 - ((2 * ((v915 << 26) ^ 0xD8000000)) & 0xA8000000);
  v1030 = HIWORD(v915) ^ 0x3CA6865D;
  v1031 = ((v915 >> 31) | 0x19AF8E) ^ (v915 >> 30) ^ (v915 >> 29) ^ (v915 >> 26) ^ (v915 >> 15) ^ (v915 >> 10) ^ (v915 >> 12) ^ (v915 >> 25) ^ v1030 ^ (v1027 + 1017576927 - ((2 * v1027) & 0x794DFBBE));
  v1032 = ((v915 << 25) ^ 0x6C000000) + 943736192 - ((2 * ((v915 << 25) ^ 0x6C000000)) & 0x70000000);
  LODWORD(v961) = ((v915 ^ 0x7B8225B6) >> (v1001 & 7 ^ 6) >> (v1001 & 7 ^ 1)) ^ (v961
                                                                               + v1031
                                                                               - 2 * (v1031 & (v961 + 1224869590))
                                                                               - 922614058);
  v1033 = LODWORD(STACK[0x650]) << 29;
  v1034 = ((LODWORD(STACK[0x650]) << 28) ^ 0x90000000) - 1565817535 - (v1033 & 0x40000000);
  v1035 = (((v915 >> 3) ^ 0xF7044B6) - 587791958 - ((2 * ((v915 >> 3) ^ 0xF7044B6)) & 0x39EE0354)) ^ 0xDCF701AA ^ v961;
  v1036 = (v915 >> 6) ^ (v915 >> 4) ^ 0xE5CDACA8;
  v1037 = v1036 ^ (v1035 - 467426242 - ((2 * v1035) & 0xC847487C));
  LODWORD(v961) = (v1037 >> 27) ^ (v961 >> 30) ^ (v1037 >> 21);
  v1038 = v1033 ^ (v915 << 22) ^ (v915 << 24) ^ (v915 << 17) ^ (v915 << 6) ^ (8 * v915) ^ (4 * v915) ^ (2 * v915) ^ (32 * v1037) ^ (4 * v1037);
  v1039 = v961 ^ v1037;
  LODWORD(v961) = v1038 ^ (v1039 << 11) ^ (32 * v961) ^ (4 * v961) ^ 0xBD8F68DC;
  LODWORD(v961) = (v961 + 1670965836 - 2 * (v961 & 0x6398EA4F ^ (2 * v915) & 2)) ^ v915 ^ 0x181ACFFA;
  LODWORD(v961) = (v961 - 1510628958 - ((2 * v961) & 0x4BEB4344)) ^ v1003;
  LODWORD(v961) = (v961 - 1826388327 - ((2 * v961) & 0x26470D32)) ^ v1004;
  LODWORD(v961) = (v961 - 89975911 - ((2 * v961) & 0xF5462732)) ^ (((v915 << 14) ^ 0x896D8000)
                                                                 - 89975911
                                                                 - ((2 * ((v915 << 14) ^ 0x896D8000)) & 0xF5460000));
  LODWORD(v961) = (v961 + 1680418753 - ((2 * v961) & 0xC8524F82)) ^ v1024;
  LODWORD(v961) = (v961 + 1573828842 - ((2 * v961) & 0xBB9D71D4)) ^ v1023;
  LODWORD(v961) = (v961 - 384532024 - ((2 * v961) & 0xD2290390)) ^ v1028;
  LODWORD(v961) = (v961 + 943736192 - ((2 * v961) & 0x70808B00)) ^ v1032;
  LODWORD(v961) = (v961 + 1429518235 - ((2 * v961) & 0xAA696F36)) ^ v1029;
  LODWORD(v961) = (v961 - 1565817535 - ((2 * v961) & 0x45570A82)) ^ v1034;
  LODWORD(STACK[0x6D8]) = v1039 ^ (v961 - ((2 * v961) & 0xF328C7D2) + 2039768041);
  v1040 = (v915 >> 21) ^ (v915 >> 20) ^ (v915 >> 14) ^ (v915 >> 11) ^ (v915 >> 13) ^ (v915 >> 7) ^ (v915 >> 1);
  v1041 = (v915 >> 18) ^ (v915 >> 12) ^ (v915 >> 22) ^ 0x3D3CF785 ^ v1040;
  v1042 = (v915 >> 25) ^ 0x15BB49E9 ^ (v1041 + 364595668 - ((2 * v1041) & 0x2B7693A8));
  v1043 = (v1042 - 1042411539 - ((2 * v1042) & 0x83BC1FDA)) ^ v1025;
  v1044 = (v1043 + 1017576927 - ((2 * v1043) & 0x794DFBBE)) ^ v1030;
  v1045 = v1036 ^ (v1044 - 467426242 - ((2 * v1044) & 0xC847487C));
  v1046 = ((((LODWORD(STACK[0x668]) ^ ~LODWORD(STACK[0x660])) << 31) | 0x3EDE8C0C) + 17396) ^ (v915 << 11) ^ (v915 << 12) ^ (v915 << 18) ^ (v915 << 19) ^ (v915 << 21);
  v1047 = (v1046 + 1680418753 - ((2 * v1046) & 0xC8524FC2)) ^ v1024;
  v1048 = (v1047 - 1510628958 - ((2 * v1047) & 0x4BEB4344)) ^ v1003;
  v1049 = (v1048 + 1670965836 - ((2 * v1048) & 0xC731D498)) ^ v915 ^ 0x181ACFFA;
  v1050 = (v1049 - 1826388327 - ((2 * v1049) & 0x26470D32)) ^ v1004;
  v1051 = (v1050 - 89975911 - ((2 * v1050) & 0xF5462732)) ^ (((v915 << 14) ^ 0x896D8000)
                                                           - 89975911
                                                           - ((2 * ((v915 << 14) ^ 0x896D8000)) & 0xF5460000));
  v1052 = (v1051 + 1573828842 - ((2 * v1051) & 0xBB9D71D4)) ^ v1023;
  v1053 = (v1052 - 384532024 - ((2 * v1052) & 0xD2290390)) ^ v1028;
  v1054 = (v1053 + 943736192 - ((2 * v1053) & 0x70808B00)) ^ v1032;
  v1055 = v1029 ^ v1034 ^ (v1054 + 1429518235 - ((2 * v1054) & 0xAA696F36));
  v1056 = LODWORD(STACK[0x6C8]) ^ 0x5BC7DC7C ^ v1055;
  v1055 ^= 0xA2AB8541;
  v1057 = (v1056 + v1055 + 1) ^ ((LODWORD(STACK[0x6C8]) ^ 0xF96C593D) + 1);
  v1058 = (v1045 >> 27) ^ (v1040 >> 30) ^ (v1045 >> 21);
  LODWORD(STACK[0x6C8]) = v1045 ^ (v1045 << 11) ^ (4 * v1045) ^ v1058 ^ (32 * v1058) ^ (v1058 << 11) ^ (((32 * v1045) ^ 0xF7044B94 ^ (4 * v1058)) - ((2 * ((32 * v1045) ^ 0xF7044B94 ^ (4 * v1058))) & 0x680573D0) + 872593896) ^ ((LODWORD(STACK[0x6C8]) ^ 0x664AC19A ^ (v1057 - ((2 * v1057) & 0xC1B2CEB0) + 1624860504)) + v1055);
  v1059 = STACK[0x6A0];
  v1060 = STACK[0x694];
  v1061 = LODWORD(STACK[0x694]) ^ LODWORD(STACK[0x6A0]);
  v1062 = ((v1061 << 13) ^ 0x3AD06000) + 543451217 - ((2 * ((v1061 << 13) ^ 0x3AD06000)) & 0x40C8C000);
  v1063 = ((v1061 << 11) ^ 0x4EB41800) + 2031820938 - ((2 * ((v1061 << 11) ^ 0x4EB41800)) & 0xF2364000);
  LODWORD(STACK[0x670]) = ((v1061 << 18) ^ 0x5A0C0000) - 1183925265 - ((2 * ((v1061 << 18) ^ 0x5A0C0000)) & 0x72D80000);
  LODWORD(STACK[0x67C]) = ((v1061 << 23) ^ 0x41800000) + 1734484515 - ((2 * ((v1061 << 23) ^ 0x41800000)) & 0xCE000000);
  v1064 = ((v1061 << 21) ^ 0xD0600000) + 1952843478 - ((2 * ((v1061 << 21) ^ 0xD0600000)) & 0xE8C00000);
  v1065 = ((v1061 << 22) ^ 0xA0C00000) + 631811354 - ((2 * ((v1061 << 22) ^ 0xA0C00000)) & 0x4B000000);
  v1066 = ((v1061 << 26) ^ 0xC000000) - 158931367 - ((2 * ((v1061 << 26) ^ 0xC000000)) & 0xE8000000);
  v1067 = ((v1061 << 27) ^ 0x18000000) - 1650257395 - ((2 * ((v1061 << 27) ^ 0x18000000)) & 0x30000000);
  LODWORD(v961) = (v1061 >> 14) ^ 0xCFAC03CB;
  LODWORD(STACK[0x688]) = v961;
  v1068 = (v1061 >> 4) ^ (v1061 >> 2) ^ (v1061 >> 27) ^ (v1061 >> 28) ^ (v1061 >> 13) ^ v961 ^ (((v1061 >> 15) ^ (v1061 >> 18) ^ 0x7E81)
                                                                                              - 810753300
                                                                                              - 2
                                                                                              * (((v1061 >> 15) ^ (v1061 >> 18) ^ 0x7E81) & 0xE2FE ^ ((v1061 >> 15) ^ (v1061 >> 18)) & 0x12));
  v1069 = v1061 >> 30;
  v1070 = (v1061 >> 29) ^ 0xF879D13A;
  v1071 = (((v1061 >> 30) ^ 0xD972A82 ^ v1068)
         - 126234309
         - 2 * (((v1061 >> 30) ^ 0xD972A82 ^ v1068) & 0x7879D13F ^ v1068 & 4)) ^ v1070;
  v1072 = (v1061 >> 21) ^ 0xF4831FED;
  v1073 = (v1071 - 192733649 - ((2 * v1071) & 0xE9063C5E)) ^ v1072;
  v1074 = (v1061 >> 19) ^ 0x1B664945;
  v1075 = (v1073 + 459689548 - ((2 * v1073) & 0x36CC9C98)) ^ v1074;
  v1076 = (v1061 >> 11) ^ 0x5788E6C0;
  v1077 = (v1075 + 1469050874 - ((2 * v1075) & 0xAF1FDFF4)) ^ v1076;
  v1078 = (v1061 >> 10) ^ 0xD95055FF;
  v1079 = (v1077 - 648132726 - ((2 * v1077) & 0xB2BC8F14)) ^ v1078;
  v1080 = (v1061 >> 9) ^ 0x957F7EB7;
  v1081 = (v1079 - 1788650916 - ((2 * v1079) & 0x2AC6B4B8)) ^ v1080;
  v1082 = v1060 ^ ~v1059;
  v1083 = (v1061 >> 6) ^ (v1061 >> 5) ^ 0x1F60D02;
  v1084 = v1083 ^ (v1081 + 18295384 - ((2 * v1081) & 0x22E54B0));
  v1085 = (v1084 >> 21) ^ (v1068 >> 27);
  v1086 = LODWORD(STACK[0x6B0]) ^ (LODWORD(STACK[0x698]) - 84855572) ^ (16 * v1061) ^ (32 * v1061) ^ (v1061 << 14) ^ (v1061 << 17) ^ (v1061 << 19) ^ (v1061 << 28) ^ (v1082 << 30) ^ (4 * v1084) ^ (32 * v1084) ^ (v1084 << 11) ^ (4 * v1085) ^ (32 * v1085) ^ (v1085 << 11) ^ 0x6DD793F;
  v1087 = (8 * v1061) ^ (4 * v1061) ^ 0xF1553D3A;
  v1088 = (v1086 - 767765714 - ((2 * v1086) & 0xA479A65C)) ^ v1087;
  v1089 = (v1088 + 2031820938 - ((2 * v1088) & 0xF2364114)) ^ v1063;
  v1090 = (v1089 + 543451217 - ((2 * v1089) & 0x40C8D0A2)) ^ v1062;
  v1091 = (v1090 - 1183925265 - ((2 * v1090) & 0x72DD77DE)) ^ LODWORD(STACK[0x670]);
  v1092 = (v1091 + 1952843478 - ((2 * v1091) & 0xE8CC0DAC)) ^ v1064;
  v1093 = (v1092 + 631811354 - ((2 * v1092) & 0x4B515A34)) ^ v1065;
  v1094 = (v1093 + 1734484515 - ((2 * v1093) & 0xCEC44446)) ^ LODWORD(STACK[0x67C]);
  v1095 = (v1094 - 158931367 - ((2 * v1094) & 0xED0DCCB2)) ^ v1066;
  v1096 = (v1095 - 1650257395 - ((2 * v1095) & 0x3B46241A)) ^ v1067;
  v1097 = v1085 ^ v1084 ^ (v1096 - ((2 * v1096) & 0x3DCD700A) - 1629046779);
  v1098 = (v1061 << 7) ^ (v1061 << 8) ^ (v1061 << 10) ^ (v1061 << 15) ^ (v1061 << 16) ^ (v1061 << 20) ^ (v1061 << 24) ^ (v1061 << 25) ^ v1067 ^ v1066 ^ 0xF1B0BAD4;
  v1099 = (v1098 - 767765714 - ((2 * v1098) & 0xA479A65C)) ^ v1087;
  v1100 = (v1099 + 2031820938 - ((2 * v1099) & 0xF2364114)) ^ v1063;
  v1101 = (v1100 + 543451217 - ((2 * v1100) & 0x40C8D0A2)) ^ v1062;
  v1102 = (v1101 - 1183925265 - ((2 * v1101) & 0x72DD77DE)) ^ LODWORD(STACK[0x670]);
  v1103 = (v1102 + 1952843478 - ((2 * v1102) & 0xE8CC0DAC)) ^ v1064;
  v1104 = (v1103 + 631811354 - ((2 * v1103) & 0x4B515A34)) ^ v1065;
  v1105 = (v1061 >> 8) ^ (v1061 >> 7) ^ (v1061 >> 22) ^ HIBYTE(v1061) ^ (v1061 >> 25) ^ (v1061 >> 17) ^ HIWORD(v1061) ^ (v1061 >> 12) ^ 0x4B7A4E;
  v1106 = (v1105 - 192733649 - ((2 * v1105) & 0x69063C5E)) ^ v1072;
  v1107 = (v1106 - 126234309 - ((2 * v1106) & 0x70F3A276)) ^ v1070;
  v1108 = v1069 ^ 0x30D6593F ^ (v1107 + 819353919 - ((2 * v1107) & 0x61ACB27E));
  v1109 = (v1108 + 459689548 - ((2 * v1108) & 0x36CC9C98)) ^ v1074;
  v1110 = (v1109 - 810753300 - ((2 * v1109) & 0x9F59C5D8)) ^ LODWORD(STACK[0x688]);
  v1111 = (v1110 + 1469050874 - ((2 * v1110) & 0xAF1FDFF4)) ^ v1076;
  v1112 = (v1111 - 648132726 - ((2 * v1111) & 0xB2BC8F14)) ^ v1078;
  v1113 = (v1112 - 1788650916 - ((2 * v1112) & 0x2AC6B4B8)) ^ v1080;
  v1114 = v1083 ^ (v1113 + 18295384 - ((2 * v1113) & 0x22E54B0));
  v1115 = (32 * LODWORD(STACK[0x6A8])) ^ (LODWORD(STACK[0x6A8]) << 11) ^ LODWORD(STACK[0x67C]) ^ (v1104
                                                                                                + 1734484515
                                                                                                - ((2 * v1104) & 0xCEC44446)) ^ (4 * v1114) ^ (32 * v1114) ^ (v1114 << 11) ^ (4 * (v1114 >> 21)) ^ (32 * (v1114 >> 21)) ^ (v1114 >> 21 << 11) ^ 0x2D354448;
  v1116 = LODWORD(STACK[0x6D0]) ^ 0x962171A ^ (v1115 - ((2 * v1115) & 0x523E4FC8) - 1457575964);
  v1117 = (v1114 >> 21) ^ v1114 ^ (v1116 - ((2 * v1116) & 0x1BC3C0B2) + 232906841);
  v1118 = LODWORD(STACK[0x430]) - 2060115511 - ((2 * LODWORD(STACK[0x430])) & 0xA6A4392);
  v1119 = LODWORD(STACK[0x438]) - 2060115511 - ((2 * LODWORD(STACK[0x438])) & 0xA6A4392);
  v1120 = LODWORD(STACK[0x444]) + 1577036220 - ((2 * LODWORD(STACK[0x444])) & 0xBBFF5378);
  v1121 = LODWORD(STACK[0x6D8]) ^ 0x31C1AC86;
  v1122 = -2009212831
        * (v1121 ^ (LODWORD(STACK[0x4F8]) - ((2 * LODWORD(STACK[0x4F8]) + 871633850) & 0x9FDBDA12) - 370673946))
        - 75026750;
  LODWORD(STACK[0x6E8]) = -2009212831
                        * (v1121 ^ (LODWORD(STACK[0x594])
                                  - ((2 * LODWORD(STACK[0x594]) - 64478618) & 0x9FDBDA12)
                                  - 838730180))
                        - 75026750;
  LODWORD(STACK[0x6EC]) = v1122;
  v1123 = LODWORD(STACK[0x4F0]) - ((2 * LODWORD(STACK[0x4F0]) - 226610034) & 0x9FDBDA12);
  v1124 = LODWORD(STACK[0x448]) - 2060115511 - ((2 * LODWORD(STACK[0x448])) & 0xA6A4392);
  v1125 = LODWORD(STACK[0x44C]) ^ v1117;
  LODWORD(STACK[0x748]) = -2009212831 * (v1125 ^ 0xC23AEE3) - 75026750;
  LODWORD(STACK[0x74C]) = -2009212831 * (v1117 ^ 0x51DC075F ^ v1120) - 75026750;
  v1126 = LODWORD(STACK[0x450]) + 1577036220 - ((2 * LODWORD(STACK[0x450])) & 0xBBFF5378);
  v1127 = STACK[0x6C8];
  v1128 = LODWORD(STACK[0x6C8]) ^ 0x697C048B;
  LODWORD(STACK[0x728]) = -2009212831 * (v1128 ^ v1118) - 75026750;
  LODWORD(STACK[0x72C]) = -2009212831 * (v1128 ^ v1119) - 75026750;
  v1129 = LODWORD(STACK[0x4D8]) - ((2 * LODWORD(STACK[0x4D8]) - 1145505348) & 0x9FDBDA12);
  v1130 = -75026750 - 2009212831 * (v1097 ^ 0x9F24F6BE ^ (LODWORD(STACK[0x4DC]) - 286989084));
  LODWORD(STACK[0x708]) = -75026750 - 2009212831 * (v1097 ^ 0x9F24F6BE ^ (LODWORD(STACK[0x510]) - 691669113));
  LODWORD(STACK[0x70C]) = v1130;
  v1131 = LODWORD(STACK[0x454]) - 2060115511 - ((2 * LODWORD(STACK[0x454])) & 0xA6A4392);
  v1132 = LODWORD(STACK[0x560]) - ((2 * LODWORD(STACK[0x560]) - 1514218974) & 0x9FDBDA12);
  v1133 = LODWORD(STACK[0x45C]) + 1577036220 - ((2 * LODWORD(STACK[0x45C])) & 0xBBFF5378);
  v1134 = LODWORD(STACK[0x458]) - 2060115511 - ((2 * LODWORD(STACK[0x458])) & 0xA6A4392);
  v1135 = LODWORD(STACK[0x460]) + 1577036220 - ((2 * LODWORD(STACK[0x460])) & 0xBBFF5378);
  LODWORD(STACK[0x6F0]) = -75026750 - 2009212831 * (v1121 ^ (v1123 - 919795888));
  LODWORD(STACK[0x6F4]) = -75026750 - 2009212831 * (v1121 ^ (v1129 + 768240103));
  LODWORD(STACK[0x750]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1126);
  LODWORD(STACK[0x754]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1133);
  LODWORD(STACK[0x730]) = -75026750 - 2009212831 * (v1128 ^ v1124);
  LODWORD(STACK[0x734]) = -75026750 - 2009212831 * (v1128 ^ v1131);
  v1136 = -75026750 - 2009212831 * (v1097 ^ 0x9F24F6BE ^ (LODWORD(STACK[0x4E8]) - 1371091820));
  LODWORD(STACK[0x710]) = -75026750 - 2009212831 * (v1097 ^ 0x9F24F6BE ^ (LODWORD(STACK[0x4D0]) - 1654404774));
  LODWORD(STACK[0x714]) = v1136;
  v1137 = LODWORD(STACK[0x464]) - 2060115511 - ((2 * LODWORD(STACK[0x464])) & 0xA6A4392);
  v1138 = LODWORD(STACK[0x504]) - ((2 * LODWORD(STACK[0x504]) - 831113182) & 0x9FDBDA12);
  v1139 = LODWORD(STACK[0x538]) + 1577036220 - ((2 * LODWORD(STACK[0x538])) & 0xBBFF5378);
  v1140 = LODWORD(STACK[0x470]) - 2060115511 - ((2 * LODWORD(STACK[0x470])) & 0xA6A4392);
  v1141 = -75026750
        - 2009212831
        * (v1121 ^ (LODWORD(STACK[0x508]) - ((2 * LODWORD(STACK[0x508]) - 340977890) & 0x9FDBDA12) + 1170503832));
  LODWORD(STACK[0x6F8]) = -75026750 - 2009212831 * (v1121 ^ (v1132 - 1563600358));
  LODWORD(STACK[0x6FC]) = v1141;
  LODWORD(STACK[0x758]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1135);
  LODWORD(STACK[0x75C]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1139);
  v1142 = -75026750 - 2009212831 * (v1097 ^ 0x9F24F6BE ^ (LODWORD(STACK[0x4D4]) - 1652555301));
  LODWORD(STACK[0x71C]) = -75026750 - 2009212831 * (v1097 ^ 0x9F24F6BE ^ (LODWORD(STACK[0x4EC]) - 630374936));
  LODWORD(STACK[0x718]) = v1142;
  v1143 = LODWORD(STACK[0x540]) + 1577036220 - ((2 * LODWORD(STACK[0x540])) & 0xBBFF5378);
  LODWORD(STACK[0x738]) = -75026750 - 2009212831 * (v1128 ^ v1134);
  LODWORD(STACK[0x73C]) = -75026750 - 2009212831 * (v1128 ^ v1137);
  v1144 = LODWORD(STACK[0x4CC]) - ((2 * LODWORD(STACK[0x4CC]) - 949331290) & 0x9FDBDA12);
  v1145 = v1097 ^ 0x9F24F6BE ^ (LODWORD(STACK[0x4E0]) - 449139318);
  LODWORD(STACK[0x6D0]) = v1097 ^ 0x9F24F6BE ^ (LODWORD(STACK[0x50C]) - 261508452);
  v1146 = (v1145 + 1663319554)
        * (v1125 & 0x883DD061 ^ 0x8218061 ^ ((v1125 & 0x883DD861 ^ 0x801C5000) + (~v1125 & 0x800)));
  v1147 = (unsigned __int8 *)STACK[0x6B8];
  v1148 = *(unsigned __int8 *)(STACK[0x6B8] + 1183) ^ 0xFC;
  v1149 = (v1148 | (LODWORD(STACK[0x484]) << 8))
        - 2060115511
        - 2 * ((v1148 | (LODWORD(STACK[0x484]) << 8)) & 0x53521DB ^ v1148 & 0x12);
  v1150 = LODWORD(STACK[0x548]) - 2060115511 - ((2 * LODWORD(STACK[0x548])) & 0xA6A4392);
  v1151 = LODWORD(STACK[0x54C]) + 1577036220 - ((2 * LODWORD(STACK[0x54C])) & 0xBBFF5378);
  LODWORD(STACK[0x700]) = -75026750 - 2009212831 * (v1121 ^ (v1138 + 925436186));
  LODWORD(STACK[0x704]) = -75026750 - 2009212831 * (v1121 ^ (v1144 + 866327132));
  v1152 = LODWORD(STACK[0x5CC]) - ((2 * LODWORD(STACK[0x5CC]) + 681540568) & 0x217F5692);
  v1153 = LODWORD(STACK[0x550]) + 1340992777 - ((2 * LODWORD(STACK[0x550])) & 0x9FDBDA12);
  LODWORD(STACK[0x740]) = -75026750 - 2009212831 * (v1128 ^ v1140);
  LODWORD(STACK[0x744]) = -75026750 - 2009212831 * (v1128 ^ v1150);
  LODWORD(STACK[0x7E8]) = -75026750 - 2009212831 * (v1121 ^ v1153);
  v1154 = LODWORD(STACK[0x498]) + 1577036220 - ((2 * LODWORD(STACK[0x498])) & 0xBBFF5378);
  LODWORD(STACK[0x760]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1143);
  LODWORD(STACK[0x764]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1151);
  v1155 = (v1147[1171] ^ 0xFC | (LODWORD(STACK[0x480]) << 8))
        + 1577036220
        - 2 * ((v1147[1171] ^ 0xFC | (LODWORD(STACK[0x480]) << 8)) & 0x5DFFA9BE ^ (v1147[1171] ^ 0xFC) & 2);
  v1156 = (v1147[1901] ^ 0xFC | (LODWORD(STACK[0x4A0]) << 8))
        + 1340992777
        - 2 * ((v1147[1901] ^ 0xFC | (LODWORD(STACK[0x4A0]) << 8)) & 0x4FEDED1F ^ (v1147[1901] ^ 0xFC) & 0x16);
  v1157 = (v1147[1654] ^ 0xFC | (LODWORD(STACK[0x494]) << 8))
        - 2060115511
        - 2 * ((v1147[1654] ^ 0xFC | (LODWORD(STACK[0x494]) << 8)) & 0x53521CD ^ (v1147[1654] ^ 0xFC) & 4);
  v1158 = v1147[1418] ^ 0xFC;
  v1159 = v1158 | (LODWORD(STACK[0x4B4]) << 8);
  LODWORD(STACK[0x6B0]) = 280996697;
  v1160 = v1159 + 280996681 - 2 * (v1159 & 0x10BFAB59 ^ v1158 & 0x10);
  v1161 = LODWORD(STACK[0x488]) + 280996681 - ((2 * LODWORD(STACK[0x488])) & 0x217F5692);
  v1162 = v1097 ^ 0x8F9B5DF7;
  LODWORD(STACK[0x7EC]) = -75026750 - 2009212831 * (v1097 ^ 0x8F9B5DF7 ^ (v1152 + 1695508789));
  v1163 = v1156 ^ 0x565656 ^ v1121;
  v1164 = (v1147[1407] ^ 0xFC | (LODWORD(STACK[0x4AC]) << 8))
        + 1340992777
        - 2 * ((v1147[1407] ^ 0xFC | (LODWORD(STACK[0x4AC]) << 8)) & 0x4FEDED19 ^ (v1147[1407] ^ 0xFC) & 0x10);
  v1165 = v1147[1866] ^ 0xFC;
  v1166 = v1165 | (LODWORD(STACK[0x47C]) << 8);
  LODWORD(STACK[0x6A8]) = 280996687;
  v1167 = v1166 + 280996681 - 2 * (v1166 & 0x10BFAB4F ^ v1165 & 6);
  v1168 = (v1147[1395] ^ 0xFC | (LODWORD(STACK[0x48C]) << 8))
        + 280996681
        - 2 * ((v1147[1395] ^ 0xFC | (LODWORD(STACK[0x48C]) << 8)) & 0x10BFAB5F ^ (v1147[1395] ^ 0xFC) & 0x16);
  v1169 = LODWORD(STACK[0x4B8]) + 1577036220 - ((2 * LODWORD(STACK[0x4B8])) & 0xBBFF5378);
  v1170 = ((v1147[1160] ^ 0xFC | (LODWORD(STACK[0x4C8]) << 8)) ^ 0x56560000)
        - 2060115511
        - 2
        * (((v1147[1160] ^ 0xFC | (LODWORD(STACK[0x4C8]) << 8)) ^ 0x56560000) & 0x53521E9 ^ (v1147[1160] ^ 0xFC) & 0x20);
  LODWORD(STACK[0x768]) = -75026750 - 2009212831 * (v1149 ^ 0x56000056 ^ v1128);
  LODWORD(STACK[0x76C]) = -75026750 - 2009212831 * v1163;
  LODWORD(STACK[0x6A0]) = v1127 ^ 0x3F2A52DD;
  v1171 = STACK[0x6D8];
  v1172 = LODWORD(STACK[0x6D8]) ^ 0x6797FAD0;
  LODWORD(STACK[0x770]) = -75026750 - 2009212831 * (v1127 ^ 0x3F2A52DD ^ v1157);
  LODWORD(STACK[0x774]) = -75026750 - 2009212831 * (v1172 ^ v1164);
  v1173 = v1127 ^ 0x697C52DD ^ (((v1147[1631] ^ 0xFC | (LODWORD(STACK[0x4A4]) << 8)) ^ 0x56560000)
                              - 2060115511
                              - 2
                              * (((v1147[1631] ^ 0xFC | (LODWORD(STACK[0x4A4]) << 8)) ^ 0x56560000) & 0x53521CB ^ (v1147[1631] ^ 0xFC) & 2));
  LODWORD(STACK[0x7A8]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1154);
  LODWORD(STACK[0x7AC]) = -75026750 - 2009212831 * (v1097 ^ 0x8F9B5DF7 ^ v1160);
  v1174 = (v1147[1878] ^ 0xFC | (LODWORD(STACK[0x588]) << 8))
        + 1340992777
        - 2 * ((v1147[1878] ^ 0xFC | (LODWORD(STACK[0x588]) << 8)) & 0x4FEDED0F ^ (v1147[1878] ^ 0xFC) & 6);
  v1175 = LODWORD(STACK[0x490]) + 1577036220 - ((2 * LODWORD(STACK[0x490])) & 0xBBFF5378);
  LODWORD(STACK[0x7B4]) = -75026750 - 2009212831 * (v1097 ^ 0x8F9B5DF7 ^ v1161);
  LODWORD(STACK[0x7B0]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1155);
  v1176 = (LODWORD(STACK[0x478]) ^ 0xFC | (LODWORD(STACK[0x574]) << 8))
        + 1577036220
        - 2
        * ((LODWORD(STACK[0x478]) ^ 0xFC | (LODWORD(STACK[0x574]) << 8)) & 0x5DFFA9BF ^ (LODWORD(STACK[0x478]) ^ 0xFC) & 3);
  v1177 = LODWORD(STACK[0x49C]) + 1340992777 - ((2 * LODWORD(STACK[0x49C])) & 0x9FDBDA12);
  LODWORD(STACK[0x778]) = -75026750 - 2009212831 * (v1127 ^ 0x697C52DD ^ v1170);
  LODWORD(STACK[0x77C]) = -75026750 - 2009212831 * (v1172 ^ v1174);
  v1178 = (v1147[1372] ^ 0xFC | (LODWORD(STACK[0x4A8]) << 8))
        + 280996681
        - 2 * ((v1147[1372] ^ 0xFC | (LODWORD(STACK[0x4A8]) << 8)) & 0x10BFAB5B ^ (v1147[1372] ^ 0xFC) & 0x12);
  LODWORD(STACK[0x7B8]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1169);
  LODWORD(STACK[0x7BC]) = -75026750 - 2009212831 * (v1097 ^ 0x8F9B5DF7 ^ v1168);
  v1179 = (LODWORD(STACK[0x584]) | v1147[1137] ^ 0xFC)
        - 2060115511
        - 2 * ((LODWORD(STACK[0x584]) | v1147[1137] ^ 0xFC) & 0x53521DD ^ (v1147[1137] ^ 0xFC) & 0x14);
  v1180 = -2009212831
        * (((2 * (v1171 ^ LODWORD(STACK[0x58C]))) & 0xC6487C04 ^ 0x40402C00)
         + (v1171 ^ LODWORD(STACK[0x58C]) ^ 0x4B5E29DB));
  LODWORD(STACK[0x780]) = -75026750 - 2009212831 * v1173;
  LODWORD(STACK[0x784]) = v1180;
  v1181 = v1179 ^ 0x56005656 ^ v1128;
  v1182 = ((v1147[1608] ^ 0xFC | (LODWORD(STACK[0x55C]) << 8))
         - 2060115511
         - 2 * ((v1147[1608] ^ 0xFC | (LODWORD(STACK[0x55C]) << 8)) & 0x53521CD ^ (v1147[1608] ^ 0xFC) & 4)) ^ 0x56560056 ^ v1128;
  v1183 = v1147[1361] ^ 0xFC;
  v1184 = v1183 | (LODWORD(STACK[0x4C0]) << 8);
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x6B4]) - 366;
  v1185 = v1184 + 1340992777 - 2 * (v1184 & 0x4FEDED0B ^ v1183 & 2);
  v1186 = v1147;
  v1187 = v1147[1843] ^ 0xFC;
  v1188 = v1187 | (LODWORD(STACK[0x4C4]) << 8);
  LODWORD(STACK[0x7C8]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1175);
  v1189 = v1188 & 0x10BFAB4B ^ v1187 & 2;
  v1190 = v1147[1596] ^ 0xFC;
  v1191 = v1190 | (LODWORD(STACK[0x56C]) << 8);
  v1192 = v1188 + 280996681 - 2 * v1189;
  v1193 = v1147[2079] ^ 0xFC;
  v1194 = v1193 | (LODWORD(STACK[0x578]) << 8);
  LODWORD(STACK[0x7C0]) = -75026750 - 2009212831 * (v1117 ^ 0x51DC075F ^ v1176);
  v1195 = v1147[1832] ^ 0xFC;
  v1196 = v1195 | (LODWORD(STACK[0x570]) << 8);
  LODWORD(STACK[0x7C4]) = -75026750 - 2009212831 * (v1097 ^ 0x8F9B5DF7 ^ v1167);
  v1197 = v1147[1349] ^ 0xFC;
  v1198 = v1197 | (LODWORD(STACK[0x568]) << 8);
  v1199 = -75026750 - 2009212831 * LODWORD(STACK[0x6D0]);
  LODWORD(STACK[0x720]) = v1146;
  v1200 = v1147[2067] ^ 0xFC;
  LODWORD(v1147) = v1200 | (LODWORD(STACK[0x4BC]) << 8);
  v1201 = LODWORD(STACK[0x680]) ^ 0xFC;
  v1202 = v1201 | (LODWORD(STACK[0x554]) << 8);
  v1203 = v1186[1820] ^ 0xFC;
  v1204 = v1203 | (LODWORD(STACK[0x4B0]) << 8);
  LODWORD(STACK[0x724]) = v1199;
  LODWORD(STACK[0x6D0]) = -75026750 - 2009212831 * v1182;
  LODWORD(STACK[0x7CC]) = -75026750 - 2009212831 * (v1162 ^ v1178);
  LODWORD(v1186) = v1117 ^ 0x51DC075F ^ (LODWORD(STACK[0x590]) + 1577036220 - ((2 * LODWORD(STACK[0x590])) & 0xBBFF5378));
  LODWORD(STACK[0x78C]) = -75026750 - 2009212831 * (v1172 ^ v1177);
  LODWORD(STACK[0x788]) = -75026750 - 2009212831 * v1181;
  LODWORD(v1186) = ((v1199 & 0x883DD861 ^ 0x883DD861) + (v1199 & 0x883DD861)) * ((_DWORD)v1186 + 1663319554);
  v1205 = STACK[0x6A0];
  v1206 = -75026750 - 2009212831 * (LODWORD(STACK[0x6A0]) ^ (v1194 - 2060115511 - 2 * (v1194 & 0x53521CD ^ v1193 & 4)));
  LODWORD(STACK[0x7D0]) = (_DWORD)v1186;
  LODWORD(STACK[0x7D4]) = -75026750 - 2009212831 * (v1162 ^ v1192);
  LODWORD(STACK[0x790]) = STACK[0x6D0];
  LODWORD(STACK[0x794]) = -75026750 - 2009212831 * (v1172 ^ v1185);
  v1207 = v1198 & STACK[0x6A8] ^ v1197 & 6;
  LODWORD(STACK[0x7D8]) = -75026750
                        - 2009212831
                        * (v1117 ^ 0x51DC075F ^ (v1191 + 1577036220 - 2 * (v1191 & 0x5DFFA9BD ^ v1190 & 1)));
  LODWORD(STACK[0x7DC]) = -75026750 - 2009212831 * (v1162 ^ (v1198 + 280996681 - 2 * v1207));
  v1208 = LODWORD(STACK[0x5AC]) ^ 0xC135AB82 ^ LODWORD(STACK[0x6D8]);
  v1209 = -75026750
        - 2009212831
        * (v1117 ^ 0x51DC075F ^ ((_DWORD)v1147 + 1577036220 - 2 * (v1147 & 0x5DFFA9BD ^ v1200 & 1)));
  v1210 = v1204 + 280996681 - 2 * (v1204 & STACK[0x6B0] ^ v1203 & 0x10);
  LODWORD(STACK[0x798]) = v1206;
  LODWORD(STACK[0x79C]) = -75026750
                        - 2009212831 * (v1172 ^ (v1196 + 1340992777 - 2 * (v1196 & 0x4FEDED1B ^ v1195 & 0x12)));
  LODWORD(STACK[0x7A4]) = -75026750 - 2009212831 * v1208;
  LODWORD(STACK[0x7A0]) = -75026750 - 2009212831 * (v1205 ^ (v1202 - 2060115511 - 2 * (v1202 & 0x53521CD ^ v1201 & 4)));
  LODWORD(STACK[0x7E0]) = v1209;
  LODWORD(STACK[0x7E4]) = -75026750 - 2009212831 * (v1162 ^ v1210);
  STACK[0x6E0] -= 2112;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0]
                                        + 8
                                        * (int)(((((LODWORD(STACK[0x6C8]) - 830) | 0xB)
                                                + ((LODWORD(STACK[0x6C8]) + 1223484159) & 0xB7131E6E)
                                                + 1721)
                                               * (*(_QWORD *)STACK[0x350] == 0)) ^ LODWORD(STACK[0x6C8])))
                            - 8))();
}

uint64_t sub_234E04@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  _BYTE *v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  _BYTE *v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  _BYTE *v53;
  int v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  unsigned int v73;
  _BYTE *v74;

  LODWORD(STACK[0x628]) = (v32 ^ 0xFE39B019) + 2012824548 + v30;
  v34 = (-1321901985 - v26);
  LODWORD(STACK[0x634]) = v33 - v27 - 256163025;
  LODWORD(STACK[0x61C]) = 1040618763 - v27 - ((35480736 - 2 * v27) & 0x39EFC576);
  LODWORD(STACK[0x614]) = (v29 ^ 0x54C122FA)
                        - 2081292095
                        + v28
                        - ((2 * ((v29 ^ 0x54C122FA) - 2081292095 + v28) + 11018698) & 0x290469B0)
                        + 886457789;
  LODWORD(STACK[0x618]) = 2131829824 - v26 + v31;
  v35 = LODWORD(STACK[0x6B4]) - 1519;
  LODWORD(STACK[0x6B0]) = a1 - 778214206;
  LODWORD(STACK[0x6A8]) = a1 - 778214205;
  LODWORD(STACK[0x6A0]) = a1 - 778214204;
  LODWORD(STACK[0x6B4]) = v35;
  LODWORD(STACK[0x698]) = (v35 ^ 0x678A2D9C) + a1;
  LODWORD(STACK[0x694]) = a1 - 410375138;
  LODWORD(STACK[0x688]) = a1 - 778214203;
  LODWORD(STACK[0x680]) = a1 - 778214202;
  LODWORD(STACK[0x67C]) = a1 - 778214201;
  LODWORD(STACK[0x670]) = a1 - 778214200;
  LODWORD(STACK[0x668]) = a1 - 778214199;
  LODWORD(STACK[0x660]) = a1 - 778214198;
  LODWORD(STACK[0x658]) = a1 - 778214197;
  LODWORD(STACK[0x650]) = a1 - 778214196;
  LODWORD(STACK[0x648]) = a1 - 778214195;
  LODWORD(STACK[0x644]) = a1 - 778214194;
  LODWORD(STACK[0x640]) = a1 - 778214193;
  LODWORD(STACK[0x630]) = a1 - 778214207;
  LODWORD(STACK[0x638]) = a1 - 778214192;
  v36 = (_BYTE *)STACK[0x6D8];
  v37 = STACK[0x6D0];
  v38 = (LODWORD(STACK[0x6B4]) + 194) | 0x190;
  v39 = STACK[0x6C8];
  v40 = STACK[0x6C8] + (LODWORD(STACK[0x630]) + 367839069);
  v36[956] ^= *(_BYTE *)v40;
  v41 = 1554976193 * v40 - 466067351 - ((-1185014910 * v40) & (v38 ^ 0xC870C306));
  v42 = ((HIWORD(v41) ^ 0xE438) - 466067351 - ((2 * (HIWORD(v41) ^ 0xE438)) & 0xC0D2)) ^ v41;
  v43 = 1554976193 * v42 - ((962468738 * v42) & 0x5F703DB8) - 1346887972;
  v44 = (LODWORD(STACK[0x6B0]) + 367839069);
  v45 = ((v43 ^ 0xDC) - ((2 * v43) & 0x44) - 94) ^ *(_BYTE *)(v37
                                                            + (673 * (HIBYTE(v43) ^ 0x57)
                                                                           - 1184
                                                                           * ((3627507
                                                                             * (unint64_t)(673
                                                                                                * (HIBYTE(v43) ^ 0x57))) >> 32)));
  v36[473] ^= 0x15 ^ (v45 - ((2 * v45) & 0xF8) - 4);
  v36[653] ^= *(_BYTE *)(v39 + v44);
  v46 = 1554976193 * (v39 + v44) - 560003259 - ((-1185014910 * (v39 + v44)) & 0xBD3E0E8A);
  v47 = ((HIWORD(v46) ^ 0xDE9F) - 560003259 - ((2 * (HIWORD(v46) ^ 0xDE9F)) & 0xE8A)) ^ v46;
  v48 = 1554976193 * v47 - ((-1185014910 * v47) & 0xFB757518) - 38094196;
  LODWORD(v44) = HIBYTE(v48) ^ 5;
  LOBYTE(v48) = ((v48 ^ 0x8C) + (~(2 * (v48 ^ 0x8C)) | 7) - 3) ^ v36[170];
  v36[170] = *(_BYTE *)(STACK[0x6D0]
                      + (673 * v44 - 1184
                                                 * ((3627507 * (unint64_t)(673 * v44)) >> 32))) ^ (v48 - ((2 * v48) & 0x44) - 94) ^ 0x15;
  v49 = (_BYTE *)(v39 + (LODWORD(STACK[0x6A8]) + 367839069));
  v36[350] ^= *v49;
  v50 = 1554976193 * (_DWORD)v49 - 1938677465 - ((425597826 * (_DWORD)v49) & 0x18E4424E);
  v51 = ((HIWORD(v50) ^ 0x8C72) - 1938677465 - ((2 * (HIWORD(v50) ^ 0x8C72)) & 0x424E)) ^ v50;
  v52 = 1554976193 * v51 - ((962468738 * v51) & 0x7ACCFF98) - 1117356084;
  LOBYTE(v52) = ((v52 ^ 0xCC) - ((2 * v52) & 0x44) - 94) ^ *(_BYTE *)(STACK[0x6D0]
                                                                    + (673 * (HIBYTE(v52) ^ 0x45)
                                                                                   - 1184
                                                                                   * ((3627507
                                                                                     * (unint64_t)(673 * (HIBYTE(v52) ^ 0x45))) >> 32)));
  *(_BYTE *)(STACK[0x6D8] + 832) ^= 0x15 ^ (v52 - ((2 * v52) & 0xF8) - 4);
  v53 = (_BYTE *)(v39 + (LODWORD(STACK[0x6A0]) + 367839069));
  *(_BYTE *)(STACK[0x6D8] + 47) ^= *v53;
  LODWORD(v53) = 1554976193 * (_DWORD)v53 - 964301755 - ((-1185014910 * (_DWORD)v53) & 0x8D0BD88A);
  LODWORD(v53) = (((v53 >> 16) ^ 0xC685)
                - 964301755
                - 2 * (((v53 >> 16) ^ 0xC685) & 0xEC5F ^ (v53 >> 16) & 0x1A)) ^ v53;
  LODWORD(v53) = 1554976193 * (_DWORD)v53 - ((-1185014910 * (_DWORD)v53) & 0xCABCA6CE) + 1700680551;
  LOBYTE(v53) = ((v53 ^ 0x67) - ((2 * (v53 ^ 0x67)) & 0x44) - 94) ^ *(_BYTE *)(STACK[0x6D0] + (673 * ((v53 >> 24) ^ 0x9D) - 1184 * ((3627507 * (unint64_t)(673 * ((v53 >> 24) ^ 0x9D))) >> 32)));
  *(_BYTE *)(STACK[0x6D8] + 529) ^= 0x15 ^ ((_BYTE)v53 + (~(2 * (_BYTE)v53) | 7) - 3);
  LODWORD(v53) = STACK[0x698] & 0x80000004;
  v54 = LODWORD(STACK[0x694]) ^ 4;
  *(_BYTE *)(STACK[0x6D8] + 709) ^= *(_BYTE *)(v39 + (LODWORD(STACK[0x688]) + 367839069));
  LODWORD(v53) = 1554976193 * (v39 + v54 + 2 * (_DWORD)v53)
               + 1713479012
               - ((-1185014910 * (v39 + v54 + 2 * (_DWORD)v53)) & 0xCC433AC8);
  LODWORD(v53) = (((v53 >> 16) ^ 0x6621)
                + 1713479012
                - ((2 * ((v53 >> 16) ^ 0x6621)) & 0x13AC8)) ^ v53;
  LODWORD(v53) = 1554976193 * (_DWORD)v53 - ((-1185014910 * (_DWORD)v53) & 0x85750086) - 1027964861;
  v55 = (LODWORD(STACK[0x680]) + 367839069);
  LOBYTE(v53) = *(_BYTE *)(STACK[0x6D0]
                         + (673 * ((v53 >> 24) ^ 0x3A)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v53 >> 24) ^ 0x3A))) >> 32))) ^ ((v53 ^ 0x43) - 2 * ((v53 ^ 0x43) & 0x26 ^ v53 & 4) - 94);
  *(_BYTE *)(STACK[0x6D8] + 226) ^= 0x15 ^ ((_BYTE)v53 - ((2 * (_BYTE)v53) & 0xF8) - 4);
  *(_BYTE *)(STACK[0x6D8] + 406) ^= *(_BYTE *)(v39 + v55);
  v56 = 1554976193 * (v39 + v55) + 953556595 - ((962468738 * (v39 + v55)) & 0x71AC3CE6);
  v57 = ((HIWORD(v56) ^ 0x38D6) + 953556595 - ((2 * (HIWORD(v56) ^ 0x38D6)) & 0x3CE6)) ^ v56;
  v58 = 1554976193 * v57 - ((962468738 * v57) & 0x78413B02) + 1008770433;
  v59 = (LODWORD(STACK[0x67C]) + 367839069);
  *(_BYTE *)(STACK[0x6D8] + 888) ^= v58 ^ 0xCA ^ *(_BYTE *)(STACK[0x6D0]
                                                          + (673 * (HIBYTE(v58) ^ 0xC4)
                                                                         - 1184
                                                                         * ((3627507
                                                                           * (unint64_t)(673
                                                                                              * (HIBYTE(v58) ^ 0xC4))) >> 32)));
  *(_BYTE *)(STACK[0x6D8] + 103) ^= *(_BYTE *)(v39 + v59);
  v60 = 1554976193 * (v39 + v59) - 1134350660 - ((962468738 * (v39 + v59)) & 0x78C65D78);
  v61 = ((HIWORD(v60) ^ 0xBC63) - 1134350660 - ((2 * (HIWORD(v60) ^ 0xBC63)) & 0x5D78)) ^ v60;
  v62 = 1554976193 * v61 - ((962468738 * v61) & 0x4A9DC172) + 625926329;
  LOBYTE(v62) = *(_BYTE *)(STACK[0x6D0]
                         + (673 * (HIBYTE(v62) ^ 0xDD)
                                        - 1184 * ((3627507 * (unint64_t)(673 * (HIBYTE(v62) ^ 0xDD))) >> 32))) ^ ((v62 ^ 0xB9) - ((2 * (v62 ^ 0xB9)) & 0x44) - 94);
  *(_BYTE *)(STACK[0x6D8] + 585) ^= 0x15 ^ (v62 - ((2 * v62) & 0xF8) - 4);
  v63 = (_BYTE *)(v39 + (LODWORD(STACK[0x670]) + 367839069));
  *(_BYTE *)(STACK[0x6D8] + 765) ^= *v63;
  LODWORD(v53) = 1554976193 * (_DWORD)v63 + 218158304 - ((425597826 * (_DWORD)v63) & 0x1A01A9C0);
  LODWORD(v53) = (((v53 >> 16) ^ 0xD00)
                + 218158304
                - 2 * (((v53 >> 16) ^ 0xD00) & 0xD4EF ^ (v53 >> 16) & 0xF)) ^ v53;
  LODWORD(v53) = 1554976193 * (_DWORD)v53 - ((-1185014910 * (_DWORD)v53) & 0xCBDB2A88) + 1710069060;
  LOBYTE(v53) = *(_BYTE *)(STACK[0x6D0]
                         + (673 * ((v53 >> 24) ^ 0x9D)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v53 >> 24) ^ 0x9D))) >> 32))) ^ ((v53 ^ 0x44) - ((2 * (_BYTE)v53) & 0x44) - 94);
  *(_BYTE *)(STACK[0x6D8] + 282) ^= 0x15 ^ ((_BYTE)v53 - ((2 * (_BYTE)v53) & 0xF8) - 4);
  v64 = (_BYTE *)(v39 + (LODWORD(STACK[0x668]) + 367839069));
  *(_BYTE *)(STACK[0x6D8] + 462) ^= *v64;
  LODWORD(v64) = 1554976193 * (_DWORD)v64 + 1323550234 - ((-1185014910 * (_DWORD)v64) & 0x9DC78C34);
  LODWORD(v64) = (((v64 >> 16) ^ 0x4EE3)
                + 1323550234
                - ((2 * ((v64 >> 16) ^ 0x4EE3)) & 0x18C34)) ^ v64;
  LODWORD(v64) = 1554976193 * (_DWORD)v64 - ((962468738 * (_DWORD)v64) & 0x53706E0E) - 1447545081;
  LOBYTE(v55) = *(_BYTE *)(STACK[0x6D8] + 944) ^ ((v64 ^ 7)
                                                + ((2 * ((v64 ^ 7 | 0x7C) ^ v64)) ^ 9)
                                                - 3);
  v65 = (LODWORD(STACK[0x660]) + 367839069);
  *(_BYTE *)(STACK[0x6D8] + 944) = *(_BYTE *)(STACK[0x6D0]
                                            + (673 * ((v64 >> 24) ^ 0x51)
                                                           - 1184
                                                           * ((3627507
                                                             * (unint64_t)(673
                                                                                * ((v64 >> 24) ^ 0x51))) >> 32))) ^ (v55 - ((2 * v55) & 0x44) - 94) ^ 0x15;
  *(_BYTE *)(STACK[0x6D8] + 159) ^= *(_BYTE *)(v39 + v65);
  LODWORD(v64) = 1554976193 * (v39 + v65) + 1079205250 - ((-1185014910 * (v39 + v65)) & 0x80A6BB04);
  LODWORD(v64) = (((v64 >> 16) ^ 0x4053)
                + 1079205250
                - ((2 * ((v64 >> 16) ^ 0x4053)) & 0xBB04)) ^ v64;
  LODWORD(v64) = 1554976193 * (_DWORD)v64 - ((-1185014910 * (_DWORD)v64) & 0xFD6CB322) + 2125879697;
  LOBYTE(v64) = *(_BYTE *)(STACK[0x6D0]
                         + (673 * ((v64 >> 24) ^ 0x86)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v64 >> 24) ^ 0x86))) >> 32))) ^ ((v64 ^ 0x91) - ((2 * (_BYTE)v64) & 0x44) - 94);
  *(_BYTE *)(STACK[0x6D8] + 641) ^= 0x15 ^ ((_BYTE)v64 - ((2 * (_BYTE)v64) & 0xF8) - 4);
  v66 = (_BYTE *)(v39 + (LODWORD(STACK[0x658]) + 367839069));
  *(_BYTE *)(STACK[0x6D8] + 821) ^= *v66;
  LODWORD(v63) = 1554976193 * (_DWORD)v66 + 947606603 - ((962468738 * (_DWORD)v66) & 0x70F6A896);
  LODWORD(v63) = (((v63 >> 16) ^ 0x387B)
                + 947606603
                - 2 * (((v63 >> 16) ^ 0x387B) & 0x544F ^ (v63 >> 16) & 4)) ^ v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - ((962468738 * (_DWORD)v63) & 0x4CDC1DE4) - 1502736654;
  LOBYTE(v63) = *(_BYTE *)(STACK[0x6D0]
                         + (673 * ((v63 >> 24) ^ 0x5E)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v63 >> 24) ^ 0x5E))) >> 32))) ^ ((v63 ^ 0xF2) - 2 * ((v63 ^ 0xF2) & 0x23 ^ v63 & 1) - 94);
  v67 = STACK[0x6D0];
  v68 = (LODWORD(STACK[0x650]) + 367839069);
  *(_BYTE *)(STACK[0x6D8] + 338) ^= 0x15 ^ ((_BYTE)v63 + (~(2 * (_BYTE)v63) | 7) - 3);
  *(_BYTE *)(STACK[0x6D8] + 518) ^= *(_BYTE *)(v39 + v68);
  LODWORD(v64) = 1554976193 * (v39 + v68) + 2032615649 - ((-1185014910 * (v39 + v68)) & 0xF24E81C2);
  LODWORD(v64) = (((v64 >> 16) ^ 0x7927)
                + 2032615649
                - ((2 * ((v64 >> 16) ^ 0x7927)) & 0x81C2)) ^ v64;
  LODWORD(v64) = 1554976193 * (_DWORD)v64 - ((-1185014910 * (_DWORD)v64) & 0x907B0872) - 935492551;
  v69 = (LODWORD(STACK[0x648]) + 367839069);
  LOBYTE(v64) = *(_BYTE *)(v67
                         + (673 * ((v64 >> 24) ^ 0x30)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v64 >> 24) ^ 0x30))) >> 32))) ^ ((v64 ^ 0x39) - ((2 * (v64 ^ 0x39)) & 0x44) - 94);
  *(_BYTE *)(STACK[0x6D8] + 35) ^= 0x15 ^ ((_BYTE)v64 - ((2 * (_BYTE)v64) & 0xF8) - 4);
  *(_BYTE *)(STACK[0x6D8] + 215) ^= *(_BYTE *)(v39 + v69);
  LODWORD(v63) = 1554976193 * (v39 + v69) - 253443443 - ((-1185014910 * (v39 + v69)) & 0xE1C9851A);
  LODWORD(v63) = (((v63 >> 16) ^ 0xF0E4)
                - 253443443
                - 2 * (((v63 >> 16) ^ 0xF0E4) & 0xC28F ^ (v63 >> 16) & 2)) ^ v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - ((-1185014910 * (_DWORD)v63) & 0xF25FAF92) + 2033178569;
  v70 = (LODWORD(STACK[0x644]) + 367839069);
  *(_BYTE *)(STACK[0x6D8] + 697) ^= v63 ^ 0x82 ^ *(_BYTE *)(v67
                                                                           + (673
                                                                                          * ((v63 >> 24) ^ 0x81)
                                                                                          - 1184
                                                                                          * ((3627507
                                                                                            * (unint64_t)(673 * ((v63 >> 24) ^ 0x81))) >> 32)));
  *(_BYTE *)(STACK[0x6D8] + 877) ^= *(_BYTE *)(v39 + v70);
  LODWORD(v64) = v39 + v70 + 810546925 - ((2 * (v39 + v70)) & 0x609FEDDA);
  LODWORD(v63) = 1554976193 * (v64 ^ 0x304FF6ED)
               + 924417387
               - ((962468738 * (v64 ^ 0x304FF6ED)) & STACK[0x5A4]);
  LODWORD(v63) = (((v63 >> 16) ^ 0x3719)
                + 924417387
                - ((2 * ((v63 >> 16) ^ 0x3719)) & 0xFAD6)) ^ v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - ((962468738 * (_DWORD)v63) & 0x3D2FB4BE) - 1634215329;
  LOBYTE(v63) = *(_BYTE *)(v67
                         + (673 * ((v63 >> 24) ^ 0x66)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v63 >> 24) ^ 0x66))) >> 32))) ^ ((v63 ^ 0x5F) - ((2 * (v63 ^ 0x5F)) & 0x44) - 94);
  *(_BYTE *)(STACK[0x6D8] + 394) ^= 0x15 ^ ((_BYTE)v63 - ((2 * (_BYTE)v63) & 0xF8) - 4);
  v71 = (_BYTE *)(v39 + (LODWORD(STACK[0x640]) + 367839069));
  *(_BYTE *)(STACK[0x6D8] + 574) = *v71 ^ *(_BYTE *)(STACK[0x6D8]
                                                   + 272
                                                   * (((v64 & 0x8A407982 ^ 0x407080 | v64 & 0x8A407982 ^ 0x8A000902)
                                                     + 362394741) ^ 0x9FDA2F61)
                                                   % 0x3C5);
  v72 = (_BYTE *)STACK[0x6D8];
  LODWORD(v71) = 1554976193 * (_DWORD)v71 + 134413512 - ((425597826 * (_DWORD)v71) & 0x1005F990);
  LODWORD(v71) = (((v71 >> 16) ^ 0x802)
                + 134413512
                - 2 * (((v71 >> 16) ^ 0x802) & 0xFCDD ^ (v71 >> 16) & 0x15)) ^ v71;
  LODWORD(v71) = 1554976193 * (_DWORD)v71 - ((962468738 * (_DWORD)v71) & 0x44BA94BA) - 1570944419;
  v73 = 673 * ((v71 >> 24) ^ 0x5A)
      - 1184 * ((3627507 * (unint64_t)(673 * ((v71 >> 24) ^ 0x5A))) >> 32);
  LODWORD(v71) = *(unsigned __int8 *)(STACK[0x6D8] + 91) ^ ((v71 ^ 0x5D)
                                                          - 8 * ((v71 ^ 0x5D) >> 2)
                                                          - 4);
  v72[91] = *(_BYTE *)(v67 + v73) ^ ((_BYTE)v71 - ((2 * (_BYTE)v71) & 0x44) - 94) ^ 0x15;
  v74 = (_BYTE *)(v39 + (LODWORD(STACK[0x638]) + 367839069));
  v72[271] ^= *v74;
  LODWORD(v63) = 1554976193 * (_DWORD)v74 + 1970227098 - ((-1185014910 * (_DWORD)v74) & 0xEADE8F34);
  LODWORD(v63) = (((v63 >> 16) ^ 0x756F)
                + 1970227098
                - ((2 * ((v63 >> 16) ^ 0x756F)) & 0x8F34)) ^ v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - ((-1185014910 * (_DWORD)v63) & 0xA6225710) - 753849464;
  LOBYTE(v63) = *(_BYTE *)(v67
                         + (673 * ((v63 >> 24) ^ 0x2B)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v63 >> 24) ^ 0x2B))) >> 32))) ^ ((v63 ^ 0x88) - ((2 * (_BYTE)v63) & 0x44) - 94);
  v72[753] ^= 0x15 ^ ((_BYTE)v63 - ((2 * (_BYTE)v63) & 0xF8) - 4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * (LODWORD(STACK[0x6B4]) ^ 0x6F3)) - 4))(134413512, 68, 21, 4041523853, v34, v67, 673, 3627507, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_2361A8()
{
  JUMPOUT(0x234FDCLL);
}

uint64_t sub_2361B0@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  uint64_t (*v12)(void);

  v5 = v2 + 1;
  v6 = v3 ^ 0xBEC40ED7;
  v7 = 662 * (v3 ^ 0xBEC40ED7);
  v8 = STACK[0x6C8] + v5 + v6;
  *(_BYTE *)(v4 + (v7 + ((70 * (a2 ^ 0x185)) ^ 0x298F8)) % 0x3C5) ^= *(_BYTE *)v8;
  v9 = (v7 + 393228) % 0x3C5;
  LODWORD(v8) = 1554976193 * v8 - ((-1185014910 * v8) & 0xC7DCDEB0) - 470913192;
  LODWORD(v8) = v8 ^ WORD1(v8) ^ 0xE3EE8CB6;
  v10 = 1554976193 * v8 - ((-1185014910 * v8) & 0x9E81D29C) - 817829554;
  v11 = ((v10 ^ (230752256 * v8)) & 0xD293094 ^ 0xD002004 | (v10 ^ (230752256 * v8)) & 0xD293094 ^ 0x291090) ^ ((v9 & 0x235 ^ 0xD293235) + (v9 & 0x235));
  LOBYTE(v8) = ((v10 ^ 0x4E) - 2 * ((v10 ^ 0x4E) & 0x7D ^ v10 & 1) - 4) ^ *(_BYTE *)(v4 + v9);
  *(_BYTE *)(v4 + v9) = *(_BYTE *)(a1 + v11 * (HIBYTE(v10) ^ 0x37) % 0x4A0u) ^ (v8 - ((2 * v8) & 0x44) - 94) ^ 0x15;
  v12 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0]
                                      + 8
                                      * ((2015
                                        * (((v6 - 1094447401 - ((2 * v6 + 2) & 0x7D881DAE) + 1) ^ 0xBEC40EC0) < 0x40)) ^ (a2 - 9)))
                          - 4);
  LODWORD(STACK[0x5A0]) = 1142926438;
  return v12();
}

uint64_t sub_2363C0(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unint64_t v20;
  int v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  _BOOL4 v27;
  int v28;
  int v29;
  unint64_t v30;
  int v31;

  LODWORD(STACK[0x6D8]) = a4 ^ 0xC0EE2748;
  v11 = LODWORD(STACK[0x6B4]) + 1599471576;
  v12 = (~((*(unsigned __int8 *)STACK[0x540] * ((a8 + 403) ^ 0x7C838097) + 1927928190) & 0x5C24F12A)
       + 2118239199 * *(unsigned __int8 *)STACK[0x540]
       + 663184725) ^ v10;
  v13 = v8 - 704275051 + (v9 ^ 0xEC69B99) + v12 + v12 % 0x101;
  v14 = (v13 + 187204162 - ((2 * v13) & 0x16510484)) ^ a1;
  v15 = v14 - ((2 * v14 + 1850153174) & 0xB21099F8);
  v16 = (v15 + 271309159) ^ 0x26F7B303;
  v17 = v16 + v8;
  v18 = (a1 ^ 0xB288242) + v16 + 1;
  v19 = v9 ^ 0x2831289A ^ (v15 + 271309159);
  HIDWORD(v20) = (v15 + 271309159) ^ 0x19084CFC;
  LODWORD(v20) = -271309160 - v15;
  v21 = ((v17 - 704275051) ^ (v20 >> 30)) - (v19 + v18);
  v22 = v21 ^ 0xBC5A487;
  v23 = (v17 - 1407272028 - ((2 * (v17 - 704275051)) & 0xAC323C1E)) ^ v21 ^ 0xBC5A487;
  v24 = ((2 * v21) ^ 0xBBB97510) - v23 + (v21 >= 0);
  v25 = (v21 ^ 0xDDDCBA88) + v18;
  v26 = v22 ^ (v19 - ((2 * v19) & 0xAC323C1E) - 702996977);
  v27 = v11 > 0xD353BAD3;
  if (v11 < 0xD353BAD2)
    v27 = 1;
  v28 = (v24 ^ v26) - v25 - ((2 * ((v24 ^ v26) - v25) + 1676789112) & 0x7CB998A6) - 1336561905;
  v29 = v28 ^ (v25 + 1046269011 - ((2 * v25) & 0x7CB998A6));
  HIDWORD(v30) = v28 ^ 0xE5CCC53;
  LODWORD(v30) = v28 ^ 0x30000000;
  v31 = ((((v28 ^ 0x3E5CCC53) + v23) ^ (v30 >> 28)) + (v28 ^ 0x3E5CCC53) + v26) ^ v29;
  return ((uint64_t (*)(_QWORD, uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * ((3957 * !v27) ^ a8)) - 12))(v29 ^ 0xA53AFAD7 ^ (v31 - ((2 * v31 + 2059472602) & 0x5C24F12A) - 344784894), 1649920250);
}

void sub_2366F8()
{
  JUMPOUT(0x236438);
}

uint64_t sub_236700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v9 = *(_QWORD *)(v8 + 32);
  STACK[0x6D0] = (unint64_t)&STACK[0x810] + v7 + 80;
  STACK[0x6E0] = v7 + (v6 ^ 0x28u) + 1805;
  STACK[0x3E0] = v9;
  STACK[0x6D8] = (unint64_t)&STACK[0x810] + v7 + 1184;
  STACK[0x578] = (unint64_t)&STACK[0x810] + v7;
  STACK[0x430] = (unint64_t)&STACK[0x810] + v7 + 2144;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * (((8 * (v9 != 0)) | (32 * (v9 != 0))) ^ v6)) - 8))(a1, 2413259198, 1150031064, 234261532, 117130766, a6, 76826349, 1259675308);
}

uint64_t sub_2367E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1 + 8 * ((525 * (v1 == 574135856)) ^ v2)) - 8))(2230907867);
}

uint64_t sub_236BA4@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;

  v10 = (v4 ^ 0x6789FC6B)
      + 934268241 * (v5 + *(_DWORD *)(v6 + 4 * v5 - 0x1E46BBDD8) * (((v7 - 589) | 0x280) ^ 0x9C46C840))
      - 178349701;
  v11 = (v10 ^ 0x4FF6EB5B) - 1341582171 + ((2 * v10) & 0x9FEDD6B6);
  v12 = v11
      - 875632995
      * (v11
       - ((((v11 * (unint64_t)v8) >> 32)
                       + ((v11 - ((v11 * (unint64_t)v8) >> 32)) >> 1)) >> 11)
       * v9);
  v13 = (v12 + 736095652 - ((2 * v12) & 0x57BFDB48)) ^ a1;
  v14 = ((v13 + 1934805525 - ((2 * v13) & 0xE6A5942A)) ^ a2) + (v3 ^ 0xFFF8EB7F);
  v15 = v14 - ((2 * v14 - 157029004) & 0xDAEFFA36);
  v16 = v15 + 1758065621;
  v17 = ((v15 + 1758065621) ^ 0x128802E4) + 1;
  HIDWORD(v18) = (v15 + 1758065621) ^ 0x6D77FD1B;
  LODWORD(v18) = -1758065622 - v15;
  v19 = v17 + (a1 ^ 0x2BDFEDA4) - ((2 * (v17 + (a1 ^ 0x2BDFEDA4))) & 0x4E32214E);
  v20 = ((2 * (v17 + (a2 ^ 0x7352CA15))) & 0xEFF7FFC8) + ((v17 + (a2 ^ 0x7352CA15)) ^ 0x77FBFFE4);
  v21 = 2013003748 - v20 + (v18 >> 31);
  v22 = v21 ^ (v19 + 655954087);
  v23 = (v16 ^ v3 ^ 0x128F1664) - 2 * ((v16 ^ v3 ^ 0x128F1664) & 0x42F351F ^ (v16 ^ v3) & 1) - 2077280994;
  HIDWORD(v18) = v23 ^ v22 ^ 0x762879EA;
  LODWORD(v18) = v23 ^ v22;
  v24 = ((2 * (v20 - 2013003748 + HIDWORD(v18))) & 0x9FF6EDF4) + ((v20 - 2013003748 + HIDWORD(v18)) ^ 0x4FFB76FA);
  v25 = (v18 >> 31) + 343555776 - ((2 * (v18 >> 31)) & 0x28F47DAC) + 22;
  v26 = v25 ^ (v24 + 6);
  v24 -= 1341880058;
  v27 = v23 ^ v21;
  HIDWORD(v18) = v26 ^ 0x16;
  LODWORD(v18) = v25 ^ 0x147A3EC0 ^ v24;
  v28 = v18 >> 6;
  HIDWORD(v18) = v28 ^ 0x39999C8;
  LODWORD(v18) = v28 ^ 0x3C000000;
  v29 = (v27 ^ 0xAECE96B2) + (v22 ^ 0xDF8B30B) + ((v18 >> 26) ^ 0xE666720F);
  v30 = v29 - ((2 * v29 + 958594190) & 0x5469BAE6) - 960078918;
  v31 = v22 ^ 0x40428693 ^ v30;
  v32 = ((2 * ((v27 ^ 0x5131694D) + (v30 ^ 0xD5CB228C) + 1)) & 0xEF4CBD5C)
      + (((v27 ^ 0x5131694D) + (v30 ^ 0xD5CB228C) + 1) ^ 0xF7A65EAE);
  v33 = ((v30 >> 29) ^ 1 | (8 * v30) ^ 0x51A6EB98)
      - (((2 * ((v30 ^ 0x2A34DD73) + v24)) & 0xFEAF3F5E)
       + (((v30 ^ 0x2A34DD73) + v24) ^ 0xFF579FAF))
      + v32
      + 129057025;
  v34 = (v33 - 1737418987 + (~(2 * v33) | 0xCF1DD1D7)) ^ v31;
  v35 = v32 + 140091730 + ((v34 - ((2 * v34 - 1907294770) & 0xCF13F8D6) - 1364034734) ^ 0x6789FC6B);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a3 + 8 * ((79 * (v5 == 2031808447)) ^ v7)) - 8))(v35 + 736095652 - ((2 * v35) & 0x57BFDB48));
}

uint64_t sub_236FC4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  *(_BYTE *)(STACK[0x6D8] + (127 * (v1 ^ 0x3E2u) + 431 * v2 + 1198399810) % 0x3BD) = v2 - ((2 * v2 + 92) & 0x6A) + 99;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1706 * (v2 == 1771011425)) ^ v1)) - 8))();
}

uint64_t sub_23705C(uint64_t a1, int a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  char v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  char v19;
  char v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  char v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v14 = a8 ^ 0xC7EBB4DF;
  v15 = (((((v9 & 0xF ^ 0xA) - ((2 * (v9 & 0xF ^ 0xA)) & 0xFFFFFFF7) - 2006165349) ^ 0x50EC598B) - 148164288) ^ 0xCFAB3257)
      * a2
      + 139213;
  v16 = v15
      - ((((v15 * (unint64_t)a3) >> 32)
                      + ((v15 - ((v15 * (unint64_t)a3) >> 32)) >> 1)) >> 9)
      * a4;
  v17 = STACK[0x6D8];
  v18 = (_BYTE *)STACK[0x578];
  v19 = *(_BYTE *)(STACK[0x578] + 1632);
  v18[1632] = *(_BYTE *)(STACK[0x6D8] + v16);
  *(_BYTE *)(v17 + v16) = v19;
  v20 = v18[2063];
  v21 = ((a8 ^ 0xC7EBB4DF) % 0xF * a2
                     + 139644
                     - ((4487950 * (unint64_t)((a8 ^ 0xC7EBB4DF) % 0xF * a2 + 139644)) >> 32) * a4);
  v18[2063] = *(_BYTE *)(v17 + v21);
  v22 = ((2 * ((v10 ^ 0x22460A6Cu) % 0xE)) & 0x10 | ((v10 ^ 0x22460A6Cu) % 0xE)) ^ 0xBDF3FFE8;
  *(_BYTE *)(v17 + v21) = v20;
  v23 = (v22 + 1108083037) * ((v12 & a2 ^ 0xAD) + (((v8 ^ 0xB4) + 281) & a2));
  v24 = v18[1537];
  v18[1537] = *(_BYTE *)(v17 + (v23 - ((4487950 * (unint64_t)v23) >> 32) * a4));
  v25 = (((162 - v22) | (v22 + 93)) & 0xA7 | 0x108) * (v22 + 1108083037);
  *(_BYTE *)(v17 + (v25 - ((4487950 * (unint64_t)v25) >> 32) * a4)) = v24;
  v26 = 2 * (((v13 ^ 0xEBAF2BA6) % 0xD) & 7) + (((v13 ^ 0xEBAF2BA6) % 0xD) ^ 0x7CF6AB77);
  LODWORD(v21) = (v26 + ((371 - v26) & 0x143 ^ v26 & 3)) * a2 - 1665837132;
  v27 = v18[1968];
  v28 = a8 ^ v12;
  v18[1968] = *(_BYTE *)(v17
                       + v21
                       - ((((v21 * (unint64_t)a3) >> 32)
                                       + ((v21 - ((v21 * (unint64_t)a3) >> 32)) >> 1)) >> 9)
                       * a4);
  *(_BYTE *)(v17
           + v26 * a2
           - 1665697919
           - (((((v26 * a2 - 1665697919) * (unint64_t)a3) >> 32)
                           + ((v26 * a2
                                           - 1665697919
                                           - (((v26 * a2 - 1665697919) * (unint64_t)a3) >> 32)) >> 1)) >> 9)
           * a4) = v27;
  LODWORD(v21) = ((2 * ((v13 ^ 0x314166B7) + (v28 ^ 0x3C800DCD) + 1)) & 0xFA8E5FE2)
               + (((v13 ^ 0x314166B7) + (v28 ^ 0x3C800DCD) + 1) ^ 0x7D472FF1);
  v29 = ((2 * v28) & 0x549FD9FE ^ 0x5407C006) + (v28 ^ 0x84DC0FFC);
  v30 = v14 - v29;
  v31 = v30 + 1387884634;
  v32 = ((v29 + 1437602561) % 0xC * a2
                     + 140937
                     - ((4487950 * (unint64_t)((v29 + 1437602561) % 0xC * a2 + 140937)) >> 32) * a4);
  v33 = v29 + (v10 ^ 0x46417372);
  v34 = v18[1442];
  v18[1442] = *(_BYTE *)(v17 + v32);
  v35 = ((v30 + 1387884634) % 0xB * a2
                     + 141368
                     - ((4487950 * (unint64_t)((v30 + 1387884634) % 0xB * a2 + 141368)) >> 32) * a4);
  *(_BYTE *)(v17 + v32) = v34;
  v36 = v18[1873];
  v18[1873] = *(_BYTE *)(v17 + v35);
  *(_BYTE *)(v17 + v35) = v36;
  v37 = ((v33 + 1437602561) % 0xA * a2
                     + 141799
                     - ((4487950 * (unint64_t)((v33 + 1437602561) % 0xA * a2 + 141799)) >> 32) * a4);
  v38 = v18[1347];
  v18[1347] = *(_BYTE *)(v17 + v37);
  *(_BYTE *)(v17 + v37) = v38;
  v39 = (((int)v21 - 2101817329) % 9u * a2
                     + 142230
                     - ((4487950 * (unint64_t)(((int)v21 - 2101817329) % 9u * a2 + 142230)) >> 32) * a4);
  v40 = v21 + v30;
  LODWORD(v21) = ((2 * v31) & 0xEFF36FE4 ^ 0x61000AE0) + (v31 ^ 0xCF79FA86);
  v41 = v29 - v40 + v21 - 302588034;
  v42 = v40 - (v41 - 1780088423);
  v43 = v29 + v33 - 2 * ((v33 + 1437602561) & (v29 + 1437602561)) + v21 - 302588034;
  v44 = v43 - 2090758779;
  v45 = v18[1778];
  v18[1778] = *(_BYTE *)(v17 + v39);
  *(_BYTE *)(v17 + v39) = v45;
  LODWORD(v39) = v42 + v43 - 2090758779;
  v46 = (((_BYTE)v41 - 104) & 7) * a2 + 142661;
  v47 = (v46 - ((4487950 * (unint64_t)v46) >> 32) * a4);
  v48 = v18[1252];
  v18[1252] = *(_BYTE *)(v17 + v47);
  *(_BYTE *)(v17 + v47) = v48;
  LOBYTE(v47) = v18[1683];
  v49 = (((int)v21 - 1257270983) % 7u * a2
                     + 143092
                     - ((4487950 * (unint64_t)(((int)v21 - 1257270983) % 7u * a2 + 143092)) >> 32) * a4);
  v18[1683] = *(_BYTE *)(v17 + v49);
  *(_BYTE *)(v17 + v49) = v47;
  v50 = 2 * (((v42 + 1359677146) % 5u) & 3) + (((v42 + 1359677146) % 5u) ^ 0xBFFAFE7B);
  LODWORD(v47) = v50 - 2 * ((v50 + 328080) & 0x1A8C3AEB ^ v50 & 3) + 1519467640;
  v51 = ((v43 + 1164938898) % 6u * a2
                     + 143523
                     - ((4487950 * (unint64_t)((v43 + 1164938898) % 6u * a2 + 143523)) >> 32) * a4);
  LOBYTE(v32) = v18[2114];
  v18[2114] = *(_BYTE *)(v17 + v51);
  *(_BYTE *)(v17 + v51) = v32;
  LOBYTE(v51) = v44 - (v41 - 103);
  v52 = (v21 - 1257270983) ^ 0xDC2D6857 ^ (v44
                                         - (v41
                                          - 1780088423)
                                         - ((2 * (v44 - (v41 - 1780088423)) + 2068680444) & 0xB85AD0AE)
                                         + 433336277);
  v53 = (v52 - ((2 * v52) & 0xD3B585D6) - 371539221) ^ 0xE9DAC2EB;
  LOBYTE(v21) = v21 + v41 - 103 - 56 + v53;
  LOBYTE(v41) = v18[1588];
  LOBYTE(v32) = (v21 ^ 0xF3) + 1;
  LODWORD(v47) = (2 * (v47 & 3) + (v47 ^ 0x1A8C3BAB)) * a2;
  v18[1588] = *(_BYTE *)(v17
                       + v50 * a2
                       - 932200131
                       - (((((v50 * a2 - 932200131) * (unint64_t)a3) >> 32)
                                       + ((v50 * a2
                                                       - 932200131
                                                       - (((v50 * a2 - 932200131) * (unint64_t)a3) >> 32)) >> 1)) >> 9)
                       * a4);
  *(_BYTE *)(v17
           + v47
           - ((((v47 * (unint64_t)a3) >> 32)
                           + ((v47 - ((v47 * (unint64_t)a3) >> 32)) >> 1)) >> 9)
           * a4) = v41;
  v54 = ((((_BYTE)v32 + 2 * (_BYTE)v21) & 3) * a2
                     + 144385
                     - ((4487950 * (unint64_t)((((_BYTE)v32 + 2 * (_BYTE)v21) & 3u) * a2 + 144385)) >> 32) * a4);
  v55 = ((_DWORD)v39 + 320407527 + v53) % 3;
  LOBYTE(v39) = v18[2019];
  v18[2019] = *(_BYTE *)(v17 + v54);
  *(_BYTE *)(v17 + v54) = v39;
  v56 = (v55 * a2 + 144816 - ((4487950 * (unint64_t)(v55 * a2 + 144816)) >> 32) * a4);
  LOBYTE(v54) = v18[1493];
  v18[1493] = *(_BYTE *)(v17 + v56);
  *(_BYTE *)(v17 + v56) = v54;
  LOBYTE(v39) = v18[1924];
  LODWORD(v56) = ((((_BYTE)v32 + (_BYTE)v51) & 1 | (2 * (((_BYTE)v32 + (_BYTE)v51) & 1))) ^ 0xF97D7BFD) * a2 - 172066708;
  v57 = v56
      - ((((v56 * (unint64_t)a3) >> 32)
                      + ((v56 - ((v56 * (unint64_t)a3) >> 32)) >> 1)) >> 9)
      * a4;
  v18[1924] = *(_BYTE *)(v17 + v57);
  *(_BYTE *)(v17 + v57) = v39;
  v58 = STACK[0x6C0];
  LODWORD(v57) = v11 + 1704;
  LODWORD(v47) = (*(unsigned __int8 *)(STACK[0x6D8]
                                     + (v57 ^ 0x861BE2A5)
                                     + 1031152579 * a2
                                     - ((((((v57 ^ 0x861BE2A5) + 1031152579 * a2)
                                                       * (unint64_t)a3) >> 32)
                                                     + (((v57 ^ 0x861BE2A5)
                                                                     + 1031152579 * a2
                                                                     - ((((v57 ^ 0x861BE2A5)
                                                                        + 1031152579 * a2)
                                                                       * (unint64_t)a3) >> 32)) >> 1)) >> 9)
                                     * a4) ^ 0xB5)
               * a2
               + 279719;
  *(_BYTE *)(STACK[0x6D8] + (v47 - ((4487950 * (unint64_t)v47) >> 32) * a4)) = -75;
  return (*(uint64_t (**)(void))(v58 + 8 * v11))();
}

void sub_23781C()
{
  JUMPOUT(0x2377A4);
}

uint64_t sub_237824@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + (((a1 - 604941014) & 0x240EA7F6 ^ 0x4E9u) * v1 + 1796419032) % 0x3BD) = v1
                                                                                        - ((2 * v1 + 74) & 0x6A)
                                                                                        + 26;
  return (*(uint64_t (**)(void))(v3 + 8 * ((268 * (v1 + 1 == v2 + 3586)) ^ a1)))();
}

uint64_t sub_2378B4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  _BYTE *v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int v34;
  int v35;
  int v36;
  int v37;
  char v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  unsigned int v49;

  v14 = (431 * (v8 & 0xF ^ 0xB)
                     + 139213
                     - ((4487950 * (unint64_t)(431 * (v8 & 0xF ^ 0xBu) + 139213)) >> 32) * v12);
  v15 = v9[1632];
  v9[1632] = *(_BYTE *)(v13 + v14);
  *(_BYTE *)(v13 + v14) = v15;
  v16 = v9[2063];
  v17 = (431 * ((a6 ^ 0x7352CA15u) % 0xF)
                     + 139644
                     - ((4487950 * (unint64_t)(431 * ((a6 ^ 0x7352CA15u) % 0xF) + 139644)) >> 32) * v12);
  v9[2063] = *(_BYTE *)(v13 + v17);
  *(_BYTE *)(v13 + v17) = v16;
  v18 = (431 * ((a1 ^ 0x2BDFEDA4u) % 0xE)
                     + 140075
                     - ((4487950 * (unint64_t)(431 * ((a1 ^ 0x2BDFEDA4u) % 0xE) + 140075)) >> 32) * v12);
  v19 = v9[1537];
  v9[1537] = *(_BYTE *)(v13 + v18);
  *(_BYTE *)(v13 + v18) = v19;
  v20 = 431 * (((v7 ^ 0xFFF8EB7F) % 0xD - ((2 * ((v7 ^ 0xFFF8EB7F) % 0xD)) & 0x14) - 93579862) ^ 0xFA6C15AA) + 140506;
  v21 = v20
      - ((((v20 * (unint64_t)v11) >> 32)
                      + ((v20 - ((v20 * (unint64_t)v11) >> 32)) >> 1)) >> 9)
      * v12;
  v22 = v9[1968];
  LODWORD(v14) = (a6 ^ 0x7352CA15) - 1469480100 + (a6 ^ v8 ^ 0x6C8D8B0);
  v23 = ((2 * v14) & 0xD5FEBFEA) + (v14 ^ 0xEAFF5FF5);
  v24 = a6 ^ v8 ^ 0xF937274F;
  v9[1968] = *(_BYTE *)(v13 + v21);
  *(_BYTE *)(v13 + v21) = v22;
  LODWORD(v21) = v23 + 352362507;
  v25 = (431 * (v24 % 0xC)
                     + 140937
                     - ((4487950 * (unint64_t)(431 * (v24 % 0xC) + 140937)) >> 32) * v12);
  v26 = (v7 ^ 0x2516A66E) + (a6 ^ v8 ^ 0xEB24C981) + 1;
  v27 = v24 + (a1 ^ 0x4FD894BA) - ((2 * (v24 + (a1 ^ 0x4FD894BA))) & 0x5EDED784) - 1351652414;
  v28 = ((2 * v26) & 0xBD54FFEC) + (v26 ^ 0xDEAA7FF6);
  v29 = v9[1442];
  v9[1442] = *(_BYTE *)(v13 + v25);
  *(_BYTE *)(v13 + v25) = v29;
  v30 = 431 * ((((v23 + 352362507) % 0xBu) ^ 0x7A4FF3FF) + 2 * ((v23 + 352362507) % 0xBu)) + 325475815;
  v31 = v30
      - ((((v30 * (unint64_t)v11) >> 32)
                      + ((v30 - ((v30 * (unint64_t)v11) >> 32)) >> 1)) >> 9)
      * v12;
  LOBYTE(v25) = v9[1873];
  v9[1873] = *(_BYTE *)(v13 + v31);
  *(_BYTE *)(v13 + v31) = v25;
  LODWORD(v31) = 431 * (((2 * ((v27 ^ 0xAF6F6BC2) % 0xA)) & 0x1A) + (((v27 ^ 0xAF6F6BC2) % 0xA) ^ 0xBBED4EED))
               - 1686484764;
  v32 = v31
      - ((((v31 * (unint64_t)v11) >> 32)
                      + ((v31 - ((v31 * (unint64_t)v11) >> 32)) >> 1)) >> 9)
      * v12;
  LODWORD(v25) = (v28 + 559251466) % 9;
  v33 = v9[1347];
  v9[1347] = *(_BYTE *)(v13 + v32);
  v34 = v23 + v28;
  LODWORD(v21) = ((2 * v21) & 0xF5ADE74E ^ 0x71008248) + (v21 ^ 0xC256BED3);
  LODWORD(v18) = v24 - v34 + v21 - 1753231622;
  v35 = v34 - (v18 - 191837339);
  *(_BYTE *)(v13 + v32) = v33;
  v36 = ((431 * v25) ^ 0x4F94FAE7) + ((862 * v25) & 0x35CE);
  v37 = (a6 ^ v8 ^ 0x56584C8D ^ v27) + v21 - 1753231622;
  v38 = v9[1778];
  v9[1778] = *(_BYTE *)(v13 + (v36 - 1335021393) % ((((848 - v36) & 0x3AD) + ((v36 + 175) & 0x3AD)) | 0x18u));
  *(_BYTE *)(v13
           + (431 * v25
                          + 142230
                          - ((4487950 * (unint64_t)(431 * v25 + 142230)) >> 32) * v12)) = v38;
  LODWORD(v32) = v21 - 1305324156;
  LOBYTE(v27) = v9[1252];
  LODWORD(v25) = 431 * (((_BYTE)v18 + 106) & 7) + 142661;
  v39 = (v25 - ((4487950 * (unint64_t)v25) >> 32) * v12);
  v9[1252] = *(_BYTE *)(v13 + v39);
  v40 = v37 - 76478623;
  *(_BYTE *)(v13 + v39) = v27;
  v41 = (431 * (((int)v21 - 1305324156) % 7u)
                     + 143092
                     - ((4487950 * (unint64_t)(431 * (((int)v21 - 1305324156) % 7u) + 143092)) >> 32) * v12);
  LOBYTE(v27) = v9[1683];
  v9[1683] = *(_BYTE *)(v13 + v41);
  v42 = v21 + v18 - 191837339;
  *(_BYTE *)(v13 + v41) = v27;
  LODWORD(v14) = 431 * (2 * (((v37 - 307675809) % 6u) & 3) + (((v37 - 307675809) % 6u) ^ 0xFFF6DF5B)) + 257959534;
  LOBYTE(v21) = v9[2114];
  v43 = v14
      - ((((v14 * (unint64_t)v11) >> 32)
                      + ((v14 - ((v14 * (unint64_t)v11) >> 32)) >> 1)) >> 9)
      * v12;
  v9[2114] = *(_BYTE *)(v13 + v43);
  LODWORD(v14) = (v37 - 76478623 - (v18 - 191837339) + 796255257) ^ v32;
  *(_BYTE *)(v13 + v43) = v21;
  LODWORD(v43) = v6 + 431 * ((v35 + 1939066416) % 5u) - 431;
  v44 = v43
      - ((((v43 * (unint64_t)v11) >> 32)
                      + ((v43 - ((v43 * (unint64_t)v11) >> 32)) >> 1)) >> 9)
      * v12;
  LOBYTE(v37) = v42 + 114 + 2 * v14 + ~(_BYTE)v14;
  v45 = v9[1588];
  v9[1588] = *(_BYTE *)(v13 + v44);
  *(_BYTE *)(v13 + v44) = v45;
  v46 = (v6 + 431 * (v37 & 3) - ((4487950 * (unint64_t)(v6 + 431 * (v37 & 3u))) >> 32) * v12);
  v47 = v9[2019];
  v9[2019] = *(_BYTE *)(v13 + v46);
  *(_BYTE *)(v13 + v46) = v47;
  v48 = (v6
                     + 431
                     * ((v35 + v40 - 403952849 + ((2 * (_DWORD)v14) & 0xFBBFB1FE) + (v14 ^ 0x7DDFD8FF)) % 3)
                     + 431
                     - ((4487950
                       * (unint64_t)(v6
                                          + 431
                                          * ((v35
                                            + v40
                                            - 403952849
                                            + ((2 * (_DWORD)v14) & 0xFBBFB1FE)
                                            + (v14 ^ 0x7DDFD8FF))
                                           % 3)
                                          + 431)) >> 32)
                     * v12);
  LOBYTE(v35) = v9[1493];
  v9[1493] = *(_BYTE *)(v13 + v48);
  *(_BYTE *)(v13 + v48) = v35;
  LODWORD(v18) = ((((v42 + 1962190697) & 0xBAB96DD2 ^ 0xBAB96DD2) + ((v42 + 1962190697) & 0xBAB96DD2))
                * (((v18 - 145547958) & 0x315A896F ^ 0x315A896F) + ((v18 - 145547958) & 0x315A896F))) & 0xFFFFFFFE | ((_BYTE)v40 - ((_BYTE)v18 + 101) - (_BYTE)v37) & 1;
  LODWORD(v48) = ((2 * v18) & 0xF7F7AF9E ^ 2) + (v18 ^ 0x7BFBD7CE);
  LODWORD(v18) = 431 * v48
               + 1124190796
               - (((((431 * v48 + 1124190796) * (unint64_t)v11) >> 32)
                               + ((431 * v48
                                               + 1124190796
                                               - (((431 * v48 + 1124190796) * (unint64_t)v11) >> 32)) >> 1)) >> 9)
               * v12;
  LODWORD(v48) = 431 * (v48 + (((v18 | 0x74) - (v18 & 0x18B) + 395) & 0x143)) + 1124051583;
  LOBYTE(v32) = v9[1924];
  v9[1924] = *(_BYTE *)(v13 + v18);
  *(_BYTE *)(v13
           + v48
           - ((((v48 * (unint64_t)v11) >> 32)
                           + ((v48 - ((v48 * (unint64_t)v11) >> 32)) >> 1)) >> 9)
           * v12) = v32;
  v49 = 431 * (0x614A4000u >> ((v10 + 33) & 0xBF ^ 0x23)) + 279719;
  LOBYTE(v49) = (16 * *(_BYTE *)(v13 + (v49 - ((4487950 * (unint64_t)v49) >> 32) * v12))) ^ 0x50;
  LODWORD(v32) = *((unsigned __int8 *)*(&off_38F180 + (v10 ^ 0x59E))
                 + (unsigned __int16)(69
                                    * (*(unsigned __int8 *)(v13 + (279719 - 292 * v12)) ^ 0xB7 ^ (v49 - ((2 * v49) & 0x60) - 75))
                                    + 1311)
                 % 0x3A0u
                 - 4);
  LODWORD(v32) = 431
               * (v32 ^ 0xBD ^ (((v32 >> 3) ^ 0xD ^ (v32 >> 7))
                                                                - ((2 * ((v32 >> 3) ^ 0xD)) & 0x30)
                                                                - 8))
               + 139213;
  *(_BYTE *)(v13
           + 290925
           - ((((290925 * (unint64_t)v11) >> 32)
                           + ((290925 - ((290925 * (unint64_t)v11) >> 32)) >> 1)) >> 9)
           * v12) = *(_BYTE *)(v13 + (v32 - ((4487950 * (unint64_t)v32) >> 32) * v12));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * v10) - 12))(321478094);
}

uint64_t sub_238134(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  char v10;
  char v11;
  unsigned int v12;

  v8 = 431 * (((_BYTE)v4 + 2) & 0xF) + 279719;
  v9 = *(_BYTE *)(a4
                + (431 * ((v4 + 2850) >> ((a3 ^ 0x27) + 4))
                               + 279719
                               - 957
                               * ((4487950
                                 * (unint64_t)(431
                                                    * ((v4 + 2850) >> ((a3 ^ 0x27) + 4))
                                                    + 279719)) >> 32)));
  v10 = *(_BYTE *)(v7
                 + (unsigned __int16)(69
                                    * (*(unsigned __int8 *)(a4
                                                          + (v8
                                                                         - 957
                                                                         * ((4487950 * (unint64_t)v8) >> 32))) ^ 0xFA ^ (((16 * v9) ^ 0x50) - ((2 * ((16 * v9) ^ 0x50)) & 0x60) - 75))
                                    + 20769)
                 % 0x3A0u) ^ 0xF8;
  v11 = v10 - ((2 * v10 - 98) & 0xF3) - 56;
  v12 = v6 + 431 * ((((-48 * (v11 ^ 0xF9) - 7) ^ v11) >> 4) ^ 7);
  LOBYTE(v12) = (16 * *(_BYTE *)(a4 + (v12 - 957 * ((4487950 * (unint64_t)v12) >> 32)))) ^ 0x50;
  *(_BYTE *)(a4 + (431 * v4 + 120352318) % 0x3BDu) = v12 - ((2 * v12) & 0x60) - 75;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((3612 * (v4 != 1235396061)) ^ a3)) - 12))();
}

uint64_t sub_2382A0@<X0>(int a1@<W0>, uint64_t a2@<X3>, __int16 a3@<W5>, int a4@<W8>)
{
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  char v8;
  __int16 v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;

  v15 = ((a1 + 562) >> 4) * v4 + 279719;
  LOBYTE(v15) = v8 ^ (16 * *(_BYTE *)(a2 + (v15 - ((v15 * (unint64_t)v5) >> 32) * v7)));
  LOWORD(v15) = (*(unsigned __int8 *)(a2
                                    + ((((_BYTE)a1 + 2) & 0xF) * v4
                                                   + 279719
                                                   - ((((((_BYTE)a1 + 2) & 0xFu) * v4 + 279719) * (unint64_t)v5) >> 32)
                                                   * v7)) ^ 0x2A ^ (v15 - ((2 * v15) & 0x60) - 75))
              * v9
              - 24481;
  v16 = v13
      + (*(unsigned __int8 *)(v14
                            + (unsigned __int16)(v15
                                               - ((unsigned __int16)(((unsigned __int16)v15 * v10) >> 16) >> 8)
                                               * a3)) ^ 0x78)
      * v4;
  *(_BYTE *)(a2
           + a1 * v4
           - 1117936090
           - (((((a1 * v4 - 1117936090) * (unint64_t)v11) >> 32)
                           + ((a1 * v4
                                           - 1117936090
                                           - (((a1 * v4 - 1117936090) * (unint64_t)v11) >> 32)) >> 1)) >> 9)
           * v7) = *(_BYTE *)(a2 + (v16 - ((v16 * (unint64_t)v5) >> 32) * v7));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((a1 != 321478349) * a4) | v6)) - 12))();
}

uint64_t sub_238390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v11 = 69
      * ((((431 * a8 + 414964384) % 0x3BDu) & (((v8 + 529) | 0xCE) ^ 0x9C5))
       + (((431 * a8 + 414964384) % 0x3BDu) & (((v8 + 529) | 0xCE) ^ 0x9C5) ^ 0x11A)
       + (*(unsigned __int8 *)(a4 + (431 * a8 + 414964384) % 0x3BDu) ^ 0xBA));
  *(_BYTE *)(a4 + (431 * a8 + 415089374) % 0x3BDu) = *(_BYTE *)(v10
                                                              + (v11
                                                                             - 928
                                                                             * ((4628198 * (unint64_t)v11) >> 32))) ^ 0x57;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((3807 * (a8 == -877892808)) ^ v8)) - 12))();
}

uint64_t sub_23848C@<X0>(uint64_t a1@<X3>, int a2@<W4>, int a3@<W8>)
{
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v11 = (((((112 - a2) & 0x41) + (v8 & 0x41 ^ 0x40)) | ~(v8 ^ 0xDCA9CABD | v8 ^ 0x23563400) | 0x142)
       + (*(unsigned __int8 *)(v10
                             + (v8 ^ 0xDCA9C041 ^ ((v5 - 43) | 0x200)) * v6
                             - (v8 ^ 0xDCA9C041 ^ ((v5 - 43) | 0x200)) * v6 / 0x3A0 * v7) ^ 0x6D))
      * a3;
  *(_BYTE *)(a1
           + a2 * a3
           - 585988248
           - (((((a2 * a3 - 585988248) * (unint64_t)v3) >> 32)
                           + ((a2 * a3
                                           - 585988248
                                           - (((a2 * a3 - 585988248) * (unint64_t)v3) >> 32)) >> 1)) >> 9)
           * v4) = *(_BYTE *)(a1
                            + v11
                            - ((((v11 * (unint64_t)v3) >> 32)
                                            + ((v11 - ((v11 * (unint64_t)v3) >> 32)) >> 1)) >> 9)
                            * v4);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1100 * (a2 == -546721408)) ^ v5)) - 12))();
}

uint64_t sub_2385B0()
{
  int v0;
  unsigned int v1;
  unsigned int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;

  LODWORD(STACK[0x6C8]) = -1467226030;
  v1 = 79773921 - (((1064694327 << ((v0 ^ 0x2E) + 103)) - 661572638) & 0xB2056972);
  v2 = ((764453921 * LODWORD(STACK[0x6E8]) + 778870397) ^ 0x99C91727)
     + 798799696
     - ((2 * ((764453921 * LODWORD(STACK[0x6E8]) + 778870397) ^ 0x99C91727)) & 0x5F396EA0);
  v3 = (v2 ^ 0x2F9CB750) - 1477121746 + ~((2 * (v2 ^ 0x2F9CB750) + 1890608058) & 0x5F396EA0);
  if ((v2 ^ 0x2F9CB750) < 0x87A7CE23)
    v3 = ((764453921 * LODWORD(STACK[0x6E8]) + 778870397) ^ 0x99C91727)
       + 798799696
       - ((2 * ((764453921 * LODWORD(STACK[0x6E8]) + 778870397) ^ 0x99C91727)) & 0x5F396EA0);
  v4 = (LODWORD(STACK[0x6C8])
      - 486634498
      + ((798799696
        - 1587129527 * ((v3 ^ 0x2F9CB750u) % 0x6AD)
        - ((1120708242 * ((v3 ^ 0x2F9CB750u) % 0x6AD)) & 0x5F396EA0)) ^ v2)) ^ v1;
  v5 = ((2 * v4) & 0xD7E5FD56 ^ 0x92056952) + (v4 ^ 0x32F04A12);
  v6 = v5 + 1921651544;
  v7 = v5 - ((2 * v5 + 766120130) & 0x3E31F870) - 1242692455;
  v8 = v7 ^ v1;
  v9 = ((LODWORD(STACK[0x6C8]) - 16870513) ^ 0x9F18FC38 ^ v7)
     - ((2 * ((LODWORD(STACK[0x6C8]) - 16870513) ^ 0x9F18FC38 ^ v7)) & 0x1A112ADA)
     + 218666349;
  HIDWORD(v10) = v5 + 232048161 + (((117360270 - v5) | (v5 + 151075185)) & 0x9004240);
  LODWORD(v10) = v5 + 383060065;
  v11 = (v10 >> 28) - (v5 + 1921651544) + 2008355465 + (v9 ^ 0xF2F76A92);
  v12 = (v11 - 971356031 - ((2 * v11) & 0x8C349102)) ^ v8;
  v13 = v12 - ((2 * v12 + 1932676522) & 0x55738D48) - 1538069127;
  v14 = v13 ^ 0xD546395B;
  v15 = ((2 * (v6 - 2008358840 + (v13 ^ 0xD546395B) + 3377)) & 0xBCD31FDE)
      + ((v6 - 2008358840 + (v13 ^ 0xD546395B) + 3377) ^ 0x5E698FEF);
  HIDWORD(v10) = v13 ^ 0xAB9C6A4;
  LODWORD(v10) = v13 ^ 0x20000000;
  v16 = v13 ^ v9;
  v17 = (v8 ^ 0xC61A4881) + v14 - 1366165348 - ((2 * ((v8 ^ 0xC61A4881) + v14 + 1)) & 0x5D23F136);
  v18 = (v17 ^ 0x516E0764)
      + (((v10 >> 28) - 1583976431 + v15 + 665932745 - ((2 * ((v10 >> 28) - 1583976431 + v15)) & 0x4F62A792)) ^ v16)
      + 1;
  v19 = ((2 * v18) & 0xFFBBC9B2) + (v18 ^ 0x7FDDE4D9);
  v20 = ((2 * ((v16 ^ 0x27B153C9) - v19 + 880342422)) & 0xCDF7EBAC)
      + (((v16 ^ 0x27B153C9) - v19 + 880342422) ^ 0x66FBF5D6);
  HIDWORD(v10) = v19 + 193399402;
  LODWORD(v10) = v19 - 880342422;
  v21 = ((v10 >> 29)
       + v20
       - 1727788501
       + ((v15 - v19 - ((2 * (v15 - v19) - 1407268018) & 0xC2E09A7A) - 1216367900) ^ 0x1E8FB2C2)) ^ (v19 - 880342422) ^ v17;
  LODWORD(STACK[0x6C8]) = v20 - (((2 * v21) & 0x7FFFCFBE ^ 0x5D23C136) + (v21 ^ 0x916E1F44)) + 2057779149;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * (v0 ^ 0xF)) - 4))(3185569646);
}

void sub_238AAC()
{
  JUMPOUT(0x238668);
}

uint64_t sub_238AD8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;

  LODWORD(STACK[0x594]) = v6;
  LODWORD(STACK[0x694]) = a6 - 375041683;
  v9 = (v7 ^ v8) + 526270158 + a6;
  LODWORD(STACK[0x590]) = 2 * v9;
  LODWORD(STACK[0x58C]) = (v9 ^ 0xB8FFFFFA) + 1333664768;
  v10 = (a2 + 170) | 0x183;
  v11 = STACK[0x6E8];
  LODWORD(STACK[0x6B8]) = v10;
  v12 = ((v10 ^ 0x5F83D18D) + 764453921 * v11 - 823604685) ^ 0x99C91727;
  v13 = ((675631494
        - 1587129527 * (((v12 + 675631494 - ((2 * v12) & 0x508AA30C)) ^ 0x28455186) % 0x6AD)
        - ((1120708242 * (((v12 + 675631494 - ((2 * v12) & 0x508AA30C)) ^ 0x28455186) % 0x6AD)) & 0x508AA30C)) ^ (v12 + 675631494 - ((2 * v12) & 0x508AA30C)))
      - 1953860528;
  v14 = (v13 + 1209278138 - ((2 * v13) & 0x90283D74)) ^ 0xE3AA9292;
  v15 = v14 - ((2 * v14 + 93326872) & 0x50E7B3AE) - 1422139165;
  v16 = v15 ^ 0xE3AA9292;
  v17 = (v15 ^ 0x8FF9A236) - ((2 * (v15 ^ 0x8FF9A236)) & 0xA6DEF650) + 1399814952;
  v18 = ((2 * ((v15 ^ 0x2873D9D7) - 469763985)) & 0xF5F4BBFE) + (((v15 ^ 0x2873D9D7) - 469763985) ^ 0xFAFA5DFF);
  HIDWORD(v19) = v15 ^ 0x873D9D7;
  LODWORD(v19) = v15 ^ 0x20000000;
  v20 = (v19 >> 28) - 84255233 - v18 + (v17 ^ 0xAC9084D7) + 1;
  v21 = (v20 + 1617413997 - ((2 * v20) & 0xC0CF8EDA)) ^ v16;
  v22 = v21 - ((2 * v21 + 53628330) & 0xD1E5A42);
  v23 = (v22 + 2642934) ^ v17;
  v24 = (v22 + 2642934) ^ 0x7970D2DE;
  v25 = (v16 ^ 0x6067C76D) + v24 + 1 - ((2 * ((v16 ^ 0x6067C76D) + v24 + 1)) & 0x9F8E350C) - 809035130;
  v26 = ((2 * (v18 + 84255234 + v24)) & 0x58FD39AE) + ((v18 + 84255234 + v24) ^ 0x2C7E9CD7);
  HIDWORD(v19) = (v22 + 2642934) ^ 0x68F2D21;
  LODWORD(v19) = v22 - 2144840714;
  v27 = (v25 ^ 0x3038E579)
      + (((v19 >> 28) - 746495191 + v26 - 706718199 - ((2 * ((v19 >> 28) - 746495191 + v26)) & 0xABC0AC12)) ^ v23)
      + 1;
  v28 = v27 - ((2 * v27 + 382328454) & 0x7EE407B2) + 181859100;
  v29 = (v28 ^ 0x408DFC26) + v26 - ((2 * ((v28 ^ 0x408DFC26) + v26) + 654493268) & 0x2F3F61C0) - 350153718;
  HIDWORD(v19) = v28 ^ 0x1F7203D9;
  LODWORD(v19) = v28 ^ 0xA0000000;
  v30 = ((v19 >> 29)
       + ((2 * ((v23 ^ 0xD5E05609) + (v28 ^ 0x408DFC26) + 1)) & 0x93D53FBA)
       + (((v23 ^ 0xD5E05609) + (v28 ^ 0x408DFC26) + 1) ^ 0xC9EA9FDD)
       + 907370532
       + (v29 ^ 0xE8604F1F)) ^ v28 ^ v25;
  v31 = ((2 * v30) & 0xF97FE9FE ^ 0xE16A20BE) + (v30 ^ 0xC0AEDA0);
  LODWORD(STACK[0x6A0]) = v31 - 180036857;
  LODWORD(STACK[0x6B0]) = ((2 * ((v31 - 492949074) ^ v29)) & 0x3CF3CB90 ^ 0x2C334180)
                        + ((v31 - 492949074) ^ v29 ^ 0x9E65528)
                        - 69731584;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6C0] + 8 * a2) - 4))(1617413997);
}

void sub_238F94()
{
  JUMPOUT(0x238BECLL);
}

uint64_t sub_238FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  char v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  unint64_t v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  unsigned int v226;
  int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  int v235;
  int v236;
  int v237;
  unsigned int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  unsigned int v244;
  int v245;
  int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  uint64_t v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  int v276;
  int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  int v284;
  unsigned int v285;
  int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  unsigned int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  char v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  unsigned int v351;
  int v352;
  int v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  int v368;
  int v369;
  unsigned int v370;
  int v371;
  int v372;
  int v373;
  int v374;
  unsigned int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  int v384;
  int v385;
  unsigned int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  unint64_t v391;
  int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  int v412;
  unsigned int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  int v418;
  unsigned int v419;
  int v420;
  int v421;
  int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  int v427;
  int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  unsigned int v439;
  int v440;
  unsigned int v441;
  int v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  int v447;
  int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  int v466;
  int v467;
  unsigned int v468;
  int v469;
  unsigned int v470;
  int v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  int v481;
  int v482;
  int v483;
  unsigned int v484;
  int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  int v496;
  int v497;
  unsigned int v498;
  int v499;
  unsigned int v500;
  unsigned int v501;
  int v502;
  int v503;
  unsigned int v504;
  unsigned int v505;
  int v506;
  int v507;
  int v508;
  unsigned int v509;
  int v510;
  unsigned int v511;
  unsigned int v512;
  int v513;
  unsigned int v514;
  unsigned int v515;
  unsigned int v516;
  unsigned int v517;
  unsigned int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  unsigned int v524;
  int v525;
  unsigned int v526;
  unsigned int v527;
  int v528;
  int v529;
  int v530;
  unsigned int v531;
  unsigned int v532;
  int v533;
  unsigned int v534;
  int v535;
  int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  unsigned int v546;
  int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  unsigned int v552;
  int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  unsigned int v558;
  unsigned int v559;
  int v560;
  unsigned int v561;
  int v562;
  unsigned int v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  int v568;
  unsigned int v569;
  int v570;
  unsigned int v571;
  int v572;
  unsigned int v573;
  unsigned int v574;
  int v575;
  unsigned int v576;
  int v577;
  unsigned int v578;
  int v579;
  unsigned int v580;
  int v581;
  unsigned int v582;
  int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  int v587;
  unsigned int v588;
  int v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  int v600;
  int v601;
  unsigned int v602;
  int v603;
  int v604;
  int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  unsigned int v609;
  int v610;
  int v611;
  unsigned int v612;
  unsigned int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  int v619;
  int v620;
  unsigned int v621;
  int v622;
  int v623;
  unsigned int v624;
  unsigned int v625;
  int v626;
  int v627;
  unsigned int v628;
  int v629;
  int v630;
  int v631;
  unsigned int v632;
  int v633;
  unsigned int v634;
  int v635;
  int v636;
  int v637;
  int v638;
  int v639;
  unsigned int v640;
  int v641;
  unsigned int v642;
  unsigned int v643;
  int v644;
  int v645;
  unsigned int v646;
  int v647;
  int v648;
  int v649;
  int v650;
  int v651;
  unsigned int v652;
  unsigned int v653;
  int v654;
  unsigned int v655;
  unsigned int v656;
  int v657;
  unsigned int v658;
  int v659;
  unsigned int v660;
  int v661;
  unsigned int v662;
  int v663;
  unsigned int v664;
  unsigned int v665;
  int v666;
  int v667;
  unsigned int v668;
  int v669;
  unsigned int v670;
  int v671;
  unsigned int v672;
  int v673;
  int v674;
  unsigned int v675;
  int v676;
  int v677;
  unsigned int v678;
  int v679;
  unsigned int v680;
  int v681;
  unsigned int v682;
  int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  int v687;
  unsigned int v688;
  int v689;
  unsigned int v690;
  int v691;
  unsigned int v692;
  int v693;
  int v694;
  int v695;
  unsigned int v696;
  unsigned int v697;
  int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  unsigned int v702;
  unsigned int v703;
  unsigned int v704;
  unsigned int v705;
  int v706;
  unsigned int v707;
  unsigned int v708;
  unsigned int v709;
  unsigned int v710;
  int v711;
  unsigned int v712;
  int v713;
  int v714;
  unsigned int v715;
  unsigned int v716;
  int v717;
  int v718;
  int v719;
  int v720;
  int v721;
  int v722;
  unsigned int v723;
  int v724;
  unsigned int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  int v729;
  unsigned int v730;
  unsigned int v731;
  int v732;
  int v733;
  int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  int v739;
  unsigned int v740;
  unsigned int v741;
  unsigned int v742;
  int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  int v747;
  int v748;
  unsigned int v749;
  int v750;
  unsigned int v751;
  unsigned int v752;
  int v753;
  int v754;
  int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  unsigned int v759;
  int v760;
  unsigned int v761;
  unsigned int v762;
  int v763;
  unsigned int v764;
  int v765;
  int v766;
  unsigned int v767;
  int v768;
  unsigned int v769;
  int v770;
  int v771;
  unsigned int v772;
  unsigned int v773;
  int v774;
  unsigned int v775;
  unsigned int v776;
  unsigned int v777;
  int v778;
  int v779;
  int v780;
  unsigned int v781;
  int v782;
  int v783;
  int v784;
  unsigned int v785;
  int v786;
  int v787;
  unsigned int v788;
  int v789;
  int v790;
  int v791;
  int v792;
  int v793;
  unsigned int v794;
  unsigned int v795;
  int v796;
  unsigned int v797;
  unsigned int v798;
  int v799;
  int v800;
  unint64_t v801;
  int v802;
  int v803;
  int v804;
  int v805;
  unsigned int v806;
  int v807;
  unsigned int v808;
  int v809;
  int v810;
  unsigned int v811;
  unsigned int v812;
  unsigned int v813;
  int v814;
  unsigned int v815;
  unsigned int v816;
  unsigned int v817;
  int v818;
  unsigned int v819;
  int v820;
  unsigned int v821;
  int v822;
  unsigned int v823;
  unsigned int v824;
  int v825;
  unsigned int v826;
  int v827;
  unsigned int v828;
  int v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  unsigned int v833;
  int v834;
  unsigned int v835;
  int v836;
  int v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  unsigned int v841;
  int v842;
  unsigned int v843;
  unsigned int v844;
  unsigned int v845;
  int v846;
  int v847;
  int v848;
  unsigned int v849;
  int v850;
  int v851;
  int v852;
  int v853;
  int v854;
  int v855;
  int v856;
  int v857;
  int v858;
  int v859;
  int v860;
  int v861;
  int v862;
  int v863;
  int v864;
  int v865;
  int v866;
  unsigned int v867;
  int v868;
  int v869;
  int v870;
  int v871;
  unsigned int v872;
  unsigned int v873;
  _BYTE *v874;
  int v875;
  int v876;
  int v877;
  int v878;
  int v879;
  int v880;
  int v881;
  int v882;
  int v883;
  unint64_t v884;
  int v885;
  int v886;
  int v887;
  int v888;
  int v889;
  int v890;
  int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  int v897;
  unsigned int v898;
  int v899;
  unsigned int v900;
  int v901;
  unsigned int v902;
  unsigned int v903;
  unsigned int v904;
  int v905;
  int v906;
  unsigned int v907;
  unsigned int v908;
  int v909;
  int v910;
  int v911;
  int v912;
  unsigned int v913;
  unsigned int v914;
  int v915;
  int v916;
  int v917;
  int v918;
  int v919;
  int v920;
  int v921;
  int v922;
  int v923;
  int v924;
  int v925;
  int v926;
  int v927;
  unsigned int v928;
  unsigned int v929;
  int v930;
  int v931;
  int v932;
  int v933;
  unsigned int v934;
  int v935;
  int v936;
  int v937;
  int v938;
  int v939;
  int v940;
  int v941;
  int v942;
  int v943;
  _BYTE *v944;
  int v945;
  int v946;
  int v947;
  uint64_t (*v948)(void);

  LODWORD(STACK[0x6A8]) = v9;
  LODWORD(STACK[0x698]) = a8;
  LODWORD(STACK[0x658]) = -1216348160;
  LODWORD(STACK[0x5E8]) = -85458944;
  LODWORD(STACK[0x574]) = -683165142;
  LODWORD(STACK[0x5B0]) = -1191182336;
  LODWORD(STACK[0x5E4]) = 1750698717;
  LODWORD(STACK[0x5EC]) = -975635515;
  LODWORD(STACK[0x5A8]) = -1476603904;
  LODWORD(STACK[0x5AC]) = -292683776;
  LODWORD(STACK[0x5E0]) = -815264766;
  LODWORD(STACK[0x584]) = 1213672693;
  LODWORD(STACK[0x5B4]) = 1382805435;
  LODWORD(STACK[0x5FC]) = ((_BYTE)v8 + 24) & 0x17;
  LODWORD(STACK[0x5F0]) = -8389632;
  LODWORD(STACK[0x5F8]) = (v8 + 24) & 0x17 ^ 0x17;
  LODWORD(STACK[0x570]) = -2020114287;
  LODWORD(STACK[0x564]) = 396275712;
  LODWORD(STACK[0x56C]) = -101737641;
  LODWORD(STACK[0x568]) = -1676464795;
  LODWORD(STACK[0x554]) = -1367343104;
  LODWORD(STACK[0x598]) = -930153852;
  LODWORD(STACK[0x560]) = 2092132535;
  LODWORD(STACK[0x55C]) = 1475759486;
  LODWORD(STACK[0x5A4]) = 1653956608;
  LODWORD(STACK[0x5A0]) = 761584128;
  LODWORD(STACK[0x558]) = -1973499071;
  LODWORD(STACK[0x548]) = 214409908;
  LODWORD(STACK[0x588]) = 914308110;
  LODWORD(STACK[0x5DC]) = 221671326;
  LODWORD(STACK[0x634]) = 221671422;
  LODWORD(STACK[0x59C]) = -1879313752;
  LODWORD(STACK[0x668]) = -1879314432;
  LODWORD(STACK[0x5CC]) = 881775083;
  LODWORD(STACK[0x534]) = 1573375749;
  LODWORD(STACK[0x5D0]) = -896869183;
  LODWORD(STACK[0x624]) = -297887730;
  LODWORD(STACK[0x54C]) = -1023410176;
  LODWORD(STACK[0x608]) = -785935586;
  LODWORD(STACK[0x6B4]) = -1655846913;
  LODWORD(STACK[0x538]) = 1655846968;
  LODWORD(STACK[0x688]) = 983859200;
  LODWORD(STACK[0x508]) = ((a5 + 6) | (1 - a5)) & 6;
  LODWORD(STACK[0x5C0]) = 1874222158;
  LODWORD(STACK[0x5BC]) = 1874222463;
  LODWORD(STACK[0x5D8]) = -193443447;
  LODWORD(STACK[0x4C0]) = -564428800;
  LODWORD(STACK[0x51C]) = 1311745893;
  LODWORD(STACK[0x518]) = 1153810956;
  LODWORD(STACK[0x498]) = -439169489;
  LODWORD(STACK[0x4B8]) = -488475438;
  v10 = STACK[0x7F0];
  v11 = STACK[0x7FC];
  LODWORD(STACK[0x4C8]) = STACK[0x7FC];
  v12 = STACK[0x804];
  v13 = -1673081951 * v11;
  v14 = STACK[0x808];
  v15 = STACK[0x80C];
  v16 = 948803394 * v11;
  v17 = (948803394 * LODWORD(STACK[0x80C]) + 968328188) & 0xF5D585F8;
  LODWORD(STACK[0x610]) = (STACK[0x80C] & 1) << 29;
  v18 = v13 - ((v16 + 968328188) & 0x9A828782) - 367196737;
  v19 = -1748597478 - 1673081951 * v15;
  v20 = ((v13 - ((v16 - 4) & 0x82) - 65) ^ (2 - v13 - (~(_BYTE)v16 & 2))) & 0xE;
  v21 = (-1673081951 * v12 - 1663319554) ^ (v15 << 31);
  LODWORD(STACK[0x4A0]) = (-1673081951 * v10 - 1663319554) ^ (32 * v18) ^ (16 * v18) ^ (v18 << 17) ^ (v18 << 30);
  v22 = (v15 & 1) << 24;
  v23 = v19 - v17;
  LODWORD(STACK[0x4F0]) = v19;
  LODWORD(STACK[0x4A4]) = (-1673081951 * LODWORD(STACK[0x7F8]) - 1663319554) ^ (v18 << 15) ^ (v18 << 24);
  LODWORD(STACK[0x4BC]) = (8 * v18) ^ 0x3F483AD;
  v24 = (4 * v18) ^ 0x35050F04;
  v25 = HIBYTE(v18) ^ (v18 >> 17) ^ (v18 >> 8) ^ 0x4D67AE;
  LODWORD(STACK[0x494]) = v25 - ((2 * v25) & 0x1A59C58) - 439169492;
  v26 = v23 - 32;
  v27 = (-1673081951 * v14 - 1663319554) ^ ((v23 - 32) << 8) ^ ((v23 - 32) << 15);
  v28 = v21 ^ ((v23 - 32) << 12);
  LODWORD(STACK[0x4B0]) = (v24 & 4 ^ 7) + (v24 & 4);
  v29 = (v24 - 2 * (v24 & 0x441E4D8 ^ (4 * v18) & 0x10) + 71427272) ^ (8 * v18);
  LODWORD(STACK[0x4AC]) = v29;
  LODWORD(STACK[0x49C]) = v29 ^ 0x6E772057;
  v30 = ((v23 - 32) >> 29) ^ 0x8FC36707;
  v31 = (2 * (v23 - 32)) ^ ((v23 - 32) << 6) ^ 0x4F653AF8;
  v32 = ((8 * (v23 - 32)) ^ 0xD75617E0)
      + 1349574562
      - 2 * (((8 * (v23 - 32)) ^ 0xD75617E0) & 0x5070DFB0 ^ (8 * (v23 - 32)) & 0x10);
  LODWORD(STACK[0x5D4]) = v32;
  v33 = ((4 * (v23 - 32)) ^ 0xEBAB0BF0)
      - 2 * (((4 * (v23 - 32)) ^ 0xEBAB0BF0) & 0x29CE5DBC ^ (4 * (v23 - 32)) & 8)
      - 1446093385;
  LODWORD(STACK[0x640]) = ((v23 - 32) >> 12) ^ 0xC078D9B7;
  v34 = ((v23 - 32) >> 30) ^ 0x15F7E0DA;
  LODWORD(STACK[0x480]) = v19 << 29;
  LODWORD(STACK[0x660]) = (((v23 - 32) << 13) ^ 0x585F8000)
                        - (STACK[0x688] & (2 * (((v23 - 32) << 13) ^ 0x585F8000)))
                        + 491930738;
  v35 = ((v23 - 32) >> 25) ^ 0x62E300A3;
  LODWORD(STACK[0x530]) = v33 ^ v32;
  LODWORD(STACK[0x490]) = (v31 - ((2 * v31) & 0xF5D585F8) - 85277956) ^ (v23 - 32) ^ v33;
  v36 = (v23 - 32) >> 19;
  LODWORD(STACK[0x638]) = v36 ^ 0xFFFFE775;
  LODWORD(STACK[0x4B4]) = (v36 ^ 0xFFFFE0A2) + 1;
  v37 = (v23 - 32) >> 16;
  LODWORD(STACK[0x50C]) = v37 ^ 0xFFFF3BAF;
  LODWORD(STACK[0x528]) = (v37 ^ 0xFFFF0515) + 1;
  v38 = v36 ^ 0x30B6BF3;
  LODWORD(STACK[0x620]) = v37 ^ 0x859FDCA8;
  v39 = (((v23 - 32) << 7) ^ 0x75617E00)
      - 1319560164
      + (LODWORD(STACK[0x6B4]) | ~(2 * (((v23 - 32) << 7) ^ 0x75617E00)))
      + 1;
  LODWORD(STACK[0x6B4]) = v39;
  v40 = (v23 - 32) >> 22;
  LODWORD(STACK[0x488]) = v40 ^ 0x309C88D1;
  LODWORD(STACK[0x630]) = (((v23 - 32) << 14) ^ 0xB0BF0000)
                        - ((2 * (((v23 - 32) << 14) ^ 0xB0BF0000)) & 0x92498000)
                        + 1227158505;
  v41 = v40 ^ ((v23 - 32) >> 24) ^ 0x311;
  v42 = (v23 - 32) << 10;
  v43 = (v42 ^ 0xAB0BF000) - ((2 * (v42 ^ 0xAB0BF000)) & 0xD1279000) + 1754515855;
  LODWORD(STACK[0x524]) = v43;
  LODWORD(STACK[0x680]) = (((v23 - 32) << 20) ^ 0x2FC00000)
                        - ((2 * (((v23 - 32) << 20) ^ 0x2FC00000)) & 0xB3800000)
                        - 641395126;
  v44 = (v23 - 32) >> 18;
  v45 = v44 ^ 0x3EBA8E05;
  v46 = ((v23 - 32) >> 15) ^ 0xDFD123B4;
  LODWORD(STACK[0x4E8]) = v44 ^ 0x6C2979;
  LODWORD(STACK[0x614]) = v36 ^ 0x30B6BF3 ^ v44;
  LODWORD(STACK[0x4EC]) = v36 ^ 0x30B6BF3;
  LODWORD(STACK[0x52C]) = ((v23 << 27) ^ 0xE0000000) - ((2 * ((v23 << 27) ^ 0xE0000000)) & 0x90000000) - 886096856;
  v47 = (v23 - 32) >> 7;
  v48 = v47 ^ 0xC0825F0E;
  LODWORD(STACK[0x504]) = v47 ^ 0xC0825F0E;
  v49 = v39 ^ (v23 - 32) ^ v43;
  LODWORD(STACK[0x670]) = (((v23 - 32) << 16) ^ 0xC2FC0000)
                        - ((2 * (((v23 - 32) << 16) ^ 0xC2FC0000)) & 0x7DC40000)
                        - 1092478943;
  v50 = ((v23 - 32) >> 8) ^ 0x9A407B5D;
  HIDWORD(v51) = v49 ^ 0x176F;
  LODWORD(v51) = v49 ^ 0x23200000;
  LODWORD(STACK[0x484]) = v51 >> 15;
  LODWORD(STACK[0x618]) = (((v23 - 32) << 17) ^ 0x85F80000)
                        - ((2 * (((v23 - 32) << 17) ^ 0x85F80000)) & 0xEDEC0000)
                        + 1995840347;
  LODWORD(STACK[0x61C]) = ((v23 - 32) >> 10) ^ 0x4F9419BB;
  LODWORD(STACK[0x550]) = v47 ^ v50 ^ 0x1F5D585;
  LODWORD(STACK[0x650]) = (((v23 - 32) << 22) ^ 0xBF000000)
                        - ((2 * (((v23 - 32) << 22) ^ 0xBF000000)) & 0xD6000000)
                        + 1799010659;
  LODWORD(STACK[0x67C]) = (((v23 - 32) << 25) ^ 0xF8000000)
                        - ((2 * (((v23 - 32) << 25) ^ 0xF8000000)) & 0xA0000000)
                        - 786687875;
  v52 = (v23 - 32) ^ 0xFAEAC2FC;
  LODWORD(STACK[0x4A8]) = v52 << v20;
  LODWORD(STACK[0x688]) = (((v23 - 32) << 24) ^ 0xFC000000)
                        - ((2 * (((v23 - 32) << 24) ^ 0xFC000000)) & 0x90000000)
                        + 1215343799;
  v53 = ((((v23 - 32) >> 3) ^ 0x1F5D585F) - ((2 * (((v23 - 32) >> 3) ^ 0x1F5D585F)) & 0x1088D436) - 398169573) ^ (v52 >> 6) ^ 0xE8446A1B;
  v54 = (v23 - 32) << 26;
  LODWORD(STACK[0x540]) = v28 ^ v54;
  LODWORD(STACK[0x648]) = (v54 ^ 0xF0000000) - ((2 * (v54 ^ 0xF0000000)) & 0xCFFFFFFF) + 1706596106;
  LODWORD(STACK[0x628]) = (((v23 - 32) << 19) ^ 0x17E00000)
                        - ((2 * (((v23 - 32) << 19) ^ 0x17E00000)) & 0x60F00000)
                        + 813452075;
  LODWORD(STACK[0x644]) = (((v23 - 32) << 11) ^ 0x5617E000)
                        - (STACK[0x668] & (2 * (((v23 - 32) << 11) ^ 0x5617E000)))
                        + 1207826772;
  v55 = (v23 - 32) >> 4;
  v56 = ((v23 - 32) >> 13) ^ 0x84B89C8A;
  LODWORD(STACK[0x4D4]) = v56;
  v57 = v48 ^ v55;
  v58 = (v23 - 32) >> 21;
  v59 = v58 ^ LODWORD(STACK[0x624]);
  LODWORD(STACK[0x5B8]) = v59;
  LODWORD(STACK[0x520]) = v35;
  v60 = (v23 - 32) << 18;
  LODWORD(STACK[0x510]) = v27 ^ v42 ^ v60;
  v61 = ((v23 - 32) >> 5) ^ 0x730BF668;
  LODWORD(STACK[0x4F8]) = v61;
  v62 = (v23 - 32) >> 6;
  v63 = v62 ^ 0x1A4C2D5B;
  LODWORD(STACK[0x4E0]) = v62 ^ 0x3EBAB0B;
  v64 = ((v23 - 32) >> 14) ^ 0x3D87E584;
  LODWORD(STACK[0x4CC]) = v64;
  v65 = v61 ^ v55;
  LODWORD(STACK[0x4D8]) = v62 ^ 0x1A4C2D5B ^ v55;
  LODWORD(STACK[0x624]) = (v60 ^ 0xBF00000) - 609413674 + (~(2 * (v60 ^ 0xBF00000)) | 0x48A7FFFF) + 1;
  LODWORD(STACK[0x600]) = (((v23 - 32) << 21) ^ 0x5F800000)
                        - ((2 * (((v23 - 32) << 21) ^ 0x5F800000)) & 0xC5800000)
                        - 489697942;
  v66 = ((v23 - 32) >> 11) ^ 0xBBE9BFCB;
  LODWORD(STACK[0x4D0]) = v66;
  v67 = ((v23 - 32) >> 9) ^ 0x9C6B512A;
  LODWORD(STACK[0x4DC]) = v67;
  LODWORD(STACK[0x668]) = ((v23 << 28) ^ 0xC0000000) - LODWORD(STACK[0x610]) + 508008312;
  v68 = (v41 - ((2 * v41) & 0x600) - 1883019520) ^ v30;
  v69 = ((31 - v23) >> 30) ^ ((31 - v23) >> 28) ^ ((v23 - 32) >> 2) ^ ((31 - v23) >> 27) ^ v45;
  LODWORD(STACK[0x514]) = (((v23 - 32) << 23) ^ 0x7E000000) - v22 + 15538644;
  LODWORD(STACK[0x610]) = (v18 >> 14) ^ 0x9739F9A4;
  v70 = (v69 - ((2 * v69) & 0x1F86CE00) - 1883019520) ^ v30;
  v71 = (v70 - ((2 * v70) & 0xDC7D3FB2) - 297885735) ^ v59;
  v72 = (v68 + 368566490 + (~(2 * v68) | 0xD4103E4D)) ^ v34;
  v73 = (v71 - ((2 * v71) & 0x616E95C) + 51082414) ^ v38;
  LODWORD(STACK[0x4C4]) = (31 - v23) >> 31;
  v74 = (((31 - v23) >> 31) | 0x3E) ^ ((v23 - 32) >> 26);
  v75 = (v73 - ((2 * v73) & 0xBFA1ACC2) - 539961759) ^ v46;
  v76 = (v75 - ((2 * v75) & 0x7B081C5E) + 1032064559) ^ v64;
  LODWORD(STACK[0x48C]) = (v18 >> 19) ^ LODWORD(STACK[0x4B8]);
  v77 = (v74 + 368566490 + (~(2 * v74) | 0xFFFFFFCD)) ^ v34;
  v78 = (v77 - ((2 * v77) & 0x1F86CE00) - 1883019520) ^ v30;
  v79 = (v76 - ((2 * v76) & 0x97E97B8) - 2067837988) ^ v56;
  v80 = (v78 - ((2 * v78) & 0x45C601BC) + 1659044062) ^ v35;
  v81 = v35 ^ v58 ^ (v72 - ((2 * v72) & 0x45C601BC) + 1659044062);
  LODWORD(STACK[0x4B8]) = v81 ^ 0x7D7;
  v82 = STACK[0x488];
  v83 = (v80 - ((2 * v80) & 0x61391674) + 815565626) ^ LODWORD(STACK[0x488]);
  LODWORD(STACK[0x4B4]) ^= (LODWORD(STACK[0x638]) ^ v81) + (v81 ^ 0x7D7) + 1;
  v84 = LODWORD(STACK[0x614]) ^ (v83 - ((2 * v83) & 0x616E95C) + 51082414);
  v85 = v84 ^ 0x3EBA;
  LODWORD(STACK[0x614]) = ((v18 << 22) ^ 0xF0400000) - (STACK[0x658] & (2 * ((v18 << 22) ^ 0xF0400000))) - 605991665;
  v86 = ((LODWORD(STACK[0x50C]) ^ v84) + (v84 ^ 0x3EBA) + 1) ^ LODWORD(STACK[0x528]);
  v87 = (v79 - ((2 * v79) & 0x77EDC526) - 1141448045) ^ v66;
  v88 = ((v86 - ((2 * v86) & 0xB3E4C84) - 2053167550) ^ LODWORD(STACK[0x620])) + v85;
  v89 = ((v53 ^ v88) - ((2 * (v53 ^ v88)) & 0xBFA1ACC2) - 539961759) ^ v46;
  v90 = (v89 - ((2 * v89) & 0x80EEEE36) - 1065912549) ^ LODWORD(STACK[0x640]);
  v91 = STACK[0x61C];
  v92 = (v90 - ((2 * v90) & 0x9F554616) + 1336582923) ^ LODWORD(STACK[0x61C]);
  v93 = ((v18 << 11) ^ 0xA1E0800) - ((2 * ((v18 << 11) ^ 0xA1E0800)) & 0x44C5C000) + 576905478;
  LODWORD(STACK[0x638]) = v93;
  v94 = (v92 - 1699049057 + (LODWORD(STACK[0x5D0]) | ~(2 * v92)) + 1) ^ v50;
  v95 = (v87 - ((2 * v87) & 0x9F554616) + 1336582923) ^ v91;
  v96 = v57 ^ (v94 - ((2 * v94) & 0x82EF1516) - 1049130357);
  v97 = LODWORD(STACK[0x480]) ^ (4 * v96) ^ (32 * v96) ^ (v96 << 11);
  v98 = (v95 - ((2 * v95) & 0x382C4896) - 1676270517) ^ v67;
  v99 = LODWORD(STACK[0x498]) ^ (v18 >> 29) ^ (v18 >> 30);
  v100 = LODWORD(STACK[0x494]) ^ v99;
  v101 = (v98 - ((2 * v98) & 0x334F0CA0) + 430409296) ^ v63;
  v102 = v65 ^ (v101 - ((2 * v101) & 0xE9B940FE) + 1960616063);
  v103 = (v102 >> 27) ^ (v102 >> 21);
  LODWORD(STACK[0x498]) = v103 ^ LODWORD(STACK[0x634]);
  v104 = (v96 >> 27) ^ (v88 >> 30) ^ (v96 >> 21);
  LODWORD(STACK[0x50C]) = v104;
  v105 = v97 ^ (4 * v104) ^ (32 * v104) ^ (v104 << 11) ^ 0x3E0DA32C;
  v106 = ((v18 << 14) ^ 0x50F04000) - ((2 * ((v18 << 14) ^ 0x50F04000)) & 0xCDC98000) - 421203686;
  LODWORD(STACK[0x528]) = v106;
  v107 = (v105 - ((2 * v105) & 0xA0E1BF44) + 1349574562) ^ LODWORD(STACK[0x5D4]);
  v108 = LODWORD(STACK[0x490]) ^ (v107 - ((2 * v107) & 0x4DBC517A) - 1495390019);
  v109 = (v106 ^ v93 ^ 0xC486101C) - ((2 * (v106 ^ v93 ^ 0xC486101C)) & 0xDE5B8D12);
  v110 = ((v108 ^ 0xF10750A) - 2 * ((v108 ^ 0xF10750A) & 0x31591C1D ^ v108 & 1) - 1319560164) ^ LODWORD(STACK[0x6B4]);
  v111 = (v18 >> 28) ^ (v18 >> 27) ^ (v18 >> 15) ^ (v18 >> 2) ^ (v18 >> 21) ^ (v18 >> 19) ^ 0x1350C1BD;
  v112 = (v111 - ((2 * v111) & 0x4BA59C58) - 439169492) ^ v99;
  v113 = ((v18 << 13) ^ 0x28782000) - (STACK[0x4C0] & (2 * ((v18 << 13) ^ 0x28782000))) + 1865270921;
  LODWORD(STACK[0x634]) = v113;
  v114 = LODWORD(STACK[0x4A0]) ^ v113 ^ (v109 + 1865270921);
  v115 = (v110 - ((2 * v110) & 0x3AA488E4) + 491930738) ^ LODWORD(STACK[0x660]);
  v116 = (v18 >> 21) ^ LODWORD(STACK[0x51C]);
  v117 = (v115 - (STACK[0x608] & (2 * v115)) + 1754515855) ^ LODWORD(STACK[0x524]);
  v118 = (v117 - ((2 * v117) & 0x9249E7D2) + 1227158505) ^ LODWORD(STACK[0x630]);
  v119 = (v18 >> 18) ^ 0xD93C0440;
  LODWORD(STACK[0x490]) = v119;
  v120 = (v112 - ((2 * v112) & 0xB2782E20) - 650373360) ^ v119;
  v121 = (v120 - ((2 * v120) & 0x2E719942) - 1757885279) ^ LODWORD(STACK[0x610]);
  LODWORD(STACK[0x5D4]) = ((v18 << 19) ^ 0x1E080000) - ((2 * ((v18 << 19) ^ 0x1E080000)) & 0x9AC00000) + 1298491170;
  v122 = (v118 - ((2 * v118) & 0x7DC43042) - 1092478943) ^ LODWORD(STACK[0x670]);
  v123 = (v18 >> 13) ^ 0x9DBF01E9;
  LODWORD(STACK[0x494]) = v123;
  v124 = (v121 - ((2 * v121) & 0x3B7AD7C6) - 1648530461) ^ v123;
  v125 = (v122 - ((2 * v122) & 0xEDEC36B6) + 1995840347) ^ LODWORD(STACK[0x618]);
  v126 = (v125 - ((2 * v125) & 0xB38A2C94) - 641395126) ^ LODWORD(STACK[0x680]);
  v127 = (v18 >> 10) ^ 0x66E25E38;
  LODWORD(STACK[0x4A0]) = v127;
  v128 = (v126 - ((2 * v126) & 0xD67572C6) + 1799010659) ^ LODWORD(STACK[0x650]);
  v129 = ((v18 << 18) ^ 0xF040000) - ((2 * ((v18 << 18) ^ 0xF040000)) & 0xB800000) + 96721723;
  LODWORD(STACK[0x5D0]) = v129;
  LODWORD(STACK[0x658]) = ((v18 << 21) ^ 0x78200000) - ((2 * ((v18 << 21) ^ 0x78200000)) & 0x51C00000) + 686010948;
  v130 = (v128 - ((2 * v128) & 0x90E1596E) + 1215343799) ^ LODWORD(STACK[0x688]);
  LODWORD(STACK[0x608]) = ((v18 << 23) ^ 0xE0800000) - ((2 * ((v18 << 23) ^ 0xE0800000)) & 0xA3000000) - 779875308;
  v131 = (v18 >> 11) ^ 0xDA628BEE;
  v132 = (v124 - ((2 * v124) & 0xB4D6478C) - 630512698) ^ v131;
  v133 = (v130 - ((2 * v130) & 0xA23830FA) - 786687875) ^ LODWORD(STACK[0x67C]);
  v134 = (v132 - ((2 * v132) & 0xCDE21CD0) + 1727073896) ^ v127;
  v135 = (v133 + 1706596106 + (LODWORD(STACK[0x5CC]) | ~(2 * v133)) + 1) ^ LODWORD(STACK[0x648]);
  v136 = (((v26 >> 20) ^ (v26 >> 1) ^ 0x7D756ED0)
        - ((2 * ((v26 >> 20) ^ (v26 >> 1) ^ 0x7D756ED0)) & 0xC5C601BC)
        + 1659044062) ^ LODWORD(STACK[0x520]);
  v137 = (v136 - ((2 * v136) & 0x61391674) + 815565626) ^ v82;
  LODWORD(STACK[0x488]) = (v137 - ((2 * v137) & 0xDC7D3FB2) - 297885735) ^ LODWORD(STACK[0x5B8]);
  v138 = STACK[0x668];
  v139 = (v135 - ((2 * v135) & 0x3C8F2EF0) + 508008312) ^ LODWORD(STACK[0x668]);
  v140 = (v139 - ((2 * v139) & 0xF11D315E) + 2022611119) ^ v96;
  v141 = (v18 >> 6) ^ 0xE9A4BB7D;
  LODWORD(STACK[0x480]) = v141 ^ (v18 >> 5);
  LODWORD(STACK[0x4C0]) = (v140 ^ 0x77203480) - 2 * ((v140 ^ 0x77203480) & 0x3C5570EB ^ v140 & 1) - 1135251222;
  v142 = LODWORD(STACK[0x484]) ^ ((v138 ^ 0x1E479778) & 0xFFFE0000 | (LODWORD(STACK[0x644]) >> 15));
  LODWORD(STACK[0x520]) = v142;
  LODWORD(STACK[0x524]) = v142 ^ 0x14360000;
  v143 = (v18 >> 9) ^ 0xCACD94D;
  v144 = (v134 - ((2 * v134) & 0x1914F3D8) + 210401772) ^ v143;
  v145 = ((v18 << 27) ^ 0x8000000) - ((v18 << 28) & 0x60000000) + 916311264;
  v146 = ((v18 << 28) ^ 0x10000000) - ((2 * ((v18 << 28) ^ 0x10000000)) & 0x20000000) - 1856817684;
  LODWORD(STACK[0x51C]) = v146;
  v147 = ((v18 << 26) ^ 0x4000000) - ((v18 << 27) & 0x10000000) + 197691603;
  LODWORD(STACK[0x5CC]) = v147;
  v148 = (v144 - ((2 * v144) & 0xD1237CE4) - 393101710) ^ v141;
  v149 = (v18 >> 4) ^ (v18 >> 5) ^ 0xA833218F ^ (v148 - ((2 * v148) & 0x54B25722) - 1436996719);
  v150 = v114 ^ (4 * v149) ^ (32 * v149) ^ (v149 << 11);
  v151 = (v100 + 1952686728 - ((2 * v100) & 0x68C7455C) + 38) ^ (v18 >> 25);
  v152 = LODWORD(STACK[0x5C0]) ^ (v18 >> 22);
  LODWORD(STACK[0x5C0]) = ((v18 << 16) ^ 0x43C10000) - ((2 * ((v18 << 16) ^ 0x43C10000)) & 0xE6A20000) - 212768845;
  v153 = ((v151 ^ 0x7463A288) - 2 * ((v151 ^ 0x7463A288) & STACK[0x5BC] ^ v151 & 4) + 1874222459) ^ v152;
  v154 = (v153 - ((2 * v153) & 0x1C5F4A1E) + 1311745295) ^ v116;
  v155 = (v149 >> 21) ^ 0x26;
  v156 = LODWORD(STACK[0x4A4]) ^ (v18 << 10);
  v157 = (v155 + ((v149 >> 21) ^ (v149 >> 27) ^ 0xFFFFFFD9) + 1) ^ -(v149 >> 27);
  v158 = ((v149 >> 27) ^ 0xD2CE38A ^ (v157 - ((2 * v157) & 0x1A59C714) + 221045642)) + v155;
  v159 = v158 - ((2 * v158) & 0xB787D06) - 2051260797;
  v160 = v150 ^ (4 * v159) ^ (32 * v159) ^ (v159 << 11) ^ 0xD24E412C;
  v161 = LODWORD(STACK[0x49C]) ^ (v160 - ((2 * v160) & 0x79B52E) + 3988119);
  v162 = HIWORD(v18) ^ 0x77B7820;
  v163 = (v161 - ((2 * v161) & 0xB87B676) + 96721723) ^ v129;
  LODWORD(STACK[0x5BC]) = ((v18 << 20) ^ 0x3C100000) - ((2 * ((v18 << 20) ^ 0x3C100000)) & 0xE600000) + 120843209;
  v164 = (v163 - ((2 * v163) & 0x9ACACE44) + 1298491170) ^ LODWORD(STACK[0x5D4]);
  v165 = (v164 - ((2 * v164) & 0x51C76488) + 686010948) ^ LODWORD(STACK[0x658]);
  v166 = (v18 >> 7) ^ 0x450B3ADC;
  v167 = (v165 - ((2 * v165) & 0xA3081828) - 779875308) ^ LODWORD(STACK[0x608]);
  v168 = (v18 >> 12) ^ 0x5A78E6F9;
  v169 = (v167 - ((2 * v167) & 0xB7C29A1E) - 605991665) ^ LODWORD(STACK[0x614]);
  LODWORD(STACK[0x5B8]) = ((v18 << 25) ^ 0x82000000) - ((v18 << 26) & 0x90000000) - 928605477;
  v170 = (v169 - ((2 * v169) & 0x179111A6) + 197691603) ^ v147;
  HIDWORD(v51) = LODWORD(STACK[0x4AC]) ^ ((v18 ^ 0x4D4143C1) << LODWORD(STACK[0x4B0]));
  LODWORD(v51) = HIDWORD(v51) ^ 0x6E4BFAC0;
  v171 = v51 >> 5;
  v172 = (v170 - ((2 * v170) & 0x6D3B99C0) + 916311264) ^ v145;
  v173 = (v172 - ((2 * v172) & 0x22A66BD8) - 1856817684) ^ v146;
  v174 = (v173 - ((2 * v173) & 0x98935D2E) + 1279897239) ^ v149;
  LODWORD(STACK[0x4B0]) = v159 ^ ((v174 ^ 0x489DBAAB) - 2 * ((v174 ^ 0x489DBAAB) & 0x5BC3E97 ^ v174 & 0x14) - 2051260797);
  v175 = (v154 - ((2 * v154) & 0xC5C4FAF4) - 488473222) ^ LODWORD(STACK[0x48C]);
  v176 = (v18 >> 1) ^ (v18 >> 20) ^ ((v18 ^ 0x4D4143C1) >> LODWORD(STACK[0x508]));
  HIDWORD(v51) = LODWORD(STACK[0x4BC]) ^ v171;
  LODWORD(v51) = v171 ^ 0xBFFFFFFF;
  v177 = v156 ^ (v51 >> 27);
  v178 = (((v18 >> 25) ^ 0x26A0A512 ^ v176) - ((2 * ((v18 >> 25) ^ 0x26A0A512 ^ v176)) & 0xDF6CBAF6) + 1874222459) ^ v152;
  v179 = (v178 - ((2 * v178) & 0x9C5F4A1E) + 1311745295) ^ v116;
  v180 = (v179 - ((2 * v179) & 0xC5C4FAF4) - 488473222) ^ LODWORD(STACK[0x48C]);
  v181 = (v180 - ((2 * v180) & 0xB2782E20) - 650373360) ^ LODWORD(STACK[0x490]);
  v182 = (v181 - ((2 * v181) & 0xEF66AC2) + 125515105) ^ v162;
  v183 = (v175 - ((2 * v175) & 0xEF66AC2) + 125515105) ^ v162;
  v184 = (v182 - ((2 * v182) & 0x2E719942) - 1757885279) ^ LODWORD(STACK[0x610]);
  v185 = (v184 - ((2 * v184) & 0x3B7AD7C6) - 1648530461) ^ LODWORD(STACK[0x494]);
  v186 = (v183 - ((2 * v183) & 0x2E719942) - 1757885279) ^ LODWORD(STACK[0x610]);
  v187 = (-1663319554 - 1673081951 * LODWORD(STACK[0x800])) ^ (LODWORD(STACK[0x4F0]) << 30) ^ (32 * v26) ^ (16 * v26) ^ LODWORD(STACK[0x4A8]) ^ (32 * v102) ^ (4 * v102) ^ (v102 << 11) ^ (4 * v103) ^ (32 * v103) ^ (v103 << 11) ^ 0x4DF9D36C;
  v188 = (v185 - ((2 * v185) & 0xB4F865DA) + 1518088941) ^ v168;
  v189 = (v186 - ((2 * v186) & 0xB4F865DA) + 1518088941) ^ v168;
  v190 = (v188 - ((2 * v188) & 0xB4D6478C) - 630512698) ^ v131;
  v191 = (v189 - ((2 * v189) & 0xB4D6478C) - 630512698) ^ v131;
  v192 = (v191 - ((2 * v191) & 0xCDE21CD0) + 1727073896) ^ LODWORD(STACK[0x4A0]);
  v193 = (v192 - ((2 * v192) & 0x1914F3D8) + 210401772) ^ v143;
  v194 = v166 ^ (v18 >> 4) ^ (v190 - ((2 * v190) & 0x8B2370B6) + 1167177819);
  v195 = (v193 - ((2 * v193) & 0x8B2370B6) + 1167177819) ^ v166;
  v196 = LODWORD(STACK[0x480]) ^ (v195 - ((2 * v195) & 0xD1237CE4) - 393101710);
  v197 = v196 ^ v145;
  v198 = (-1663319554 - 1673081951 * LODWORD(STACK[0x7F4])) ^ (LODWORD(STACK[0x4C8]) << 31) ^ v18 ^ (v18 << 12) ^ (v18 << 10) ^ (((v18 << 7) ^ 0xA0A1E080) - ((2 * ((v18 << 7) ^ 0xA0A1E080)) & 0x9A828700) + 1296122817) ^ (4 * v194) ^ (32 * v194) ^ (v194 << 11);
  LODWORD(STACK[0x508]) = v194;
  v199 = v196 >> 21;
  v200 = STACK[0x530];
  v201 = (v187 - ((2 * v187) & 0xF37D042A) - 104955371) ^ LODWORD(STACK[0x530]);
  v202 = STACK[0x59C];
  v203 = v177 ^ (4 * v196) ^ (32 * v196) ^ (v196 << 11) ^ (4 * (v196 >> 21)) ^ (32 * (v196 >> 21)) ^ (v196 >> 21 << 11) ^ 0x71568594;
  v204 = (v203 - (STACK[0x518] & (2 * v203)) + 576905478) ^ LODWORD(STACK[0x638]);
  v205 = STACK[0x644];
  v206 = (v201 - (STACK[0x59C] & (2 * v201)) + 1207826772) ^ LODWORD(STACK[0x644]);
  v207 = (v204 - ((2 * v204) & 0xDE5B8D12) + 1865270921) ^ LODWORD(STACK[0x634]);
  v208 = (v207 - ((2 * v207) & 0xE6A2CF66) - 212768845) ^ LODWORD(STACK[0x5C0]);
  v209 = STACK[0x660];
  v210 = (v206 - ((2 * v206) & 0x3AA488E4) + 491930738) ^ LODWORD(STACK[0x660]);
  v211 = (v210 - ((2 * v210) & 0xEDEC36B6) + 1995840347) ^ LODWORD(STACK[0x618]);
  v212 = (v194 >> 21) ^ (v176 >> 30) ^ (v194 >> 27);
  LODWORD(STACK[0x4F0]) = v212;
  LODWORD(STACK[0x4C8]) = v198 ^ (4 * v212) ^ (32 * v212) ^ (v212 << 11);
  v213 = (v211 - ((2 * v211) & 0xB75A2BAC) - 609413674) ^ LODWORD(STACK[0x624]);
  v214 = (v208 + 96721723 + (LODWORD(STACK[0x5D8]) | ~(2 * v208)) + 1) ^ LODWORD(STACK[0x5D0]);
  v215 = (v213 - ((2 * v213) & 0x60F89656) + 813452075) ^ LODWORD(STACK[0x628]);
  v216 = (v214 - ((2 * v214) & 0xE67D792) + 120843209) ^ LODWORD(STACK[0x5BC]);
  v217 = (v216 - ((2 * v216) & 0x51C76488) + 686010948) ^ LODWORD(STACK[0x658]);
  v218 = (v217 - ((2 * v217) & 0xB7C29A1E) - 605991665) ^ LODWORD(STACK[0x614]);
  v219 = (v218 - ((2 * v218) & 0xA3081828) - 779875308) ^ LODWORD(STACK[0x608]);
  v220 = (v219 - ((2 * v219) & 0x914D35B6) - 928605477) ^ LODWORD(STACK[0x5B8]);
  v221 = (v220 - ((2 * v220) & 0x179111A6) + 197691603) ^ LODWORD(STACK[0x5CC]);
  v222 = v197 ^ (v221 - ((2 * v221) & 0x6D3B99C0) + 916311264);
  v223 = STACK[0x600];
  v224 = (v215 - ((2 * v215) & 0xC59F9AD4) - 489697942) ^ LODWORD(STACK[0x600]);
  v225 = STACK[0x650];
  v226 = (v224 - ((2 * v224) & 0xD67572C6) + 1799010659) ^ LODWORD(STACK[0x650]);
  v227 = STACK[0x514];
  v228 = (v226 - ((2 * v226) & 0x1DA33A8) + 15538644) ^ LODWORD(STACK[0x514]);
  v229 = STACK[0x648];
  v230 = (v228 - ((2 * v228) & 0xCB712E14) + 1706596106) ^ LODWORD(STACK[0x648]);
  v231 = STACK[0x52C];
  v232 = (v230 - ((2 * v230) & 0x965E7850) - 886096856) ^ LODWORD(STACK[0x52C]);
  v233 = (v232 - ((2 * v232) & 0x3C8F2EF0) + 508008312) ^ LODWORD(STACK[0x668]);
  v234 = (v233 - ((2 * v233) & 0x9C6BEB18) + 1312159116) ^ v102;
  v235 = (LODWORD(STACK[0x488]) - ((2 * LODWORD(STACK[0x488])) & 0x616E95C) + 51082414) ^ LODWORD(STACK[0x4EC]);
  v236 = (((LODWORD(STACK[0x4B4]) - ((2 * LODWORD(STACK[0x4B4])) & 0x616E95C) + 51082414) ^ LODWORD(STACK[0x4EC]))
        + LODWORD(STACK[0x4B8])) ^ (v26 >> 17) ^ 0x7D75;
  LODWORD(STACK[0x518]) = LODWORD(STACK[0x498]) ^ ((v234 ^ 0x419B59A3)
                                                 - 2 * ((v234 ^ 0x419B59A3) & STACK[0x5DC] ^ v234 & 0x1C)
                                                 + 221671298);
  v237 = (v236 - ((2 * v236) & 0xB3E4C84) - 2053167550) ^ LODWORD(STACK[0x620]);
  v238 = LODWORD(STACK[0x4E8]) ^ (v235 + 7083972 + (~(2 * v235) | 0xFF27D079));
  v239 = (v238 - ((2 * v238) & 0xB3E4C84) - 2053167550) ^ LODWORD(STACK[0x620]);
  v240 = (v239 - ((2 * v239) & 0x7B081C5E) + 1032064559) ^ LODWORD(STACK[0x4CC]);
  v241 = (v237 - ((2 * v237) & 0x7B081C5E) + 1032064559) ^ LODWORD(STACK[0x4CC]);
  v242 = (v240 - ((2 * v240) & 0x97E97B8) - 2067837988) ^ LODWORD(STACK[0x4D4]);
  v243 = (v242 - ((2 * v242) & 0x80EEEE36) - 1065912549) ^ LODWORD(STACK[0x640]);
  v244 = (v241 - ((2 * v241) & 0x80EEEE36) - 1065912549) ^ LODWORD(STACK[0x640]);
  v245 = STACK[0x4D0];
  v246 = (v243 - ((2 * v243) & 0x77EDC526) - 1141448045) ^ LODWORD(STACK[0x4D0]);
  v247 = (v246 - ((2 * v246) & 0x82EF1516) - 1049130357) ^ LODWORD(STACK[0x504]);
  v248 = LODWORD(STACK[0x4D8]) ^ (v247 - ((2 * v247) & 0x334F0CA0) + 430409296);
  LODWORD(STACK[0x5D8]) = v248;
  LODWORD(STACK[0x5DC]) = LODWORD(STACK[0x4C4]) ^ (v248 >> 21) ^ (v248 >> 27);
  v249 = (v244 - ((2 * v244) & 0x77EDC526) - 1141448045) ^ v245;
  v250 = v222 ^ v199;
  v251 = (v249 - ((2 * v249) & 0x9F554616) + 1336582923) ^ LODWORD(STACK[0x61C]);
  v252 = (v251 - ((2 * v251) & 0x382C4896) - 1676270517) ^ LODWORD(STACK[0x4DC]);
  v253 = LODWORD(STACK[0x550]) ^ (v252 - ((2 * v252) & 0x3575233E) - 1699049057);
  LODWORD(STACK[0x4D8]) = LODWORD(STACK[0x4B0]) ^ ((v222 ^ v199) << 19) ^ ((v222 ^ v199) << 12) ^ ((v222 ^ v199) << 31);
  v254 = STACK[0x4E0];
  v255 = v253 + LODWORD(STACK[0x4E0]);
  LODWORD(STACK[0x4BC]) = HIBYTE(v222) ^ LODWORD(STACK[0x5B4]);
  LODWORD(STACK[0x640]) = (v222 >> 30) ^ 0xEBB064FF;
  LODWORD(STACK[0x4DC]) = 576905510;
  v256 = v255 - 2 * (v253 & v254) - ((2 * (v255 - 2 * (v253 & v254))) & 0x1D0A2B4) + 15225178;
  LODWORD(STACK[0x550]) = v222 ^ v199 ^ 0x5C7E9920;
  v257 = v222 ^ v199 ^ 0x3DB9BEBA;
  v258 = (v256 >> 30) ^ (v256 >> 27);
  v259 = ((8 * v250) ^ 0xEDCDF5D0) - ((2 * ((8 * v250) ^ 0xEDCDF5D0)) & 0x367F3C00) - 1690329593;
  v260 = ((4 * v250) ^ 0xF6E6FAE8) - 2 * (((4 * v250) ^ 0xF6E6FAE8) & STACK[0x548] ^ (4 * v250) & 4) + 214409904;
  v261 = v256 ^ LODWORD(STACK[0x4F8]);
  v262 = v261 ^ v231;
  LODWORD(STACK[0x4A4]) = (_DWORD)v257 << LODWORD(STACK[0x5FC]) << LODWORD(STACK[0x5F8]);
  v263 = v258 ^ (v261 >> 21);
  LODWORD(STACK[0x4B0]) = (v257 >> 7) - ((v257 >> 6) & 0x1DC67C2) - 1494338591;
  v264 = (((2 * v250) ^ (v250 << 6) ^ 0x151CD3F4)
        - ((2 * ((2 * v250) ^ (v250 << 6) ^ 0x151CD3F4)) & 0xC38E4F34)
        + 1640441754) ^ v250 ^ 0x5C7E9920;
  v265 = (v264 - ((2 * v264) & 0x198F4560) + 214409904) ^ v260;
  v266 = STACK[0x588] & (2 * v265);
  v267 = ((v250 << 7) ^ 0xDCDF5D00) - (STACK[0x5A0] & (2 * ((v250 << 7) ^ 0xDCDF5D00))) + 380792140;
  LODWORD(STACK[0x5F8]) = v267;
  v268 = ((v250 << 13) ^ 0x37D74000) - ((2 * ((v250 << 13) ^ 0x37D74000)) & 0x22E7C000) + 292812344;
  LODWORD(STACK[0x5FC]) = v268;
  v269 = LODWORD(STACK[0x510]) ^ (4 * v261) ^ (v261 << 11) ^ (32 * v261) ^ (4 * v263) ^ (v263 << 11) ^ (32 * v263) ^ 0xDA9EB690;
  v270 = (v269 - ((2 * v269) & 0xF37D042A) - 104955371) ^ v200;
  v271 = (v270 - (STACK[0x538] & (2 * v270)) - 1319560164) ^ LODWORD(STACK[0x6B4]);
  v272 = (v271 - (v202 & (2 * v271)) + 1207826772) ^ v205;
  v273 = (((v250 << 10) ^ 0xE6FAE800) - (STACK[0x5A4] & (2 * ((v250 << 10) ^ 0xE6FAE800))) - 1320504402) & STACK[0x5F0];
  v274 = ((v250 << 10) ^ 0xE6FAE800) - (STACK[0x5A4] & (2 * ((v250 << 10) ^ 0xE6FAE800))) - 1320504402;
  v275 = (((v265 - 1690329593 - v266) ^ v259) - ((2 * ((v265 - 1690329593 - v266) ^ v259)) & 0x2D64DA98) + 380792140) ^ v267;
  v276 = (v272 - ((2 * v272) & 0x3AA488E4) + 491930738) ^ v209;
  v277 = ((v250 << 14) ^ 0x6FAE8000) - ((2 * ((v250 << 14) ^ 0x6FAE8000)) & 0x17A10000) + 198229216;
  v278 = v277 & 0xF1440000;
  LODWORD(STACK[0x538]) = v277;
  v279 = (v276 - ((2 * v276) & 0x7DC43042) - 1092478943) ^ LODWORD(STACK[0x670]);
  v280 = (v279 - ((2 * v279) & 0xB38A2C94) - 641395126) ^ LODWORD(STACK[0x680]);
  LODWORD(STACK[0x588]) = 1282790251;
  v281 = (v280 - ((2 * v280) & 0xC59F9AD4) - 489697942) ^ v223;
  v282 = (v281 - ((2 * v281) & 0xD67572C6) + 1799010659) ^ v225;
  v283 = (v282 - ((2 * v282) & 0x1DA33A8) + 15538644) ^ v227;
  v284 = v277 & 0xEBBC000;
  v285 = v274;
  LODWORD(STACK[0x548]) = v274;
  v286 = v268 ^ v274 ^ (v275 - ((2 * v275) & 0x6295675C) - 1320504402);
  v287 = (v283 - 786687875 + (LODWORD(STACK[0x534]) | ~(2 * v283)) + 1) ^ LODWORD(STACK[0x67C]);
  v288 = (v287 - ((2 * v287) & 0x90E1596E) + 1215343799) ^ LODWORD(STACK[0x688]);
  v289 = (v288 - ((2 * v288) & 0xCB712E14) + 1706596106) ^ v229;
  v290 = v262 ^ (v289 - ((2 * v289) & 0x965E7850) - 886096856);
  v291 = ((v250 << 16) ^ 0xBEBA0000) - ((2 * ((v250 << 16) ^ 0xBEBA0000)) & 0x92A20000) - 917425945;
  LODWORD(STACK[0x5F0]) = v291;
  v292 = (v286 & 0xF144160B ^ v278 | v286 & 0xEBBE9F4 ^ v284) ^ (v250 << 17) ^ 0x67D77638;
  v293 = v290 ^ v263;
  v294 = (v292 - ((2 * v292) & 0x92A261CE) - 917425945) ^ v291;
  LODWORD(STACK[0x534]) = 970188327;
  v295 = v290 ^ v263 ^ 0x559FD7C4;
  v296 = (v285 & 0x800000 ^ 0x79F6FF63) + 2 * (v285 & 0x800000);
  v297 = -1303814970 - v296;
  LODWORD(STACK[0x49C]) = (v257 >> 11) - ((v257 >> 10) & 0x3A4D9C) + 1797072590;
  LODWORD(STACK[0x5B4]) = (v293 >> 9) ^ 0x5F0BA54B;
  v298 = v296 - 1101308416;
  v299 = v296 - 2046230371;
  LODWORD(STACK[0x618]) = ((v295 << 11) ^ 0x592A0000) - (STACK[0x5A8] & (2 * ((v295 << 11) ^ 0x592A0000))) - 738300207;
  LODWORD(STACK[0x648]) = ((v295 << 19) ^ 0x2A000000) - ((2 * ((v295 << 19) ^ 0x2A000000)) & 0x41000000) - 1601716070;
  LODWORD(STACK[0x644]) = ((v295 << 14) ^ 0xC9500000) - ((2 * ((v295 << 14) ^ 0xC9500000)) & 0xDC770000) - 298086330;
  LODWORD(STACK[0x614]) = ((v295 << 18) ^ 0x95000000) - ((2 * ((v295 << 18) ^ 0x95000000)) & 0x86580000) + 1127169635;
  LODWORD(STACK[0x59C]) = (4 * v295) ^ (8 * v295) ^ 0x3C6ADE64;
  LODWORD(STACK[0x504]) = v295 << 13;
  LODWORD(STACK[0x5A4]) = ((v295 << 13) ^ 0x64A80000) - (STACK[0x5AC] & (2 * ((v295 << 13) ^ 0x64A80000))) - 146341845;
  LODWORD(STACK[0x688]) = ((v295 << 21) ^ 0xA8000000) - ((2 * ((v295 << 21) ^ 0xA8000000)) & 0x35000000) + 446639871;
  v300 = STACK[0x5B0] & (v295 << 24);
  LODWORD(STACK[0x61C]) = -1476600414;
  LODWORD(STACK[0x608]) = ((v295 << 22) ^ 0x50000000) - ((2 * ((v295 << 22) ^ 0x50000000)) & 0xE1FFFFFF) + 1894681173;
  LODWORD(STACK[0x610]) = ((v295 << 23) ^ 0xA0000000) - v300 - 592455729;
  LODWORD(STACK[0x4CC]) = v295 >> 5;
  LODWORD(STACK[0x620]) = v293;
  LODWORD(STACK[0x4C4]) = (v293 >> 6) ^ 0x904F31FF;
  LODWORD(STACK[0x5AC]) = (v293 >> 10) ^ 0xBC9A63E6;
  LODWORD(STACK[0x4D0]) = (a5 + 14) & 0x14;
  LODWORD(STACK[0x4E0]) = v293 ^ 0x7434F284;
  v301 = (v293 ^ 0x7434F284) >> ((HIBYTE(v222) & 0xB ^ 2) + (HIBYTE(v222) & 0xB ^ 9));
  LODWORD(STACK[0x4D4]) = v301 - ((2 * v301) & 0xFB220184) + 2106654914;
  LODWORD(STACK[0x4C0]) ^= (LODWORD(STACK[0x50C]) | (v293 << 30)) ^ (32 * v295) ^ (16 * v295) ^ (v295 << 17);
  v302 = ((v290 >> 30) | 0x23236638) ^ (v290 >> 29);
  LODWORD(STACK[0x510]) = v302;
  LODWORD(STACK[0x6B4]) = (v295 << 26) + (v293 >> 4 << 31) + 1099833500;
  v303 = LODWORD(STACK[0x5E0]) ^ (v290 >> 21);
  LODWORD(STACK[0x514]) = v303;
  LODWORD(STACK[0x4F8]) = LODWORD(STACK[0x5E4]) ^ (v290 >> 18);
  LODWORD(STACK[0x650]) = (v295 << 28) - ((v293 << 29) & 0x40000000) + 609158183;
  LODWORD(STACK[0x5B0]) = v302 ^ v303 ^ (((v290 >> 27) ^ (v290 >> 28) ^ 9)
                                       - 2 * (((v290 >> 27) ^ (v290 >> 28) ^ 9) & 3)
                                       - 815263837);
  LODWORD(STACK[0x5A0]) = LODWORD(STACK[0x5EC]) ^ (v290 >> 19);
  LODWORD(STACK[0x50C]) = (v290 >> 13) ^ 0x30471251;
  LODWORD(STACK[0x4AC]) = (v290 >> 15) ^ (v295 >> 2);
  LODWORD(STACK[0x5A8]) = (v290 >> 14) ^ 0x172793EC;
  LODWORD(STACK[0x4E8]) = (v295 << 27) - ((v295 << 28) & 0x60000000) + 856191033;
  LODWORD(STACK[0x4EC]) = v295 >> 4;
  LODWORD(STACK[0x4A0]) = (v295 << 10) ^ 0xAC950000;
  LODWORD(STACK[0x598]) ^= v250 >> 8;
  v304 = ((v250 << 20) ^ 0xEBA00000) - ((2 * ((v250 << 20) ^ 0xEBA00000)) & 0xC6200000) - 485094164;
  LODWORD(STACK[0x530]) = v304;
  v305 = (v294 - ((2 * v294) & 0xC62C19D8) - 485094164) ^ v304;
  v306 = (LODWORD(STACK[0x554]) ^ (v250 << 22))
       - ((2 * (LODWORD(STACK[0x554]) ^ (v250 << 22))) & 0xD1800000)
       - 386632862;
  LODWORD(STACK[0x4B4]) = v306;
  v307 = ((v250 << 24) ^ 0xBA000000) - ((v250 << 25) & 0x83FFFFFF) + 1095384451;
  LODWORD(STACK[0x4B8]) = v307;
  v308 = ((v250 << 25) ^ 0x74000000) - ((2 * ((v250 << 25) ^ 0x74000000)) & 0x20000000) - 1878406490;
  LODWORD(STACK[0x554]) = v308;
  v309 = (v250 >> 10) ^ 0xE5B89D87;
  v310 = (v305 - ((2 * v305) & 0xD1E8E6C4) - 386632862) ^ v306;
  LODWORD(STACK[0x5EC]) = ((v250 << 28) ^ 0xA0000000) + ((v250 << 29) ^ 0xBFFFFFFF) - 99101716;
  v311 = ((v250 << 26) ^ 0xE8000000) - ((2 * ((v250 << 26) ^ 0xE8000000)) & 0xEFFFFFFF) + 1995505770;
  LODWORD(STACK[0x52C]) = v311;
  LODWORD(STACK[0x5E0]) = ((v250 << 11) ^ 0xCDF5D000) - (STACK[0x564] & (2 * ((v250 << 11) ^ 0xCDF5D000))) + 198139368;
  v312 = (v310 - ((2 * v310) & 0x82947B06) + 1095384451) ^ v307;
  LODWORD(STACK[0x5E8]) = (LODWORD(STACK[0x5E8]) ^ (v250 << 18))
                        - ((2 * (LODWORD(STACK[0x5E8]) ^ (v250 << 18))) & 0xA7400000)
                        + 1403032162;
  v313 = v250 >> 4;
  LODWORD(STACK[0x564]) = v311 ^ v308;
  v314 = v311 ^ v308 ^ (v312 - ((2 * v312) & 0x2013954C) - 1878406490);
  LODWORD(STACK[0x4A8]) = v314 ^ 0xED66613F;
  v315 = (v250 >> 7) ^ 0xAD36DB99;
  LODWORD(STACK[0x5E4]) = ((v250 << 21) ^ 0xD7400000) - (STACK[0x54C] & (2 * ((v250 << 21) ^ 0xD7400000))) - 510564157;
  v316 = (((v250 << 8) ^ 0xB9BEBA00) - ((2 * ((v250 << 8) ^ 0xB9BEBA00)) & 0x367F3C00) - 1690329593) ^ v259 ^ LODWORD(STACK[0x5F8]) ^ v260;
  if (((v316 ^ 0x1A000000) & v299) != 0)
    v317 = v297;
  else
    v317 = v298;
  LODWORD(STACK[0x54C]) = v315 ^ (v250 >> 6);
  v318 = ((v314 & 0xFE ^ 0x94) + (v314 & 0xFE ^ 0x6A)) & 0x46 ^ 0x44;
  v319 = LODWORD(STACK[0x558]) ^ (v222 >> 29);
  v320 = (v250 << 27) ^ (v250 << 15) ^ LODWORD(STACK[0x4A4]) ^ v273 ^ ((v316 ^ 0x1A75CFFC) - 944921955 + v317);
  v321 = LODWORD(STACK[0x55C]) ^ (v222 >> 25);
  v322 = LODWORD(STACK[0x560]) ^ (v222 >> 19);
  v323 = (v222 >> 22) ^ LODWORD(STACK[0x568]);
  v324 = HIWORD(v222) ^ 0x63F5B330;
  v325 = (v222 >> 12) ^ 0xD7975398;
  v326 = (v222 >> 18) ^ (v222 >> 26) ^ (v222 >> 15) ^ (v222 >> 22) ^ (v250 >> 3) ^ LODWORD(STACK[0x640]) ^ ((((int)v222 >> 30) & 0xFFFFFFFE | (v222 >> 31)) - 340761345) ^ 0x7B74333;
  v327 = (v326 - ((2 * v326) & 0x4DDC67C2) - 1494338591) ^ LODWORD(STACK[0x4B0]);
  v328 = (v327 - ((2 * v327) & 0x14BD9680) - 1973499072) ^ v319;
  v329 = (v328 - ((2 * v328) & 0xAFEC9AC0) + 1475759456) ^ v321;
  v330 = (v329 - ((2 * v329) & 0xF966DE00) + 2092134144) ^ v322;
  v331 = (v330 - ((2 * v330) & 0xC7EB1D12) + 1677037193) ^ v324;
  v332 = (v331 - ((2 * v331) & 0xAF291006) - 678131709) ^ v325;
  v333 = (v332 - ((2 * v332) & 0xCB6FE7D0) - 440929304) ^ v309;
  v334 = (v333 - ((2 * v333) & 0x91668674) - 927775942) ^ LODWORD(STACK[0x598]);
  v335 = (v334 - ((2 * v334) & 0x9635C0C0) - 887431072) ^ v313;
  v336 = LODWORD(STACK[0x56C]) ^ (v335 >> 27);
  v337 = (v222 >> 14) ^ 0xBC34C951;
  v338 = (v222 >> 20) ^ (v222 >> 13) ^ (v222 >> 21) ^ (v250 >> 1) ^ (v257 >> (v336 & 0x12 ^ 2 | v336 & 0x12 ^ 0x10));
  v339 = (v250 >> 6) ^ 0xCBEC069A ^ v335;
  v340 = ((v338 ^ 0x1EDD30A6) - 2 * ((v338 ^ 0x1EDD30A6) & 0x1C132D9B ^ v338 & 8) - 1676464749) ^ v323;
  LOBYTE(v338) = ((v222 >> 11) & 0x4B ^ 3) + ((v222 >> 11) & 0x4B ^ 0x48);
  v341 = v336 ^ (v339 >> 21);
  v342 = (v257 >> (v338 - 69)) - ((2 * (v257 >> (v338 - 69))) & 0xBAACB5F0) + 1565940472;
  LOBYTE(v338) = ((v257 >> (v338 - 69)) - ((2 * (v257 >> (v338 - 69))) & 0xF0) - 8) & 0x63;
  LODWORD(STACK[0x56C]) = ((v341 << 11) ^ 0x7CDA8000) - ((2 * ((v341 << 11) ^ 0x7CDA8000)) & 0x7FE000) - 58723641;
  LODWORD(STACK[0x560]) = 58723667 - (((v341 << 11) ^ 0x7CDA8000) - ((2 * ((v341 << 11) ^ 0x7CDA8000)) & 0x7FE000));
  v343 = (v340 - ((2 * v340) & 0xAFEC9AC0) + 1475759456) ^ v321;
  v344 = (v343 - ((2 * v343) & 0xF966DE00) + 2092134144) ^ v322;
  v345 = (v344 - ((2 * v344) & 0xC7EB1D12) + 1677037193) ^ v324;
  v346 = (v250 >> 9) ^ (v250 >> 5) ^ LODWORD(STACK[0x49C]) ^ 0x1F3112A ^ (((v222 >> 21) ^ (v222 >> 17) ^ 0x1F31)
                                                                        - ((2 * ((v222 >> 21) ^ (v222 >> 17) ^ 0x1F31)) & 0x4D9C)
                                                                        + 1797072590);
  v347 = (v345 - 1137426505 + (LODWORD(STACK[0x570]) | ~(2 * v345)) + 1) ^ v337;
  v348 = v320 ^ (v257 << ((v338 ^ 0x60 | v338 ^ 3) ^ 0x77));
  v349 = (v346 - ((2 * v346) & 0x5760C9FE) - 340761345) ^ LODWORD(STACK[0x640]);
  v350 = (v349 - ((2 * v349) & 0x14BD9680) - 1973499072) ^ v319;
  v351 = (v350 - ((2 * v350) & 0xAFEC9AC0) + 1475759456) ^ v321;
  v352 = (v250 << 29) ^ (32 * v339) ^ (4 * v339) ^ (v339 << 11) ^ (32 * v341) ^ 0xD53120CC ^ ((unint64_t)(v341 ^ 0xF9EF9B50) << v318);
  v353 = LODWORD(STACK[0x4A8]) ^ (v352 - ((2 * v352) & 0x372EC2AA) - 1684577963);
  v354 = (v351 - ((2 * v351) & 0x38265B26) - 1676464749) ^ v323;
  v355 = LODWORD(STACK[0x4BC]) ^ (v354 - ((2 * v354) & 0xA4D7DF0C) + 1382805382);
  v356 = (v355 - ((2 * v355) & 0xF966DE00) + 2092134144) ^ v322;
  v357 = (v356 - ((2 * v356) & 0xC7EB1D12) + 1677037193) ^ v324;
  v358 = (v357 - ((2 * v357) & 0x78687F6E) - 1137426505) ^ v337;
  v359 = (v353 - ((2 * v353) & 0xF42FA7D6) - 99101717) ^ LODWORD(STACK[0x5EC]);
  v360 = v341 ^ v339 ^ (v359 - ((2 * v359) & 0x475634B4) - 1549067686);
  v361 = v360 & 2;
  v362 = (v347 - ((2 * v347) & 0xAF291006) - 678131709) ^ v325;
  v363 = (v362 - ((2 * v362) & 0xA906857E) - 729595201) ^ (v222 >> 11);
  v364 = (v358 - ((2 * v358) & 0xAF291006) - 678131709) ^ v325;
  v365 = (v364 - ((2 * v364) & 0xCB6FE7D0) - 440929304) ^ v309;
  v366 = (v365 - ((2 * v365) & 0x91668674) - 927775942) ^ LODWORD(STACK[0x598]);
  v367 = LODWORD(STACK[0x54C]) ^ (v366 - ((2 * v366) & 0x5A9B51C8) - 1387419420);
  v368 = v348 ^ v367 ^ (32 * v367) ^ (v367 << 11);
  v369 = v360 & 0x2704259E;
  v370 = v342 ^ v315 ^ ((v363 ^ 0xD484F588) - 2 * ((v363 ^ 0xD484F588) & 0x2D4DA8F6 ^ v363 & 0x12) - 1387419420);
  v371 = LODWORD(STACK[0x4C8]) ^ (4 * v367);
  v372 = (v367 >> 21) ^ 0xD;
  v373 = LODWORD(STACK[0x4D8]) ^ ((v370 ^ v313) << 11);
  v374 = v371 & 0x20;
  LODWORD(STACK[0x640]) = LODWORD(STACK[0x4A0]) - ((2 * LODWORD(STACK[0x4A0])) & 0xCF7EE800) - 406882396;
  v375 = v360 & 0xD8FBDA61;
  v376 = v371 ^ 0x3B9A8CC0;
  v377 = LODWORD(STACK[0x4AC]) ^ 0x86A2139;
  v378 = (v376 - 2 * (v376 & STACK[0x4DC] ^ v374) + 576905478) ^ LODWORD(STACK[0x638]);
  v379 = (v378 - ((2 * v378) & 0xCDC9E234) - 421203686) ^ LODWORD(STACK[0x528]);
  v380 = (v379 - ((2 * v379) & 0xDE5B8D12) + 1865270921) ^ LODWORD(STACK[0x634]);
  v381 = (v380 - ((2 * v380) & 0xE6A2CF66) - 212768845) ^ LODWORD(STACK[0x5C0]);
  v382 = (v381 - ((2 * v381) & 0xB87B676) + 96721723) ^ LODWORD(STACK[0x5D0]);
  v383 = (v382 - ((2 * v382) & 0x9ACACE44) + 1298491170) ^ LODWORD(STACK[0x5D4]);
  v384 = (v383 - ((2 * v383) & 0xE67D792) + 120843209) ^ LODWORD(STACK[0x5BC]);
  v385 = (v384 - ((2 * v384) & 0x51C76488) + 686010948) ^ LODWORD(STACK[0x658]);
  v386 = (v385 - ((2 * v385) & 0x914D35B6) - 928605477) ^ LODWORD(STACK[0x5B8]);
  v387 = (v386 - ((2 * v386) & 0x179111A6) + 197691603) ^ LODWORD(STACK[0x5CC]);
  v388 = (v387 - ((2 * v387) & 0x22A66BD8) - 1856817684) ^ LODWORD(STACK[0x51C]);
  v389 = (v388 - ((2 * v388) & 0x688AF1E8) + 876968180) ^ LODWORD(STACK[0x508]);
  v390 = v373 ^ (4 * (v370 ^ v313 ^ LODWORD(STACK[0x574]))) ^ (32 * (v370 ^ v313 ^ LODWORD(STACK[0x574])));
  HIDWORD(v391) = LODWORD(STACK[0x520]) ^ 0x111D9;
  LODWORD(v391) = STACK[0x524];
  v392 = STACK[0x4E8];
  LODWORD(STACK[0x568]) = LODWORD(STACK[0x540]) ^ (v391 >> 17) ^ (4 * LODWORD(STACK[0x5D8])) ^ (32
                                                                                              * LODWORD(STACK[0x5D8])) ^ (LODWORD(STACK[0x5D8]) << 11) ^ (4 * LODWORD(STACK[0x5DC])) ^ (32 * LODWORD(STACK[0x5DC])) ^ (LODWORD(STACK[0x5DC]) << 11) ^ LODWORD(STACK[0x4E8]);
  LODWORD(STACK[0x598]) = v370 ^ v313;
  v393 = ((v370 ^ v313) >> 27) ^ (v370 >> 30) ^ ((v370 ^ v313) >> 21);
  LODWORD(STACK[0x570]) = v393;
  LODWORD(STACK[0x5C0]) = v390 ^ (4 * v393) ^ (32 * v393) ^ (v393 << 11);
  v394 = ((v389 ^ 0x30916CC8) + 1213672663 - 2 * ((v389 ^ 0x30916CC8) & STACK[0x584] ^ v389 & 4) + 26) ^ LODWORD(STACK[0x4F0]);
  v395 = STACK[0x4D4];
  v396 = (v377 - ((2 * v377) & 0x7B220184) + 2106654914) ^ LODWORD(STACK[0x4D4]);
  v397 = v368 ^ (4 * v372) ^ (32 * v372) ^ (v372 << 11) ^ 0x9E446D8F ^ ((v394 ^ 0x48572CD7)
                                                                      - 2
                                                                      * ((v394 ^ 0x48572CD7) & 0x94E657D ^ v394 & 0x20)
                                                                      - 1991350947);
  v398 = v369 ^ STACK[0x560] & 0x42000;
  v399 = (v397 - ((2 * v397) & 0x179EBBD0) + 198139368) ^ LODWORD(STACK[0x5E0]);
  v400 = (v399 - ((2 * v399) & 0x22E7EC70) + 292812344) ^ LODWORD(STACK[0x5FC]);
  v401 = (v400 - ((2 * v400) & 0x92A261CE) - 917425945) ^ LODWORD(STACK[0x5F0]);
  v402 = (v401 - ((2 * v401) & 0xA74124C4) + 1403032162) ^ LODWORD(STACK[0x5E8]);
  v403 = (v402 - ((2 * v402) & 0xC322D186) - 510564157) ^ LODWORD(STACK[0x5E4]);
  v404 = (v403 - ((2 * v403) & 0xD1E8E6C4) - 386632862) ^ LODWORD(STACK[0x4B4]);
  v405 = (v404 - ((2 * v404) & 0x82947B06) + 1095384451) ^ LODWORD(STACK[0x4B8]);
  v406 = LODWORD(STACK[0x564]) ^ (v405 - ((2 * v405) & 0x2013954C) - 1878406490);
  v407 = STACK[0x5A0];
  v408 = (v396 - 975637181 + (~(2 * v396) | 0x744E1579) + 1) ^ LODWORD(STACK[0x5A0]);
  v409 = v406 ^ v372;
  v410 = v406 ^ v372 ^ 0x7C5FDE86;
  v411 = LODWORD(STACK[0x5B0]) ^ 0xE1FD810A ^ (v408 - ((2 * v408) & 0x85BDCE60) - 1025579216);
  v412 = STACK[0x4F8];
  v413 = (v411 - ((2 * v411) & 0xD0B32FA0) + 1750702032) ^ LODWORD(STACK[0x4F8]);
  v414 = STACK[0x5A8];
  v415 = (v413 - ((2 * v413) & 0x2E4C867E) + 388383551) ^ LODWORD(STACK[0x5A8]);
  v416 = STACK[0x50C];
  v417 = (v415 - ((2 * v415) & 0x608967EC) + 809808886) ^ LODWORD(STACK[0x50C]);
  v418 = (v417 - ((2 * v417) & 0x790EDDB4) - 1131974950) ^ LODWORD(STACK[0x5AC]);
  v419 = (v418 - ((2 * v418) & 0xBE637E64) + 1597095730) ^ LODWORD(STACK[0x5B4]);
  v420 = (v419 - ((2 * v419) & 0x233FC46A) - 1851792843) ^ LODWORD(STACK[0x4C4]);
  v421 = STACK[0x4CC];
  LODWORD(STACK[0x584]) = LODWORD(STACK[0x4CC]) ^ LODWORD(STACK[0x4C4]);
  v422 = STACK[0x4EC];
  v423 = LODWORD(STACK[0x4EC]) ^ v421 ^ 0xAC7D6575 ^ (v420 - ((2 * v420) & 0x5AE078BE) - 1385153441);
  v424 = LODWORD(STACK[0x4C0]) ^ (4 * v423) ^ (32 * v423) ^ (v423 << 11);
  v425 = STACK[0x4E0];
  v426 = (LODWORD(STACK[0x4E0]) >> (LODWORD(STACK[0x4D0]) + ((17 - a5) & 0x14))) ^ (v295 >> 7) ^ (v295 >> 1);
  v427 = (v398 | v375 ^ (LODWORD(STACK[0x56C]) + 4194277) & 0x3BD800) ^ 0x59A4CAE1;
  v428 = v427 - 2 * (v427 & 0x1BEFC81F ^ v361) - 1678784483;
  LODWORD(STACK[0x56C]) = v428;
  v429 = (v423 >> 27) ^ (v395 >> 30) ^ (v423 >> 21);
  v430 = v424 ^ (4 * v429);
  v431 = (v290 >> 25) ^ 0x7421FB47;
  LODWORD(STACK[0x5CC]) = v290 >> 22;
  v432 = (v290 >> 22) ^ (v425 >> 6);
  LODWORD(STACK[0x638]) = ((v295 << 7) ^ 0xD592A000) - ((2 * ((v295 << 7) ^ 0xD592A000)) & 0xC441EE00) - 501156063;
  v433 = (32 * v429) ^ (v429 << 11) ^ v430 ^ 0x47AD2522;
  v434 = (v433 - 2 * (v433 & 0x379F617D ^ v430 & 0x19) - 1214291612) ^ LODWORD(STACK[0x59C]);
  v435 = STACK[0x61C];
  v436 = STACK[0x618];
  v437 = (v434 - (STACK[0x61C] & (2 * v434)) - 738300207) ^ LODWORD(STACK[0x618]);
  v438 = (v437 - 146341845 + (~(2 * v437) | 0x1171FFA9) + 1) ^ LODWORD(STACK[0x5A4]);
  v439 = (v438 - ((2 * v438) & 0xDC77208C) - 298086330) ^ LODWORD(STACK[0x644]);
  v440 = STACK[0x614];
  v441 = (v439 - ((2 * v439) & 0x865E7CC6) + 1127169635) ^ LODWORD(STACK[0x614]);
  v442 = (v441 - ((2 * v441) & 0x410F8134) - 1601716070) ^ LODWORD(STACK[0x648]);
  v443 = (v442 - ((2 * v442) & 0x353E5DFE) + 446639871) ^ LODWORD(STACK[0x688]);
  v444 = (v443 - ((2 * v443) & 0xE1DD14AA) + 1894681173) ^ LODWORD(STACK[0x608]);
  v445 = (v444 - ((2 * v444) & 0xB95FAF9E) - 592455729) ^ LODWORD(STACK[0x610]);
  v446 = (v445 - ((2 * v445) & 0x831C4138) + 1099833500) ^ LODWORD(STACK[0x6B4]);
  v447 = (v446 - ((2 * v446) & 0x6610E072) + 856191033) ^ v392;
  v448 = (v447 - ((2 * v447) & 0x489E084E) + 609158183) ^ LODWORD(STACK[0x650]);
  v449 = (v448 - ((2 * v448) & 0x82E26368) + 1097937332) ^ v423;
  LODWORD(STACK[0x5D4]) = ((v449 ^ 0x436B83E0) - 2 * ((v449 ^ 0x436B83E0) & 0x159AE03F ^ v449 & 0x10) + 362471471) ^ v429;
  v450 = ((v295 << 16) ^ 0x25400000) - ((2 * ((v295 << 16) ^ 0x25400000)) & 0x4E1C0000) + 655243469;
  LODWORD(STACK[0x5B8]) = v450;
  v451 = HIWORD(v290) ^ 0xF6460E67;
  LODWORD(STACK[0x574]) = (v295 << 20) ^ 0x54000000;
  v452 = (v290 >> 12) ^ 0xE080AFE0;
  v453 = (v290 >> 11) ^ 0xAC4B15DC;
  v454 = STACK[0x620];
  LODWORD(STACK[0x658]) = (v295 << 25) + (LODWORD(STACK[0x620]) >> 5 << 31) + 1080976592;
  v455 = ((v432 ^ 0x1096C53A ^ v426) + 1948384071 - ((2 * (v432 ^ 0x1096C53A ^ v426)) & 0xE843F6FA) + 54) ^ v431;
  v456 = STACK[0x514];
  v457 = (v455 - ((2 * v455) & 0x9ED01F46) - 815263837) ^ LODWORD(STACK[0x514]);
  v458 = (v457 - ((2 * v457) & 0x8BB1EA86) - 975637181) ^ v407;
  v459 = (v458 - ((2 * v458) & 0xD0B32FA0) + 1750702032) ^ v412;
  v460 = (v459 - ((2 * v459) & 0xEC8CF4A6) - 163153325) ^ v451;
  v461 = (v460 - ((2 * v460) & 0x2E4C867E) + 388383551) ^ v414;
  v462 = (v461 - ((2 * v461) & 0x608967EC) + 809808886) ^ v416;
  v463 = (v462 - ((2 * v462) & 0xC10FD95E) - 527962961) ^ v452;
  v464 = v422 ^ v453 ^ (v463 - ((2 * v463) & 0x588B2684) - 1404726462);
  v465 = (LODWORD(STACK[0x518]) - ((2 * LODWORD(STACK[0x518])) & 0xB80B0578) + 1543865020) ^ (v454 << 31) ^ (v295 << 12) ^ LODWORD(STACK[0x504]) ^ v464 ^ (32 * v464) ^ (4 * v464) ^ (v464 << 11);
  v466 = (v464 >> 21) ^ (v426 >> 30) ^ ((v464 ^ 0x21AB254) >> ((((v290 >> 25) ^ 0x21)
                                                                               + ((v290 >> 25) & 0x64 ^ 0xDF)
                                                                               + 1) | (v290 >> 25) & 0x1B ^ 0x1A));
  LODWORD(STACK[0x5BC]) = v466;
  LODWORD(STACK[0x5D0]) = v465 ^ (4 * v466) ^ (32 * v466) ^ ((unint64_t)(v466 ^ 0x10u) << (((v428 & 0xE4 ^ 0xE0)
                                                                                                 + (v428 & 0xE4 ^ 4)) ^ 0xEFu));
  v467 = (v454 << 24) ^ (v454 << 15) ^ (v295 << 8) ^ 0x56674000;
  v468 = (v467 - ((2 * v467) & 0xC441EE00) - 501156063) ^ LODWORD(STACK[0x638]);
  v469 = (v468 - ((2 * v468) & 0x6F3EC2C8) - 1214291612) ^ LODWORD(STACK[0x59C]);
  v470 = (v469 - ((2 * v469) & 0xCF7EEF48) - 406882396) ^ LODWORD(STACK[0x640]);
  v471 = (v470 - (v435 & (2 * v470)) - 738300207) ^ v436;
  v472 = (v471 - ((2 * v471) & 0xEE8E0056) - 146341845) ^ LODWORD(STACK[0x5A4]);
  v473 = (v472 - ((2 * v472) & 0x4E1C719A) + 655243469) ^ v450;
  v474 = (v473 - ((2 * v473) & 0x865E7CC6) + 1127169635) ^ v440;
  LODWORD(STACK[0x59C]) = v474 - ((2 * v474) & 0x80C09FE6) + 1080053747;
  LODWORD(STACK[0x634]) = 1099833502;
  v475 = HIBYTE(v290) ^ (v290 >> 17) ^ (v454 >> 8) ^ (v454 >> 7) ^ 0x9C6779;
  v476 = LODWORD(STACK[0x510]) ^ 0xD6780B19 ^ (v475 - ((2 * v475) & 0x2B6DA46) - 178557661);
  v477 = (v476 + 1948384071 + (~(2 * v476) | 0x97BC0905) + 55) ^ v431;
  v478 = LODWORD(STACK[0x5CC]) ^ 0xB1A12E8C ^ (v477 - 1314836852 - ((2 * v477) & 0x63425EB8) + 208);
  v479 = (v478 - ((2 * v478) & 0x9ED01F46) - 815263837) ^ v456;
  v480 = (v479 - ((2 * v479) & 0x8BB1EA86) - 975637181) ^ LODWORD(STACK[0x5A0]);
  v481 = (v406 >> 28) ^ (v406 >> 27) ^ (v406 >> 21) ^ (v406 >> 18) ^ (v406 >> 13);
  v482 = (v480 - 163153325 + (~(2 * v480) | 0x13730B59) + 1) ^ v451;
  v483 = (v482 - ((2 * v482) & 0x2E4C867E) + 388383551) ^ LODWORD(STACK[0x5A8]);
  v484 = (v483 - ((2 * v483) & 0xC10FD95E) - 527962961) ^ v452;
  v485 = (v484 - ((2 * v484) & 0x588B2684) - 1404726462) ^ v453;
  v486 = (v485 - ((2 * v485) & 0x790EDDB4) - 1131974950) ^ LODWORD(STACK[0x5AC]);
  v487 = (v486 - ((2 * v486) & 0xBE637E64) + 1597095730) ^ LODWORD(STACK[0x5B4]);
  v488 = LODWORD(STACK[0x584]) ^ (v487 - ((2 * v487) & 0x233FC46A) - 1851792843);
  v489 = LODWORD(STACK[0x568]) ^ (4 * v488) ^ (32 * v488) ^ (v488 << 11);
  v490 = ((v406 >> 29) | 0x13123908) ^ (v406 >> 30) ^ 0x302A008F;
  LODWORD(STACK[0x584]) = v488 >> 21;
  LODWORD(STACK[0x5A4]) = v489 ^ (4 * (v488 >> 21)) ^ (32 * (v488 >> 21)) ^ (v488 >> 21 << 11);
  v491 = (4 * v410) ^ (8 * v410) ^ 0xBCB3458D;
  LODWORD(STACK[0x5A8]) = LODWORD(STACK[0x5D8]) ^ 0x713A3C2F;
  v492 = (v406 >> 19) ^ 0x2AEED28E;
  LODWORD(STACK[0x5AC]) = LODWORD(STACK[0x5DC]) ^ 0x37589134;
  LODWORD(STACK[0x5B4]) = v488 ^ 0x588BB3E0;
  v493 = ((v410 << 13) ^ 0xDBDCC000) - ((2 * ((v410 << 13) ^ 0xDBDCC000)) & 0x66EB8000) - 1284128593;
  v494 = (v409 >> 10) ^ 0xE25394D6;
  v495 = ((v410 << 21) ^ 0xDCC00000) - ((2 * ((v410 << 21) ^ 0xDCC00000)) & 0x69800000) + 885548209;
  v496 = ((v410 << 18) ^ 0x7B980000) - ((2 * ((v410 << 18) ^ 0x7B980000)) & 0x4EB80000) + 660421570;
  v497 = (v406 >> 11) ^ 0x70A4D89;
  v498 = (v409 ^ 0x76F10060) >> (-127 - (STACK[0x5B0] & 0x72 ^ 0x32 | STACK[0x5B0] & 0x72 ^ 0x40));
  v499 = v498 - 2102408423 - ((2 * v498) & 0x55F9632);
  v500 = v499 + 0x80000000;
  v501 = ((v410 << 22) ^ 0xB9800000) - ((2 * ((v410 << 22) ^ 0xB9800000)) & 0xCD000000) - 425545529;
  v502 = (v406 >> 14) ^ 0x67A53DDB;
  v503 = ((v410 << 23) ^ 0x73000000) - ((2 * ((v410 << 23) ^ 0x73000000)) & 0x14000000) + 170220604;
  v504 = ((v410 << 26) ^ 0x98000000) - ((v409 << 27) & 0x8FFFFFFF) - 951831628;
  v505 = ((v410 << 27) ^ 0x30000000) - ((2 * ((v410 << 27) ^ 0x30000000)) & 0xA0000000) + 1451094271;
  LODWORD(STACK[0x5B0]) = LODWORD(STACK[0x5C0]) ^ v505;
  v506 = ((v481 ^ 0x3A98A) - 2 * ((v481 ^ 0x3A98A) & 0x7CB1D ^ v481 & 4) - 2102408423) ^ v499;
  v507 = (((v506 - ((2 * v506) & 0x4670730A) + 590887301) ^ v490)
        - 2
        * (((v506 - ((2 * v506) & 0x4670730A) + 590887301) ^ v490) & 0x2AEEDC58 ^ (v506
                                                                                 - ((2 * v506) & 0x4670730A)
                                                                                 + 590887301) & 8)
        + 720297040) ^ v492;
  v508 = (v409 >> 6) ^ 0x4239A4E5;
  v509 = (v507 - ((2 * v507) & 0xCF49CC3E) + 1738860063) ^ v502;
  v510 = (v509 - ((2 * v509) & 0xE092752) + 117740457) ^ v497;
  v511 = (((v409 >> 2) ^ (v410 >> 4) ^ 0x1D16ADF6)
        - ((2 * ((v409 >> 2) ^ (v410 >> 4) ^ 0x1D16ADF6)) & 0x7C4C1C8)
        + 1138909412) ^ v494 ^ (v510 - ((2 * v510) & 0xC49C512C) - 498194282);
  v512 = v508 ^ (v410 >> 9) ^ v511;
  v513 = (v410 >> 5) ^ v508;
  v514 = v512 ^ (v410 >> 5);
  v515 = v514 ^ 0xBFFAC0F9;
  v516 = (v410 << 28) ^ (v410 << 30) ^ (v410 << 19) ^ (v410 << 17) ^ (v410 << 14) ^ (v410 << 11) ^ (32 * v410) ^ (16 * v410) ^ 0x948482A0;
  v517 = (v511 >> 28) & 3 | (16 * (v514 ^ 0xBFFAC0F9));
  v518 = v514 ^ 0xBFFAC0F9 ^ LODWORD(STACK[0x56C]);
  v519 = (v512 >> 27) ^ (v500 >> 30) ^ (v514 >> 21);
  v520 = (v516 - 2 * (v516 & 0x437EC935 ^ (16 * v410) & 0x10) - 1015101147) ^ v491;
  v521 = (v520 - ((2 * v520) & 0x66EB815E) - 1284128593) ^ v493;
  v522 = (v521 - ((2 * v521) & 0x4EBA7784) + 660421570) ^ v496;
  v523 = (v522 - ((2 * v522) & 0x6990C962) + 885548209) ^ v495;
  v524 = (v523 - ((2 * v523) & 0xCD45618E) - 425545529) ^ v501;
  v525 = (v524 - ((2 * v524) & 0x144AB878) + 170220604) ^ v503;
  v526 = (v525 - ((2 * v525) & 0x8E886768) - 951831628) ^ v504;
  v527 = (v526 - ((2 * v526) & 0xACFBE1FE) + 1451094271) ^ v505;
  v528 = v518 ^ (v527 - ((2 * v527) & 0x37DF903A) - 1678784483);
  HIDWORD(v391) = v528 ^ 0x3FAAE161;
  LODWORD(v391) = v528 ^ 0x80000000;
  v529 = (v391 >> 30) ^ v517;
  LODWORD(STACK[0x5CC]) = v519;
  HIDWORD(v391) = v529 ^ 1;
  LODWORD(v391) = v529 ^ 0x71B74DFC;
  v530 = (v406 >> 22) ^ (v406 >> 25) ^ (v406 >> 17);
  LODWORD(STACK[0x5D8]) = ((v391 >> 2) + 244825562 - ((2 * (v391 >> 2)) & 0x1D2F7BB4)) ^ (((32 * v515) ^ (v515 << 11) ^ 0xA2572420)
                                                                                        - ((2
                                                                                          * ((32 * v515) ^ (v515 << 11) ^ 0xA2572420)) & 0x1D2F7B80)
                                                                                        + 244825562);
  LODWORD(STACK[0x5DC]) = (4 * v519) ^ (32 * (v519 ^ 0x10D)) ^ ((v519 ^ 0x10D) << 11);
  v531 = (v409 ^ 0x76F10060) >> (HIBYTE(v406) & 0x15 ^ 1 | HIBYTE(v406) & 0x15 ^ 0x14);
  v532 = v531 - 420503527 - ((2 * v531) & 0xCDDF4032);
  v533 = HIWORD(v406) ^ (v406 >> 12) ^ (v409 >> 7) ^ (v409 >> 8) ^ v532 ^ 0x9C0AE1 ^ ((v530 ^ 0x3A98)
                                                                                    - 2
                                                                                    * ((v530 ^ 0x3A98) & 0x201D ^ v530 & 4)
                                                                                    - 420503527);
  v534 = HIBYTE(v406) ^ 0x94F60A66 ^ (v533 - ((2 * v533) & 0x29EC1420) - 1795814896);
  v535 = (v534 - ((2 * v534) & 0x4670730A) + 590887301) ^ v490;
  v536 = (v535 - ((2 * v535) & 0x55DDB8A0) + 720297040) ^ v492;
  v537 = (v536 - ((2 * v536) & 0xCF49CC3E) + 1738860063) ^ v502;
  v538 = (v537 + 117740457 + (~(2 * v537) | 0xF1F6D8AD) + 1) ^ v497;
  v539 = (v538 - ((2 * v538) & 0xC49C512C) - 498194282) ^ v494;
  v540 = (v410 >> 9) ^ 0xC8DEDDF2 ^ (v539 - ((2 * v539) & 0x91B7153A) - 925136227);
  v541 = (v409 << 20) ^ (v409 << 25) ^ (v410 << 24) ^ (v410 << 16) ^ (v410 << 8) ^ (v410 << 7) ^ (v410 << 10) ^ (v410 << 15) ^ 0xD35F0D00 ^ ((v409 ^ 0x76F10060) << ((((v391 >> 2) - 38 - ((2 * (v391 >> 2)) & 0xB4)) ^ 0xFE | ~(((v391 >> 2) - 38 - ((2 * (v391 >> 2)) & 0xB4)) ^ (((32 * v515) ^ 0x20) - ((2 * ((32 * v515) ^ 0x20)) & 0x80) - 38))) & 0xB));
  v542 = (v541
        - 2
        * (v541 & 0x437EC927 ^ ((v409 ^ 0x76F10060) << ((((v391 >> 2) - 38 - ((2 * (v391 >> 2)) & 0xB4)) ^ 0xFE | ~(((v391 >> 2) - 38 - ((2 * (v391 >> 2)) & 0xB4)) ^ (((32 * v515) ^ 0x20) - ((2 * ((32 * v515) ^ 0x20)) & 0x80) - 38))) & 0xB)) & 2)
        - 1015101147) ^ v491;
  v543 = (v542 - ((2 * v542) & 0x66EB815E) - 1284128593) ^ v493;
  v544 = (v543 - ((2 * v543) & 0x4EBA7784) + 660421570) ^ v496;
  v545 = (v544 - ((2 * v544) & 0x6990C962) + 885548209) ^ v495;
  v546 = (v545 - ((2 * v545) & 0xCD45618E) - 425545529) ^ v501;
  v547 = (v546 - ((2 * v546) & 0x144AB878) + 170220604) ^ v503;
  v548 = (v547 - ((2 * v547) & 0x8E886768) - 951831628) ^ v504;
  v549 = v513 ^ (v540 - ((2 * v540) & 0x87C4C1C8) + 1138909412);
  LODWORD(STACK[0x5C0]) = -538053120;
  v550 = (~v532 >> 30) ^ (v532 >> 27) ^ (v549 >> 21);
  v551 = LODWORD(STACK[0x5B0]) ^ 0x1E4217FC ^ (v548 - ((2 * v548) & 0xACFBE1FE) + 1451094271);
  v552 = (v551 - ((2 * v551) & 0xC38E4F34) + 1640441754) ^ LODWORD(STACK[0x550]);
  v553 = (v552 - ((2 * v552) & 0x2D64DA98) + 380792140) ^ LODWORD(STACK[0x5F8]);
  v554 = (v553 - ((2 * v553) & 0x6295675C) - 1320504402) ^ LODWORD(STACK[0x548]);
  v555 = (v554 - ((2 * v554) & 0x179EBBD0) + 198139368) ^ LODWORD(STACK[0x5E0]);
  v556 = (v555 - ((2 * v555) & 0x22E7EC70) + 292812344) ^ LODWORD(STACK[0x5FC]);
  v557 = (v556 - ((2 * v556) & 0x17A179C0) + 198229216) ^ LODWORD(STACK[0x538]);
  v558 = (v557 - ((2 * v557) & 0x92A261CE) - 917425945) ^ LODWORD(STACK[0x5F0]);
  v559 = (v558 - ((2 * v558) & 0xA74124C4) + 1403032162) ^ LODWORD(STACK[0x5E8]);
  v560 = (v559 - 485094164 + (LODWORD(STACK[0x534]) | ~(2 * v559)) + 1) ^ LODWORD(STACK[0x530]);
  v561 = (v560 - ((2 * v560) & 0xC322D186) - 510564157) ^ LODWORD(STACK[0x5E4]);
  v562 = (v561 - ((2 * v561) & 0x2013954C) - 1878406490) ^ LODWORD(STACK[0x554]);
  v563 = (v562 - ((2 * v562) & 0xEDE200D4) + 1995505770) ^ LODWORD(STACK[0x52C]);
  v564 = (v563 - ((2 * v563) & 0xF42FA7D6) - 99101717) ^ LODWORD(STACK[0x5EC]);
  v565 = LODWORD(STACK[0x598]) ^ 0xD165C77E ^ (v564 - ((2 * v564) & 0x1FD00CDA) - 1880619411);
  v566 = LODWORD(STACK[0x570]) ^ 0x841CCAB9 ^ (v565 - ((2 * v565) & 0x839908E) - 2078488505);
  v567 = v566 - ((2 * v566) & 0xB8AE6FD4) + 1549219818;
  v568 = v549 ^ (4 * v549) ^ (32 * v549) ^ (v549 << 11);
  LODWORD(STACK[0x5EC]) = 1062067269;
  v569 = (32 * v550) ^ (v550 << 11) ^ (((4 * v550) ^ 0x78) - ((8 * v550) & 0x3708) - 260392057) ^ v568 ^ v567;
  LODWORD(STACK[0x5A0]) = v569;
  v570 = v569 ^ v550;
  LODWORD(STACK[0x5F0]) = ((v568 ^ ~v567) >> 31) ^ (v569 >> 30);
  LODWORD(STACK[0x5B0]) = v570;
  LODWORD(STACK[0x598]) = v570 ^ 0x64C6A8EA;
  LODWORD(STACK[0x5E0]) = v570 ^ 0x903D3BF1;
  LODWORD(STACK[0x5E4]) = 51857408;
  LODWORD(STACK[0x5F8]) = 1062067275;
  LODWORD(STACK[0x570]) = 655725800;
  LODWORD(STACK[0x5FC]) = 106531050;
  LODWORD(STACK[0x5E8]) = 916947326;
  STACK[0x3F0] = 0;
  v571 = LODWORD(STACK[0x574]) - ((2 * LODWORD(STACK[0x574])) & 0x80C00000) + 1080053747;
  LODWORD(STACK[0x568]) = v571;
  v572 = ((LODWORD(STACK[0x59C]) ^ v571) - ((2 * (LODWORD(STACK[0x59C]) ^ v571)) & 0x353E5DFE) + 446639871) ^ LODWORD(STACK[0x688]);
  v573 = (v572 - ((2 * v572) & 0xE1DD14AA) + 1894681173) ^ LODWORD(STACK[0x608]);
  v574 = (v573 - ((2 * v573) & 0xB95FAF9E) - 592455729) ^ LODWORD(STACK[0x610]);
  v575 = v574 & 2;
  LODWORD(STACK[0x518]) = 0;
  STACK[0x438] = 0;
  v576 = (v574 - ((2 * v574) & 0x80DCC9A0) - 1066507056) ^ LODWORD(STACK[0x658]);
  v577 = (v576 - 2 * (v576 & STACK[0x634] ^ v575) + 1099833500) ^ LODWORD(STACK[0x6B4]);
  v578 = LODWORD(STACK[0x5A4]) ^ (v577 - ((2 * v577) & 0x6610E072) + 856191033) ^ 0xAD7533E4;
  v579 = (v578 - ((2 * v578) & 0x3AA488E4) + 491930738) ^ LODWORD(STACK[0x660]);
  v580 = (v579 - ((2 * v579) & 0x9249E7D2) + 1227158505) ^ LODWORD(STACK[0x630]);
  v581 = (v580 - ((2 * v580) & 0x7DC43042) - 1092478943) ^ LODWORD(STACK[0x670]);
  v582 = (v581 - ((2 * v581) & 0xB75A2BAC) - 609413674) ^ LODWORD(STACK[0x624]);
  v583 = (v582 - ((2 * v582) & 0x60F89656) + 813452075) ^ LODWORD(STACK[0x628]);
  v584 = (v583 - 641395126 + (LODWORD(STACK[0x588]) | ~(2 * v583)) + 1) ^ LODWORD(STACK[0x680]);
  v585 = (v584 - ((2 * v584) & 0xC59F9AD4) - 489697942) ^ LODWORD(STACK[0x600]);
  v586 = (v585 - ((2 * v585) & 0xA23830FA) - 786687875) ^ LODWORD(STACK[0x67C]);
  v587 = (v586 - ((2 * v586) & 0x3C8F2EF0) + 508008312) ^ LODWORD(STACK[0x668]);
  v588 = LODWORD(STACK[0x5A8]) ^ (v587 - ((2 * v587) & 0xFD292000) + 2123665408);
  v589 = LODWORD(STACK[0x5AC]) ^ (v588 + 928551220 - ((2 * v588) & 0x6EB12290) + 20);
  v590 = LODWORD(STACK[0x5B4]) ^ (v589 - ((2 * v589) & 0xB30DD594) + 1502014154);
  v591 = v590 - ((2 * v590) & 0x3D6D22E);
  LODWORD(STACK[0x670]) = v591;
  v592 = (v591 + 32205079) ^ LODWORD(STACK[0x584]);
  LODWORD(STACK[0x67C]) = ((v592 << 7) ^ 0x7D318200) - (STACK[0x5C0] & (2 * ((v592 << 7) ^ 0x7D318200)));
  LODWORD(STACK[0x680]) = ((4 * v592) ^ 0x3BE98C10) + 1796018047 - ((2 * ((4 * v592) ^ 0x3BE98C10)) & 0xD61A1EF8);
  LODWORD(STACK[0x5A8]) = ((8 * v592) ^ 0x77D31820) - 2 * (((8 * v592) ^ 0x77D31820) & 0x15954FD8 ^ (8 * v592) & 8);
  LODWORD(STACK[0x584]) = ((v592 << 13) ^ 0x4C608000) - ((2 * ((v592 << 13) ^ 0x4C608000)) & 0xCD38C000);
  LODWORD(STACK[0x560]) = ((v592 << 10) ^ 0xE98C1000) - (STACK[0x5E4] & (2 * ((v592 << 10) ^ 0xE98C1000)));
  LODWORD(STACK[0x55C]) = ((v592 << 16) ^ 0x63040000) - ((2 * ((v592 << 16) ^ 0x63040000)) & 0x84F20000);
  LODWORD(STACK[0x574]) = ((v592 << 20) ^ 0x30400000) - ((2 * ((v592 << 20) ^ 0x30400000)) & 0xFEE00000);
  LODWORD(STACK[0x660]) = ((v592 << 14) ^ 0x98C10000) - ((2 * ((v592 << 14) ^ 0x98C10000)) & 0xA40000);
  LODWORD(STACK[0x668]) = ((v592 << 25) ^ 0x8000000) - ((2 * ((v592 << 25) ^ 0x8000000)) & 0x34000000);
  LODWORD(STACK[0x558]) = v592 << 23;
  LODWORD(STACK[0x538]) = ((v592 << 22) ^ 0xC1000000) - ((v592 << 23) & 0x4800000);
  LODWORD(STACK[0x628]) = v592 << 29;
  LODWORD(STACK[0x630]) = ((v592 << 28) ^ 0x40000000) - ((v592 << 29) & 0x20000000);
  LODWORD(STACK[0x534]) = ((v592 << 24) ^ 0x4000000) - ((v592 << 25) & 0xF4000000);
  LODWORD(STACK[0x540]) = ((v592 << 26) ^ 0x10000000) - ((2 * ((v592 << 26) ^ 0x10000000)) & 0xBFFFFFFF);
  LODWORD(STACK[0x554]) = v592 >> 6;
  v593 = (v592 >> 6) ^ (v592 >> 4) ^ 0x44142305;
  LODWORD(STACK[0x610]) = v593;
  LODWORD(STACK[0x550]) = ((v592 << 11) ^ 0xD3182000) - ((2 * ((v592 << 11) ^ 0xD3182000)) & 0x66EA6000);
  LODWORD(STACK[0x54C]) = ((v592 << 21) ^ 0x60800000) - ((2 * ((v592 << 21) ^ 0x60800000)) & 0x7D000000);
  v594 = v591 + 32205079;
  v595 = (v591 + 32205079) >> 18;
  LODWORD(STACK[0x624]) = v595;
  v596 = (v594 >> 25) ^ 0x7D657D4;
  v597 = ((v595 ^ (v594 >> 20) ^ 0x3F51)
        - 2 * ((v595 ^ (v594 >> 20) ^ 0x3F51) & 0x17BF ^ (v595 ^ (v594 >> 20)) & 0xC)
        + 131487667) ^ v596;
  LODWORD(STACK[0x600]) = v596;
  v598 = (v594 >> 22) ^ 0x62C38665;
  v599 = (v597 - ((2 * v597) & 0x45870ABC) + 1656980830) ^ v598;
  LODWORD(STACK[0x5C0]) = v598;
  v600 = v599 - ((2 * v599) & 0x4E2B253E);
  v601 = LODWORD(STACK[0x570]) ^ (v594 >> 21);
  v602 = HIWORD(v594) ^ 0xEDEC9806;
  LODWORD(STACK[0x5B4]) = v602;
  v603 = (v594 >> 19) ^ 0x2431A31F;
  LODWORD(STACK[0x5AC]) = v603;
  v604 = v603 ^ HIWORD(v594) ^ (((v600 + 655725215) ^ v601)
                              - ((2 * ((v600 + 655725215) ^ v601)) & 0x48637580)
                              + 607238848);
  v605 = (v594 >> 14) ^ 0x33BE9;
  v606 = (v605 + ((v594 >> 14) ^ 0xFFFC0AEC ^ v604) + 1) ^ ((v604 ^ 0xFFFF3105) + 1);
  v607 = (v592 >> 1) ^ (v594 >> 13) ^ ((v604 ^ 0xF5CBEDB8 ^ (v606 - 171239272 - ((2 * v606) & 0xEB964684) + 2730)) + v605);
  v608 = (v594 >> 12) ^ 0xA86EEA4F;
  LODWORD(STACK[0x588]) = v608;
  v609 = (v594 >> 11) ^ 0xBD0E7E8F;
  v610 = (((v594 >> 12) ^ 0x6777A9F7 ^ v607) - ((2 * ((v594 >> 12) ^ 0x6777A9F7 ^ v607)) & 0x7A2F4386) - 1122524733) ^ v609;
  v611 = (v592 >> 7) ^ 0x55FDB520;
  v612 = (v610 - ((2 * v610) & 0xA8C083CC) + 1415594470) ^ v611;
  LODWORD(STACK[0x59C]) = v611;
  v613 = v593 ^ (v612 - ((2 * v612) & 0x8E5F9512) + 1194314377);
  LODWORD(STACK[0x564]) = v613;
  LODWORD(STACK[0x570]) = ((4 * v613) ^ 0x33BE98C0) - ((2 * ((4 * v613) ^ 0x33BE98C0)) & 0x4442E190) - 1574866741;
  LODWORD(STACK[0x56C]) = (v613 >> 27) ^ (v607 >> 30);
  v614 = (v592 >> 10) ^ (v592 >> 8);
  LODWORD(STACK[0x608]) = v614;
  v615 = v614 ^ (v594 >> 17) ^ HIBYTE(v594) ^ (v592 >> 9) ^ (v592 >> 5);
  LODWORD(STACK[0x5A4]) = v594;
  v616 = (v594 >> 30) + 1524808656;
  LODWORD(STACK[0x5E4]) = v616;
  v617 = ((v615 ^ 0x6ED8D61) - 2 * ((v615 ^ 0x6ED8D61) & 0x5AE2BBD7 ^ v615 & 4) + 1524808659) ^ v616;
  v618 = LODWORD(STACK[0x5EC]) ^ (v594 >> 29);
  LODWORD(STACK[0x5EC]) = v618;
  v619 = (v617 - ((2 * v617) & 0x7E9BB886) + 1062067267) ^ v618;
  v620 = (v619 - ((2 * v619) & 0xFACAF66) + 131487667) ^ v596;
  v621 = (v620 - ((2 * v620) & 0xC5870ABC) + 1656980830) ^ v598;
  v622 = (v621 - ((2 * v621) & 0x4E2B253E) + 655725215) ^ v601;
  v623 = (v622 - ((2 * v622) & 0x48637580) + 607238848) ^ v603;
  v624 = (v623 - ((2 * v623) & 0xDBD8ADF8) - 303278340) ^ v602;
  v625 = (v594 >> 14) ^ 0xA611C8BB ^ (v624 - ((2 * v624) & 0x4C25E6A4) - 1508707502);
  v626 = (v625 - ((2 * v625) & 0x50C40BD2) - 1469970967) ^ v608;
  v627 = (v626 - ((2 * v626) & 0x7A2F4386) - 1122524733) ^ v609;
  v628 = v611 ^ LODWORD(STACK[0x554]) ^ (v627 - ((2 * v627) & 0xA8C083CC) + 1415594470);
  v629 = (v592 << 8) ^ (v592 << 15) ^ (v592 << 27) ^ LODWORD(STACK[0x558]) ^ (v592 << 25) ^ 0x61E10400;
  v630 = LODWORD(STACK[0x5A8]) - 1785376815;
  LODWORD(STACK[0x5A8]) = v630;
  v631 = (v629 - ((2 * v629) & 0x2B2A9FAA) - 1785376815) ^ v630;
  v632 = (v631 - ((2 * v631) & 0xD61A1EFE) + 1796018047) ^ LODWORD(STACK[0x680]);
  v633 = LODWORD(STACK[0x67C]) - 269026500;
  LODWORD(STACK[0x67C]) = v633;
  v634 = (v632 - ((2 * v632) & 0xDFEDF678) - 269026500) ^ v633;
  v635 = LODWORD(STACK[0x560]) - 2121554854;
  LODWORD(STACK[0x560]) = v635;
  v636 = (v634 - ((2 * v634) & 0x31748B4) - 2121554854) ^ v635;
  v637 = LODWORD(STACK[0x550]) + 863318343;
  LODWORD(STACK[0x548]) = v637;
  v638 = (v636 - ((2 * v636) & 0x66EA628E) + 863318343) ^ v637;
  v639 = LODWORD(STACK[0x584]) - 425954093;
  LODWORD(STACK[0x550]) = v639;
  v640 = (v638 - ((2 * v638) & 0xCD38E9A6) - 425954093) ^ v639;
  v641 = LODWORD(STACK[0x55C]) - 1032202257;
  LODWORD(STACK[0x55C]) = v641;
  v642 = (v640 - ((2 * v640) & 0x84F3AFDE) - 1032202257) ^ v641;
  v643 = ((v592 << 18) ^ 0x8C100000) - ((2 * ((v592 << 18) ^ 0x8C100000)) & 0x61680000) + 817188550;
  LODWORD(STACK[0x558]) = v643;
  v644 = (v642 - ((2 * v642) & 0x616A9D8C) + 817188550) ^ v643;
  v645 = LODWORD(STACK[0x574]) - 9199256;
  LODWORD(STACK[0x554]) = v645;
  v646 = (v644 - ((2 * v644) & 0xFEE742D0) - 9199256) ^ v645;
  v647 = LODWORD(STACK[0x54C]) - 1097570431;
  LODWORD(STACK[0x54C]) = v647;
  v648 = (v646 - ((2 * v646) & 0x7D28CF02) - 1097570431) ^ v647;
  v649 = LODWORD(STACK[0x538]) + 39544952;
  LODWORD(STACK[0x584]) = v649;
  v650 = (v648 - ((2 * v648) & 0x4B6D0F0) + 39544952) ^ v649;
  v651 = LODWORD(STACK[0x534]) + 2061864012;
  LODWORD(STACK[0x574]) = v651;
  v652 = (v650 - ((2 * v650) & 0xF5CB1898) + 2061864012) ^ v651;
  v653 = STACK[0x598];
  v654 = ((LODWORD(STACK[0x598]) << 7) ^ 0x790E4900) - ((2 * ((LODWORD(STACK[0x598]) << 7) ^ 0x790E4900)) & 0x74E7AA00);
  v655 = ((2 * LODWORD(STACK[0x598])) ^ 0xD1E43924) - ((2 * ((2 * LODWORD(STACK[0x598])) ^ 0xD1E43924)) & 0x38131F10);
  v656 = ((LODWORD(STACK[0x598]) << 10) ^ 0xC8724800) - ((2 * ((LODWORD(STACK[0x598]) << 10) ^ 0xC8724800)) & 0x5097000);
  v657 = LODWORD(STACK[0x5D0]) ^ (4 * v628) ^ (32 * v628) ^ (v628 << 11);
  LODWORD(STACK[0x538]) = v628 >> 21;
  v658 = v657 ^ (4 * (v628 >> 21)) ^ (32 * (v628 >> 21)) ^ (v628 >> 21 << 11) ^ (v652
                                                                               - ((2 * v652) & 0xBFDBBD86)
                                                                               - 538059069);
  v659 = LODWORD(STACK[0x540]) - 538059069;
  LODWORD(STACK[0x5D0]) = v659;
  v660 = ((v659 ^ 0xA2932D8C ^ v658) - 2 * ((v659 ^ 0xA2932D8C ^ v658) & 0x7DCD6155 ^ v658 & 0x10) + 2110611781) ^ LODWORD(STACK[0x620]);
  v661 = ((v660 ^ 0x9F993C1) - 2 * ((v660 ^ 0x9F993C1) & 0x6220F735 ^ v660 & 0x14) - 501156063) ^ LODWORD(STACK[0x638]);
  v662 = (v661 - ((2 * v661) & 0xCF7EEF48) - 406882396) ^ LODWORD(STACK[0x640]);
  v663 = (v662 - (STACK[0x61C] & (2 * v662)) - 738300207) ^ LODWORD(STACK[0x618]);
  v664 = (v663 - ((2 * v663) & 0xDC77208C) - 298086330) ^ LODWORD(STACK[0x644]);
  v665 = (v664 - ((2 * v664) & 0x865E7CC6) + 1127169635) ^ LODWORD(STACK[0x614]);
  v666 = (v665 - ((2 * v665) & 0x4E1C719A) + 655243469) ^ LODWORD(STACK[0x5B8]);
  v667 = (v666 - ((2 * v666) & 0x410F8134) - 1601716070) ^ LODWORD(STACK[0x648]);
  v668 = (v667 - ((2 * v667) & 0x80C09FE6) + 1080053747) ^ LODWORD(STACK[0x568]);
  v669 = (v668 - ((2 * v668) & 0x353E5DFE) + 446639871) ^ LODWORD(STACK[0x688]);
  v670 = (v669 - ((2 * v669) & 0x80DCC9A0) - 1066507056) ^ LODWORD(STACK[0x658]);
  v671 = (v670 - 2 * (v670 & STACK[0x634] ^ v669 & 2) + 1099833500) ^ LODWORD(STACK[0x6B4]);
  LODWORD(STACK[0x5BC]) ^= v628 ^ (((v671 - ((2 * v671) & 0x489E084E) + 609158183) ^ LODWORD(STACK[0x650]))
                                 - 2
                                 * (((v671 - ((2 * v671) & 0x489E084E) + 609158183) ^ LODWORD(STACK[0x650])) & 0x6261A1BD ^ (v671 - ((2 * v671) & 0x489E084E) + 609158183) & 0x18)
                                 - 496918107);
  v672 = STACK[0x5A0];
  v673 = (LODWORD(STACK[0x5A0]) >> 26) ^ (LODWORD(STACK[0x5A0]) >> 29);
  v674 = (LODWORD(STACK[0x5F0]) ^ v673 ^ 3) - 2 * ((LODWORD(STACK[0x5F0]) ^ v673 ^ 3) & 0x1F ^ v673 & 0x1C);
  v675 = (LODWORD(STACK[0x5A0]) >> 25) ^ 0xF6BEDE75 ^ (LODWORD(STACK[0x5A0]) >> 22);
  LODWORD(STACK[0x688]) = v675;
  v676 = (v674 - 155263421) ^ v675;
  HIDWORD(v391) = v676 ^ 0x2B709E5;
  LODWORD(v391) = v676 ^ 0x9FFFFFFF;
  v677 = v391 >> 27;
  HIDWORD(v391) = v677 ^ 0xFFFFFFF3;
  LODWORD(v391) = v677 ^ 0x56E13CA0;
  v678 = (v391 >> 5) - ((2 * (v391 >> 5)) & 0x8B6F6316) + 1169666443;
  v679 = ((v653 << 26) ^ 0x48000000) - ((2 * ((v653 << 26) ^ 0x48000000)) & 0x78000000);
  v680 = STACK[0x5B0];
  v681 = (LODWORD(STACK[0x5B0]) >> 3) ^ (v653 >> 8) ^ (((v653 >> 10) ^ (v672 >> 15) ^ 0x1A24EE)
                                                     - 2
                                                     * (((v653 >> 10) ^ (v672 >> 15) ^ 0x1A24EE) & 0x37B19B ^ ((v653 >> 10) ^ (v672 >> 15)) & 0x10)
                                                     + 1169666443) ^ 0x1EE6493 ^ v678;
  v682 = (v672 >> 19) ^ 0x82739D61;
  v683 = (v681 - ((2 * v681) & 0x4E739CE) - 2106352409) ^ v682;
  v684 = (v672 >> 18) ^ 0xD4D2BF4C;
  v685 = (v683 - ((2 * v683) & 0xA9A57882) - 724386751) ^ v684;
  v686 = HIWORD(v672) ^ 0x82ABCF68;
  LODWORD(STACK[0x658]) = v686;
  v687 = (v685 - ((2 * v685) & 0x55786B8) - 2102672548) ^ v686;
  LODWORD(STACK[0x6B4]) = v672 >> 12;
  v688 = (v672 >> 12) ^ 0x92DAFBC1 ^ (v687 - ((2 * v687) & 0x25B47114) - 1831192438);
  v689 = (v680 >> 7) ^ 0x6A2C509B;
  LODWORD(STACK[0x650]) = v689;
  v690 = (v688 - ((2 * v688) & 0xD46873E6) + 1781807603) ^ v689;
  v691 = (v680 >> 6) ^ (v653 >> 4) ^ 0x235B732F;
  LODWORD(STACK[0x648]) = v691;
  v692 = v691 ^ (v690 - ((2 * v690) & 0x46D743FC) + 594256382);
  v693 = (v692 >> 27) ^ (v678 >> 30) ^ (v692 >> 21);
  v694 = LODWORD(STACK[0x5E0]) ^ (4 * v653) ^ (8 * v653) ^ (v653 << 6) ^ (v653 << 17) ^ (v653 << 22) ^ (v653 << 24) ^ (v653 << 29) ^ (v655 - 1677095031) ^ (4 * v692) ^ (32 * v692) ^ (v692 << 11) ^ (4 * v693) ^ (32 * v693) ^ (v693 << 11);
  v695 = v654 - 1166813895;
  v696 = ((v694 ^ 0xA5ACEA28) - 2 * ((v694 ^ 0xA5ACEA28) & 0x3A73D53B ^ v694 & 2) - 1166813895) ^ (v654 - 1166813895);
  v697 = v656 + 42252572;
  v698 = (v696 - ((2 * v696) & 0x5097238) + 42252572) ^ (v656 + 42252572);
  v699 = ((v653 << 13) ^ 0x43924000) - ((2 * ((v653 << 13) ^ 0x43924000)) & 0xE759C000) + 1940709811;
  v700 = (v698 - ((2 * v698) & 0xE759C366) + 1940709811) ^ v699;
  v701 = v700 - ((2 * v700) & 0xA9A16486);
  v702 = ((v653 << 14) ^ 0x87248000) - ((2 * ((v653 << 14) ^ 0x87248000)) & 0xA9A10000) - 724520381;
  v703 = ((v701 - 724520381) ^ v702) - ((2 * ((v701 - 724520381) ^ v702)) & 0xE64C092C);
  v704 = ((v653 << 16) ^ 0x1C920000) - ((2 * ((v653 << 16) ^ 0x1C920000)) & 0xE64C0000) + 1931871382;
  v705 = ((v653 << 20) ^ 0xC9200000) - ((2 * ((v653 << 20) ^ 0xC9200000)) & 0x2EC00000) + 392758382;
  v706 = (((v703 + 1931871382) ^ v704) - ((2 * ((v703 + 1931871382) ^ v704)) & 0x2ED208DC) + 392758382) ^ v705;
  v707 = ((v653 << 25) ^ 0x24000000) - ((2 * ((v653 << 25) ^ 0x24000000)) & 0xCFFFFFFF) - 404388414;
  v708 = (v706 - ((2 * v706) & 0xCFCB0B84) - 404388414) ^ v707;
  v709 = ((v708 - ((2 * v708) & 0x7E401A9E) - 1088418481) ^ (v679 - 1088418481))
       - ((2 * ((v708 - ((2 * v708) & 0x7E401A9E) - 1088418481) ^ (v679 - 1088418481))) & 0xC7C42532);
  v710 = ((v653 << 28) ^ 0x20000000) - (((v653 << 28) ^ 0x20000000) >> 29 << 30) + 1675760281;
  v711 = v693 ^ v692 ^ (((v709 + 1675760281) ^ v710) - ((2 * ((v709 + 1675760281) ^ v710)) & 0x7250EFFC) + 958953470);
  v712 = (((v653 << 11) ^ (v653 << 12) ^ 0xB12DB000)
        - ((2 * ((v653 << 11) ^ (v653 << 12) ^ 0xB12DB000)) & 0x74E7A000)
        - 1166813895) ^ v695;
  v713 = (v712 - ((2 * v712) & 0x38131F12) - 1677095031) ^ LODWORD(STACK[0x5E0]);
  v714 = v699 ^ v697 ^ (v713 - ((2 * v713) & 0x5097238) + 42252572);
  v715 = ((v702 ^ 0x5883AC0F ^ v714) + (v702 ^ 0xD4D0B242)) ^ ((v714 ^ 0x8C531E4C) + 1);
  v716 = (v714 ^ 0x3B212B2E ^ (v715 - ((2 * v715) & 0x911B953A) + 1217251997)) + (v702 ^ 0xD4D0B243);
  v717 = (((v672 >> 21) ^ (v672 >> 20) ^ 0xA2) - ((2 * ((v672 >> 21) ^ (v672 >> 20) ^ 0xA2)) & 0x1C86) - 155263421) ^ LODWORD(STACK[0x688]);
  v718 = (v717 - ((2 * v717) & 0x4E739CE) - 2106352409) ^ v682;
  v719 = (v718 - ((2 * v718) & 0x29A57882) - 724386751) ^ v684;
  v720 = (v653 << 21) ^ (v680 << 31) ^ (v653 << 19) ^ (v653 << 18) ^ v716;
  v721 = ((v720 ^ 0x4980000) - 2 * (v720 & 0x7326049F ^ v716 & 9) + 1931871382) ^ v704;
  v722 = (v721 - ((2 * v721) & 0x2ED208DC) + 392758382) ^ v705;
  v723 = (v722 - ((2 * v722) & 0xCFCB0B84) - 404388414) ^ v707;
  v724 = (v723 - ((2 * v723) & 0x7E401A9E) - 1088418481) ^ (v679 - 1088418481);
  v725 = v724 - ((2 * v724) & 0xC7C42532) + 1675760281;
  v726 = (v672 >> 14) ^ (v672 >> 13) ^ (v672 >> 11) ^ (v680 >> 1) ^ LODWORD(STACK[0x658]) ^ (v719
                                                                                           - ((2 * v719) & 0x55786B8)
                                                                                           - 2102672548);
  v727 = (((v672 >> 12) ^ 0x61B4E96 ^ v726) - ((2 * ((v672 >> 12) ^ 0x61B4E96 ^ v726)) & 0xD46873E6) + 1781807603) ^ LODWORD(STACK[0x650]);
  v728 = LODWORD(STACK[0x648]) ^ (v727 - ((2 * v727) & 0x46D743FC) + 594256382);
  v729 = (v728 >> 27) ^ (v726 >> 30);
  v730 = STACK[0x5BC];
  v731 = LODWORD(STACK[0x5BC]) ^ LODWORD(STACK[0x538]);
  v732 = v729 ^ (v728 >> 21);
  v733 = LODWORD(STACK[0x5DC]) ^ v710 ^ (4 * v728) ^ (32 * v728) ^ (v728 << 11) ^ (4 * v732) ^ v725;
  v734 = ((LODWORD(STACK[0x5BC]) >> 30) | 0x4C10A0E4) ^ (LODWORD(STACK[0x5BC]) >> 29) ^ 0x2AC51166;
  LODWORD(STACK[0x620]) = v734;
  v733 ^= 8u;
  v735 = (32 * v732) ^ (v732 << 11) ^ 0xB2DF09B4 ^ v733;
  v736 = LODWORD(STACK[0x5CC]) ^ 0xC5385F97 ^ (v735 - 2 * (v735 & 0x45385F9D ^ v733 & 8) - 986161259);
  v737 = LODWORD(STACK[0x5D8]) ^ 0xA68D9711 ^ (v736 - ((2 * v736) & 0x889783D4) - 1001668118);
  v738 = v732 ^ v728 ^ (v737 - ((2 * v737) & 0xBC34AAD4) + 1578784106);
  v739 = (((v731 >> 3) << 31) | 0x40ABC00B) + (((v731 ^ 0x8855443) << 27) ^ 0x18000000);
  LODWORD(STACK[0x61C]) = v739;
  v740 = (((v731 ^ 0x8855443) << 13) ^ 0xE38C6000)
       - ((2 * (((v731 ^ 0x8855443) << 13) ^ 0xE38C6000)) & 0xB28F0000)
       - 649620150;
  LODWORD(STACK[0x658]) = v740;
  v741 = ((((v731 ^ 0x8855443) << 10) ^ 0x7C718C00)
        - ((2 * (((v731 ^ 0x8855443) << 10) ^ 0x7C718C00)) & 0xB28F2800)
        - 649620150) ^ v740;
  v742 = v741 - ((2 * v741) & 0x7658854A);
  v743 = 8 * (v731 ^ 0x8855443);
  LODWORD(STACK[0x644]) = v743;
  v744 = ((v731 ^ 0x8855443) << 7) ^ ((v731 ^ 0x8855443) << 8) ^ ((v731 ^ 0x8855443) << 15) ^ v743 ^ ((((v731 ^ 0x8855443) << 16) ^ 0x1C630000) - ((2 * (((v731 ^ 0x8855443) << 16) ^ 0x1C630000)) & 0x900E0000) - 939000836);
  v745 = (((v731 ^ 0x8855443) << 11) ^ 0xF8E31800)
       - ((2 * (((v731 ^ 0x8855443) << 11) ^ 0xF8E31800)) & 0x76588000)
       - 1154727259;
  LODWORD(STACK[0x648]) = v745;
  v746 = (((v731 ^ 0x8855443) << 18) ^ 0x718C0000)
       - ((2 * (((v731 ^ 0x8855443) << 18) ^ 0x718C0000)) & 0x90080000)
       - 939000836;
  LODWORD(STACK[0x650]) = v746;
  v747 = v744 ^ v746 ^ v745 ^ (v742 - 1154727259);
  v748 = (v731 << 24) ^ (v731 << 25) ^ (v731 << 20) ^ 0x125B3198 ^ v747;
  v749 = ((4 * (v731 ^ 0x8855443)) ^ 0xA77C718C)
       - ((2 * ((4 * (v731 ^ 0x8855443)) ^ 0xA77C718C)) & 0xD197E700)
       - 389287040;
  LODWORD(STACK[0x634]) = v749;
  v750 = (v748 - 2 * (v748 & 0x68CBF381 ^ v747 & 1) - 389287040) ^ v749;
  v751 = (((v731 ^ 0x8855443) << 21) ^ 0x8C600000) - ((v731 << 22) & 0xC5000000) - 494132396;
  LODWORD(STACK[0x640]) = v751;
  v752 = (v750 - ((2 * v750) & 0xC51846A8) - 494132396) ^ v751;
  v753 = (((v731 ^ 0x8855443) << 22) ^ 0x18C00000)
       - ((2 * (((v731 ^ 0x8855443) << 22) ^ 0x18C00000)) & 0x58800000)
       - 1404907472;
  LODWORD(STACK[0x638]) = v753;
  v754 = (v752 - ((2 * v752) & 0x5885A060) - 1404907472) ^ v753;
  v755 = (v730 >> 14) ^ (v730 >> 12) ^ HIBYTE(v730) ^ (v730 >> 25) ^ (v730 >> 22) ^ (v730 >> 17) ^ HIWORD(v730) ^ (v731 >> 7) ^ (v731 >> 8) ^ 0x12EECF6;
  LODWORD(STACK[0x5DC]) = v730 >> 21;
  v756 = (v730 >> 21) ^ 0xB0EC2ECD ^ (((v755 - ((2 * v755) & 0x4DAB630C) + 1725280646) ^ v734)
                                    - 2
                                    * (((v755 - ((2 * v755) & 0x4DAB630C) + 1725280646) ^ v734) & 0x30EC29CF ^ (v755 - ((2 * v755) & 0x4DAB630C) + 1725280646) & 8)
                                    - 1326700089);
  v757 = (v730 >> 19) ^ 0xE5120F34;
  LODWORD(STACK[0x5F0]) = v757;
  v758 = (v756 - ((2 * v756) & 0xCA24263E) - 451800289) ^ v757;
  v759 = (v730 >> 11) ^ 0x9F36EF9D;
  LODWORD(STACK[0x5E0]) = v759;
  v760 = (v758 - ((2 * v758) & 0x3E5589A8) - 1624587052) ^ v759;
  v761 = (v731 >> 10) ^ 0x97083F8E;
  LODWORD(STACK[0x5D8]) = v761;
  v762 = (v760 - 1758435044 + (~(2 * v760) | 0xD19F2DC7) + 1) ^ v761;
  v763 = (v731 >> 9) ^ 0x71AD128C;
  LODWORD(STACK[0x5CC]) = v763;
  v764 = (v762 - ((2 * v762) & 0xE3BB7F50) + 1910357928) ^ v763;
  v765 = (((v731 ^ 0x8855443) << 23) ^ 0x31800000)
       - ((2 * (((v731 ^ 0x8855443) << 23) ^ 0x31800000)) & 0x20000000)
       + 272343748;
  LODWORD(STACK[0x618]) = v765;
  v766 = (v754 - ((2 * v754) & 0x20774588) + 272343748) ^ v765;
  v767 = (((v731 ^ 0x8855443) << 26) ^ 0x8C000000)
       - ((2 * (((v731 ^ 0x8855443) << 26) ^ 0x8C000000)) & 0x70000000)
       + 983920394;
  LODWORD(STACK[0x614]) = v767;
  v768 = (v766 - ((2 * v766) & 0x754ADE14) + 983920394) ^ v767;
  v769 = v768 - ((2 * v768) & 0x81578016);
  v770 = LODWORD(STACK[0x56C]) ^ (LODWORD(STACK[0x564]) >> 21);
  v771 = LODWORD(STACK[0x5D4]) ^ (v592 << 19) ^ (v592 << 12) ^ (v592 << 31) ^ LODWORD(STACK[0x564]) ^ (32 * LODWORD(STACK[0x564])) ^ (LODWORD(STACK[0x564]) << 11) ^ (4 * v770) ^ (32 * v770) ^ (v770 << 11) ^ LODWORD(STACK[0x570]) ^ v739 ^ (v769 + 1084997643);
  v772 = ((v731 ^ 0x8855443) >> 6) ^ ((v731 ^ 0x8855443) >> 5);
  LODWORD(STACK[0x5D4]) = v772;
  v773 = v772 ^ (v764 - ((2 * v764) & 0x71CAB828) + 954555412);
  v774 = v771 ^ (4 * v773) ^ (32 * v773) ^ (v773 << 11) ^ (4 * (v773 >> 21)) ^ (32 * (v773 >> 21)) ^ (v773 >> 21 << 11);
  v775 = ((v774 ^ 0xF2E17CE1) - 2 * ((v774 ^ 0xF2E17CE1) & 0x3375314F ^ v774 & 8) + 863318343) ^ LODWORD(STACK[0x548]);
  v776 = (v775 - ((2 * v775) & 0xDFEDF678) - 269026500) ^ LODWORD(STACK[0x67C]);
  v777 = (v776 - ((2 * v776) & 0x65988E8) + 53265524) ^ v592 ^ 0xCDD6A770;
  v778 = STACK[0x560];
  v779 = (v777 - ((2 * v777) & 0x31748B4) - 2121554854) ^ LODWORD(STACK[0x560]);
  v780 = STACK[0x550];
  v781 = (v779 - ((2 * v779) & 0xCD38E9A6) - 425954093) ^ LODWORD(STACK[0x550]);
  v782 = LODWORD(STACK[0x660]) - 2142097466;
  v783 = (v781 - ((2 * v781) & 0xA45F8C) - 2142097466) ^ v782;
  v784 = STACK[0x55C];
  v785 = (v783 - ((2 * v783) & 0x84F3AFDE) - 1032202257) ^ LODWORD(STACK[0x55C]);
  v786 = (v785 - ((2 * v785) & 0x616A9D8C) + 817188550) ^ LODWORD(STACK[0x558]);
  v787 = STACK[0x554];
  v788 = (v786 - ((2 * v786) & 0xFEE742D0) - 9199256) ^ LODWORD(STACK[0x554]);
  v789 = (v788 - ((2 * v788) & 0x7D28CF02) - 1097570431) ^ LODWORD(STACK[0x54C]);
  v790 = STACK[0x5E8];
  v791 = LODWORD(STACK[0x668]) - 1689009985;
  v792 = (v789 - (STACK[0x5E8] & (2 * v789)) - 1689009985) ^ v791;
  v793 = STACK[0x5D0];
  v794 = (v792 - ((2 * v792) & 0xBFDBBD86) - 538059069) ^ LODWORD(STACK[0x5D0]);
  v795 = v794 - ((2 * v794) & 0x27B3AA48);
  v796 = LODWORD(STACK[0x630]) + 333042980;
  v797 = v770 ^ 0x6EF01DDD ^ (((v795 + 333042980) ^ v796) - ((2 * ((v795 + 333042980) ^ v796)) & 0xDDE03B74) + 1861230010);
  v798 = (v773 >> 21) ^ v773 ^ (v797 - ((2 * v797) & 0x8E4C5706) + 1193683843);
  v799 = STACK[0x7AC];
  v800 = v798 ^ (-1673081951 * LODWORD(STACK[0x7A8]) - 1663319554);
  v801 = STACK[0x578];
  *(_BYTE *)(v801 + 1632) = (HIBYTE(v800) ^ 0x7B) - ((2 * (HIBYTE(v800) ^ 0x7B)) & 0x6A) - 75;
  v802 = v738 ^ (-1673081951 * LODWORD(STACK[0x768]) - 1663319554);
  *(_BYTE *)(v801 + 1370) = BYTE2(v802) ^ 0x9C;
  *(_BYTE *)(v801 + 1537) = (BYTE1(v800) ^ 0xF2) - ((2 * (BYTE1(v800) ^ 0xF2)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1275) = v802 ^ 0x9E;
  v803 = STACK[0x6E8];
  LODWORD(STACK[0x630]) = STACK[0x6EC];
  v804 = v711 ^ (-1673081951 * v803 - 1663319554);
  LODWORD(STACK[0x688]) = v804;
  v805 = v711 ^ (-1673081951 * LODWORD(STACK[0x76C]) - 1663319554);
  *(_BYTE *)(STACK[0x6D8] + (v804 & 0x20A ^ 8 | v804 & 0x20A ^ 0x202u)) = HIBYTE(v805) ^ 0x36;
  v806 = LODWORD(STACK[0x608]) ^ (LODWORD(STACK[0x5A4]) >> 26) ^ LODWORD(STACK[0x624]) ^ (((-32205080 - LODWORD(STACK[0x670])) >> 31) | 0x19223B16) ^ (v592 >> 3) ^ LODWORD(STACK[0x588]) ^ (((LODWORD(STACK[0x5A4]) >> 15) ^ 0x19DF4) - ((2 * ((LODWORD(STACK[0x5A4]) >> 15) ^ 0x19DF4)) & 0xBD2) - 1469970967);
  v807 = (((v806 - ((2 * v806) & 0x35C577A6) + 1524808659) ^ LODWORD(STACK[0x5E4]))
        - 2
        * (((v806 - ((2 * v806) & 0x35C577A6) + 1524808659) ^ LODWORD(STACK[0x5E4])) & STACK[0x5F8] ^ (v806 - ((2 * v806) & 0x35C577A6) + 1524808659) & 8)
        + 1062067267) ^ LODWORD(STACK[0x5EC]);
  v808 = (v807 - ((2 * v807) & 0xC5870ABC) + 1656980830) ^ LODWORD(STACK[0x5C0]);
  v809 = (v808 - ((2 * v808) & 0xFACAF66) + 131487667) ^ LODWORD(STACK[0x600]);
  v810 = (v809 - ((2 * v809) & 0x48637580) + 607238848) ^ LODWORD(STACK[0x5AC]);
  v811 = (v810 - ((2 * v810) & 0xDBD8ADF8) - 303278340) ^ LODWORD(STACK[0x5B4]);
  v812 = (v811 - ((2 * v811) & 0xA8C083CC) + 1415594470) ^ LODWORD(STACK[0x59C]);
  v813 = LODWORD(STACK[0x610]) ^ (v812 - ((2 * v812) & 0x8E5F9512) + 1194314377);
  v814 = (v813 >> 21) ^ (v813 >> 27);
  v815 = (2 * v592) ^ 0xB61CE490 ^ (v592 << 6) ^ (v592 << 17) ^ LODWORD(STACK[0x628]) ^ (4 * v813) ^ (32 * v813) ^ ((v813 ^ v814) << 11) ^ (32 * v814) ^ (4 * v814);
  v816 = (v815 - (STACK[0x5FC] & (2 * v815)) + 53265524) ^ v592 ^ 0xCDD6A770;
  v817 = (v816 - ((2 * v816) & 0xD61A1EFE) + 1796018047) ^ LODWORD(STACK[0x680]);
  v818 = (v817 - ((2 * v817) & 0x2B2A9FA2) - 1785376815) ^ LODWORD(STACK[0x5A8]);
  v819 = (v818 - ((2 * v818) & 0xDFEDF678) - 269026500) ^ LODWORD(STACK[0x67C]);
  v820 = (v819 - ((2 * v819) & 0x31748B4) - 2121554854) ^ v778;
  v821 = (v820 - ((2 * v820) & 0xCD38E9A6) - 425954093) ^ v780;
  v822 = (v821 - ((2 * v821) & 0xA45F8C) - 2142097466) ^ v782;
  v823 = (v822 - ((2 * v822) & 0x84F3AFDE) - 1032202257) ^ v784;
  v824 = (v823 - ((2 * v823) & 0xFEE742D0) - 9199256) ^ v787;
  v825 = (v824 - ((2 * v824) & 0x4B6D0F0) + 39544952) ^ LODWORD(STACK[0x584]);
  v826 = (v825 - ((2 * v825) & 0xF5CB1898) + 2061864012) ^ LODWORD(STACK[0x574]);
  v827 = (v826 - (v790 & (2 * v826)) - 1689009985) ^ v791;
  v828 = (v827 - ((2 * v827) & 0xBFDBBD86) - 538059069) ^ v793;
  v829 = (v828 - ((2 * v828) & 0x27B3AA48) + 333042980) ^ v796;
  v830 = v813 ^ 0xEF344476 ^ (v829 - ((2 * v829) & 0xC7B7C48C) - 472128954);
  v831 = (v731 ^ 0xE15A4820) >> (((STACK[0x6B4] & 0x1E ^ 0x14) + (STACK[0x6B4] & 0x1E ^ 0xA)) & 0x2E);
  v832 = v831 - ((2 * v831) & 0xED7C29BE) + 1992168671;
  v833 = (v730 >> 27) ^ (v730 >> 28) ^ (v730 >> 18) ^ (v730 >> 15) ^ ((v731 ^ 0x8855443) >> 2) ^ ((v731 ^ 0x8855443) >> 4) ^ (((v730 >> 13) ^ 0x70AD2) - ((2 * ((v730 >> 13) ^ 0x70AD2)) & 0xC29BE) + 1992168671) ^ v832;
  v834 = ((v833 ^ LODWORD(STACK[0x5DC]) ^ 0x34EBCB24)
        + 1725280646
        - 2 * ((v833 ^ LODWORD(STACK[0x5DC]) ^ 0x34EBCB24) & 0x66D5B196 ^ (v833 ^ LODWORD(STACK[0x5DC])) & 0x10)) ^ LODWORD(STACK[0x620]);
  v835 = (v834 - ((2 * v834) & 0xCA24263E) - 451800289) ^ LODWORD(STACK[0x5F0]);
  v836 = (v835 - ((2 * v835) & 0x3E5589A8) - 1624587052) ^ LODWORD(STACK[0x5E0]);
  v837 = (v836 - ((2 * v836) & 0x2E60D238) - 1758435044) ^ LODWORD(STACK[0x5D8]);
  v838 = (v837 - ((2 * v837) & 0xE3BB7F50) + 1910357928) ^ LODWORD(STACK[0x5CC]);
  v839 = LODWORD(STACK[0x5D4]) ^ 0x6AD32BB5 ^ (v838 - ((2 * v838) & 0xDB3BA6AC) + 1839059798);
  v840 = v814 ^ (v830 - ((2 * v830) & 0xF7EC0424) - 67763694) ^ (v731 << 30) ^ (16 * (v731 ^ 0x8855443)) ^ (32 * (v731 ^ 0x8855443)) ^ ((v731 ^ 0x8855443) << 14) ^ ((v731 ^ 0x8855443) << 17) ^ ((v731 ^ 0x8855443) << 19) ^ ((v731 ^ 0x8855443) << 28) ^ LODWORD(STACK[0x644]) ^ (4 * v839) ^ (32 * v839) ^ 0x45A814D8;
  v841 = (v840 - ((2 * v840) & 0xD197E700) - 389287040) ^ LODWORD(STACK[0x634]);
  v842 = (v841 - ((2 * v841) & 0x7658854A) - 1154727259) ^ LODWORD(STACK[0x648]);
  v843 = (v842 - ((2 * v842) & 0xB28F2A94) - 649620150) ^ LODWORD(STACK[0x658]);
  v844 = (v843 - ((2 * v843) & 0x900FF7F8) - 939000836) ^ LODWORD(STACK[0x650]);
  v845 = (v844 - ((2 * v844) & 0xC51846A8) - 494132396) ^ LODWORD(STACK[0x640]);
  v846 = (v845 - ((2 * v845) & 0x5885A060) - 1404907472) ^ LODWORD(STACK[0x638]);
  v847 = (v846 - ((2 * v846) & 0x20774588) + 272343748) ^ LODWORD(STACK[0x618]);
  v848 = (v847 - ((2 * v847) & 0x754ADE14) + 983920394) ^ LODWORD(STACK[0x614]);
  v849 = v839 ^ LODWORD(STACK[0x61C]) ^ (v848 - ((2 * v848) & 0x81578016) + 1084997643);
  v850 = (v833 >> 27) ^ (v832 >> 30) ^ (v839 >> 21);
  v851 = (4 * v850) ^ ((v850 ^ v839) << 11) ^ 0x3BE35868 ^ ((v850 ^ 0x1A) << ((v849 & 5 ^ 4) + (v849 & 5 ^ 1)));
  v852 = v849 ^ v850 ^ (v851 - ((2 * v851) & 0x7AB77E2A) + 1029422869);
  *(_BYTE *)(v801 + 2063) = (BYTE2(v800) ^ 0x2A) - ((2 * (BYTE2(v800) ^ 0x2A)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1801) = BYTE1(v802) ^ 0x7D;
  *(_BYTE *)(v801 + 1896) = HIBYTE(v802) ^ 0x51;
  v853 = v738 ^ (-1673081951 * LODWORD(STACK[0x744]) - 1663319554);
  LODWORD(STACK[0x680]) = v853;
  *(_BYTE *)(v801 + 1968) = v800 ^ 0x50;
  v854 = v852 ^ (-1673081951 * v799 - 1663319554);
  *(_BYTE *)(v801 + 1442) = (HIBYTE(v854) ^ 0x3E) - ((2 * (HIBYTE(v854) ^ 0x3E)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1347) = (BYTE1(v854) ^ 0xC3) - ((2 * (BYTE1(v854) ^ 0xC3)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1873) = (BYTE2(v854) ^ 0xFC) - 2 * ((BYTE2(v854) ^ 0xFC) & 0x37 ^ BYTE2(v854) & 2) - 75;
  LOBYTE(v849) = ((((2 * v853) ^ 0xD1) + (v853 ^ 0x97)) | v853 ^ 0x9F) & 0xA5;
  *(_BYTE *)(v801 + 1611) = BYTE1(v805) ^ 0x5F;
  *(_BYTE *)(v801 + 2137) = (((8 * v849) | (4 * v849)) ^ BYTE2(v805) ^ 0xA7)
                          - ((2 * (((8 * v849) | (4 * v849)) ^ BYTE2(v805) ^ 0xA7)) & 0x6A)
                          - 75;
  *(_BYTE *)(v801 + 2042) = v805 ^ 0xB;
  v855 = STACK[0x7B4];
  v856 = v798 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7B0]));
  *(_BYTE *)(v801 + 1778) = v854 ^ 0xCB;
  v857 = STACK[0x774];
  v858 = v738 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x770]));
  *(_BYTE *)(v801 + 1516) = HIBYTE(v858) ^ 0x51;
  *(_BYTE *)(v801 + 1947) = BYTE2(v858) ^ 0x9C;
  *(_BYTE *)(v801 + 1683) = (BYTE2(v856) ^ 0x2A) - ((2 * (BYTE2(v856) ^ 0x2A)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1252) = (HIBYTE(v856) ^ 0x7B) + (~(2 * (HIBYTE(v856) ^ 0x7B)) | 0x95) - 74;
  *(_BYTE *)(v801 + 2114) = (BYTE1(v856) ^ 0xF2) - ((2 * (BYTE1(v856) ^ 0xF2)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1421) = BYTE1(v858) ^ 0x7D;
  *(_BYTE *)(v801 + 1852) = v858 ^ 0x9E;
  v859 = v852 ^ (-1663319554 - 1673081951 * v855);
  *(_BYTE *)(v801 + 1588) = v856 ^ 0x50;
  *(_BYTE *)(v801 + 2019) = (HIBYTE(v859) ^ 0x3E) - ((2 * (HIBYTE(v859) ^ 0x3E)) & 0x6A) - 75;
  v860 = v711 ^ (-1663319554 - 1673081951 * v857);
  *(_BYTE *)(v801 + 1326) = HIBYTE(v860) ^ 0x36;
  *(_BYTE *)(v801 + 1757) = BYTE2(v860) ^ 0xAE;
  v861 = STACK[0x7BC];
  v862 = v798 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7B8]));
  *(_BYTE *)(v801 + 1493) = (BYTE2(v859) ^ 0xFC) - 2 * ((BYTE2(v859) ^ 0xFC) & 0x37 ^ BYTE2(v859) & 2) - 75;
  *(_BYTE *)(v801 + 1924) = (BYTE1(v859) ^ 0xC3) - ((2 * (BYTE1(v859) ^ 0xC3)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1231) = BYTE1(v860) ^ 0x5F;
  *(_BYTE *)(v801 + 1662) = v860 ^ 0xB;
  v863 = STACK[0x77C];
  v864 = v738 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x778]));
  *(_BYTE *)(v801 + 1567) = BYTE2(v864) ^ 0x9C;
  *(_BYTE *)(v801 + 1829) = (HIBYTE(v862) ^ 0x7B) + (~(2 * (HIBYTE(v862) ^ 0x7B)) | 0x95) - 74;
  *(_BYTE *)(v801 + 2093) = HIBYTE(v864) ^ 0x51;
  *(_BYTE *)(v801 + 1472) = v864 ^ 0x9E;
  *(_BYTE *)(v801 + 1398) = v859 ^ 0xCB;
  *(_BYTE *)(v801 + 1208) = v862 ^ 0x50;
  v865 = v852;
  v866 = v852 ^ (-1663319554 - 1673081951 * v861);
  *(_BYTE *)(v801 + 1303) = (BYTE2(v862) ^ 0x2A) - ((2 * (BYTE2(v862) ^ 0x2A)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1639) = (HIBYTE(v866) ^ 0x3E) - ((2 * (HIBYTE(v866) ^ 0x3E)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1998) = BYTE1(v864) ^ 0x7D;
  *(_BYTE *)(v801 + 1734) = (BYTE1(v862) ^ 0xF2) - ((2 * (BYTE1(v862) ^ 0xF2)) & 0x6A) - 75;
  v867 = v711 ^ (-1673081951 * v863 - 1663319554);
  *(_BYTE *)(v801 + 1903) = HIBYTE(v867) ^ 0x36;
  v868 = STACK[0x784];
  v869 = v738 ^ (-1673081951 * LODWORD(STACK[0x780]) - 1663319554);
  v870 = STACK[0x730];
  LODWORD(STACK[0x668]) = STACK[0x734];
  v871 = v738 ^ (-1673081951 * v870 - 1663319554);
  LODWORD(STACK[0x67C]) = v871;
  v872 = v738;
  v873 = (((v871 & 0x5F ^ 0x17 | v871 & 0x3C3EC65F ^ 0x48) & (v869 & 0x3E7EFE7F ^ 0x68 | v869 & 0x7F ^ 0x17)) + 93) ^ HIWORD(v867) ^ 0xFFFFFFA7;
  v874 = (_BYTE *)v801;
  *(_BYTE *)(v801 + 1377) = v873 - ((2 * v873) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1808) = BYTE1(v867) ^ 0x5F;
  *(_BYTE *)(v801 + 1544) = (BYTE1(v866) ^ 0xC3) - ((2 * (BYTE1(v866) ^ 0xC3)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1713) = HIBYTE(v869) ^ 0x51;
  v875 = STACK[0x7C4];
  v876 = v798 ^ (-1673081951 * LODWORD(STACK[0x7C0]) - 1663319554);
  *(_BYTE *)(v801 + 2070) = (BYTE2(v866) ^ 0xFC) - 2 * ((BYTE2(v866) ^ 0xFC) & 0x37 ^ BYTE2(v866) & 2) - 75;
  *(_BYTE *)(v801 + 1282) = v867 ^ 0xB;
  *(_BYTE *)(v801 + 1975) = v866 ^ 0xCB;
  *(_BYTE *)(v801 + 1618) = BYTE1(v869) ^ 0x7D;
  *(_BYTE *)(v801 + 1449) = (HIBYTE(v876) ^ 0x7B) - ((2 * (HIBYTE(v876) ^ 0x7B)) & 0x6A) - 75;
  v877 = v711 ^ (-1663319554 - 1673081951 * v868);
  *(_BYTE *)(v801 + 1523) = HIBYTE(v877) ^ 0x36;
  *(_BYTE *)(v801 + 1354) = (BYTE1(v876) ^ 0xF2) - ((2 * (BYTE1(v876) ^ 0xF2)) & 0x6A) - 75;
  v878 = v852 ^ (-1663319554 - 1673081951 * v875);
  *(_BYTE *)(v801 + 1187) = BYTE2(v869) ^ 0x9C;
  *(_BYTE *)(v801 + 1880) = (BYTE2(v876) ^ 0x2A) - ((2 * (BYTE2(v876) ^ 0x2A)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1785) = v876 ^ 0x50;
  *(_BYTE *)(v801 + 2049) = v869 ^ 0x9E;
  *(_BYTE *)(v801 + 1690) = (BYTE2(v878) ^ 0xFC) - ((2 * (BYTE2(v878) ^ 0xFC)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1259) = (HIBYTE(v878) ^ 0x3E) - ((2 * (HIBYTE(v878) ^ 0x3E)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1428) = BYTE1(v877) ^ 0x5F;
  *(_BYTE *)(v801 + 1954) = BYTE2(v877) ^ 0xAE;
  *(_BYTE *)(v801 + 2121) = (BYTE1(v878) ^ 0xC3) - ((2 * (BYTE1(v878) ^ 0xC3)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1859) = v877 ^ 0xB;
  v879 = STACK[0x7CC];
  v880 = v798 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7C8]));
  v881 = v738 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x788]));
  *(_BYTE *)(v801 + 1333) = HIBYTE(v881) ^ 0x51;
  *(_BYTE *)(v801 + 1500) = (BYTE2(v880) ^ 0x2A) - ((2 * (BYTE2(v880) ^ 0x2A)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1595) = v878 ^ 0xCB;
  v882 = STACK[0x7E0];
  LODWORD(STACK[0x660]) = STACK[0x7E4];
  v883 = v798 ^ (-1673081951 * v882 - 1663319554);
  LODWORD(STACK[0x670]) = v883;
  *(_BYTE *)(v801 + 2026) = (HIBYTE(v880) ^ 0x7B) - ((2 * (HIBYTE(v880) ^ 0x7B)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1764) = BYTE2(v881) ^ 0x9C;
  *(_BYTE *)(v801 + 1238) = BYTE1(v881) ^ 0x7D;
  v884 = STACK[0x6D8];
  *(_BYTE *)(v884 + (((v883 & 0x8C2EB ^ 0x8C2E1) + (v883 & 0x8C2EB ^ 0xAu)) & 0x1007FBLL)) = (BYTE1(v880) ^ 0xF2)
                                                                                           - ((2 * (BYTE1(v880) ^ 0xF2)) & 0x6A)
                                                                                           - 75;
  v885 = v865 ^ (-1673081951 * v879 - 1663319554);
  *(_BYTE *)(v801 + 1215) = v885 ^ 0xCB;
  v886 = v711 ^ (-1673081951 * LODWORD(STACK[0x630]) - 1663319554);
  LOWORD(v787) = v886;
  LODWORD(STACK[0x658]) = v886;
  LOBYTE(v879) = (v886 & 0xC8 ^ 0xC8) + (v886 & 0xC8);
  *(_BYTE *)(v801 + 1310) = (BYTE2(v885) ^ 0xFC) - 2 * ((BYTE2(v885) ^ 0xFC) & 0x37 ^ BYTE2(v885) & 2) - 75;
  v887 = v872 ^ (-1673081951 * LODWORD(STACK[0x790]) - 1663319554);
  *(_BYTE *)(v884 + (v879 & 0xF8)) = BYTE2(v887) ^ 0x9C;
  *(_BYTE *)(v801 + 1405) = v880 ^ 0x50;
  *(_BYTE *)(v801 + 1669) = v881 ^ 0x9E;
  *(_BYTE *)(v801 + 1836) = (HIBYTE(v885) ^ 0x3E) - ((2 * (HIBYTE(v885) ^ 0x3E)) & 0x6A) - 75;
  v888 = STACK[0x7D4];
  v889 = v798 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7D0]));
  LODWORD(STACK[0x648]) = v885;
  *(_BYTE *)(v801 + 1741) = (BYTE1(v885) ^ 0xC3) - ((2 * (BYTE1(v885) ^ 0xC3)) & 0x6A) - 75;
  v890 = v711 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x78C]));
  *(_BYTE *)(v801 + 1574) = BYTE2(v890) ^ 0xAE;
  *(_BYTE *)(v801 + 1479) = v890 ^ 0xB;
  *(_BYTE *)(v801 + 1910) = HIBYTE(v887) ^ 0x51;
  *(_BYTE *)(v801 + 1646) = (HIBYTE(v889) ^ 0x7B) - ((2 * (HIBYTE(v889) ^ 0x7B)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1815) = BYTE1(v887) ^ 0x7D;
  *(_BYTE *)(v801 + 1289) = v887 ^ 0x9E;
  *(_BYTE *)(v801 + 1551) = (BYTE1(v889) ^ 0xF2) - 2 * ((BYTE1(v889) ^ 0xF2) & 0x3D ^ BYTE1(v889) & 8) - 75;
  *(_BYTE *)(v884 + (v798 & 0x31E ^ 0x204 | v798 & 0x31E ^ 0x11A)) = v889 ^ 0x50;
  STACK[0x3E8] = 0;
  *(_BYTE *)(v801 + 2005) = BYTE1(v890) ^ 0x5F;
  *(_BYTE *)(v801 + 2100) = HIBYTE(v890) ^ 0x36;
  *(_BYTE *)(v801 + 2077) = (BYTE2(v889) ^ 0x2A) - ((2 * (BYTE2(v889) ^ 0x2A)) & 0x6A) - 75;
  LODWORD(STACK[0x640]) = v865;
  v891 = v865 ^ (-1673081951 * v888 - 1663319554);
  *(_BYTE *)(v801 + 1456) = (HIBYTE(v891) ^ 0x3E) - ((2 * (HIBYTE(v891) ^ 0x3E)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1361) = (BYTE1(v891) ^ 0xC3) - ((2 * (BYTE1(v891) ^ 0xC3)) & 0x6A) - 75;
  v892 = -1673081951 * LODWORD(STACK[0x794]) - 1663319554;
  LODWORD(STACK[0x5B8]) = v711;
  v893 = v711 ^ v892;
  *(_BYTE *)(v801 + 1720) = HIBYTE(v893) ^ 0x36;
  *(_BYTE *)(v801 + 1194) = BYTE2(v893) ^ 0xAE;
  *(_BYTE *)(v801 + 1792) = v891 ^ 0xCB;
  *(_BYTE *)(v801 + 2056) = v893 ^ 0xB;
  *(_BYTE *)(v801 + 1625) = BYTE1(v893) ^ 0x5F;
  v894 = STACK[0x7DC];
  v895 = v798 ^ (-1673081951 * LODWORD(STACK[0x7D8]) - 1663319554);
  *(_BYTE *)(v801 + 1887) = (BYTE2(v891) ^ 0xFC) - 2 * ((BYTE2(v891) ^ 0xFC) & 0x37 ^ BYTE2(v891) & 2) - 75;
  v896 = v872 ^ (-1673081951 * LODWORD(STACK[0x798]) - 1663319554);
  *(_BYTE *)(v801 + 1961) = BYTE2(v896) ^ 0x9C;
  *(_BYTE *)(v801 + 2128) = (BYTE1(v895) ^ 0xF2) - ((2 * (BYTE1(v895) ^ 0xF2)) & 0x6A) - 75;
  *(_BYTE *)(v801 + 1530) = HIBYTE(v896) ^ 0x51;
  *(_BYTE *)(v801 + 1866) = v896 ^ 0x9E;
  LODWORD(v801) = (v895 ^ 0x7B2AF2E5u) >> (((((HIBYTE(v896) ^ 0x58)
                                            - 2 * ((HIBYTE(v896) ^ 0x58) & 0x17 ^ HIBYTE(v896) & 2)
                                            + 53) ^ HIBYTE(v896) ^ 0x51) & 0x3E ^ 0xFD)
                                         + 79);
  v874[1697] = v801 - ((2 * v801) & 0x6A) - 75;
  v874[1435] = BYTE1(v896) ^ 0x7D;
  v874[1602] = v895 ^ 0x50;
  v897 = v865 ^ (-1673081951 * v894 - 1663319554);
  v874[1266] = (HIBYTE(v895) ^ 0x7B) - ((2 * (HIBYTE(v895) ^ 0x7B)) & 0x6A) - 75;
  v874[1507] = (BYTE2(v897) ^ 0xFC) - ((2 * (BYTE2(v897) ^ 0xFC)) & 0x6A) - 75;
  v898 = v711 ^ (-1673081951 * LODWORD(STACK[0x79C]) - 1663319554);
  v899 = ((v885 & 0xBC ^ 0x80) + (v885 & 0xBC ^ 0x3C)) ^ HIBYTE(v898) ^ 0x3F;
  LODWORD(STACK[0x644]) = v897;
  v874[1340] = v899 - ((2 * v899) & 0x6A) - 75;
  v874[1771] = BYTE2(v898) ^ 0xAE;
  v874[1245] = BYTE1(v898) ^ 0x5F;
  v874[2033] = (HIBYTE(v897) ^ 0x3E) - ((2 * (HIBYTE(v897) ^ 0x3E)) & 0x6A) - 75;
  *(_BYTE *)(v884 + (v787 & 0x2F2 ^ 0x202u) + (unint64_t)(v787 & 0x2F2 ^ 0xF0u)) = (BYTE1(v897) ^ 0xC3)
                                                                                        - ((2 * (BYTE1(v897) ^ 0xC3)) & 0x6A)
                                                                                        - 75;
  v900 = (LODWORD(STACK[0x6B8]) + 2146526454) & 0x800E97FE;
  LODWORD(STACK[0x6B8]) = v900;
  LODWORD(STACK[0x6B4]) = (v900 ^ 0x7F3DFFE7) + LODWORD(STACK[0x594]);
  LODWORD(STACK[0x650]) = LODWORD(STACK[0x58C]) + (STACK[0x590] & 0x71FFFFF4);
  v901 = STACK[0x70C];
  LODWORD(STACK[0x634]) = (-1673081951 * LODWORD(STACK[0x708]) - 1663319554) ^ 0x5C809631;
  v902 = -1673081951 * LODWORD(STACK[0x728]) - ((948803394 * LODWORD(STACK[0x728]) + 968328188) & 0xC223F3E8);
  LODWORD(v884) = (-1673081951 * LODWORD(STACK[0x748]) - 1663319554) ^ 0x1956A7AA;
  v903 = (-1673081951 * LODWORD(STACK[0x74C]) - 1663319554) ^ 0xCF307C7D;
  v904 = -1673081951 * LODWORD(STACK[0x72C]) - ((948803394 * LODWORD(STACK[0x72C]) + 968328188) & 0xC223F3E8);
  v905 = STACK[0x6F4];
  LODWORD(v801) = -1673081951 * LODWORD(STACK[0x6F0]) - ((948803394 * LODWORD(STACK[0x6F0]) + 968328188) & 0x3CAD46B6);
  LODWORD(STACK[0x628]) = (-1673081951 * v901 - 1663319554) ^ 0x8AE64DE6;
  LODWORD(STACK[0x624]) = (-1673081951 * v905 - 1663319554) ^ 0xF62B73CC;
  v906 = STACK[0x714];
  LODWORD(STACK[0x620]) = (((948803394 * LODWORD(STACK[0x710])) & 0x39B783FC)
                         + ((-1673081951 * LODWORD(STACK[0x710])) ^ 0x9CDBC1FE)) ^ 0x9F441B02;
  LODWORD(STACK[0x630]) = (-1673081951 * v906 - 1663319554) ^ 0x6928A330;
  v907 = (-1673081951 * LODWORD(STACK[0x750]) - 1663319554) ^ 0xDA922A99;
  v908 = (-1673081951 * LODWORD(STACK[0x668]) - 1663319554) ^ 0x91195159;
  v909 = STACK[0x6FC];
  v910 = -1673081951 * LODWORD(STACK[0x6F8]) - ((948803394 * LODWORD(STACK[0x6F8]) + 968328188) & 0x3CAD46B6);
  v911 = (-1673081951 * LODWORD(STACK[0x754]) - 1663319554) ^ 0x2CFE92AB;
  LODWORD(STACK[0x3DC]) = v884 ^ v798;
  LODWORD(STACK[0x3D0]) = v903 ^ v798;
  LODWORD(STACK[0x3CC]) = v907 ^ v798;
  LODWORD(STACK[0x3C8]) = v911 ^ v798;
  v912 = STACK[0x73C];
  v913 = -1673081951 * LODWORD(STACK[0x738]) - ((948803394 * LODWORD(STACK[0x738]) + 968328188) & 0xC223F3E8) - 34751502;
  v914 = v872;
  LODWORD(STACK[0x3C4]) = v872 ^ 0x39848D63 ^ (v902 - 34751502);
  LODWORD(STACK[0x3C0]) = v872 ^ 0x39848D63 ^ (v904 - 34751502);
  LODWORD(STACK[0x638]) = v872 ^ 0x39848D63 ^ v913;
  v915 = -1673081951 * LODWORD(STACK[0x718]) - ((948803394 * LODWORD(STACK[0x718]) + 968328188) & 0x35AF9EC0);
  v916 = -1673081951 * LODWORD(STACK[0x758]) - ((411932482 * LODWORD(STACK[0x758]) + 431457276) & 0x1A9E6F52);
  v917 = -1673081951 * v909 - ((948803394 * v909 + 968328188) & 0x3CAD46B6);
  LODWORD(v884) = -1673081951 * LODWORD(STACK[0x75C]) - ((411932482 * LODWORD(STACK[0x75C]) + 431457276) & 0x1A9E6F52);
  v918 = -1673081951 * LODWORD(STACK[0x71C]) - ((948803394 * LODWORD(STACK[0x71C]) + 968328188) & 0x35AF9EC0);
  v919 = -1673081951 * LODWORD(STACK[0x740]);
  v920 = v919 - ((948803394 * LODWORD(STACK[0x740]) + 968328188) & 0x535F0B2A) + 1183532947;
  v921 = STACK[0x764];
  v922 = -1673081951 * LODWORD(STACK[0x760]) - ((411932482 * LODWORD(STACK[0x760]) + 431457276) & 0x1A9E6F52);
  v923 = -1673081951 * LODWORD(STACK[0x704])
       - ((948803394 * LODWORD(STACK[0x704]) + 968328188) & 0x3CAD46B6)
       - 1154325159;
  v924 = -1673081951 * LODWORD(STACK[0x700])
       - ((948803394 * LODWORD(STACK[0x700]) + 968328188) & 0x3CAD46B6)
       - 1154325159;
  v925 = STACK[0x5B8];
  v926 = LODWORD(STACK[0x5B8]) ^ 0x21F1F559;
  LODWORD(STACK[0x3BC]) = v926 ^ (v801 - 1154325159);
  v927 = v926 ^ (v910 - 1154325159);
  LODWORD(STACK[0x668]) = v926 ^ (v917 - 1154325159);
  LODWORD(STACK[0x3B8]) = v926 ^ v923;
  LODWORD(STACK[0x3B4]) = v926 ^ v924;
  v928 = v798 ^ 0xF665C54C ^ (v922 + 707459495);
  v929 = v920 ^ 0xF13AF102;
  v930 = *((_DWORD *)&STACK[0x6E8] + ((((v920 & 0xAA ^ 0x80) + ((1 - v919) & 0xAA)) | 0x1E) - 125));
  v931 = -1673081951 * LODWORD(STACK[0x7A0]) - 1663319554;
  v932 = -1673081951 * LODWORD(STACK[0x7A4]) - 1663319554;
  LODWORD(v874) = -1673081951 * LODWORD(STACK[0x660]) - 1663319554;
  v933 = v925;
  v934 = ((2 * (v925 ^ (-1673081951 * LODWORD(STACK[0x7E8]) - 1663319554))) & 0xEF7A1E26 ^ 0x6F4A0C04)
       + (v925 ^ (-1673081951 * LODWORD(STACK[0x7E8]) - 1663319554) ^ 0xC81A5911);
  v935 = STACK[0x640];
  v936 = LODWORD(STACK[0x640]) ^ 0x242B0C1E;
  v937 = v936 ^ (v915 - 1212968610);
  v938 = v936 ^ (v918 - 1212968610);
  v939 = v936 ^ (-1673081951 * LODWORD(STACK[0x720])
               - ((948803394 * LODWORD(STACK[0x720]) + 968328188) & 0x35AF9EC0)
               - 1212968610);
  v940 = v936 ^ (-1673081951 * LODWORD(STACK[0x724])
               - ((948803394 * LODWORD(STACK[0x724]) + 968328188) & 0x35AF9EC0)
               - 1212968610);
  v941 = v936 ^ (-1673081951 * v930 - ((948803394 * v930 + 968328188) & 0x35AF9EC0) - 1212968610);
  LODWORD(STACK[0x3B0]) = v908 ^ v914;
  v942 = v914 ^ (-1673081951 * v912 - 1663319554);
  LODWORD(STACK[0x3AC]) = v929 ^ v914;
  v943 = v914 ^ v931;
  v944 = (_BYTE *)STACK[0x578];
  LODWORD(STACK[0x3A8]) = LODWORD(STACK[0x624]) ^ v933;
  LODWORD(STACK[0x3A4]) = LODWORD(STACK[0x634]) ^ v935;
  LODWORD(STACK[0x3A0]) = LODWORD(STACK[0x628]) ^ v935;
  LODWORD(STACK[0x39C]) = LODWORD(STACK[0x620]) ^ v935;
  LODWORD(STACK[0x398]) = LODWORD(STACK[0x630]) ^ v935;
  v945 = STACK[0x670];
  LOBYTE(v915) = (HIWORD(LODWORD(STACK[0x670])) ^ 0x2A) - ((2 * (HIWORD(LODWORD(STACK[0x670])) ^ 0x2A)) & 0x6A);
  v944[1676] = v898 ^ 0xB;
  LOBYTE(v833) = (STACK[0x648] & 0x18 ^ 0x18) + (STACK[0x648] & 0x18);
  v944[1412] = LODWORD(STACK[0x644]) ^ 0xCB;
  v944[1317] = v915 - 75;
  v944[1843] = ((v945 ^ 0x7B2AF2E5u) >> v833) - ((2 * ((v945 ^ 0x7B2AF2E5u) >> v833)) & 0x6A) - 75;
  v944[2107] = HIBYTE(v943) ^ 0x51;
  v944[1748] = (BYTE1(v945) ^ 0xF2) - ((2 * (BYTE1(v945) ^ 0xF2)) & 0x6A) - 75;
  v944[1581] = BYTE2(v943) ^ 0x9C;
  v944[2012] = BYTE1(v943) ^ 0x7D;
  v944[1222] = v945 ^ 0x50;
  v944[1917] = ((v933 ^ v932) >> 24) ^ 0x36;
  v944[1486] = v943 ^ 0x9E;
  v944[1391] = ((v933 ^ v932) >> 16) ^ 0xAE;
  v944[1653] = (((v935 ^ v874) >> 24) ^ 0x3E)
             - ((2 * (((v935 ^ v874) >> 24) ^ 0x3E)) & 0x6A)
             - 75;
  v944[2084] = (((v935 ^ v874) >> 16) ^ 0xFC)
             - ((2 * (((v935 ^ v874) >> 16) ^ 0xFC)) & 0x6A)
             - 75;
  v944[1822] = ((unsigned __int16)(v933 ^ v932) >> 8) ^ 0x5F;
  v946 = STACK[0x6B4];
  v944[1989] = v935 ^ v874 ^ 0xCB;
  v944[1296] = v933 ^ v932 ^ 0xB;
  v944[1558] = (((unsigned __int16)(v935 ^ (unsigned __int16)v874) >> 8) ^ 0xC3)
             - ((2 * (((unsigned __int16)(v935 ^ (unsigned __int16)v874) >> 8) ^ 0xC3)) & 0x6A)
             - 75;
  LODWORD(STACK[0x394]) = (v942 & 0xDB746F5A ^ 0x58146412) + (v942 & 0xDB746F5A ^ 0x83600B48);
  LODWORD(STACK[0x390]) = (LODWORD(STACK[0x680]) ^ 0x58957497) + 622887554;
  LODWORD(STACK[0x38C]) = v928 - 51310992;
  LODWORD(STACK[0x388]) = (v798 ^ 0xF665C54C ^ (v884 + 707459495)) + 1143147050;
  LODWORD(STACK[0x384]) = LODWORD(STACK[0x67C]) ^ 0x58957497;
  LODWORD(STACK[0x380]) = (v942 ^ 0x58957497) + 356346981;
  LODWORD(STACK[0x37C]) = LODWORD(STACK[0x638]) - 1033075892;
  LODWORD(STACK[0x378]) = (v798 ^ 0xF665C54C ^ (-1673081951 * v921
                                              - ((411932482 * v921 + 431457276) & 0x1A9E6F52)
                                              + 707459495))
                        - 2115248331;
  LODWORD(STACK[0x374]) = v934 + 1591736304;
  LODWORD(STACK[0x370]) = v934 - v941 + 1027183306;
  LODWORD(STACK[0x36C]) = v927 + 1455973563;
  LODWORD(STACK[0x368]) = LODWORD(STACK[0x688]) ^ 0x3FA75602;
  LODWORD(STACK[0x364]) = LODWORD(STACK[0x658]) ^ 0x3FA75602;
  LODWORD(STACK[0x360]) = LODWORD(STACK[0x668]) - 908434791;
  LODWORD(STACK[0x340]) = 825412825;
  LODWORD(STACK[0x35C]) = (v798 ^ 0xF665C54C ^ (v916 + 707459495)) + 1;
  LODWORD(STACK[0x358]) = v939 + 1;
  LODWORD(STACK[0x350]) = v940 + 1;
  LODWORD(STACK[0x34C]) = v937 + 1;
  LODWORD(STACK[0x348]) = v938 + 1;
  LODWORD(STACK[0x410]) = 1590480893;
  LODWORD(STACK[0x40C]) = 1929358617;
  LODWORD(STACK[0x638]) = -98450;
  LODWORD(STACK[0x554]) = 231839;
  LODWORD(STACK[0x550]) = -150997032;
  LODWORD(STACK[0x42C]) = 1353360300;
  LODWORD(STACK[0x428]) = -2109507826;
  LODWORD(STACK[0x424]) = -1383721687;
  LODWORD(STACK[0x420]) = -1781372200;
  LODWORD(STACK[0x54C]) = -1241513984;
  LODWORD(STACK[0x548]) = -271588674;
  LODWORD(STACK[0x540]) = -2134900608;
  LODWORD(STACK[0x538]) = 896259570;
  LODWORD(STACK[0x41C]) = -1848393552;
  LODWORD(STACK[0x418]) = 512257908;
  LODWORD(STACK[0x414]) = -33559818;
  LODWORD(STACK[0x408]) = -808774656;
  LODWORD(STACK[0x404]) = -404387225;
  LODWORD(STACK[0x400]) = 71134;
  LODWORD(STACK[0x3FC]) = -201480103;
  LODWORD(STACK[0x3F8]) = 4194310;
  LODWORD(STACK[0x33C]) = -185576176;
  LODWORD(STACK[0x338]) = -1624586945;
  LODWORD(STACK[0x334]) = 462283726;
  LODWORD(STACK[0x330]) = 1628458048;
  LODWORD(STACK[0x32C]) = 1998991963;
  LODWORD(STACK[0x328]) = -1303563284;
  LODWORD(STACK[0x344]) = 1840202;
  v947 = STACK[0x6B8];
  LODWORD(STACK[0x4D8]) = 1;
  v948 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6C0]
                                       + 8
                                       * (((((v947 + 97) ^ 1) & 1) * ((863 * (v947 ^ 0x2BF)) ^ 0xA78)) ^ v947))
                           - 8);
  LODWORD(STACK[0x6B4]) = v946;
  return v948();
}

