char *sub_1922C0()
{
  return sub_1922DC((uint64_t (*)(_QWORD))&type metadata accessor for Date, (uint64_t (*)(_QWORD))&type metadata accessor for UUID, (uint64_t *)&unk_30C370);
}

char *sub_1922DC(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *result;
  char *v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;

  v46 = a1(0);
  v42 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v45 = (char *)&v38 - v6;
  v44 = a2(0);
  v41 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v43 = (char *)&v38 - v7;
  sub_16B968(a3);
  v38 = v3;
  v8 = *v3;
  v9 = static _DictionaryStorage.copy(original:)(*v3);
  v10 = *(_QWORD *)(v8 + 16);
  v48 = v9;
  if (!v10)
  {
    result = (char *)swift_release(v8);
    v37 = v48;
    v36 = v38;
LABEL_25:
    *v36 = v37;
    return result;
  }
  v11 = v9;
  result = (char *)(v9 + 64);
  v13 = (char *)(v8 + 64);
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  v39 = v8 + 64;
  if (v11 != v8 || result >= &v13[8 * v14])
  {
    result = (char *)memmove(result, v13, 8 * v14);
    v11 = v48;
  }
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v16 = 1 << *(_BYTE *)(v8 + 32);
  v47 = v8;
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v8 + 64);
  v40 = (unint64_t)(v16 + 63) >> 6;
  v19 = v41;
  v20 = v42;
  v22 = v43;
  v21 = v44;
  v23 = v46;
  v24 = v48;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v49 = v15;
      v26 = v25 | (v15 << 6);
      v27 = v47;
      goto LABEL_9;
    }
    v32 = v15 + 1;
    v27 = v47;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v32 >= v40)
      goto LABEL_23;
    v33 = *(_QWORD *)(v39 + 8 * v32);
    v34 = v15 + 1;
    if (!v33)
    {
      v34 = v32 + 1;
      if (v32 + 1 >= v40)
        goto LABEL_23;
      v33 = *(_QWORD *)(v39 + 8 * v34);
      if (!v33)
        break;
    }
LABEL_22:
    v18 = (v33 - 1) & v33;
    v49 = v34;
    v26 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_9:
    v28 = *(_QWORD *)(v19 + 72) * v26;
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v22, *(_QWORD *)(v27 + 48) + v28, v21);
    v29 = *(_QWORD *)(v20 + 72) * v26;
    v30 = *(_QWORD *)(v27 + 56) + v29;
    v31 = v45;
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v45, v30, v23);
    (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(*(_QWORD *)(v24 + 48) + v28, v22, v21);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(_QWORD *)(v24 + 56) + v29, v31, v23);
    v15 = v49;
  }
  v35 = v32 + 2;
  if (v35 >= v40)
  {
LABEL_23:
    result = (char *)swift_release(v47);
    v36 = v38;
    v37 = v48;
    goto LABEL_25;
  }
  v33 = *(_QWORD *)(v39 + 8 * v35);
  if (v33)
  {
    v34 = v35;
    goto LABEL_22;
  }
  while (1)
  {
    v34 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v34 >= v40)
      goto LABEL_23;
    v33 = *(_QWORD *)(v39 + 8 * v34);
    ++v35;
    if (v33)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1925BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_17666C((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain(v3);
}

uint64_t sub_1925FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t i;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  _OWORD v48[2];
  _OWORD v49[2];
  __int128 v50;
  _OWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v9 = -1 << *(_BYTE *)(a1 + 32);
  v10 = ~v9;
  v11 = *(_QWORD *)(a1 + 64);
  v12 = -v9;
  v52 = a1;
  v53 = a1 + 64;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v54 = v10;
  v55 = 0;
  v56 = v13 & v11;
  v57 = a2;
  v58 = a3;
  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  sub_192964(&v50);
  v14 = *((_QWORD *)&v50 + 1);
  if (!*((_QWORD *)&v50 + 1))
    goto LABEL_27;
  v15 = v50;
  sub_17992C(v51, v49);
  v16 = *(_QWORD **)a5;
  v18 = sub_187F9C(v15, v14);
  v19 = v16[2];
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v22 = v17;
  if (v16[3] >= v21)
  {
    if ((a4 & 1) != 0)
    {
      if ((v17 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_1920DC();
      if ((v22 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v26 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v18 >> 6) + 64) |= 1 << v18;
    v27 = (uint64_t *)(v26[6] + 16 * v18);
    *v27 = v15;
    v27[1] = v14;
    sub_17992C(v49, (_OWORD *)(v26[7] + 32 * v18));
    v28 = v26[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v26[2] = v30;
LABEL_16:
    sub_192964(&v50);
    for (i = *((_QWORD *)&v50 + 1); *((_QWORD *)&v50 + 1); i = *((_QWORD *)&v50 + 1))
    {
      v33 = v50;
      sub_17992C(v51, v49);
      v34 = *(_QWORD **)a5;
      v36 = sub_187F9C(v33, i);
      v37 = v34[2];
      v38 = (v35 & 1) == 0;
      v39 = v37 + v38;
      if (__OFADD__(v37, v38))
        goto LABEL_28;
      v40 = v35;
      if (v34[3] < v39)
      {
        sub_19161C(v39, 1);
        v41 = sub_187F9C(v33, i);
        if ((v40 & 1) != (v42 & 1))
          goto LABEL_30;
        v36 = v41;
      }
      if ((v40 & 1) != 0)
      {
        sub_17666C((uint64_t)v49, (uint64_t)v48);
        sub_184A38(v49);
        swift_bridgeObjectRelease(i);
        v32 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v36);
        sub_184A38(v32);
        sub_17992C(v48, v32);
      }
      else
      {
        v43 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v36 >> 6) + 64) |= 1 << v36;
        v44 = (uint64_t *)(v43[6] + 16 * v36);
        *v44 = v33;
        v44[1] = i;
        sub_17992C(v49, (_OWORD *)(v43[7] + 32 * v36));
        v45 = v43[2];
        v29 = __OFADD__(v45, 1);
        v46 = v45 + 1;
        if (v29)
          goto LABEL_29;
        v43[2] = v46;
      }
      sub_192964(&v50);
    }
LABEL_27:
    swift_release(a3);
    swift_bridgeObjectRelease(a1);
    sub_18538C(v52);
    return swift_release(v58);
  }
  sub_19161C(v21, a4 & 1);
  v23 = sub_187F9C(v15, v14);
  if ((v22 & 1) == (v24 & 1))
  {
    v18 = v23;
    if ((v22 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_17666C((uint64_t)v49, (uint64_t)v48);
    sub_184A38(v49);
    swift_bridgeObjectRelease(v14);
    v25 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v18);
    sub_184A38(v25);
    sub_17992C(v48, v25);
    goto LABEL_16;
  }
LABEL_30:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

_QWORD *sub_192950(_QWORD *a1)
{
  return sub_19A81C(0, a1[2], 0, a1);
}

uint64_t sub_192964@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_17666C(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain(v12);
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_176724((uint64_t)&v23, (uint64_t)v22, &qword_30C350);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_1766A8((uint64_t)v21, &qword_30C358);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

unint64_t sub_192B48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_16B968(&qword_30C408);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (unsigned __int8 *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    sub_16B968(&qword_30C360);
    v7 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v6);
    v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1765E0(v9, (uint64_t)v5, &qword_30C408);
      v11 = *v5;
      result = sub_1880C8(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v7[6] + result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for Achievement(0);
      result = sub_189D1C(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_192CA8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *i;
  uint64_t v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_16B968((uint64_t *)&unk_30C380);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v1);
    for (i = (_BYTE *)(a1 + 40); ; i += 16)
    {
      v5 = *((_QWORD *)i - 1);
      v6 = *i;
      result = sub_18817C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v3[6] + 8 * result) = v5;
      *(_BYTE *)(v3[7] + result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_192D7C(void *a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  char *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v20[5];
  uint64_t v21;

  v3 = objc_msgSend(a1, "segmentsAsStrings");
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, &type metadata for String);

  v5 = objc_msgSend(a1, "segmentSetsAsStrings");
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String);

  v7 = objc_msgSend(a1, "treatmentsAsStrings");
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, &type metadata for String);

  v9 = type metadata accessor for ABData();
  v10 = (_QWORD *)swift_allocObject(v9, 40, 7);
  v10[2] = v4;
  v10[3] = v6;
  v10[4] = v8;
  v11 = *(void **)&v1[OBJC_IVAR___BCRCDataContainer_accessQueue];
  v12 = swift_allocObject(&unk_294630, 49, 7);
  *(_QWORD *)(v12 + 16) = v1;
  *(_BYTE *)(v12 + 24) = 1;
  *(_QWORD *)(v12 + 32) = v10;
  *(_QWORD *)(v12 + 40) = 0;
  *(_BYTE *)(v12 + 48) = 0;
  v13 = swift_allocObject(&unk_294658, 32, 7);
  *(_QWORD *)(v13 + 16) = sub_18E6D4;
  *(_QWORD *)(v13 + 24) = v12;
  v20[4] = sub_185BBC;
  v21 = v13;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_175BAC;
  v20[3] = &unk_294670;
  v14 = _Block_copy(v20);
  v15 = v21;
  swift_retain_n(v10, 2);
  v16 = v11;
  v17 = v1;
  swift_retain(v13);
  swift_release(v15);
  dispatch_sync(v16, v14);

  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v13, "", 107, 385, 26, 1);
  swift_release_n(v10, 2);
  swift_release(v12);
  result = swift_release(v13);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

_QWORD *sub_192F8C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = NSUserDefaults.rcDataContainerWatchedKeyPaths.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for FrozenDataSource()
{
  return objc_opt_self(_TtC8BookCoreP33_3F5AD38AE34F68CBDD3BC66360C6546C16FrozenDataSource);
}

uint64_t type metadata accessor for DataSource()
{
  return objc_opt_self(_TtC8BookCoreP33_3F5AD38AE34F68CBDD3BC66360C6546C10DataSource);
}

uint64_t type metadata accessor for ABData()
{
  return objc_opt_self(_TtC8BookCoreP33_3F5AD38AE34F68CBDD3BC66360C6546C6ABData);
}

uint64_t dispatch thunk of ReadingHistoryStateProvider.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RCDataContaining.configsValues()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for RCDataContainer()
{
  return objc_opt_self(BCRCDataContainer);
}

uint64_t method lookup function for RCDataContainer(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for RCDataContainer);
}

uint64_t sub_193054()
{
  return sub_189CDC(&qword_30C2C8, &qword_30C2D0, (uint64_t)&protocol conformance descriptor for AsyncMapSequence<A, B>);
}

uint64_t sub_193084()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_193094()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30C318;
  if (!qword_30C318)
  {
    v1 = sub_16F6BC(255, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_30C318);
  }
  return result;
}

uint64_t sub_1930EC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_193110(uint64_t a1)
{
  uint64_t v1;

  sub_18C264(a1, v1, (void (*)(os_unfair_lock_s *, void *))sub_18C1F4);
}

void sub_193130(uint64_t a1)
{
  uint64_t v1;

  sub_18C264(a1, v1, (void (*)(os_unfair_lock_s *, void *))sub_18C310);
}

uint64_t sub_193150()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_193174()
{
  uint64_t v0;

  return sub_18C380(v0);
}

void sub_19317C()
{
  uint64_t v0;

  sub_18C8E0(v0);
}

uint64_t sub_193184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Achievement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1931C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1931D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_30BFA4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_16CAC4;
  v5[13] = a1;
  v5[14] = a2;
  return swift_task_switch(sub_18FD24, 0, 0);
}

uint64_t sub_193240()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 49, 7);
}

void sub_193274()
{
  uint64_t v0;

  sub_18C9EC(*(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t sub_1932A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1932B4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1932E8()
{
  uint64_t v0;

  return sub_18CF44(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1932F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_193320()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "refreshNamespace:", v2);

}

uint64_t sub_193368()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_19338C()
{
  uint64_t v0;

  return sub_18E700(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_193398()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1933C4()
{
  uint64_t v0;

  return sub_18EB4C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1933D0(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_17933C(result, a2);
  return result;
}

uint64_t sub_1933E4(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_193428()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_193454()
{
  uint64_t v0;

  sub_18E3F8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_19345C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_193480()
{
  return sub_18E50C();
}

id ReadingGoalsServiceClient.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadingGoalsServiceClient();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for ReadingGoalsServiceClient()
{
  return objc_opt_self(_TtC8BookCore25ReadingGoalsServiceClient);
}

id ReadingGoalsServiceClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadingGoalsServiceClient();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t Achievement.key.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for Achievement(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_193184(v0, (uint64_t)v3);
  result = swift_getEnumCaseMultiPayload(v3, v1);
  if (result >= 2)
  {
    v5 = &v3[*(int *)(sub_16B968(&qword_30BCE8) + 48)];
    v6 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    return 2;
  }
  return result;
}

uint64_t type metadata accessor for Achievement(uint64_t a1)
{
  uint64_t result;

  result = qword_30C528;
  if (!qword_30C528)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Achievement);
  return result;
}

uint64_t Achievement.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  Swift::String v24;
  Swift::String v25;
  uint64_t v27;
  char v28;
  _QWORD v29[2];

  v1 = v0;
  v2 = type metadata accessor for ReadingHistoryModel.DayKey(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Achievement(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_193184(v1, (uint64_t)v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v6);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      v19 = *(_QWORD *)v8;
      v20 = sub_16B968(&qword_30BCE8);
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v20 + 48)], v2);
      v29[0] = 0;
      v29[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v21._countAndFlagsBits = 0x72286B6165727473;
      v21._object = (void *)0xEF203A64726F6365;
      String.append(_:)(v21);
      v27 = v19;
      v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v22._object;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(object);
      v24._countAndFlagsBits = 0x203A796164202CLL;
      v24._object = (void *)0xE700000000000000;
      String.append(_:)(v24);
      _print_unlocked<A, B>(_:_:)(v5, v29, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v25._countAndFlagsBits = 41;
      v25._object = (void *)0xE100000000000000;
      String.append(_:)(v25);
      v18 = v29[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v18;
    }
    v10 = *(_QWORD *)v8;
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease(v29[1]);
    strcpy((char *)v29, "booksFinished(");
    HIBYTE(v29[1]) = -18;
    v27 = v10;
    v11 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v13 = v12;
  }
  else
  {
    v14 = *(_QWORD *)v8;
    v15 = v8[8];
    v29[0] = 0;
    v29[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease(v29[1]);
    strcpy((char *)v29, "dailyReading(");
    HIWORD(v29[1]) = -4864;
    v27 = v14;
    v28 = v15;
    v16 = sub_16B968(&qword_30C4A8);
    v11 = String.init<A>(describing:)(&v27, v16);
    v13 = v12;
  }
  String.append(_:)(*(Swift::String *)&v11);
  swift_bridgeObjectRelease(v13);
  v17._countAndFlagsBits = 41;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  return v29[0];
}

BOOL static Achievement.Key.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void Achievement.Key.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
  Hasher._combine(_:)(a2);
}

Swift::Int Achievement.Key.hashValue.getter(unsigned __int8 a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(a1);
  return Hasher._finalize()();
}

BOOL sub_1939C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t static Achievement.Key.jsKindNone.getter()
{
  return 0;
}

uint64_t Achievement.Key.jsKind.getter(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t static Achievement.Key.mappedKey(from:)(uint64_t a1)
{
  unsigned int v1;

  if (a1 == 2)
    v1 = 1;
  else
    v1 = 2;
  if (a1 == 1)
    return 0;
  else
    return v1;
}

uint64_t _s8BookCore11AchievementO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  char v24;
  double v25;
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t);
  char *v38;
  uint64_t v39;

  v4 = type metadata accessor for ReadingHistoryModel.DayKey(0);
  v39 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v38 = (char *)&v38 - v8;
  v9 = type metadata accessor for Achievement(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char **)((char *)&v38 - v14);
  __chkstk_darwin(v13);
  v17 = (double *)((char *)&v38 - v16);
  v18 = sub_16B968((uint64_t *)&unk_30C560);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_193184(a1, (uint64_t)v21);
  sub_193184(a2, v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v9);
  if (!EnumCaseMultiPayload)
  {
    sub_193184((uint64_t)v21, (uint64_t)v17);
    v25 = *v17;
    if (swift_getEnumCaseMultiPayload(v22, v9))
      goto LABEL_14;
    v26 = *(_BYTE *)(v22 + 8);
    if (((_BYTE)v17[1] & 1) != 0)
    {
      if (!*(_BYTE *)(v22 + 8))
        goto LABEL_19;
    }
    else
    {
      if (v25 != *(double *)v22)
        v26 = 1;
      if ((v26 & 1) != 0)
        goto LABEL_19;
    }
    sub_193FF8((uint64_t)v21);
    v24 = 1;
    return v24 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_193184((uint64_t)v21, (uint64_t)v12);
    v27 = *(int *)(sub_16B968(&qword_30BCE8) + 48);
    v28 = &v12[v27];
    if (swift_getEnumCaseMultiPayload(v22, v9) != 2)
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(&v12[v27], v4);
      goto LABEL_14;
    }
    v29 = *(_QWORD *)v12;
    v30 = *(double *)v22;
    v31 = (char *)(v22 + v27);
    v33 = v38;
    v32 = v39;
    v34 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v34(v38, v28, v4);
    v34(v7, v31, v4);
    if (v29 == *(_QWORD *)&v30)
    {
      v24 = static ReadingHistoryModel.DayKey.== infix(_:_:)(v33, v7);
      v35 = *(void (**)(char *, uint64_t))(v32 + 8);
      v35(v7, v4);
      v35(v33, v4);
      goto LABEL_12;
    }
    v36 = *(void (**)(char *, uint64_t))(v32 + 8);
    v36(v7, v4);
    v36(v33, v4);
LABEL_19:
    sub_193FF8((uint64_t)v21);
    goto LABEL_20;
  }
  sub_193184((uint64_t)v21, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload(v22, v9) != 1)
  {
LABEL_14:
    sub_1943C0((uint64_t)v21);
LABEL_20:
    v24 = 0;
    return v24 & 1;
  }
  v24 = *v15 == *(_QWORD *)v22;
LABEL_12:
  sub_193FF8((uint64_t)v21);
  return v24 & 1;
}

unint64_t sub_193D18()
{
  unint64_t result;

  result = qword_30C4B0;
  if (!qword_30C4B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Achievement.Key, &type metadata for Achievement.Key);
    atomic_store(result, (unint64_t *)&qword_30C4B0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Achievement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v12);
  }
  else if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
  {
    *a1 = *a2;
    v8 = *(int *)(sub_16B968(&qword_30BCE8) + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for Achievement(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 2)
  {
    v4 = a1 + *(int *)(sub_16B968(&qword_30BCE8) + 48);
    v5 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_QWORD *initializeWithCopy for Achievement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
  {
    *a1 = *a2;
    v6 = *(int *)(sub_16B968(&qword_30BCE8) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithCopy for Achievement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_193FF8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
    {
      *a1 = *a2;
      v6 = *(int *)(sub_16B968(&qword_30BCE8) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for ReadingHistoryModel.DayKey(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_193FF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Achievement(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeWithTake for Achievement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
  {
    *a1 = *a2;
    v6 = *(int *)(sub_16B968(&qword_30BCE8) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload(a1, a3, 2);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for Achievement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_193FF8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 2)
    {
      *a1 = *a2;
      v6 = *(int *)(sub_16B968(&qword_30BCE8) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = type metadata accessor for ReadingHistoryModel.DayKey(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 2);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Achievement(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for Achievement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1941B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_storeEnumTagMultiPayload(a1, a3, a2);
}

uint64_t sub_1941C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[3];

  v5[0] = "\t";
  v5[1] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for ReadingHistoryModel.DayKey(319);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, (char *)&value witness table for Builtin.Int64 + 64, *(_QWORD *)(result - 8) + 64);
    v5[2] = v4;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v5);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Achievement.Key(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Achievement.Key(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_194338 + 4 * byte_26C375[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_19436C + 4 * byte_26C370[v4]))();
}

uint64_t sub_19436C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_194374(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x19437CLL);
  return result;
}

uint64_t sub_194388(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x194390);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_194394(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_19439C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1943A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Achievement.Key()
{
  return &type metadata for Achievement.Key;
}

uint64_t sub_1943C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_16B968((uint64_t *)&unk_30C560);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SwiftUIDragItem.assetID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore15SwiftUIDragItem_assetID);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore15SwiftUIDragItem_assetID + 8));
  return v1;
}

id SwiftUIDragItem.__allocating_init(assetID:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = &v5[OBJC_IVAR____TtC8BookCore15SwiftUIDragItem_assetID];
  *(_QWORD *)v6 = a1;
  *((_QWORD *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, "init");
}

id SwiftUIDragItem.init(assetID:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_super v5;

  v3 = &v2[OBJC_IVAR____TtC8BookCore15SwiftUIDragItem_assetID];
  *(_QWORD *)v3 = a1;
  *((_QWORD *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for SwiftUIDragItem();
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t type metadata accessor for SwiftUIDragItem()
{
  return objc_opt_self(_TtC8BookCore15SwiftUIDragItem);
}

id SwiftUIDragItem.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return SwiftUIDragItem.init(coder:)(a1);
}

id SwiftUIDragItem.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  objc_super v12;
  uint64_t v13;
  uint64_t v14;

  v3 = sub_16F6BC(0, &qword_30C578, NSString_ptr);
  v4 = v1;
  v5 = NSCoder.decodeObject<A>(of:forKey:)(v3, 0x44497465737361, 0xE700000000000000, v3);
  if (v5
    && (v6 = (void *)v5,
        v13 = 0,
        v14 = 0,
        static String._conditionallyBridgeFromObjectiveC(_:result:)(v5, &v13),
        v6,
        (v7 = v14) != 0))
  {
    v8 = &v4[OBJC_IVAR____TtC8BookCore15SwiftUIDragItem_assetID];
    *(_QWORD *)v8 = v13;
    *((_QWORD *)v8 + 1) = v7;

    v12.receiver = v4;
    v12.super_class = (Class)type metadata accessor for SwiftUIDragItem();
    v9 = objc_msgSendSuper2(&v12, "init");

  }
  else
  {

    v10 = type metadata accessor for SwiftUIDragItem();
    swift_deallocPartialClassInstance(v4, v10, 24, 7);
    return 0;
  }
  return v9;
}

void sub_194658(void *a1)
{
  NSString v2;
  id v3;

  v2 = String._bridgeToObjectiveC()();
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "encodeObject:forKey:", v2, v3);

}

void SwiftUIDragItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookCore.SwiftUIDragItem", 24, "init()", 6, 0);
  __break(1u);
}

id SwiftUIDragItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwiftUIDragItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_UNKNOWN **static SwiftUIDragItem.writableTypeIdentifiersForItemProvider.getter()
{
  return &off_292C40;
}

uint64_t SwiftUIDragItem.loadData(withTypeIdentifier:forItemProviderCompletionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t, uint64_t))
{
  uint64_t v3;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v19;

  if ((a1 != 0xD000000000000022 || a2 != 0x8000000000214B70)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000022, 0x8000000000214B70, 0) & 1) == 0)
  {
    v15 = sub_194A14();
    v16 = swift_allocError(&type metadata for SwiftUIDragItemError, v15, 0, 0);
    *v17 = a1;
    v17[1] = a2;
    swift_bridgeObjectRetain(a2);
    a3(0, 0xF000000000000000, v16);
    v14 = v16;
    goto LABEL_8;
  }
  v19 = 0;
  v7 = objc_msgSend((id)objc_opt_self(NSKeyedArchiver), "archivedDataWithRootObject:requiringSecureCoding:error:", v3, 1, &v19);
  v8 = v19;
  if (!v7)
  {
    v12 = v8;
    v13 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain(v13);
    a3(0, 0xF000000000000000, v13);
    swift_errorRelease(v13);
    v14 = v13;
LABEL_8:
    swift_errorRelease(v14);
    return 0;
  }
  v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v11 = v10;

  sub_1933E4(v9, v11);
  a3(v9, v11, 0);
  sub_17933C(v9, v11);
  sub_17933C(v9, v11);
  return 0;
}

unint64_t sub_194A14()
{
  unint64_t result;

  result = qword_30C580;
  if (!qword_30C580)
  {
    result = swift_getWitnessTable(&unk_26C4B8, &type metadata for SwiftUIDragItemError);
    atomic_store(result, (unint64_t *)&qword_30C580);
  }
  return result;
}

_UNKNOWN **static SwiftUIDragItem.readableTypeIdentifiersForItemProvider.getter()
{
  return &off_292CA0;
}

id static SwiftUIDragItem.object(withItemProviderData:typeIdentifier:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v7;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  char *v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  objc_super v23;

  v7 = a3;
  if ((a3 != (void *)0xD000000000000022 || a4 != 0x8000000000214B70)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, 0xD000000000000022, 0x8000000000214B70, 0) & 1) == 0)
  {
    v17 = sub_194A14();
    swift_allocError(&type metadata for SwiftUIDragItemError, v17, 0, 0);
    *v18 = v7;
    v18[1] = a4;
    v19 = swift_bridgeObjectRetain(a4);
    goto LABEL_9;
  }
  sub_16F6BC(0, &qword_30C588, NSKeyedUnarchiver_ptr);
  v10 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v4, a1, a2, v4);
  if (!v5)
  {
    v11 = (void *)v10;
    if (v10)
    {
      v13 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8BookCore15SwiftUIDragItem_assetID);
      v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8BookCore15SwiftUIDragItem_assetID + 8);
      v14 = (objc_class *)type metadata accessor for SwiftUIDragItem();
      v15 = (char *)objc_allocWithZone(v14);
      v16 = &v15[OBJC_IVAR____TtC8BookCore15SwiftUIDragItem_assetID];
      *(_QWORD *)v16 = v13;
      *((_QWORD *)v16 + 1) = v12;
      v23.receiver = v15;
      v23.super_class = v14;
      swift_bridgeObjectRetain(v12);
      v7 = objc_msgSendSuper2(&v23, "init");

      return v7;
    }
    v20 = sub_194A14();
    v19 = swift_allocError(&type metadata for SwiftUIDragItemError, v20, 0, 0);
    *v21 = 0;
    v21[1] = 0;
LABEL_9:
    swift_willThrow(v19);
  }
  return v7;
}

uint64_t method lookup function for SwiftUIDragItem(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SwiftUIDragItem);
}

uint64_t dispatch thunk of SwiftUIDragItem.__allocating_init(assetID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of SwiftUIDragItem.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of EngagementEventController.dataProvider.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.sectname[swift_isaMask & *v0])();
}

_QWORD *initializeBufferWithCopyOfBuffer for BooksFinished.YearEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t destroy for BooksFinished.State(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
}

_QWORD *assignWithCopy for SwiftUIDragItemError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a2[1];
  v4 = a1[1];
  a1[1] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

_QWORD *assignWithTake for SwiftUIDragItemError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SwiftUIDragItemError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SwiftUIDragItemError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_194F20(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_194F38(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SwiftUIDragItemError()
{
  return &type metadata for SwiftUIDragItemError;
}

uint64_t sub_194F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  Class isa;
  void *v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  _QWORD *v18;
  void *v19;
  id v21;

  if ((a1 != 0xD000000000000022 || a2 != 0x8000000000214B70)
    && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0xD000000000000022, 0x8000000000214B70, 0) & 1) == 0)
  {
    v17 = sub_194A14();
    v15 = swift_allocError(&type metadata for SwiftUIDragItemError, v17, 0, 0);
    *v18 = a1;
    v18[1] = a2;
    swift_bridgeObjectRetain(a2);
    v19 = (void *)_convertErrorToNSError(_:)(v15);
    (*(void (**)(uint64_t, _QWORD, void *))(a4 + 16))(a4, 0, v19);

    goto LABEL_8;
  }
  v21 = 0;
  v8 = objc_msgSend((id)objc_opt_self(NSKeyedArchiver), "archivedDataWithRootObject:requiringSecureCoding:error:", a3, 1, &v21);
  v9 = v21;
  if (!v8)
  {
    v14 = v9;
    v15 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain(v15);
    v16 = (void *)_convertErrorToNSError(_:)(v15);
    (*(void (**)(uint64_t, _QWORD, void *))(a4 + 16))(a4, 0, v16);

    swift_errorRelease(v15);
LABEL_8:
    swift_errorRelease(v15);
    return 0;
  }
  v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v12 = v11;

  sub_1933E4(v10, v12);
  isa = Data._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class, _QWORD))(a4 + 16))(a4, isa, 0);

  sub_17933C(v10, v12);
  sub_17933C(v10, v12);
  return 0;
}

id sub_1951B4()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController);
  swift_beginAccess(v0 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController, v3, 0, 0);
  return *v1;
}

void sub_195254(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

void sub_1952A4(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_195304(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController, a1, 33, 0);
  return j__swift_endAccess;
}

id AppAnalyticsExtensionManager.__allocating_init(uploadsEnabled:)(char a1)
{
  objc_class *v1;
  _BYTE *v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  v3 = objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___BCAppAnalyticsExtensionManager_assertion] = 0;
  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___BCAppAnalyticsExtensionManager_viewController], 0);
  v3[OBJC_IVAR___BCAppAnalyticsExtensionManager_uploadsEnabled] = a1;
  v4 = objc_allocWithZone((Class)type metadata accessor for AnalyticsController(0));
  v5 = v3;
  v6 = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController] = v6;

  v8.receiver = v5;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, "init");
}

id AppAnalyticsExtensionManager.init(uploadsEnabled:)(char a1)
{
  _BYTE *v1;
  id v3;
  char *v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR___BCAppAnalyticsExtensionManager_assertion] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___BCAppAnalyticsExtensionManager_viewController], 0);
  v1[OBJC_IVAR___BCAppAnalyticsExtensionManager_uploadsEnabled] = a1;
  v3 = objc_allocWithZone((Class)type metadata accessor for AnalyticsController(0));
  v4 = v1;
  v5 = objc_msgSend(v3, "init");
  *(_QWORD *)&v4[OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController] = v5;

  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for AppAnalyticsExtensionManager();
  return objc_msgSendSuper2(&v7, "init");
}

uint64_t type metadata accessor for AppAnalyticsExtensionManager()
{
  return objc_opt_self(BCAppAnalyticsExtensionManager);
}

id AppAnalyticsExtensionManager.init()()
{
  _BYTE *v0;
  id v1;
  char *v2;
  id v3;
  objc_super v5;

  *(_QWORD *)&v0[OBJC_IVAR___BCAppAnalyticsExtensionManager_assertion] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BCAppAnalyticsExtensionManager_viewController], 0);
  v0[OBJC_IVAR___BCAppAnalyticsExtensionManager_uploadsEnabled] = 1;
  v1 = objc_allocWithZone((Class)type metadata accessor for AnalyticsController(0));
  v2 = v0;
  v3 = objc_msgSend(v1, "init");
  *(_QWORD *)&v2[OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController] = v3;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for AppAnalyticsExtensionManager();
  return objc_msgSendSuper2(&v5, "init");
}

uint64_t sub_1956AC(void *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  id v11;
  id v12;
  unsigned __int8 *v13;
  id v14;
  void *v15;
  char v17[24];

  v2 = v1;
  type metadata accessor for AppManager(0);
  v4 = (void *)static AppManager.shared.getter();
  v5 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
  v6 = objc_msgSend(v5, "identifier");

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;

  dispatch thunk of AppManager.startAppSession(with:enableUploads:)(v7, v9, v2[OBJC_IVAR___BCAppAnalyticsExtensionManager_uploadsEnabled]);
  swift_bridgeObjectRelease(v9);
  v10 = (id *)&v2[OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController];
  swift_beginAccess(&v2[OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController], v17, 0, 0);
  v11 = *v10;
  dispatch thunk of AnalyticsController.start()();

  v12 = *v10;
  v13 = v2;
  dispatch thunk of AnalyticsController.delegate.setter(v2);

  v14 = *v10;
  v15 = (void *)dispatch thunk of AnalyticsController.applicationTracker.getter();

  objc_msgSend(a1, "ba_setAnalyticsTracker:", v15);
  return swift_unknownObjectWeakAssign(&v13[OBJC_IVAR___BCAppAnalyticsExtensionManager_viewController], a1);
}

void sub_19585C()
{
  uint64_t v0;
  id *v1;
  id v2;
  uint64_t v3;
  _BYTE v4[24];

  v1 = (id *)(v0 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController);
  swift_beginAccess(v0 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController, v4, 0, 0);
  v2 = objc_msgSend(*v1, "newSessionAssertion");
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___BCAppAnalyticsExtensionManager_assertion);
  *(_QWORD *)(v0 + OBJC_IVAR___BCAppAnalyticsExtensionManager_assertion) = v2;
  swift_unknownObjectRelease(v3);
  if (qword_30AB00 != -1)
    swift_once(&qword_30AB00, sub_18B014);
  RCDataContainer.deployStagedDataIfNeeded()();
}

uint64_t sub_1959A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR___BCAppAnalyticsExtensionManager_assertion;
  v2 = *(void **)(v0 + OBJC_IVAR___BCAppAnalyticsExtensionManager_assertion);
  if (v2)
  {
    objc_msgSend(v2, "invalidate");
    v2 = *(void **)(v0 + v1);
  }
  *(_QWORD *)(v0 + v1) = 0;
  return swift_unknownObjectRelease(v2);
}

void sub_195A44(double a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  _BYTE v5[24];

  v3 = (id *)(v1 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController);
  swift_beginAccess(v1 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController, v5, 0, 0);
  v4 = *v3;
  dispatch thunk of AnalyticsController.waitForSessionEnd(_:)(a1);

}

void sub_195B1C()
{
  id v0;

  type metadata accessor for AppManager(0);
  v0 = (id)static AppManager.shared.getter();
  dispatch thunk of AppManager.appSessionDidTerminate()();

}

id AppAnalyticsExtensionManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppAnalyticsExtensionManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_195DB0(int a1, void *aBlock)
{
  uint64_t v2;
  void (**v3)(void);

  v3 = (void (**)(void))_Block_copy(aBlock);
  v3[2]();
  _Block_release(v3);
  return sub_16D780(*(uint64_t (**)(void))(v2 + 8));
}

void AppAnalyticsExtensionManager.analyticsSessionData(for:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(BASessionDataKeyJSVersion);
  v6 = v5;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_15;
  }
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
  {
LABEL_15:
    v26 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
    v27 = objc_msgSend(v26, "environment");

    v28 = objc_msgSend(v27, "appVersion");
    goto LABEL_16;
  }
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(BASessionDataKeyStoreFrontID);
  v14 = v13;
  v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  if (v12 == v15 && v14 == v16)
  {
    swift_bridgeObjectRelease_n(v14, 2);
LABEL_18:
    v32 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
    v28 = objc_msgSend(v32, "currentStorefront");

    if (!v28)
      goto LABEL_19;
LABEL_16:
    v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
    v31 = v30;

    *(_QWORD *)(a2 + 24) = &type metadata for String;
    *(_QWORD *)a2 = v29;
    *(_QWORD *)(a2 + 8) = v31;
    return;
  }
  v18 = v16;
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v18);
  if ((v19 & 1) != 0)
    goto LABEL_18;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(BASessionDataKeyiCloudLoggedIn);
  v22 = v21;
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v25 = v23;
  if (v20 != v24 || v22 != v23)
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v24, v23, 0);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v25);
    if ((v33 & 1) != 0)
      goto LABEL_21;
    v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(BASessionDataKeyiTunesLoggedIn);
    v40 = v39;
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v43 = v41;
    if (v38 == v42 && v40 == v41)
    {
      swift_bridgeObjectRelease_n(v40, 2);
LABEL_27:
      v34 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
      v35 = objc_msgSend(v34, "isUserSignedInToiTunes");
      goto LABEL_22;
    }
    v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v41, 0);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v43);
    if ((v44 & 1) != 0)
      goto LABEL_27;
    v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(BASessionDataKeyiCloudDriveOptIn);
    v47 = v46;
    v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    v50 = v48;
    if (v45 == v49 && v47 == v48)
    {
      swift_bridgeObjectRelease_n(v47, 2);
LABEL_32:
      v34 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
      v35 = objc_msgSend(v34, "isGlobalICloudDriveSyncOptedIn");
      goto LABEL_22;
    }
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
    swift_bridgeObjectRelease(v47);
    swift_bridgeObjectRelease(v50);
    if ((v51 & 1) != 0)
      goto LABEL_32;
LABEL_19:
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  swift_bridgeObjectRelease_n(v22, 2);
LABEL_21:
  v34 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
  v35 = objc_msgSend(v34, "isUserSignedInToiCloud");
LABEL_22:
  v36 = v35;

  v37 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v36);
  *(_QWORD *)(a2 + 24) = sub_19648C();
  *(_QWORD *)a2 = v37;
}

void *AppAnalyticsExtensionManager.additionalEventProcessors.getter()
{
  return &_swiftEmptyArrayStorage;
}

void _s8BookCore28AppAnalyticsExtensionManagerC15didStartSession4withy0aD00D10ControllerC_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *Strong;
  void *v5;
  id v6;
  uint64_t started;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v1 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BCAppAnalyticsExtensionManager_viewController);
  if (Strong)
  {
    v5 = Strong;
    v6 = objc_msgSend(Strong, "ba_effectiveAnalyticsTracker");

    if (v6)
    {
      started = type metadata accessor for AppSessionStartEvent(0);
      v8 = sub_16BDB8(&qword_30C6F8, (uint64_t (*)(uint64_t))&type metadata accessor for AppSessionStartEvent, (uint64_t)&protocol conformance descriptor for AppSessionStartEvent);
      v9 = v6;
      BATracker.submit<A>(_:completion:)(started, 0, 0, started, v8);

      v10 = type metadata accessor for AppSessionEndEvent(0);
      v11 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v3, 1, 1, v11);
      v12 = sub_16BDB8((unint64_t *)&unk_30C700, (uint64_t (*)(uint64_t))&type metadata accessor for AppSessionEndEvent, (uint64_t)&protocol conformance descriptor for AppSessionEndEvent);
      v13 = v9;
      BATracker.time<A>(_:startTime:)(v10, v3, v10, v12);

      sub_19675C((uint64_t)v3);
    }
  }
}

unint64_t sub_19648C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30C6A8;
  if (!qword_30C6A8)
  {
    v1 = objc_opt_self(NSNumber);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_30C6A8);
  }
  return result;
}

id sub_1964C8@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR___BCAppAnalyticsExtensionManager_analyticsController);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for AppAnalyticsExtensionManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AppAnalyticsExtensionManager);
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.analyticsController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.analyticsController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.analyticsController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.__allocating_init(uploadsEnabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.setupTracking(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.startSession()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.endSession()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.waitForSessionEnd(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AppAnalyticsExtensionManager.appSessionDidTerminate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t sub_196610()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_196644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_30C6E4);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_16CAC4;
  return ((uint64_t (*)(int, void *))((char *)&dword_30C6E0 + dword_30C6E0))(v2, v3);
}

uint64_t sub_1966B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc(dword_30CA3C);
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_16D788;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_30CA38 + dword_30CA38))(v2, v3, v4);
}

uint64_t sub_196730()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_19675C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_16B968(&qword_30B7E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id static OS_os_log.rcDataContainer.getter()
{
  if (qword_30AB08 != -1)
    swift_once(&qword_30AB08, sub_1967E0);
  return (id)qword_30C710;
}

uint64_t sub_1967E0()
{
  uint64_t result;

  sub_1792EC();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 0xD000000000000018, 0x8000000000216230);
  qword_30C710 = result;
  return result;
}

uint64_t static BRCNamespaceData.fallbackStorefrontID.getter()
{
  return 0x303030303030;
}

void sub_196874()
{
  qword_30C718 = (uint64_t)&off_292CD0;
}

void BRCNamespaceData._booksRecordID(from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  id v11;
  id v12;
  id v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  _QWORD v17[5];
  _QWORD *v18;

  v5 = v4;
  ObjectType = swift_getObjectType(v5);
  v11 = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag");
  v12 = objc_msgSend(v11, "remoteConfigSupportedStorefronts");

  v13 = objc_msgSend(v12, "valuePromise");
  v14 = (_QWORD *)swift_allocObject(&unk_294A88, 56, 7);
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = ObjectType;
  v17[4] = sub_196B38;
  v18 = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_196C0C;
  v17[3] = &unk_294AA0;
  v15 = _Block_copy(v17);
  v16 = v18;
  swift_bridgeObjectRetain(a2);
  swift_retain(a4);
  swift_release(v16);
  objc_msgSend(v13, "addFinishBlock:", v15);
  _Block_release(v15);

}

uint64_t sub_1969E0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(_QWORD *, uint64_t))
{
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v14;
  _QWORD *v16;
  uint64_t v17;

  if (!a1
    || (v16 = 0,
        static Array._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v16, &type metadata for String),
        (v8 = v16) == 0))
  {
    if (qword_30AB10 != -1)
      swift_once(&qword_30AB10, sub_196874);
    v8 = (_QWORD *)qword_30C718;
    swift_bridgeObjectRetain(qword_30C718);
    swift_bridgeObjectRelease(0);
  }
  v9 = sub_196B48(a3, (uint64_t)a4, v8);
  swift_bridgeObjectRelease(v8);
  if ((v9 & 1) != 0)
  {
    swift_bridgeObjectRetain(a4);
  }
  else
  {
    a4 = (void *)0xE600000000000000;
    a3 = 0x303030303030;
  }
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("configuration-books-"));
  v12 = v11;
  v16 = (_QWORD *)v10;
  v17 = v11;
  swift_bridgeObjectRetain(v11);
  v13._countAndFlagsBits = a3;
  v13._object = a4;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(a4);
  v14 = v17;
  a5(v16, v17);
  return swift_bridgeObjectRelease(v14);
}

uint64_t sub_196B0C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_196B38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1969E0(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(_QWORD *, uint64_t))(v2 + 32));
}

uint64_t sub_196B48(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

void sub_196C0C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  void (*v6)(void *, void *);
  id v7;
  id v8;

  v6 = *(void (**)(void *, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v8 = a2;
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

uint64_t sub_196C80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_196C90(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_196D30()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_196D54()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = String._bridgeToObjectiveC()();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

void *DisplaySleepController.window.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR___BCDisplaySleepController_window);
  swift_beginAccess(v0 + OBJC_IVAR___BCDisplaySleepController_window, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void DisplaySleepController.window.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR___BCDisplaySleepController_window);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*DisplaySleepController.window.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCDisplaySleepController_window, a1, 33, 0);
  return j__swift_endAccess;
}

id DisplaySleepController.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  *(_QWORD *)&v0[OBJC_IVAR___BCDisplaySleepController_window] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, "init");
}

id DisplaySleepController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DisplaySleepController()
{
  return objc_opt_self(BCDisplaySleepController);
}

uint64_t BooksFinished.YearEntry.year.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t BooksFinished.YearEntry.year.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*BooksFinished.YearEntry.year.modify())()
{
  return AppAnalyticsExtensionManager.didEndSession(with:);
}

uint64_t BooksFinished.YearEntry.assets.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 8));
}

uint64_t BooksFinished.YearEntry.assets.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 8));
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*BooksFinished.YearEntry.assets.modify())()
{
  return AppAnalyticsExtensionManager.didEndSession(with:);
}

uint64_t BooksFinished.State.currentYearEntry.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t BooksFinished.State.currentYearEntry.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease(v1[1]);
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t BooksFinished.State.allTimeCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t BooksFinished.State.allTimeCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*BooksFinished.State.allTimeCount.modify())()
{
  return AppAnalyticsExtensionManager.didEndSession(with:);
}

uint64_t BooksFinished.State.afterCurrentYearCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t BooksFinished.State.afterCurrentYearCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*BooksFinished.State.afterCurrentYearCount.modify())()
{
  return AppAnalyticsExtensionManager.didEndSession(with:);
}

uint64_t BooksFinished.State.priorToCurrentYearCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t BooksFinished.State.priorToCurrentYearCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*BooksFinished.State.priorToCurrentYearCount.modify())()
{
  return AppAnalyticsExtensionManager.didEndSession(with:);
}

uint64_t BooksFinished.State.init(assets:year:allTimeCount:afterCurrentYearCount:priorToCurrentYearCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = a2;
  a6[1] = result;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t BooksFinishedController.state.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 24));
}

uint64_t BooksFinishedController.currentYear.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 72, v2, 0, 0);
  return *(_QWORD *)(v0 + 72);
}

uint64_t BooksFinishedController.currentYear.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 72, v4, 1, 0);
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*BooksFinishedController.currentYear.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 72, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t BooksFinishedController.__allocating_init(dataSource:currentYear:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = swift_allocObject(v2, 80, 7);
  BooksFinishedController.init(dataSource:currentYear:)(a1, a2);
  return v5;
}

_QWORD *BooksFinishedController.init(dataSource:currentYear:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v24 = a2;
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
  static DispatchQoS.userInteractive.getter();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v8);
  *(_QWORD *)&v25 = _swiftEmptyArrayStorage;
  v15 = sub_16BDB8((unint64_t *)&qword_30B888, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v16 = sub_16B968(&qword_30B890);
  v17 = sub_1766E4((unint64_t *)&qword_30B898, &qword_30B890);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v16, v17, v5, v15);
  v3[2] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002ELL, 0x8000000000216810, v14, v7, v11, 0);
  sub_1859F0((uint64_t)a1, (uint64_t)(v3 + 4));
  v3[9] = v24;
  v25 = xmmword_26BDC0;
  v27 = 0;
  v28 = 0;
  v26 = 0;
  v18 = sub_16B968(&qword_30C750);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v3[3] = MutableObservableContainer.init(value:)(&v25);
  v19 = v3[7];
  v20 = v3[8];
  sub_185554(v3 + 4, v19);
  v21 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v20 + 48);
  swift_retain(v3);
  v21(sub_1984CC, v3, v19, v20);
  swift_release(v3);
  sub_197494();
  sub_184A38(a1);
  return v3;
}

uint64_t sub_197494()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, void (*)(uint64_t, unint64_t), uint64_t, uint64_t, uint64_t);
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void (*)(uint64_t, char, unint64_t), uint64_t, uint64_t, uint64_t);
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, void (*)(uint64_t, char, unint64_t), uint64_t, uint64_t, uint64_t);
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, void (*)(uint64_t, char, unint64_t), uint64_t, uint64_t, uint64_t);
  NSObject *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD aBlock[5];
  _QWORD *v65;
  char v66[32];

  v1 = v0;
  v56 = type metadata accessor for DispatchWorkItemFlags(0);
  v59 = *(_QWORD *)(v56 - 8);
  __chkstk_darwin(v56);
  v55 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  v4 = __chkstk_darwin(v3);
  v54 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = static os_log_type_t.debug.getter(v4);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v7 = (void *)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v6, &dword_0);

  swift_beginAccess(v1 + 9, v66, 0, 0);
  v60 = v1[9];
  v8 = swift_allocObject(&unk_294C50, 24, 7);
  *(_QWORD *)(v8 + 16) = 0;
  v62 = swift_allocObject(&unk_294C78, 24, 7);
  *(_QWORD *)(v62 + 16) = 0;
  v61 = swift_allocObject(&unk_294C78, 24, 7);
  *(_QWORD *)(v61 + 16) = 0;
  v52 = swift_allocObject(&unk_294C78, 24, 7);
  *(_QWORD *)(v52 + 16) = 0;
  v9 = dispatch_group_create();
  dispatch_group_enter(v9);
  v10 = v1[7];
  v11 = v1[8];
  sub_185554(v1 + 4, v10);
  v12 = swift_allocObject(&unk_294CA0, 32, 7);
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = v8;
  v53 = v8;
  v13 = *(void (**)(uint64_t, void (*)(uint64_t, unint64_t), uint64_t, uint64_t, uint64_t))(v11 + 8);
  v14 = v9;
  swift_retain(v8);
  v13(v60, sub_1988D8, v12, v10, v11);
  swift_release(v12);
  dispatch_group_enter(v14);
  v15 = v1[7];
  v16 = v1[8];
  sub_185554(v1 + 4, v15);
  v17 = swift_allocObject(&unk_294CC8, 32, 7);
  v18 = v62;
  *(_QWORD *)(v17 + 16) = v14;
  *(_QWORD *)(v17 + 24) = v18;
  v19 = *(void (**)(void (*)(uint64_t, char, unint64_t), uint64_t, uint64_t, uint64_t))(v16 + 24);
  v20 = v14;
  swift_retain(v18);
  v19(sub_1988E4, v17, v15, v16);
  swift_release(v17);
  dispatch_group_enter(v20);
  v21 = v1[7];
  v22 = v1[8];
  sub_185554(v1 + 4, v21);
  v23 = swift_allocObject(&unk_294CF0, 32, 7);
  v24 = v61;
  *(_QWORD *)(v23 + 16) = v20;
  *(_QWORD *)(v23 + 24) = v24;
  v25 = *(void (**)(uint64_t, void (*)(uint64_t, char, unint64_t), uint64_t, uint64_t, uint64_t))(v22 + 40);
  v26 = v20;
  swift_retain(v24);
  v27 = v60;
  v25(v60, sub_198910, v23, v21, v22);
  swift_release(v23);
  dispatch_group_enter(v26);
  v28 = v1[7];
  v29 = v1[8];
  sub_185554(v1 + 4, v28);
  v30 = swift_allocObject(&unk_294D18, 32, 7);
  v31 = v52;
  *(_QWORD *)(v30 + 16) = v26;
  *(_QWORD *)(v30 + 24) = v31;
  v32 = *(void (**)(uint64_t, void (*)(uint64_t, char, unint64_t), uint64_t, uint64_t, uint64_t))(v29 + 32);
  v33 = v26;
  swift_retain(v31);
  v32(v27, sub_198968, v30, v28, v29);
  swift_release(v30);
  v51 = v1[2];
  v34 = swift_allocObject(&unk_294D40, 24, 7);
  swift_weakInit(v34 + 16);
  v35 = (_QWORD *)swift_allocObject(&unk_294D68, 64, 7);
  v36 = v53;
  v35[2] = v34;
  v35[3] = v36;
  v38 = v61;
  v37 = v62;
  v35[4] = v27;
  v35[5] = v37;
  v35[6] = v38;
  v35[7] = v31;
  aBlock[4] = sub_1989F8;
  v65 = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_294D80;
  v39 = _Block_copy(aBlock);
  swift_retain(v36);
  swift_retain(v37);
  swift_retain(v38);
  swift_retain(v31);
  v40 = swift_retain(v34);
  v41 = v54;
  static DispatchQoS.unspecified.getter(v40);
  v63 = _swiftEmptyArrayStorage;
  v42 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v43 = sub_16B968((uint64_t *)&unk_30C330);
  v44 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
  v45 = v55;
  v46 = v43;
  v47 = v56;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v63, v46, v44, v56, v42);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v41, v45, v51, v39);
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v47);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v58);
  v48 = v65;
  swift_release(v36);
  swift_release(v62);
  swift_release(v61);
  swift_release(v31);
  swift_release(v34);
  return swift_release(v48);
}

void sub_197A04(uint64_t a1, unint64_t a2, NSObject *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18[24];
  _QWORD v19[3];
  char v20[8];

  if (a1)
  {
    swift_beginAccess(a4 + 16, v18, 1, 0);
    v7 = *(_QWORD *)(a4 + 16);
    *(_QWORD *)(a4 + 16) = a1;
    swift_bridgeObjectRetain(a1);
    v8 = v7;
  }
  else
  {
    v10 = static os_log_type_t.error.getter(0);
    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
    v11 = (void *)static OS_os_log.readingActivity.getter();
    v12 = sub_16B968(&qword_30CFD0);
    v13 = swift_allocObject(v12, 72, 7);
    *(_OWORD *)(v13 + 16) = xmmword_26BDD0;
    if (a2)
    {
      swift_getErrorValue(a2, v20, v19);
      v14 = Error.localizedDescription.getter(v19[1], v19[2]);
      a2 = v15;
    }
    else
    {
      v14 = 0;
    }
    *(_QWORD *)(v13 + 56) = &type metadata for String;
    *(_QWORD *)(v13 + 64) = sub_1852AC();
    if (a2)
      v16 = v14;
    else
      v16 = 0;
    v17 = 0xE000000000000000;
    if (a2)
      v17 = a2;
    *(_QWORD *)(v13 + 32) = v16;
    *(_QWORD *)(v13 + 40) = v17;
    os_log(_:dso:log:_:_:)(v10, &dword_0);

    v8 = v13;
  }
  swift_bridgeObjectRelease(v8);
  dispatch_group_leave(a3);
}

void sub_197B5C(uint64_t a1, char a2, unint64_t a3, NSObject *a4, uint64_t a5)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17[24];
  _QWORD v18[3];
  char v19[8];

  if ((a2 & 1) != 0)
  {
    v9 = static os_log_type_t.error.getter(a1);
    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
    v10 = (void *)static OS_os_log.readingActivity.getter();
    v11 = sub_16B968(&qword_30CFD0);
    v12 = swift_allocObject(v11, 72, 7);
    *(_OWORD *)(v12 + 16) = xmmword_26BDD0;
    if (a3)
    {
      swift_getErrorValue(a3, v19, v18);
      v13 = Error.localizedDescription.getter(v18[1], v18[2]);
      a3 = v14;
    }
    else
    {
      v13 = 0;
    }
    *(_QWORD *)(v12 + 56) = &type metadata for String;
    *(_QWORD *)(v12 + 64) = sub_1852AC();
    if (a3)
      v15 = v13;
    else
      v15 = 0;
    v16 = 0xE000000000000000;
    if (a3)
      v16 = a3;
    *(_QWORD *)(v12 + 32) = v15;
    *(_QWORD *)(v12 + 40) = v16;
    os_log(_:dso:log:_:_:)(v9, &dword_0);

    swift_bridgeObjectRelease(v12);
  }
  else
  {
    swift_beginAccess(a5 + 16, v17, 1, 0);
    *(_QWORD *)(a5 + 16) = a1;
  }
  dispatch_group_leave(a4);
}

uint64_t sub_197CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 24);
    swift_retain(v4);
    v5 = swift_release(v3);
    __chkstk_darwin(v5);
    MutableObservableContainer.mutate(_:)(sub_198A20);
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_197D8C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18[24];
  char v19[24];
  char v20[24];

  sub_17630C(*a1, a1[1]);
  swift_beginAccess(a2, v20, 0, 0);
  v12 = *a2;
  swift_beginAccess(a4, v19, 0, 0);
  v13 = *a4;
  swift_beginAccess(a5, v18, 0, 0);
  v14 = *a5;
  swift_beginAccess(a6, &v17, 0, 0);
  v15 = *a6;
  *a1 = a3;
  a1[1] = v12;
  a1[2] = v13;
  a1[3] = v14;
  a1[4] = v15;
  return swift_bridgeObjectRetain(v12);
}

uint64_t BooksFinishedController.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_184A38((_QWORD *)(v0 + 32));
  return v0;
}

uint64_t BooksFinishedController.__deallocating_deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_184A38((_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t sub_197EB8()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 24));
}

Swift::Void __swiftcall BooksFinishedController.setState(year:)(Swift::Int year)
{
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v1 + 72, v3, 1, 0);
  *(_QWORD *)(v1 + 72) = year;
  sub_197494();
}

uint64_t sub_197F04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = *v1;
  swift_beginAccess(v3 + 72, v5, 1, 0);
  *(_QWORD *)(v3 + 72) = a1;
  return sub_197494();
}

uint64_t sub_197F48(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v17;

  v2 = a1[2];
  if (v2 != a2[2])
    goto LABEL_7;
  if (!v2 || a1 == a2)
    goto LABEL_6;
  v5 = a1[4];
  v6 = a2[4];
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  v7 = sub_198104(v5, v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  if ((v7 & 1) == 0)
  {
LABEL_7:
    v8 = 0;
    return v8 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    v8 = 1;
    return v8 & 1;
  }
  v10 = v2 - 2;
  v11 = a1 + 5;
  v12 = a2 + 5;
  do
  {
    v14 = *v11++;
    v13 = v14;
    v15 = *v12++;
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v15);
    v8 = sub_198104(v13, v15);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v15);
    v17 = v10-- != 0;
  }
  while ((v8 & 1) != 0 && v17);
  return v8 & 1;
}

uint64_t sub_198040(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4];
  v6 = a1[5];
  v7 = a2[4];
  v8 = a2[5];
  v9 = v5 == v7 && v6 == v8;
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v7, v8, 0), result = 0, (v10 & 1) != 0))
  {
    v12 = v2 - 1;
    if (!v12)
      return 1;
    v13 = a1 + 7;
    for (i = a2 + 7; ; i += 2)
    {
      v15 = *(v13 - 1);
      v16 = *v13;
      v17 = *(i - 1);
      v18 = *i;
      v19 = v15 == v17 && v16 == v18;
      if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v17, v18, 0) & 1) == 0)
        break;
      v13 += 2;
      if (!--v12)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_198104(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  int64_t v22;
  _BYTE v23[40];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v21 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v22 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
LABEL_8:
      v10 = *(_QWORD *)(v3 + 56);
      v11 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v9);
      v12 = v11[1];
      *(_QWORD *)&v24 = *v11;
      *((_QWORD *)&v24 + 1) = v12;
      sub_176320(v10 + 40 * v9, (uint64_t)&v25);
      swift_bridgeObjectRetain(v12);
      goto LABEL_27;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v13 < v22)
    {
      v14 = *(_QWORD *)(v21 + 8 * v13);
      if (v14)
        goto LABEL_12;
      v15 = v4 + 2;
      ++v4;
      if (v13 + 1 < v22)
      {
        v14 = *(_QWORD *)(v21 + 8 * v15);
        if (v14)
          goto LABEL_15;
        v4 = v13 + 1;
        if (v13 + 2 < v22)
        {
          v14 = *(_QWORD *)(v21 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_12;
          }
          v15 = v13 + 3;
          v4 = v13 + 2;
          if (v13 + 3 < v22)
            break;
        }
      }
    }
LABEL_26:
    v7 = 0;
    v27 = 0;
    v25 = 0u;
    v26 = 0u;
    v24 = 0u;
LABEL_27:
    sub_198A30((uint64_t)&v24, (uint64_t)&v28);
    v16 = v29;
    if (!v29)
      return 1;
    v24 = v30;
    v25 = v31;
    *(_QWORD *)&v26 = v32;
    v17 = sub_187F9C(v28, v29);
    v19 = v18;
    swift_bridgeObjectRelease(v16);
    if ((v19 & 1) == 0)
    {
      sub_176638((uint64_t)&v24);
      return 0;
    }
    sub_176320(*(_QWORD *)(a2 + 56) + 40 * v17, (uint64_t)v23);
    v20 = static AnyHashable.== infix(_:_:)(v23, &v24);
    sub_176638((uint64_t)v23);
    result = sub_176638((uint64_t)&v24);
    if ((v20 & 1) == 0)
      return 0;
  }
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v13 = v15;
LABEL_12:
    v7 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v13 << 6);
    v4 = v13;
    goto LABEL_8;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v22)
    {
      v4 = v22 - 1;
      goto LABEL_26;
    }
    v14 = *(_QWORD *)(v21 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

BOOL _s8BookCore13BooksFinishedO5StateV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BOOL8 result;

  if (*a1 != *a2)
    return 0;
  v2 = (_QWORD *)a1[1];
  v3 = a1[2];
  v5 = a1[3];
  v4 = a1[4];
  v6 = (_QWORD *)a2[1];
  v7 = a2[2];
  v9 = a2[3];
  v8 = a2[4];
  if (!v2)
  {
    if (!v6 && v3 == v7 && v5 == v9)
      return v4 == v8;
    return 0;
  }
  if (!v6)
    return 0;
  swift_bridgeObjectRetain(a1[1]);
  swift_bridgeObjectRetain(v6);
  v10 = sub_197F48(v2, v6);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v6);
  result = 0;
  if ((v10 & 1) != 0 && v3 == v7 && v5 == v9)
    return v4 == v8;
  return result;
}

uint64_t _s8BookCore13BooksFinishedO9YearEntryV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  char v5;

  if (*a1 == *a2)
  {
    v2 = a1[1];
    v3 = (_QWORD *)a2[1];
    if (v2)
    {
      if (v3)
      {
        swift_bridgeObjectRetain(a2[1]);
        v4 = (_QWORD *)swift_bridgeObjectRetain(v2);
        v5 = sub_197F48(v4, v3);
        swift_bridgeObjectRelease(v2);
        swift_bridgeObjectRelease(v3);
        if ((v5 & 1) != 0)
          return 1;
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

ValueMetadata *type metadata accessor for BooksFinished()
{
  return &type metadata for BooksFinished;
}

_QWORD *assignWithCopy for BooksFinished.YearEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *a1 = *a2;
  v3 = a1[1];
  v4 = a2[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v3);
  return a1;
}

_QWORD *assignWithTake for BooksFinished.YearEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksFinished.YearEntry(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BooksFinished.YearEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksFinished.YearEntry()
{
  return &type metadata for BooksFinished.YearEntry;
}

uint64_t initializeWithCopy for BooksFinished.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for BooksFinished.State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a1[1];
  v5 = a2[1];
  a1[1] = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v4);
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

__n128 initializeWithTake for BooksFinished.State(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BooksFinished.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksFinished.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BooksFinished.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksFinished.State()
{
  return &type metadata for BooksFinished.State;
}

uint64_t dispatch thunk of BooksFinishedDataSource.fetchFinishedAssets(year:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of BooksFinishedDataSource.fetchFinishedAssets(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v7 = *(int **)(a3 + 16);
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_16D4EC;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of ReadingHistoryEventProcessor.setReadingHistory(beginning:ending:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of BooksFinishedDataSource.fetchFinishedAssetCountPriorTo(year:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of BooksFinishedDataSource.fetchFinishedAssetCountAfter(year:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of BooksFinishedDataSource.setOnChange(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t type metadata accessor for BooksFinishedController()
{
  return objc_opt_self(_TtC8BookCore23BooksFinishedController);
}

uint64_t method lookup function for BooksFinishedController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BooksFinishedController);
}

uint64_t dispatch thunk of FrontmostApplicationTracker.__allocating_init(uiApplication:appKitBundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1988A0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1988C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1988D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_197A04(a1, a2, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1988E4(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v3;

  sub_197B5C(a1, a2 & 1, a3, *(NSObject **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

void sub_198910(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v3;

  sub_197B5C(a1, a2 & 1, a3, *(NSObject **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_19893C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_198968(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v3;

  sub_197B5C(a1, a2 & 1, a3, *(NSObject **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_198990()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1989B4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  swift_release(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1989F8()
{
  uint64_t v0;

  return sub_197CB0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_198A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_198A18(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_198A20(uint64_t *a1)
{
  uint64_t v1;

  return sub_197D8C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t **)(v1 + 32), *(uint64_t **)(v1 + 40), *(uint64_t **)(v1 + 48));
}

uint64_t sub_198A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_16B968(&qword_30C818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_198AC4()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___BCEngagementEventController_dataProvider);
  swift_beginAccess(v0 + OBJC_IVAR___BCEngagementEventController_dataProvider, v3, 0, 0);
  return swift_unknownObjectRetain(*v1);
}

uint64_t sub_198B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___BCEngagementEventController_dataProvider);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_198BC0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR___BCEngagementEventController_dataProvider);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_unknownObjectRetain(v2);
  return swift_unknownObjectRelease(v4);
}

uint64_t (*sub_198C28(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCEngagementEventController_dataProvider, a1, 33, 0);
  return j__swift_endAccess;
}

id EngagementEventController.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___BCEngagementEventController_dataProvider] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EngagementEventController();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for EngagementEventController()
{
  return objc_opt_self(BCEngagementEventController);
}

void sub_198D10(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void **v14;
  void *v15;
  NSString v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  uint64_t aBlock[5];
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  if (qword_30AB38 != -1)
    swift_once(&qword_30AB38, sub_1A1428);
  v8 = type metadata accessor for Logger(0);
  sub_178770(v8, (uint64_t)qword_30CC08);
  v9 = swift_bridgeObjectRetain_n(a2, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.debug.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain(a2);
    v23 = sub_1995C0(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl(&dword_0, v10, v11, "Submit event name: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v14 = (void **)(v4 + OBJC_IVAR___BCEngagementEventController_dataProvider);
  swift_beginAccess(v4 + OBJC_IVAR___BCEngagementEventController_dataProvider, &v23, 0, 0);
  v15 = *v14;
  if (v15)
  {
    swift_unknownObjectRetain(v15);
    v16 = String._bridgeToObjectiveC()();
    v17 = swift_allocObject(&unk_294DC8, 24, 7);
    swift_unknownObjectWeakInit(v17 + 16, v4);
    v18 = (_QWORD *)swift_allocObject(&unk_294DF0, 48, 7);
    v18[2] = v17;
    v18[3] = a3;
    v18[4] = a1;
    v18[5] = a2;
    aBlock[4] = (uint64_t)sub_199FD8;
    v22 = v18;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_199394;
    aBlock[3] = (uint64_t)&unk_294E08;
    v19 = _Block_copy(aBlock);
    v20 = v22;
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(a2);
    swift_release(v20);
    objc_msgSend(v15, "engagementEventDataForEventWithEventName:completion:", v16, v19);
    _Block_release(v19);
    swift_unknownObjectRelease(v15);

  }
  else
  {
    sub_199DBC(a1, a2, 0);
  }
}

void sub_198FDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void *Strong;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[24];
  uint64_t v33[3];
  void *v34;
  char v35[24];

  v10 = a3 + 16;
  swift_beginAccess(a3 + 16, v35, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v12 = Strong;
    if (a1)
    {
      v34 = a1;
      if (a4)
      {
        __chkstk_darwin(Strong);
        swift_bridgeObjectRetain(a1);
        sub_199C00(a4, (void (*)(uint64_t, uint64_t, _BYTE *))sub_19A0B4);
      }
      else
      {
        swift_bridgeObjectRetain(a1);
      }
      if (qword_30AB38 != -1)
        swift_once(&qword_30AB38, sub_1A1428);
      v17 = type metadata accessor for Logger(0);
      sub_178770(v17, (uint64_t)qword_30CC08);
      v18 = Logger.logObject.getter();
      v19 = static os_log_type_t.debug.getter(v18);
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(12, -1);
        v30 = swift_slowAlloc(32, -1);
        v33[0] = v30;
        *(_DWORD *)v20 = 136315138;
        swift_beginAccess(&v34, v32, 0, 0);
        v21 = v34;
        v22 = swift_bridgeObjectRetain(v34);
        v23 = a5;
        v24 = a6;
        v25 = Dictionary.description.getter(v22, &type metadata for String);
        v27 = v26;
        swift_bridgeObjectRelease(v21);
        v28 = v25;
        a6 = v24;
        a5 = v23;
        v31 = sub_1995C0(v28, v27, v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32, v20 + 4, v20 + 12);
        swift_bridgeObjectRelease(v27);
        _os_log_impl(&dword_0, v18, v19, "data to send with event: %s", v20, 0xCu);
        swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1, -1);
        swift_slowDealloc(v20, -1, -1);
      }

      swift_beginAccess(&v34, v33, 0, 0);
      v29 = v34;
      swift_bridgeObjectRetain(v34);
      sub_199DBC(a5, a6, v29);

      swift_bridgeObjectRelease_n(v29, 2);
      return;
    }

  }
  if (qword_30AB38 != -1)
    swift_once(&qword_30AB38, sub_1A1428);
  v13 = type metadata accessor for Logger(0);
  sub_178770(v13, (uint64_t)qword_30CC08);
  v14 = Logger.logObject.getter();
  v15 = static os_log_type_t.error.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_0, v14, v15, "No data received to send with event.", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

}

uint64_t sub_19933C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[32];

  sub_17666C(a3, (uint64_t)v6);
  swift_bridgeObjectRetain(a2);
  return sub_186F78((uint64_t)v6, a1, a2);
}

uint64_t sub_199394(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  uint64_t v6;
  id v7;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  if (a2)
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  else
    v6 = 0;
  swift_retain(v4);
  v7 = a3;
  v5(v6, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v6);
}

void sub_1994B4()
{
  uint64_t v0;
  os_log_type_t v1;
  uint8_t *v2;
  NSObject *oslog;

  if (qword_30AB38 != -1)
    swift_once(&qword_30AB38, sub_1A1428);
  v0 = type metadata accessor for Logger(0);
  sub_178770(v0, (uint64_t)qword_30CC08);
  oslog = Logger.logObject.getter();
  v1 = static os_log_type_t.debug.getter(oslog);
  if (os_log_type_enabled(oslog, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_0, oslog, v1, "Promise for data enqeue did finish.", v2, 2u);
    swift_slowDealloc(v2, -1, -1);
  }

}

id EngagementEventController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EngagementEventController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1995C0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_199690(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_17666C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_17666C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_184A38(v12);
  return v7;
}

uint64_t sub_199690(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_199848(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_199848(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_1998DC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_199AB4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_199AB4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_1998DC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_199A50(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return &_swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_199A50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return &_swiftEmptyArrayStorage;
  v4 = sub_16B968((uint64_t *)&unk_30C850);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_199AB4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_16B968((uint64_t *)&unk_30C850);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_199C00(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD v18[2];
  _BYTE v19[32];
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain(a1);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      return swift_release(a1);
    v16 = *(_QWORD *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release(a1);
      v16 = *(_QWORD *)(v20 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release(a1);
        v16 = *(_QWORD *)(v20 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release(a1);
          v16 = *(_QWORD *)(v20 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_17666C(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain(v14);
    a2(v13, v14, v19);
    result = sub_19A0BC((uint64_t)v18);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release(a1);
  v16 = *(_QWORD *)(v20 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v7)
      return swift_release(a1);
    v16 = *(_QWORD *)(v20 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_199DBC(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  Class isa;
  id v12;
  void *v13;
  __int128 aBlock;
  void (*v15)(uint64_t, void *, void *);
  void *v16;
  void (*v17)();
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];

  v16 = &type metadata for String;
  if (a3)
    v5 = a3;
  else
    v5 = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&aBlock = a1;
  *((_QWORD *)&aBlock + 1) = a2;
  sub_17992C(&aBlock, v20);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
  v19 = (uint64_t)v5;
  sub_188EAC(v20, 0x707954746E657665, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
  v7 = v19;
  swift_bridgeObjectRelease(0x8000000000000000);
  v8 = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag");
  v9 = objc_msgSend(objc_allocWithZone((Class)AMSEngagement), "initWithBag:", v8);

  v10 = sub_19B930(v7);
  swift_bridgeObjectRelease(v7);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  v12 = objc_msgSend(v9, "enqueueData:", isa);

  v17 = sub_1994B4;
  v18 = 0;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v15 = sub_196C0C;
  v16 = &unk_294E40;
  v13 = _Block_copy(&aBlock);
  objc_msgSend(v12, "addFinishBlock:", v13);
  _Block_release(v13);

}

uint64_t sub_199F80()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_199FA4()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_199FD8(void *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_198FDC(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_199FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_199FF4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_199FFC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___BCEngagementEventController_dataProvider);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_unknownObjectRetain(v4);
}

uint64_t method lookup function for EngagementEventController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for EngagementEventController);
}

uint64_t dispatch thunk of EngagementEventController.dataProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_20.maxprot + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EngagementEventController.dataProvider.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_20.nsects + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of EngagementEventController.submitEvent(_:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t sub_19A0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19933C(a1, a2, a3);
}

uint64_t sub_19A0BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_16B968(&qword_30C358);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static SeriesManagerUpdaterHelper.gatherAllAssetAdamIDs(in:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_30C870 + dword_30C870);
  v3 = (_QWORD *)swift_task_alloc(unk_30C874);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_16C724;
  return v5(a1);
}

uint64_t sub_19A164(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_19A81C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

_QWORD *sub_19A2B4(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  _OWORD v10[2];
  _QWORD *v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v11 = _swiftEmptyArrayStorage;
    sub_185FA0(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9[0] = *(v4 - 1);
      v9[1] = v5;
      swift_bridgeObjectRetain(v5);
      swift_dynamicCast(v10, v9, &type metadata for String, (char *)&type metadata for Any + 8, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_185FA0(0, v2[2] + 1, 1);
        v2 = v11;
      }
      v7 = v2[2];
      v6 = v2[3];
      if (v7 >= v6 >> 1)
      {
        sub_185FA0(v6 > 1, v7 + 1, 1);
        v2 = v11;
      }
      v4 += 2;
      v2[2] = v7 + 1;
      sub_17992C(v10, &v2[4 * v7 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_19A504(uint64_t a1, void *aBlock)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v2[2] = _Block_copy(aBlock);
  v4 = sub_16B968(&qword_30CA90);
  v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a1, &type metadata for String, v4, &protocol witness table for String);
  v2[3] = v5;
  v8 = (uint64_t (*)(uint64_t))((char *)&dword_30C870 + dword_30C870);
  v6 = (_QWORD *)swift_task_alloc(unk_30C874);
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_19A5A0;
  return v8(v5);
}

uint64_t sub_19A5A0(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  void *v9;

  v3 = v1;
  v6 = *(_QWORD *)(*v2 + 24);
  v5 = *(_QWORD *)(*v2 + 32);
  v7 = *v2;
  swift_task_dealloc(v5);
  swift_bridgeObjectRelease(v6);
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 16);
  if (v3)
  {
    v9 = (void *)_convertErrorToNSError(_:)(v3);
    swift_errorRelease(v3);
    ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v9);

    _Block_release(v8);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v8)[2](*(_QWORD *)(v7 + 16), a1, 0);
    _Block_release(v8);

  }
  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_19A65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _QWORD, uint64_t);
  uint64_t result;

  v0 = sub_16B968(&qword_30C8D8);
  v1 = type metadata accessor for MResourceType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 + 2 * v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_26BF80;
  v7 = v6 + v5;
  v8 = *(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104);
  v8(v7, enum case for MResourceType.bookSeries(_:), v1);
  result = ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v8)(v7 + v3, enum case for MResourceType.audiobookSeries(_:), v1);
  off_30C860 = (int *)v6;
  return result;
}

id SeriesManagerUpdaterHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeriesManagerUpdaterHelper();
  return objc_msgSendSuper2(&v2, "init");
}

id SeriesManagerUpdaterHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeriesManagerUpdaterHelper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

_QWORD *sub_19A81C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_16B968((uint64_t *)&unk_30C8E0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_19A928(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_19A928(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_19AA18(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch(sub_19AA30, 0, 0);
}

uint64_t sub_19AA30()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  Class isa;
  id v23;

  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v0 + 72) = v2;
  v3 = v1 + 64;
  v4 = 1 << v2;
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain(v1);
  v9 = 0;
  while (v6)
  {
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v11 = v10 | (v9 << 6);
LABEL_5:
    *(_QWORD *)(v0 + 32) = v6;
    *(_QWORD *)(v0 + 40) = v9;
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v11);
    *(_QWORD *)(v0 + 48) = v12;
    v13 = type metadata accessor for MSeries(0);
    result = swift_dynamicCastClass(v12, v13);
    *(_QWORD *)(v0 + 56) = result;
    if (result)
    {
      v17 = async function pointer to MSeries.fetchAllAssets()[1];
      swift_unknownObjectRetain_n(v12, 2);
      v18 = (_QWORD *)swift_task_alloc(v17);
      *(_QWORD *)(v0 + 64) = v18;
      *v18 = v0;
      v18[1] = sub_19AC88;
      return MSeries.fetchAllAssets()();
    }
  }
  v14 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v7)
    goto LABEL_24;
  v15 = *(_QWORD *)(v3 + 8 * v14);
  ++v9;
  if (v15)
    goto LABEL_22;
  v9 = v14 + 1;
  if (v14 + 1 >= v7)
    goto LABEL_24;
  v15 = *(_QWORD *)(v3 + 8 * v9);
  if (v15)
    goto LABEL_22;
  v9 = v14 + 2;
  if (v14 + 2 >= v7)
    goto LABEL_24;
  v15 = *(_QWORD *)(v3 + 8 * v9);
  if (v15)
    goto LABEL_22;
  v9 = v14 + 3;
  if (v14 + 3 >= v7)
    goto LABEL_24;
  v15 = *(_QWORD *)(v3 + 8 * v9);
  if (v15)
  {
LABEL_22:
    v6 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v9 << 6);
    goto LABEL_5;
  }
  v16 = v14 + 4;
  if (v16 >= v7)
  {
LABEL_24:
    swift_release(v1);
    v19 = *(_QWORD *)(v0 + 16);
    v20 = sub_19A2B4(v19);
    swift_bridgeObjectRelease(v19);
    v21 = objc_allocWithZone((Class)NSArray);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v20);
    v23 = objc_msgSend(v21, "initWithArray:", isa);

    return (*(uint64_t (**)(id))(v0 + 8))(v23);
  }
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v9 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v7)
      goto LABEL_24;
    v15 = *(_QWORD *)(v3 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_19AC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 64));
  if (v0)
  {
    swift_errorRelease(v0);
    v2 = sub_19B92C;
  }
  else
  {
    v2 = sub_19ACF4;
  }
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_19ACF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  Class isa;
  id v40;

  v1 = MSeries.assets.getter();
  if (!v1)
    goto LABEL_26;
  v2 = v1;
  if ((unint64_t)v1 >> 62)
  {
    if (v1 >= 0)
      v22 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v22 = v1;
    swift_bridgeObjectRetain(v1);
    result = _CocoaArrayWrapper.endIndex.getter(v22);
    v3 = result;
    if (result)
      goto LABEL_4;
  }
  else
  {
    v3 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain(v1);
    if (v3)
    {
LABEL_4:
      if (v3 < 1)
        goto LABEL_50;
      if ((v2 & 0xC000000000000001) != 0)
      {
        v5 = 0;
        v6 = _swiftEmptyArrayStorage;
        do
        {
          v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
          v8 = MResource.id.getter();
          v10 = v9;
          swift_unknownObjectRelease(v7);
          if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
            v6 = sub_19A81C(0, v6[2] + 1, 1, v6);
          v12 = v6[2];
          v11 = v6[3];
          if (v12 >= v11 >> 1)
            v6 = sub_19A81C((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
          ++v5;
          v6[2] = v12 + 1;
          v13 = &v6[2 * v12];
          v13[4] = v8;
          v13[5] = v10;
        }
        while (v3 != v5);
      }
      else
      {
        v14 = (id *)(v2 + 32);
        v6 = _swiftEmptyArrayStorage;
        do
        {
          v15 = *v14;
          v16 = MResource.id.getter();
          v18 = v17;

          if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
            v6 = sub_19A81C(0, v6[2] + 1, 1, v6);
          v20 = v6[2];
          v19 = v6[3];
          if (v20 >= v19 >> 1)
            v6 = sub_19A81C((_QWORD *)(v19 > 1), v20 + 1, 1, v6);
          v6[2] = v20 + 1;
          v21 = &v6[2 * v20];
          v21[4] = v16;
          v21[5] = v18;
          ++v14;
          --v3;
        }
        while (v3);
      }
      goto LABEL_25;
    }
  }
  v6 = _swiftEmptyArrayStorage;
LABEL_25:
  swift_bridgeObjectRelease_n(v2, 2);
  sub_19A164((uint64_t)v6);
LABEL_26:
  result = swift_unknownObjectRelease_n(*(_QWORD *)(v0 + 48), 2);
  v24 = *(_QWORD *)(v0 + 32);
  v23 = *(_QWORD *)(v0 + 40);
  while (v24)
  {
    v25 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    v26 = v25 | (v23 << 6);
    result = *(_QWORD *)(v0 + 24);
LABEL_28:
    *(_QWORD *)(v0 + 32) = v24;
    *(_QWORD *)(v0 + 40) = v23;
    v27 = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * v26);
    *(_QWORD *)(v0 + 48) = v27;
    v28 = type metadata accessor for MSeries(0);
    result = swift_dynamicCastClass(v27, v28);
    *(_QWORD *)(v0 + 56) = result;
    if (result)
    {
      v34 = async function pointer to MSeries.fetchAllAssets()[1];
      swift_unknownObjectRetain_n(v27, 2);
      v35 = (_QWORD *)swift_task_alloc(v34);
      *(_QWORD *)(v0 + 64) = v35;
      *v35 = v0;
      v35[1] = sub_19AC88;
      return MSeries.fetchAllAssets()();
    }
  }
  v29 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  v30 = (unint64_t)((1 << *(_BYTE *)(v0 + 72)) + 63) >> 6;
  result = *(_QWORD *)(v0 + 24);
  if (v29 >= v30)
    goto LABEL_47;
  v31 = result + 64;
  v32 = *(_QWORD *)(result + 64 + 8 * v29);
  ++v23;
  if (v32)
    goto LABEL_45;
  v23 = v29 + 1;
  if (v29 + 1 >= v30)
    goto LABEL_47;
  v32 = *(_QWORD *)(v31 + 8 * v23);
  if (v32)
    goto LABEL_45;
  v23 = v29 + 2;
  if (v29 + 2 >= v30)
    goto LABEL_47;
  v32 = *(_QWORD *)(v31 + 8 * v23);
  if (v32)
    goto LABEL_45;
  v23 = v29 + 3;
  if (v29 + 3 >= v30)
    goto LABEL_47;
  v32 = *(_QWORD *)(v31 + 8 * v23);
  if (v32)
  {
LABEL_45:
    v24 = (v32 - 1) & v32;
    v26 = __clz(__rbit64(v32)) + (v23 << 6);
    goto LABEL_28;
  }
  v33 = v29 + 4;
  if (v33 >= v30)
  {
LABEL_47:
    swift_release(result);
    v36 = *(_QWORD *)(v0 + 16);
    v37 = sub_19A2B4(v36);
    swift_bridgeObjectRelease(v36);
    v38 = objc_allocWithZone((Class)NSArray);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v37);
    v40 = objc_msgSend(v38, "initWithArray:", isa);

    return (*(uint64_t (**)(id))(v0 + 8))(v40);
  }
  v32 = *(_QWORD *)(v31 + 8 * v33);
  if (v32)
  {
    v23 = v33;
    goto LABEL_45;
  }
  while (1)
  {
    v23 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v23 >= v30)
      goto LABEL_47;
    v32 = *(_QWORD *)(v31 + 8 * v23);
    ++v33;
    if (v32)
      goto LABEL_45;
  }
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t _s8BookCore26SeriesManagerUpdaterHelperC6update_4with2inySo12BKSeriesItemC_So9BFMSeries_pSo0J28DatabaseManagedObjectContextCtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  char v17;
  id v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  unint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  char v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  id v46;
  char *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  id v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  Class isa;
  id v63;
  char v64;
  id v65;
  uint64_t v66;
  char *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;

  v4 = type metadata accessor for MResourceType(0);
  v79 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v66 - v9;
  __chkstk_darwin(v8);
  v12 = (char *)&v66 - v11;
  v13 = type metadata accessor for MSeries(0);
  result = swift_dynamicCastClass(a2, v13);
  if (!result)
    return result;
  v67 = v7;
  v69 = a2;
  v15 = swift_unknownObjectRetain(a2);
  v16 = a1;
  v17 = dispatch thunk of MSeries.isAudiobookSeries.getter(v15);
  v18 = objc_allocWithZone((Class)NSNumber);
  if ((v17 & 1) != 0)
    v19 = 2;
  else
    v19 = 4;
  v20 = objc_msgSend(v18, "initWithShort:", v19);
  v68 = v16;
  objc_msgSend(v16, "setItemTypeRaw:", v20);

  v21 = MResource.sparseResources<A>(for:)(BFMCatalogRequestRelationshipMappedSeries, v13);
  if (!v21)
    goto LABEL_52;
  v22 = v21;
  v23 = v21 & 0xFFFFFFFFFFFFFF8;
  if (v21 >> 62)
    goto LABEL_47;
  v24 = *(_QWORD *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v21);
  if (!v24)
  {
LABEL_51:
    swift_bridgeObjectRelease_n(v22, 2);
    goto LABEL_52;
  }
LABEL_8:
  v25 = 0;
  v76 = v22 & 0xC000000000000001;
  v70 = v22 + 32;
  v72 = v24;
  v73 = v22;
  v81 = v10;
  while (1)
  {
    if (v76)
    {
      v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v22);
      v27 = __OFADD__(v25++, 1);
      if (v27)
        goto LABEL_45;
    }
    else
    {
      v26 = *(_QWORD *)(v70 + 8 * v25);
      swift_retain(v26);
      v27 = __OFADD__(v25++, 1);
      if (v27)
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    if (qword_30AB18 != -1)
      swift_once(&qword_30AB18, sub_19A65C);
    v28 = off_30C860;
    v29 = swift_bridgeObjectRetain(off_30C860);
    MSparseResource.type.getter(v29);
    v30 = *(_QWORD *)((char *)&dword_10 + (_QWORD)v28);
    if (!v30)
    {
      v37 = *(void (**)(char *, uint64_t))(v79 + 8);
      v37(v12, v4);
      goto LABEL_24;
    }
    v77 = v26;
    v31 = v79;
    v71 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    v32 = (char *)v28 + v71;
    v33 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
    v33(v81, (char *)v28 + v71, v4);
    v34 = sub_19B8E4();
    swift_bridgeObjectRetain(v28);
    v78 = v34;
    v35 = dispatch thunk of static Equatable.== infix(_:_:)(v81, v12, v4, v34);
    v36 = *(void (**)(char *, uint64_t))(v31 + 8);
    v10 = v81;
    v80 = v36;
    v36(v81, v4);
    if ((v35 & 1) != 0)
    {
LABEL_18:
      swift_bridgeObjectRelease(v28);
      LOBYTE(v30) = 1;
      goto LABEL_22;
    }
    if (v30 != 1)
    {
      v75 = *(_QWORD *)(v79 + 72);
      v33(v10, &v32[v75], v4);
      v38 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v12, v4, v78);
      v80(v10, v4);
      if ((v38 & 1) != 0)
        goto LABEL_18;
      if (v30 != 2)
      {
        v66 = v25;
        v74 = v12;
        v39 = (char *)v28 + 2 * v75 + v71;
        v12 = (_BYTE *)(&dword_0 + 2);
        while (1)
        {
          v33(v10, v39, v4);
          v22 = (uint64_t)(v12 + 1);
          if (__OFADD__(v12, 1))
            break;
          v40 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v74, v4, v78);
          v37 = v80;
          v80(v10, v4);
          if ((v40 & 1) != 0)
          {
            swift_bridgeObjectRelease(v28);
            LOBYTE(v30) = 1;
            v22 = v73;
            v12 = v74;
            v26 = v77;
            v24 = v72;
            v25 = v66;
            goto LABEL_23;
          }
          ++v12;
          v39 += v75;
          v10 = v81;
          if (v22 == v30)
          {
            swift_bridgeObjectRelease(v28);
            LOBYTE(v30) = 0;
            v22 = v73;
            v12 = v74;
            v26 = v77;
            v24 = v72;
            v37 = v80;
            v25 = v66;
            v80(v74, v4);
            goto LABEL_24;
          }
        }
LABEL_46:
        __break(1u);
LABEL_47:
        if (v22 >= 0)
          v52 = v23;
        else
          v52 = v22;
        swift_bridgeObjectRetain(v22);
        v24 = _CocoaArrayWrapper.endIndex.getter(v52);
        if (!v24)
          goto LABEL_51;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease(v28);
    LOBYTE(v30) = 0;
LABEL_22:
    v26 = v77;
    v24 = v72;
    v22 = v73;
    v37 = v80;
LABEL_23:
    v37(v12, v4);
LABEL_24:
    swift_bridgeObjectRelease(v28);
    if ((v30 & 1) != 0)
      break;
    swift_release(v26);
    if (v25 == v24)
      goto LABEL_51;
  }
  v41 = v37;
  v42 = swift_bridgeObjectRelease_n(v22, 2);
  MSparseResource.id.getter(v42);
  v44 = v43;
  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v44);
  v46 = v68;
  objc_msgSend(v68, "setMappedItemId:", v45);

  v47 = v67;
  MSparseResource.type.getter(v48);
  v49 = (*(uint64_t (**)(char *, uint64_t))(v79 + 88))(v47, v4);
  if (v49 == enum case for MResourceType.audiobooks(_:))
  {
    v50 = 1;
LABEL_43:
    v51 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithShort:", v50);
    objc_msgSend(v46, "setMappedItemTypeRaw:", v51);
    swift_release(v26);

    goto LABEL_52;
  }
  if (v49 == enum case for MResourceType.audiobookSeries(_:))
  {
    v50 = 2;
    goto LABEL_43;
  }
  if (v49 == enum case for MResourceType.books(_:))
  {
    v50 = 3;
    goto LABEL_43;
  }
  if (v49 == enum case for MResourceType.bookSeries(_:))
  {
    v50 = 4;
    goto LABEL_43;
  }
  v41(v47, v4);
  objc_msgSend(v46, "setMappedItemTypeRaw:", 0);
  swift_release(v26);
LABEL_52:
  v53 = type metadata accessor for MAudiobookSeries(0);
  v54 = v69;
  if (swift_dynamicCastClass(v69, v53))
  {
    v55 = swift_unknownObjectRetain(v54);
    v56 = MAudiobookSeries.hasUniqueNarrators.getter(v55);
    v57 = v68;
    if (v56 == 2)
    {
      v58 = MAudiobookSeries.narratorCount.getter();
      if ((v59 & 1) != 0)
        goto LABEL_55;
LABEL_61:
      v65 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v58);
      objc_msgSend(v57, "setNarratorCount:", v65);

      v60 = ((uint64_t (*)(void))MAudiobookSeries.narratorNames.getter)();
      if (!v60)
        goto LABEL_57;
LABEL_56:
      v61 = v60;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v61);
      objc_msgSend(v57, "setNarratorNames:", isa);

      goto LABEL_57;
    }
    v63 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithBool:", v56 & 1);
    objc_msgSend(v57, "setHasTooManyNarrators:", v63);

    v58 = MAudiobookSeries.narratorCount.getter();
    if ((v64 & 1) == 0)
      goto LABEL_61;
LABEL_55:
    v60 = MAudiobookSeries.narratorNames.getter(v58);
    if (v60)
      goto LABEL_56;
LABEL_57:
    swift_unknownObjectRelease(v54);
  }
  return swift_unknownObjectRelease(v54);
}

uint64_t type metadata accessor for SeriesManagerUpdaterHelper()
{
  return objc_opt_self(BKSeriesManagerUpdaterHelper);
}

uint64_t sub_19B7C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_19B7EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc(dword_30C8AC);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_16CAC4;
  return ((uint64_t (*)(uint64_t, void *))((char *)&dword_30C8A8 + dword_30C8A8))(v2, v3);
}

uint64_t sub_19B860(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_30CA4C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_16D788;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_30CA48 + dword_30CA48))(a1, v4, v5, v6);
}

unint64_t sub_19B8E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30C8D0;
  if (!qword_30C8D0)
  {
    v1 = type metadata accessor for MResourceType(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MResourceType, v1);
    atomic_store(result, (unint64_t *)&qword_30C8D0);
  }
  return result;
}

uint64_t sub_19B930(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_16B968(&qword_30C3D0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_17666C(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_17992C(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_17992C(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_17992C(v37, v38);
    sub_17992C(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_17992C(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_18538C(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_19BCF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t result;
  int64_t i;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    sub_16B968(a2);
    v4 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v3);
  }
  else
  {
    v4 = &_swiftEmptyDictionarySingleton;
  }
  v30 = a1 + 64;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain(a1);
  i = 0;
  if (v7)
    goto LABEL_10;
LABEL_11:
  v14 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v14 >= v29)
    goto LABEL_32;
  v15 = *(_QWORD *)(v30 + 8 * v14);
  v16 = i + 1;
  if (!v15)
  {
    v16 = i + 2;
    if (i + 2 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v30 + 8 * v16);
    if (!v15)
    {
      v16 = i + 3;
      if (i + 3 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v30 + 8 * v16);
      if (!v15)
      {
        v16 = i + 4;
        if (i + 4 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v30 + 8 * v16);
        if (!v15)
        {
          v17 = i + 5;
          if (i + 5 < v29)
          {
            v15 = *(_QWORD *)(v30 + 8 * v17);
            if (v15)
            {
              v16 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v16 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_36;
              if (v16 >= v29)
                break;
              v15 = *(_QWORD *)(v30 + 8 * v16);
              ++v17;
              if (v15)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_18538C(a1);
          return (unint64_t)v4;
        }
      }
    }
  }
LABEL_26:
  v7 = (v15 - 1) & v15;
  v13 = __clz(__rbit64(v15)) + (v16 << 6);
  for (i = v16; ; v13 = v12 | (i << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v13);
    swift_bridgeObjectRetain(v19);
    v22 = v21;
    result = sub_187F9C(v20, v19);
    v23 = result;
    if ((v24 & 1) != 0)
    {
      v10 = (uint64_t *)(v4[6] + 16 * result);
      swift_bridgeObjectRelease(v10[1]);
      *v10 = v20;
      v10[1] = v19;
      v11 = v4[7];
      result = swift_unknownObjectRelease(*(_QWORD *)(v11 + 8 * v23));
      *(_QWORD *)(v11 + 8 * v23) = v22;
      if (!v7)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v4[2] >= v4[3])
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v25 = (uint64_t *)(v4[6] + 16 * result);
    *v25 = v20;
    v25[1] = v19;
    *(_QWORD *)(v4[7] + 8 * result) = v22;
    v26 = v4[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_34;
    v4[2] = v28;
    if (!v7)
      goto LABEL_11;
LABEL_10:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_19BF90()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MBridgedCatalogService()), "init");
  qword_30C8F0 = (uint64_t)result;
  return result;
}

id static MBridgedCatalogService.default.getter()
{
  if (qword_30AB20 != -1)
    swift_once(&qword_30AB20, sub_19BF90);
  return (id)qword_30C8F0;
}

uint64_t sub_19C03C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_16B968(&qword_30C930);
  v5[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_19C0A0, 0, 0);
}

uint64_t sub_19C0A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t **v5;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = v0[7];
  v2 = v0[5];
  v3 = type metadata accessor for MCatalogService(0);
  sub_178770(v3, (uint64_t)qword_30C910);
  MResourceType.init(_:)(v2);
  v4 = type metadata accessor for MResourceType(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 0, 1, v4);
  v5 = (uint64_t **)swift_task_alloc(dword_30C93C);
  v0[8] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = (uint64_t *)sub_19C178;
  return sub_19C23C(v0[2], v0[3], v0[4], v0[7], v0[6]);
}

uint64_t sub_19C178()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*v1 + 56);
  v2 = *(_QWORD *)(*v1 + 64);
  v4 = *v1;
  *(_QWORD *)(v4 + 72) = v0;
  swift_task_dealloc(v2);
  sub_1766A8(v3, &qword_30C930);
  if (v0)
    return swift_task_switch(sub_19C208, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v4 + 56));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_19C208()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 56));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = sub_16B968(&qword_30C930);
  v6[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MResourceType(0);
  v6[9] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[10] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[11] = swift_task_alloc(v10);
  v6[12] = swift_task_alloc(v10);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_16B968(&qword_30C960) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[13] = swift_task_alloc(v11);
  v6[14] = swift_task_alloc(v11);
  return swift_task_switch(sub_19C30C, 0, 0);
}

uint64_t sub_19C30C()
{
  _QWORD *v0;
  id v1;
  void *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t Error;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v1 = objc_msgSend((id)objc_opt_self(BKReachability), "sharedReachabilityForInternetConnection");
  if (!v1)
    goto LABEL_7;
  v2 = v1;
  if (!objc_msgSend(v1, "currentReachabilityStatus"))
  {

    goto LABEL_7;
  }
  v3 = objc_msgSend(v2, "connectionRequired");

  if ((v3 & 1) != 0)
  {
LABEL_7:
    v13 = v0[2];
    v14 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    v15 = v0[13];
    v17 = v0[11];
    v16 = v0[12];
    v18 = v0[8];
    swift_task_dealloc(v0[14]);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  v4 = v0[14];
  v5 = v0[9];
  v6 = v0[10];
  v7 = v0[8];
  v8 = v0[5];
  v9 = type metadata accessor for URL(0);
  v0[15] = v9;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v0[16] = v10;
  v10(v4, 1, 1, v9);
  sub_1A0750(v8, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
  {
    sub_1766A8(v0[8], &qword_30C930);
    v11 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(adamID:relationships:views:additionalParameters:metadata:)[1]);
    v0[20] = v11;
    *v11 = v0;
    v11[1] = sub_19C7D8;
    return MCatalogService.fetch(adamID:relationships:views:additionalParameters:metadata:)(v0[3], v0[4], 0, 0, 0, v0[6]);
  }
  v20 = v0[11];
  v21 = v0[12];
  v22 = v0[9];
  v23 = v0[10];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v23 + 32))(v21, v0[8], v22);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v24(v20, v21, v22);
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v20, v22);
  if (v25 != enum case for MResourceType.audiobooks(_:) && v25 != enum case for MResourceType.books(_:))
  {
    v26 = v0[14];
    v28 = v0[11];
    v27 = v0[12];
    v29 = v0[9];
    v30 = v0[10];
    Error = type metadata accessor for MCatalogService.FetchError(0);
    v32 = sub_1A0798();
    swift_allocError(Error, v32, 0, 0);
    v34 = v33;
    v24(v33, v27, v29);
    v35 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(Error - 8) + 104))(v34, enum case for MCatalogService.FetchError.invalidResourceType(_:), Error);
    swift_willThrow(v35);
    v36 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v36(v27, v29);
    sub_1766A8(v26, &qword_30C960);
    v36(v28, v29);
    v37 = v0[13];
    v39 = v0[11];
    v38 = v0[12];
    v40 = v0[8];
    swift_task_dealloc(v0[14]);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  v41 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(adamID:type:relationships:views:additionalParameters:metadata:)[1]);
  v0[17] = v41;
  *v41 = v0;
  v41[1] = sub_19C674;
  return MCatalogService.fetch(adamID:type:relationships:views:additionalParameters:metadata:)(v0[3], v0[4], v0[12], 0, 0, 0, v0[6]);
}

uint64_t sub_19C674(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 136);
  *(_QWORD *)(v3 + 144) = a1;
  *(_QWORD *)(v3 + 152) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_19C92C;
  else
    v5 = sub_19C6E0;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_19C6E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 144);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 120);
    v3 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 128);
    v5 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 80);
    MAsset.url.getter();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    sub_1766A8(v4, &qword_30C960);
    v3(v5, 0, 1, v2);
    sub_19F878(v5, v4);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  }
  sub_19F878(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 16));
  v9 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C7D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 160);
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_19C9BC;
  else
    v5 = sub_19C844;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_19C844()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 168);
  if (v1)
  {
    v2 = type metadata accessor for MAsset(0);
    if (swift_dynamicCastClass(v1, v2))
    {
      v3 = *(_QWORD *)(v0 + 120);
      v4 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 128);
      v6 = *(_QWORD *)(v0 + 104);
      v5 = *(_QWORD *)(v0 + 112);
      MAsset.url.getter();

      sub_1766A8(v5, &qword_30C960);
      v4(v6, 0, 1, v3);
      sub_19F878(v6, v5);
    }
    else
    {

    }
  }
  sub_19F878(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 16));
  v7 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  v10 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
  sub_1766A8(v1, &qword_30C960);
  v2 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19C9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1766A8(*(_QWORD *)(v0 + 112), &qword_30C960);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc(*(_QWORD *)(v0 + 112));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CB80(uint64_t a1, uint64_t a2, void *a3, const void *a4, void *a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;

  v5[2] = a2;
  v5[3] = a5;
  v10 = sub_16B968(&qword_30C930);
  v5[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MRequestMetadata(0);
  v5[5] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[6] = v12;
  v5[7] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(_QWORD *)(*(_QWORD *)(sub_16B968(&qword_30C960) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[8] = swift_task_alloc(v13);
  v5[9] = swift_task_alloc(v13);
  v5[10] = _Block_copy(a4);
  v5[11] = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v5[12] = v14;
  v15 = a3;
  v16 = a5;
  static MRequestMetadata._unconditionallyBridgeFromObjectiveC(_:)(a3);

  return swift_task_switch(sub_19CC90, 0, 0);
}

uint64_t sub_19CC90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = v0[4];
  v2 = v0[2];
  v3 = type metadata accessor for MCatalogService(0);
  sub_178770(v3, (uint64_t)qword_30C910);
  MResourceType.init(_:)(v2);
  v4 = type metadata accessor for MResourceType(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 0, 1, v4);
  v5 = (_QWORD *)swift_task_alloc(dword_30C93C);
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_19CD6C;
  return sub_19C23C(v0[9], v0[11], v0[12], v0[4], v0[7]);
}

uint64_t sub_19CD6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSURL *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void (**v16)(_QWORD, _QWORD, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*v1 + 104);
  v3 = *(_QWORD *)(*v1 + 32);
  v4 = *v1;
  *(_QWORD *)(v4 + 112) = v0;
  swift_task_dealloc(v2);
  sub_1766A8(v3, &qword_30C930);
  if (v0)
    return swift_task_switch(sub_19CED4, 0, 0);
  v6 = *(_QWORD *)(v4 + 96);
  v8 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(v4 + 72);
  v9 = *(void **)(v4 + 24);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 48) + 8))(*(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 40));

  swift_bridgeObjectRelease(v6);
  sub_19F878(v7, v8);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    v14 = *(_QWORD *)(v4 + 64);
    URL._bridgeToObjectiveC()(v12);
    v13 = v15;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  }
  v16 = *(void (***)(_QWORD, _QWORD, _QWORD))(v4 + 80);
  ((void (**)(_QWORD, void *, _QWORD))v16)[2](v16, v13, 0);
  _Block_release(v16);

  v17 = *(_QWORD *)(v4 + 64);
  v18 = *(_QWORD *)(v4 + 56);
  v19 = *(_QWORD *)(v4 + 32);
  swift_task_dealloc(*(_QWORD *)(v4 + 72));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_19CED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 80);
  v4 = *(void **)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));

  swift_bridgeObjectRelease(v2);
  v5 = (void *)_convertErrorToNSError(_:)(v1);
  swift_errorRelease(v1);
  ((void (**)(_QWORD, _QWORD, void *))v3)[2](v3, 0, v5);

  _Block_release(v3);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 32);
  swift_task_dealloc(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19CF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_16B968(&qword_30C930);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_19CFEC, 0, 0);
}

uint64_t sub_19CFEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = v0[6];
  v2 = type metadata accessor for MCatalogService(0);
  sub_178770(v2, (uint64_t)qword_30C910);
  v3 = type metadata accessor for MResourceType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = (uint64_t **)swift_task_alloc(dword_30C93C);
  v0[7] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_19D0AC;
  return sub_19C23C(v0[2], v0[3], v0[4], v0[6], v0[5]);
}

uint64_t sub_19D0AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*v1 + 48);
  v2 = *(_QWORD *)(*v1 + 56);
  v4 = *v1;
  *(_QWORD *)(v4 + 64) = v0;
  swift_task_dealloc(v2);
  sub_1766A8(v3, &qword_30C930);
  if (v0)
    return swift_task_switch(sub_19D13C, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v4 + 48));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_19D13C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19D2A8(uint64_t a1, void *a2, const void *a3, void *a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;

  v4[2] = a4;
  v9 = sub_16B968(&qword_30C930);
  v4[3] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for MRequestMetadata(0);
  v4[4] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v4[5] = v11;
  v4[6] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(_QWORD *)(*(_QWORD *)(sub_16B968(&qword_30C960) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[7] = swift_task_alloc(v12);
  v4[8] = swift_task_alloc(v12);
  v4[9] = _Block_copy(a3);
  v4[10] = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4[11] = v13;
  v14 = a2;
  v15 = a4;
  static MRequestMetadata._unconditionallyBridgeFromObjectiveC(_:)(a2);

  return swift_task_switch(sub_19D3B8, 0, 0);
}

uint64_t sub_19D3B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = v0[3];
  v2 = type metadata accessor for MCatalogService(0);
  sub_178770(v2, (uint64_t)qword_30C910);
  v3 = type metadata accessor for MResourceType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, 1, 1, v3);
  v4 = (uint64_t **)swift_task_alloc(dword_30C93C);
  v0[12] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_19D47C;
  return sub_19C23C(v0[8], v0[10], v0[11], v0[3], v0[6]);
}

uint64_t sub_19D47C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  NSURL *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void (**v16)(_QWORD, _QWORD, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 24);
  v4 = *v1;
  *(_QWORD *)(v4 + 104) = v0;
  swift_task_dealloc(v2);
  sub_1766A8(v3, &qword_30C930);
  if (v0)
    return swift_task_switch(sub_19D5E4, 0, 0);
  v6 = *(_QWORD *)(v4 + 88);
  v8 = *(_QWORD *)(v4 + 56);
  v7 = *(_QWORD *)(v4 + 64);
  v9 = *(void **)(v4 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 40) + 8))(*(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 32));

  swift_bridgeObjectRelease(v6);
  sub_19F878(v7, v8);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    v14 = *(_QWORD *)(v4 + 56);
    URL._bridgeToObjectiveC()(v12);
    v13 = v15;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  }
  v16 = *(void (***)(_QWORD, _QWORD, _QWORD))(v4 + 72);
  ((void (**)(_QWORD, void *, _QWORD))v16)[2](v16, v13, 0);
  _Block_release(v16);

  v17 = *(_QWORD *)(v4 + 56);
  v18 = *(_QWORD *)(v4 + 48);
  v19 = *(_QWORD *)(v4 + 24);
  swift_task_dealloc(*(_QWORD *)(v4 + 64));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_19D5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 72);
  v4 = *(void **)(v0 + 16);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(v2);
  v5 = (void *)_convertErrorToNSError(_:)(v1);
  swift_errorRelease(v1);
  ((void (**)(_QWORD, _QWORD, void *))v3)[2](v3, 0, v5);

  _Block_release(v3);
  v6 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_19D69C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;

  v8 = type metadata accessor for MResourceType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MCatalogService(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v16 = sub_178770(v12, (uint64_t)qword_30C910);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  MResourceType.init(_:)(a3);
  v17 = sub_19F464(a1, a2, (unint64_t)v11, a4);
  v18 = v17;
  if (v17)

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v18 != 0;
}

id MBridgedCatalogService.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MBridgedCatalogService();
  return objc_msgSendSuper2(&v2, "init");
}

id MBridgedCatalogService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MBridgedCatalogService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t MBridgedCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch(sub_19DAB8, 0, 0);
}

uint64_t sub_19DAB8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = type metadata accessor for MCatalogService(0);
  sub_178770(v1, (uint64_t)qword_30C910);
  v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)
                                  + 1));
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_19DB54;
  return MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
}

uint64_t sub_19DB54(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 72);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v4 + 80) = a1;
  return swift_task_switch(sub_19DBD0, 0, 0);
}

uint64_t sub_19DBD0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_19BCF4(v1, &qword_30CB18);
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
}

uint64_t sub_19DDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, const void *a8)
{
  _QWORD *v8;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v27;

  v8[2] = a6;
  v8[3] = v27;
  v16 = type metadata accessor for MRequestMetadata(0);
  v8[4] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v8[5] = v17;
  v8[6] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[7] = _Block_copy(a8);
  if (a1)
  {
    v8[8] = static Array._unconditionallyBridgeFromObjectiveC(_:)(a1, &type metadata for String);
    if (a2)
    {
LABEL_3:
      v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String);
      goto LABEL_6;
    }
  }
  else
  {
    v8[8] = 0;
    if (a2)
      goto LABEL_3;
  }
  v18 = 0;
LABEL_6:
  v8[9] = v18;
  v19 = 0;
  if (a3)
  {
    type metadata accessor for MCatalogRequestRelationship(0);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v20);
  }
  v8[10] = v19;
  v21 = 0;
  if (a4)
  {
    type metadata accessor for MCatalogRequestView(0);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v22);
  }
  v8[11] = v21;
  v23 = a5;
  v24 = a7;
  v25 = v27;
  if (a5)
  {
    a5 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a5, &type metadata for String, &type metadata for String, &protocol witness table for String);

  }
  v8[12] = a5;
  static MRequestMetadata._unconditionallyBridgeFromObjectiveC(_:)(v24);

  return swift_task_switch(sub_19DF1C, 0, 0);
}

uint64_t sub_19DF1C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = type metadata accessor for MCatalogService(0);
  sub_178770(v1, (uint64_t)qword_30C910);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)[1]);
  v0[13] = v2;
  *v2 = v0;
  v2[1] = sub_19DFBC;
  return MCatalogService.fetch(bookAssets:audiobookAssets:relationships:views:additionalParameters:batchSize:metadata:)(v0[8], v0[9], v0[10], v0[11], v0[12], v0[2], v0[6]);
}

uint64_t sub_19DFBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 104);
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_19E14C;
  }
  else
  {
    *(_QWORD *)(v4 + 120) = a1;
    v6 = sub_19E030;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_19E030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  Class isa;
  void (**v11)(_QWORD, _QWORD, _QWORD);
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(void **)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = sub_19BCF4(v1, &qword_30CB18);
  swift_bridgeObjectRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v8);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);
  sub_16B968(&qword_30CAB8);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v12 = *(_QWORD *)(v0 + 48);
  v11 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 56);
  ((void (**)(_QWORD, Class, _QWORD))v11)[2](v11, isa, 0);

  _Block_release(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19E14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 64);
  v7 = *(void **)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  v8 = (void *)_convertErrorToNSError(_:)(v1);
  swift_errorRelease(v1);
  v10 = *(_QWORD *)(v0 + 48);
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 56);
  ((void (**)(_QWORD, _QWORD, void *))v9)[2](v9, 0, v8);

  _Block_release(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MBridgedCatalogService.fetch(bookSeries:audiobookSeries:relationships:views:additionalParameters:batchSize:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch(sub_19E23C, 0, 0);
}

uint64_t sub_19E23C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = type metadata accessor for MCatalogService(0);
  sub_178770(v1, (uint64_t)qword_30C910);
  v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to MCatalogService.fetch(bookSeries:audiobookSeries:relationships:views:additionalParameters:batchSize:metadata:)
                                  + 1));
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_19E2D8;
  return MCatalogService.fetch(bookSeries:audiobookSeries:relationships:views:additionalParameters:batchSize:metadata:)(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
}

uint64_t sub_19E2D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 72);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v4 + 80) = a1;
  return swift_task_switch(sub_19E354, 0, 0);
}

uint64_t sub_19E354()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_19BCF4(v1, &qword_30CB10);
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
}

uint64_t sub_19E524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, const void *a8)
{
  _QWORD *v8;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  void *v27;

  v8[2] = a6;
  v8[3] = v27;
  v16 = type metadata accessor for MRequestMetadata(0);
  v8[4] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v8[5] = v17;
  v8[6] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[7] = _Block_copy(a8);
  if (a1)
  {
    v8[8] = static Array._unconditionallyBridgeFromObjectiveC(_:)(a1, &type metadata for String);
    if (a2)
    {
LABEL_3:
      v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String);
      goto LABEL_6;
    }
  }
  else
  {
    v8[8] = 0;
    if (a2)
      goto LABEL_3;
  }
  v18 = 0;
LABEL_6:
  v8[9] = v18;
  v19 = 0;
  if (a3)
  {
    type metadata accessor for MCatalogRequestRelationship(0);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v20);
  }
  v8[10] = v19;
  v21 = 0;
  if (a4)
  {
    type metadata accessor for MCatalogRequestView(0);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v22);
  }
  v8[11] = v21;
  v23 = a5;
  v24 = a7;
  v25 = v27;
  if (a5)
  {
    a5 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a5, &type metadata for String, &type metadata for String, &protocol witness table for String);

  }
  v8[12] = a5;
  static MRequestMetadata._unconditionallyBridgeFromObjectiveC(_:)(v24);

  return swift_task_switch(sub_19E6A0, 0, 0);
}

uint64_t sub_19E6A0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = type metadata accessor for MCatalogService(0);
  sub_178770(v1, (uint64_t)qword_30C910);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(bookSeries:audiobookSeries:relationships:views:additionalParameters:batchSize:metadata:)[1]);
  v0[13] = v2;
  *v2 = v0;
  v2[1] = sub_19E740;
  return MCatalogService.fetch(bookSeries:audiobookSeries:relationships:views:additionalParameters:batchSize:metadata:)(v0[8], v0[9], v0[10], v0[11], v0[12], v0[2], v0[6]);
}

uint64_t sub_19E740(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 104);
  *(_QWORD *)(*v2 + 112) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1A07E0;
  }
  else
  {
    *(_QWORD *)(v4 + 120) = a1;
    v6 = sub_19E7B4;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_19E7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  Class isa;
  void (**v11)(_QWORD, _QWORD, _QWORD);
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 72);
  v15 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(void **)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = sub_19BCF4(v1, &qword_30CB10);
  swift_bridgeObjectRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v8);

  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v15);
  sub_16B968(&qword_30CA90);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v12 = *(_QWORD *)(v0 + 48);
  v11 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 56);
  ((void (**)(_QWORD, Class, _QWORD))v11)[2](v11, isa, 0);

  _Block_release(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MBridgedCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch(sub_19E8F0, 0, 0);
}

uint64_t sub_19E8F0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = type metadata accessor for MCatalogService(0);
  sub_178770(v1, (uint64_t)qword_30C910);
  v2 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)
                                  + 1));
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_19E988;
  return MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_19E988(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 64);
  v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v4 + 72) = a1;
  return swift_task_switch(sub_19EA04, 0, 0);
}

uint64_t sub_19EA04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = sub_19BCF4(v1, &qword_30CB08);
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v2);
}

uint64_t sub_19EBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, const void *a7, void *a8)
{
  _QWORD *v8;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;

  v8[2] = a5;
  v8[3] = a8;
  v16 = type metadata accessor for MRequestMetadata(0);
  v8[4] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v8[5] = v17;
  v8[6] = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[7] = _Block_copy(a7);
  v8[8] = static Array._unconditionallyBridgeFromObjectiveC(_:)(a1, &type metadata for String);
  v18 = 0;
  if (a2)
  {
    type metadata accessor for MCatalogRequestRelationship(0);
    v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v19);
  }
  v8[9] = v18;
  v20 = 0;
  if (a3)
  {
    type metadata accessor for MCatalogRequestView(0);
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v21);
  }
  v8[10] = v20;
  if (a4)
    v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(a4, &type metadata for String, &type metadata for String, &protocol witness table for String);
  else
    v22 = 0;
  v8[11] = v22;
  v23 = a6;
  v24 = a8;
  static MRequestMetadata._unconditionallyBridgeFromObjectiveC(_:)(a6);

  return swift_task_switch(sub_19ECF8, 0, 0);
}

uint64_t sub_19ECF8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_30AB30 != -1)
    swift_once(&qword_30AB30, sub_19F0F0);
  v1 = type metadata accessor for MCatalogService(0);
  sub_178770(v1, (uint64_t)qword_30C910);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)[1]);
  v0[12] = v2;
  *v2 = v0;
  v2[1] = sub_19ED94;
  return MCatalogService.fetch(adamIDs:relationships:views:additionalParameters:batchSize:metadata:)(v0[8], v0[9], v0[10], v0[11], v0[2], v0[6]);
}

uint64_t sub_19ED94(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 96);
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_19EF18;
  }
  else
  {
    *(_QWORD *)(v4 + 112) = a1;
    v6 = sub_19EE08;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_19EE08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  Class isa;
  void (**v11)(_QWORD, _QWORD, _QWORD);
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v7 = *(void **)(v0 + 24);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = sub_19BCF4(v1, &qword_30CB08);
  swift_bridgeObjectRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v8);

  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v14);
  sub_16B968(&qword_30CA68);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  v12 = *(_QWORD *)(v0 + 48);
  v11 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 56);
  ((void (**)(_QWORD, Class, _QWORD))v11)[2](v11, isa, 0);

  _Block_release(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EF18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void (**v8)(_QWORD, _QWORD, _QWORD);
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(void **)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  v7 = (void *)_convertErrorToNSError(_:)(v1);
  swift_errorRelease(v1);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 56);
  ((void (**)(_QWORD, _QWORD, void *))v8)[2](v8, 0, v7);

  _Block_release(v8);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19EFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v8;

  v0 = type metadata accessor for MClientIdentifier(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MCatalogServiceConfig(0);
  sub_178954(v4, qword_30C8F8);
  sub_178770(v4, (uint64_t)qword_30C8F8);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for MClientIdentifier.books(_:), v0);
  v5 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
  v6 = objc_msgSend(v5, "activeStoreAccount");

  return MCatalogServiceConfig.init(clientIdentifier:account:)(v3, v6);
}

uint64_t static MCatalogServiceConfig.appMainConfig.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19F1FC(&qword_30AB28, (uint64_t (*)(_QWORD))&type metadata accessor for MCatalogServiceConfig, (uint64_t)qword_30C8F8, (uint64_t)sub_19EFD0, a1);
}

uint64_t sub_19F0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = type metadata accessor for MCatalogServiceConfig(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MCatalogService(0);
  sub_178954(v4, qword_30C910);
  sub_178770(v4, (uint64_t)qword_30C910);
  if (qword_30AB28 != -1)
    swift_once(&qword_30AB28, sub_19EFD0);
  v5 = sub_178770(v0, (uint64_t)qword_30C8F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return MCatalogService.init(config:)(v3);
}

uint64_t static MCatalogService.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19F1FC(&qword_30AB30, (uint64_t (*)(_QWORD))&type metadata accessor for MCatalogService, (uint64_t)qword_30C910, (uint64_t)sub_19F0F0, a1);
}

uint64_t sub_19F1FC@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  if (*a1 != -1)
    swift_once(a1, a4);
  v8 = a2(0);
  v9 = sub_178770(v8, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v9, v8);
}

uint64_t MCatalogService.fetchSampleURL(adamID:type:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v10 = sub_16B968(&qword_30C960);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v29 - v14;
  v16 = sub_19F464(a1, a2, a3, a4);
  if (v16)
  {
    v17 = v16;
    if ((dispatch thunk of MAsset.isBook.getter() & 1) != 0)
    {
      v18 = objc_msgSend(v17, "bookSampleDownloadURL");
      if (v18)
      {
        v19 = v18;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v20 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v15, 0, 1, v20);
      }
      else
      {

        v26 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 1, 1, v26);
      }
      v27 = (uint64_t)v15;
    }
    else
    {
      v23 = objc_msgSend(v17, "previewURL");
      if (v23)
      {
        v24 = v23;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        v25 = type metadata accessor for URL(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 0, 1, v25);
      }
      else
      {

        v28 = type metadata accessor for URL(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v13, 1, 1, v28);
      }
      v27 = (uint64_t)v13;
    }
    return sub_19F878(v27, a5);
  }
  else
  {
    v21 = type metadata accessor for URL(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a5, 1, 1, v21);
  }
}

void *sub_19F464(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  unsigned __int8 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  dispatch_semaphore_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  id v45;
  uint64_t v47;
  dispatch_semaphore_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v51 = a3;
  v52 = a4;
  v53 = a1;
  v54 = a2;
  v4 = type metadata accessor for DispatchTime(0);
  v56 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v55 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v57 = (char *)&v47 - v7;
  v8 = type metadata accessor for MRequestMetadata(0);
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  v9 = *(_QWORD *)(v61 + 64);
  __chkstk_darwin(v8);
  v60 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for MResourceType(0);
  v10 = *(_QWORD *)(v59 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v59);
  v58 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MCatalogService(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_16B968(&qword_30C8A0);
  __chkstk_darwin(v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = objc_msgSend((id)objc_opt_self(BKReachability), "sharedReachabilityForInternetConnection");
  if (v19)
  {
    v20 = v19;
    if (!objc_msgSend(v19, "currentReachabilityStatus"))
    {

      return 0;
    }
    v49 = v4;
    v21 = objc_msgSend(v20, "connectionRequired");

    if ((v21 & 1) == 0)
    {
      v48 = dispatch_semaphore_create(0);
      v23 = sub_16B968(&qword_30CB20);
      v47 = swift_allocObject(v23, 24, 7);
      *(_QWORD *)(v47 + 16) = 0;
      v24 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v18, 1, 1, v24);
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v50, v12);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v58, v51, v59);
      v25 = v61;
      (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v60, v52, v62);
      v26 = *(unsigned __int8 *)(v13 + 80);
      v27 = (v26 + 32) & ~v26;
      v51 = (v14 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
      v28 = *(unsigned __int8 *)(v10 + 80);
      v29 = *(unsigned __int8 *)(v25 + 80);
      v30 = (v28 + v51 + 16) & ~v28;
      v31 = (v11 + v29 + v30) & ~v29;
      v52 = (v9 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
      v32 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
      v33 = swift_allocObject(&unk_295228, v32 + 8, v26 | v28 | v29 | 7);
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v33 + v27, v15, v12);
      v34 = (_QWORD *)(v33 + v51);
      v35 = v54;
      *v34 = v53;
      v34[1] = v35;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33 + v30, v58, v59);
      (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v33 + v31, v60, v62);
      v37 = v47;
      v36 = v48;
      *(_QWORD *)(v33 + v52) = v47;
      *(_QWORD *)(v33 + v32) = v36;
      swift_bridgeObjectRetain(v35);
      swift_retain(v37);
      v38 = v36;
      v39 = sub_19FA14((uint64_t)v18, (uint64_t)&unk_30CB30, v33);
      v40 = swift_release(v39);
      v41 = v55;
      static DispatchTime.now()(v40);
      v42 = v57;
      + infix(_:_:)(v41, 2.0);
      v43 = *(void (**)(char *, uint64_t))(v56 + 8);
      v44 = v49;
      v43(v41, v49);
      OS_dispatch_semaphore.wait(timeout:)(v42);

      v43(v42, v44);
      v22 = *(void **)(v37 + 16);
      v45 = v22;
      swift_release(v37);
      return v22;
    }
  }
  return 0;
}

uint64_t type metadata accessor for MBridgedCatalogService()
{
  return objc_opt_self(BCMBridgedCatalogService);
}

uint64_t sub_19F878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_16B968(&qword_30C960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v8[2] = v15;
  v8[3] = v16;
  v13 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(adamID:type:relationships:views:additionalParameters:metadata:)[1]);
  v8[4] = v13;
  *v13 = v8;
  v13[1] = sub_19F954;
  return MCatalogService.fetch(adamID:type:relationships:views:additionalParameters:metadata:)(a5, a6, a7, 0, 0, 0, a8);
}

uint64_t sub_19F954(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*v2 + 32);
  v4 = *v2;
  *(_QWORD *)(v4 + 40) = a1;
  swift_task_dealloc(v3);
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  else
    return swift_task_switch(sub_19F9C8, 0, 0);
}

uint64_t sub_19F9C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    v3 = *(void **)(v2 + 16);
    *(_QWORD *)(v2 + 16) = v1;

  }
  OS_dispatch_semaphore.signal()();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_19FA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned __int8 v16;
  _QWORD v18[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_1766A8(a1, &qword_30C8A0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
    {
LABEL_6:
      v15 = 0;
      return swift_task_create(v8, v15, (char *)&type metadata for () + 8, a2, a3);
    }
  }
  else
  {
    v16 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v16 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (!v9)
      goto LABEL_6;
  }
  v10 = *(_QWORD *)(a3 + 24);
  ObjectType = swift_getObjectType(v9);
  swift_unknownObjectRetain(v9);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
  v14 = v13;
  swift_unknownObjectRelease(v9);
  if (!(v14 | v12))
    goto LABEL_6;
  v18[0] = 0;
  v18[1] = 0;
  v15 = v18;
  v18[2] = v12;
  v18[3] = v14;
  return swift_task_create(v8, v15, (char *)&type metadata for () + 8, a2, a3);
}

uint64_t sub_19FB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 88);
  v2 = type metadata accessor for Optional(0, *(_QWORD *)(*(_QWORD *)v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t static MResource.from<A>(response:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (qword_30AB28 != -1)
    swift_once(&qword_30AB28, sub_19EFD0);
  v4 = type metadata accessor for MCatalogServiceConfig(0);
  v5 = sub_178770(v4, (uint64_t)qword_30C8F8);
  return static MResource.from<A>(response:config:)(a1, v5, a2);
}

uint64_t method lookup function for MBridgedCatalogService(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MBridgedCatalogService);
}

uint64_t dispatch thunk of MBridgedCatalogService.fetchStoreURL(for:type:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  int *v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = *(int **)((char *)&stru_20.filesize + (swift_isaMask & *v5));
  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v12 + *v12);
  v13 = (_QWORD *)swift_task_alloc(v12[1]);
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_16D788;
  return v15(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of MBridgedCatalogService.fetchStoreURL(for:metadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  int *v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);

  v10 = *(int **)((char *)&stru_20.maxprot + (swift_isaMask & *v4));
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v10 + *v10);
  v11 = (_QWORD *)swift_task_alloc(v10[1]);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_16D788;
  return v13(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MBridgedCatalogService.checkAvailability(for:type:metadata:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_20.nsects + (swift_isaMask & *v0)))();
}

uint64_t sub_19FD80(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 0, 1, &v4, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for EvilSendableBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_178F98(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EvilSendableBox);
}

uint64_t sub_19FDFC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 64));
  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_19FE50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  const void *v9;
  _QWORD *v10;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = (void *)v0[7];
  v9 = (const void *)v0[8];
  v8 = (void *)v0[9];
  v10 = (_QWORD *)swift_task_alloc(dword_30CA2C);
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_16D788;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, const void *, void *))((char *)&dword_30CA28 + dword_30CA28))(v2, v3, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_19FEF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_16D788;
  return v6();
}

uint64_t sub_19FF48(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_16D788;
  return v7();
}

uint64_t sub_19FFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_1766A8(a1, &qword_30C8A0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_295020, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_30CA60, v16);
}

uint64_t sub_1A00EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1A0110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_30CA5C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_16D788;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_30CA58 + dword_30CA58))(a1, v4);
}

void sub_1A0184()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_30CA74);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_16D788;
  __asm { BR              X8; sub_19E524 }
}

uint64_t sub_1A023C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 72));
  return swift_deallocObject(v0, 88, 7);
}

void sub_1A0298()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_30CA9C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_16D788;
  __asm { BR              X8; sub_19DDA0 }
}

uint64_t sub_1A034C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1A0388()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  const void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v5 = (const void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_30CAC4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_16D788;
  return ((uint64_t (*)(uint64_t, void *, const void *, void *))((char *)&dword_30CAC0 + dword_30CAC0))(v2, v3, v5, v4);
}

uint64_t sub_1A0408()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1A0444()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  const void *v5;
  void *v6;
  _QWORD *v7;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (void *)v0[4];
  v5 = (const void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc(dword_30CAE4);
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_16CAC4;
  return ((uint64_t (*)(uint64_t, uint64_t, void *, const void *, void *))((char *)&dword_30CAE0 + dword_30CAE0))(v2, v3, v4, v5, v6);
}

uint64_t sub_1A04CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = type metadata accessor for MCatalogService(0);
  v1 = *(_QWORD *)(v18 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = v4;
  v17 = type metadata accessor for MResourceType(0);
  v5 = *(_QWORD *)(v17 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + v6 + 16) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for MRequestMetadata(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v19 = v2 | v6 | v11 | 7;
  v13 = (*(_QWORD *)(v10 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v18);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v16 + 8));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v17);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);
  swift_release(*(_QWORD *)(v0 + v13));

  return swift_deallocObject(v0, v14 + 8, v19);
}

uint64_t sub_1A0614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;

  v2 = *(_QWORD *)(type metadata accessor for MCatalogService(0) - 8);
  v3 = (*(_QWORD *)(v2 + 64)
      + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(type metadata accessor for MResourceType(0) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for MRequestMetadata(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v0 + v3;
  v11 = *(_QWORD *)(v0 + v3);
  v12 = *(_QWORD *)(v10 + 8);
  v13 = v0 + v5;
  v14 = v0 + v8;
  v15 = *(_QWORD *)(v0 + v9);
  v16 = *(_QWORD *)(v0 + ((v9 + 15) & 0xFFFFFFFFFFFFF8));
  v17 = (_QWORD *)swift_task_alloc(dword_30CB2C);
  *(_QWORD *)(v1 + 16) = v17;
  *v17 = v1;
  v17[1] = sub_16CAC4;
  v17[2] = v15;
  v17[3] = v16;
  v18 = (_QWORD *)swift_task_alloc(async function pointer to MCatalogService.fetch(adamID:type:relationships:views:additionalParameters:metadata:)[1]);
  v17[4] = v18;
  *v18 = v17;
  v18[1] = sub_19F954;
  return MCatalogService.fetch(adamID:type:relationships:views:additionalParameters:metadata:)(v11, v12, v13, 0, 0, 0, v14);
}

uint64_t sub_1A0750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_16B968(&qword_30C930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A0798()
{
  unint64_t result;
  uint64_t Error;

  result = qword_30CB38;
  if (!qword_30CB38)
  {
    Error = type metadata accessor for MCatalogService.FetchError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for MCatalogService.FetchError, Error);
    atomic_store(result, (unint64_t *)&qword_30CB38);
  }
  return result;
}

uint64_t UIImage.isLikelyTransparent.getter()
{
  void *v0;
  CGColorSpace *DeviceRGB;
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  CGContextRef v4;
  CGContext *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v2 = (unsigned __int8 *)calloc(1uLL, 0x9C40uLL);
  if (v2)
  {
    v3 = v2;
    v4 = CGBitmapContextCreate(v2, 0x64uLL, 0x64uLL, 8uLL, 0x190uLL, DeviceRGB, 5u);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v0, "CGImage");
      if (v6)
      {
        v7 = v6;
        CGContextSetInterpolationQuality(v5, kCGInterpolationNone);
        CGContextRef.draw(_:in:byTiling:)(v7, 0, 0.0, 0.0, 100.0, 100.0);
        LOBYTE(v8) = 0;
        v9 = 0;
        do
        {
          if (v9 < 40000)
          {
            v10 = v9 + 4;
          }
          else
          {
            v12 = (v9 != 40000) | v8;
            v8 = 1;
            v10 = 40000;
            if ((v12 & 1) != 0)
              goto LABEL_14;
          }
          v11 = v3[v9 + 3];
          v9 = v10;
        }
        while (!v11);
        v8 = 0;
LABEL_14:

      }
      else
      {
        v8 = 0;
      }

    }
    else
    {
      v8 = 0;
    }
    free(v3);
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

uint64_t type metadata accessor for BundleFinder()
{
  return objc_opt_self(_TtC8BookCoreP33_1D04049C73E90B6140F80CB38A56017812BundleFinder);
}

uint64_t sub_1A0938()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;

  v0 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, v5);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  return v7;
}

uint64_t sub_1A0A34()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  NSString v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;

  v0 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v2, "localizedStringForKey:value:table:", v3, v4, v5);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  return v7;
}

void BKSeriesItem.itemType.setter(unsigned __int8 *a1)
{
  sub_1A0C20(a1, (SEL *)&selRef_setItemTypeRaw_);
}

uint64_t BKSeriesItem.ItemType.init(resourceType:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  v4 = type metadata accessor for MResourceType(0);
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if ((_DWORD)result == enum case for MResourceType.audiobooks(_:))
  {
    v7 = 0;
  }
  else if ((_DWORD)result == enum case for MResourceType.audiobookSeries(_:))
  {
    v7 = 1;
  }
  else if ((_DWORD)result == enum case for MResourceType.books(_:))
  {
    v7 = 2;
  }
  else if ((_DWORD)result == enum case for MResourceType.bookSeries(_:))
  {
    v7 = 3;
  }
  else
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v7 = 4;
  }
  *a2 = v7;
  return result;
}

void BKSeriesItem.mappedItemType.setter(unsigned __int8 *a1)
{
  sub_1A0C20(a1, (SEL *)&selRef_setMappedItemTypeRaw_);
}

void sub_1A0C20(unsigned __int8 *a1, SEL *a2)
{
  void *v2;
  int v4;
  id v5;

  v4 = *a1;
  if (v4 == 4)
  {
    objc_msgSend(v2, *a2, 0);
  }
  else
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithShort:", (v4 + 1));
    objc_msgSend(v2, *a2, v5);

  }
}

uint64_t BKSeriesItem.ItemType.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if ((unsigned __int16)result >= 5u)
    v2 = 4;
  else
    v2 = 0x302010004uLL >> (8 * result);
  *a2 = v2;
  return result;
}

uint64_t BKSeriesItem.ItemType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

Swift::Int sub_1A0CEC()
{
  unsigned __int8 *v0;
  __int16 v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_1A0D30()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_1A0D5C(uint64_t a1)
{
  unsigned __int8 *v1;
  __int16 v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2 + 1);
  return Hasher._finalize()();
}

uint64_t sub_1A0D9C@<X0>(unsigned __int16 *a1@<X0>, char *a2@<X8>)
{
  return BKSeriesItem.ItemType.init(rawValue:)(*a1, a2);
}

void sub_1A0DA4(_WORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

void BKSeriesItem.itemType.getter(_BYTE *a1@<X8>)
{
  sub_1A0E6C((SEL *)&selRef_itemTypeRaw, a1);
}

void (*BKSeriesItem.itemType.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  void *v1;
  _BYTE *v2;
  id v3;
  void *v4;
  unsigned int v5;
  unint64_t v6;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = objc_msgSend(v1, "itemTypeRaw");
  if (v3 && (v4 = v3, v5 = objc_msgSend(v3, "shortValue"), v4, v5 <= 4))
    v6 = 0x302010004uLL >> (8 * v5);
  else
    LOBYTE(v6) = 4;
  *v2 = v6;
  return sub_1A0E54;
}

void sub_1A0E54(uint64_t a1, uint64_t a2)
{
  sub_1A1098(a1, a2, (SEL *)&selRef_setItemTypeRaw_);
}

void BKSeriesItem.mappedItemType.getter(_BYTE *a1@<X8>)
{
  sub_1A0E6C((SEL *)&selRef_mappedItemTypeRaw, a1);
}

void sub_1A0E6C(SEL *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  id v4;
  void *v5;
  unsigned int v6;
  unint64_t v7;

  v4 = objc_msgSend(v2, *a1);
  if (v4 && (v5 = v4, v6 = objc_msgSend(v4, "shortValue"), v5, v6 <= 4))
    v7 = 0x302010004uLL >> (8 * v6);
  else
    LOBYTE(v7) = 4;
  *a2 = v7;
}

id sub_1A0EEC@<X0>(id *a1@<X0>, SEL *a2@<X3>, char *a3@<X8>)
{
  id result;
  void *v5;
  id v6;
  char v7;
  char v8;

  result = objc_msgSend(*a1, *a2);
  if (result)
  {
    v5 = result;
    v6 = objc_msgSend(result, "shortValue");

    result = (id)BKSeriesItem.ItemType.init(rawValue:)((uint64_t)v6, &v8);
    v7 = v8;
  }
  else
  {
    v7 = 4;
  }
  *a3 = v7;
  return result;
}

void sub_1A0F64(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  int v6;
  id v7;
  id v8;

  v6 = *a1;
  v7 = *a2;
  if (v6 == 4)
  {
    objc_msgSend(*a2, *a5, 0);
  }
  else
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithShort:", (v6 + 1));
    objc_msgSend(v7, *a5, v8);

  }
}

void (*BKSeriesItem.mappedItemType.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  void *v1;
  _BYTE *v2;
  id v3;
  void *v4;
  unsigned int v5;
  unint64_t v6;

  *a1 = v1;
  v2 = a1 + 1;
  v3 = objc_msgSend(v1, "mappedItemTypeRaw");
  if (v3 && (v4 = v3, v5 = objc_msgSend(v3, "shortValue"), v4, v5 <= 4))
    v6 = 0x302010004uLL >> (8 * v5);
  else
    LOBYTE(v6) = 4;
  *v2 = v6;
  return sub_1A108C;
}

void sub_1A108C(uint64_t a1, uint64_t a2)
{
  sub_1A1098(a1, a2, (SEL *)&selRef_setMappedItemTypeRaw_);
}

void sub_1A1098(uint64_t a1, uint64_t a2, SEL *a3)
{
  int v4;
  id v5;
  id v6;

  v4 = *(unsigned __int8 *)(a1 + 8);
  v5 = *(id *)a1;
  if (v4 == 4)
  {
    objc_msgSend(*(id *)a1, *a3, 0);
  }
  else
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithShort:", (v4 + 1));
    objc_msgSend(v5, *a3, v6);

  }
}

unint64_t sub_1A1130()
{
  unint64_t result;

  result = qword_30CBD8;
  if (!qword_30CBD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BKSeriesItem.ItemType, &type metadata for BKSeriesItem.ItemType);
    atomic_store(result, (unint64_t *)&qword_30CBD8);
  }
  return result;
}

id sub_1A1174@<X0>(id *a1@<X0>, char *a2@<X8>)
{
  return sub_1A0EEC(a1, (SEL *)&selRef_itemTypeRaw, a2);
}

void sub_1A1190(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  sub_1A0F64(a1, a2, a3, a4, (SEL *)&selRef_setItemTypeRaw_);
}

id sub_1A11AC@<X0>(id *a1@<X0>, char *a2@<X8>)
{
  return sub_1A0EEC(a1, (SEL *)&selRef_mappedItemTypeRaw, a2);
}

void sub_1A11C8(unsigned __int8 *a1, id *a2, uint64_t a3, uint64_t a4)
{
  sub_1A0F64(a1, a2, a3, a4, (SEL *)&selRef_setMappedItemTypeRaw_);
}

uint64_t _s8ItemTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s8ItemTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A12C0 + 4 * byte_26C811[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A12F4 + 4 * asc_26C80C[v4]))();
}

uint64_t sub_1A12F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A12FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A1304);
  return result;
}

uint64_t sub_1A1310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A1318);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A131C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A1324(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BKSeriesItem.ItemType()
{
  return &type metadata for BKSeriesItem.ItemType;
}

id BookToolbarController.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookToolbarController();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for BookToolbarController()
{
  return objc_opt_self(BCBookToolbarController);
}

id BookToolbarController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookToolbarController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t method lookup function for BookToolbarController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookToolbarController);
}

uint64_t dispatch thunk of BookToolbarController.updateFromDataProvider()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_20.filesize + (swift_isaMask & *v0)))();
}

uint64_t sub_1A1428()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_178954(v0, qword_30CC08);
  sub_178770(v0, (uint64_t)qword_30CC08);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 0x656D656761676E45, 0xEA0000000000746ELL);
}

uint64_t static Logger.engagement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_30AB38 != -1)
    swift_once(&qword_30AB38, sub_1A1428);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_178770(v2, (uint64_t)qword_30CC08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1A1510@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t Strong;
  objc_class *v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t result;
  objc_super v12;

  v3 = *(void **)(v1
                + OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_annotationUUID);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_pageTheme);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_delegate);
  v6 = (objc_class *)type metadata accessor for HighlightMenuIdentifier();
  v7 = (char *)objc_allocWithZone(v6);
  v8 = swift_unknownObjectWeakInit(&v7[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_delegate], 0);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_annotationUUID] = v3;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_pageTheme] = v4;
  swift_unknownObjectWeakAssign(v8, Strong);
  v12.receiver = v7;
  v12.super_class = v6;
  v9 = v3;
  v10 = objc_msgSendSuper2(&v12, "init");

  result = swift_unknownObjectRelease(Strong);
  a1[3] = v6;
  *a1 = v10;
  return result;
}

id sub_1A1688()
{
  return sub_1A3EA0(0, type metadata accessor for HighlightMenuIdentifier);
}

void sub_1A16D0(void *a1, id a2, void *a3)
{
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  CGContext *v14;
  CGContext *v15;
  CGRect v16;

  v5 = objc_msgSend(a2, "format");
  objc_msgSend(v5, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  objc_msgSend(a3, "setFill");
  v14 = (CGContext *)objc_msgSend(a1, "CGContext");
  v16.origin.x = v7;
  v16.origin.y = v9;
  v16.size.width = v11;
  v16.size.height = v13;
  CGContextAddEllipseInRect(v14, v16);

  v15 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextDrawPath(v15, kCGPathFill);

}

void sub_1A17B8(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

void sub_1A17EC(void *a1, id a2, void *a3)
{
  id v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  CGContext *v15;
  CGContext *v16;
  double v17;
  double v18;
  id v19;
  CGRect v20;

  v5 = objc_msgSend(a2, "format");
  objc_msgSend(v5, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  v14 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemFillColor");
  objc_msgSend(v14, "setFill");

  v15 = (CGContext *)objc_msgSend(a1, "CGContext");
  v20.origin.x = v7;
  v20.origin.y = v9;
  v20.size.width = v11;
  v20.size.height = v13;
  CGContextAddEllipseInRect(v15, v20);

  v16 = (CGContext *)objc_msgSend(a1, "CGContext");
  CGContextDrawPath(v16, kCGPathFill);

  if (a3)
  {
    v19 = a3;
    objc_msgSend(v19, "size");
    objc_msgSend(v19, "drawAtPoint:", (v11 - v17) * 0.5, (v13 - v18) * 0.5);

  }
}

id UICustomViewMenuElement_createHighlightMenuElement(for:annotationUUID:view:rect:delegate:)(uint64_t a1, void *a2, void *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  type metadata accessor for BECustomViewMenuElement();
  return static BECustomViewMenuElement.createHighlightMenuElement(for:annotationUUID:view:rect:delegate:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t type metadata accessor for BECustomViewMenuElement()
{
  return objc_opt_self(_TtC8BookCore23BECustomViewMenuElement);
}

id static BECustomViewMenuElement.createHighlightMenuElement(for:annotationUUID:view:rect:delegate:)(uint64_t a1, void *a2, void *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  _QWORD aBlock[5];
  _QWORD *v33;

  v17 = (_QWORD *)swift_allocObject(&unk_295358, 40, 7);
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a4;
  aBlock[4] = sub_1A1DF8;
  v33 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A1C88;
  aBlock[3] = &unk_295370;
  v18 = _Block_copy(aBlock);
  v19 = (void *)objc_opt_self(UICustomViewMenuElement);
  v20 = a2;
  v21 = objc_msgSend(v19, "elementWithViewProvider:", v18, swift_unknownObjectRetain(a4).n128_f64[0]);
  _Block_release(v18);
  swift_release(v33);
  v22 = swift_allocObject(&unk_2953A8, 80, 7);
  *(_QWORD *)(v22 + 16) = a1;
  *(_QWORD *)(v22 + 24) = a4;
  *(_QWORD *)(v22 + 32) = v21;
  *(_QWORD *)(v22 + 40) = a3;
  *(double *)(v22 + 48) = a5;
  *(double *)(v22 + 56) = a6;
  *(double *)(v22 + 64) = a7;
  *(double *)(v22 + 72) = a8;
  swift_unknownObjectRetain(a4);
  v23 = v21;
  v24 = a3;
  v25 = sub_1A0A34();
  v27 = v26;
  sub_16F6BC(0, &qword_30CC30, UIAction_ptr);
  v28 = swift_allocObject(&unk_2953D0, 88, 7);
  *(_QWORD *)(v28 + 16) = a2;
  *(_QWORD *)(v28 + 24) = sub_1A20A8;
  *(_QWORD *)(v28 + 32) = v22;
  *(_QWORD *)(v28 + 40) = a4;
  *(double *)(v28 + 48) = a5;
  *(double *)(v28 + 56) = a6;
  *(double *)(v28 + 64) = a7;
  *(double *)(v28 + 72) = a8;
  *(_QWORD *)(v28 + 80) = v8;
  swift_unknownObjectRetain(a4);
  v29 = v20;
  swift_retain(v22);
  v30 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v25, v27, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1A3F3C, v28);
  objc_msgSend(v23, "setMenuElementRepresentation:", v30);

  swift_release(v22);
  return v23;
}

id sub_1A1C88(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

char *sub_1A1D38(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  char *v9;
  char *v10;

  v7 = objc_allocWithZone((Class)type metadata accessor for HighlightColorChooserView());
  v8 = a3;
  swift_unknownObjectRetain(a4);
  v9 = (char *)objc_msgSend(v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v9[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_pageTheme] = a2;
  swift_unknownObjectWeakAssign(&v9[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_annotationUUID], v8);
  v10 = v9;

  swift_unknownObjectWeakAssign(&v10[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_delegate], a4);
  swift_unknownObjectRelease(a4);
  return v10;
}

char *sub_1A1DF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A1D38(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A1E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1A1E24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1A1E2C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, double a6, double a7, double a8, double a9)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v18 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v21 - 8);
  v39 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  v26 = swift_allocObject(&unk_2956A0, 88, 7);
  *(_QWORD *)(v26 + 16) = a1;
  *(_QWORD *)(v26 + 24) = a2;
  *(_QWORD *)(v26 + 32) = a3;
  *(_QWORD *)(v26 + 40) = a4;
  *(_QWORD *)(v26 + 48) = a5;
  *(double *)(v26 + 56) = a6;
  *(double *)(v26 + 64) = a7;
  *(double *)(v26 + 72) = a8;
  *(double *)(v26 + 80) = a9;
  aBlock[4] = sub_1A51E8;
  v42 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_2956B8;
  v27 = _Block_copy(aBlock);
  v28 = v42;
  v29 = a1;
  swift_unknownObjectRetain(a3);
  v30 = a4;
  v31 = a5;
  v32 = swift_release(v28);
  static DispatchQoS.unspecified.getter(v32);
  aBlock[0] = _swiftEmptyArrayStorage;
  v33 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_16B968((uint64_t *)&unk_30C330);
  v35 = sub_1A4E24();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v18, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v23, v20, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v23, v39);
}

uint64_t sub_1A2074()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1A20A8(void *a1)
{
  uint64_t v1;

  return sub_1A1E2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72));
}

void sub_1A20BC(void *a1, uint64_t a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, uint64_t a8, void *a9)
{
  objc_class *v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  double MidX;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  _QWORD v32[5];
  objc_super v33;
  CGRect v34;

  v17 = (objc_class *)type metadata accessor for HighlightMenuIdentifier();
  v18 = (char *)objc_allocWithZone(v17);
  v19 = swift_unknownObjectWeakInit(&v18[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_delegate], 0);
  *(_QWORD *)&v18[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_annotationUUID] = a1;
  *(_QWORD *)&v18[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_pageTheme] = a2;
  swift_unknownObjectWeakAssign(v19, a3);
  v33.receiver = v18;
  v33.super_class = v17;
  v20 = a1;
  v21 = objc_msgSendSuper2(&v33, "init");
  v22 = (char *)sub_1A2294();
  v23 = objc_msgSend(objc_allocWithZone((Class)UIEditMenuInteraction), "initWithDelegate:", v22);
  v24 = v23;
  if (v22)
  {
    v25 = *(void **)&v22[OBJC_IVAR____TtC8BookCore28BECustomViewMenuEditDelegate_interaction];
    *(_QWORD *)&v22[OBJC_IVAR____TtC8BookCore28BECustomViewMenuEditDelegate_interaction] = v23;
    v26 = v23;

  }
  objc_msgSend(a9, "addInteraction:", v24);
  v34.origin.x = a4;
  v34.origin.y = a5;
  v34.size.width = a6;
  v34.size.height = a7;
  MidX = CGRectGetMidX(v34);
  sub_16F6BC(0, &qword_30CDA8, UIEditMenuConfiguration_ptr);
  v31 = v21;
  v28 = sub_16BDB8(&qword_30CDB0, (uint64_t (*)(uint64_t))type metadata accessor for HighlightMenuIdentifier, (uint64_t)&protocol conformance descriptor for NSObject);
  v29 = v21;
  AnyHashable.init<A>(_:)(v32, &v31, v17, v28);
  v30 = (void *)UIEditMenuConfiguration.init(identifier:sourcePoint:)(v32, MidX, a5);
  objc_msgSend(v24, "presentEditMenuWithConfiguration:", v30, v31);

}

id sub_1A2294()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  swift_beginAccess(&unk_30CC20, v7, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_30CC20);
  swift_endAccess(v7);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v7);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_16D864((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_16D8AC((uint64_t)v8);
    goto LABEL_8;
  }
  v2 = type metadata accessor for BECustomViewMenuEditDelegate();
  if ((swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_8:
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BECustomViewMenuEditDelegate()), "init");
    swift_beginAccess(&unk_30CC20, v8, 32, 0);
    v3 = v4;
    objc_setAssociatedObject(v0, &unk_30CC20, v3, (char *)&dword_0 + 1);
    swift_endAccess(v8);

    return v3;
  }
  return (id)v6;
}

void sub_1A23C8(double a1, double a2, double a3, double a4, uint64_t a5, void *a6, void (*a7)(void), uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  _QWORD aBlock[5];
  uint64_t v23;

  if (a6)
  {
    v21 = a6;
    a7();

  }
  else
  {
    v18 = swift_allocObject(&unk_295650, 72, 7);
    *(double *)(v18 + 16) = a1;
    *(double *)(v18 + 24) = a2;
    *(double *)(v18 + 32) = a3;
    *(double *)(v18 + 40) = a4;
    *(_QWORD *)(v18 + 48) = a7;
    *(_QWORD *)(v18 + 56) = a8;
    *(_QWORD *)(v18 + 64) = a10;
    aBlock[4] = sub_1A5198;
    v23 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A27C0;
    aBlock[3] = &unk_295668;
    v19 = _Block_copy(aBlock);
    v20 = v23;
    swift_retain(a8);
    swift_release(v20);
    objc_msgSend(a9, "createHighlightForSelectionWithCurrentThemeWithCompletion:", v19);
    _Block_release(v19);
  }
}

void sub_1A24E8(void *a1, void (*a2)(id), CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  id v30;
  CGRect v31;
  CGRect v32;

  v12 = type metadata accessor for Logger(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v29 - v17;
  if (a1)
  {
    v30 = a1;
    v32.origin.x = 0.0;
    v32.origin.y = 0.0;
    v32.size.width = 0.0;
    v32.size.height = 0.0;
    v31.origin.x = a3;
    v31.origin.y = a4;
    v31.size.width = a5;
    v31.size.height = a6;
    if (CGRectEqualToRect(v31, v32))
    {
      sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
      v19 = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 0xD000000000000014, 0x80000000002175E0);
      v20 = Logger.init(_:)(v19);
      v21 = Logger.logObject.getter(v20);
      v22 = static os_log_type_t.error.getter(v21);
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_0, v21, v22, "was unable to determine selection rect for secondary highlight menu", v23, 2u);
        swift_slowDealloc(v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
    else
    {
      a2(v30);

    }
  }
  else
  {
    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
    v24 = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 0xD000000000000014, 0x80000000002175E0);
    v25 = Logger.init(_:)(v24);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.error.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_0, v26, v27, "nil annotationUUID for secondary highlight menu", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
}

void sub_1A27C0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

id static BECustomViewMenuElement.createHighlightMenuElement(menuElementRepresentation:actions:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v9[5];
  uint64_t v10;

  v4 = swift_allocObject(&unk_2953F8, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  v9[4] = sub_1A4CE0;
  v10 = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1A1C88;
  v9[3] = &unk_295410;
  v5 = _Block_copy(v9);
  v6 = (void *)objc_opt_self(UICustomViewMenuElement);
  v7 = objc_msgSend(v6, "elementWithViewProvider:", v5, swift_bridgeObjectRetain(a2).n128_f64[0]);
  _Block_release(v5);
  swift_release(v10);
  objc_msgSend(v7, "setMenuElementRepresentation:", a1);
  return v7;
}

void sub_1A29C0(uint64_t a1, uint64_t a2)
{
  int64_t v3;

  type metadata accessor for HighlightColorChooserView();
  swift_bridgeObjectRetain(a2);
  sub_1A2A00(v3, 0.0, 0.0, 0.0, 0.0);
}

void sub_1A2A00(int64_t a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  _QWORD *v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  id v30;
  uint64_t v31;
  uint64_t i;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  objc_class *v40;
  objc_class *v41;
  objc_class *v42;
  Class isa;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  NSString v55;
  id v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  _QWORD *v63;
  UIAction_optional v64;

  v8 = objc_msgSend(objc_msgSend(objc_allocWithZone(v5), "initWithFrame:", a2, a3, a4, a5), "subviews");
  v9 = sub_16F6BC(0, &qword_30CD80, UIView_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((v10 & 0xC000000000000001) != 0)
  {
    v11 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v10);
  }
  else
  {
    if (!*(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFF8)))
    {
      __break(1u);
      goto LABEL_30;
    }
    v11 = *(id *)(v10 + 32);
  }
  v6 = v11;
  swift_bridgeObjectRelease(v10);
  v12 = objc_opt_self(UIStackView);
  v62 = (id)swift_dynamicCastObjCClassUnconditional(v6, v12, 0, 0, 0);
  v13 = objc_msgSend(v62, "arrangedSubviews");
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, v9);

  v10 = v14;
  v61 = v14;
  if (!(v14 >> 62))
  {
    v15 = *(_QWORD *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFF8));
    goto LABEL_6;
  }
LABEL_30:
  if (v10 < 0)
    v35 = v61;
  else
    v35 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v61);
  v36 = v35;
  v10 = v61;
  v15 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v61);
LABEL_6:
  v59 = v6;
  v60 = v9;
  if (v15)
  {
    v63 = _swiftEmptyArrayStorage;
    v16 = (uint64_t)&v63;
    sub_185FBC(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
      __break(1u);
      goto LABEL_77;
    }
    v17 = 0;
    v6 = v63;
    v18 = v10 & 0xC000000000000001;
    v19 = a1;
    do
    {
      if (v18)
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v10);
      else
        v20 = *(id *)(v10 + 8 * v17 + 32);
      v21 = v20;
      v22 = objc_msgSend(v20, "accessibilityLabel", v59);
      if (v22)
      {
        v23 = v22;
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v26 = v25;

      }
      else
      {

        v24 = 0;
        v26 = 0;
      }
      v63 = v6;
      v28 = v6[2];
      v27 = v6[3];
      if (v28 >= v27 >> 1)
      {
        sub_185FBC(v27 > 1, v28 + 1, 1);
        v6 = v63;
      }
      ++v17;
      v6[2] = v28 + 1;
      v29 = &v6[2 * v28];
      v29[4] = v24;
      v29[5] = v26;
      v10 = v61;
    }
    while (v15 != v17);
    a1 = v19;
    swift_bridgeObjectRelease(v61);
    v9 = v60;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v6 = _swiftEmptyArrayStorage;
  }
  v30 = objc_msgSend(v62, "arrangedSubviews", v59);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v9);

  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v37 = v16;
    else
      v37 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v31 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v16);
    if (!v31)
      goto LABEL_38;
  }
  else
  {
    v31 = *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8));
    if (!v31)
      goto LABEL_38;
  }
  if (v31 < 1)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  for (i = 0; i != v31; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0)
      v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v16);
    else
      v33 = *(id *)(v16 + 8 * i + 32);
    v34 = v33;
    objc_msgSend(v62, "removeArrangedSubview:", v33);

  }
LABEL_38:
  swift_bridgeObjectRelease(v16);
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v44 = a1;
    else
      v44 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v38 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(a1);
    if (!v38)
      goto LABEL_50;
  }
  else
  {
    v38 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    if (!v38)
      goto LABEL_50;
  }
  sub_16F6BC(0, (unint64_t *)&unk_30CD70, UIButton_ptr);
  if (v38 < 1)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v39 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v40 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(v39, a1);
    else
      v40 = (objc_class *)*(id *)(a1 + 8 * v39 + 32);
    v41 = v40;
    ++v39;
    v42 = v40;
    v64.value.super.super.isa = v41;
    isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v64).super.super.super.super.isa;
    -[objc_class setPointerInteractionEnabled:](isa, "setPointerInteractionEnabled:", 1);
    objc_msgSend(v62, "addArrangedSubview:", isa);

  }
  while (v38 != v39);
LABEL_50:
  swift_bridgeObjectRelease(a1);
  v45 = objc_msgSend(v62, "arrangedSubviews");
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v60);

  if ((unint64_t)v16 >> 62)
    goto LABEL_70;
  v9 = *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8));
  while (v9)
  {
    a1 = v16 & 0xC000000000000001;
    if ((v16 & 0xC000000000000001) != 0)
    {
LABEL_79:
      v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v16);
    }
    else
    {
      if (!*(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8)))
      {
        __break(1u);
        return;
      }
      v46 = *(id *)(v16 + 32);
    }
    v47 = v46;
    v48 = v6[2];
    if (!v48)
    {
LABEL_67:
      swift_bridgeObjectRelease(v6);
      swift_bridgeObjectRelease(v16);

      goto LABEL_75;
    }
    v49 = 0;
    v50 = v6 + 5;
    v51 = v9 - 1;
    while (v49 < v6[2])
    {
      v53 = *v50;
      if (*v50)
      {
        swift_bridgeObjectRetain(*v50);
        v54 = v47;
        v55 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v53);
      }
      else
      {
        v56 = v47;
        v55 = 0;
      }
      objc_msgSend(v47, "setAccessibilityLabel:", v55, v59);

      if (v51 == v49)
        goto LABEL_74;
      v57 = v49 + 1;
      if (a1)
      {
        v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v57, v16);
      }
      else
      {
        if (v57 >= *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8)))
          goto LABEL_69;
        v52 = *(id *)(v16 + 8 * v49 + 40);
      }
      v47 = v52;
      ++v49;
      v50 += 2;
      if (v48 == v49)
        goto LABEL_67;
    }
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    if (v16 < 0)
      v58 = v16;
    else
      v58 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v9 = _CocoaArrayWrapper.endIndex.getter(v58);
    swift_bridgeObjectRelease(v16);
  }
LABEL_74:
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v16);
LABEL_75:

}

id BECustomViewMenuElement.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

id BECustomViewMenuElement.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for BECustomViewMenuElement();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id BECustomViewMenuElement.__deallocating_deinit(uint64_t a1)
{
  return sub_1A3EA0(a1, type metadata accessor for BECustomViewMenuElement);
}

id sub_1A3288(uint64_t a1)
{
  return sub_1A3EA0(a1, type metadata accessor for BECustomViewMenuEditDelegate);
}

char *sub_1A32A4(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *result;
  char *v15;
  Class v16;
  char *v17;
  Class v18;
  char *v19;
  Class v20;
  char *v21;
  Class v22;
  char *v23;
  Class v24;
  char *v25;
  Class v26;
  uint64_t v27;
  id v28;
  Class isa;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  Class v49;
  objc_super v50;

  *(_QWORD *)&v4[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_pageTheme] = 4;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_annotationUUID], 0);
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_delegate], 0);
  v50.receiver = v4;
  v50.super_class = (Class)type metadata accessor for HighlightColorChooserView();
  v9 = (char *)objc_msgSendSuper2(&v50, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setPreservesSuperviewLayoutMargins:", 1);
  v10 = sub_16B968(&qword_30C3E0);
  v11 = swift_allocObject(v10, 80, 7);
  *(_OWORD *)(v11 + 16) = xmmword_26C910;
  v12 = (void *)objc_opt_self(AEAnnotationTheme);
  v13 = OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_pageTheme;
  result = (char *)objc_msgSend(v12, "yellowTheme:", *(_QWORD *)&v9[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_pageTheme]);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v15 = result;
  v16 = sub_1A392C(result);

  *(_QWORD *)(v11 + 32) = v16;
  result = (char *)objc_msgSend(v12, "greenTheme:", *(_QWORD *)&v9[v13]);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v17 = result;
  v18 = sub_1A392C(result);

  *(_QWORD *)(v11 + 40) = v18;
  result = (char *)objc_msgSend(v12, "blueTheme:", *(_QWORD *)&v9[v13]);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v19 = result;
  v20 = sub_1A392C(result);

  *(_QWORD *)(v11 + 48) = v20;
  result = (char *)objc_msgSend(v12, "pinkTheme:", *(_QWORD *)&v9[v13]);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v21 = result;
  v22 = sub_1A392C(result);

  *(_QWORD *)(v11 + 56) = v22;
  result = (char *)objc_msgSend(v12, "purpleTheme:", *(_QWORD *)&v9[v13]);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v23 = result;
  v24 = sub_1A392C(result);

  *(_QWORD *)(v11 + 64) = v24;
  result = (char *)objc_msgSend(v12, "underlineTheme:", *(_QWORD *)&v9[v13]);
  if (result)
  {
    v25 = result;
    v26 = sub_1A392C(result);

    *(_QWORD *)(v11 + 72) = v26;
    specialized Array._endMutation()();
    v27 = v11;
    v28 = objc_allocWithZone((Class)UIStackView);
    sub_16F6BC(0, &qword_30CD80, UIView_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v27);
    v30 = objc_msgSend(v28, "initWithArrangedSubviews:", isa);

    objc_msgSend(v30, "setAlignment:", 3);
    objc_msgSend(v30, "setDistribution:", 3);
    objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v30, "setPreservesSuperviewLayoutMargins:", 1);
    objc_msgSend(v9, "addSubview:", v30);
    v31 = (void *)objc_opt_self(NSLayoutConstraint);
    v32 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v32 + 16) = xmmword_26C920;
    v33 = objc_msgSend(v30, "leadingAnchor");
    v34 = objc_msgSend(v9, "layoutMarginsGuide");
    v35 = objc_msgSend(v34, "leadingAnchor");

    v36 = objc_msgSend(v33, "constraintEqualToAnchor:", v35);
    *(_QWORD *)(v32 + 32) = v36;
    v37 = objc_msgSend(v30, "trailingAnchor");
    v38 = objc_msgSend(v9, "layoutMarginsGuide");
    v39 = objc_msgSend(v38, "trailingAnchor");

    v40 = objc_msgSend(v37, "constraintEqualToAnchor:", v39);
    *(_QWORD *)(v32 + 40) = v40;
    v41 = objc_msgSend(v30, "topAnchor");
    v42 = objc_msgSend(v9, "layoutMarginsGuide");
    v43 = objc_msgSend(v42, "topAnchor");

    v44 = objc_msgSend(v41, "constraintEqualToAnchor:", v43);
    *(_QWORD *)(v32 + 48) = v44;
    v45 = objc_msgSend(v30, "bottomAnchor");
    v46 = objc_msgSend(v9, "layoutMarginsGuide");
    v47 = objc_msgSend(v46, "bottomAnchor");

    v48 = objc_msgSend(v45, "constraintEqualToAnchor:", v47);
    *(_QWORD *)(v32 + 56) = v48;
    specialized Array._endMutation()();
    sub_16F6BC(0, &qword_30CD88, NSLayoutConstraint_ptr);
    v49 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v32);
    objc_msgSend(v31, "activateConstraints:", v49);

    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

Class sub_1A392C(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  UIButton v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  NSString v14;
  UIAction_optional v16;

  if (objc_msgSend(a1, "isUnderline"))
  {
    v3 = (void *)sub_1A42B0();
  }
  else
  {
    v4 = objc_msgSend(a1, "highlightColor");
    if (!v4)
    {
      __break(1u);
      JUMPOUT(0x1A3B8CLL);
    }
    v5 = v4;
    v3 = (void *)sub_1A4148(v4);

  }
  sub_16F6BC(0, (unint64_t *)&unk_30CD70, UIButton_ptr);
  sub_16F6BC(0, &qword_30CC30, UIAction_ptr);
  v6 = swift_allocObject(&unk_295448, 24, 7);
  swift_unknownObjectUnownedInit(v6 + 16, v1);
  v7 = swift_allocObject(&unk_295470, 32, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = a1;
  v8 = v3;
  v9 = a1;
  v16.value.super.super.isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, v3, 0, 0, 0, 0, 0, 0, sub_1A4D98, v7);
  v10.super.super.super.super.isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v16).super.super.super.super.isa;
  -[objc_class setPointerInteractionEnabled:](v10.super.super.super.super.isa, "setPointerInteractionEnabled:", 1);
  switch(objc_msgSend(v9, "annotationStyle"))
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      sub_1A0938();
      v12 = v11;
      v13 = v10.super.super.super.super.isa;
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
      -[objc_class setAccessibilityLabel:](v13, "setAccessibilityLabel:", v14);

      break;
    default:
      break;
  }

  return v10.super.super.super.super.isa;
}

void sub_1A3BA4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  const void *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  _QWORD *v30;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a2 + 16);
  v14 = swift_unknownObjectWeakLoadStrong(&Strong[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_delegate]);

  if (v14)
  {
    v15 = sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
    v16 = static OS_dispatch_queue.main.getter(v15);
    v28 = v6;
    v17 = (void *)v16;
    v18 = (_QWORD *)swift_allocObject(&unk_295510, 40, 7);
    v18[2] = a2;
    v18[3] = v14;
    v18[4] = a3;
    aBlock[4] = sub_1A4E18;
    v30 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_172474;
    aBlock[3] = &unk_295528;
    v19 = _Block_copy(aBlock);
    v27 = v9;
    v20 = v19;
    v21 = v30;
    swift_retain(a2);
    swift_unknownObjectRetain(v14);
    v22 = a3;
    v23 = swift_release(v21);
    static DispatchQoS.unspecified.getter(v23);
    aBlock[0] = _swiftEmptyArrayStorage;
    v24 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v25 = sub_16B968((uint64_t *)&unk_30C330);
    v26 = sub_1A4E24();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v5, v24);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v20);
    _Block_release(v20);
    swift_unknownObjectRelease(v14);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
  }
}

void sub_1A3DE8(uint64_t a1, void *a2, void *a3)
{
  char *Strong;
  id v6;
  id v7;

  Strong = (char *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  v7 = (id)swift_unknownObjectWeakLoadStrong(&Strong[OBJC_IVAR____TtC8BookCore25HighlightColorChooserView_annotationUUID]);

  v6 = objc_msgSend(a3, "annotationStyle");
  if (v7)
  {
    objc_msgSend(a2, "setStyleOfExistingHighlight:to:", v7, v6);

  }
  else
  {
    objc_msgSend(a2, "createHighlightForSelectionWithStyle:", v6);
  }
}

id sub_1A3E94(uint64_t a1)
{
  return sub_1A3EA0(a1, type metadata accessor for HighlightColorChooserView);
}

id sub_1A3EA0(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_1A3F08()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 88, 7);
}

void sub_1A3F3C(uint64_t a1)
{
  uint64_t v1;

  sub_1A23C8(*(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 72), a1, *(void **)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 80));
}

id sub_1A3F54(uint64_t a1)
{
  NSString v2;
  id v3;
  id v4;
  id v5;
  NSString v6;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v2);

  if (v3)
  {
    v4 = objc_msgSend(v3, "imageWithTintColor:", a1);
    v5 = objc_msgSend(v4, "imageWithRenderingMode:", 1);

    v3 = v5;
    v6 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setAccessibilityLabel:", v6);

  }
  return v3;
}

id sub_1A4058()
{
  NSString v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v0);

  if (v1)
  {
    v2 = objc_msgSend(v1, "imageWithRenderingMode:", 1);

    v1 = v2;
    sub_1A0938();
    v4 = v3;
    v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v4);
    objc_msgSend(v1, "setAccessibilityLabel:", v5);

  }
  return v1;
}

uint64_t sub_1A4148(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t result;
  _QWORD v11[5];
  uint64_t v12;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", 28.0, 28.0);
  v3 = swift_allocObject(&unk_295560, 32, 7);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a1;
  v4 = swift_allocObject(&unk_295588, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_1A4E70;
  *(_QWORD *)(v4 + 24) = v3;
  v11[4] = sub_176768;
  v12 = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1A17B8;
  v11[3] = &unk_2955A0;
  v5 = _Block_copy(v11);
  v6 = v12;
  v7 = v2;
  v8 = a1;
  swift_retain(v4);
  swift_release(v6);
  v9 = objc_msgSend(v7, "imageWithActions:", v5);

  _Block_release(v5);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v4, "", 116, 48, 36, 1);
  swift_release(v3);
  result = swift_release(v4);
  if ((v7 & 1) == 0)
    return (uint64_t)v9;
  __break(1u);
  return result;
}

uint64_t sub_1A42B0()
{
  id v0;
  NSString v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v15[5];
  uint64_t v16;

  v0 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", -1);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v1);

  if (v2)
  {
    v3 = objc_msgSend(v2, "imageWithConfiguration:", v0);

    v4 = objc_msgSend(v3, "imageWithRenderingMode:", 1);
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", 28.0, 28.0);
  v6 = swift_allocObject(&unk_295498, 32, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = swift_allocObject(&unk_2954C0, 32, 7);
  *(_QWORD *)(v7 + 16) = sub_1A4DCC;
  *(_QWORD *)(v7 + 24) = v6;
  v15[4] = sub_175C28;
  v16 = v7;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_1A17B8;
  v15[3] = &unk_2954D8;
  v8 = _Block_copy(v15);
  v9 = v16;
  v10 = v4;
  swift_retain(v7);
  v11 = v5;
  swift_release(v9);
  v12 = objc_msgSend(v11, "imageWithActions:", v8);

  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v7, "", 116, 64, 36, 1);
  swift_release(v6);
  result = swift_release(v7);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
    return (uint64_t)v12;
  __break(1u);
  return result;
}

id _s8BookCore23BECustomViewMenuElementC25highlightStyleButtonImage5style9pageTheme7isSmallSo7UIImageCSgSo012AEAnnotationH0V_So0qm5_PageM0VSbtFZ_0(int a1, uint64_t a2, char a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  switch(a1)
  {
    case 1:
      v4 = objc_msgSend((id)objc_opt_self(AEAnnotationTheme), "greenTheme:", a2);
      if (!v4)
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        JUMPOUT(0x1A47A0);
      }
      v5 = v4;
      v6 = objc_msgSend(v4, "highlightColor");

      if (!v6)
        goto LABEL_26;
LABEL_16:
      sub_1A0938();
      v16 = v15;
      if ((a3 & 1) != 0)
        v17 = (uint64_t)sub_1A3F54((uint64_t)v6);
      else
        v17 = sub_1A4148(v6);
      v18 = v17;

      swift_bridgeObjectRelease(v16);
      return (id)v18;
    case 2:
      v7 = objc_msgSend((id)objc_opt_self(AEAnnotationTheme), "blueTheme:", a2);
      if (!v7)
        goto LABEL_27;
      v8 = v7;
      v6 = objc_msgSend(v7, "highlightColor");

      if (v6)
        goto LABEL_16;
      goto LABEL_28;
    case 3:
      v9 = objc_msgSend((id)objc_opt_self(AEAnnotationTheme), "yellowTheme:", a2);
      if (!v9)
        goto LABEL_29;
      v10 = v9;
      v6 = objc_msgSend(v9, "highlightColor");

      if (v6)
        goto LABEL_16;
      goto LABEL_30;
    case 4:
      v11 = objc_msgSend((id)objc_opt_self(AEAnnotationTheme), "pinkTheme:", a2);
      if (!v11)
        goto LABEL_31;
      v12 = v11;
      v6 = objc_msgSend(v11, "highlightColor");

      if (v6)
        goto LABEL_16;
      goto LABEL_32;
    case 5:
      v13 = objc_msgSend((id)objc_opt_self(AEAnnotationTheme), "purpleTheme:", a2);
      if (!v13)
        goto LABEL_33;
      v14 = v13;
      v6 = objc_msgSend(v13, "highlightColor");

      if (v6)
        goto LABEL_16;
      goto LABEL_34;
    case 6:
      if ((a3 & 1) != 0)
        return sub_1A4058();
      else
        return (id)sub_1A42B0();
    default:
      return 0;
  }
}

_QWORD *sub_1A47B8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  int v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  _QWORD *v25;

  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_delegate]);
  if (Strong)
  {
    v7 = Strong;
    v8 = *(_QWORD *)&a1[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_pageTheme];
    v25 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(6);
    sub_16F6BC(0, &qword_30CC30, UIAction_ptr);
    for (i = 0; i != 24; i += 4)
    {
      v10 = *(_DWORD *)((char *)&off_292D30 + i + 32);
      v11 = _s8BookCore23BECustomViewMenuElementC25highlightStyleButtonImage5style9pageTheme7isSmallSo7UIImageCSgSo012AEAnnotationH0V_So0qm5_PageM0VSbtFZ_0(v10, v8, 1);
      v12 = swift_allocObject(&unk_2955D8, 36, 7);
      *(_QWORD *)(v12 + 16) = a1;
      *(_QWORD *)(v12 + 24) = v7;
      *(_DWORD *)(v12 + 32) = v10;
      v13 = a1;
      swift_unknownObjectRetain(v7);
      v14 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, v11, 0, 0, 0, 0, 0, 0, sub_1A5110, v12);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      v15 = v25[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
      v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v14);
      specialized ContiguousArray._endMutation()(v16);
    }
    v17 = v25;
    swift_unknownObjectRelease(v7);
  }
  else
  {
    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
    v18 = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 0xD000000000000014, 0x80000000002175E0);
    v19 = Logger.init(_:)(v18);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_0, v20, v21, "No delegate for highlight menu", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return _swiftEmptyArrayStorage;
  }
  return v17;
}

id _s8BookCore23BECustomViewMenuElementC015createHighlighteF03for14annotationUUID8delegateSo06UIMenuF0CSo022AEAnnotationTheme_PageO0V_So8NSStringCSgAA0heF8Delegate_ptFZ_0(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  UIMenuElementSize v20;
  uint64_t v21;
  UIMenuElementSize preferredElementSize;
  Swift::String v23;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  Swift::OpaquePointer v28;
  objc_super v29;
  _QWORD aBlock[5];
  _QWORD *v31;
  UIImage_optional v32;

  v6 = (_QWORD *)swift_allocObject(&unk_295600, 40, 7);
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  aBlock[4] = sub_1A5200;
  v31 = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A1C88;
  aBlock[3] = &unk_295618;
  v7 = _Block_copy(aBlock);
  v8 = (void *)objc_opt_self(UICustomViewMenuElement);
  v9 = a2;
  v10 = objc_msgSend(v8, "elementWithViewProvider:", v7, swift_unknownObjectRetain(a3).n128_f64[0]);
  _Block_release(v7);
  swift_release(v31);
  v11 = (objc_class *)type metadata accessor for HighlightMenuIdentifier();
  v12 = (char *)objc_allocWithZone(v11);
  v13 = swift_unknownObjectWeakInit(&v12[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_delegate], 0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_annotationUUID] = a2;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_pageTheme] = a1;
  swift_unknownObjectWeakAssign(v13, a3);
  v29.receiver = v12;
  v29.super_class = v11;
  v14 = v9;
  v15 = (char *)objc_msgSendSuper2(&v29, "init");
  v16 = sub_1A0938();
  v18 = v17;
  v19 = (uint64_t)sub_1A47B8(v15);
  v20 = v19;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v26 = v19;
    else
      v26 = v19 & 0xFFFFFFFFFFFFFF8;
    v27 = sub_16F6BC(0, &qword_30CD98, UIMenuElement_ptr);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v26, v27);
  }
  else
  {
    v21 = swift_bridgeObjectRetain(v19);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v21);
    sub_16F6BC(0, &qword_30CD98, UIMenuElement_ptr);
    preferredElementSize = v20;
  }
  swift_bridgeObjectRelease(v20);
  sub_16F6BC(0, &qword_30CDA0, UIMenu_ptr);
  v23._countAndFlagsBits = v16;
  v23._object = v18;
  v32.value.super.isa = 0;
  v32.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v23, (Swift::String_optional)0, v32, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v28).super.super.isa;
  objc_msgSend(v10, "setMenuElementRepresentation:", isa);

  return v10;
}

uint64_t sub_1A4CBC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1A4CE0(uint64_t a1)
{
  uint64_t v1;

  sub_1A29C0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for HighlightMenuIdentifier()
{
  return objc_opt_self(_TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier);
}

uint64_t type metadata accessor for BECustomViewMenuEditDelegate()
{
  return objc_opt_self(_TtC8BookCore28BECustomViewMenuEditDelegate);
}

uint64_t type metadata accessor for HighlightColorChooserView()
{
  return objc_opt_self(_TtC8BookCore25HighlightColorChooserView);
}

uint64_t sub_1A4D48()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1A4D6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1A4D98(uint64_t a1)
{
  uint64_t v1;

  sub_1A3BA4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1A4DA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1A4DCC(void *a1)
{
  uint64_t v1;

  sub_1A17EC(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1A4DD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1A4DE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1A4E18()
{
  uint64_t v0;

  sub_1A3DE8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_1A4E24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30B5D0;
  if (!qword_30B5D0)
  {
    v1 = sub_175E8C((uint64_t *)&unk_30C330);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_30B5D0);
  }
  return result;
}

void sub_1A4E70(void *a1)
{
  uint64_t v1;

  sub_1A16D0(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1A4E78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

Class sub_1A4E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  UIMenuElementSize v9;
  uint64_t v10;
  UIMenuElementSize v11;
  Swift::String v12;
  UIMenu v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  uint64_t v21;
  Swift::OpaquePointer v22;
  _QWORD v24[5];
  UIImage_optional v25;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIEditMenuConfiguration.identifier.getter(v24, v2);
  v5.isa = AnyHashable._bridgeToObjectiveC()().isa;
  sub_176638((uint64_t)v24);
  v6 = type metadata accessor for HighlightMenuIdentifier();
  v7 = (char *)swift_dynamicCastClass(v5.isa, v6);
  if (v7)
  {
    v8 = (uint64_t)sub_1A47B8(v7);
    v9 = v8;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v20 = v8;
      else
        v20 = v8 & 0xFFFFFFFFFFFFFF8;
      v21 = sub_16F6BC(0, &qword_30CD98, UIMenuElement_ptr);
      v11 = _bridgeCocoaArray<A>(_:)(v20, v21);
    }
    else
    {
      swift_bridgeObjectRetain(v8);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v10);
      sub_16F6BC(0, &qword_30CD98, UIMenuElement_ptr);
      v11 = v9;
    }
    swift_bridgeObjectRelease(v9);
    sub_16F6BC(0, &qword_30CDA0, UIMenu_ptr);
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v25.value.super.isa = 0;
    v25.is_nil = 0;
    v13.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v25, 0, 0xFFFFFFFFFFFFFFFFLL, v11, v22).super.super.isa;

  }
  else
  {

    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
    v14 = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 0xD000000000000014, 0x80000000002175E0);
    v15 = Logger.init(_:)(v14);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_0, v16, v17, "No identifier for highlight menu", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
    return 0;
  }
  return v13.super.super.isa;
}

uint64_t sub_1A50E4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 36, 7);
}

id sub_1A5110()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  if (*(_QWORD *)(*(_QWORD *)(v0 + 16)
                 + OBJC_IVAR____TtC8BookCoreP33_213CCCF002B71F6D33A127415B0D848C23HighlightMenuIdentifier_annotationUUID))
    return objc_msgSend(v1, "setStyleOfExistingHighlight:to:");
  else
    return objc_msgSend(v1, "createHighlightForSelectionWithStyle:");
}

uint64_t sub_1A5148()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1A5174()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 72, 7);
}

void sub_1A5198(void *a1)
{
  uint64_t v1;

  sub_1A24E8(a1, *(void (**)(id))(v1 + 48), *(CGFloat *)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40));
}

uint64_t sub_1A51AC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 88, 7);
}

void sub_1A51E8()
{
  uint64_t v0;

  sub_1A20BC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(CGFloat *)(v0 + 56), *(CGFloat *)(v0 + 64), *(CGFloat *)(v0 + 72), *(CGFloat *)(v0 + 80), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

void sub_1A5240(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1A5290(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A536C + 4 * byte_26C9DA[a2]))(0xD000000000000017);
}

uint64_t sub_1A536C(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  char v3;

  v2 = 0x8000000000214BC0;
  if (a1 == 0xD000000000000017 && v1 == 0x8000000000214BC0)
  {
    v3 = 1;
    v2 = v1;
  }
  else
  {
    v3 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0xD000000000000017, 0x8000000000214BC0, 0);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void sub_1A547C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A54C4(uint64_t a1)
{
  String.hash(into:)(a1, 0xD000000000000017, 0x8000000000214BC0);
  return swift_bridgeObjectRelease(0x8000000000214BC0);
}

unint64_t static PPTConfig.launchTestKey.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1A55B4()
{
  uint64_t result;

  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 5525584, 0xE300000000000000);
  qword_30CDB8 = result;
  return result;
}

uint64_t sub_1A5618()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_178954(v0, qword_30CDC0);
  sub_178770(v0, (uint64_t)qword_30CDC0);
  if (qword_30AB40 != -1)
    swift_once(&qword_30AB40, sub_1A55B4);
  return Logger.init(_:)((id)qword_30CDB8);
}

unint64_t sub_1A5698()
{
  unint64_t result;

  result = sub_192CA8((uint64_t)&off_292D68);
  qword_313848 = result;
  return result;
}

uint64_t PPTExtendedLaunchType.Destination.rawValue.getter(char a1)
{
  if (!a1)
    return 1701670760;
  if (a1 == 1)
    return 1802465122;
  return 0x6F6F626F69647561;
}

uint64_t sub_1A570C(_BYTE *a1, _BYTE *a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0xE400000000000000;
  v4 = 0xE400000000000000;
  v5 = 1802465122;
  if (v2 != 1)
  {
    v5 = 0x6F6F626F69647561;
    v4 = 0xE90000000000006BLL;
  }
  if (*a1)
    v6 = v5;
  else
    v6 = 1701670760;
  if (v2)
    v7 = v4;
  else
    v7 = 0xE400000000000000;
  v8 = 1802465122;
  if (*a2 != 1)
  {
    v8 = 0x6F6F626F69647561;
    v3 = 0xE90000000000006BLL;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 1701670760;
  if (*a2)
    v10 = v3;
  else
    v10 = 0xE400000000000000;
  if (v6 == v9 && v7 == v10)
  {
    v11 = 1;
    v10 = v7;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v9, v10, 0);
  }
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v10);
  return v11 & 1;
}

Swift::Int sub_1A57FC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0xE400000000000000;
  v3 = 1802465122;
  if (v1 != 1)
  {
    v3 = 0x6F6F626F69647561;
    v2 = 0xE90000000000006BLL;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 1701670760;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_1A5890(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0xE400000000000000;
  v3 = 1802465122;
  if (*v1 != 1)
  {
    v3 = 0x6F6F626F69647561;
    v2 = 0xE90000000000006BLL;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 1701670760;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE400000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1A5900(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0xE400000000000000;
  v4 = 1802465122;
  if (v2 != 1)
  {
    v4 = 0x6F6F626F69647561;
    v3 = 0xE90000000000006BLL;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 1701670760;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE400000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_1A5990@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s8BookCore21PPTExtendedLaunchTypeO11DestinationO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1A59BC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE400000000000000;
  v5 = 1802465122;
  if (v2 != 1)
  {
    v5 = 0x6F6F626F69647561;
    v4 = 0xE90000000000006BLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701670760;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t PPTExtendedLaunchType.destination.getter()
{
  char *v0;

  return byte_26CBEA[*v0];
}

BookCore::PPTExtendedLaunchType_optional __swiftcall PPTExtendedLaunchType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  void *object;
  Swift::String v3;
  char *v4;
  unint64_t v5;
  BookCore::PPTExtendedLaunchType_optional result;
  char v7;

  object = rawValue._object;
  v3._countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_292E30, v3);
  result.value = swift_bridgeObjectRelease(object);
  v7 = 10;
  if (v5 < 0xA)
    v7 = v5;
  *v4 = v7;
  return result;
}

uint64_t PPTExtendedLaunchType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5AB4 + 4 * byte_26C9EE[*v0]))(0xD000000000000014, 0x8000000000214BA0);
}

unint64_t sub_1A5AB4()
{
  return 0xD000000000000017;
}

uint64_t sub_1A5B18@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_1A5B28()
{
  return 0x6F6F626F69647561;
}

uint64_t sub_1A5B4C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 5;
}

void sub_1A5B5C()
{
  JUMPOUT(0x1A5B68);
}

void sub_1A5B74(char *a1)
{
  sub_1A5240(*a1);
}

Swift::Int sub_1A5B80()
{
  char *v0;
  char v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  sub_1A547C((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_1A5BC4(uint64_t a1)
{
  char *v1;

  sub_1A547C(a1, *v1);
}

Swift::Int sub_1A5BCC(uint64_t a1)
{
  char *v1;
  char v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  sub_1A547C((uint64_t)v4, v2);
  return Hasher._finalize()();
}

BookCore::PPTExtendedLaunchType_optional sub_1A5C0C(Swift::String *a1)
{
  return PPTExtendedLaunchType.init(rawValue:)(*a1);
}

uint64_t sub_1A5C18@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PPTExtendedLaunchType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

char sub_1A5C3C@<W0>(_BYTE *a1@<X8>)
{
  void *v1;
  NSString v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  unint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "stringForKey:", v3);

  if (!v4
    || (v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4),
        v7 = v6,
        v4,
        v8._countAndFlagsBits = v5,
        v8._object = v7,
        LOBYTE(v9) = PPTExtendedLaunchType.init(rawValue:)(v8),
        LOBYTE(v10) = v19[0],
        v19[0] == 10))
  {
    v11 = String._bridgeToObjectiveC()();
    v12 = objc_msgSend(v1, "objectForKey:", v11);

    if (v12)
    {
      _bridgeAnyObjectToAny(_:)(v18);
      swift_unknownObjectRelease(v12);
    }
    else
    {
      memset(v18, 0, sizeof(v18));
    }
    sub_16D864((uint64_t)v18, (uint64_t)v19);
    if (!v20)
    {
      LOBYTE(v9) = sub_16D8AC((uint64_t)v19);
      goto LABEL_14;
    }
    LOBYTE(v9) = swift_dynamicCast(&v17, v19, (char *)&type metadata for Any + 8, &type metadata for Int, 6);
    if ((v9 & 1) == 0)
    {
LABEL_14:
      LOBYTE(v10) = 0;
      goto LABEL_15;
    }
    v13 = v17;
    if (qword_30AB50 != -1)
      LOBYTE(v9) = swift_once(&qword_30AB50, sub_1A5698);
    v14 = qword_313848;
    v10 = *(_QWORD *)(qword_313848 + 16);
    if (v10)
    {
      v9 = sub_18817C(v13);
      if ((v15 & 1) != 0)
      {
        LOBYTE(v10) = *(_BYTE *)(*(_QWORD *)(v14 + 56) + v9);
        goto LABEL_15;
      }
      goto LABEL_14;
    }
  }
LABEL_15:
  *a1 = v10;
  return v9;
}

void sub_1A5DE8()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_16F6BC(0, &qword_30C578, NSString_ptr);
  v0 = (void *)NSString.init(stringLiteral:)("/var/mobile/Media/Books/", 24, 2);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "stringByAppendingPathComponent:", v1);

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  qword_30CDD8 = v3;
  unk_30CDE0 = v5;
}

id sub_1A5ED4()
{
  if (qword_30AB40 != -1)
    swift_once(&qword_30AB40, sub_1A55B4);
  qword_30CDE8 = qword_30CDB8;
  return (id)qword_30CDB8;
}

id static PPTConfig.os_log.getter()
{
  if (qword_30AB60 != -1)
    swift_once(&qword_30AB60, sub_1A5ED4);
  return (id)qword_30CDE8;
}

uint64_t sub_1A5F9C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  type metadata accessor for ProcessEnvironment(0);
  v0 = (void *)static ProcessEnvironment.current.getter();
  v1 = dispatch thunk of ProcessEnvironment.variant.getter();

  v2 = ProcessEnvironmentVariant.rawValue.getter(v1);
  result = ProcessEnvironmentVariant.rawValue.getter(1);
  byte_30CDF0 = v2 == result;
  return result;
}

uint64_t static PPTConfig.currentlyInTest.getter()
{
  return sub_1A66DC(&qword_30AB68, (unsigned __int8 *)&byte_30CDF0);
}

uint64_t static PPTConfig.usePPTLaunchContent.getter()
{
  if (qword_30AB68 != -1)
    swift_once(&qword_30AB68, sub_1A5F9C);
  if ((byte_30CDF0 & 1) != 0)
    return 1;
  if (qword_30AB70 != -1)
    swift_once(&qword_30AB70, sub_1A6130);
  return byte_30CDF1;
}

void sub_1A6130()
{
  id v0;
  NSString v1;
  id v2;
  _OWORD v3[2];

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForKey:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v3);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_16D8AC((uint64_t)v3);

  byte_30CDF1 = v2 != 0;
}

uint64_t static PPTConfig.hasExtendedLaunchTypeSet.getter()
{
  return sub_1A66DC(&qword_30AB70, (unsigned __int8 *)&byte_30CDF1);
}

void sub_1A6238()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_1A5C3C(&byte_30CDF2);

}

uint64_t static PPTConfig.extendedLaunchTestType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  if (qword_30AB78 != -1)
    result = swift_once(&qword_30AB78, sub_1A6238);
  *a1 = byte_30CDF2;
  return result;
}

uint64_t static PPTConfig.extendedLaunchTestDestination.getter()
{
  id v0;
  char v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_1A5C3C(&v2);

  return byte_26CBEA[v2];
}

void sub_1A63A4()
{
  if (qword_30AB78 != -1)
    swift_once(&qword_30AB78, sub_1A6238);
  __asm { BR              X13; loc_1A64BC }
}

uint64_t static PPTConfig.isReturningUser.getter()
{
  return sub_1A66DC(&qword_30AB80, (unsigned __int8 *)&byte_30CDF3);
}

void sub_1A6548()
{
  if (qword_30AB78 != -1)
    swift_once(&qword_30AB78, sub_1A6238);
  __asm { BR              X11; loc_1A65A4 }
}

uint64_t static PPTConfig.shouldHaveContinueAndPreviousContent.getter()
{
  return sub_1A66DC(&qword_30AB88, (unsigned __int8 *)&byte_30CDF4);
}

uint64_t sub_1A66DC(_QWORD *a1, unsigned __int8 *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_1A6730(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned __int8 *a4, uint64_t a5)
{
  if (*a3 != -1)
    swift_once(a3, a5);
  return *a4;
}

id sub_1A6794(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;

  a3();
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  return v5;
}

id PPTConfig.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTConfig();
  return objc_msgSendSuper2(&v2, "init");
}

id PPTConfig.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTConfig();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t _s8BookCore21PPTExtendedLaunchTypeO11DestinationO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_292DC8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

void _s8BookCore9PPTConfigC32extendedLaunchTestTypeForLoggingSSvgZ_0()
{
  if (qword_30AB78 != -1)
    swift_once(&qword_30AB78, sub_1A6238);
  __asm { BR              X11; loc_1A69D0 }
}

uint64_t _s8BookCore9PPTConfigC35extendedLaunchTestDestinationIsHomeSbvgZ_0()
{
  id v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  char v4;
  char v6;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_1A5C3C(&v6);

  v1 = 1 << v6;
  if (((1 << v6) & 0xF) != 0)
  {
    v4 = 1;
    v2 = 0xE400000000000000;
  }
  else
  {
    if ((v1 & 0x70) != 0)
      v2 = 0xE400000000000000;
    else
      v2 = 0xE90000000000006BLL;
    if ((v1 & 0x70) != 0)
      v3 = 1802465122;
    else
      v3 = 0x6F6F626F69647561;
    v4 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, 1701670760, 0xE400000000000000, 0);
  }
  swift_bridgeObjectRelease(v2);
  return v4 & 1;
}

uint64_t _s8BookCore9PPTConfigC031extendedLaunchTestDestinationIsA0SbvgZ_0()
{
  id v0;
  char v1;
  unint64_t v2;
  uint64_t v3;
  char v5;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_1A5C3C(&v5);

  if (((1 << v5) & 0xF) != 0)
  {
    v2 = 0xE400000000000000;
    v3 = 1701670760;
LABEL_6:
    v1 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v2, 1802465122, 0xE400000000000000, 0);
    goto LABEL_7;
  }
  if (((1 << v5) & 0x70) == 0)
  {
    v3 = 0x6F6F626F69647561;
    v2 = 0xE90000000000006BLL;
    goto LABEL_6;
  }
  v1 = 1;
  v2 = 0xE400000000000000;
LABEL_7:
  swift_bridgeObjectRelease(v2);
  return v1 & 1;
}

uint64_t _s8BookCore9PPTConfigC40extendedLaunchTestDestinationIsAudiobookSbvgZ_0()
{
  id v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  char v5;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  sub_1A5C3C(&v5);

  if (((1 << v5) & 0xF) != 0)
  {
    v1 = 1701670760;
  }
  else
  {
    if (((1 << v5) & 0x70) == 0)
    {
      v3 = 1;
      v2 = 0xE90000000000006BLL;
      goto LABEL_7;
    }
    v1 = 1802465122;
  }
  v2 = 0xE400000000000000;
  v3 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, 0xE400000000000000, 0x6F6F626F69647561, 0xE90000000000006BLL, 0);
LABEL_7:
  swift_bridgeObjectRelease(v2);
  return v3 & 1;
}

void _s8BookCore9PPTConfigC28shouldUseCachedTopPicksCardsSbvgZ_0()
{
  if (qword_30AB78 != -1)
    swift_once(&qword_30AB78, sub_1A6238);
  __asm { BR              X13; loc_1A6D70 }
}

uint64_t _s8BookCore9PPTConfigC28cachedTopPickCardsJSONStringSSvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  NSString v3;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_30AB58 != -1)
    swift_once(&qword_30AB58, sub_1A5DE8);
  v3 = String._bridgeToObjectiveC()();
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "stringByAppendingPathComponent:", v4);

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  v8 = v7;

  static String.Encoding.utf8.getter(v9);
  v10 = String.init(contentsOfFile:encoding:)(v6, v8, v2);
  swift_bridgeObjectRelease(v8);
  return v10;
}

uint64_t type metadata accessor for PPTConfig()
{
  return objc_opt_self(BCPPTConfig);
}

unint64_t sub_1A7118()
{
  unint64_t result;

  result = qword_30CDF8;
  if (!qword_30CDF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PPTExtendedLaunchType.Destination, &type metadata for PPTExtendedLaunchType.Destination);
    atomic_store(result, (unint64_t *)&qword_30CDF8);
  }
  return result;
}

unint64_t sub_1A7160()
{
  unint64_t result;

  result = qword_30CE00;
  if (!qword_30CE00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PPTExtendedLaunchType, &type metadata for PPTExtendedLaunchType);
    atomic_store(result, (unint64_t *)&qword_30CE00);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PPTExtendedLaunchType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PPTExtendedLaunchType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A7280 + 4 * byte_26CA25[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A72B4 + 4 * byte_26CA20[v4]))();
}

uint64_t sub_1A72B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A72BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A72C4);
  return result;
}

uint64_t sub_1A72D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A72D8);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A72DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A72E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PPTExtendedLaunchType()
{
  return &type metadata for PPTExtendedLaunchType;
}

uint64_t storeEnumTagSinglePayload for PPTExtendedLaunchType.Destination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A734C + 4 * byte_26CA2F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A7380 + 4 * byte_26CA2A[v4]))();
}

uint64_t sub_1A7380(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A7388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A7390);
  return result;
}

uint64_t sub_1A739C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A73A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A73A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A73B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PPTExtendedLaunchType.Destination()
{
  return &type metadata for PPTExtendedLaunchType.Destination;
}

uint64_t sub_1A7418()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___BCTurnPageButton_useMaterialFill);
  swift_beginAccess(v0 + OBJC_IVAR___BCTurnPageButton_useMaterialFill, v3, 0, 0);
  return *v1;
}

void sub_1A74CC(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *v4;
  int v5;
  _BYTE v6[24];

  v3 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR___BCTurnPageButton_useMaterialFill);
  swift_beginAccess(v1 + OBJC_IVAR___BCTurnPageButton_useMaterialFill, v6, 1, 0);
  v5 = *v4;
  *v4 = a1;
  if (v5 != v3)
    sub_1A8954();
}

void sub_1A7530(unsigned __int8 *a1, _QWORD *a2)
{
  int v2;
  _BYTE *v3;
  int v4;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR___BCTurnPageButton_useMaterialFill);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = v2;
  if (v2 != v4)
    sub_1A8954();
}

void (*sub_1A7594(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___BCTurnPageButton_useMaterialFill;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1A7600;
}

void sub_1A7600(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v5 = *(unsigned __int8 *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  if (v4 != v5)
    sub_1A8954();
  free(v1);
}

uint64_t sub_1A7684()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___BCTurnPageButton_hovering);
  swift_beginAccess(v0 + OBJC_IVAR___BCTurnPageButton_hovering, v3, 0, 0);
  return *v1;
}

void sub_1A772C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  _BYTE v4[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR___BCTurnPageButton_hovering);
  swift_beginAccess(v1 + OBJC_IVAR___BCTurnPageButton_hovering, v4, 1, 0);
  *v3 = a1;
  sub_1A7780();
}

void sub_1A7780()
{
  uint64_t v0;
  unsigned __int8 *v1;
  int v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  void *v9;
  char **v10;
  char v11[24];
  _BYTE v12[24];
  char v13[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___BCTurnPageButton_useMaterialFill);
  swift_beginAccess(v0 + OBJC_IVAR___BCTurnPageButton_useMaterialFill, v13, 0, 0);
  v2 = *v1;
  v3 = (_BYTE *)(v0 + OBJC_IVAR___BCTurnPageButton_hovering);
  v4 = v0 + OBJC_IVAR___BCTurnPageButton_hovering;
  if (v2 == 1)
  {
    swift_beginAccess(v4, v12, 0, 0);
    if (*v3)
      v5 = 8;
    else
      v5 = 6;
    v6 = (uint64_t *)(v0 + OBJC_IVAR___BCTurnPageButton_materialFill);
    swift_beginAccess(v0 + OBJC_IVAR___BCTurnPageButton_materialFill, v11, 1, 0);
    v7 = *v6;
    *v6 = v5;
    if (v7 != v5)
      sub_1A8954();
  }
  else
  {
    swift_beginAccess(v4, v12, 0, 0);
    v8 = *v3;
    v9 = (void *)objc_opt_self(UIColor);
    v10 = &selRef_quaternaryLabelColor;
    if (!v8)
      v10 = &selRef_clearColor;
    sub_1A7E58(objc_msgSend(v9, *v10));
  }
}

void (*sub_1A7888(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + OBJC_IVAR___BCTurnPageButton_hovering, a1, 33, 0);
  return sub_1A78D0;
}

void sub_1A78D0(uint64_t a1, char a2)
{
  swift_endAccess(a1);
  if ((a2 & 1) == 0)
    sub_1A7780();
}

uint64_t sub_1A7944()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___BCTurnPageButton_pressed);
  swift_beginAccess(v0 + OBJC_IVAR___BCTurnPageButton_pressed, v3, 0, 0);
  return *v1;
}

id sub_1A7A08(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  double v4;
  id result;
  _BYTE v6[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR___BCTurnPageButton_pressed);
  swift_beginAccess(v1 + OBJC_IVAR___BCTurnPageButton_pressed, v6, 1, 0);
  *v3 = a1;
  result = *(id *)(v1 + OBJC_IVAR___BCTurnPageButton_pressedLayer);
  if (result)
  {
    LODWORD(v4) = 0;
    if ((a1 & 1) != 0)
      *(float *)&v4 = 1.0;
    return objc_msgSend(result, "setOpacity:", v4);
  }
  return result;
}

id sub_1A7A84(unsigned __int8 *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  _BYTE *v4;
  double v5;
  id result;
  _BYTE v7[24];

  v2 = *a1;
  v3 = *a2;
  v4 = (_BYTE *)(*a2 + OBJC_IVAR___BCTurnPageButton_pressed);
  swift_beginAccess(v4, v7, 1, 0);
  *v4 = v2;
  result = *(id *)(v3 + OBJC_IVAR___BCTurnPageButton_pressedLayer);
  if (result)
  {
    LODWORD(v5) = 0;
    if (v2)
      *(float *)&v5 = 1.0;
    return objc_msgSend(result, "setOpacity:", v5);
  }
  return result;
}

void (*sub_1A7B04(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___BCTurnPageButton_pressed;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_1A7B5C;
}

void sub_1A7B5C(_QWORD *a1, char a2)
{
  _QWORD *v3;
  double v4;
  uint64_t v5;
  void *v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v5 = v3[3];
    v6 = *(void **)(v5 + OBJC_IVAR___BCTurnPageButton_pressedLayer);
    if (v6)
    {
      LODWORD(v4) = 0;
      if (*(_BYTE *)(v5 + v3[4]))
        *(float *)&v4 = 1.0;
      objc_msgSend(v6, "setOpacity:", v4);
    }
  }
  free(v3);
}

void sub_1A7BC4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR___BCTurnPageButton_materialFill);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = v2;
  if (v4 != v2)
    sub_1A8954();
}

uint64_t sub_1A7C28()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BCTurnPageButton_materialFill;
  swift_beginAccess(v0 + OBJC_IVAR___BCTurnPageButton_materialFill, v3, 0, 0);
  return *(_QWORD *)v1;
}

void sub_1A7C6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v5[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___BCTurnPageButton_materialFill);
  swift_beginAccess(v1 + OBJC_IVAR___BCTurnPageButton_materialFill, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;
  if (v4 != a1)
    sub_1A8954();
}

void (*sub_1A7CCC(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___BCTurnPageButton_materialFill;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (_QWORD *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 1, 0);
  v3[3] = *v5;
  return sub_1A7D38;
}

void sub_1A7D38(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_QWORD *)(v4 + v3);
  *(_QWORD *)(v4 + v3) = v2;
  if (v5 != v2)
    sub_1A8954();
  free(v1);
}

void *sub_1A7DC4()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR___BCTurnPageButton_fillColor);
  swift_beginAccess(v0 + OBJC_IVAR___BCTurnPageButton_fillColor, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1A7E58(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;
  _BYTE v10[24];

  v2 = v1;
  v4 = (void **)(v2 + OBJC_IVAR___BCTurnPageButton_fillColor);
  swift_beginAccess(v2 + OBJC_IVAR___BCTurnPageButton_fillColor, v10, 1, 0);
  v5 = *v4;
  *v4 = a1;
  v6 = a1;
  if (!v5)
  {
    if (!a1)
    {
LABEL_7:
      v7 = v5;
      goto LABEL_8;
    }
LABEL_6:
    sub_1A8954();
    goto LABEL_7;
  }
  if (!a1)
    goto LABEL_6;
  sub_1A91B4();
  v7 = v5;
  v8 = v6;
  v9 = static NSObject.== infix(_:_:)(v7, v8);

  if ((v9 & 1) == 0)
    goto LABEL_6;
LABEL_8:

}

void (*sub_1A7F1C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void **v4;
  void *v5;
  id v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = (void **)(v1 + OBJC_IVAR___BCTurnPageButton_fillColor);
  swift_beginAccess(v1 + OBJC_IVAR___BCTurnPageButton_fillColor, v3, 0, 0);
  v5 = *v4;
  v3[3] = *v4;
  v6 = v5;
  return sub_1A7F90;
}

void sub_1A7F90(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    sub_1A7E58(v3);

  }
  else
  {
    sub_1A7E58(*(void **)(*(_QWORD *)a1 + 24));
  }
  free(v2);
}

uint64_t sub_1A8030()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BCTurnPageButton_delegate;
  swift_beginAccess(v0 + OBJC_IVAR___BCTurnPageButton_delegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_1A80C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR___BCTurnPageButton_delegate;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_1A8120(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___BCTurnPageButton_delegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_170AB8;
}

_BYTE *static TurnPageButton.leftButton()()
{
  uint64_t v0;
  _BYTE *v1;

  v0 = type metadata accessor for TurnPageButton();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "buttonWithType:", 0);
  v1[OBJC_IVAR___BCTurnPageButton_direction] = 0;
  sub_1A82D8();
  return v1;
}

_BYTE *static TurnPageButton.rightButton()()
{
  uint64_t v0;
  _BYTE *v1;

  v0 = type metadata accessor for TurnPageButton();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "buttonWithType:", 0);
  v1[OBJC_IVAR___BCTurnPageButton_direction] = 1;
  sub_1A82D8();
  return v1;
}

uint64_t sub_1A82D8()
{
  _BYTE *v0;
  uint64_t v1;
  double v2;
  id v3;
  id v4;
  unint64_t v5;
  id v6;
  NSString v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v1 = OBJC_IVAR___BCTurnPageButton_direction;
  if (v0[OBJC_IVAR___BCTurnPageButton_direction])
    v2 = 0.0;
  else
    v2 = -0.5;
  objc_msgSend(v0, "setImageEdgeInsets:", 0.0, v2);
  objc_msgSend(v0, "setFrame:", CGRectMakeWithSize(27.0, 64.0));
  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCornerRadius:", 6.0);

  objc_msgSend(v0, "setClipsToBounds:", 1);
  v4 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 5, 3, 26.0);
  if (v0[v1])
    v5 = 0x8000000000217A20;
  else
    v5 = 0x8000000000217A40;
  v6 = v4;
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v8 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v7, v6);

  objc_msgSend(v0, "setImage:forState:", v8, 0);
  v9 = objc_msgSend(v0, "imageView");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksSecondaryLabelColor");
    objc_msgSend(v10, "setTintColor:", v11);

  }
  sub_1A8508();
  sub_1A8640();
  sub_1A8954();
  sub_1A87D4();
  v12 = sub_186990();
  v13 = UIView.registerForTraitChanges(_:action:)(v12, "_traitCollectionDidChangeWithSender:previousTraitCollection:");

  swift_unknownObjectRelease(v13);
  return swift_bridgeObjectRelease(v12);
}

void sub_1A8508()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  char v7[24];

  v1 = &v0[OBJC_IVAR___BCTurnPageButton_materialFill];
  swift_beginAccess(&v0[OBJC_IVAR___BCTurnPageButton_materialFill], v7, 0, 0);
  v2 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", *(_QWORD *)v1);
  v3 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v2);
  objc_msgSend(v0, "bounds");
  objc_msgSend(v3, "setFrame:");

  objc_msgSend(v3, "setUserInteractionEnabled:", 0);
  objc_msgSend(v0, "insertSubview:atIndex:", v3, 0);
  v4 = objc_msgSend(v0, "imageView");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v0, "bringSubviewToFront:", v4);

  }
  v6 = *(void **)&v0[OBJC_IVAR___BCTurnPageButton_blurView];
  *(_QWORD *)&v0[OBJC_IVAR___BCTurnPageButton_blurView] = v3;

}

void sub_1A8640()
{
  char *v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char *v6;
  double v7;
  id v8;
  id v9;
  char v10[24];

  v1 = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  v2 = objc_msgSend(v0, "layer");
  objc_msgSend(v2, "addSublayer:", v1);

  v3 = OBJC_IVAR___BCTurnPageButton_pressedLayer;
  v4 = *(void **)&v0[OBJC_IVAR___BCTurnPageButton_pressedLayer];
  *(_QWORD *)&v0[OBJC_IVAR___BCTurnPageButton_pressedLayer] = v1;
  v8 = v1;

  v5 = *(void **)&v0[v3];
  if (v5)
  {
    v6 = &v0[OBJC_IVAR___BCTurnPageButton_pressed];
    swift_beginAccess(v6, v10, 0, 0);
    LODWORD(v7) = 0;
    if (*v6)
      *(float *)&v7 = 1.0;
    objc_msgSend(v5, "setOpacity:", v7, v8);

  }
  else
  {

  }
}

void sub_1A87D4()
{
  char *v0;
  void *v1;
  id v2;
  char *v3;
  double v4;
  CGColorRef GenericGray;
  id v6;
  void *v7;
  id v8;
  id v9;
  NSString v10;
  id v11;
  id v12;

  v1 = *(void **)&v0[OBJC_IVAR___BCTurnPageButton_pressedLayer];
  if (v1)
  {
    v12 = v1;
    v2 = objc_msgSend(v0, "traitCollection");
    v3 = (char *)objc_msgSend(v2, "userInterfaceStyle");

    v4 = 1.0;
    if (v3 == (_BYTE *)&dword_0 + 1)
      v4 = 0.0;
    GenericGray = CGColorCreateGenericGray(v4, 0.05);
    objc_msgSend(v12, "setBackgroundColor:", GenericGray);

    v6 = objc_msgSend(v0, "imageView");
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, "layer");

      if (v8)
      {
        v9 = objc_allocWithZone((Class)CAFilter);
        v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(0xE500000000000000);
        v11 = objc_msgSend(v9, "initWithType:", v10);

        objc_msgSend(v8, "setCompositingFilter:", v11);
      }
    }

  }
}

void sub_1A8954()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9[24];
  char v10[24];
  char v11[24];

  v1 = &v0[OBJC_IVAR___BCTurnPageButton_fillColor];
  swift_beginAccess(&v0[OBJC_IVAR___BCTurnPageButton_fillColor], v11, 0, 0);
  objc_msgSend(v0, "setBackgroundColor:", *(_QWORD *)v1);
  v2 = &v0[OBJC_IVAR___BCTurnPageButton_materialFill];
  swift_beginAccess(&v0[OBJC_IVAR___BCTurnPageButton_materialFill], v10, 0, 0);
  v3 = *(_QWORD *)v2;
  v4 = &v0[OBJC_IVAR___BCTurnPageButton_useMaterialFill];
  swift_beginAccess(&v0[OBJC_IVAR___BCTurnPageButton_useMaterialFill], v9, 0, 0);
  v5 = *(void **)&v0[OBJC_IVAR___BCTurnPageButton_blurView];
  if (*v4 == 1)
  {
    if (v5)
    {
      v6 = (void *)objc_opt_self(UIBlurEffect);
      v7 = v5;
      v8 = objc_msgSend(v6, "effectWithStyle:", v3);
      objc_msgSend(v7, "setEffect:", v8);

      objc_msgSend(v7, "setHidden:", 0);
    }
  }
  else if (v5)
  {
    objc_msgSend(v5, "setHidden:", 1);
  }
}

id TurnPageButton.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), "initWithFrame:", a1, a2, a3, a4);
}

id TurnPageButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  void *v10;
  _BYTE *v11;
  objc_super v13;

  v4[OBJC_IVAR___BCTurnPageButton_useMaterialFill] = 0;
  v4[OBJC_IVAR___BCTurnPageButton_hovering] = 0;
  v4[OBJC_IVAR___BCTurnPageButton_pressed] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BCTurnPageButton_materialFill] = 7;
  v9 = OBJC_IVAR___BCTurnPageButton_fillColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "clearColor");
  v11[OBJC_IVAR___BCTurnPageButton_direction] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___BCTurnPageButton_blurView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___BCTurnPageButton_pressedLayer] = 0;
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR___BCTurnPageButton_delegate], 0);

  v13.receiver = v11;
  v13.super_class = (Class)type metadata accessor for TurnPageButton();
  return objc_msgSendSuper2(&v13, "initWithFrame:", a1, a2, a3, a4);
}

id TurnPageButton.init(coder:)(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  void *v4;
  _BYTE *v5;
  id v6;
  objc_super v8;

  v1[OBJC_IVAR___BCTurnPageButton_useMaterialFill] = 0;
  v1[OBJC_IVAR___BCTurnPageButton_hovering] = 0;
  v1[OBJC_IVAR___BCTurnPageButton_pressed] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BCTurnPageButton_materialFill] = 7;
  v3 = OBJC_IVAR___BCTurnPageButton_fillColor;
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "clearColor");
  v5[OBJC_IVAR___BCTurnPageButton_direction] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BCTurnPageButton_blurView] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BCTurnPageButton_pressedLayer] = 0;
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BCTurnPageButton_delegate], 0);

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for TurnPageButton();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id TurnPageButton.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TurnPageButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t TurnPageButton.accessibilityLabel.getter()
{
  void *v0;

  objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection");
  return sub_1A0938();
}

uint64_t TurnPageButton.accessibilityLabel.setter(uint64_t a1, uint64_t a2)
{
  return swift_bridgeObjectRelease(a2);
}

Swift::Void __swiftcall TurnPageButton.accessibilityElementDidBecomeFocused()()
{
  char *v0;
  char *v1;
  char *v2;
  void *Strong;
  void *v4;
  uint64_t v5;
  char v6[24];
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for TurnPageButton();
  objc_msgSendSuper2(&v7, "accessibilityElementDidBecomeFocused");
  v1 = &v0[OBJC_IVAR___BCTurnPageButton_hovering];
  swift_beginAccess(&v0[OBJC_IVAR___BCTurnPageButton_hovering], v6, 1, 0);
  *v1 = 1;
  sub_1A7780();
  v2 = &v0[OBJC_IVAR___BCTurnPageButton_delegate];
  swift_beginAccess(&v0[OBJC_IVAR___BCTurnPageButton_delegate], &v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "updateTurnPageButtonsForFocusChange");
    swift_unknownObjectRelease(v4);
  }
}

Swift::Void __swiftcall TurnPageButton.accessibilityElementDidLoseFocus()()
{
  char *v0;
  char *v1;
  char *v2;
  void *Strong;
  void *v4;
  uint64_t v5;
  char v6[24];
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for TurnPageButton();
  objc_msgSendSuper2(&v7, "accessibilityElementDidLoseFocus");
  v1 = &v0[OBJC_IVAR___BCTurnPageButton_hovering];
  swift_beginAccess(&v0[OBJC_IVAR___BCTurnPageButton_hovering], v6, 1, 0);
  *v1 = 0;
  sub_1A7780();
  v2 = &v0[OBJC_IVAR___BCTurnPageButton_delegate];
  swift_beginAccess(&v0[OBJC_IVAR___BCTurnPageButton_delegate], &v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    objc_msgSend(Strong, "updateTurnPageButtonsForFocusChange");
    swift_unknownObjectRelease(v4);
  }
}

unint64_t sub_1A91B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30CE60;
  if (!qword_30CE60)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_30CE60);
  }
  return result;
}

uint64_t type metadata accessor for TurnPageButton()
{
  return objc_opt_self(BCTurnPageButton);
}

uint64_t sub_1A9210@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1A9290(a1, &OBJC_IVAR___BCTurnPageButton_useMaterialFill, a2);
}

uint64_t sub_1A9220@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1A9290(a1, &OBJC_IVAR___BCTurnPageButton_hovering, a2);
}

void sub_1A922C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  _BYTE v4[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR___BCTurnPageButton_hovering);
  swift_beginAccess(v3, v4, 1, 0);
  *v3 = v2;
  sub_1A7780();
}

uint64_t sub_1A9284@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1A9290(a1, &OBJC_IVAR___BCTurnPageButton_pressed, a2);
}

uint64_t sub_1A9290@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;
  _BYTE v6[24];

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess(v4, v6, 0, 0);
  *a3 = *v4;
  return result;
}

uint64_t sub_1A92E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BCTurnPageButton_materialFill);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

id sub_1A9334@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR___BCTurnPageButton_fillColor);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1A9384(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1A7E58(v1);
}

uint64_t sub_1A93B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR___BCTurnPageButton_delegate;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_1A9404(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR___BCTurnPageButton_delegate;
  swift_beginAccess(v3, v5, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2);
}

uint64_t method lookup function for TurnPageButton(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TurnPageButton);
}

uint64_t dispatch thunk of ReadingTimeToday.kind.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of TurnPageButton.useMaterialFill.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.kind.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.instance.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.instance.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ReadingTimeToday.instance.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of ReadingTimeToday.parameters.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ReadingTimeToday.parameters.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of ReadingTimeToday.progress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.progress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of TurnPageButton.fillColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.formattedProgress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of TurnPageButton.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of TurnPageButton.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of TurnPageButton.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v0])();
}

uint64_t storeEnumTagSinglePayload for TurnPageButtonDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A9654 + 4 * byte_26CC05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A9688 + 4 * byte_26CC00[v4]))();
}

uint64_t sub_1A9688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A9690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A9698);
  return result;
}

uint64_t sub_1A96A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A96ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A96B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A96B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TurnPageButtonDirection()
{
  return &type metadata for TurnPageButtonDirection;
}

unint64_t sub_1A96D8()
{
  unint64_t result;

  result = qword_30CEA8;
  if (!qword_30CEA8)
  {
    result = swift_getWitnessTable(&unk_26CC98, &type metadata for TurnPageButtonDirection);
    atomic_store(result, (unint64_t *)&qword_30CEA8);
  }
  return result;
}

uint64_t sub_1A971C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_1A9758(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, a1 & 1);
}

uint64_t sub_1A976C(unsigned __int8 *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t sub_1A9790(char a1, uint64_t (*a2)(char *))
{
  char v3;

  v3 = a1;
  return a2(&v3);
}

char *FrontmostApplicationTracker.__allocating_init(uiApplication:appKitBundle:)(void *a1, uint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return FrontmostApplicationTracker.init(uiApplication:appKitBundle:)(a1, a2);
}

uint64_t FrontmostApplicationTracker.isFrontmost.getter()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;
  BOOL v3;

  v1 = 0;
  v2 = (_BYTE *)(v0 + OBJC_IVAR___BCFrontmostApplicationTracker_state);
  if (*(_QWORD *)(v0 + OBJC_IVAR___BCFrontmostApplicationTracker_state))
    v3 = 1;
  else
    v3 = *(_BYTE *)(v0 + OBJC_IVAR___BCFrontmostApplicationTracker_state + 8) == 0;
  if (!v3 && (v2[9] & 1) == 0)
    v1 = (v2[10] | v2[11]) ^ 1;
  return v1 & 1;
}

uint64_t sub_1A9844()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_178954(v0, qword_30CEB0);
  sub_178770(v0, (uint64_t)qword_30CEB0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 0xD00000000000001BLL, 0x800000000026CCB0);
}

uint64_t sub_1A98C4(uint64_t result, unsigned int a2)
{
  _BYTE *v2;
  int v3;
  _BYTE *v4;
  unsigned int v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v3 = (a2 >> 8) & 1;
  v4 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  if ((a2 & 1) == 0 || result != 0)
    v3 = 1;
  v6 = v3 | ((a2 & 0x10000) >> 16);
  if (*(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state])
    v7 = 1;
  else
    v7 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8] == 0;
  if (v7 || (v4[9] & 1) != 0 || v4[10])
  {
    if (((v6 | ((a2 & 0x1000000) >> 24)) & 1) != 0)
      return result;
    v9 = 0;
  }
  else
  {
    v8 = v4[11];
    if (v6)
    {
      if ((v8 & 1) != 0)
        return result;
      v9 = 1;
    }
    else
    {
      v9 = v8 ^ 1u;
      if ((_DWORD)v9 != (a2 & 0x1000000) >> 24)
        return result;
    }
  }
  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v10 = type metadata accessor for Logger(0);
  sub_178770(v10, (uint64_t)qword_30CEB0);
  v11 = v2;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(18, -1);
    v15 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v14 = 138412546;
    v21 = v11;
    v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v14 + 4, v14 + 12);
    *v15 = v11;

    *(_WORD *)(v14 + 12) = 1024;
    LODWORD(v21) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, (char *)&v21 + 4, v14 + 14, v14 + 18);
    _os_log_impl(&dword_0, v12, v13, "%@: is frontmost => %{BOOL}d", (uint8_t *)v14, 0x12u);
    v17 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v15, 1, v17);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

  }
  v18 = &v11[OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged];
  result = swift_beginAccess(&v11[OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged], &v21, 0, 0);
  v19 = *(void (**)(uint64_t))v18;
  if (*(_QWORD *)v18)
  {
    v20 = *((_QWORD *)v18 + 1);
    swift_retain(v20);
    v19(v9);
    return sub_178760((uint64_t)v19, v20);
  }
  return result;
}

uint64_t FrontmostApplicationTracker.onFrontmostChanged.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged);
  swift_beginAccess(v0 + OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged, v4, 0, 0);
  v2 = *v1;
  sub_178750(*v1, v1[1]);
  return v2;
}

uint64_t FrontmostApplicationTracker.onFrontmostChanged.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_178760(v6, v7);
}

uint64_t sub_1A9D34@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *);
  _BYTE v9[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject(&unk_295AA8, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1ABB94;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *))v6;
  return sub_178750(v4, v5);
}

uint64_t sub_1A9DC8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_295A80, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1ABB64;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged);
  swift_beginAccess(v7, v11, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_178750(v3, v4);
  return sub_178760(v8, v9);
}

uint64_t (*FrontmostApplicationTracker.onFrontmostChanged.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged, a1, 33, 0);
  return j__swift_endAccess;
}

char *FrontmostApplicationTracker.init(uiApplication:appKitBundle:)(void *a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v6;
  char *v7;
  char *v8;
  id v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  void *ObjCClassFromMetadata;
  unsigned __int8 v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  BOOL v28;
  int v29;
  char *v30;
  uint64_t v31;
  char **v33;
  NSObject *v34;
  char *v35;
  char *v36;
  objc_super v37;

  ObjectType = (objc_class *)swift_getObjectType(v2);
  v6 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  *(_QWORD *)v6 = 2;
  *((_DWORD *)v6 + 2) = 0;
  v7 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_appKitBundle] = a2;
  *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_uiApplication] = a1;
  v37.receiver = v2;
  v37.super_class = ObjectType;
  v8 = a1;
  v9 = objc_msgSendSuper2(&v37, "init");
  v10 = (void *)objc_opt_self(NSNotificationCenter);
  v11 = (char *)v9;
  v12 = objc_msgSend(v10, "defaultCenter");
  objc_msgSend(v12, "addObserver:selector:name:object:", v11, "uiKitWillEnterForeground:", UIApplicationWillEnterForegroundNotification, v8);
  objc_msgSend(v12, "addObserver:selector:name:object:", v11, "uiKitDidEnterBackground:", UIApplicationDidEnterBackgroundNotification, v8);
  objc_msgSend(v12, "addObserver:selector:name:object:", v11, "uiKitDidBecomeActive:", UIApplicationDidBecomeActiveNotification, v8);
  objc_msgSend(v12, "addObserver:selector:name:object:", v11, "uiKitWillResignActive:", UIApplicationWillResignActiveNotification, v8);
  v13 = objc_msgSend(v8, "applicationState");
  v14 = &v11[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  *(_QWORD *)&v11[OBJC_IVAR___BCFrontmostApplicationTracker_state] = v13;
  if (a2)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(a2);
    objc_msgSend(ObjCClassFromMetadata, "addActiveApplicationObserver:didBecomeSelector:willResignSelector:", v11, "appKitDidBecomeActive:", "appKitWillResignActive:");
    objc_msgSend(ObjCClassFromMetadata, "addScreenSaverObserver:didStartSelector:didStopSelector:", v11, "screenSaverDidStart:", "screenSaverDidStop:");
    objc_msgSend(ObjCClassFromMetadata, "addScreenLockObserver:didLockSelector:didUnlockSelector:", v11, "screenDidLock:", "screenDidUnlock:");
    objc_msgSend(ObjCClassFromMetadata, "addPowerChangeObserver:willSleepSelector:didWakeSelector:", v11, "workspaceWillSleep:", "workspaceDidWake:");
    v16 = objc_msgSend(ObjCClassFromMetadata, "isActiveApplication");
  }
  else
  {
    v16 = 1;
  }
  v14[8] = v16;
  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v17 = type metadata accessor for Logger(0);
  sub_178770(v17, (uint64_t)qword_30CEB0);
  v18 = v11;
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(18, -1);
    v33 = (char **)swift_slowAlloc(8, -1);
    *(_DWORD *)v21 = 138412546;
    v34 = v19;
    v36 = v18;
    v35 = (char *)v12;
    v22 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v21 + 4, v21 + 12);
    *v33 = v18;

    *(_WORD *)(v21 + 12) = 1024;
    v23 = *(_QWORD *)v14;
    v24 = v14[8];
    v25 = v14[9];
    v26 = v14[10];
    v27 = v14[11];

    v28 = v23 == 0;
    v19 = v34;
    v29 = !v28;
    LODWORD(v36) = ((v29 | v24 ^ 1 | v25 | v26 | v27) & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 4, v21 + 14, v21 + 18);

    v30 = v35;
    _os_log_impl(&dword_0, v34, v20, "%@: initial is frontmost: %{BOOL}d", (uint8_t *)v21, 0x12u);
    v31 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v33, 1, v31);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {

    v8 = v18;
    v30 = v18;
  }

  return v18;
}

id FrontmostApplicationTracker.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  void *ObjCClassFromMetadata;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  if (*(_QWORD *)&v0[OBJC_IVAR___BCFrontmostApplicationTracker_appKitBundle])
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    objc_msgSend(ObjCClassFromMetadata, "removeActiveApplicationObserver:", v0);
    objc_msgSend(ObjCClassFromMetadata, "removeScreenSaverObserver:", v0);
    objc_msgSend(ObjCClassFromMetadata, "removePowerChangeObserver:", v0);
  }
  v3 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v3, "removeObserver:", v0);

  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, "dealloc");
}

void FrontmostApplicationTracker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookCore.FrontmostApplicationTracker", 36, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1AA4BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v15;

  v9 = type metadata accessor for Notification(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v13 = a1;
  a5(v12, a4);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1AA56C(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  char *v23;
  uint64_t v24;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v4 = type metadata accessor for Logger(0);
  sub_178770(v4, (uint64_t)qword_30CEB0);
  v5 = v2;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v23 = v5;
    v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v8 + 4, v8 + 12);
    *v9 = v5;

    _os_log_impl(&dword_0, v6, v7, a2, v8, 0xCu);
    v11 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v12 = &v5[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v13 = v5[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v14 = v5[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  v15 = v5[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v16 = v5[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v17 = *(_QWORD *)&v5[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  *(_QWORD *)v12 = 1;
  v12[8] = v13;
  v12[9] = v14;
  v12[10] = v15;
  v12[11] = v16;
  if (v14)
    v18 = 256;
  else
    v18 = 0;
  v19 = v18 | v13;
  if (v15)
    v20 = 0x10000;
  else
    v20 = 0;
  if (v16)
    v21 = 0x1000000;
  else
    v21 = 0;
  return sub_1A98C4(v17, v19 | v20 | v21);
}

uint64_t sub_1AA780(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  char *v24;
  uint64_t v25;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v4 = type metadata accessor for Logger(0);
  sub_178770(v4, (uint64_t)qword_30CEB0);
  v5 = v2;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v24 = v5;
    v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v8 + 4, v8 + 12);
    *v9 = v5;

    _os_log_impl(&dword_0, v6, v7, a2, v8, 0xCu);
    v11 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v12 = objc_msgSend(*(id *)&v5[OBJC_IVAR___BCFrontmostApplicationTracker_uiApplication], "applicationState");
  v13 = &v5[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v14 = v5[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v15 = v5[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  v16 = v5[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v17 = v5[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v18 = *(_QWORD *)&v5[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  *(_QWORD *)v13 = v12;
  v13[8] = v14;
  v13[9] = v15;
  v13[10] = v16;
  v13[11] = v17;
  if (v15)
    v19 = 256;
  else
    v19 = 0;
  v20 = v19 | v14;
  if (v16)
    v21 = 0x10000;
  else
    v21 = 0;
  if (v17)
    v22 = 0x1000000;
  else
    v22 = 0;
  return sub_1A98C4(v18, v20 | v21 | v22);
}

uint64_t sub_1AA9AC()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  unsigned __int8 v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  char *v20;
  uint64_t v21;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v1 = type metadata accessor for Logger(0);
  sub_178770(v1, (uint64_t)qword_30CEB0);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v20 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl(&dword_0, v3, v4, "%@: NSApplication did become active", v5, 0xCu);
    v8 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  result = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_appKitBundle];
  if (result)
  {
    v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(result), "isActiveApplication");
    v11 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
    v12 = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
    v13 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
    v14 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
    v15 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
    v16 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
    v11[8] = v10;
    v11[9] = v13;
    v11[10] = v14;
    v11[11] = v15;
    if (v13)
      v17 = 256;
    else
      v17 = 0;
    if (v14)
      v18 = 0x10000;
    else
      v18 = 0;
    if (v15)
      v19 = 0x1000000;
    else
      v19 = 0;
    return sub_1A98C4(v12, v18 | v17 | v19 | v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AABD8()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  char *v19;
  uint64_t v20;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v1 = type metadata accessor for Logger(0);
  sub_178770(v1, (uint64_t)qword_30CEB0);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v19 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl(&dword_0, v3, v4, "%@: NSApplication will resign active", v5, 0xCu);
    v8 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v10 = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v11 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  v12 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v13 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v14 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v9[8] = 0;
  v9[9] = v11;
  v9[10] = v12;
  v9[11] = v13;
  if (v11)
    v15 = 256;
  else
    v15 = 0;
  if (v12)
    v16 = 0x10000;
  else
    v16 = 0;
  if (v13)
    v17 = 0x1000000;
  else
    v17 = 0;
  return sub_1A98C4(v10, v16 | v15 | v17 | v14);
}

uint64_t sub_1AADDC()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  char *v19;
  uint64_t v20;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v1 = type metadata accessor for Logger(0);
  sub_178770(v1, (uint64_t)qword_30CEB0);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v19 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl(&dword_0, v3, v4, "%@: Screen did lock", v5, 0xCu);
    v8 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v10 = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v11 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v12 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v13 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v14 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  v9[8] = v11;
  v9[9] = 1;
  v9[10] = v12;
  v9[11] = v13;
  if (v14)
    v15 = 256;
  else
    v15 = 0;
  if (v12)
    v16 = 0x10000;
  else
    v16 = 0;
  if (v13)
    v17 = 0x1000000;
  else
    v17 = 0;
  return sub_1A98C4(v10, v16 | v11 | v17 | v15);
}

uint64_t sub_1AAFE4()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  char *v19;
  uint64_t v20;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v1 = type metadata accessor for Logger(0);
  sub_178770(v1, (uint64_t)qword_30CEB0);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v19 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl(&dword_0, v3, v4, "%@: Screen did unlock", v5, 0xCu);
    v8 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v10 = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v11 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v12 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v13 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v14 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  *((_WORD *)v9 + 4) = v11;
  v9[10] = v12;
  v9[11] = v13;
  if (v14)
    v15 = 256;
  else
    v15 = 0;
  if (v12)
    v16 = 0x10000;
  else
    v16 = 0;
  if (v13)
    v17 = 0x1000000;
  else
    v17 = 0;
  return sub_1A98C4(v10, v16 | v11 | v17 | v15);
}

uint64_t sub_1AB1E8()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char *v20;
  uint64_t v21;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v1 = type metadata accessor for Logger(0);
  sub_178770(v1, (uint64_t)qword_30CEB0);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v20 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl(&dword_0, v3, v4, "%@: Screen saver did start", v5, 0xCu);
    v8 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v10 = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v11 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v12 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  v13 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v14 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v9[8] = v11;
  v9[9] = v12;
  v9[10] = 1;
  v9[11] = v13;
  if (v12)
    v15 = 256;
  else
    v15 = 0;
  v16 = v15 | v11;
  if (v14)
    v17 = 0x10000;
  else
    v17 = 0;
  if (v13)
    v18 = 0x1000000;
  else
    v18 = 0;
  return sub_1A98C4(v10, v16 | v18 | v17);
}

uint64_t sub_1AB3F0()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char *v20;
  uint64_t v21;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v1 = type metadata accessor for Logger(0);
  sub_178770(v1, (uint64_t)qword_30CEB0);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v20 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl(&dword_0, v3, v4, "%@: Screen saver did stop", v5, 0xCu);
    v8 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v10 = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v11 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v12 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  v13 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v14 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v9[8] = v11;
  *(_WORD *)(v9 + 9) = v12;
  v9[11] = v13;
  if (v12)
    v15 = 256;
  else
    v15 = 0;
  v16 = v15 | v11;
  if (v14)
    v17 = 0x10000;
  else
    v17 = 0;
  if (v13)
    v18 = 0x1000000;
  else
    v18 = 0;
  return sub_1A98C4(v10, v16 | v18 | v17);
}

uint64_t sub_1AB5F4()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char *v20;
  uint64_t v21;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v1 = type metadata accessor for Logger(0);
  sub_178770(v1, (uint64_t)qword_30CEB0);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v20 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl(&dword_0, v3, v4, "%@: Workspace will sleep", v5, 0xCu);
    v8 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v10 = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v11 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v12 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  v13 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v14 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v9[8] = v11;
  v9[9] = v12;
  v9[10] = v13;
  v9[11] = 1;
  if (v12)
    v15 = 256;
  else
    v15 = 0;
  v16 = v15 | v11;
  if (v13)
    v17 = 0x10000;
  else
    v17 = 0;
  if (v14)
    v18 = 0x1000000;
  else
    v18 = 0;
  return sub_1A98C4(v10, v16 | v17 | v18);
}

uint64_t sub_1AB7FC()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  char *v20;
  uint64_t v21;

  if (qword_30AB90 != -1)
    swift_once(&qword_30AB90, sub_1A9844);
  v1 = type metadata accessor for Logger(0);
  sub_178770(v1, (uint64_t)qword_30CEB0);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    v20 = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v5 + 4, v5 + 12);
    *v6 = v2;

    _os_log_impl(&dword_0, v3, v4, "%@: Workspace did wake", v5, 0xCu);
    v8 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = &v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v10 = *(_QWORD *)&v2[OBJC_IVAR___BCFrontmostApplicationTracker_state];
  v11 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 8];
  v12 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 9];
  v13 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 10];
  v14 = v2[OBJC_IVAR___BCFrontmostApplicationTracker_state + 11];
  v9[8] = v11;
  v9[9] = v12;
  *((_WORD *)v9 + 5) = v13;
  if (v12)
    v15 = 256;
  else
    v15 = 0;
  v16 = v15 | v11;
  if (v13)
    v17 = 0x10000;
  else
    v17 = 0;
  if (v14)
    v18 = 0x1000000;
  else
    v18 = 0;
  return sub_1A98C4(v10, v16 | v17 | v18);
}

uint64_t type metadata accessor for FrontmostApplicationTracker()
{
  return objc_opt_self(BCFrontmostApplicationTracker);
}

uint64_t method lookup function for FrontmostApplicationTracker(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for FrontmostApplicationTracker);
}

uint64_t initializeBufferWithCopyOfBuffer for FrontmostApplicationTracker.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FrontmostApplicationTracker.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FrontmostApplicationTracker.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 12) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 12) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FrontmostApplicationTracker.State()
{
  return &type metadata for FrontmostApplicationTracker.State;
}

uint64_t sub_1ABAF0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1ABB14(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1ABB28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1ABB38(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1ABB40()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1ABB64(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1ABB94(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

unint64_t static ReadingTimeToday.kind.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_1ABC6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BCReadingTimeToday_kind);
  swift_beginAccess(v0 + OBJC_IVAR___BCReadingTimeToday_kind, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_1ABD28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR___BCReadingTimeToday_kind);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1ABD84(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___BCReadingTimeToday_kind);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = v4[1];
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*sub_1ABDEC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCReadingTimeToday_kind, a1, 33, 0);
  return j_j__swift_endAccess;
}

void *sub_1ABE3C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR___BCReadingTimeToday_instance);
  swift_beginAccess(v0 + OBJC_IVAR___BCReadingTimeToday_instance, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1ABE94(void *a1)
{
  sub_1ABFF0(a1, &OBJC_IVAR___BCReadingTimeToday_instance);
}

uint64_t (*sub_1ABEA0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCReadingTimeToday_instance, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_1ABEF0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id *v3;
  _BYTE v5[24];

  v3 = (id *)(a1 + *a3);
  swift_beginAccess(v3, v5, 0, 0);
  return *v3;
}

void *sub_1ABF34()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR___BCReadingTimeToday_parameters);
  swift_beginAccess(v0 + OBJC_IVAR___BCReadingTimeToday_parameters, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1ABF8C(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  void **v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v5 = (void **)(a1 + *a4);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *v5;
  *v5 = a3;
  v7 = a3;

}

void sub_1ABFE4(void *a1)
{
  sub_1ABFF0(a1, &OBJC_IVAR___BCReadingTimeToday_parameters);
}

void sub_1ABFF0(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;
  _BYTE v6[24];

  v4 = (void **)(v2 + *a2);
  swift_beginAccess(v4, v6, 1, 0);
  v5 = *v4;
  *v4 = a1;

}

void sub_1AC03C(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  void **v6;
  void *v7;
  id v8;
  _BYTE v9[24];

  v5 = *a1;
  v6 = (void **)(*a2 + *a5);
  swift_beginAccess(v6, v9, 1, 0);
  v7 = *v6;
  *v6 = v5;
  v8 = v5;

}

uint64_t (*sub_1AC098(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCReadingTimeToday_parameters, a1, 33, 0);
  return j__swift_endAccess;
}

id sub_1AC124()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR___BCReadingTimeToday_progress);
  swift_beginAccess(v0 + OBJC_IVAR___BCReadingTimeToday_progress, v3, 0, 0);
  return *v1;
}

void sub_1AC1C4(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR___BCReadingTimeToday_progress);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

void sub_1AC214(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___BCReadingTimeToday_progress);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_1AC274(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCReadingTimeToday_progress, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1AC330()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BCReadingTimeToday_formattedProgress);
  swift_beginAccess(v0 + OBJC_IVAR___BCReadingTimeToday_formattedProgress, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_1AC3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR___BCReadingTimeToday_formattedProgress);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1AC458(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___BCReadingTimeToday_formattedProgress);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = v4[1];
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*sub_1AC4C0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCReadingTimeToday_formattedProgress, a1, 33, 0);
  return j_j__swift_endAccess;
}

id ReadingTimeToday.__allocating_init(progress:onObserverCountChanged:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;
  id v8;

  v7 = objc_allocWithZone(v3);
  v8 = sub_1B1834(a1, a2, a3);

  swift_release(a3);
  return v8;
}

id ReadingTimeToday.init(progress:onObserverCountChanged:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;

  v5 = sub_1B1834(a1, a2, a3);

  swift_release(a3);
  return v5;
}

uint64_t sub_1AC5A0(uint64_t a1)
{
  char *v1;
  NSObject *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void (*v10)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v12;
  uint64_t v13;

  v13 = 0;
  v3 = *(NSObject **)&v1[OBJC_IVAR___BCReadingTimeToday_accessQueue];
  v4 = (_QWORD *)swift_allocObject(&unk_295AD0, 40, 7);
  v4[2] = v1;
  v4[3] = a1;
  v4[4] = &v13;
  v5 = swift_allocObject(&unk_295AF8, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_1B1B9C;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_178DC4;
  v12 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_175BAC;
  aBlock[3] = &unk_295B10;
  v6 = _Block_copy(aBlock);
  v7 = v12;
  v8 = v1;
  swift_unknownObjectRetain(a1);
  swift_retain(v5);
  swift_release(v7);
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v5, "", 117, 44, 26, 1);
  result = swift_release(v5);
  if ((a1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = *(void (**)(uint64_t))&v8[OBJC_IVAR___BCReadingTimeToday_onObserverCountChanged];
    if (v10)
      v10(v13);
    return swift_release(v4);
  }
  return result;
}

uint64_t sub_1AC718(uint64_t a1)
{
  char *v1;
  NSObject *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void (*v10)(uint64_t);
  _QWORD aBlock[5];
  uint64_t v12;
  uint64_t v13;

  v13 = 0;
  v3 = *(NSObject **)&v1[OBJC_IVAR___BCReadingTimeToday_accessQueue];
  v4 = (_QWORD *)swift_allocObject(&unk_295B48, 40, 7);
  v4[2] = v1;
  v4[3] = a1;
  v4[4] = &v13;
  v5 = swift_allocObject(&unk_295B70, 32, 7);
  *(_QWORD *)(v5 + 16) = sub_1B1C00;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_185BBC;
  v12 = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_175BAC;
  aBlock[3] = &unk_295B88;
  v6 = _Block_copy(aBlock);
  v7 = v12;
  v8 = v1;
  swift_unknownObjectRetain(a1);
  swift_retain(v5);
  swift_release(v7);
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation(v5, "", 117, 53, 26, 1);
  result = swift_release(v5);
  if ((a1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = *(void (**)(uint64_t))&v8[OBJC_IVAR___BCReadingTimeToday_onObserverCountChanged];
    if (v10)
      v10(v13);
    return swift_release(v4);
  }
  return result;
}

void sub_1AC890(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain(a3);
  v7 = a1;
  a4(a3);
  swift_unknownObjectRelease(a3);

}

uint64_t sub_1AC8F0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void **v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24[16];
  char *v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  uint64_t v28;
  char v29[32];

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v1;
  v11 = sub_16B968(&qword_30CFA8);
  OS_dispatch_queue.sync<A>(execute:)(sub_1B1C70, v24, v11);
  v12 = aBlock[0];
  v13 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", a1);
  v14 = (void **)&v2[OBJC_IVAR___BCReadingTimeToday_progress];
  swift_beginAccess(&v2[OBJC_IVAR___BCReadingTimeToday_progress], v29, 1, 0);
  v15 = *v14;
  *v14 = v13;

  v16 = swift_allocObject(&unk_295BC0, 32, 7);
  *(_QWORD *)(v16 + 16) = v12;
  *(_QWORD *)(v16 + 24) = v2;
  aBlock[4] = sub_1B1CB4;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_295BD8;
  v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v2);
  v26 = _swiftEmptyArrayStorage;
  v18 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_16B968((uint64_t *)&unk_30C330);
  v20 = sub_189CDC((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v28);
}

void sub_1ACB6C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;

  v3 = objc_msgSend(*(id *)(a1 + OBJC_IVAR___BCReadingTimeToday_observers), "allObjects");
  v4 = sub_16B968((uint64_t *)&unk_30D3C0);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  *a2 = v5;
}

uint64_t sub_1ACBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  void *v7;
  uint64_t v8;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
    result = swift_bridgeObjectRetain(a1);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v8 = a1;
  else
    v8 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v8);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v4 >= 1)
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      }
      else
      {
        v7 = *(void **)(a1 + 8 * i + 32);
        swift_unknownObjectRetain(v7);
      }
      objc_msgSend(v7, "dynamicProgressChanged:", a2);
      swift_unknownObjectRelease(v7);
    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void ReadingTimeToday.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookCore.ReadingTimeToday", 25, "init()", 6, 0);
  __break(1u);
}

id ReadingTimeToday.__deallocating_deinit()
{
  return sub_1ACF24(type metadata accessor for ReadingTimeToday);
}

uint64_t sub_1ACDDC()
{
  uint64_t v0;

  return swift_unknownObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore24ReadingTimeTodayProvider_dynamicProgress));
}

void ReadingTimeTodayProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookCore.ReadingTimeTodayProvider", 33, "init()", 6, 0);
  __break(1u);
}

id ReadingTimeTodayProvider.__deallocating_deinit()
{
  return sub_1ACF24(type metadata accessor for ReadingTimeTodayProvider);
}

id sub_1ACF24(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1ACF64()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + 16));
}

id sub_1ACF6C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeToday;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeToday);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeToday);
  }
  else
  {
    v4 = v0;
    sub_16F6BC(0, (unint64_t *)&qword_30C6A8, NSNumber_ptr);
    isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
    v6 = swift_allocObject(&unk_2960A8, 24, 7);
    swift_weakInit(v6 + 16);
    v7 = objc_allocWithZone((Class)type metadata accessor for ReadingTimeToday());
    v8 = sub_1B1834(isa, (uint64_t)sub_1B2CC8, v6);
    swift_release(v6);

    v9 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

uint64_t sub_1AD04C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void **aBlock;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  void *v18;
  uint64_t (*v19)();
  uint64_t v20;
  char v21[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v21, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(NSObject **)(result + 88);
    v7 = swift_allocObject(&unk_296198, 32, 7);
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = a1;
    v8 = swift_allocObject(&unk_2961C0, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_1B2CF4;
    *(_QWORD *)(v8 + 24) = v7;
    v19 = sub_185BBC;
    v20 = v8;
    aBlock = _NSConcreteStackBlock;
    v16 = 1107296256;
    v17 = sub_175BAC;
    v18 = &unk_2961D8;
    v9 = _Block_copy(&aBlock);
    v10 = v20;
    swift_retain(v5);
    swift_retain(v8);
    swift_release(v10);
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 117, 133, 35, 1);
    result = swift_release(v8);
    if ((v6 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v11 = *(NSObject **)(v5 + 88);
      v12 = swift_allocObject(&unk_296210, 32, 7);
      *(_QWORD *)(v12 + 16) = sub_1B26A8;
      *(_QWORD *)(v12 + 24) = v5;
      v19 = sub_185BBC;
      v20 = v12;
      aBlock = _NSConcreteStackBlock;
      v16 = 1107296256;
      v17 = sub_175BAC;
      v18 = &unk_296228;
      v13 = _Block_copy(&aBlock);
      v14 = v20;
      swift_retain(v5);
      swift_retain(v12);
      swift_release(v14);
      dispatch_sync(v11, v13);
      _Block_release(v13);
      LOBYTE(v11) = swift_isEscapingClosureAtFileLocation(v12, "", 117, 256, 20, 1);
      swift_release(v12);
      swift_release_n(v5, 2);
      result = swift_release(v7);
      if ((v11 & 1) == 0)
        return result;
    }
    __break(1u);
  }
  return result;
}

id sub_1AD270()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  objc_class *v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  objc_super v11;

  v1 = OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider);
  }
  else
  {
    v4 = sub_1ACF6C();
    v5 = (objc_class *)type metadata accessor for ReadingTimeTodayProvider();
    v6 = (char *)objc_allocWithZone(v5);
    *(_QWORD *)&v6[OBJC_IVAR____TtC8BookCore24ReadingTimeTodayProvider_dynamicProgress] = v4;
    v11.receiver = v6;
    v11.super_class = v5;
    v7 = objc_msgSendSuper2(&v11, "init");
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_1AD304(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider) = a1;

}

void (*sub_1AD318(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1AD270();
  return sub_1AD34C;
}

void sub_1AD34C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider) = v2;

}

_QWORD *ReadingHistoryController.__allocating_init(dataSource:userDefaults:currentTimeProvider:)(_QWORD *a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v9 = sub_1B1CFC(a1, a2, a3, a4);
  swift_release(a4);

  return v9;
}

_QWORD *ReadingHistoryController.init(dataSource:userDefaults:currentTimeProvider:)(_QWORD *a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  _QWORD *v6;

  v6 = sub_1B1CFC(a1, a2, a3, a4);

  swift_release(a4);
  return v6;
}

uint64_t sub_1AD418(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v50 = a1;
  v51 = a2;
  v48 = sub_16B968((uint64_t *)&unk_30D010);
  v4 = __chkstk_darwin(v48);
  v49 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v47 = (char *)&v42 - v6;
  v7 = type metadata accessor for Calendar.Component(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for Calendar(0);
  v45 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v46 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v44 = (char *)&v42 - v21;
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v42 - v23;
  v25 = __chkstk_darwin(v22);
  v27 = (char *)&v42 - v26;
  static Calendar.gregorian.getter(v25);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Calendar.Component.day(_:), v7);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v10, -7, a3, 0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v28 = *(void (**)(char *, uint64_t))(v45 + 8);
  v29 = v43;
  v28(v12, v43);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v45 = a3;
  v30(v24, a3, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v31 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v31(v27, v24, v16);
    v32 = sub_1766A8((uint64_t)v15, &qword_30B7E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    v31 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v32 = ((uint64_t (*)(char *, char *, uint64_t))v31)(v27, v15, v16);
  }
  static Calendar.gregorian.getter(v32);
  v33 = v44;
  Calendar.startOfDay(for:)(v27);
  v34 = ((uint64_t (*)(char *, uint64_t))v28)(v12, v29);
  static Calendar.gregorian.getter(v34);
  v35 = v46;
  Calendar.startOfDay(for:)(v45);
  v28(v12, v29);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v16);
  v37 = v47;
  v36 = v48;
  v38 = &v47[*(int *)(v48 + 48)];
  v31(v47, v33, v16);
  v31(v38, v35, v16);
  v39 = v49;
  v40 = &v49[*(int *)(v36 + 48)];
  v31(v49, v37, v16);
  v31(v40, v38, v16);
  v31(v50, v39, v16);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(v51, v40, v16);
}

uint64_t sub_1AD7B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD aBlock[5];
  uint64_t v9;
  char v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    v4 = *(NSObject **)(result + 88);
    v5 = swift_allocObject(&unk_296148, 32, 7);
    *(_QWORD *)(v5 + 16) = sub_1B2548;
    *(_QWORD *)(v5 + 24) = v3;
    aBlock[4] = sub_185BBC;
    v9 = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_175BAC;
    aBlock[3] = &unk_296160;
    v6 = _Block_copy(aBlock);
    v7 = v9;
    swift_retain(v3);
    swift_retain(v5);
    swift_release(v7);
    dispatch_sync(v4, v6);
    _Block_release(v6);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v5, "", 117, 180, 20, 1);
    swift_release_n(v3, 2);
    result = swift_release(v5);
    if ((v4 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1AD8E4(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  swift_retain(v1);
  MutableObservableContainer.mutate(_:)(sub_1B2C50);
  return swift_release(v1);
}

uint64_t sub_1AD920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[24];
  _BYTE v32[24];
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v30 = a1;
  v4 = sub_16B968((uint64_t *)&unk_30D010);
  __chkstk_darwin(v4);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD **)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)v27 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)v27 - v15;
  v17 = type metadata accessor for ReadingHistory.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
  v27[0] = a2;
  sub_1859F0(a2 + 24, (uint64_t)v33);
  v28 = v35;
  v29 = v34;
  v27[1] = sub_185554(v33, v34);
  v18 = a2 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange, v32, 0, 0);
  v19 = *(int *)(v4 + 48);
  v20 = &v6[v19];
  v21 = v18 + v19;
  v22 = (void (*)(char *, uint64_t, uint64_t))v8[2];
  v22(v6, v18, v7);
  v22(v20, v21, v7);
  v23 = (void (*)(char *, char *, uint64_t))v8[4];
  v23(v16, v6, v7);
  v23(v14, v20, v7);
  v24 = v27[0] + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_lastFlushTime;
  swift_beginAccess(v27[0] + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_lastFlushTime, v31, 0, 0);
  v22(v11, v24, v7);
  dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryState(range:currentTime:)(v16, v14, v11, v29, *(_QWORD *)(v28 + 24));
  v25 = (void (*)(char *, uint64_t))v8[1];
  v25(v11, v7);
  v25(v14, v7);
  v25(v16, v7);
  return sub_184A38(v33);
}

uint64_t sub_1ADB4C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[5];
  uint64_t v7;

  v1 = *(NSObject **)(v0 + 88);
  v2 = swift_allocObject(&unk_296058, 32, 7);
  *(_QWORD *)(v2 + 16) = sub_1B2548;
  *(_QWORD *)(v2 + 24) = v0;
  v6[4] = sub_185BBC;
  v7 = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_175BAC;
  v6[3] = &unk_296070;
  v3 = _Block_copy(v6);
  v4 = v7;
  swift_retain(v0);
  swift_retain(v2);
  swift_release(v4);
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v2, "", 117, 180, 20, 1);
  swift_release(v0);
  result = swift_release(v2);
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1ADC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  _BYTE *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[4];
  unsigned int v49;
  char *v50;
  uint64_t v51;
  _BYTE *v52;
  _QWORD *v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[24];

  v0 = type metadata accessor for ReadingHistory.Day(0);
  v58 = *(_QWORD *)(v0 - 8);
  v59 = v0;
  __chkstk_darwin(v0);
  v56 = &v48[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = type metadata accessor for ReadingHistory.State(0);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v54 = &v48[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v51 = sub_16B968((uint64_t *)&unk_30D010);
  v3 = __chkstk_darwin(v51);
  v52 = &v48[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v6 = &v48[-v5];
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v48[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v9);
  v50 = &v48[-v13];
  v14 = __chkstk_darwin(v12);
  v16 = &v48[-v15];
  v49 = static os_log_type_t.default.getter(v14);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v17 = (void *)static OS_os_log.readingActivity.getter();
  v18 = sub_16B968(&qword_30CFD0);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_26BDD0;
  v20 = Date.init()(v19);
  v21 = Date.description.getter(v20);
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v16, v7);
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_1852AC();
  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = v23;
  os_log(_:dso:log:_:_:)(v49, &dword_0);
  swift_bridgeObjectRelease(v19);

  v25 = type metadata accessor for ReadingHistoryController(0);
  Date.init()(v25);
  v26 = v50;
  sub_1AD418(v16, (uint64_t)v50, (uint64_t)v11);
  v24(v11, v7);
  v27 = v51;
  v28 = &v6[*(int *)(v51 + 48)];
  v29 = v8;
  v30 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v30(v6, v16, v7);
  v30(v28, v26, v7);
  v31 = v27;
  v32 = v52;
  v33 = &v52[*(int *)(v27 + 48)];
  v30(v52, v6, v7);
  v30(v33, v28, v7);
  v34 = v53;
  v35 = (char *)v53 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange;
  swift_beginAccess((char *)v53 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange, v60, 33, 0);
  v36 = *(void (**)(char *, _BYTE *, uint64_t))(v29 + 40);
  v36(v35, v32, v7);
  v36(&v35[*(int *)(v31 + 48)], v33, v7);
  swift_endAccess(v60);
  v37 = (void (*)(uint64_t))v34[9];
  v38 = v34[10];
  v39 = swift_retain(v38);
  v37(v39);
  swift_release(v38);
  ReadingHistoryController.flushSessions(until:)((uint64_t)v16);
  v24(v16, v7);
  v40 = sub_1ACF6C();
  v41 = v34[2];
  v42 = swift_retain(v41);
  v43 = v54;
  MutableObservableContainer.value.getter(v42);
  v44 = swift_release(v41);
  v45 = v56;
  ReadingHistory.State.today.getter(v44);
  v46 = (*(uint64_t (**)(_BYTE *, uint64_t))(v55 + 8))(v43, v57);
  v47 = ReadingHistory.Day.readingTime.getter(v46);
  (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v45, v59);
  sub_1AC8F0(v47);

}

uint64_t ReadingHistoryController.flushSessions(until:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  dispatch_queue_t v36;
  void **aBlock;
  uint64_t v38;
  uint64_t (*v39)(uint64_t);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_16B968(&qword_30B7E0);
  v9 = __chkstk_darwin(v8);
  v35 = (uint64_t)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v32 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))((char *)&v32 - v11, 1, 1, v4);
  v43 = 0;
  v13 = *(NSObject **)(v2 + 88);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v34 = a1;
  v14(v7, a1, v4);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (v6 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_295C10, v17 + 8, v15 | 7);
  *(_QWORD *)(v18 + 16) = v12;
  *(_QWORD *)(v18 + 24) = v2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18 + v16, v7, v4);
  *(_QWORD *)(v18 + v17) = &v43;
  v19 = swift_allocObject(&unk_295C38, 32, 7);
  *(_QWORD *)(v19 + 16) = sub_1B24AC;
  *(_QWORD *)(v19 + 24) = v18;
  v41 = sub_185BBC;
  v42 = v19;
  aBlock = _NSConcreteStackBlock;
  v38 = 1107296256;
  v39 = sub_175BAC;
  v40 = &unk_295C50;
  v20 = _Block_copy(&aBlock);
  v21 = v42;
  swift_retain(v2);
  swift_retain(v19);
  swift_release(v21);
  v36 = v13;
  dispatch_sync(v13, v20);
  _Block_release(v20);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation(v19, "", 117, 374, 20, 1);
  result = swift_release(v19);
  if ((v20 & 1) != 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!v43)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!*(_QWORD *)(v43 + 16))
  {
LABEL_7:
    v29 = swift_allocObject(&unk_295C88, 32, 7);
    *(_QWORD *)(v29 + 16) = sub_1B2548;
    *(_QWORD *)(v29 + 24) = v2;
    v41 = sub_185BBC;
    v42 = v29;
    aBlock = _NSConcreteStackBlock;
    v38 = 1107296256;
    v39 = sub_175BAC;
    v40 = &unk_295CA0;
    v30 = _Block_copy(&aBlock);
    v31 = v42;
    swift_retain(v2);
    swift_retain(v29);
    swift_release(v31);
    dispatch_sync(v36, v30);
    _Block_release(v30);
    LOBYTE(v30) = swift_isEscapingClosureAtFileLocation(v29, "", 117, 180, 20, 1);
    swift_release(v29);
    result = swift_release(v2);
    if ((v30 & 1) == 0)
    {
      swift_bridgeObjectRelease(v43);
      sub_1766A8((uint64_t)v12, &qword_30B7E0);
      return swift_release(v18);
    }
    goto LABEL_10;
  }
  v33 = v12;
  v23 = static os_log_type_t.default.getter(result);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v24 = (void *)static OS_os_log.readingActivity.getter();
  v25 = sub_16B968(&qword_30CFD0);
  result = swift_allocObject(v25, 72, 7);
  *(_OWORD *)(result + 16) = xmmword_26BDD0;
  v26 = v43;
  if (!v43)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v27 = result;
  *(_QWORD *)(result + 56) = sub_16B968(&qword_30CFD8);
  *(_QWORD *)(v27 + 64) = sub_189CDC(&qword_30CFE0, &qword_30CFD8, (uint64_t)&protocol conformance descriptor for [A : B]);
  *(_QWORD *)(v27 + 32) = v26;
  swift_bridgeObjectRetain(v26);
  os_log(_:dso:log:_:_:)(v23, &dword_0);
  swift_bridgeObjectRelease(v27);

  v12 = v33;
  v28 = v35;
  sub_1B2500((uint64_t)v33, v35);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v28, 1, v4);
  if ((_DWORD)result != 1)
  {
    sub_1AED48(v28, v34);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v28, v4);
    goto LABEL_7;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1AE4BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v7 = type metadata accessor for Notification(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = swift_retain(a1);
  a4(v11);
  swift_release(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1AE560(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  void *v26;
  uint64_t v27;
  double v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[3];
  void *v51;
  uint64_t (*v52)();
  uint64_t v53;

  v2 = type metadata accessor for ReadingHistory.Day(0);
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  __chkstk_darwin(v2);
  v46 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ReadingHistory.State(0);
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Notification(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_16B968(&qword_30D388);
  __chkstk_darwin(v14);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v22 = v21;
  v20(v13, a1, v10);
  v23 = sub_16BDB8((unint64_t *)&unk_30D390, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistory.Notification.AddFakeSession, (uint64_t)&protocol conformance descriptor for ReadingHistory.Notification.AddFakeSession);
  Notificationable.init(notification:)(v13, v17, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17) == 1)
  {
    sub_1766A8((uint64_t)v16, &qword_30D388);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v16, v17);
  v24 = v49;
  sub_1859F0(v49 + 24, (uint64_t)aBlock);
  v26 = v51;
  v25 = v52;
  sub_185554(aBlock, (uint64_t)v51);
  v27 = ReadingHistory.Notification.AddFakeSession.date.getter();
  v28 = ReadingHistory.Notification.AddFakeSession.duration.getter(v27);
  if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v28 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v41 = v22;
  dispatch thunk of ReadingHistoryDataSourceActions.increment(date:by:)(v9, (uint64_t)v28, v26, *((_QWORD *)v25 + 1));
  (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
  sub_184A38(aBlock);
  v29 = sub_1ACF6C();
  v30 = *(_QWORD *)(v24 + 16);
  v31 = swift_retain(v30);
  MutableObservableContainer.value.getter(v31);
  v32 = swift_release(v30);
  v33 = v46;
  ReadingHistory.State.today.getter(v32);
  v34 = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v6, v45);
  v35 = ReadingHistory.Day.readingTime.getter(v34);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v33, v48);
  sub_1AC8F0(v35);

  v36 = *(NSObject **)(v24 + 88);
  v37 = swift_allocObject(&unk_296008, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_1B2548;
  *(_QWORD *)(v37 + 24) = v24;
  v52 = sub_185BBC;
  v53 = v37;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_175BAC;
  v51 = &unk_296020;
  v38 = _Block_copy(aBlock);
  v39 = v53;
  swift_retain(v24);
  swift_retain(v37);
  swift_release(v39);
  dispatch_sync(v36, v38);
  _Block_release(v38);
  LOBYTE(v36) = swift_isEscapingClosureAtFileLocation(v37, "", 117, 180, 20, 1);
  swift_release(v37);
  swift_release(v24);
  if ((v36 & 1) != 0)
  {
LABEL_12:
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v17);
}

uint64_t sub_1AEA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  void *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char isEscapingClosureAtFileLocation;
  void **v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  uint64_t (*v18)();
  uint64_t v19;

  v1 = v0;
  sub_1859F0(v0 + 24, (uint64_t)&v14);
  v3 = v17;
  v2 = v18;
  sub_185554(&v14, (uint64_t)v17);
  dispatch thunk of ReadingHistoryDataSourceActions.clearToday()(v3, *((_QWORD *)v2 + 1));
  sub_184A38(&v14);
  v4 = sub_1ACF6C();
  sub_1AC8F0(0);

  v5 = *(NSObject **)(v1 + 88);
  v6 = swift_allocObject(&unk_295F68, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_1B2548;
  *(_QWORD *)(v6 + 24) = v1;
  v18 = sub_185BBC;
  v19 = v6;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_175BAC;
  v17 = &unk_295F80;
  v7 = _Block_copy(&v14);
  v8 = v19;
  swift_retain(v1);
  swift_retain(v6);
  swift_release(v8);
  dispatch_sync(v5, v7);
  _Block_release(v7);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v6, "", 117, 180, 20, 1);
  swift_release(v6);
  result = swift_release(v1);
  if ((v7 & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v10 = swift_allocObject(&unk_295FB8, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_1B2BEC;
  *(_QWORD *)(v10 + 24) = v1;
  v18 = sub_185BBC;
  v19 = v10;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_175BAC;
  v17 = &unk_295FD0;
  v11 = _Block_copy(&v14);
  v12 = v19;
  swift_retain(v1);
  swift_retain(v10);
  swift_release(v12);
  dispatch_sync(v5, v11);
  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v10, "", 117, 221, 20, 1);
  swift_release(v10);
  result = swift_release(v1);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1AEC5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _BYTE v12[24];

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(void (**)(uint64_t))(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v8 = swift_retain(v6);
  v7(v8);
  swift_release(v6);
  v9 = a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_lastFlushTime;
  swift_beginAccess(v9, v12, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 40))(v9, v5, v2);
  return swift_endAccess(v12);
}

void sub_1AED48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t (*v34)();
  void *v35;
  void *v36;
  uint64_t (*v37)();
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t (*v42)();
  NSObject *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD aBlock[3];
  void *v58;
  uint64_t (*v59)();
  uint64_t v60;

  v4 = type metadata accessor for Date(0);
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  v5 = __chkstk_darwin(v4);
  v50 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v54 = (char *)&v47 - v7;
  v8 = type metadata accessor for Calendar(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = __chkstk_darwin(v8);
  v49 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v47 - v12;
  v14 = static os_log_type_t.default.getter(v11);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v15 = (void *)static OS_os_log.readingActivity.getter();
  v16 = sub_16B968(&qword_30CFD0);
  v17 = swift_allocObject(v16, 112, 7);
  *(_OWORD *)(v17 + 16) = xmmword_26BF80;
  v18 = Date.description.getter();
  v20 = v19;
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  v21 = sub_1852AC();
  *(_QWORD *)(v17 + 64) = v21;
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v20;
  v22 = Date.description.getter();
  *(_QWORD *)(v17 + 96) = &type metadata for String;
  *(_QWORD *)(v17 + 104) = v21;
  *(_QWORD *)(v17 + 72) = v22;
  *(_QWORD *)(v17 + 80) = v23;
  os_log(_:dso:log:_:_:)(v14, &dword_0);

  swift_bridgeObjectRelease(v17);
  v24 = static Date.> infix(_:_:)(a2, a1);
  if ((v24 & 1) != 0)
  {
    static Calendar.gregorian.getter(v24);
    v25 = ceil(Date.timeIntervalSince(_:)(a1));
    if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) != 0)
    {
      if (v25 > -9.22337204e18)
      {
        if (v25 < 9.22337204e18)
        {
          v26 = v54;
          Calendar.startOfDay(for:)(a2);
          v28 = ceil(Date.timeIntervalSince(_:)(v26));
          if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) != 0)
          {
            if (v28 > -9.22337204e18)
            {
              if (v28 < 9.22337204e18)
              {
                v29 = (uint64_t)v25;
                v30 = (uint64_t)v28;
                v48 = v13;
                if ((uint64_t)v28 >= (uint64_t)v25)
                {
                  v33 = v53;
                  sub_1859F0(v53 + 24, (uint64_t)aBlock);
                  v41 = v58;
                  v42 = v59;
                  sub_185554(aBlock, (uint64_t)v58);
                  dispatch thunk of ReadingHistoryDataSourceActions.increment(date:by:)(v26, (uint64_t)v25, v41, *((_QWORD *)v42 + 1));
                  sub_184A38(aBlock);
                  v40 = v51;
                  v39 = v52;
                }
                else
                {
                  v31 = v49;
                  static Calendar.gregorian.getter(v27);
                  v32 = v50;
                  Date.previousDay(calendar:)(v31);
                  (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v56);
                  v33 = v53;
                  sub_1859F0(v53 + 24, (uint64_t)aBlock);
                  v35 = v58;
                  v34 = v59;
                  sub_185554(aBlock, (uint64_t)v58);
                  if (__OFSUB__(v29, v30))
                  {
LABEL_22:
                    __break(1u);
                    return;
                  }
                  dispatch thunk of ReadingHistoryDataSourceActions.increment(date:by:)(v32, v29 - v30, v35, *((_QWORD *)v34 + 1));
                  sub_184A38(aBlock);
                  sub_1859F0(v33 + 24, (uint64_t)aBlock);
                  v36 = v58;
                  v37 = v59;
                  sub_185554(aBlock, (uint64_t)v58);
                  dispatch thunk of ReadingHistoryDataSourceActions.increment(date:by:)(v26, v30, v36, *((_QWORD *)v37 + 1));
                  v38 = v32;
                  v40 = v51;
                  v39 = v52;
                  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
                  sub_184A38(aBlock);
                }
                v43 = *(NSObject **)(v33 + 88);
                v44 = swift_allocObject(&unk_2960F8, 32, 7);
                *(_QWORD *)(v44 + 16) = sub_1B2548;
                *(_QWORD *)(v44 + 24) = v33;
                v59 = sub_185BBC;
                v60 = v44;
                aBlock[0] = _NSConcreteStackBlock;
                aBlock[1] = 1107296256;
                aBlock[2] = sub_175BAC;
                v58 = &unk_296110;
                v45 = _Block_copy(aBlock);
                v46 = v60;
                swift_retain(v33);
                swift_retain(v44);
                swift_release(v46);
                dispatch_sync(v43, v45);
                _Block_release(v45);
                LOBYTE(v43) = swift_isEscapingClosureAtFileLocation(v44, "", 117, 180, 20, 1);
                swift_release(v33);
                swift_release(v44);
                if ((v43 & 1) == 0)
                {
                  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v39);
                  (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v56);
                  return;
                }
LABEL_21:
                __break(1u);
                goto LABEL_22;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

void sub_1AF204(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;
  _BYTE v38[24];
  _BYTE v39[24];

  v2 = type metadata accessor for ReadingHistory.Day(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReadingHistory.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC8BookCore24ReadingHistoryController_readingTimeTodayObserverCount;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_readingTimeTodayObserverCount);
  if (v11 >= 1)
  {
    v12 = a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions;
    swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions, v38, 0, 0);
    if (*(_QWORD *)(*(_QWORD *)v12 + 16)
      && !*(_QWORD *)(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_clockTickTimer))
    {
      v35 = OBJC_IVAR____TtC8BookCore24ReadingHistoryController_clockTickTimer;
      v13 = swift_allocObject(&unk_2960A8, 24, 7);
      swift_weakInit(v13 + 16);
      aBlock[4] = sub_1B2C48;
      v37 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1871D8;
      aBlock[3] = &unk_2960C0;
      v14 = _Block_copy(aBlock);
      v34 = (id)objc_opt_self(NSTimer);
      swift_retain(v13);
      v34 = objc_msgSend(v34, "timerWithTimeInterval:repeats:block:", 1, v14, 1.0);
      _Block_release(v14);
      swift_release(v37);
      swift_release(v13);
      v15 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      v16 = v34;
      objc_msgSend(v15, "addTimer:forMode:", v34, NSRunLoopCommonModes);

      v17 = *(void **)(a1 + v35);
      *(_QWORD *)(a1 + v35) = v16;

    }
    v11 = *(_QWORD *)(a1 + v10);
  }
  if (!v11
    || (v18 = a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions,
        swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions, aBlock, 0, 0),
        !*(_QWORD *)(*(_QWORD *)v18 + 16)))
  {
    v19 = OBJC_IVAR____TtC8BookCore24ReadingHistoryController_clockTickTimer;
    v20 = *(void **)(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_clockTickTimer);
    if (v20)
    {
      objc_msgSend(v20, "invalidate");
      v21 = *(void **)(a1 + v19);
      *(_QWORD *)(a1 + v19) = 0;

      v22 = *(_QWORD *)(a1 + 16);
      v23 = swift_retain(v22);
      dispatch thunk of ObservableContainer.value.getter(v23);
      v24 = swift_release(v22);
      ReadingHistory.State.today.getter(v24);
      v25 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v26 = ReadingHistory.Day.readingTime.getter(v25);
      v27 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v28 = (char *)sub_1ACF6C(v27);
      v29 = (id *)&v28[OBJC_IVAR___BCReadingTimeToday_progress];
      swift_beginAccess(&v28[OBJC_IVAR___BCReadingTimeToday_progress], v39, 0, 0);
      v30 = *v29;

      v31 = objc_msgSend(v30, "integerValue");
      if (v31 != (id)v26)
      {
        v33 = (void *)sub_1ACF6C(v32);
        sub_1AC8F0(v26);

      }
    }
  }
}

uint64_t sub_1AF548(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  _BYTE v32[24];

  v3 = type metadata accessor for ReadingHistory.Day(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ReadingHistory.State(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v32, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v15 = result;
    v29 = v11;
    v17 = *(void (**)(uint64_t))(result + 72);
    v16 = *(_QWORD *)(result + 80);
    v18 = swift_retain(v16);
    v17(v18);
    swift_release(v16);
    v19 = *(_QWORD *)(v15 + 16);
    v20 = swift_retain(v19);
    dispatch thunk of ObservableContainer.value.getter(v20);
    v21 = swift_release(v19);
    ReadingHistory.State.today.getter(v21);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v23 = ReadingHistory.Day.readingTime.getter(v22);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __chkstk_darwin(v24);
    *(&v28 - 2) = v15;
    *(&v28 - 1) = (uint64_t)v13;
    result = OS_dispatch_queue.sync<A>(execute:)(sub_1B2DBC, &v28 - 4, &type metadata for Double);
    v25 = ceil(v31);
    if ((~*(_QWORD *)&v25 & 0x7FF0000000000000) != 0)
    {
      if (v25 > -9.22337204e18)
      {
        if (v25 < 9.22337204e18)
        {
          v26 = v23 + (uint64_t)v25;
          if (!__OFADD__(v23, (uint64_t)v25))
          {
            v27 = (void *)sub_1ACF6C(result);
            sub_1AC8F0(v26);

            swift_release(v15);
            return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v29);
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

double ReadingHistoryController.pendingReadingTime(until:)(uint64_t a1)
{
  _QWORD v2[6];

  v2[3] = a1;
  OS_dispatch_queue.sync<A>(execute:)(sub_1B2560, v2, &type metadata for Double);
  return *(double *)&v2[5];
}

uint64_t ReadingHistoryController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_184A38((_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 80));
  v1 = v0 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_lastFlushTime;
  v2 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider));

  sub_1766A8(v0 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange, (uint64_t *)&unk_30D010);
  return v0;
}

uint64_t ReadingHistoryController.__deallocating_deinit()
{
  uint64_t v0;

  ReadingHistoryController.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1AF8E4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

double sub_1AF8F0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD v3[6];

  v3[2] = *v1;
  v3[3] = a1;
  OS_dispatch_queue.sync<A>(execute:)(sub_1B2DBC, v3, &type metadata for Double);
  return *(double *)&v3[5];
}

uint64_t ReadingHistoryController.sessionStarted(sessionID:delay:)(char *a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  NSObject *v60;
  void (*v61)(uint64_t, char *, uint64_t);
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void **aBlock;
  uint64_t v86;
  uint64_t (*v87)(uint64_t);
  void *v88;
  uint64_t (*v89)();
  uint64_t v90;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  __chkstk_darwin(v6);
  v79 = v7;
  v80 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for Calendar.Component(0);
  v71 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v70 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v9);
  v72 = (void (*)(char *, uint64_t))((char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for Date(0);
  v83 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v68 - v15;
  v17 = type metadata accessor for Calendar(0);
  v73 = *(_QWORD *)(v17 - 8);
  v74 = v17;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = static os_log_type_t.default.getter(v18);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v22 = (void *)static OS_os_log.readingActivity.getter();
  v23 = sub_16B968(&qword_30CFD0);
  v24 = swift_allocObject(v23, 112, 7);
  *(_OWORD *)(v24 + 16) = xmmword_26BF80;
  v78 = a1;
  v25 = UUID.uuidString.getter();
  v27 = v26;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  *(_QWORD *)(v24 + 64) = sub_1852AC();
  *(_QWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 40) = v27;
  *(_QWORD *)(v24 + 96) = &type metadata for Double;
  *(_QWORD *)(v24 + 104) = &protocol witness table for Double;
  *(double *)(v24 + 72) = a2;
  os_log(_:dso:log:_:_:)(v21, &dword_0);

  v28 = v24;
  v29 = v83;
  v30 = swift_bridgeObjectRelease(v28);
  v84 = v20;
  static Calendar.gregorian.getter(v30);
  v32 = (void (*)(uint64_t))v3[9];
  v31 = v3[10];
  v33 = swift_retain(v31);
  v32(v33);
  v34 = swift_release(v31);
  Date.addingTimeInterval(_:)(v34, -a2);
  v35 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
  v76 = v14;
  v36 = v35(v14, v11);
  v37 = (void *)v3[8];
  static ReadingHistory.UserDefaults.sessionStartOffset.getter(v36);
  v39 = v38;
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v41 = (uint64_t)objc_msgSend(v37, "integerForKey:", v40);

  if (v41 >= 1)
  {
    v69 = v3;
    v42 = v71;
    v43 = v70;
    v44 = v75;
    (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v70, enum case for Calendar.Component.second(_:), v75);
    v45 = (uint64_t)v72;
    Calendar.date(byAdding:value:to:wrappingComponents:)(v43, -v41, v16, 0);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v45, 1, v11);
    if ((_DWORD)result == 1)
      goto LABEL_9;
    v3 = v69;
    sub_1AED48(v45, (uint64_t)v16);
    v35((char *)v45, v11);
  }
  v72 = (void (*)(char *, uint64_t))v35;
  ReadingHistoryController.flushSessions(until:)((uint64_t)v16);
  v75 = v3[11];
  v47 = v80;
  v48 = v81;
  v49 = v11;
  v50 = v29;
  v51 = v82;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v80, v78, v82);
  v52 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  v53 = v76;
  v78 = v16;
  v52(v76, v16, v49);
  v54 = *(unsigned __int8 *)(v48 + 80);
  v55 = (v54 + 24) & ~v54;
  v56 = *(unsigned __int8 *)(v29 + 80);
  v57 = (v79 + v56 + v55) & ~v56;
  v58 = swift_allocObject(&unk_295CD8, v57 + v77, v54 | v56 | 7);
  *(_QWORD *)(v58 + 16) = v3;
  v59 = v47;
  v60 = v75;
  (*(void (**)(uint64_t, char *, uint64_t))(v48 + 32))(v58 + v55, v59, v51);
  v61 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
  v83 = v49;
  v61(v58 + v57, v53, v49);
  v62 = swift_allocObject(&unk_295D00, 32, 7);
  *(_QWORD *)(v62 + 16) = sub_1B2634;
  *(_QWORD *)(v62 + 24) = v58;
  v89 = sub_185BBC;
  v90 = v62;
  aBlock = _NSConcreteStackBlock;
  v86 = 1107296256;
  v87 = sub_175BAC;
  v88 = &unk_295D18;
  v63 = _Block_copy(&aBlock);
  v64 = v90;
  swift_retain(v3);
  swift_retain(v62);
  swift_release(v64);
  dispatch_sync(v60, v63);
  _Block_release(v63);
  LOBYTE(v63) = swift_isEscapingClosureAtFileLocation(v62, "", 117, 322, 20, 1);
  result = swift_release(v62);
  if ((v63 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v65 = swift_allocObject(&unk_295D50, 32, 7);
    *(_QWORD *)(v65 + 16) = sub_1B26A8;
    *(_QWORD *)(v65 + 24) = v3;
    v89 = sub_185BBC;
    v90 = v65;
    aBlock = _NSConcreteStackBlock;
    v86 = 1107296256;
    v87 = sub_175BAC;
    v88 = &unk_295D68;
    v66 = _Block_copy(&aBlock);
    v67 = v90;
    swift_retain(v3);
    swift_retain(v65);
    swift_release(v67);
    dispatch_sync(v60, v66);
    _Block_release(v66);
    LOBYTE(v66) = swift_isEscapingClosureAtFileLocation(v65, "", 117, 256, 20, 1);
    swift_release(v3);
    result = swift_release(v65);
    if ((v66 & 1) == 0)
    {
      v72(v78, v83);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v84, v74);
      return swift_release(v58);
    }
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1AFF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v6 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for UUID(0);
  __chkstk_darwin(v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t))(v12 + 16))(v11, a2);
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v8, a3, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions, v17, 33, 0);
  sub_18704C((uint64_t)v8, (uint64_t)v11);
  return swift_endAccess(v17);
}

uint64_t ReadingHistoryController.sessionEnded(sessionID:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t result;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char isEscapingClosureAtFileLocation;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38[16];
  _QWORD *v39;
  uint64_t v40;
  void **aBlock;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  void *v44;
  uint64_t (*v45)();
  uint64_t v46;
  char v47;

  v2 = v1;
  v37 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v37 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v37);
  v36 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = static os_log_type_t.default.getter(v7);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v11 = (void *)static OS_os_log.readingActivity.getter();
  v12 = sub_16B968(&qword_30CFD0);
  v13 = swift_allocObject(v12, 72, 7);
  *(_OWORD *)(v13 + 16) = xmmword_26BDD0;
  v14 = UUID.uuidString.getter();
  v16 = v15;
  *(_QWORD *)(v13 + 56) = &type metadata for String;
  *(_QWORD *)(v13 + 64) = sub_1852AC();
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 40) = v16;
  os_log(_:dso:log:_:_:)(v10, &dword_0);

  swift_bridgeObjectRelease(v13);
  v17 = v2[11];
  v39 = v2;
  v40 = a1;
  result = OS_dispatch_queue.sync<A>(execute:)(sub_1B26C0, v38, &type metadata for Bool);
  if (v47 == 1)
  {
    v20 = (void (*)(uint64_t))v2[9];
    v19 = v2[10];
    v21 = swift_retain(v19);
    v20(v21);
    swift_release(v19);
    ReadingHistoryController.flushSessions(until:)((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v35);
    v23 = v36;
    v22 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v36, a1, v37);
    v24 = *(unsigned __int8 *)(v4 + 80);
    v25 = (v24 + 24) & ~v24;
    v26 = swift_allocObject(&unk_295DA0, v25 + v5, v24 | 7);
    *(_QWORD *)(v26 + 16) = v2;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v26 + v25, v23, v22);
    v27 = swift_allocObject(&unk_295DC8, 32, 7);
    *(_QWORD *)(v27 + 16) = sub_1B274C;
    *(_QWORD *)(v27 + 24) = v26;
    v45 = sub_185BBC;
    v46 = v27;
    aBlock = _NSConcreteStackBlock;
    v42 = 1107296256;
    v43 = sub_175BAC;
    v44 = &unk_295DE0;
    v28 = _Block_copy(&aBlock);
    v29 = v46;
    swift_retain(v2);
    swift_retain(v27);
    swift_release(v29);
    dispatch_sync(v17, v28);
    _Block_release(v28);
    LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(v27, "", 117, 335, 20, 1);
    result = swift_release(v27);
    if ((v28 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v30 = swift_allocObject(&unk_295E18, 32, 7);
      *(_QWORD *)(v30 + 16) = sub_1B26A8;
      *(_QWORD *)(v30 + 24) = v2;
      v45 = sub_185BBC;
      v46 = v30;
      aBlock = _NSConcreteStackBlock;
      v42 = 1107296256;
      v43 = sub_175BAC;
      v44 = &unk_295E30;
      v31 = _Block_copy(&aBlock);
      v32 = v46;
      swift_retain(v2);
      swift_retain(v30);
      swift_release(v32);
      dispatch_sync(v17, v31);
      _Block_release(v31);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v30, "", 117, 256, 20, 1);
      swift_release(v26);
      swift_release(v2);
      result = swift_release(v30);
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B0470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  char v21[24];

  v6 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v6);
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (uint64_t *)(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions);
  swift_beginAccess(v9, v21, 0, 0);
  v10 = *v9;
  if (!*(_QWORD *)(v10 + 16))
  {
    v17 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 1, 1, v17);
LABEL_7:
    v18 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain(v10);
  v11 = sub_1881AC(a2);
  if ((v12 & 1) != 0)
  {
    v13 = v11;
    v14 = *(_QWORD *)(v10 + 56);
    v15 = type metadata accessor for Date(0);
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v8, v14 + *(_QWORD *)(v16 + 72) * v13, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  }
  else
  {
    v15 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
  }
  swift_bridgeObjectRelease(v10);
  type metadata accessor for Date(0);
  v18 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v8, 1, v15) == 1)
    goto LABEL_7;
LABEL_8:
  result = sub_1766A8((uint64_t)v8, &qword_30B7E0);
  *a3 = v18;
  return result;
}

uint64_t sub_1B0610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v9[24];

  v4 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions, v9, 33, 0);
  sub_1B16F8(a2, (uint64_t)v6);
  sub_1766A8((uint64_t)v6, &qword_30B7E0);
  return swift_endAccess(v9);
}

uint64_t ReadingHistoryController.handleAchievement(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static os_log_type_t.default.getter(v4);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v8 = (void *)static OS_os_log.readingActivity.getter();
  v9 = sub_16B968(&qword_30CFD0);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_26BDD0;
  v11 = Achievement.description.getter();
  v13 = v12;
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  *(_QWORD *)(v10 + 64) = sub_1852AC();
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v13;
  os_log(_:dso:log:_:_:)(v7, &dword_0);

  swift_bridgeObjectRelease(v10);
  v15 = *(void (**)(uint64_t))(v1 + 72);
  v14 = *(_QWORD *)(v1 + 80);
  v16 = swift_retain(v14);
  v15(v16);
  swift_release(v14);
  ReadingHistoryController.flushSessions(until:)((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t ReadingHistoryController.setReadingHistoryForWeek(ending:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v19 = a1;
  v1 = type metadata accessor for Calendar.Component(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.gregorian.getter(v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Calendar.Component.day(_:), v1);
  Calendar.date(byAdding:value:to:wrappingComponents:)(v4, -7, v19, 0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_1766A8((uint64_t)v11, &qword_30B7E0);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
  ReadingHistoryController.setReadingHistory(beginning:ending:)(v16, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t ReadingHistoryController.setReadingHistory(beginning:ending:)(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  char *v68;
  char *v69;
  char *v70;
  void (*v71)(uint64_t, char *, uint64_t);
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t result;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  _QWORD aBlock[5];
  uint64_t v97;
  char v98[32];

  v90 = a2;
  v86 = a1;
  v89 = sub_16B968((uint64_t *)&unk_30D020);
  v2 = __chkstk_darwin(v89);
  v87 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v88 = (char *)&v78 - v4;
  v5 = sub_16B968((uint64_t *)&unk_30D010);
  v6 = __chkstk_darwin(v5);
  v83 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v82 = (char *)&v78 - v9;
  v10 = __chkstk_darwin(v8);
  v94 = (char *)&v78 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v78 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v78 - v15;
  v17 = type metadata accessor for Calendar(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v93 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v92 = (char *)&v78 - v26;
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v78 - v28;
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v78 - v31;
  static Calendar.gregorian.getter(v30);
  Calendar.startOfDay(for:)(v86);
  v33 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
  v34 = v33(v20, v17);
  static Calendar.gregorian.getter(v34);
  Calendar.startOfDay(for:)(v90);
  v33(v20, v17);
  v35 = v5;
  v36 = *(int *)(v5 + 48);
  v95 = v16;
  v37 = &v16[v36];
  v38 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  v85 = v32;
  v38(v16, v32, v21);
  v86 = v29;
  v38(v37, v29, v21);
  v39 = (char *)(v91 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange);
  swift_beginAccess(v91 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange, v98, 0, 0);
  v40 = *(int *)(v35 + 48);
  v41 = v35;
  v42 = &v14[v40];
  v43 = &v39[v40];
  v80 = v39;
  v38(v14, v39, v21);
  v38(v42, v43, v21);
  v90 = v22;
  v44 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v45 = v92;
  v81 = v14;
  v46 = v14;
  v47 = (uint64_t)v87;
  v44(v92, v46, v21);
  v48 = v93;
  v78 = v44;
  v44(v93, v42, v21);
  v84 = v41;
  v49 = *(int *)(v41 + 48);
  v50 = v94;
  v51 = &v94[v49];
  v38(v94, v95, v21);
  v79 = v37;
  v38(v51, v37, v21);
  v52 = v88;
  v38(v88, v45, v21);
  v53 = v89;
  v54 = &v52[*(int *)(v89 + 48)];
  v38(v54, v48, v21);
  v38((char *)v47, v50, v21);
  v55 = v47 + *(int *)(v53 + 48);
  v38((char *)v55, v51, v21);
  v56 = sub_16BDB8(&qword_30B808, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v57 = (uint64_t)v52;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v52, v47, v21, v56) & 1) != 0)
    v58 = dispatch thunk of static Equatable.== infix(_:_:)(v54, v55, v21, v56) ^ 1;
  else
    v58 = 1;
  sub_1766A8(v47, (uint64_t *)&unk_30D020);
  sub_1766A8(v57, (uint64_t *)&unk_30D020);
  v59 = v90;
  v60 = *(void (**)(char *, uint64_t))(v90 + 8);
  v60(v93, v21);
  v60(v92, v21);
  v60(v51, v21);
  v60(v94, v21);
  v61 = (uint64_t)v95;
  if ((v58 & 1) == 0)
    goto LABEL_6;
  v62 = v84;
  v63 = v81;
  v64 = &v81[*(int *)(v84 + 48)];
  v38(v81, v95, v21);
  v38(v64, v79, v21);
  v65 = v82;
  v66 = &v82[*(int *)(v62 + 48)];
  v67 = v78;
  v78(v82, v63, v21);
  v67(v66, v64, v21);
  v68 = v83;
  v69 = &v83[*(int *)(v62 + 48)];
  v67(v83, v65, v21);
  v67(v69, v66, v21);
  v70 = v80;
  swift_beginAccess(v80, aBlock, 33, 0);
  v71 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 40);
  v71((uint64_t)v70, v68, v21);
  v71((uint64_t)&v70[*(int *)(v62 + 48)], v69, v21);
  swift_endAccess(aBlock);
  v72 = v91;
  v73 = *(NSObject **)(v91 + 88);
  v74 = swift_allocObject(&unk_295E68, 32, 7);
  *(_QWORD *)(v74 + 16) = sub_1B2548;
  *(_QWORD *)(v74 + 24) = v72;
  aBlock[4] = sub_185BBC;
  v97 = v74;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_175BAC;
  aBlock[3] = &unk_295E80;
  v75 = _Block_copy(aBlock);
  v76 = v97;
  swift_retain(v72);
  swift_retain(v74);
  swift_release(v76);
  dispatch_sync(v73, v75);
  _Block_release(v75);
  LOBYTE(v73) = swift_isEscapingClosureAtFileLocation(v74, "", 117, 180, 20, 1);
  swift_release(v72);
  result = swift_release(v74);
  v61 = (uint64_t)v95;
  if ((v73 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_6:
    sub_1766A8(v61, (uint64_t *)&unk_30D010);
    v60(v86, v21);
    return ((uint64_t (*)(char *, uint64_t))v60)(v85, v21);
  }
  return result;
}

uint64_t sub_1B1098@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  double v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions;
  result = swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions, v13, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v8 + 16))
  {
    v10 = a1 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_lastFlushTime;
    swift_beginAccess(v10, v12, 0, 0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    v11 = Date.timeIntervalSince(_:)(v7);
    result = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v11 = 0.0;
  }
  *a2 = v11;
  return result;
}

uint64_t sub_1B11AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t);
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  _BYTE v22[24];

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v12);
  v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = a2 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_lastFlushTime;
  swift_beginAccess(a2 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_lastFlushTime, v22, 0, 0);
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
  v16(v14, v15, v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
  sub_1B2C68((uint64_t)v14, a1);
  v16(v11, a3, v8);
  swift_beginAccess(v15, v21, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 40))(v15, v11, v8);
  swift_endAccess(v21);
  v17 = (uint64_t *)(a2 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions);
  swift_beginAccess(v17, v21, 0, 0);
  v18 = *v17;
  v19 = *a4;
  *a4 = v18;
  swift_bridgeObjectRetain(v18);
  return swift_bridgeObjectRelease(v19);
}

Swift::Void __swiftcall ReadingHistoryController.clearData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1859F0(v0 + 24, (uint64_t)v4);
  v2 = v5;
  v1 = v6;
  sub_185554(v4, v5);
  dispatch thunk of ReadingHistoryDataSourceActions.clearData()(v2, *(_QWORD *)(v1 + 8));
  sub_184A38(v4);
  v3 = sub_1ACF6C();
  sub_1AC8F0(0);

}

uint64_t sub_1B13B4(char *a1, double a2)
{
  return ReadingHistoryController.sessionStarted(sessionID:delay:)(a1, a2);
}

uint64_t sub_1B13D4(uint64_t a1)
{
  return ReadingHistoryController.sessionEnded(sessionID:)(a1);
}

uint64_t sub_1B13F4(char *a1, uint64_t a2)
{
  return ReadingHistoryController.setReadingHistory(beginning:ending:)(a1, a2);
}

uint64_t sub_1B1414(uint64_t a1)
{
  return ReadingHistoryController.setReadingHistoryForWeek(ending:)(a1);
}

uint64_t sub_1B1434()
{
  return ReadingHistoryController.handleAchievement(_:)();
}

void sub_1B1454()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1859F0(*v0 + 24, (uint64_t)v4);
  v2 = v5;
  v1 = v6;
  sub_185554(v4, v5);
  dispatch thunk of ReadingHistoryDataSourceActions.clearData()(v2, *(_QWORD *)(v1 + 8));
  sub_184A38(v4);
  v3 = sub_1ACF6C();
  sub_1AC8F0(0);

}

uint64_t sub_1B14CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_188000(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_191D10();
      v10 = v19;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for Date(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for ReadingHistoryDay(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v13 + *(_QWORD *)(v15 + 72) * v7, v14);
    sub_188244(v7, v10);
    v16 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
  }
  else
  {
    v18 = type metadata accessor for ReadingHistoryDay(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

double sub_1B1608@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  v8 = *v4;
  swift_bridgeObjectRetain(*v4);
  v9 = sub_187F9C(a1, a2);
  LOBYTE(a2) = v10;
  swift_bridgeObjectRelease(v8);
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1920DC();
      v12 = v15;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v9 + 8));
    sub_17992C((_OWORD *)(*(_QWORD *)(v12 + 56) + 32 * v9), a3);
    sub_188600(v9, v12);
    v13 = *v4;
    *v4 = v12;
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1B16F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = *v3;
  swift_bridgeObjectRetain(*v3);
  v7 = sub_1881AC(a1);
  LOBYTE(a1) = v8;
  swift_bridgeObjectRelease(v6);
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1922C0();
      v10 = v19;
    }
    v11 = *(_QWORD *)(v10 + 48);
    v12 = type metadata accessor for UUID(0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, v12);
    v13 = *(_QWORD *)(v10 + 56);
    v14 = type metadata accessor for Date(0);
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v13 + *(_QWORD *)(v15 + 72) * v7, v14);
    sub_1887D4(v7, v10);
    v16 = *v3;
    *v3 = v10;
    swift_bridgeObjectRelease(v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
  }
  else
  {
    v18 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

id sub_1B1834(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  objc_class *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  objc_super v42;
  _QWORD *v43;

  v40 = a2;
  v41 = a3;
  v39 = a1;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR___BCReadingTimeToday_instance] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___BCReadingTimeToday_parameters] = 0;
  v13 = &v3[OBJC_IVAR___BCReadingTimeToday_formattedProgress];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = OBJC_IVAR___BCReadingTimeToday_observers;
  v15 = (void *)objc_opt_self(NSHashTable);
  v16 = v3;
  *(_QWORD *)&v3[v14] = objc_msgSend(v15, "weakObjectsHashTable");
  v36 = OBJC_IVAR___BCReadingTimeToday_accessQueue;
  v17 = sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v17);
  v43 = _swiftEmptyArrayStorage;
  v18 = sub_16BDB8((unint64_t *)&qword_30B888, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v34 = v18;
  v19 = sub_16B968(&qword_30B890);
  v33 = v19;
  v35 = sub_189CDC((unint64_t *)&qword_30B898, &qword_30B890, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v19, v35, v7, v18);
  v20 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v21 = v38;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 104);
  v22(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v38);
  v23 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000019, 0x8000000000217F70, v12, v9, v6, 0);
  *(_QWORD *)&v16[v36] = v23;
  v37 = OBJC_IVAR___BCReadingTimeToday_progressQueue;
  static DispatchQoS.unspecified.getter(v23);
  v43 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v33, v35, v7, v34);
  v22(v6, v20, v21);
  v24 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001BLL, 0x8000000000217F90, v12, v9, v6, 0);
  *(_QWORD *)&v16[v37] = v24;
  v25 = &v16[OBJC_IVAR___BCReadingTimeToday_kind];
  *(_QWORD *)v25 = 0xD000000000000010;
  *((_QWORD *)v25 + 1) = 0x8000000000217AE0;
  v26 = v39;
  v27 = v40;
  *(_QWORD *)&v16[OBJC_IVAR___BCReadingTimeToday_progress] = v39;
  v28 = &v16[OBJC_IVAR___BCReadingTimeToday_onObserverCountChanged];
  v29 = v41;
  *(_QWORD *)v28 = v27;
  *((_QWORD *)v28 + 1) = v29;
  v30 = v26;
  swift_retain(v29);

  v31 = (objc_class *)type metadata accessor for ReadingTimeToday();
  v42.receiver = v16;
  v42.super_class = v31;
  return objc_msgSendSuper2(&v42, "init");
}

id sub_1B1B9C()
{
  return sub_1B1C0C((SEL *)&selRef_addObject_);
}

uint64_t sub_1B1BA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B1BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1B1BC8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1B1BD4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1B1C00()
{
  return sub_1B1C0C((SEL *)&selRef_removeObject_);
}

id sub_1B1C0C(SEL *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id result;

  v3 = v1[2];
  v2 = v1[3];
  v4 = (_QWORD *)v1[4];
  v5 = OBJC_IVAR___BCReadingTimeToday_observers;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR___BCReadingTimeToday_observers), *a1, v2);
  result = objc_msgSend(*(id *)(v3 + v5), "count");
  *v4 = result;
  return result;
}

uint64_t sub_1B1C60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1B1C70(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1ACB6C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1B1C88()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B1CB4()
{
  uint64_t v0;

  return sub_1ACBE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for ReadingTimeToday()
{
  return objc_opt_self(BCReadingTimeToday);
}

uint64_t type metadata accessor for ReadingTimeTodayProvider()
{
  return objc_opt_self(_TtC8BookCore24ReadingTimeTodayProvider);
}

_QWORD *sub_1B1CFC(_QWORD *a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void *v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  char *v81;
  _QWORD *v82;
  _QWORD *v83;

  v75 = a3;
  v76 = a4;
  v73 = a2;
  v82 = a1;
  v4 = type metadata accessor for ReadingHistory.State(0);
  __chkstk_darwin(v4);
  v77 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_16B968((uint64_t *)&unk_30D010);
  v6 = __chkstk_darwin(v74);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v72 = (char *)&v70 - v9;
  v10 = type metadata accessor for Date(0);
  v78 = *(_QWORD *)(v10 - 8);
  v79 = v10;
  __chkstk_darwin(v10);
  v81 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v71);
  v83 = _swiftEmptyArrayStorage;
  v22 = sub_16BDB8((unint64_t *)&qword_30B888, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v23 = sub_16B968(&qword_30B890);
  v24 = sub_189CDC((unint64_t *)&qword_30B898, &qword_30B890, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v83, v23, v24, v16, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12);
  v25 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000029, 0x8000000000217F40, v21, v18, v15, 0);
  v26 = v80;
  v80[11] = v25;
  *(_QWORD *)((char *)v26 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_sessions) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)((char *)v26 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeToday) = 0;
  *(_QWORD *)((char *)v26
            + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider) = 0;
  *(_QWORD *)((char *)v26 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_readingTimeTodayObserverCount) = 0;
  *(_QWORD *)((char *)v26 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_clockTickTimer) = 0;
  sub_1859F0((uint64_t)v82, (uint64_t)(v26 + 3));
  v27 = v73;
  v29 = v75;
  v28 = v76;
  v26[8] = v73;
  v26[9] = v29;
  v26[10] = v28;
  v30 = v27;
  v31 = swift_retain(v28);
  v32 = v81;
  v29(v31);
  v33 = (char *)v26 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_lastFlushTime;
  v34 = v78;
  v35 = v79;
  v36 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v37 = (uint64_t)v32;
  v36(v33, v32, v79);
  v38 = v74;
  v39 = v72;
  v40 = (uint64_t)&v72[*(int *)(v74 + 48)];
  type metadata accessor for ReadingHistoryController(0);
  sub_1AD418(v39, v40, v37);
  v41 = &v8[*(int *)(v38 + 48)];
  v36(v8, v39, v35);
  v36(v41, (char *)v40, v35);
  v42 = (char *)v80 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange;
  v43 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v43((char *)v80 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_weekRange, v8, v35);
  v43(&v42[*(int *)(v38 + 48)], v41, v35);
  v44 = v82[3];
  v76 = v82[4];
  sub_185554(v82, v44);
  v45 = &v8[*(int *)(v38 + 48)];
  v36(v8, v39, v35);
  v36(v45, (char *)v40, v35);
  v46 = v77;
  dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryState(range:currentTime:)(v8, v45, v81, v44, *(_QWORD *)(v76 + 24));
  v47 = *(void (**)(char *, uint64_t))(v78 + 8);
  v47(v45, v35);
  v47(v8, v35);
  v48 = sub_16B968(&qword_30D3A0);
  swift_allocObject(v48, *(unsigned int *)(v48 + 48), *(unsigned __int16 *)(v48 + 52));
  v49 = MutableObservableContainer.init(value:)(v46);
  v50 = v80;
  v80[2] = v49;
  v51 = v82[3];
  v52 = v82[4];
  sub_185554(v82, v51);
  v53 = swift_allocObject(&unk_2960A8, 24, 7);
  swift_weakInit(v53 + 16);
  v54 = *(_QWORD *)(v52 + 16);
  swift_retain(v50);
  swift_retain(v53);
  dispatch thunk of ReadingHistoryDataSourceObservable.addObserver(_:modelChange:)(v50, sub_1B2CB0, v53, v51, v54);
  swift_release_n(v53, 2);
  swift_release(v50);
  v55 = (void *)objc_opt_self(NSNotificationCenter);
  v56 = objc_msgSend(v55, "defaultCenter");
  v57 = type metadata accessor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate(0);
  v58 = sub_16BDB8(&qword_30D3A8, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate, (uint64_t)&protocol conformance descriptor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate);
  swift_retain(v50);
  v59 = (void *)static Notificationable.Name.getter(v57, v58);
  objc_msgSend(v56, "addObserver:selector:name:object:", v50, "handlePlaceholderStreakDayGoalNeedsUpdate:", v59, 0);

  swift_release(v50);
  v60 = objc_msgSend(v55, "defaultCenter");
  objc_msgSend(v60, "addObserver:selector:name:object:", v50, "handleSignificantDateChange:", UIApplicationSignificantTimeChangeNotification, 0);

  v61 = objc_msgSend(v55, "defaultCenter");
  v62 = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
  v63 = sub_16BDB8((unint64_t *)&unk_30D390, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistory.Notification.AddFakeSession, (uint64_t)&protocol conformance descriptor for ReadingHistory.Notification.AddFakeSession);
  swift_retain(v50);
  v64 = (void *)static Notificationable.Name.getter(v62, v63);
  objc_msgSend(v61, "addObserver:selector:name:object:", v50, "createFakeSession:", v64, 0);

  swift_release(v50);
  v65 = objc_msgSend(v55, "defaultCenter");
  v66 = type metadata accessor for ReadingHistory.Notification.ClearToday(0);
  v67 = sub_16BDB8((unint64_t *)&unk_30D3B0, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistory.Notification.ClearToday, (uint64_t)&protocol conformance descriptor for ReadingHistory.Notification.ClearToday);
  swift_retain(v50);
  v68 = (void *)static Notificationable.Name.getter(v66, v67);
  objc_msgSend(v65, "addObserver:selector:name:object:", v50, "clearTodaysReadingTime", v68, 0);

  swift_release(v50);
  sub_1766A8((uint64_t)v39, (uint64_t *)&unk_30D010);
  v47(v81, v79);
  sub_184A38(v82);
  return v50;
}

uint64_t sub_1B242C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1B24AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for Date(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1B11AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(uint64_t **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1B24F0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_16B968(&qword_30B7E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2548()
{
  uint64_t v0;

  return sub_1AD8E4(v0);
}

uint64_t sub_1B2550()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2560@<X0>(double *a1@<X8>)
{
  uint64_t v1;

  return sub_1B1098(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1B2578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1B2634()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  return sub_1AFF78(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_1B2698()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1B26A8()
{
  uint64_t v0;

  sub_1AF204(v0);
}

uint64_t sub_1B26B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B26C0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1B0470(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1B26D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1B274C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  return sub_1B0610(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1B277C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B278C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B279C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B27AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BCReadingTimeToday_kind);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain(v4);
}

id sub_1B2804@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return sub_1B2838(a1, &OBJC_IVAR___BCReadingTimeToday_instance, a2);
}

void sub_1B2810(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1AC03C(a1, a2, a3, a4, &OBJC_IVAR___BCReadingTimeToday_instance);
}

id sub_1B282C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return sub_1B2838(a1, &OBJC_IVAR___BCReadingTimeToday_parameters, a2);
}

id sub_1B2838@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, void **a3@<X8>)
{
  void **v4;
  void *v5;
  _BYTE v7[24];

  v4 = (void **)(*a1 + *a2);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_1B2884(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1AC03C(a1, a2, a3, a4, &OBJC_IVAR___BCReadingTimeToday_parameters);
}

id sub_1B28A0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR___BCReadingTimeToday_progress);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1B28F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BCReadingTimeToday_formattedProgress);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain(v4);
}

id sub_1B294C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1AD270();
  *a1 = result;
  return result;
}

void sub_1B2974(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC8BookCore24ReadingHistoryController____lazy_storage___readingTimeTodayProvider) = *a1;
  v3 = v2;

}

uint64_t method lookup function for ReadingTimeToday(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingTimeToday);
}

uint64_t dispatch thunk of ReadingTimeToday.kind.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.formattedProgress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.__allocating_init(progress:onObserverCountChanged:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of ReadingTimeToday.register(progressObserver:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.unregister(progressObserver:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of ReadingTimeToday.setProgress(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v0)))();
}

uint64_t method lookup function for ReadingTimeTodayProvider(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingTimeTodayProvider);
}

uint64_t dispatch thunk of ReadingTimeTodayProvider.dynamicProgress(forKind:instance:parameters:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of ReadingHistoryEventProcessor.setReadingHistoryForWeek(ending:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ReadingHistoryEventProcessor.handleAchievement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ReadingHistoryEventProcessor.clearData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1B2A90()
{
  return type metadata accessor for ReadingHistoryController(0);
}

uint64_t type metadata accessor for ReadingHistoryController(uint64_t a1)
{
  uint64_t result;

  result = qword_30D178;
  if (!qword_30D178)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadingHistoryController);
  return result;
}

uint64_t sub_1B2AD4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _BYTE v4[32];
  _QWORD v5[5];
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  char *v10;
  void *v11;
  _BYTE *v12;

  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[1] = &unk_26CE60;
  v5[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[3] = (char *)&value witness table for () + 64;
  v5[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v6 = *(_QWORD *)(result - 8) + 64;
    v7 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v8 = &unk_26CE78;
    v9 = &unk_26CE78;
    v10 = (char *)&value witness table for Builtin.Int64 + 64;
    v11 = &unk_26CE78;
    swift_getTupleTypeLayout2(v4, v6, v6);
    v12 = v4;
    return swift_updateClassMetadata2(a1, 256, 12, v5, a1 + 80);
  }
  return result;
}

uint64_t method lookup function for ReadingHistoryController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingHistoryController);
}

uint64_t dispatch thunk of ReadingHistoryController.readingTimeTodayProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ReadingHistoryController.__allocating_init(dataSource:userDefaults:currentTimeProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t sub_1B2BDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2BEC()
{
  uint64_t v0;

  return sub_1AEC5C(v0);
}

uint64_t sub_1B2BF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2C04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2C14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2C24()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1B2C48(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF548(a1, v1);
}

uint64_t sub_1B2C50(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD920(a1, v1);
}

uint64_t sub_1B2C58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_16B968(&qword_30B7E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B2CB0()
{
  uint64_t v0;

  return sub_1AD7B0(v0);
}

uint64_t sub_1B2CB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2CC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD04C(a1, v1);
}

uint64_t sub_1B2CD0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1B2CF4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC8BookCore24ReadingHistoryController_readingTimeTodayObserverCount) = *(_QWORD *)(v0 + 24);
}

uint64_t sub_1B2D08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2D18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B2DBC@<X0>(double *a1@<X8>)
{
  return sub_1B2560(a1);
}

id BCAssetToPurge.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

id BCAssetToPurge.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for BCAssetToPurge();
  v5 = objc_msgSendSuper2(&v7, "initWithEntity:insertIntoManagedObjectContext:", a1, a2);

  return v5;
}

uint64_t type metadata accessor for BCAssetToPurge()
{
  return objc_opt_self(BCAssetToPurge);
}

id BCAssetToPurge.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BCAssetToPurge();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id static BCAssetToPurge.fetchRequest()()
{
  id v0;
  NSString v1;
  id v2;

  v0 = objc_allocWithZone((Class)NSFetchRequest);
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "initWithEntityName:", v1);

  return v2;
}

void *sub_1B2F98()
{
  return &protocol witness table for ObjectIdentifier;
}

void sub_1B2FA4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, "assetID");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1B3008(uint64_t a1, void **a2)
{
  void *v2;
  NSString v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = String._bridgeToObjectiveC()();
  else
    v3 = 0;
  v4 = v3;
  objc_msgSend(v2, "setAssetID:");

}

uint64_t sub_1B3064@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for BCAssetToPurge();
  result = Identifiable<>.id.getter(v4, a1);
  *a2 = result;
  return result;
}

const char *sub_1B30A4()
{
  return "assetID";
}

const char *sub_1B30B8()
{
  return "launches";
}

id sub_1B30C4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "launches");
  *a2 = (_DWORD)result;
  return result;
}

id sub_1B30F4(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, "setLaunches:", *a1);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC8BookCoreP33_EEF037B7E920F9A8FEA072A7AC12B9C819ResourceBundleClass);
}

void sub_1B3128()
{
  uint64_t v0;
  os_log_t v1;

  sub_5750();
  sub_573C(&dword_0, v0, v1, "BCCacheProductProfiles: Error fetching product profiles from AEUserPublishing: %@  error: %@");
  sub_5768();
}

void sub_1B318C()
{
  uint64_t v0;
  os_log_t v1;

  sub_5770(__stack_chk_guard);
  sub_5750();
  sub_573C(&dword_0, v0, v1, "BCCacheProductProfiles: Error fetching product profiles from AEUserPublishing: %@  error: %@");
  sub_5768();
}

void sub_1B31EC()
{
  uint64_t v0;
  os_log_t v1;

  sub_5770(__stack_chk_guard);
  sub_5750();
  sub_573C(&dword_0, v0, v1, "BCCacheProductProfiles: Error fetching product profiles from BLJaliscoDAAPClient: %@  error: %@");
  sub_5768();
}

void sub_1B324C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_DA0C();
  sub_DA24(&dword_0, &_os_log_default, v0, "BCCardViewController inited: %@, count = %lu", v1, v2, v3, v4, v5);
}

void sub_1B32C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_DA0C();
  sub_DA24(&dword_0, &_os_log_default, v0, "BCCardViewController dealloced: %@, count = %lu", v1, v2, v3, v4, v5);
}

void sub_1B3334(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Tried to replace or clear an animator that was in the active state.", v1, 2u);
}

void sub_1B3374(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138412290;
  v4 = a1;
  sub_15444(&dword_0, a2, a3, "Emitter:bookPositionChanged %@", (uint8_t *)&v3);
  sub_5768();
}

void sub_1B33DC()
{
  uint64_t v0;
  os_log_t v1;

  sub_5750();
  sub_15450(&dword_0, v0, v1, "Emitter:bookPositionChanged coalesced callback %@, manager: %@");
  sub_5768();
}

void sub_1B3440(uint64_t a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  void *v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a1));
  v5 = 138412290;
  v6 = v3;
  sub_15444(&dword_0, a2, v4, "Emitter:bookMilestoneReached %@", (uint8_t *)&v5);

}

void sub_1B34D8(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138412290;
  v4 = a1;
  sub_15444(&dword_0, a2, a3, "Emitter:bookSectionChanged %@", (uint8_t *)&v3);
  sub_5768();
}

void sub_1B3540()
{
  uint64_t v0;
  os_log_t v1;

  sub_5750();
  sub_15450(&dword_0, v0, v1, "Emitter:bookSectionChanged coalesced callback %@, manager: %@");
  sub_5768();
}

void sub_1B35A4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Invalid experience presenter", v1, 2u);
}

void sub_1B35E4(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *a1;
  v3 = 138412290;
  v4 = v2;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "BICCacheLevel: RAM hit for best match: %@", (uint8_t *)&v3, 0xCu);
}

void sub_1B365C()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t v2[14];
  uint64_t v3;

  sub_217EC();
  v3 = v0;
  sub_2174C(&dword_0, v1, (uint64_t)v1, "addTextNodeCharacterCounts:ordinal: error forming BCCFI from string: %@ error=%@", v2);
  sub_5768();
}

void sub_1B36C8()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t v13;

  sub_217A4();
  v2 = objc_msgSend((id)sub_217C8(v1), "persistentStoreCoordinator");
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "persistentStores"));
  objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "firstObject"));
  v5 = objc_msgSend((id)sub_217BC(), "description");
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  sub_2177C();
  sub_21738(&dword_0, v7, v8, "Error saving BCReadingStatisticsController MOC on PS %@: %@", v9, v10, v11, v12, v13);

  sub_21758();
}

void sub_1B3778()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "characterCountForCFI: Error fetching text node lengths: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B37D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error fetching TOC CFIs: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B3838()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error fetching text node character counts: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B3898(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "cfi"));
  sub_217EC();
  sub_21738(&dword_0, v2, v3, "Error constructing BCCFI from string recovered from a BCReadingStatsHeatMapEntry: %@ error=%@", v4, v5, v6, v7, v8);

  sub_21794();
}

void sub_1B3920()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_217A4();
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("cfiEnd")));
  sub_217D4();
  sub_21738(&dword_0, v2, v3, "_TOCEntryCFIs error forming BCCFI from string: %@ error=%@", v4, v5, v6, v7, v8);

  sub_21794();
}

void sub_1B39A4()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  sub_217A4();
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "objectForKeyedSubscript:", CFSTR("cfiStart")));
  sub_217D4();
  sub_21738(&dword_0, v2, v3, "_TOCEntryCFIs error forming BCCFI from string: %@ error=%@", v4, v5, v6, v7, v8);

  sub_21794();
}

void sub_1B3A28()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "_connectOrdinalsWithCompletion MOC save error=%@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B3A88(uint64_t a1, uint64_t a2, NSObject *a3)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 134218242;
  v4 = a2;
  v5 = 2112;
  v6 = a1;
  sub_2174C(&dword_0, a3, (uint64_t)a3, "_connectOrdinalsWithCompletion Unable to fetch text nodes for ordinal %lu.  Error=%@", (uint8_t *)&v3);
  sub_5768();
}

void sub_1B3B00()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "_connectOrdinalsWithCompletion Unable to fetch any TOC entries.  Error=%@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B3B60()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "_connectOrdinalsWithCompletion Unable to fetch any text nodes.  Error=%@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B3BC0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "_saveChanges timeout", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B3BEC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_267E0(&dword_0, v0, v1, "_saveChanges: saveWithCompletion error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B3C4C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "_contextWithID timeout", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B3C78()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_217B0();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "_contextWithID error: %@", v1, 0xCu);
  sub_5768();
}

void sub_1B3CE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _DWORD *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend((id)sub_26828(a1, a2), "title");
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  *v3 = 138412290;
  *v2 = v5;
  sub_267F0(&dword_0, v6, v7, "starting activity for context: %@");

  sub_2681C();
}

void sub_1B3D34(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _DWORD *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend((id)sub_26828(a1, a2), "title");
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  *v3 = 138412290;
  *v2 = v5;
  sub_267F0(&dword_0, v6, v7, "stopping activity for context: %@");

  sub_2681C();
}

void sub_1B3D84()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "buildContextTree: bookContext is nil", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B3DB0(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "buildContextTree timeout", buf, 2u);
}

void sub_1B3DEC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267E0(&dword_0, a2, a3, "buildContextTree: called for book %@", a5, a6, a7, a8, 2u);
  sub_5768();
}

void sub_1B3E54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_267E0(&dword_0, v0, v1, "didOpenBookWithAssetID: book context opened %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B3EB4()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_26804();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "didOpenBookWithAssetID: creating context for book %@ (%@)", v1, 0x16u);
  sub_5768();
}

void sub_1B3F2C(_QWORD *a1, uint64_t a2, NSObject *a3)
{
  _BYTE v3[24];

  *(_DWORD *)v3 = 138412546;
  *(_QWORD *)&v3[4] = *a1;
  *(_WORD *)&v3[12] = 2112;
  *(_QWORD *)&v3[14] = a2;
  sub_573C(&dword_0, a2, a3, "didCloseBookWithAssetID: %@, error: %@", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_QWORD *)&v3[16]);
  sub_5768();
}

void sub_1B3FA0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "didCloseBookWithAssetID: bookContext is nil", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B3FCC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "updateBookProgress: bookContext is nil", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B3FF8()
{
  uint64_t v0;
  os_log_t v1;

  sub_26804();
  sub_573C(&dword_0, v0, v1, "updateBookProgress: %@, error: %@");
  sub_5768();
}

void sub_1B4064()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "_updateBookProgress: progress not available", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B4090()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "statsSemaphore timeout", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B40BC()
{
  uint64_t v0;
  os_log_t v1;

  sub_217B0();
  sub_573C(&dword_0, v0, v1, "activateChapterForBook: %@, error: %@");
  sub_5768();
}

void sub_1B4128()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "activateChapterForBook: bookContext is nil", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B4154()
{
  uint64_t v0;
  os_log_t v1;

  sub_217B0();
  sub_573C(&dword_0, v0, v1, "_updateCurrentChapterProgressForBook: %@, error: %@");
  sub_5768();
}

void sub_1B41C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "_updateCurrentChapterProgressForBook: progress not available", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B41F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "updateMedia timeout", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B4220(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Failed to rotate to portrait prior to pushing cards - %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_1B4294()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "Failed to append cards - couldn't find a valid existingStackViewController", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B42C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_31238(&dword_0, v0, v1, "Attempting to pop cards from an empty card stack!", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B42EC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_31238(&dword_0, v0, v1, "Attempting to pop cards while a push/pop is already active!", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B4318()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_31238(&dword_0, v0, v1, "Attempting to push cards while a push/pop is already active!", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B4344(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = 134217984;
  v4 = v2;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "finishing layout cardIndex=%lu", (uint8_t *)&v3, 0xCu);
}

void sub_1B43BC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCCardStackViewController is not dismissed in a supported way.", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B43E8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "An error occurred while trying to get the bag key: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_1B445C(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *a1;
  v3 = 138412290;
  v4 = v2;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "%@ Did not receive the same coordinator", (uint8_t *)&v3, 0xCu);
}

void sub_1B44D4()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[14];
  uint64_t v3;

  sub_217EC();
  v3 = v0;
  _os_log_error_impl(&dword_0, v1, OS_LOG_TYPE_ERROR, "%@ Error when fetching persistent history %@. Will retry", v2, 0x16u);
}

void sub_1B454C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "result"));
  sub_3E790(&dword_0, v2, v3, "fetchHistoryAfterToken:%@ result:%@", v4, v5, v6, v7, 2u);

}

void sub_1B45EC(uint8_t *a1, void *a2, _QWORD *a3, NSObject *a4)
{
  void *v7;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "changedObjectID"));
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl(&dword_0, a4, OS_LOG_TYPE_ERROR, "bc_getManagedObjectsWith something has gone terribly wrong changeID:(%@) ", a1, 0xCu);

}

void sub_1B4660(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v7;

  objc_msgSend(a1, "transactionNumber");
  sub_217EC();
  sub_3E790(&dword_0, v1, v2, "*transaction #:(%lld) changes:%@", v3, v4, v5, v6, v7);
}

void sub_1B46DC(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "BCUbiquityStatusMonitor: old and new ubiquity tokens are both nil. This is unexpected", v1, 2u);
}

void sub_1B471C(uint64_t a1, NSObject *a2)
{
  const __CFString *v2;
  int v3;
  const __CFString *v4;

  v2 = CFSTR("YES");
  if (!a1)
    v2 = CFSTR("NO");
  v3 = 138412290;
  v4 = v2;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "BCUbiquityStatusMonitor: p_ubiquityIdentityDidChange - iCloud identity changed. {iCloudEnabled: %@}", (uint8_t *)&v3, 0xCu);
}

void sub_1B47A8(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v3 = 141558274;
  v4 = 1752392040;
  v5 = 2112;
  v6 = v2;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "Container URL set to: %{mask.hash}@", (uint8_t *)&v3, 0x16u);
}

void sub_1B4838()
{
  uint8_t v0[16];

  *(_WORD *)v0 = 0;
  _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "could not create moc for class", v0, 2u);
}

void sub_1B487C()
{
  int v0;
  const char *v1;
  __int16 v2;
  const char *v3;
  __int16 v4;
  int v5;

  v1 = "-[IMUbiquitousDataProvider newManagedObjectContextWithClass:concurrencyType:]";
  v2 = 2080;
  v0 = 136315650;
  v3 = "/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Database/BCUbiquitousDataProvider.m";
  v4 = 1024;
  v5 = 170;
  _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "%s %s:%d", (uint8_t *)&v0, 0x1Cu);
}

void sub_1B4924(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "\"Failed to create redaction regular expression: %{public}@\"", (uint8_t *)&v2, 0xCu);
}

void sub_1B4998(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267E0(&dword_0, a2, a3, "Semantic layout options error decoding: %@", a5, a6, a7, a8, 2u);
}

void sub_1B4A00(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "BCCacheImageTransformer: Invalid blank source image Transforming: %@ into:%@", (uint8_t *)&v3, 0x16u);
}

void sub_1B4A84(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "firstObject"));
  v4 = 138412290;
  v5 = v3;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "dragInteraction:sessionForAddingItems:withTouchAtPoint: returned %@", (uint8_t *)&v4, 0xCu);

}

void sub_1B4B18(double a1, double a2)
{
  NSString *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  v2 = NSStringFromCGPoint(*(CGPoint *)&a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_6CCF0();
  sub_3E790(&dword_0, v4, v5, "%@ dest BEGIN position: %@", v6, v7, v8, v9, v10);

  sub_21794();
}

void sub_1B4B98(double a1, double a2)
{
  NSString *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  v2 = NSStringFromCGPoint(*(CGPoint *)&a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  sub_6CCF0();
  sub_3E790(&dword_0, v4, v5, "%@ dest EXITED position: %@", v6, v7, v8, v9, v10);

  sub_21794();
}

void sub_1B4C18(uint64_t a1, void *a2, uint64_t a3, NSObject *a4)
{
  *(_DWORD *)a3 = 138543618;
  *(_QWORD *)(a3 + 4) = a1;
  *(_WORD *)(a3 + 12) = 2112;
  *(_QWORD *)(a3 + 14) = a2;
  sub_2174C(&dword_0, a4, a3, "BICWorkQueue: Timing out %{public}@ on queue \"%@\"", (uint8_t *)a3);

}

void sub_1B4C74()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_26804();
  sub_2174C(&dword_0, v0, v1, "BICWorkQueue: Auto calling missing completion for %{public}@ on queue \"%@\"", v2);
}

void sub_1B4CE0()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_26804();
  sub_2174C(&dword_0, v0, v1, "BICWorkQueue: Extra completion call for %{public}@ on queue \"%@\"", v2);
}

void sub_1B4D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_783C4();
  sub_783DC(&dword_0, &_os_log_default, v0, "Coordinated read failed: %@ error: %@", v1, v2, v3, v4, v5);
  sub_5768();
}

void sub_1B4DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_217B0();
  sub_2176C(&dword_0, &_os_log_default, v0, "Failed to remove existing file: %@", v1, v2, v3, v4, v5);
  sub_5768();
}

void sub_1B4E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_783C4();
  sub_783DC(&dword_0, &_os_log_default, v0, "Failed to copy: %@ error: %@", v1, v2, v3, v4, v5);
  sub_5768();
}

void sub_1B4E84(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "propertyProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "bookURL"));
  sub_217B0();
  sub_2176C(&dword_0, &_os_log_default, v3, "No book filename from book URL %@, fallback to use empty URL", v4, v5, v6, v7, v8);

}

void sub_1B4F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_217B0();
  sub_2176C(&dword_0, &_os_log_default, v0, "Failed to create temp directory: %@", v1, v2, v3, v4, v5);
  sub_5768();
}

void sub_1B4F80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_217B0();
  sub_2176C(&dword_0, &_os_log_default, v0, "Failed to create archive: %@", v1, v2, v3, v4, v5);
  sub_5768();
}

void sub_1B4FE8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_267E0(&dword_0, v0, v1, "Adding observer %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5048()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_267E0(&dword_0, v0, v1, "Removing observer %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B50A8(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl(&dword_0, log, OS_LOG_TYPE_DEBUG, "Notifying observers of changes to configuration values.", v1, 2u);
}

void sub_1B50E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_267E0(&dword_0, v0, v1, "Using overridden mark finished percentage of %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5148()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B914(__stack_chk_guard);
  sub_7B924();
  sub_267E0(&dword_0, v0, v1, "Using overridden invalidation window of %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B51A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B914(__stack_chk_guard);
  sub_7B924();
  sub_267E0(&dword_0, v0, v1, "Using overridden finished window of %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5208()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B914(__stack_chk_guard);
  sub_7B924();
  sub_267E0(&dword_0, v0, v1, "Using overridden upgrade window of %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5268()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B914(__stack_chk_guard);
  sub_7B924();
  sub_267E0(&dword_0, v0, v1, "Using overridden time threshold of %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B52C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B914(__stack_chk_guard);
  sub_7B924();
  sub_267E0(&dword_0, v0, v1, "Using overridden collection period of %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5328()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B914(__stack_chk_guard);
  sub_7B924();
  sub_267E0(&dword_0, v0, v1, "Using overridden time threshold for book open event of %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5388()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B914(__stack_chk_guard);
  sub_7B924();
  sub_267E0(&dword_0, v0, v1, "Using overridden number of books allowed in recents list of %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B53E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_267E0(&dword_0, v0, v1, "Using javascript provided override number of the window on what makes a book active %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5448()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_267E0(&dword_0, v0, v1, "Using overridden number of the window on what makes a book active %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B54A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B930();
  sub_DA24(&dword_0, v0, v1, "Using javascript provided override number for interval to show %@: %f", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5508()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B930();
  sub_DA24(&dword_0, v0, v1, "Using overridden number of the time to use the %@: %f", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5568(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Can't fetch quota because network is unreachable.", v1, 2u);
}

void sub_1B55A8(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Can't fetch quota: %@.", (uint8_t *)&v2, 0xCu);
}

void sub_1B561C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCCacheManager: Got a memory warning, pruning ram cache", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B5648(uint64_t a1, uint64_t a2, NSObject *a3)
{
  _BYTE v3[24];

  *(_DWORD *)v3 = 138412546;
  *(_QWORD *)&v3[4] = a1;
  *(_WORD *)&v3[12] = 2112;
  *(_QWORD *)&v3[14] = a2;
  sub_573C(&dword_0, a2, a3, "BCCacheManager: Invalid image size fetching a layer for assetID=%@, error=%@", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_QWORD *)&v3[16]);
  sub_5768();
}

void sub_1B56B8(uint64_t a1, _QWORD *a2, NSObject *a3)
{
  _BYTE v3[24];

  *(_DWORD *)v3 = 138412546;
  *(_QWORD *)&v3[4] = *(_QWORD *)(a1 + 56);
  *(_WORD *)&v3[12] = 2112;
  *(_QWORD *)&v3[14] = *a2;
  sub_573C(&dword_0, (uint64_t)a2, a3, "BCCacheManager: We had a best image but could not fetch it for image=%@ for request=%@", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_QWORD *)&v3[16]);
  sub_5768();
}

void sub_1B5730(uint64_t a1, NSObject *a2)
{
  id WeakRetained;
  int v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v4 = 138412290;
  v5 = WeakRetained;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "BCCacheManager: Timed out in _fetchImagesMatchingDescription for image=%@", (uint8_t *)&v4, 0xCu);

}

void sub_1B57C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCCacheManager: no title for generic", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B57F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCCacheManager: Could not create image from context", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B5820()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCCacheManager: Invalid nil generic image returned", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B584C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCCacheManager: Could not create stack context", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B5878()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_88EEC();
  sub_88F04(&dword_0, v0, v1, "BCCacheManager: Could not create context for blank image of size (%d,%d)", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B58E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_88EEC();
  sub_88F04(&dword_0, v0, v1, "BCCacheManager: Could not create blank image from context of size (%d,%d)", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5950(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = 138412290;
  v4 = v2;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "BCCacheManager: Not accepting generic since we are downloading a cover image=%@", (uint8_t *)&v3, 0xCu);
  sub_5768();
}

void sub_1B59C4(uint64_t a1)
{
  void *v1;
  void *v2;
  os_log_t v3;
  os_log_type_t v4;
  const char *v5;
  uint8_t *v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "componentsJoinedByString:", CFSTR(", ")));
  sub_217B0();
  sub_8E6D0();
  _os_log_debug_impl(v2, v3, v4, v5, v6, 0xCu);

  sub_8E6E0();
}

void sub_1B5A50()
{
  uint64_t v0;
  os_log_t v1;

  sub_5750();
  sub_573C(&dword_0, v0, v1, "<BKSeriesManagerUpdater: %p> Failed to save series updates moc -- %@");
  sub_5768();
}

void sub_1B5AB4(uint64_t a1)
{
  void *v2;
  void *v3;
  os_log_t v4;
  os_log_type_t v5;
  const char *v6;
  uint8_t *v7;
  void *v8;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "count");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "allObjects"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "componentsJoinedByString:", CFSTR(", ")));
  sub_8E6D0();
  _os_log_debug_impl(v3, v4, v5, v6, v7, 0x20u);

}

void sub_1B5B9C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "An error occurred while trying to get the bag key: %{public}@, fallback to default value: 150.", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5BFC()
{
  uint64_t v0;
  os_log_t v1;

  sub_5750();
  sub_573C(&dword_0, v0, v1, "<BKSeriesManagerUpdater: %p> Failed to get series resources -- %@");
  sub_5768();
}

void sub_1B5C60()
{
  uint64_t v0;
  os_log_t v1;

  sub_5750();
  sub_573C(&dword_0, v0, v1, "<BKSeriesManagerUpdater: %p> Failed to gather all assets -- %@");
  sub_5768();
}

void sub_1B5CC4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2176C(&dword_0, a2, a3, "Failed to get allAssets with error %@", a5, a6, a7, a8, 2u);
  sub_5768();
}

void sub_1B5D2C(uint64_t a1)
{
  void *v2;
  os_log_t v3;
  os_log_type_t v4;
  const char *v5;
  uint8_t *v6;

  objc_msgSend(*(id *)(a1 + 40), "count");
  objc_msgSend(*(id *)(a1 + 48), "count");
  sub_8E6D0();
  _os_log_debug_impl(v2, v3, v4, v5, v6, 0x2Au);
}

void sub_1B5E0C()
{
  uint64_t v0;
  os_log_t v1;

  sub_26804();
  sub_573C(&dword_0, v0, v1, "<BKSeriesManagerUpdater: %p> Error fetching series info: %@");
  sub_5768();
}

void sub_1B5E74(void *a1, NSObject *a2)
{
  void *v3;
  uint8_t v4[24];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "componentsJoinedByString:", CFSTR(", ")));
  sub_217B0();
  _os_log_fault_impl(&dword_0, a2, OS_LOG_TYPE_FAULT, "Encountered adamID from cloud sync that contains UUID: %@", v4, 0xCu);

  sub_8E6E0();
}

void sub_1B5F04()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_26804();
  _os_log_error_impl(&dword_0, v0, OS_LOG_TYPE_ERROR, "<BKSeriesManagerUpdater: %p> Error fetching asset info: %@", v1, 0x16u);
  sub_5768();
}

void sub_1B5F78()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "An error occurred while trying to get the bag key: %{public}@, fallback to default value: 21.", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B5FD8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCReadingStatistics configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B6004(void *a1, void *a2, NSObject *a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  int v10;
  void *v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "debugDescription"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "assetID"));
  v10 = 138543874;
  v11 = v6;
  v12 = 2112;
  v13 = v7;
  v14 = 2114;
  v15 = v8;
  sub_97864(&dword_0, a3, v9, "BCReadingStatistics configured: %{public}@ %@ from assetDetail:%{public}@", (uint8_t *)&v10);

}

void sub_1B60E0(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  sub_217B0();
  sub_97824(&dword_0, v2, v3, "BCReadingStatistics No readable reading statistics in serialized local data for assetID %{public}@", v4, v5, v6, v7, v8);

  sub_8E6E0();
}

void sub_1B6158(void *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  uint8_t v6[12];
  __int16 v7;
  uint64_t v8;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  sub_217B0();
  v7 = 2114;
  v8 = a2;
  _os_log_error_impl(&dword_0, a3, OS_LOG_TYPE_ERROR, "BCReadingStatistics %{public}@ Mismatch assetID from record assetID %{public}@", v6, 0x16u);

}

void sub_1B6200(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  sub_217B0();
  sub_97824(&dword_0, v2, v3, "BCReadingStatistics No readable reading statistics in incoming data for assetID %{public}@", v4, v5, v6, v7, v8);

  sub_8E6E0();
}

void sub_1B6278(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  sub_217B0();
  sub_97824(&dword_0, v2, v3, "BCReadingStatistics %{public}@ No Record supplied", v4, v5, v6, v7, v8);

  sub_8E6E0();
}

void sub_1B62F0(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t v8;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  sub_217B0();
  sub_97824(&dword_0, v2, v3, "BCReadingStatisticsSync No readable annotations in serialized cloud data for assetID %{public}@", v4, v5, v6, v7, v8);

  sub_8E6E0();
}

void sub_1B6368(void *a1, void *a2, NSObject *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint8_t v11[40];

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "recordID"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "recordName"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "debugDescription"));
  sub_97844();
  sub_97864(&dword_0, a3, v10, "BCReadingStatisticsSync %@ Resolving: Adopted properties from record: %@ %@", v11);

  sub_97870();
}

void sub_1B6430(void *a1, void *a2, NSObject *a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint8_t v11[40];

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "recordID"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "recordName"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "debugDescription"));
  sub_97844();
  sub_97864(&dword_0, a3, v10, "BCReadingStatisticsSync %@ Resolving: Identical properties from record: %@ %@", v11);

  sub_97870();
}

void sub_1B64F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCMutableReadingStatistics init with no assetID supplied", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B6524()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCReadingStatistics initWithCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B6550()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "BCMutableReadingStatistics init with no record supplied", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B657C(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  v3 = *a1;
  v4 = 138412290;
  v5 = v3;
  sub_97838(&dword_0, a2, a3, "No readable reading statistics for asset %@", (uint8_t *)&v4);
}

void sub_1B65EC()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];

  sub_217B0();
  sub_97838(&dword_0, v0, v1, "Unable to write reading statistics protobuf to URL %@", v2);
}

void sub_1B6654(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Invalid CFI. {%@}", (uint8_t *)&v2, 0xCu);
}

void sub_1B66C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_26804();
  sub_783DC(&dword_0, v0, v1, "BICURLDataStore: Failed internal URL fetch for: %@ forRequest: %@", v2, v3, v4, v5, v6);
}

void sub_1B6730()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_26804();
  sub_783DC(&dword_0, v0, v1, "BICURLDataStore: Failed URL download for: %@ URL: %@", v2, v3, v4, v5, v6);
}

void sub_1B6798(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *a1;
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Unable to create CKAsset local cache at %@ error=%@", (uint8_t *)&v4, 0x16u);
}

void sub_1B6820(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Unexpected error setting up reading statistics controller: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1B6894()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: Error saving to CoreData: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B68F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: Error loading persistent store: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6954()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: error in imageSetForIdentifier: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B69B4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: Found more than one image set for id: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6A14()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: error in fetchAllImageSets: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6A74()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: error in fetchImageSetsWithDescribedImages: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6AD4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: error in removeImageSets: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6B34()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: error in fetchToBeDeletedImageEntriesInLevelID: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6B94()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: error in fetchImageEntriesMatchingAddedEntries: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6BF4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: error in fetchImageEntriesWithLocations: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6C54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICCoreDataPersistentStoring: error in clean: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B6CB4(void *a1, NSObject *a2)
{
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  unsigned int v11;
  __int16 v12;
  void *v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  unsigned int v17;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "annotationAssetID"));
  v5 = objc_msgSend(a1, "annotationType");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "annotationLocation"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "plUserData"));
  v8 = 138413314;
  v9 = v4;
  v10 = 1024;
  v11 = v5;
  v12 = 2112;
  v13 = v6;
  v14 = 2112;
  v15 = v7;
  v16 = 1024;
  v17 = objc_msgSend(a1, "isAnnotationDeleted");
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Inconsistent AEAnnotation for assetID=%@ type %d: self.annotationLocation=%@ self.plUserData=%@ self.annotationDeleted=%d", (uint8_t *)&v8, 0x2Cu);

}

void sub_1B6DC0(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138543362;
  v4 = a1;
  sub_97838(&dword_0, a2, a3, "playerErrorDidOccur %{public}@", (uint8_t *)&v3);
}

void sub_1B6E2C(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  void *v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "localizedDescription"));
  v5 = 138412290;
  v6 = v3;
  sub_97838(&dword_0, a2, v4, "IMAVPlayer::stillFrameAt error: %@", (uint8_t *)&v5);

}

void sub_1B6EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_C83FC(&dword_0, &_os_log_default, a3, "playbackWasPaused: _wasPlaying=%d", a5, a6, a7, a8, 0);
}

void sub_1B6F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_C83FC(&dword_0, &_os_log_default, a3, "AVAudioSession: Playback was interrupted with playback state %d", a5, a6, a7, a8, 0);
}

void sub_1B6FA0(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Can't generate a CFI for string %@.  error=%@", (uint8_t *)&v3, 0x16u);
}

void sub_1B7024(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Trying to request store URL without storeID or contentType.", a5, a6, a7, a8, 0);
}

void sub_1B7058(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Requesting URL but no URL is available.", a5, a6, a7, a8, 0);
}

void sub_1B708C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;

  v3 = 141558530;
  v4 = 1752392040;
  v5 = 2112;
  v6 = a1;
  v7 = 2112;
  v8 = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Audiobook directory enumeration failed. url: %{mask.hash}@ error: %@", (uint8_t *)&v3, 0x20u);
}

void sub_1B7120()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error saving MOC: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7180()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to fetch cloudSyncVersions error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B71E0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "BCICloudIdentityToken: nil token generated", a5, a6, a7, a8, 0);
}

void sub_1B7214(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "BCSyncUserDefaults: Encountered previous sync of TCC Ubiquity State when initializing archivedICloudDriveSyncOptedInBeforeInitialTCCSync.", a5, a6, a7, a8, 0);
}

void sub_1B7248(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "BCSyncUserDefaults: syncIsLiverpoolAndUbiquityEnabledWithReply - Encountered error, %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_1B72BC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error -[NSURL bc_isUbiquitous]: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B731C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error -[NSURL bc_isDownloaded]: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B737C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error -[NSURL bc_isDownloading]: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B73DC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error querying bc_isUbiquitousPromise %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B743C(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = 138412290;
  v4 = v2;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "BICProductProfileDataStore: No product profile for: %@", (uint8_t *)&v3, 0xCu);
}

void sub_1B74B4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_103904();
  sub_1038F4(&dword_0, v0, v1, "%s sqlite3 error: %d", v2, v3, v4, v5, 2u);
  sub_5768();
}

void sub_1B7520()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_103904();
  sub_1038F4(&dword_0, v0, v1, "%s sqlite3 error: %d", v2, v3, v4, v5, 2u);
  sub_5768();
}

void sub_1B758C(uint8_t *a1, void *a2, _QWORD *a3, NSObject *a4)
{
  void *v7;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "entryLocation"));
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl(&dword_0, a4, OS_LOG_TYPE_ERROR, "BICImageSetPersistence: Replacing an entry marked for deletion: %@", a1, 0xCu);

}

void sub_1B7600(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_debug_impl(&dword_0, log, OS_LOG_TYPE_DEBUG, "BICImageSetPersistence: For new results, no images found", buf, 2u);
}

void sub_1B763C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138543618;
  v4 = a1;
  v5 = 2114;
  v6 = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "-cachedCFI: error forming BCCFI from string: %{public}@ error=%{public}@", (uint8_t *)&v3, 0x16u);
}

void sub_1B76C0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "\"ba_effectiveViewControllerForAnalyticsTracking: Timeout reached on semaphore wait - this might have a serious performance impact.\"", a5, a6, a7, a8, 0);
}

void sub_1B76F4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "\"ba_setupAnalyticsTrackerWithName: failed to find upstream tracker\"", a5, a6, a7, a8, 0);
}

void sub_1B7728(id *a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  uint8_t v6[12];
  __int16 v7;
  uint64_t v8;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*a1, "lastPathComponent"));
  sub_217B0();
  v7 = 2112;
  v8 = a2;
  _os_log_error_impl(&dword_0, a3, OS_LOG_TYPE_ERROR, "RemoteConfig: %@ is malformed: %@", v6, 0x16u);

}

void sub_1B77D4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Did not retrieve from remote config cache. This should be only for the first launch", v1, 2u);
}

void sub_1B7814(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2176C(&dword_0, a2, a3, "RemoteConfig: Can't subscribe to namespace %@", a5, a6, a7, a8, 2u);
  sub_5768();
}

void sub_1B787C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2176C(&dword_0, a2, a3, "No settings when trying to refresh namespace %@", a5, a6, a7, a8, 2u);
  sub_5768();
}

void sub_1B78E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "RemoteConfig: There was an error retrieving the config: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7944()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "RemoteConfig: Configuration JSON is malformed: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B79A4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2176C(&dword_0, a1, a3, "waitForCachedConfigurationLoaded: Timed out waiting for cacheLoaded. timeout: %f", a5, a6, a7, a8, 0);
  sub_5768();
}

void sub_1B7A0C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to read from cache remote configuration with error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7A6C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to cache remote configuration with error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7ACC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to archive remote configuration: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7B2C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to retrieve the cache directory for namespacedata with error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7B8C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2176C(&dword_0, a1, a3, "Maybe the device is out of disk space? FileSystemAttributes: %@", a5, a6, a7, a8, 2u);
  sub_5768();
}

void sub_1B7BF4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Can't get filesystem attributes -- Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7C54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Can't write at URL: %@. Maybe a sandboxing issue? Try reinstalling the App", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7CB4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Failed to add PSC eventhough an old store didn't exist. More information to follow -- Bailing out", a5, a6, a7, a8, 0);
}

void sub_1B7CE8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Existing persistentStore was moved yet somehow the original file is still there -- Bailing out", a5, a6, a7, a8, 0);
}

void sub_1B7D1C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to move the existing persistentStore -- Bailing out -- Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7D7C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to delete PersistentStore %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B7DDC()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;

  sub_217B0();
  v3 = 2112;
  v4 = v0;
  _os_log_error_impl(&dword_0, v1, OS_LOG_TYPE_ERROR, "Failed to create storeContainerURL: %@ error: %@", v2, 0x16u);
  sub_5768();
}

void sub_1B7E58(void *a1, uint8_t *buf, _QWORD *a3, os_log_t log)
{
  *(_DWORD *)buf = 138543362;
  *a3 = a1;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Timeout waiting for completion on transaction: %{public}@", buf, 0xCu);

}

void sub_1B7EB0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Attempting to take assertion for nil identifier.", a5, a6, a7, a8, 0);
}

void sub_1B7EE4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Attempting to release assertion for nil identifier.", a5, a6, a7, a8, 0);
}

void sub_1B7F18(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2176C(&dword_0, a2, a3, "Background task assertion expired for identifier %@.", a5, a6, a7, a8, 2u);
}

void sub_1B7F84(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2176C(&dword_0, a2, a3, "No background task assertion found for %@.", a5, a6, a7, a8, 2u);
}

void sub_1B7FEC(uint8_t *a1, void *a2, _QWORD *a3, NSObject *a4)
{
  void *v7;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "assetID"));
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl(&dword_0, a4, OS_LOG_TYPE_ERROR, "Error decoding annotations for assetID %@", a1, 0xCu);

}

void sub_1B8060(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Failed to fetch cloudSyncVersions error: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1B80D4(void *a1, uint64_t a2, NSObject *a3)
{
  id v5;
  uint64_t v6;
  int v7;
  id v8;
  __int16 v9;
  uint64_t v10;

  v5 = objc_msgSend(a1, "count");
  v6 = *(_QWORD *)(a2 + 32);
  v7 = 134218242;
  v8 = v5;
  v9 = 2112;
  v10 = v6;
  _os_log_error_impl(&dword_0, a3, OS_LOG_TYPE_ERROR, "BCStackRenderer: Not enough source covers (%lu) to build stack %@", (uint8_t *)&v7, 0x16u);
  sub_8E6E0();
}

void sub_1B8168(uint64_t a1, NSObject *a2)
{
  id WeakRetained;
  int v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v4 = 138412290;
  v5 = WeakRetained;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "BCStackRenderer: Timeout fetching covers to build stack %@", (uint8_t *)&v4, 0xCu);

  sub_8E6E0();
}

void sub_1B81F4(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "trying to take asset offline but it's already offline: assetID: %@", (uint8_t *)&v2, 0xCu);
}

void sub_1B8268(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Failed to export annotations to offline DB, target path unavailable", v1, 2u);
}

void sub_1B82A8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_783DC(&dword_0, a2, a3, "generateBestRepresentationForRequest: %{mask.hash}@ took more than 0.5s.", a5, a6, a7, a8, 2u);
  sub_5768();
}

void sub_1B8320(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "generateBestRepresentationForRequest error: %@", (uint8_t *)&v2, 0xCu);
  sub_5768();
}

void sub_1B8390()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  os_log_t v3;
  uint8_t v4[14];
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  sub_131348();
  v5 = v0;
  v6 = v1;
  v7 = v2;
  _os_log_error_impl(&dword_0, v3, OS_LOG_TYPE_ERROR, "[iCloudSync] Failed to write datafile and metadata via a coordinated write to %{mask.hash}@, ERROR: %@", v4, 0x20u);
}

void sub_1B8420()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_131348();
  sub_783DC(&dword_0, v0, v1, "[iCloudSync] writing file did not complete %{mask.hash}@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8488(void *a1, double a2)
{
  uint64_t v3;
  int v4;
  double v5;
  __int16 v6;
  uint64_t v7;

  objc_msgSend(a1, "contentInset");
  v4 = 134218240;
  v5 = a2;
  v6 = 2048;
  v7 = v3;
  _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "attempting to scroll to invalid offset: totalPastTop=%f, contentInset.top=%f", (uint8_t *)&v4, 0x16u);
}

void sub_1B8520()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_31238(&dword_0, v0, v1, "Query has not been teared down in dealloc.", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B854C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;

  v2 = 141558274;
  v3 = 1752392040;
  v4 = 2112;
  v5 = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "Observing URL: %{mask.hash}@", (uint8_t *)&v2, 0x16u);
}

void sub_1B85D4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "This must be running on the main thread", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B8600()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_31238(&dword_0, v0, v1, "Tearing down query", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B862C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_31238(&dword_0, v0, v1, "Found existing nosync directory", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B8658()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_31238(&dword_0, v0, v1, "Created nosync directory", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B8684()
{
  uint64_t v0;
  os_log_t v1;

  sub_13B634();
  sub_13B65C(&dword_0, v0, v1, "Failed to create nosync directory: %{mask.hash}@, %@");
}

void sub_1B86E8()
{
  uint64_t v0;
  os_log_t v1;

  sub_13B634();
  sub_13B65C(&dword_0, v0, v1, "Failed to create subpath: %{mask.hash}@, %@");
}

void sub_1B874C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "Failed to find momd file. Bailing.", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B8778()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "Can't setup a persistent store. Bailing.", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B87A4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to set up persistent store on second try. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8804()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to create a moc for the persistent store at url: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8864()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "We had an error creating the persistenStore directory", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B8890()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to set up persistent store on first try. Trying again. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B88F0(uint64_t a1, uint64_t a2, NSObject *a3)
{
  _BYTE v3[24];

  *(_DWORD *)v3 = 134218242;
  *(_QWORD *)&v3[4] = a2;
  *(_WORD *)&v3[12] = 2112;
  *(_QWORD *)&v3[14] = a1;
  sub_573C(&dword_0, a2, a3, "Purge Tracking: Error fetching assets with launches > %lu. Error: %@", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_QWORD *)&v3[16]);
  sub_5768();
}

void sub_1B8960()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Purge Tracking: Error saving after deleting assets to purge. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B89C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Purge Tracking: Error deleting assets to purge. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8A20()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "Purge Tracking: One or both oldest date missing oldestDateToAvoidPurgeOfSamples=%@ oldestDateToAvoidPurgeOfNonSamples=%@");
  sub_5768();
}

void sub_1B8A80()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error cleaning up finished books. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8AE0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error saving after immediate promotion, error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8B40()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "Time tracker released, unable to track.", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B8B6C(uint64_t a1)
{
  unint64_t v1;
  __CFString *v2;
  uint64_t v3;
  os_log_t v4;
  __int128 v5;

  v1 = *(_QWORD *)(a1 + 72);
  if (v1 > 2)
    v2 = 0;
  else
    v2 = off_2924F8[v1];
  LODWORD(v5) = 138412546;
  *(_QWORD *)((char *)&v5 + 4) = v2;
  sub_1437E0();
  sub_573C(&dword_0, v3, v4, "Failed to update reading session on %@ session. Error: %@", (_QWORD)v5, DWORD2(v5));
  sub_5768();
}

void sub_1B8BF4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_267E0(&dword_0, v0, v1, "Running promotion algorithm for untracked asset %@.", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8C54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_7B924();
  sub_267E0(&dword_0, v0, v1, "Start promotion timer for untracked asset %@.", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8CB8()
{
  uint64_t v0;
  os_log_t v1;

  sub_26804();
  sub_573C(&dword_0, v0, v1, "No reading session at session ended: asset %@, session %@");
  sub_5768();
}

void sub_1B8D20()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_26804();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "Notifying observers of session ending asset %@, session %@", v1, 0x16u);
  sub_5768();
}

void sub_1B8D98(uint64_t a1)
{
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = *(_QWORD *)(a1 + 32);
  sub_1437E0();
  sub_573C(&dword_0, v1, v2, "Failed to end reading session %@. Error: %@", (_QWORD)v3, DWORD2(v3));
  sub_5768();
}

void sub_1B8E04()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error executing a fetch request: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8E64()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to purge books. %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8EC4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error saving after purging old tracked assets. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8F24()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "Error deleting tracked assets older than %@. error: %@");
  sub_5768();
}

void sub_1B8F84()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error purging recent books DB, error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B8FE4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error purging all reading sessions, error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9044()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error purging all tracked assets, error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B90A4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "No global cloud metadata manager so failed to seed the recents list.", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B90D0()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "Failed to create a persitent store directory at %@. Error: %@");
  sub_5768();
}

void sub_1B9130()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error purging finished book reading sessions. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9190()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error purging finished tracked assets. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B91F0()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  __int128 v3;

  sub_143808(__stack_chk_guard);
  LODWORD(v3) = 138412546;
  *(_QWORD *)((char *)&v3 + 4) = v0;
  sub_1437E0();
  sub_573C(&dword_0, v1, v2, "Error saving the local tracked asset: %@, error: %@", (_QWORD)v3, DWORD2(v3));
  sub_5768();
}

void sub_1B9258()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Failed to retrieve reading sessions: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B92B8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_143808(__stack_chk_guard);
  sub_7B924();
  sub_2176C(&dword_0, v0, v1, "Error: we should have some candidate entries for assetID %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9318()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_143808(__stack_chk_guard);
  sub_7B924();
  sub_2176C(&dword_0, v0, v1, "Error purging old reading times for candidate book with assetID: %@.", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9378()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Error fetching tracked asset: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B93D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_143808(__stack_chk_guard);
  sub_7B924();
  sub_2176C(&dword_0, v0, v1, "Error saving new reading session: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9438()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Collision detected on sessionID %{public}@. Re-using existing reading session.", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9498()
{
  uint64_t v0;
  os_log_t v1;

  sub_1437F0();
  sub_573C(&dword_0, v0, v1, "Error updating the close time stamp for candidate book with assetID: %@, error: %@");
  sub_5768();
}

void sub_1B94FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_267D4();
  sub_267BC(&dword_0, v0, v1, "This is an error.  We should always have a book + session combination at book close", v2, v3, v4, v5, v6);
  sub_267CC();
}

void sub_1B9528()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "Error deleting sessions for assetID %{public}@: %@");
  sub_5768();
}

void sub_1B9588()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Purge Tracking: Error fetching asset=%@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B95E8()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "Purge Tracking: Error deleting asset=%@. Error: %@");
  sub_5768();
}

void sub_1B9648()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "Purge Tracking: Error saving changes. Error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B96A8(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "BCDesribedImage: Invalid image size creating a described image for identifier: %@  error: %@", (uint8_t *)&v3, 0x16u);
}

void sub_1B972C(uint64_t a1, uint64_t a2, NSObject *a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  void *v13;

  v6 = objc_msgSend((id)objc_opt_class(a1), "annotationAssetIDFromDictionaryRepresentation:", a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = objc_msgSend((id)objc_opt_class(a1), "annotationUuidFromDictionaryRepresentation:", a2);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  v10 = 138412546;
  v11 = v7;
  v12 = 2112;
  v13 = v9;
  _os_log_error_impl(&dword_0, a3, OS_LOG_TYPE_ERROR, "MZBookKeeper annotation merge assetID=%@ [%@] annotationLocation==nil && plUserData == nil && deleted == NO, ignoring", (uint8_t *)&v10, 0x16u);

}

void sub_1B9800(NSObject *a1, double a2, double a3, double a4, double a5)
{
  NSString *v6;
  void *v7;
  int v8;
  void *v9;

  v6 = NSStringFromCGRect(*(CGRect *)&a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = 138412290;
  v9 = v7;
  _os_log_error_impl(&dword_0, a1, OS_LOG_TYPE_ERROR, "invalid from rect used to normalize insets, rect: %@", (uint8_t *)&v8, 0xCu);

}

void sub_1B9894(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Querying app delegate from non-main thread.", v1, 2u);
}

void sub_1B98D4()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "BICDiskDataStore: Error creating cache directory: %@ : %@");
  sub_5768();
}

void sub_1B9934()
{
  uint64_t v0;
  os_log_t v1;

  sub_26804();
  sub_573C(&dword_0, v0, v1, "BICDiskDataStore: Could not load the image from the file: %@ for request: %@");
  sub_5768();
}

void sub_1B999C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: Unarchive stack path error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B99FC()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "BICDiskDataStore: Error deleting cached file: %@ : %@");
  sub_5768();
}

void sub_1B9A5C()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_26804();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "BICDiskDataStore: Not writing to disk: %@ : %@", v1, 0x16u);
  sub_5768();
}

void sub_1B9AD4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: Archive stack path error: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9B34()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: Copy file error %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9B94()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: sym link error %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9BF4()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "BICDiskDataStore: Error creating cachedImageSetPath: %@ : %@");
  sub_5768();
}

void sub_1B9C54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: Could not create an image source for: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9CB4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: Could not create an image for: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9D14()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: File does not exist for: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9D74()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: _writeCachedImage error - nil image for image path: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9DD4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_217B0();
  sub_2176C(&dword_0, v0, v1, "BICDiskDataStore: _writeCachedImage error - unable to create destination for imageURL: %@", v2, v3, v4, v5, v6);
  sub_5768();
}

void sub_1B9E34(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "-[IMSleepManager setIdleTimerDelay: requires IMApplication as app class. Doing nothing now.", v1, 2u);
}

void sub_1B9E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1670FC(&dword_0, &_os_log_default, a3, "Expecting value to be in the range [%@, %@], got %@", a5, a6, a7, a8, 2u);
}

double sub_1B9EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double result;

  sub_1670FC(&dword_0, &_os_log_default, a3, "Expecting value to be in the range [%lf, %lf], got %lf", a5, a6, a7, a8, 0);
  return result;
}

void sub_1B9F88(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2176C(&dword_0, a2, a3, "Error fetching adam ids for series items: %@", a5, a6, a7, a8, 2u);
  sub_5768();
}

void sub_1B9FEC()
{
  uint64_t v0;
  os_log_t v1;

  sub_783C4();
  sub_573C(&dword_0, v0, v1, "Error fetching series item with adam id (%@): %@");
  sub_5768();
}

void sub_1BA04C(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "updateSeriesForSeriesAdamIDsWithTypes: %@", (uint8_t *)&v2, 0xCu);
  sub_5768();
}

void sub_1BA0BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Updating Series Adam IDs -- Timed Out", a5, a6, a7, a8, 0);
  sub_267CC();
}

void sub_1BA0EC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Updating Series -- Timed Out", a5, a6, a7, a8, 0);
  sub_267CC();
}

void sub_1BA11C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_267BC(&dword_0, a1, a3, "Updating Store Books -- Timed Out", a5, a6, a7, a8, 0);
  sub_267CC();
}

void operator delete()
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

id objc_msgSend_AEReplaceTemplatePlaceholder_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "AEReplaceTemplatePlaceholder:withString:");
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGContext");
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImage");
}

id objc_msgSend_CGImagesForKey_size_resourceSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImagesForKey:size:resourceSize:");
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPath");
}

id objc_msgSend_CGPointValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPointValue");
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGRectValue");
}

id objc_msgSend_CGSizeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGSizeValue");
}

id objc_msgSend_CMTimeRangeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CMTimeRangeValue");
}

id objc_msgSend_CMTimeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CMTimeValue");
}

id objc_msgSend_CSSClassForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CSSClassForStyle:");
}

id objc_msgSend_HTMLGenerator_citationForStoreURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "HTMLGenerator:citationForStoreURL:");
}

id objc_msgSend_IMDeviceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "IMDeviceOrientation");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_OSXPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "OSXPredicate");
}

id objc_msgSend_UIImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UIImage");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URL");
}

id objc_msgSend_URLAssetWithURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLAssetWithURL:options:");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathExtension:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByDeletingLastPathComponent");
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForDirectory:inDomain:appropriateForURL:create:error:");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLForUbiquityContainerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForUbiquityContainerIdentifier:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UTI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTI");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDString");
}

id objc_msgSend__IMExpandingLabelComonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_IMExpandingLabelComonInit");
}

id objc_msgSend__LRUCleanupForMimeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_LRUCleanupForMimeType:");
}

id objc_msgSend__TOCEntryCFIs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_TOCEntryCFIs");
}

id objc_msgSend__URLSafeBase64EncodedStringWithData_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_URLSafeBase64EncodedStringWithData:options:");
}

id objc_msgSend___im_enumerateChildrenConformingToProtocol_stop_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__im_enumerateChildrenConformingToProtocol:stop:block:");
}

id objc_msgSend___im_enumerateVisibleChildrenConformingToProtocol_stop_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__im_enumerateVisibleChildrenConformingToProtocol:stop:block:");
}

id objc_msgSend__accessedIdsAddObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessedIdsAddObject:");
}

id objc_msgSend__accessedIdsRemoveAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessedIdsRemoveAllObjects");
}

id objc_msgSend__accessibilityAncestorIsKindOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityAncestorIsKindOf:");
}

id objc_msgSend__accessibilityFindDescendant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityFindDescendant:");
}

id objc_msgSend__accessibilitySetIsSpeakThisElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetIsSpeakThisElement:");
}

id objc_msgSend__accessibilitySetSortPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetSortPriority:");
}

id objc_msgSend__acknowledgeMergingCloudAnnotations_forAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_acknowledgeMergingCloudAnnotations:forAssetID:");
}

id objc_msgSend__activateChapterForBook_chapterID_title_currentPage_chapterRange_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateChapterForBook:chapterID:title:currentPage:chapterRange:completion:");
}

id objc_msgSend__addAdornmentViewsToParentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAdornmentViewsToParentView:");
}

id objc_msgSend__addCoverForCoverMove_inView_isDismiss_fromFrame_toFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCoverForCoverMove:inView:isDismiss:fromFrame:toFrame:");
}

id objc_msgSend__addCoverForCoverSource_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCoverForCoverSource:inView:");
}

id objc_msgSend__addDescribedImages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addDescribedImages:");
}

id objc_msgSend__addImageEntriesForDescribedImages_inLevelID_toSet_addedEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addImageEntriesForDescribedImages:inLevelID:toSet:addedEntries:");
}

id objc_msgSend__addInterest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addInterest:");
}

id objc_msgSend__addItem_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addItem:forKey:");
}

id objc_msgSend__addScrollViewScrollObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addScrollViewScrollObserver:");
}

id objc_msgSend__addSublayersToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSublayersToArray:");
}

id objc_msgSend__addToState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addToState:");
}

id objc_msgSend__adjustCacheSizeBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustCacheSizeBy:");
}

id objc_msgSend__adjustContentInsetForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustContentInsetForViewController:");
}

id objc_msgSend__adjustDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustDuration:");
}

id objc_msgSend__adjustSpring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustSpring:");
}

id objc_msgSend__adjustedContentSizeForCardViewController_contentSize_includeDistanceToExpand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustedContentSizeForCardViewController:contentSize:includeDistanceToExpand:");
}

id objc_msgSend__afterAllStoreOperationsCompletedForDescribedImage_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_afterAllStoreOperationsCompletedForDescribedImage:performBlock:");
}

id objc_msgSend__alongsideAnimationViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alongsideAnimationViews");
}

id objc_msgSend__alongsideAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alongsideAnimations");
}

id objc_msgSend__alongsideAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alongsideAnimations:");
}

id objc_msgSend__alongsideCompletions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alongsideCompletions");
}

id objc_msgSend__alongsideCompletions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alongsideCompletions:");
}

id objc_msgSend__alwaysUseSlideAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alwaysUseSlideAnimation");
}

id objc_msgSend__animatePopByCoverTransitioning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animatePopByCoverTransitioning:");
}

id objc_msgSend__animatePopByCrossfading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animatePopByCrossfading:");
}

id objc_msgSend__animatePopBySliding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animatePopBySliding:");
}

id objc_msgSend__animatePushByCoverTransitioning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animatePushByCoverTransitioning:");
}

id objc_msgSend__animatePushByCrossfading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animatePushByCrossfading:");
}

id objc_msgSend__animatePushBySliding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animatePushBySliding:");
}

id objc_msgSend__animateWithDuration_delay_options_factory_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateWithDuration:delay:options:factory:animations:completion:");
}

id objc_msgSend__animationTypeForDismissingCardSetViewController_distanceToCoverSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animationTypeForDismissingCardSetViewController:distanceToCoverSource:");
}

id objc_msgSend__appVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appVersion");
}

id objc_msgSend__appearState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appearState");
}

id objc_msgSend__applicationKeyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationKeyWindow");
}

id objc_msgSend__applyBlocks_releaseBlocks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyBlocks:releaseBlocks:");
}

id objc_msgSend__applyBookFilter_toImage_size_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyBookFilter:toImage:size:completion:");
}

id objc_msgSend__applyCardSetViewController_withTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyCardSetViewController:withTransform:");
}

id objc_msgSend__applyContentInsetToContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyContentInsetToContentViewController:");
}

id objc_msgSend__applySeriesFilter_toImages_filters_size_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applySeriesFilter:toImages:filters:size:completion:");
}

id objc_msgSend__aq_bindArguments_inStatement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_aq_bindArguments:inStatement:");
}

id objc_msgSend__aq_cursorForQuery_withArguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_aq_cursorForQuery:withArguments:");
}

id objc_msgSend__aq_errorInFunction_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_aq_errorInFunction:result:");
}

id objc_msgSend__arrayCopyWithOnlyRangeCFIsFromCFIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrayCopyWithOnlyRangeCFIsFromCFIs:");
}

id objc_msgSend__arrayForUpdateAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrayForUpdateAction:");
}

id objc_msgSend__askUserIfShouldOpenURL_promptContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_askUserIfShouldOpenURL:promptContext:completion:");
}

id objc_msgSend__aspectMatchingSizeFrom_withCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_aspectMatchingSizeFrom:withCandidate:");
}

id objc_msgSend__autoscrollDistanceForProximityToEdge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autoscrollDistanceForProximityToEdge:");
}

id objc_msgSend__autoscrollForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autoscrollForCell:");
}

id objc_msgSend__auxContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_auxContext");
}

id objc_msgSend__axClearReferencesToSelfInButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axClearReferencesToSelfInButtons");
}

id objc_msgSend__axEnumerateButtonsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axEnumerateButtonsUsingBlock:");
}

id objc_msgSend__ba_effectiveViewControllerForAnalyticsTrackingIgnoringViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ba_effectiveViewControllerForAnalyticsTrackingIgnoringViewController:");
}

id objc_msgSend__ba_effectiveViewControllerForEngagementProviderIgnoringViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ba_effectiveViewControllerForEngagementProviderIgnoringViewController:");
}

id objc_msgSend__backgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backgroundView");
}

id objc_msgSend__bc_activeNavBarSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_activeNavBarSnapshot");
}

id objc_msgSend__bc_analyticsAncestorPresentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_analyticsAncestorPresentedViewController");
}

id objc_msgSend__bc_analyticsComputeVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_analyticsComputeVisibility");
}

id objc_msgSend__bc_analyticsIsObscuredByPresentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_analyticsIsObscuredByPresentedViewController");
}

id objc_msgSend__bc_analyticsNotifiedWillDisappear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_analyticsNotifiedWillDisappear");
}

id objc_msgSend__bc_analyticsSetVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_analyticsSetVisibility:");
}

id objc_msgSend__bc_analyticsUpdateVisibilityOfDescendants(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_analyticsUpdateVisibilityOfDescendants");
}

id objc_msgSend__bc_analyticsUpdateVisibilityOfSelf(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_analyticsUpdateVisibilityOfSelf");
}

id objc_msgSend__bc_analyticsUpdateVisibilityOfSelfWithParent_parentVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bc_analyticsUpdateVisibilityOfSelfWithParent:parentVisibility:");
}

id objc_msgSend__becomeActiveOnContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_becomeActiveOnContext:");
}

id objc_msgSend__blankCoverForDescribedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_blankCoverForDescribedImage:");
}

id objc_msgSend__blankLayerForDescribedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_blankLayerForDescribedImage:");
}

id objc_msgSend__bookFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookFilter:");
}

id objc_msgSend__bookIdentifierFromAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookIdentifierFromAssetID:");
}

id objc_msgSend__booksRecordIDFrom_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_booksRecordIDFrom:completion:");
}

id objc_msgSend__bounceBackSpringWithVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bounceBackSpringWithVelocity:");
}

id objc_msgSend__bulkUpdateTocEntryReadProportions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bulkUpdateTocEntryReadProportions:completion:");
}

id objc_msgSend__bulkUpdateWithReadRanges_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bulkUpdateWithReadRanges:completion:");
}

id objc_msgSend__buttonImageForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonImageForStyle:");
}

id objc_msgSend__cacheDirectoryPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheDirectoryPath");
}

id objc_msgSend__cacheURLFromNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheURLFromNamespace:");
}

id objc_msgSend__calculateNumberOfColumns(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateNumberOfColumns");
}

id objc_msgSend__cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancel");
}

id objc_msgSend__cancelAutoscrollTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelAutoscrollTimer");
}

id objc_msgSend__cancelCellHighlight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelCellHighlight");
}

id objc_msgSend__cancelDelayForExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelDelayForExperience:");
}

id objc_msgSend__cancelPreloadExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelPreloadExperience:");
}

id objc_msgSend__cancelShowExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelShowExperience:");
}

id objc_msgSend__cancelTransactionsConflictedByTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelTransactionsConflictedByTransaction:");
}

id objc_msgSend__candidateIdentifiersForStringQueries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_candidateIdentifiersForStringQueries:");
}

id objc_msgSend__cardSeparation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cardSeparation");
}

id objc_msgSend__cardSlideDownSpringWithVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cardSlideDownSpringWithVelocity:");
}

id objc_msgSend__cardSlideUpSpring(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cardSlideUpSpring");
}

id objc_msgSend__cardWidthForContainerWidth_usingConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cardWidthForContainerWidth:usingConfiguration:");
}

id objc_msgSend__cellWithUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellWithUniqueIdentifier:");
}

id objc_msgSend__centeredProgressFrameWithBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_centeredProgressFrameWithBounds:");
}

id objc_msgSend__cfiLocationFromHeadOf_toTailOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cfiLocationFromHeadOf:toTailOf:");
}

id objc_msgSend__cfiLocationFromTailOf_toHeadOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cfiLocationFromTailOf:toHeadOf:");
}

id objc_msgSend__chapterHrefFromAssetID_chapterID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_chapterHrefFromAssetID:chapterID:");
}

id objc_msgSend__chapterIdentifierFromAssetID_chapterID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_chapterIdentifierFromAssetID:chapterID:");
}

id objc_msgSend__checkForBookStoreURLUsingRegularExpressions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkForBookStoreURLUsingRegularExpressions");
}

id objc_msgSend__checkForGenericUpgradeForInterest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkForGenericUpgradeForInterest:");
}

id objc_msgSend__checkForQualityUpgradeForInterest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkForQualityUpgradeForInterest:");
}

id objc_msgSend__checkInterestForDescribedImages_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkInterestForDescribedImages:forRequest:");
}

id objc_msgSend__checkRestrictedContentSettings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkRestrictedContentSettings");
}

id objc_msgSend__checkStack_forInterestIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkStack:forInterestIn:");
}

id objc_msgSend__classicThumbRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_classicThumbRect");
}

id objc_msgSend__clean_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clean:");
}

id objc_msgSend__cleanupBooksMarkedAsFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupBooksMarkedAsFinished:");
}

id objc_msgSend__cleanupWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupWithCompletion:");
}

id objc_msgSend__clearTranslationForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearTranslationForView:");
}

id objc_msgSend__cloudSyncVersionsForDataType_inContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cloudSyncVersionsForDataType:inContext:");
}

id objc_msgSend__colorForUserInterfaceStyle_fromColor_forTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorForUserInterfaceStyle:fromColor:forTraitCollection:");
}

id objc_msgSend__colorsInTraitCollectionContext_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorsInTraitCollectionContext:block:");
}

id objc_msgSend__commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonInit");
}

id objc_msgSend__commonInitWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonInitWithFrame:");
}

id objc_msgSend__computeMetricsWithEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeMetricsWithEnvironment:");
}

id objc_msgSend__configureFromReadingStatistics_withMergers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFromReadingStatistics:withMergers:");
}

id objc_msgSend__containerIDForContainerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_containerIDForContainerIdentifier:");
}

id objc_msgSend__contextDependentTolerance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextDependentTolerance");
}

id objc_msgSend__contextWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextWithID:");
}

id objc_msgSend__continuousCornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continuousCornerRadius");
}

id objc_msgSend__controlScrubbing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_controlScrubbing");
}

id objc_msgSend__copyCGImageForRow_size_resourceSize_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyCGImageForRow:size:resourceSize:scale:");
}

id objc_msgSend__copyInto_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyInto:");
}

id objc_msgSend__cornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cornerRadius");
}

id objc_msgSend__coverFadeItemsExcludingRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_coverFadeItemsExcludingRange:");
}

id objc_msgSend__coverScaleSpring(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_coverScaleSpring");
}

id objc_msgSend__coverSourceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_coverSourceAtIndex:");
}

id objc_msgSend__coverSpring(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_coverSpring");
}

id objc_msgSend__coverSpringForDismissWithVelocity_isCompact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_coverSpringForDismissWithVelocity:isCompact:");
}

id objc_msgSend__createCacheTable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createCacheTable:");
}

id objc_msgSend__createImaginaryCovers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createImaginaryCovers");
}

id objc_msgSend__createPersistentDirectoryIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPersistentDirectoryIfNeeded");
}

id objc_msgSend__createStorageForDb_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createStorageForDb:");
}

id objc_msgSend__currentActivityForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentActivityForContext:");
}

id objc_msgSend__currentBookIsFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentBookIsFinished");
}

id objc_msgSend__currentIndexFromScrollViewBounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentIndexFromScrollViewBounds");
}

id objc_msgSend__currentTraitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentTraitCollection");
}

id objc_msgSend__customCurve(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_customCurve");
}

id objc_msgSend__dataSourceIndexFromReorderedIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dataSourceIndexFromReorderedIndex:");
}

id objc_msgSend__dataURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dataURL");
}

id objc_msgSend__databaseHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_databaseHandle");
}

id objc_msgSend__deactivateCurrentWidget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deactivateCurrentWidget:");
}

id objc_msgSend__debugDragCoefficient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugDragCoefficient");
}

id objc_msgSend__decodeSessionOptionsWithOptimalSize_highPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decodeSessionOptionsWithOptimalSize:highPriority:");
}

id objc_msgSend__defaultIXStoreSheetDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultIXStoreSheetDictionary");
}

id objc_msgSend__delayCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delayCompleted");
}

id objc_msgSend__delayCompletedForExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delayCompletedForExperience:");
}

id objc_msgSend__detailsForExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detailsForExperience:");
}

id objc_msgSend__dictionaryRepresentationForAnnotationsMatchingPredicate_map_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictionaryRepresentationForAnnotationsMatchingPredicate:map:inManagedObjectContext:");
}

id objc_msgSend__didBecomeVisibleContentScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didBecomeVisibleContentScrollView");
}

id objc_msgSend__didCommitDismissWithVelocity_interactiveAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didCommitDismissWithVelocity:interactiveAnimator:");
}

id objc_msgSend__dismissSpringVelocityWithFromFrame_toFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissSpringVelocityWithFromFrame:toFrame:");
}

id objc_msgSend__documentsURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_documentsURL");
}

id objc_msgSend__dragInteraction_itemsForSession_atPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dragInteraction:itemsForSession:atPoint:");
}

id objc_msgSend__dropOperationForInteraction_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dropOperationForInteraction:session:");
}

id objc_msgSend__dynamicColorWithColorsByTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dynamicColorWithColorsByTraitCollection:");
}

id objc_msgSend__effectiveStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectiveStyle");
}

id objc_msgSend__enableInteractionForDisabledViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enableInteractionForDisabledViews");
}

id objc_msgSend__eventToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventToString:");
}

id objc_msgSend__excerptString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_excerptString:");
}

id objc_msgSend__executeMonitorWithMessage_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeMonitorWithMessage:data:");
}

id objc_msgSend__expandExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expandExperience:");
}

id objc_msgSend__extraGripperOffsetForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extraGripperOffsetForViewController:");
}

id objc_msgSend__extractImagesFromTemplate_identifier_initialSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractImagesFromTemplate:identifier:initialSize:");
}

id objc_msgSend__fetchBestImagesForDescription_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchBestImagesForDescription:forRequest:");
}

id objc_msgSend__fetchGenericForDescription_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchGenericForDescription:forRequest:");
}

id objc_msgSend__fetchImage_forRequest_forInterest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImage:forRequest:forInterest:");
}

id objc_msgSend__fetchImageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImageForKey:");
}

id objc_msgSend__fetchImagesMatchingBestDescriptions_forOriginalDescription_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImagesMatchingBestDescriptions:forOriginalDescription:forRequest:");
}

id objc_msgSend__fetchImagesMatchingDescription_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImagesMatchingDescription:forRequest:");
}

id objc_msgSend__fetchImagesMatchingDescription_withTimeout_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImagesMatchingDescription:withTimeout:forRequest:completion:");
}

id objc_msgSend__fetchImagesMatchingDescriptionWithoutPushing_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImagesMatchingDescriptionWithoutPushing:forRequest:");
}

id objc_msgSend__fetchLayerForIdentifier_size_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchLayerForIdentifier:size:options:");
}

id objc_msgSend__fetchLayerForImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchLayerForImage:");
}

id objc_msgSend__fetchPersistentHistoryWithHistoryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPersistentHistoryWithHistoryToken:");
}

id objc_msgSend__fetchPrimaryImage_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPrimaryImage:forRequest:");
}

id objc_msgSend__fetchRequestForReadingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchRequestForReadingSession:");
}

id objc_msgSend__fetchRequestForTOCEntries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchRequestForTOCEntries");
}

id objc_msgSend__fetchedProfile_withIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchedProfile:withIdentifier:");
}

id objc_msgSend__filePathFromEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filePathFromEntryLocation:");
}

id objc_msgSend__filteredAdamIDs_withIntervalInDays_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filteredAdamIDs:withIntervalInDays:");
}

id objc_msgSend__findHorizontalRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findHorizontalRange");
}

id objc_msgSend__findInterestForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findInterestForIdentifier:");
}

id objc_msgSend__findVisibleCoverSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findVisibleCoverSources");
}

id objc_msgSend__finishAnimationWithScrollView_cardViewController_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishAnimationWithScrollView:cardViewController:cardData:");
}

id objc_msgSend__flipScrollViewOffsetIfNeeded_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flipScrollViewOffsetIfNeeded:width:");
}

id objc_msgSend__formattedMessageStringForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedMessageStringForURL:");
}

id objc_msgSend__frameForCardAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForCardAtIndex:");
}

id objc_msgSend__frameForImage_forDisplayingInContainerBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForImage:forDisplayingInContainerBounds:");
}

id objc_msgSend__frameForPageAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForPageAtIndex:");
}

id objc_msgSend__generateLinkMetadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateLinkMetadata");
}

id objc_msgSend__generationForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generationForURL:");
}

id objc_msgSend__get_caller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_get:caller:");
}

id objc_msgSend__getActiveChapterContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getActiveChapterContext:");
}

id objc_msgSend__getActiveSectionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getActiveSectionContext:");
}

id objc_msgSend__getActiveWidgetContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getActiveWidgetContext:");
}

id objc_msgSend__getAssetsToPurge_request_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getAssetsToPurge:request:error:");
}

id objc_msgSend__getOpenBookContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getOpenBookContext:");
}

id objc_msgSend__getSortedBestMatchesOf_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSortedBestMatchesOf:forRequest:completion:");
}

id objc_msgSend__getSystemVersionMajor_minor_bugfix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSystemVersionMajor:minor:bugfix:");
}

id objc_msgSend__goContractedCommon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_goContractedCommon");
}

id objc_msgSend__goContractedCommonTransformingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_goContractedCommonTransformingView:");
}

id objc_msgSend__graphicsQuality(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_graphicsQuality");
}

id objc_msgSend__gridView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_gridView");
}

id objc_msgSend__handleReadingWithAssetID_sessionID_sessionEvent_trackerEventType_readingFeatureFlags_successCompletion_failureCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleReadingWithAssetID:sessionID:sessionEvent:trackerEventType:readingFeatureFlags:successCompletion:failureCompletion:");
}

id objc_msgSend__handleStateChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleStateChange:");
}

id objc_msgSend__hasHiddenCoverSourcesForCardSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasHiddenCoverSourcesForCardSet:");
}

id objc_msgSend__hashFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hashFor:");
}

id objc_msgSend__hideGrabbedCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideGrabbedCell");
}

id objc_msgSend__hideVisibleCoverSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideVisibleCoverSources");
}

id objc_msgSend__histogramForImage_result_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_histogramForImage:result:size:");
}

id objc_msgSend__imageEntryFetchRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageEntryFetchRequest");
}

id objc_msgSend__imageEntryLocationMatchingDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageEntryLocationMatchingDescription:");
}

id objc_msgSend__imageSetFetchRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageSetFetchRequest");
}

id objc_msgSend__imageSetForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageSetForIdentifier:");
}

id objc_msgSend__imageSetIDFromImageEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageSetIDFromImageEntryLocation:");
}

id objc_msgSend__imaxAddCategoryMethod_toClass_isClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxAddCategoryMethod:toClass:isClass:");
}

id objc_msgSend__imaxAddNoteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxAddNoteButton");
}

id objc_msgSend__imaxColorControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxColorControls");
}

id objc_msgSend__imaxDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxDelegate");
}

id objc_msgSend__imaxDeleteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxDeleteButton");
}

id objc_msgSend__imaxInstallSafeCategoryOnClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxInstallSafeCategoryOnClass:");
}

id objc_msgSend__imaxInstallSafeCategoryOnClassNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxInstallSafeCategoryOnClassNamed:");
}

id objc_msgSend__imaxRespondsToSelector_fromExtrasProtocol_skipAssertions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxRespondsToSelector:fromExtrasProtocol:skipAssertions:");
}

id objc_msgSend__imaxRightArrowButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxRightArrowButton");
}

id objc_msgSend__imaxShareButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxShareButton");
}

id objc_msgSend__imaxSliderRepresentsBookPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxSliderRepresentsBookPosition");
}

id objc_msgSend__imaxTarget(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxTarget");
}

id objc_msgSend__imaxValidatedValueForKey_expectedClass_expectedTypeEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxValidatedValueForKey:expectedClass:expectedTypeEncoding:");
}

id objc_msgSend__imaxValidatedValueForKey_expectedClass_possibleExpectedTypeEncodings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxValidatedValueForKey:expectedClass:possibleExpectedTypeEncodings:");
}

id objc_msgSend__incrementVersionForIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incrementVersionForIdentifiers:");
}

id objc_msgSend__indexDispatchGroupDispatchToQueue_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexDispatchGroupDispatchToQueue:block:");
}

id objc_msgSend__indexOfChildViewControllerToSuspendOrResume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexOfChildViewControllerToSuspendOrResume");
}

id objc_msgSend__indexingDispatchGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexingDispatchGroup");
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_init");
}

id objc_msgSend__inscribedRectInBoundingPathByInsettingRect_onEdges_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inscribedRectInBoundingPathByInsettingRect:onEdges:withOptions:");
}

id objc_msgSend__insertCGImage_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertCGImage:forKey:");
}

id objc_msgSend__insertCGImage_forKey_mimeType_scale_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertCGImage:forKey:mimeType:scale:properties:");
}

id objc_msgSend__insetPercentageForAbsoluteCoverRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insetPercentageForAbsoluteCoverRect:");
}

id objc_msgSend__installNewCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_installNewCellAtIndex:");
}

id objc_msgSend__interactiveChangeHandlers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_interactiveChangeHandlers");
}

id objc_msgSend__interactiveChangeHandlers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_interactiveChangeHandlers:");
}

id objc_msgSend__interactiveUpdateHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_interactiveUpdateHandler");
}

id objc_msgSend__intersectArray_withArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intersectArray:withArray:");
}

id objc_msgSend__intervalInDaysWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intervalInDaysWithCompletion:");
}

id objc_msgSend__invalidateConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateConfiguration");
}

id objc_msgSend__invalidateTOCEntriesIntersectingCFIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateTOCEntriesIntersectingCFIs:");
}

id objc_msgSend__invalidateTOCEntryCFICache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateTOCEntryCFICache");
}

id objc_msgSend__inventoryLevel_addLevelID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inventoryLevel:addLevelID:completion:");
}

id objc_msgSend__inventoryLevelOnly_addLevelID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inventoryLevelOnly:addLevelID:completion:");
}

id objc_msgSend__isAccessibilitySupportLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAccessibilitySupportLoaded");
}

id objc_msgSend__isAppExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAppExtension");
}

id objc_msgSend__isBookOpen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isBookOpen:");
}

id objc_msgSend__isContentRatingExplicitForInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isContentRatingExplicitForInfo:");
}

id objc_msgSend__isExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isExpanded");
}

id objc_msgSend__isExperienceViable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isExperienceViable:");
}

id objc_msgSend__isGenericNeededForDescription_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isGenericNeededForDescription:forRequest:");
}

id objc_msgSend__isICloudDriveSyncOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isICloudDriveSyncOptedIn");
}

id objc_msgSend__isImagePotentialPrimary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isImagePotentialPrimary:");
}

id objc_msgSend__isRTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRTL");
}

id objc_msgSend__isSlowModeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSlowModeEnabled");
}

id objc_msgSend__isVendedInterestBlankOrOldForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isVendedInterestBlankOrOldForRequest:");
}

id objc_msgSend__itemsForMetadataItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemsForMetadataItems:");
}

id objc_msgSend__jitterPositionAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_jitterPositionAnimation");
}

id objc_msgSend__jitterTransformAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_jitterTransformAnimation");
}

id objc_msgSend__keyProfileFromAEKeyProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyProfileFromAEKeyProfile:");
}

id objc_msgSend__kitImageNamed_withTrait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_kitImageNamed:withTrait:");
}

id objc_msgSend__knobOffsetForInset_knobLength_knobTravelLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobOffsetForInset:knobLength:knobTravelLength:");
}

id objc_msgSend__knobProportion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_knobProportion");
}

id objc_msgSend__labelLineSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelLineSpacing");
}

id objc_msgSend__layoutAdornmentViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutAdornmentViews");
}

id objc_msgSend__layoutCards(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutCards");
}

id objc_msgSend__layoutStackByChangingMode_newViewSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutStackByChangingMode:newViewSize:");
}

id objc_msgSend__layoutUnderlyingCardSetViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutUnderlyingCardSetViewController:animated:");
}

id objc_msgSend__legalizeAutoscrollDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_legalizeAutoscrollDistance");
}

id objc_msgSend__loadCacheSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadCacheSize");
}

id objc_msgSend__loadHtmlData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadHtmlData:");
}

id objc_msgSend__loadPersistentStoreAndRetryIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadPersistentStoreAndRetryIfNeeded:");
}

id objc_msgSend__loadPlainTextData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadPlainTextData:");
}

id objc_msgSend__loadStoreURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadStoreURL:");
}

id objc_msgSend__loadWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWithCompletion:");
}

id objc_msgSend__luxToLightLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_luxToLightLevel:");
}

id objc_msgSend__macOSXBuildString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_macOSXBuildString");
}

id objc_msgSend__macOSXVersionString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_macOSXVersionString");
}

id objc_msgSend__mainContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mainContext");
}

id objc_msgSend__makeGenericForDescription_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeGenericForDescription:forRequest:");
}

id objc_msgSend__makeScrollerPartLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeScrollerPartLayer");
}

id objc_msgSend__managedObjectModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_managedObjectModel");
}

id objc_msgSend__manager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manager");
}

id objc_msgSend__markAsOldAllNonPrimaryImagesForImageSetIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markAsOldAllNonPrimaryImagesForImageSetIDs:completion:");
}

id objc_msgSend__maxCostForMedium_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maxCostForMedium:");
}

id objc_msgSend__mediaIdentifierFromCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mediaIdentifierFromCFI:");
}

id objc_msgSend__mergeInAssetID_assetVersion_serializedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeInAssetID:assetVersion:serializedData:");
}

id objc_msgSend__metadataString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metadataString");
}

id objc_msgSend__minBackgroundViewAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_minBackgroundViewAlpha");
}

id objc_msgSend__mocDidSave_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocDidSave:");
}

id objc_msgSend__mocqSessionID_sessionEvent_trackerEventType_asset_assetID_isTrackedAsRecent_canBePromoted_isSample_readingFeatureFlags_successCompletion_failureCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocqSessionID:sessionEvent:trackerEventType:asset:assetID:isTrackedAsRecent:canBePromoted:isSample:readingFeatureFlags:successCompletion:failureCompletion:");
}

id objc_msgSend__mocq_assetToPurgeForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_assetToPurgeForAssetID:");
}

id objc_msgSend__mocq_deleteSessionsForAsset_beforeTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_deleteSessionsForAsset:beforeTime:");
}

id objc_msgSend__mocq_promoteAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_promoteAssetID:");
}

id objc_msgSend__mocq_readingSessionWithAssetID_sessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_readingSessionWithAssetID:sessionID:");
}

id objc_msgSend__mocq_runBookPromotionAlgorithmForAssetID_libraryAsset_isSample_successCompletion_failureCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_runBookPromotionAlgorithmForAssetID:libraryAsset:isSample:successCompletion:failureCompletion:");
}

id objc_msgSend__mocq_trackSessionBegin_assetID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_trackSessionBegin:assetID:error:");
}

id objc_msgSend__mocq_trackSessionEnd_assetID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_trackSessionEnd:assetID:error:");
}

id objc_msgSend__mocq_trackSessionUpdate_assetID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_trackSessionUpdate:assetID:error:");
}

id objc_msgSend__mocq_updateLaunchTrackingForAssets_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mocq_updateLaunchTrackingForAssets:error:");
}

id objc_msgSend__modernThumbRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modernThumbRect");
}

id objc_msgSend__mq_clearBookPromotionTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mq_clearBookPromotionTimer");
}

id objc_msgSend__mutableArrayCopyWithOnlyRangeCFIsFromCFIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mutableArrayCopyWithOnlyRangeCFIsFromCFIs:");
}

id objc_msgSend__namespaceNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_namespaceNamed:");
}

id objc_msgSend__needsUpdatingWithEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_needsUpdatingWithEnvironment:");
}

id objc_msgSend__negateArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_negateArray:");
}

id objc_msgSend__noSyncURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_noSyncURL");
}

id objc_msgSend__notifyBlocks_withValue_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyBlocks:withValue:error:");
}

id objc_msgSend__notifyLightLevelChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyLightLevelChange");
}

id objc_msgSend__notifyObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObservers:");
}

id objc_msgSend__notifyObserversForChangesWithCurrentToken_lastToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversForChangesWithCurrentToken:lastToken:");
}

id objc_msgSend__notifyObserversForUnchangedWithCurrentToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversForUnchangedWithCurrentToken:");
}

id objc_msgSend__objectHasChangesOfInterest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_objectHasChangesOfInterest:");
}

id objc_msgSend__observeImageChangeForArtworkSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_observeImageChangeForArtworkSource:");
}

id objc_msgSend__observeImageChangeForCoverSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_observeImageChangeForCoverSource:");
}

id objc_msgSend__obtainCardCoverSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_obtainCardCoverSources");
}

id objc_msgSend__oldCacheDirectoryPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_oldCacheDirectoryPath");
}

id objc_msgSend__optimize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_optimize");
}

id objc_msgSend__overridesShouldAutorotate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_overridesShouldAutorotate");
}

id objc_msgSend__pageLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageLabelFont");
}

id objc_msgSend__pageNumberLabelOnOwnLine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageNumberLabelOnOwnLine");
}

id objc_msgSend__pendingCardStackViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pendingCardStackViewControllers");
}

id objc_msgSend__percentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_percentOffset");
}

id objc_msgSend__performActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performActions");
}

id objc_msgSend__performOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performOperation:");
}

id objc_msgSend__permanentURLForRecordID_containerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_permanentURLForRecordID:containerIdentifier:");
}

id objc_msgSend__persistentCacheFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistentCacheFileName");
}

id objc_msgSend__persistentStoreCoordinatorWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistentStoreCoordinatorWithAssetID:");
}

id objc_msgSend__persistentStoreDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistentStoreDirectory");
}

id objc_msgSend__persistentStoreFileNameWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistentStoreFileNameWithAssetID:");
}

id objc_msgSend__persistentStoreURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_persistentStoreURL");
}

id objc_msgSend__placeholderCoverSourceForRelativeCoverFrame_inCardView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placeholderCoverSourceForRelativeCoverFrame:inCardView:");
}

id objc_msgSend__playWithRate_fadeInTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playWithRate:fadeInTime:");
}

id objc_msgSend__popCardFrontAnimatorForCardSet_cardSetViewControllerToUnfade_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popCardFrontAnimatorForCardSet:cardSetViewControllerToUnfade:duration:");
}

id objc_msgSend__populateEntry_fromImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateEntry:fromImage:");
}

id objc_msgSend__populateItem_position_withAssetResource_seriesResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateItem:position:withAssetResource:seriesResource:");
}

id objc_msgSend__populateItem_withSeriesResource_inMoc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateItem:withSeriesResource:inMoc:");
}

id objc_msgSend__predicateForCharacterCountsWithOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForCharacterCountsWithOrdinal:");
}

id objc_msgSend__predicateForImageEntriesMatchingAddedEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForImageEntriesMatchingAddedEntries:");
}

id objc_msgSend__predicateForImageSetWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForImageSetWithID:");
}

id objc_msgSend__predicateForImageSetsWithIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForImageSetsWithIDs:");
}

id objc_msgSend__predicateForTOCEntriesWithHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForTOCEntriesWithHref:");
}

id objc_msgSend__predicateForTOCEntriesWithOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForTOCEntriesWithOrdinal:");
}

id objc_msgSend__predicateForToBeDeletedImageEntriesInLevelID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateForToBeDeletedImageEntriesInLevelID:");
}

id objc_msgSend__predicateValuePairsForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateValuePairsForKey:");
}

id objc_msgSend__preferredTargetState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredTargetState");
}

id objc_msgSend__prefersCrossfade(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prefersCrossfade");
}

id objc_msgSend__preloadAdamIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preloadAdamIDs:");
}

id objc_msgSend__preloadBatch_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preloadBatch:completion:");
}

id objc_msgSend__preloadExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preloadExperience:");
}

id objc_msgSend__preloadOneBatch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preloadOneBatch");
}

id objc_msgSend__prepareCardForCardMove_isDismiss_fromFrame_toFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareCardForCardMove:isDismiss:fromFrame:toFrame:");
}

id objc_msgSend__preserveNeededCoverSourceFramesWithNewReferenceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preserveNeededCoverSourceFramesWithNewReferenceView:");
}

id objc_msgSend__process(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_process");
}

id objc_msgSend__processStateEvent_forExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processStateEvent:forExperience:");
}

id objc_msgSend__processTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processTransaction:");
}

id objc_msgSend__pruneIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pruneIfNeeded");
}

id objc_msgSend__pruneMediumIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pruneMediumIfNeeded:");
}

id objc_msgSend__purgeRecentBooksList_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_purgeRecentBooksList:completion:");
}

id objc_msgSend__pushCardBackAnimatorForCardSet_cardSetViewControllerToFade_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushCardBackAnimatorForCardSet:cardSetViewControllerToFade:duration:");
}

id objc_msgSend__pushCardsWithDataSource_focusedIndex_animated_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushCardsWithDataSource:focusedIndex:animated:presentingViewController:");
}

id objc_msgSend__pushDescribedImages_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushDescribedImages:forRequest:");
}

id objc_msgSend__q_archivedICloudDriveSyncOptedInBeforeInitialTCCSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_q_archivedICloudDriveSyncOptedInBeforeInitialTCCSync");
}

id objc_msgSend__rangeForCardMove(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rangeForCardMove");
}

id objc_msgSend__rangeForCoverMove(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rangeForCoverMove");
}

id objc_msgSend__rangeOfIndexesInRange_passingTest_aroundInnerRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rangeOfIndexesInRange:passingTest:aroundInnerRange:");
}

id objc_msgSend__readCachedImageFromPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readCachedImageFromPath:");
}

id objc_msgSend__readFromCacheForNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readFromCacheForNamespace:");
}

id objc_msgSend__readingProgressFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readingProgressFormatter");
}

id objc_msgSend__readingTimeTrackerGetAssetDetailsForAssetID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readingTimeTrackerGetAssetDetailsForAssetID:completion:");
}

id objc_msgSend__readyToCheck(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readyToCheck");
}

id objc_msgSend__recreatePersistentStoreDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recreatePersistentStoreDirectory");
}

id objc_msgSend__refetchInterestsForNewVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refetchInterestsForNewVersion:");
}

id objc_msgSend__refreshNeededCoverSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshNeededCoverSources");
}

id objc_msgSend__releaseAssertionForTaskID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_releaseAssertionForTaskID:");
}

id objc_msgSend__removeCloseBox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeCloseBox");
}

id objc_msgSend__removeFileAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeFileAtPath:");
}

id objc_msgSend__removeHighlightView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeHighlightView");
}

id objc_msgSend__removeImageEntriesForDescribedImages_inLevelID_fromSet_removedEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeImageEntriesForDescribedImages:inLevelID:fromSet:removedEntries:");
}

id objc_msgSend__removeItemFromItemsDictionaryIfReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeItemFromItemsDictionaryIfReady:");
}

id objc_msgSend__removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeObjectForKey:");
}

id objc_msgSend__removeScrollViewScrollObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeScrollViewScrollObserver:");
}

id objc_msgSend__removeSelectedBadgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeSelectedBadgeView");
}

id objc_msgSend__removeWorkingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeWorkingView");
}

id objc_msgSend__renderCompleteSource_to_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_renderCompleteSource:to:forRequest:");
}

id objc_msgSend__renderStackFromSource_images_forRequest_onQueue_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_renderStackFromSource:images:forRequest:onQueue:withCompletion:");
}

id objc_msgSend__replacementObjectForResultObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_replacementObjectForResultObject:");
}

id objc_msgSend__representativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_representativeText:");
}

id objc_msgSend__resetInteractiveAnimationWithScrollView_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetInteractiveAnimationWithScrollView:cardData:");
}

id objc_msgSend__resignActiveContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resignActiveContext");
}

id objc_msgSend__restoreGrabbedCell_toOriginalGrabIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreGrabbedCell:toOriginalGrabIndex:");
}

id objc_msgSend__resumeAndRebuildChildViewControllerAsNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resumeAndRebuildChildViewControllerAsNeeded");
}

id objc_msgSend__resumeReloads(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resumeReloads");
}

id objc_msgSend__reuseArrayForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reuseArrayForCell:");
}

id objc_msgSend__reuseArrayForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reuseArrayForIdentifier:");
}

id objc_msgSend__saveCacheSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveCacheSize:");
}

id objc_msgSend__saveChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveChanges");
}

id objc_msgSend__saveHeatMapWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveHeatMapWithCompletion:");
}

id objc_msgSend__saveIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveIfNeeded");
}

id objc_msgSend__saveToCacheNamespaceData_withNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveToCacheNamespaceData:withNamespace:");
}

id objc_msgSend__scaleForIdealValueForVerticalPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaleForIdealValueForVerticalPosition:");
}

id objc_msgSend__scaleForVerticalPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaleForVerticalPosition:");
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaledValueForValue:");
}

id objc_msgSend__scrollIndicatorInsetsForContentInset_unalteredContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollIndicatorInsetsForContentInset:unalteredContentInset:");
}

id objc_msgSend__scrollScrollViewToTopForCardViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollScrollViewToTopForCardViewController:animated:");
}

id objc_msgSend__sectionIdentifierFromAssetID_chapterID_sectionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sectionIdentifierFromAssetID:chapterID:sectionID:");
}

id objc_msgSend__selectTopScoringPairInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectTopScoringPairInArray:");
}

id objc_msgSend__selectedViewControllerInTabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectedViewControllerInTabBar");
}

id objc_msgSend__sensorAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sensorAvailable");
}

id objc_msgSend__seriesFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_seriesFilter:");
}

id objc_msgSend__seriesInfoRequestBatchSizeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_seriesInfoRequestBatchSizeWithCompletion:");
}

id objc_msgSend__setAccessibilitySupportLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAccessibilitySupportLoaded:");
}

id objc_msgSend__setAlongsideAnimationViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAlongsideAnimationViews:");
}

id objc_msgSend__setAlongsideAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAlongsideAnimations:");
}

id objc_msgSend__setAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAnimator:");
}

id objc_msgSend__setAttributedMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAttributedMessage:");
}

id objc_msgSend__setAuxContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAuxContext:");
}

id objc_msgSend__setAuxiliaryNavigationBarViewAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAuxiliaryNavigationBarViewAlpha:");
}

id objc_msgSend__setBackdropMaskViewFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBackdropMaskViewFlags:");
}

id objc_msgSend__setBackgroundHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBackgroundHidden:");
}

id objc_msgSend__setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCompletionHandler:");
}

id objc_msgSend__setContinuousCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setContinuousCornerRadius:");
}

id objc_msgSend__setCurrentState_updateStatusBarIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentState:updateStatusBarIfNeeded:");
}

id objc_msgSend__setCurrentTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentTraitCollection:");
}

id objc_msgSend__setDescribedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDescribedImage:");
}

id objc_msgSend__setFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFromViewController:");
}

id objc_msgSend__setImage_key_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setImage:key:forState:");
}

id objc_msgSend__setImageColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setImageColor:forState:");
}

id objc_msgSend__setInitiallyInteractive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setInitiallyInteractive:");
}

id objc_msgSend__setInteractiveUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setInteractiveUpdateHandler:");
}

id objc_msgSend__setInteractor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setInteractor:");
}

id objc_msgSend__setIsCurrentlyInteractive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIsCurrentlyInteractive:");
}

id objc_msgSend__setNotifiedAnalyticsVisibilityWillDisappear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setNotifiedAnalyticsVisibilityWillDisappear:");
}

id objc_msgSend__setOfRangesWithThreshold_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOfRangesWithThreshold:completion:");
}

id objc_msgSend__setOfReadRangesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOfReadRangesWithCompletion:");
}

id objc_msgSend__setPageIndexOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPageIndexOffset:");
}

id objc_msgSend__setPositionBarsExclusivelyWithSafeArea_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPositionBarsExclusivelyWithSafeArea:");
}

id objc_msgSend__setPostInteractiveCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPostInteractiveCompletionHandler:");
}

id objc_msgSend__setPreferredNavigationBarPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPreferredNavigationBarPosition:");
}

id objc_msgSend__setTextExclusionPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTextExclusionPath");
}

id objc_msgSend__setThumbnailInMutableDictionary_forKey_fromUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setThumbnailInMutableDictionary:forKey:fromUrl:");
}

id objc_msgSend__setToViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setToViewController:");
}

id objc_msgSend__setValue_updateScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setValue:updateScrollView:");
}

id objc_msgSend__setWillCompleteHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWillCompleteHandler:");
}

id objc_msgSend__setupBeforeAnimationIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupBeforeAnimationIfNeeded");
}

id objc_msgSend__setupCellAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCellAnimations");
}

id objc_msgSend__setupCommon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCommon:");
}

id objc_msgSend__setupCommonLayerProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCommonLayerProperties:");
}

id objc_msgSend__setupGridViewCommon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupGridViewCommon");
}

id objc_msgSend__setupGripperMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupGripperMenu");
}

id objc_msgSend__setupToolbarForMacCatalyst_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupToolbarForMacCatalyst:");
}

id objc_msgSend__shouldShowPromptForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowPromptForURL:");
}

id objc_msgSend__shouldUseTransactionForTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldUseTransactionForTransition");
}

id objc_msgSend__showExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showExperience:");
}

id objc_msgSend__showGrabbedCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showGrabbedCell");
}

id objc_msgSend__simplifiedVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_simplifiedVersion");
}

id objc_msgSend__slideIterateSortedArray_andArray_index1_index2_comparator_executing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_slideIterateSortedArray:andArray:index1:index2:comparator:executing:");
}

id objc_msgSend__startActivity_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startActivity:forContext:");
}

id objc_msgSend__startDecodeWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startDecodeWithData:");
}

id objc_msgSend__startDelayForExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startDelayForExperience:");
}

id objc_msgSend__startMonitoring(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startMonitoring");
}

id objc_msgSend__startNextWorkItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startNextWorkItem");
}

id objc_msgSend__state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_state");
}

id objc_msgSend__stateChangedTo_forExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stateChangedTo:forExperience:");
}

id objc_msgSend__stateForLog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stateForLog");
}

id objc_msgSend__stateToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stateToString:");
}

id objc_msgSend__statsString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_statsString");
}

id objc_msgSend__statusBarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_statusBarFrame");
}

id objc_msgSend__stopMonitoring(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopMonitoring");
}

id objc_msgSend__stopReordering_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopReordering:");
}

id objc_msgSend__stopScrollingAndZoomingAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopScrollingAndZoomingAnimations");
}

id objc_msgSend__stopTrackingAssetsToPurge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopTrackingAssetsToPurge:");
}

id objc_msgSend__storefrontIDFromStorefront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_storefrontIDFromStorefront:");
}

id objc_msgSend__stringFromState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringFromState:");
}

id objc_msgSend__stringRowsForQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stringRowsForQuery:");
}

id objc_msgSend__stylize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stylize");
}

id objc_msgSend__subtitleFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subtitleFont");
}

id objc_msgSend__subtractStep_fromStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_subtractStep:fromStep:");
}

id objc_msgSend__supportsForceTouch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_supportsForceTouch");
}

id objc_msgSend__suspendAndTeardownChildViewControllerAsNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_suspendAndTeardownChildViewControllerAsNeeded");
}

id objc_msgSend__swapGrabbedCell_withOtherCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_swapGrabbedCell:withOtherCell:");
}

id objc_msgSend__syncAssetsWithCompletionSyncVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncAssetsWithCompletionSyncVersion:");
}

id objc_msgSend__syncFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncFillColor");
}

id objc_msgSend__tableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tableView");
}

id objc_msgSend__targetViewTraitEnvironment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_targetViewTraitEnvironment");
}

id objc_msgSend__tempBookURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tempBookURL");
}

id objc_msgSend__templateFactory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_templateFactory");
}

id objc_msgSend__templatePackageURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_templatePackageURL");
}

id objc_msgSend__textNodeCFIToCharacterLengthMapForOrdinal_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textNodeCFIToCharacterLengthMapForOrdinal:error:");
}

id objc_msgSend__themeForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_themeForIdentifier:");
}

id objc_msgSend__themeNormalizedTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_themeNormalizedTraitCollection:");
}

id objc_msgSend__tintColorToUse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tintColorToUse");
}

id objc_msgSend__touchBeganAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_touchBeganAtPoint:");
}

id objc_msgSend__touchMovedAtPoint_refresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_touchMovedAtPoint:refresh:");
}

id objc_msgSend__traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_traitCollection");
}

id objc_msgSend__traitCollectionWithValue_forTraitNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_traitCollectionWithValue:forTraitNamed:");
}

id objc_msgSend__transformCompleteSource_to_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformCompleteSource:to:forRequest:");
}

id objc_msgSend__transformSourceDescribedImage_into_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformSourceDescribedImage:into:forRequest:");
}

id objc_msgSend__transitionIsInFlight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionIsInFlight");
}

id objc_msgSend__transitioningFrom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitioningFrom");
}

id objc_msgSend__transitioningTo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitioningTo");
}

id objc_msgSend__translationForTitleLabel_cardSuperview_cardCurrentFrame_cardTargetFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_translationForTitleLabel:cardSuperview:cardCurrentFrame:cardTargetFrame:");
}

id objc_msgSend__trimRange_withTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trimRange:withTest:");
}

id objc_msgSend__ubiquityCoordinatedReadMetadataForURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ubiquityCoordinatedReadMetadataForURL:options:");
}

id objc_msgSend__ubiquityMetadataForURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ubiquityMetadataForURL:options:");
}

id objc_msgSend__undeclaredTypeForColumnIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_undeclaredTypeForColumnIndex:");
}

id objc_msgSend__unhideAllCoverSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unhideAllCoverSources");
}

id objc_msgSend__unhideCardCoverSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unhideCardCoverSources");
}

id objc_msgSend__unhideCoverSourcesForCardSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unhideCoverSourcesForCardSet:");
}

id objc_msgSend__unionArray_withArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unionArray:withArray:");
}

id objc_msgSend__universalLinkFromAssetID_cfi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_universalLinkFromAssetID:cfi:");
}

id objc_msgSend__unknownKeysAddObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unknownKeysAddObject:");
}

id objc_msgSend__unknownKeysContainsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unknownKeysContainsObject:");
}

id objc_msgSend__unknownKeysRemoveObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unknownKeysRemoveObject:");
}

id objc_msgSend__updateAllowsExternalPlayback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAllowsExternalPlayback");
}

id objc_msgSend__updateAppVersionOnMOC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAppVersionOnMOC:");
}

id objc_msgSend__updateAspectRatioForImageSet_size_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAspectRatioForImageSet:size:force:");
}

id objc_msgSend__updateAssetURLHostIfNeededWithParameters_containerIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAssetURLHostIfNeededWithParameters:containerIdentifier:");
}

id objc_msgSend__updateAssetsFromCloudSyncWithAdamIDs_withAssetResources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAssetsFromCloudSyncWithAdamIDs:withAssetResources:");
}

id objc_msgSend__updateAudioParameters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateAudioParameters");
}

id objc_msgSend__updateBackgroundColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBackgroundColors");
}

id objc_msgSend__updateCardFrames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCardFrames");
}

id objc_msgSend__updateCenterImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCenterImage");
}

id objc_msgSend__updateColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateColors");
}

id objc_msgSend__updateContext_withProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContext:withProgress:");
}

id objc_msgSend__updateContext_withScore_maxScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContext:withScore:maxScore:");
}

id objc_msgSend__updateCountForCFI_value_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCountForCFI:value:operation:");
}

id objc_msgSend__updateCountForEntry_index_value_operation_allowMergeForward_allowMergeBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCountForEntry:index:value:operation:allowMergeForward:allowMergeBack:");
}

id objc_msgSend__updateCurrentChapterProgressForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCurrentChapterProgressForBook:");
}

id objc_msgSend__updateCurrentIndexIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCurrentIndexIfNeeded");
}

id objc_msgSend__updateCurrentLightLevel_force_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCurrentLightLevel:force:");
}

id objc_msgSend__updateFocusShapePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFocusShapePath");
}

id objc_msgSend__updateFramesToSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFramesToSize:");
}

id objc_msgSend__updateFromMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFromMetrics");
}

id objc_msgSend__updateGrabbedCellLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateGrabbedCellLocation:");
}

id objc_msgSend__updateHeatMapWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHeatMapWithCompletion:");
}

id objc_msgSend__updateIsOffline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateIsOffline");
}

id objc_msgSend__updateNamespace_systemDefaults_configuration_treatmentIDs_segmentIDs_segmentSetIDs_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNamespace:systemDefaults:configuration:treatmentIDs:segmentIDs:segmentSetIDs:reason:");
}

id objc_msgSend__updateParentViewBackgroundColorForToView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateParentViewBackgroundColorForToView:");
}

id objc_msgSend__updateParentViewOfCardStackBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateParentViewOfCardStackBackgroundView");
}

id objc_msgSend__updateResultLabelMaxWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateResultLabelMaxWidth");
}

id objc_msgSend__updateScrollViewContentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateScrollViewContentInset");
}

id objc_msgSend__updateSeriesChildrenWithAdamIDs_forSeries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSeriesChildrenWithAdamIDs:forSeries:");
}

id objc_msgSend__updateSeriesContainersWithSeriesIDs_withResources_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSeriesContainersWithSeriesIDs:withResources:");
}

id objc_msgSend__updateSeriesForSeriesAdamIDsWithFilteredTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSeriesForSeriesAdamIDsWithFilteredTypes:");
}

id objc_msgSend__updateSettled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSettled");
}

id objc_msgSend__updateState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateState");
}

id objc_msgSend__updateStatsAndLightLevelNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStatsAndLightLevelNow");
}

id objc_msgSend__updateStatusBarBackgroundOpacity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStatusBarBackgroundOpacity");
}

id objc_msgSend__updateStatusBarBackgroundOpacityForCardSetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStatusBarBackgroundOpacityForCardSetViewController:");
}

id objc_msgSend__updateTextAttributes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTextAttributes");
}

id objc_msgSend__updateUseCountTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateUseCountTime");
}

id objc_msgSend__updateVendedImageInterest_withDescribedImage_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateVendedImageInterest:withDescribedImage:forRequest:");
}

id objc_msgSend__updateViewController_scrollView_withContentInset_unalteredContentInset_contentInsetForScrollIndicatorInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewController:scrollView:withContentInset:unalteredContentInset:contentInsetForScrollIndicatorInsets:");
}

id objc_msgSend__updateViewController_withContentInset_unalteredContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewController:withContentInset:unalteredContentInset:");
}

id objc_msgSend__useWideRadiusRoundedCorners(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_useWideRadiusRoundedCorners");
}

id objc_msgSend__userClosedExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userClosedExperience:");
}

id objc_msgSend__userVisibleWebKitVersionString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_userVisibleWebKitVersionString");
}

id objc_msgSend__validateWithSheetInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_validateWithSheetInfo:");
}

id objc_msgSend__valueForKey_fromNamespaceData_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_valueForKey:fromNamespaceData:source:");
}

id objc_msgSend__valueForQueryItemWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_valueForQueryItemWithName:");
}

id objc_msgSend__viewControllerClassesToIgnore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewControllerClassesToIgnore");
}

id objc_msgSend__viewDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewDelegate");
}

id objc_msgSend__viewport(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewport");
}

id objc_msgSend__waitAndCleanupDispatchGroup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_waitAndCleanupDispatchGroup");
}

id objc_msgSend__wantsComputedColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_wantsComputedColors");
}

id objc_msgSend__widgetIdentifierFromAssetID_parentID_widgetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_widgetIdentifierFromAssetID:parentID:widgetID:");
}

id objc_msgSend__willEvict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_willEvict:");
}

id objc_msgSend__writeCachedImage_unprocessed_toRelativePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeCachedImage:unprocessed:toRelativePath:");
}

id objc_msgSend__xPositionFromPercentage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_xPositionFromPercentage:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_accessibilityCardContentSummary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityCardContentSummary");
}

id objc_msgSend_accessibilityContrast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityContrast");
}

id objc_msgSend_accessibilityDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityDelegate");
}

id objc_msgSend_accessibilityDidActivateGripperView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityDidActivateGripperView:");
}

id objc_msgSend_accessibilityDismissCardSetView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityDismissCardSetView:");
}

id objc_msgSend_accessibilityElementAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityElementAtIndex:");
}

id objc_msgSend_accessibilityElementCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityElementCount");
}

id objc_msgSend_accessibilityLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityLabel");
}

id objc_msgSend_accessibilityScrollStatusForWideTouchScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityScrollStatusForWideTouchScrollView:");
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityTraits");
}

id objc_msgSend_accessibilityVisibleContentInsetForCardViewControllerScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityVisibleContentInsetForCardViewControllerScrollView:");
}

id objc_msgSend_accessibleMailLikeDescriptionFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibleMailLikeDescriptionFromDate:");
}

id objc_msgSend_accountID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accountID");
}

id objc_msgSend_acknowledgeAnnotationProvider_willMergeAnnotationsWithAssertVersionMismatch_assetID_assetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acknowledgeAnnotationProvider:willMergeAnnotationsWithAssertVersionMismatch:assetID:assetURL:");
}

id objc_msgSend_acknowledgeMergingAnnotationsWithAssetVersionMismatch_assetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acknowledgeMergingAnnotationsWithAssetVersionMismatch:assetID:");
}

id objc_msgSend_acknowledgeMergingAnnotationsWithAssetVersionMismatch_assetID_provider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acknowledgeMergingAnnotationsWithAssetVersionMismatch:assetID:provider:");
}

id objc_msgSend_acknowledgedMismatchingAssetIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "acknowledgedMismatchingAssetIDs");
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "action");
}

id objc_msgSend_actionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionBlock");
}

id objc_msgSend_actionProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionProvider");
}

id objc_msgSend_actionTextForType_withAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionTextForType:withAsset:");
}

id objc_msgSend_actionTextWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionTextWithType:");
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:image:identifier:handler:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_actions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actions");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activationState");
}

id objc_msgSend_activeChapters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeChapters");
}

id objc_msgSend_activeContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeContext");
}

id objc_msgSend_activeSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeSections");
}

id objc_msgSend_activeStoreAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeStoreAccount");
}

id objc_msgSend_activeTrackingProviders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeTrackingProviders");
}

id objc_msgSend_activeTransaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeTransaction");
}

id objc_msgSend_activeWidgets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeWidgets");
}

id objc_msgSend_activityItemProviderSourceWithAnnotations_propertySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityItemProviderSourceWithAnnotations:propertySource:");
}

id objc_msgSend_activityItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityItems");
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityType");
}

id objc_msgSend_activityTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityTypes");
}

id objc_msgSend_activityVC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityVC");
}

id objc_msgSend_activityViewController_itemForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityViewController:itemForActivityType:");
}

id objc_msgSend_actualAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actualAspectRatio");
}

id objc_msgSend_adamID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adamID");
}

id objc_msgSend_adamIDStringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adamIDStringValue");
}

id objc_msgSend_adamIDsToPreload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adamIDsToPreload");
}

id objc_msgSend_adamId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adamId");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addAdditionalActivityItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAdditionalActivityItem:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimations:");
}

id objc_msgSend_addAnimations_delayFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimations:delayFactor:");
}

id objc_msgSend_addArcWithCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArcWithCenter:radius:startAngle:endAngle:clockwise:");
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttribute:value:range:");
}

id objc_msgSend_addAttributes_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttributes:range:");
}

id objc_msgSend_addBoundaryTimeObserverForTimes_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBoundaryTimeObserverForTimes:queue:usingBlock:");
}

id objc_msgSend_addCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCFI:");
}

id objc_msgSend_addCFI_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCFI:count:");
}

id objc_msgSend_addCFIString_count_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCFIString:count:error:");
}

id objc_msgSend_addCFIString_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCFIString:error:");
}

id objc_msgSend_addCharactersInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCharactersInRange:");
}

id objc_msgSend_addChildContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildContext:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addClip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClip");
}

id objc_msgSend_addCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCompletion:");
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraints:");
}

id objc_msgSend_addDescribedImages_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDescribedImages:forRequest:completion:");
}

id objc_msgSend_addDocument_withIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDocument:withIdentifier:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntry:");
}

id objc_msgSend_addExtraSafeCategoryNamesToCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExtraSafeCategoryNamesToCollection:");
}

id objc_msgSend_addFilter_withIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFilter:withIdentifier:");
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFinishBlock:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addHighlight_forData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHighlight:forData:");
}

id objc_msgSend_addImageEntriesForDescribedImages_inLevelID_addedEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addImageEntriesForDescribedImages:inLevelID:addedEntries:");
}

id objc_msgSend_addImageFromURL_key_size_completionBlock_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addImageFromURL:key:size:completionBlock:queue:");
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndex:");
}

id objc_msgSend_addIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndexes:");
}

id objc_msgSend_addInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInteraction:");
}

id objc_msgSend_addKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addKey:");
}

id objc_msgSend_addKeyframeWithRelativeStartTime_relativeDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addKeyframeWithRelativeStartTime:relativeDuration:animations:");
}

id objc_msgSend_addLayoutManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLayoutManager:");
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLineToPoint:");
}

id objc_msgSend_addNewImageEntryToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNewImageEntryToSet:");
}

id objc_msgSend_addNewImageSetWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNewImageSetWithIdentifier:");
}

id objc_msgSend_addNoteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addNoteButton");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:forKey:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:recordType:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserverForName:object:queue:usingBlock:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addOperations_waitUntilFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperations:waitUntilFinished:");
}

id objc_msgSend_addPeriodicTimeObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPeriodicTimeObserver");
}

id objc_msgSend_addPeriodicTimeObserverForInterval_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPeriodicTimeObserverForInterval:queue:usingBlock:");
}

id objc_msgSend_addPersistentStoreToPersistentStoreCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPersistentStoreToPersistentStoreCoordinator:");
}

id objc_msgSend_addPersistentStoreToPersistentStoreCoordinator_withType_configuration_URL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPersistentStoreToPersistentStoreCoordinator:withType:configuration:URL:options:");
}

id objc_msgSend_addPersistentStoreWithType_configuration_URL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPersistentStoreWithType:configuration:URL:options:error:");
}

id objc_msgSend_addPlugin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPlugin:");
}

id objc_msgSend_addPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPointer:");
}

id objc_msgSend_addProgressRangeFromStart_toEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addProgressRangeFromStart:toEnd:");
}

id objc_msgSend_addProgressReportingCapabilities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addProgressReportingCapabilities:");
}

id objc_msgSend_addReadCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addReadCFI:");
}

id objc_msgSend_addSafeCategoryNamesToCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSafeCategoryNamesToCollection:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSublayer:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addSymbolsToMetricsEnvironment_package_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSymbolsToMetricsEnvironment:package:");
}

id objc_msgSend_addTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTextContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTextContainer:");
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTimer:forMode:");
}

id objc_msgSend_addToCounter_amount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addToCounter:amount:");
}

id objc_msgSend_addTocEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTocEntry:");
}

id objc_msgSend_addTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTransition:");
}

id objc_msgSend_addValue_predicate_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addValue:predicate:forKey:");
}

id objc_msgSend_addWorkItemWithPriority_description_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addWorkItemWithPriority:description:block:");
}

id objc_msgSend_addedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addedObjects");
}

id objc_msgSend_additionalAccessibilityElementsForCardSetView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalAccessibilityElementsForCardSetView");
}

id objc_msgSend_additionalSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalSafeAreaInsets");
}

id objc_msgSend_adjustScrollView_newContentOffset_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustScrollView:newContentOffset:cardData:");
}

id objc_msgSend_adjustedContentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustedContentInset");
}

id objc_msgSend_adjustedLeadingForFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustedLeadingForFont:");
}

id objc_msgSend_aeAnnotationDictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aeAnnotationDictionaryRepresentation");
}

id objc_msgSend_ae_occurrenceCountOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ae_occurrenceCountOfString:");
}

id objc_msgSend_afterAllStoreOperationsCompletedPerformBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterAllStoreOperationsCompletedPerformBlock:");
}

id objc_msgSend_afterScreenUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterScreenUpdates");
}

id objc_msgSend_aggregateIdentifierFromAssetID_assetURL_contentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aggregateIdentifierFromAssetID:assetURL:contentType:");
}

id objc_msgSend_airplayActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airplayActive");
}

id objc_msgSend_airplayVideoActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "airplayVideoActive");
}

id objc_msgSend_al_totalWorkItemsRun(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "al_totalWorkItemsRun");
}

id objc_msgSend_al_workItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "al_workItems");
}

id objc_msgSend_al_workingOnItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "al_workingOnItems");
}

id objc_msgSend_alertController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertController");
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_alignmentRectForFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignmentRectForFrame:");
}

id objc_msgSend_alignmentRectInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alignmentRectInsets");
}

id objc_msgSend_allCFICounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allCFICounts");
}

id objc_msgSend_allCFIStringCounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allCFIStringCounts");
}

id objc_msgSend_allCFIStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allCFIStrings");
}

id objc_msgSend_allCFIs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allCFIs");
}

id objc_msgSend_allIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allIdentifiers");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeys");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allSeriesContainerIdsInManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSeriesContainerIdsInManagedObjectContext:");
}

id objc_msgSend_allSeriesItemAdamIdsInManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSeriesItemAdamIdsInManagedObjectContext:");
}

id objc_msgSend_allSeriesItemsForAdamIDs_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSeriesItemsForAdamIDs:inManagedObjectContext:");
}

id objc_msgSend_allSeriesItemsInSeries_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allSeriesItemsInSeries:inManagedObjectContext:");
}

id objc_msgSend_allTouches(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allTouches");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allValues");
}

id objc_msgSend_alloc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alloc");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alpha");
}

id objc_msgSend_alternateRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alternateRequest");
}

id objc_msgSend_alwaysNotifyOnSubscribe(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alwaysNotifyOnSubscribe");
}

id objc_msgSend_alwaysPresentNewCardSetForFeedOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alwaysPresentNewCardSetForFeedOptions:");
}

id objc_msgSend_ams_storefront(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_storefront");
}

id objc_msgSend_anchorAuxiliaryNavigationBarView_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anchorAuxiliaryNavigationBarView:toView:");
}

id objc_msgSend_anchorGripperView_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anchorGripperView:toView:");
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_animatableCopyView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatableCopyView");
}

id objc_msgSend_animate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animate:");
}

id objc_msgSend_animate_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animate:afterDelay:");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateDeletionOfCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateDeletionOfCell:");
}

id objc_msgSend_animateDismissCancellationWithVelocity_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateDismissCancellationWithVelocity:completion:");
}

id objc_msgSend_animateKeyframesWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateKeyframesWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animateTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateTransition:");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animated");
}

id objc_msgSend_animatesInInnerContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatesInInnerContainerView");
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animation");
}

id objc_msgSend_animationCompletedAtPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationCompletedAtPosition:");
}

id objc_msgSend_animationCompletedExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationCompletedExpanded:");
}

id objc_msgSend_animationCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationCount");
}

id objc_msgSend_animationDidEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationDidEnd");
}

id objc_msgSend_animationEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationEnded:");
}

id objc_msgSend_animationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationForKey:");
}

id objc_msgSend_animationStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationStarted:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_animations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animations");
}

id objc_msgSend_animationsBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationsBlock");
}

id objc_msgSend_animationsFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationsFinished");
}

id objc_msgSend_animator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animator");
}

id objc_msgSend_animatorForExpandingTransformingView_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatorForExpandingTransformingView:duration:");
}

id objc_msgSend_animatorForInteractiveDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatorForInteractiveDismiss");
}

id objc_msgSend_animatorForUnexpandingTransformingView_timingParameter_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatorForUnexpandingTransformingView:timingParameter:duration:");
}

id objc_msgSend_animatorInitialized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatorInitialized");
}

id objc_msgSend_animators(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animators");
}

id objc_msgSend_annotatedAttributedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotatedAttributedString");
}

id objc_msgSend_annotatedAttributedStringForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotatedAttributedStringForAnnotation:");
}

id objc_msgSend_annotatedAttributedStringForAnnotation_withPossibleLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotatedAttributedStringForAnnotation:withPossibleLength:");
}

id objc_msgSend_annotatedAttributedStringWithString_annotationStyle_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotatedAttributedStringWithString:annotationStyle:range:");
}

id objc_msgSend_annotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotation");
}

id objc_msgSend_annotationAssetID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationAssetID");
}

id objc_msgSend_annotationAssetIDFromDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationAssetIDFromDictionaryRepresentation:");
}

id objc_msgSend_annotationBlendMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationBlendMode");
}

id objc_msgSend_annotationCreationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationCreationDate");
}

id objc_msgSend_annotationCreatorIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationCreatorIdentifier");
}

id objc_msgSend_annotationCreatorIdentifierFromDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationCreatorIdentifierFromDictionaryRepresentation:");
}

id objc_msgSend_annotationHasNote(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationHasNote");
}

id objc_msgSend_annotationIsUnderline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationIsUnderline");
}

id objc_msgSend_annotationLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationLocation");
}

id objc_msgSend_annotationModificationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationModificationDate");
}

id objc_msgSend_annotationNote(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationNote");
}

id objc_msgSend_annotationPageTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationPageTheme");
}

id objc_msgSend_annotationProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationProvider");
}

id objc_msgSend_annotationProvider_acknowledgeMergingAnnotationsWithAssetVersionMismatch_assetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationProvider:acknowledgeMergingAnnotationsWithAssetVersionMismatch:assetID:");
}

id objc_msgSend_annotationProviderWithCoordination_forAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationProviderWithCoordination:forAssetID:");
}

id objc_msgSend_annotationRepresentativeText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationRepresentativeText");
}

id objc_msgSend_annotationSelectedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationSelectedText");
}

id objc_msgSend_annotationSelectedTextRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationSelectedTextRange");
}

id objc_msgSend_annotationSerializationManagerWithBookMetadataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationSerializationManagerWithBookMetadataProvider:");
}

id objc_msgSend_annotationStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationStyle");
}

id objc_msgSend_annotationStyleFromBookmarkColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationStyleFromBookmarkColor:");
}

id objc_msgSend_annotationTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationTheme");
}

id objc_msgSend_annotationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationType");
}

id objc_msgSend_annotationTypeFromBookmarkType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationTypeFromBookmarkType:");
}

id objc_msgSend_annotationTypeFromDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationTypeFromDictionaryRepresentation:");
}

id objc_msgSend_annotationUuid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationUuid");
}

id objc_msgSend_annotationUuidFromDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationUuidFromDictionaryRepresentation:");
}

id objc_msgSend_annotationUuidsFromDictionaryRepresentations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationUuidsFromDictionaryRepresentations:");
}

id objc_msgSend_annotationVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationVersion");
}

id objc_msgSend_annotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotations");
}

id objc_msgSend_annotationsBody(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationsBody");
}

id objc_msgSend_annotationsForAssetID_includingDeleted_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationsForAssetID:includingDeleted:inManagedObjectContext:");
}

id objc_msgSend_annotationsForPredicate_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationsForPredicate:inManagedObjectContext:");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyObject");
}

id objc_msgSend_appVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appVersion");
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendAttributedString:");
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendNewDataToExistingDataSource_cardStackViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendNewDataToExistingDataSource:cardStackViewController:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_applicationActivities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationActivities");
}

id objc_msgSend_applicationCacheDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationCacheDirectory");
}

id objc_msgSend_applicationConfigurationDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationConfigurationDirectory");
}

id objc_msgSend_applicationDocumentsDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationDocumentsDirectory");
}

id objc_msgSend_applicationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationState");
}

id objc_msgSend_applyLabelFonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyLabelFonts");
}

id objc_msgSend_archivedCloudDriveOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedCloudDriveOptedIn");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_archivedICloudDriveSyncOptedInBeforeInitialTCCSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedICloudDriveSyncOptedInBeforeInitialTCCSync");
}

id objc_msgSend_areAnimationsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areAnimationsEnabled");
}

id objc_msgSend_areCitationAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areCitationAllowed");
}

id objc_msgSend_areCitationsAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areCitationsAllowed");
}

id objc_msgSend_arrangeObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrangeObjects:");
}

id objc_msgSend_arrangeVisibleCells_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrangeVisibleCells:");
}

id objc_msgSend_arrangedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrangedObjects");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObjectsFromArray:");
}

id objc_msgSend_arrayForQuery_arguments_rawRows_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayForQuery:arguments:rawRows:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_arrowX(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrowX");
}

id objc_msgSend_artistName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artistName");
}

id objc_msgSend_artworkURLString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "artworkURLString");
}

id objc_msgSend_asJSON(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "asJSON");
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "asset");
}

id objc_msgSend_assetAnnotationManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetAnnotationManager");
}

id objc_msgSend_assetCover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetCover");
}

id objc_msgSend_assetID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetID");
}

id objc_msgSend_assetIDsAndOptionsForBooksInSeries_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetIDsAndOptionsForBooksInSeries:completion:");
}

id objc_msgSend_assetIDsOfAssetsToSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetIDsOfAssetsToSync");
}

id objc_msgSend_assetIDsOfAssetsToSyncQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetIDsOfAssetsToSyncQueue");
}

id objc_msgSend_assetImageGeneratorWithAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetImageGeneratorWithAsset:");
}

id objc_msgSend_assetIsHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetIsHidden");
}

id objc_msgSend_assetType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetType");
}

id objc_msgSend_assetTypeString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetTypeString");
}

id objc_msgSend_assetURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetURL");
}

id objc_msgSend_assetURLForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetURLForAssetID:");
}

id objc_msgSend_assetVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetVersion");
}

id objc_msgSend_assetWithID_updatedAnnotations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetWithID:updatedAnnotations:completion:");
}

id objc_msgSend_assets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assets");
}

id objc_msgSend_associatedAssetType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "associatedAssetType");
}

id objc_msgSend_attachAuxiliaryNavigationBarViewAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachAuxiliaryNavigationBarViewAnimated:");
}

id objc_msgSend_attachments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attachments");
}

id objc_msgSend_attemptRotateToPortraitWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptRotateToPortraitWithCompletion:");
}

id objc_msgSend_attemptRotationToDeviceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptRotationToDeviceOrientation");
}

id objc_msgSend_attributeType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributeType");
}

id objc_msgSend_attributedSubstringFromRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedSubstringFromRange:");
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedText");
}

id objc_msgSend_attributedTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedTitle");
}

id objc_msgSend_attributesAtIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesAtIndex:effectiveRange:");
}

id objc_msgSend_attributesByName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesByName");
}

id objc_msgSend_attributesOfFileSystemForPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfFileSystemForPath:error:");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_audioMix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioMix");
}

id objc_msgSend_audioMixInputParametersWithTrack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioMixInputParametersWithTrack:");
}

id objc_msgSend_audioPlaybackWillStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioPlaybackWillStart:");
}

id objc_msgSend_augmentedExperiences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "augmentedExperiences");
}

id objc_msgSend_author(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "author");
}

id objc_msgSend_authorCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorCount");
}

id objc_msgSend_authorNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorNames");
}

id objc_msgSend_autoExpand(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoExpand");
}

id objc_msgSend_autoresizingMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoresizingMask");
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoupdatingCurrentLocale");
}

id objc_msgSend_auxiliaryNavigationBarDismissPanGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarDismissPanGestureRecognizer");
}

id objc_msgSend_auxiliaryNavigationBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarHeight");
}

id objc_msgSend_auxiliaryNavigationBarHorizontalInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarHorizontalInset");
}

id objc_msgSend_auxiliaryNavigationBarTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarTopConstraint");
}

id objc_msgSend_auxiliaryNavigationBarVerticalInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarVerticalInset");
}

id objc_msgSend_auxiliaryNavigationBarView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarView");
}

id objc_msgSend_auxiliaryNavigationBarViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarViewController");
}

id objc_msgSend_auxiliaryNavigationBarViewControllerWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarViewControllerWithCompletionHandler:");
}

id objc_msgSend_auxiliaryNavigationBarViewForAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "auxiliaryNavigationBarViewForAnimation");
}

id objc_msgSend_availableContextIndexes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "availableContextIndexes");
}

id objc_msgSend_avoidSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "avoidSync");
}

id objc_msgSend_ba_analyticsController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_analyticsController");
}

id objc_msgSend_ba_analyticsTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_analyticsTracker");
}

id objc_msgSend_ba_effectiveAnalyticsTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_effectiveAnalyticsTracker");
}

id objc_msgSend_ba_effectiveViewControllerForAnalyticsTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_effectiveViewControllerForAnalyticsTracking");
}

id objc_msgSend_ba_effectiveViewControllerForEngagementProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_effectiveViewControllerForEngagementProvider");
}

id objc_msgSend_ba_overrideParentAnalyticsTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_overrideParentAnalyticsTracker");
}

id objc_msgSend_ba_setAnalyticsTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_setAnalyticsTracker:");
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "background");
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColor");
}

id objc_msgSend_backgroundColorForTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColorForTraitCollection:");
}

id objc_msgSend_backgroundColorForTraitEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColorForTraitEnvironment:");
}

id objc_msgSend_backgroundContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundContext");
}

id objc_msgSend_backgroundControllerForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundControllerForViewController:");
}

id objc_msgSend_backgroundFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundFillColor");
}

id objc_msgSend_backgroundForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundForSize:");
}

id objc_msgSend_backgroundImageForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundImageForState:");
}

id objc_msgSend_backgroundSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundSafeAreaInsets");
}

id objc_msgSend_backgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundView");
}

id objc_msgSend_badgeLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeLabel");
}

id objc_msgSend_badgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "badgeView");
}

id objc_msgSend_bar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bar");
}

id objc_msgSend_barTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "barTintColor");
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_batchFetchCoverURLsFor_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchFetchCoverURLsFor:completion:");
}

id objc_msgSend_bc_ARGBHexValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_ARGBHexValue");
}

id objc_msgSend_bc_accessibilityFontSizesEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_accessibilityFontSizesEnabled");
}

id objc_msgSend_bc_allAPITraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_allAPITraits");
}

id objc_msgSend_bc_alwaysUseCoverTransitionForCardPresenting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_alwaysUseCoverTransitionForCardPresenting");
}

id objc_msgSend_bc_analyticsForceEndSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsForceEndSession");
}

id objc_msgSend_bc_analyticsSubtreeForceEndSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsSubtreeForceEndSession");
}

id objc_msgSend_bc_analyticsVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibility");
}

id objc_msgSend_bc_analyticsVisibilityIsObscuredWhenPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilityIsObscuredWhenPresented");
}

id objc_msgSend_bc_analyticsVisibilityIsObscuredWhenSubtreePresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilityIsObscuredWhenSubtreePresented");
}

id objc_msgSend_bc_analyticsVisibilityOfChild_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilityOfChild:");
}

id objc_msgSend_bc_analyticsVisibilityOfSelf(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilityOfSelf");
}

id objc_msgSend_bc_analyticsVisibilitySubtreeDidDisappear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilitySubtreeDidDisappear");
}

id objc_msgSend_bc_analyticsVisibilitySubtreeWillDisappear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilitySubtreeWillDisappear");
}

id objc_msgSend_bc_analyticsVisibilityUpdateSubtree(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilityUpdateSubtree");
}

id objc_msgSend_bc_analyticsVisibilityWillDisappear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilityWillDisappear");
}

id objc_msgSend_bc_ancestorFullScreenPresentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_ancestorFullScreenPresentingViewController");
}

id objc_msgSend_bc_ancestorOverrideCardPresentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_ancestorOverrideCardPresentingViewController");
}

id objc_msgSend_bc_ancestorViewControllerOfClass_allowPresentingParent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_ancestorViewControllerOfClass:allowPresentingParent:");
}

id objc_msgSend_bc_assertClampedToUnitInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_assertClampedToUnitInterval");
}

id objc_msgSend_bc_booksAXSeparatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksAXSeparatorColor");
}

id objc_msgSend_bc_booksBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksBackground");
}

id objc_msgSend_bc_booksBlack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksBlack");
}

id objc_msgSend_bc_booksBlue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksBlue");
}

id objc_msgSend_bc_booksBrickBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksBrickBackground");
}

id objc_msgSend_bc_booksChevronColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksChevronColor");
}

id objc_msgSend_bc_booksCyan(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksCyan");
}

id objc_msgSend_bc_booksGray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksGray");
}

id objc_msgSend_bc_booksGreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksGreen");
}

id objc_msgSend_bc_booksGroupedBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksGroupedBackground");
}

id objc_msgSend_bc_booksIconBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksIconBackgroundColor");
}

id objc_msgSend_bc_booksKeyColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksKeyColor");
}

id objc_msgSend_bc_booksLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksLabelColor");
}

id objc_msgSend_bc_booksMagenta(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksMagenta");
}

id objc_msgSend_bc_booksNestedIconGlyphColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksNestedIconGlyphColor");
}

id objc_msgSend_bc_booksOrange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksOrange");
}

id objc_msgSend_bc_booksPurple(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksPurple");
}

id objc_msgSend_bc_booksQuaternaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksQuaternaryLabelColor");
}

id objc_msgSend_bc_booksRed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksRed");
}

id objc_msgSend_bc_booksSecondaryBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksSecondaryBackground");
}

id objc_msgSend_bc_booksSecondaryGroupedBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksSecondaryGroupedBackground");
}

id objc_msgSend_bc_booksSecondaryIconBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksSecondaryIconBackgroundColor");
}

id objc_msgSend_bc_booksSecondaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksSecondaryLabelColor");
}

id objc_msgSend_bc_booksSeparatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksSeparatorColor");
}

id objc_msgSend_bc_booksTableSelectionColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksTableSelectionColor");
}

id objc_msgSend_bc_booksTertiaryBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksTertiaryBackground");
}

id objc_msgSend_bc_booksTertiaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksTertiaryLabelColor");
}

id objc_msgSend_bc_booksWhite(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksWhite");
}

id objc_msgSend_bc_booksWidgetBackgroundOverlayBottom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksWidgetBackgroundOverlayBottom");
}

id objc_msgSend_bc_booksWidgetBackgroundOverlayTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksWidgetBackgroundOverlayTop");
}

id objc_msgSend_bc_BOOLFromResourceValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_BOOLFromResourceValue:");
}

id objc_msgSend_bc_canCloseAsset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_canCloseAsset");
}

id objc_msgSend_bc_changeTypeToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_changeTypeToString:");
}

id objc_msgSend_bc_childCardPresentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_childCardPresentingViewController");
}

id objc_msgSend_bc_childPresentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_childPresentedViewController");
}

id objc_msgSend_bc_childViewControllerForNavBarVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_childViewControllerForNavBarVisibility");
}

id objc_msgSend_bc_childViewControllersForProtocolConformance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_childViewControllersForProtocolConformance");
}

id objc_msgSend_bc_clampedToMinimum_maximum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_clampedToMinimum:maximum:");
}

id objc_msgSend_bc_clampedToUnitIntervalOrNegativeOne(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_clampedToUnitIntervalOrNegativeOne");
}

id objc_msgSend_bc_closeAssetWithCardStackViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_closeAssetWithCardStackViewController:completion:");
}

id objc_msgSend_bc_closeToAssetWithCardStackViewController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_closeToAssetWithCardStackViewController:completion:");
}

id objc_msgSend_bc_colorWithARGBHexValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_colorWithARGBHexValue:");
}

id objc_msgSend_bc_colorWithSRGBDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_colorWithSRGBDescription:");
}

id objc_msgSend_bc_commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_commonInit");
}

id objc_msgSend_bc_contentSizeCategoryIsGreaterThan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_contentSizeCategoryIsGreaterThan:");
}

id objc_msgSend_bc_contextualPresentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_contextualPresentingViewController");
}

id objc_msgSend_bc_darkenedColorByFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_darkenedColorByFactor:");
}

id objc_msgSend_bc_deepestPresentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_deepestPresentedViewController");
}

id objc_msgSend_bc_deepestVisibleChildViewControllerIncludePresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_deepestVisibleChildViewControllerIncludePresented:");
}

id objc_msgSend_bc_defaultPortraitStatusBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_defaultPortraitStatusBarHeight");
}

id objc_msgSend_bc_dismissCardViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_dismissCardViewController:animated:completion:");
}

id objc_msgSend_bc_dismissIfSafeAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_dismissIfSafeAnimated:");
}

id objc_msgSend_bc_dynamicColorWithLightColor_darkColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_dynamicColorWithLightColor:darkColor:");
}

id objc_msgSend_bc_effectiveAncestorOverrideCardPresentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_effectiveAncestorOverrideCardPresentingViewController");
}

id objc_msgSend_bc_effectiveCardPresentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_effectiveCardPresentingViewController");
}

id objc_msgSend_bc_effectiveViewControllerForNavBarVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_effectiveViewControllerForNavBarVisibility");
}

id objc_msgSend_bc_engagementProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_engagementProvider");
}

id objc_msgSend_bc_engagementProviderSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_engagementProviderSource");
}

id objc_msgSend_bc_environmentDidChangeFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_environmentDidChangeFont");
}

id objc_msgSend_bc_firstVisibleChildViewControllerOfClass_includePresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_firstVisibleChildViewControllerOfClass:includePresented:");
}

id objc_msgSend_bc_getManagedObjectsWith_entityName_inserted_updated_tombstones_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_getManagedObjectsWith:entityName:inserted:updated:tombstones:");
}

id objc_msgSend_bc_hasLegacyBookStoreScheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_hasLegacyBookStoreScheme");
}

id objc_msgSend_bc_hasMatchInRegexPatterns_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_hasMatchInRegexPatterns:");
}

id objc_msgSend_bc_isDownloadedWithResourceValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_isDownloadedWithResourceValue:");
}

id objc_msgSend_bc_isPresentedInCardViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_isPresentedInCardViewController");
}

id objc_msgSend_bc_isUbiquitous(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_isUbiquitous");
}

id objc_msgSend_bc_isUbiquitousPromise(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_isUbiquitousPromise");
}

id objc_msgSend_bc_isUbiquitousPromiseFromResourceDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_isUbiquitousPromiseFromResourceDictionary:");
}

id objc_msgSend_bc_item(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_item");
}

id objc_msgSend_bc_logChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_logChanges");
}

id objc_msgSend_bc_navBarSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_navBarSnapshot");
}

id objc_msgSend_bc_navBarVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_navBarVisible");
}

id objc_msgSend_bc_notifyLightLevelDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_notifyLightLevelDidChange:");
}

id objc_msgSend_bc_overrideAncestorViewControllerForNavBarVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_overrideAncestorViewControllerForNavBarVisibility");
}

id objc_msgSend_bc_presentCardViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_presentCardViewController:animated:completion:");
}

id objc_msgSend_bc_redactedCFIString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_redactedCFIString");
}

id objc_msgSend_bc_request(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_request");
}

id objc_msgSend_bc_setNavBarVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_setNavBarVisible:");
}

id objc_msgSend_bc_setPreferredTabBarScrollEdgeAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_setPreferredTabBarScrollEdgeAppearance:");
}

id objc_msgSend_bc_startImpressionEventTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_startImpressionEventTracking");
}

id objc_msgSend_bc_stringForReturnToRootBarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_stringForReturnToRootBarItem");
}

id objc_msgSend_bc_submitImpressionEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_submitImpressionEvent");
}

id objc_msgSend_bc_swiftUIDefault(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_swiftUIDefault");
}

id objc_msgSend_bc_updateNavBarVisibleWithTransitionCoordinator_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_updateNavBarVisibleWithTransitionCoordinator:duration:");
}

id objc_msgSend_bc_userInterfaceStyleDark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_userInterfaceStyleDark");
}

id objc_msgSend_bc_windowForViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_windowForViewController");
}

id objc_msgSend_becomeActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeActive");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "begin");
}

id objc_msgSend_beginAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginAnimation");
}

id objc_msgSend_beginAppearanceTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginAppearanceTransition");
}

id objc_msgSend_beginAppearanceTransition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginAppearanceTransition:animated:");
}

id objc_msgSend_beginBackgroundTaskWithName_expirationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginBackgroundTaskWithName:expirationHandler:");
}

id objc_msgSend_beginEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginEditing");
}

id objc_msgSend_beginTracking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginTracking:");
}

id objc_msgSend_beginTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginTransition");
}

id objc_msgSend_beginTransitionUpdateModeForCardsAtRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginTransitionUpdateModeForCardsAtRange:");
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginUpdates");
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPath");
}

id objc_msgSend_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:");
}

id objc_msgSend_bezierPathWithCGPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithCGPath:");
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithOvalInRect:");
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRect:");
}

id objc_msgSend_bezierPathWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRoundedRect:cornerRadius:");
}

id objc_msgSend_bkBookmarkDeserializeLocationDataFromDictionary_trustedSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkBookmarkDeserializeLocationDataFromDictionary:trustedSource:");
}

id objc_msgSend_bk_extraWidthNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bk_extraWidthNeeded");
}

id objc_msgSend_bk_traitCollectionWithReadingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bk_traitCollectionWithReadingMode:");
}

id objc_msgSend_bkaxAdjustedDarkerForIncreaseContrast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxAdjustedDarkerForIncreaseContrast");
}

id objc_msgSend_bkaxAdjustedForIncreaseContrastAdjustingDarker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxAdjustedForIncreaseContrastAdjustingDarker:");
}

id objc_msgSend_bkspi_destroyPersistentStoreAtURL_withType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkspi_destroyPersistentStoreAtURL:withType:error:");
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blackColor");
}

id objc_msgSend_blackScrimView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blackScrimView");
}

id objc_msgSend_blankImages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blankImages");
}

id objc_msgSend_block(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "block");
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_blocksToProcess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blocksToProcess");
}

id objc_msgSend_blueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blueColor");
}

id objc_msgSend_blueTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blueTheme:");
}

id objc_msgSend_blurView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blurView");
}

id objc_msgSend_boldColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldColor");
}

id objc_msgSend_boldRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldRange");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_bookAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookAnnotations");
}

id objc_msgSend_bookCoverEffectFilters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookCoverEffectFilters");
}

id objc_msgSend_bookDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookDescription");
}

id objc_msgSend_bookInfoHTMLForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookInfoHTMLForStoreId:dataSource:");
}

id objc_msgSend_bookInfoSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookInfoSection");
}

id objc_msgSend_bookMetadataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookMetadataProvider");
}

id objc_msgSend_bookPositionAccessibilityLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookPositionAccessibilityLabel");
}

id objc_msgSend_bookPositionAccessibilityValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookPositionAccessibilityValue");
}

id objc_msgSend_bookPromotionTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookPromotionTimer");
}

id objc_msgSend_bookStatisticsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookStatisticsWithCompletion:");
}

id objc_msgSend_bookTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookTitle");
}

id objc_msgSend_bookTitleSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookTitleSection");
}

id objc_msgSend_bookURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookURL");
}

id objc_msgSend_bookVersionString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookVersionString");
}

id objc_msgSend_bookVersionStringForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookVersionStringForAssetID:");
}

id objc_msgSend_bookmarkColorFromAnnotationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkColorFromAnnotationStyle:");
}

id objc_msgSend_bookmarkTypeFromAnnotationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkTypeFromAnnotationType:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_borderColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "borderColor");
}

id objc_msgSend_borderWidthForScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "borderWidthForScale:");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_bottomCardWasExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomCardWasExpanded");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_breadcrumbLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "breadcrumbLayer");
}

id objc_msgSend_breadcrumbValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "breadcrumbValue");
}

id objc_msgSend_bringExperienceViewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringExperienceViewToFront:");
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_bringUpPersistentStoreLoader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringUpPersistentStoreLoader");
}

id objc_msgSend_broadcast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "broadcast");
}

id objc_msgSend_bu_arrayByInvokingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_arrayByInvokingBlock:");
}

id objc_msgSend_bu_arrayByRemovingNSNulls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_arrayByRemovingNSNulls");
}

id objc_msgSend_bu_booksRepositoryURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_booksRepositoryURL");
}

id objc_msgSend_bu_containsLocalizedStringCaseInsensitive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_containsLocalizedStringCaseInsensitive:");
}

id objc_msgSend_bu_dictionaryByRecursivelyRemovingNSNulls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_dictionaryByRecursivelyRemovingNSNulls");
}

id objc_msgSend_bu_dictionaryForQueryItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_dictionaryForQueryItems");
}

id objc_msgSend_bu_extendedAttributeNamed_iCloudSyncable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_extendedAttributeNamed:iCloudSyncable:");
}

id objc_msgSend_bu_fileAllocatedSizeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_fileAllocatedSizeWithError:");
}

id objc_msgSend_bu_indexOfObjectWithValue_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_indexOfObjectWithValue:forKeyPath:");
}

id objc_msgSend_bu_isFolder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_isFolder");
}

id objc_msgSend_bu_md5(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_md5");
}

id objc_msgSend_bu_md5UpperCase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_md5UpperCase");
}

id objc_msgSend_bu_objectsMatching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_objectsMatching:");
}

id objc_msgSend_bu_prettyDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_prettyDescription");
}

id objc_msgSend_bu_reversedArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_reversedArray");
}

id objc_msgSend_bu_setExtendedAttributeNamed_value_iCloudSyncable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_setExtendedAttributeNamed:value:iCloudSyncable:");
}

id objc_msgSend_bu_sha1(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_sha1");
}

id objc_msgSend_bu_urlWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_urlWithAssetID:");
}

id objc_msgSend_bu_utType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_utType");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleForManagedObjectModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForManagedObjectModel");
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleID");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleIdentifier");
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundlePath");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleURL");
}

id objc_msgSend_bundleWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithPath:");
}

id objc_msgSend_button(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "button");
}

id objc_msgSend_buttonActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonActions");
}

id objc_msgSend_buttonFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonFont");
}

id objc_msgSend_buttonShouldBeCanPreorderState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonShouldBeCanPreorderState");
}

id objc_msgSend_buttonShouldBeReadState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonShouldBeReadState");
}

id objc_msgSend_buttonShouldBeWasPreorderedState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonShouldBeWasPreorderedState");
}

id objc_msgSend_buttonShrinkFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonShrinkFactor");
}

id objc_msgSend_buttonState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonState");
}

id objc_msgSend_buttonTitleColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonTitleColor");
}

id objc_msgSend_buttonTitleColorDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonTitleColorDisabled");
}

id objc_msgSend_buttonTitleFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonTitleFont");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_buyButton_initialBuy_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyButton:initialBuy:completion:");
}

id objc_msgSend_buyButton_stateDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyButton:stateDidChange:");
}

id objc_msgSend_buyDefaultTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyDefaultTitle");
}

id objc_msgSend_buyParameters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyParameters");
}

id objc_msgSend_buyParams(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyParams");
}

id objc_msgSend_buyStateBackgroundFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyStateBackgroundFillColor");
}

id objc_msgSend_buyStateFrameColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyStateFrameColor");
}

id objc_msgSend_buyStateTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyStateTextColor");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bytes");
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_cache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cache");
}

id objc_msgSend_cache_willEvictObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cache:willEvictObject:");
}

id objc_msgSend_cacheDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheDirectory");
}

id objc_msgSend_cacheForPath_maxSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheForPath:maxSize:");
}

id objc_msgSend_cacheGeneration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheGeneration");
}

id objc_msgSend_cacheItemWithItem_key_cost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheItemWithItem:key:cost:");
}

id objc_msgSend_cacheLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheLoaded");
}

id objc_msgSend_cacheLoadedCondition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheLoadedCondition");
}

id objc_msgSend_cacheManager_bookCoverInfoForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheManager:bookCoverInfoForIdentifier:");
}

id objc_msgSend_cacheManager_explicitIdentifiersWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheManager:explicitIdentifiersWithCompletion:");
}

id objc_msgSend_cacheMetaData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheMetaData");
}

id objc_msgSend_cacheMetadataDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheMetadataDictionary");
}

id objc_msgSend_cachePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachePath");
}

id objc_msgSend_cachePrefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachePrefix");
}

id objc_msgSend_cacheResponses(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheResponses");
}

id objc_msgSend_cacheTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheTimestamp");
}

id objc_msgSend_cacheVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheVersion");
}

id objc_msgSend_cachedCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedCFI");
}

id objc_msgSend_cachedCharacterCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedCharacterCount");
}

id objc_msgSend_cachedDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedDuration");
}

id objc_msgSend_cachedGeneration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedGeneration");
}

id objc_msgSend_cachedTextNodeCFIsAndCharacterCounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedTextNodeCFIsAndCharacterCounts");
}

id objc_msgSend_cachedTextNodeCFIsAndCharacterCountsOrdinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedTextNodeCFIsAndCharacterCountsOrdinal");
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callStackSymbols");
}

id objc_msgSend_callback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callback");
}

id objc_msgSend_callbackInvocationWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callbackInvocationWithImage:");
}

id objc_msgSend_caller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caller");
}

id objc_msgSend_calloutBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calloutBar");
}

id objc_msgSend_canDeleteCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDeleteCellAtIndex:");
}

id objc_msgSend_canFetchCoverForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canFetchCoverForURL:");
}

id objc_msgSend_canPreorder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPreorder");
}

id objc_msgSend_canPreorderDefaultTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPreorderDefaultTitle");
}

id objc_msgSend_canPresentInPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPresentInPosition:");
}

id objc_msgSend_canStoreDescribedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canStoreDescribedImage:");
}

id objc_msgSend_canUseCoverTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canUseCoverTransition");
}

id objc_msgSend_canUseCoverTransitionForDismissingCardSetViewController_dataSource_coverHost_coverYOffset_inCoordinatesOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canUseCoverTransitionForDismissingCardSetViewController:dataSource:coverHost:coverYOffset:inCoordinatesOfView:");
}

id objc_msgSend_canUseFilters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canUseFilters");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancel");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAllOperations");
}

id objc_msgSend_cancelButtonTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelButtonTitle");
}

id objc_msgSend_cancelIdleTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelIdleTimer");
}

id objc_msgSend_cancelInteractiveTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelInteractiveTransition");
}

id objc_msgSend_cancelPreloadPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreloadPresentation");
}

id objc_msgSend_cancelRenderingCacheOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRenderingCacheOperations");
}

id objc_msgSend_cancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelled");
}

id objc_msgSend_candidateIdentifiersForQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "candidateIdentifiersForQuery:");
}

id objc_msgSend_capitalizedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "capitalizedString");
}

id objc_msgSend_card(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "card");
}

id objc_msgSend_cardBufferCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardBufferCount");
}

id objc_msgSend_cardByIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardByIndex");
}

id objc_msgSend_cardContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardContent");
}

id objc_msgSend_cardContentViewController_initializeManagerWithScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardContentViewController:initializeManagerWithScrollView:");
}

id objc_msgSend_cardContractedScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardContractedScale");
}

id objc_msgSend_cardCornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardCornerRadius");
}

id objc_msgSend_cardCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardCount");
}

id objc_msgSend_cardCountForCardSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardCountForCardSet:");
}

id objc_msgSend_cardCoverSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardCoverSource");
}

id objc_msgSend_cardCoverSourceByIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardCoverSourceByIndex");
}

id objc_msgSend_cardCoverSourceUnhideBlocksByIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardCoverSourceUnhideBlocksByIndex");
}

id objc_msgSend_cardExpandedTopOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardExpandedTopOffset");
}

id objc_msgSend_cardGap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardGap");
}

id objc_msgSend_cardGapForContainerWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardGapForContainerWidth:");
}

id objc_msgSend_cardGripperViewWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardGripperViewWithStyle:");
}

id objc_msgSend_cardIndexForFeedOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardIndexForFeedOptions:");
}

id objc_msgSend_cardLayoutDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardLayoutDidChange:");
}

id objc_msgSend_cardMoveItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardMoveItems");
}

id objc_msgSend_cardNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardNavigationController");
}

id objc_msgSend_cardNavigationControllerClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardNavigationControllerClass:");
}

id objc_msgSend_cardNavigationControllerForCardSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardNavigationControllerForCardSet:");
}

id objc_msgSend_cardPeekWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardPeekWidth");
}

id objc_msgSend_cardScrollViewContentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardScrollViewContentOffset");
}

id objc_msgSend_cardSetData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetData");
}

id objc_msgSend_cardSetViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewController");
}

id objc_msgSend_cardSetViewController_animationCompletedExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewController:animationCompletedExpanded:");
}

id objc_msgSend_cardSetViewController_animatorForExpanding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewController:animatorForExpanding:");
}

id objc_msgSend_cardSetViewController_animatorForInteractiveDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewController:animatorForInteractiveDismiss:");
}

id objc_msgSend_cardSetViewController_animatorForUnexpanding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewController:animatorForUnexpanding:");
}

id objc_msgSend_cardSetViewController_didCommitDismissWithVelocity_interactiveAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewController:didCommitDismissWithVelocity:interactiveAnimator:");
}

id objc_msgSend_cardSetViewController_prepareForNavigationTransitionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewController:prepareForNavigationTransitionWithContext:");
}

id objc_msgSend_cardSetViewController_willUpdateWithNavigationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewController:willUpdateWithNavigationType:");
}

id objc_msgSend_cardSetViewControllerNavigiationTransitionCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSetViewControllerNavigiationTransitionCompleted:");
}

id objc_msgSend_cardSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSize");
}

id objc_msgSend_cardSlideItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSlideItems");
}

id objc_msgSend_cardStackBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackBackgroundView");
}

id objc_msgSend_cardStackTransitionSuspendLayoutAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitionSuspendLayoutAssertion");
}

id objc_msgSend_cardStackTransitionSuspendUpdatesAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitionSuspendUpdatesAssertion");
}

id objc_msgSend_cardStackTransitionSuspendUpdatesAssertionUntilContentExceedsHeightWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitionSuspendUpdatesAssertionUntilContentExceedsHeightWithCompletion:");
}

id objc_msgSend_cardStackTransitionSuspendUpdatesUntilEndOfTransaction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitionSuspendUpdatesUntilEndOfTransaction");
}

id objc_msgSend_cardStackTransitioningCardContentCoverSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardContentCoverSource");
}

id objc_msgSend_cardStackTransitioningCardContentFinalizeForDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardContentFinalizeForDismiss");
}

id objc_msgSend_cardStackTransitioningCardContentFinalizeForOpen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardContentFinalizeForOpen");
}

id objc_msgSend_cardStackTransitioningCardContentFinalizePreparationForOpen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardContentFinalizePreparationForOpen");
}

id objc_msgSend_cardStackTransitioningCardContentPrepareForDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardContentPrepareForDismiss");
}

id objc_msgSend_cardStackTransitioningCardContentPrepareForOpenWithViewController_viewSize_index_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardContentPrepareForOpenWithViewController:viewSize:index:completion:");
}

id objc_msgSend_cardStackTransitioningCardExtraXOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardExtraXOffset");
}

id objc_msgSend_cardStackTransitioningCardFinalFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardFinalFrame");
}

id objc_msgSend_cardStackTransitioningCardFinalize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardFinalize:");
}

id objc_msgSend_cardStackTransitioningCardPrepare_extraXOffsetForAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardPrepare:extraXOffsetForAnimation:");
}

id objc_msgSend_cardStackTransitioningCardView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCardView");
}

id objc_msgSend_cardStackTransitioningCoverSourceExtraXOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCoverSourceExtraXOffset");
}

id objc_msgSend_cardStackTransitioningCoverSourceFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCoverSourceFrame");
}

id objc_msgSend_cardStackTransitioningCoverSourceHide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCoverSourceHide");
}

id objc_msgSend_cardStackTransitioningCoverSourceImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCoverSourceImage");
}

id objc_msgSend_cardStackTransitioningCoverSourceReferenceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCoverSourceReferenceView");
}

id objc_msgSend_cardStackTransitioningCoverSourceReplaceReferenceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackTransitioningCoverSourceReplaceReferenceView:");
}

id objc_msgSend_cardStackViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackViewController");
}

id objc_msgSend_cardStackViewController_parentCardWillDismissWithReason_targetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardStackViewController:parentCardWillDismissWithReason:targetViewController:");
}

id objc_msgSend_cardSuperviewToTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardSuperviewToTransform");
}

id objc_msgSend_cardTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardTapGestureRecognizer");
}

id objc_msgSend_cardToCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardToCenter");
}

id objc_msgSend_cardToTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardToTransform");
}

id objc_msgSend_cardUnexpandedTopOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardUnexpandedTopOffset");
}

id objc_msgSend_cardView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardView");
}

id objc_msgSend_cardViewController_accessibilityWantsToScrollToOffset_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:accessibilityWantsToScrollToOffset:cardData:");
}

id objc_msgSend_cardViewController_animationCompletedAtPosition_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:animationCompletedAtPosition:cardData:");
}

id objc_msgSend_cardViewController_cardData_scrollViewDidEndDecelerating_contentScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:cardData:scrollViewDidEndDecelerating:contentScrollView:");
}

id objc_msgSend_cardViewController_cardData_scrollViewDidEndDragging_willDecelerate_contentScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:cardData:scrollViewDidEndDragging:willDecelerate:contentScrollView:");
}

id objc_msgSend_cardViewController_cardData_scrollViewDidScroll_contentScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:cardData:scrollViewDidScroll:contentScrollView:");
}

id objc_msgSend_cardViewController_cardData_scrollViewWillBeginDragging_contentScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:cardData:scrollViewWillBeginDragging:contentScrollView:");
}

id objc_msgSend_cardViewController_cardData_scrollViewWillEndDragging_withVelocity_targetContentOffset_contentScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:cardData:scrollViewWillEndDragging:withVelocity:targetContentOffset:contentScrollView:");
}

id objc_msgSend_cardViewController_cardScrollViewOffsetForContentScrollView_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:cardScrollViewOffsetForContentScrollView:cardData:");
}

id objc_msgSend_cardViewController_contentScrollViewDidChange_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:contentScrollViewDidChange:cardData:");
}

id objc_msgSend_cardViewController_dismissPan_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:dismissPan:cardData:");
}

id objc_msgSend_cardViewController_dismissPanShouldBegin_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:dismissPanShouldBegin:cardData:");
}

id objc_msgSend_cardViewController_positionAuxiliaryNavigationBarBackgroundWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:positionAuxiliaryNavigationBarBackgroundWithData:");
}

id objc_msgSend_cardViewController_positionAuxiliaryNavigationBarView_cardDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:positionAuxiliaryNavigationBarView:cardDate:");
}

id objc_msgSend_cardViewController_positionCardScrollViewBasedOnContentScrollView_cardDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:positionCardScrollViewBasedOnContentScrollView:cardDate:");
}

id objc_msgSend_cardViewController_repositionOffsetsWithContentScrollView_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:repositionOffsetsWithContentScrollView:cardData:");
}

id objc_msgSend_cardViewController_scrollToTopAnimated_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:scrollToTopAnimated:cardData:");
}

id objc_msgSend_cardViewController_updateContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:updateContentSize:");
}

id objc_msgSend_cardViewController_willDismissWithCardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewController:willDismissWithCardData:");
}

id objc_msgSend_cardViewControllerAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerAtIndex:");
}

id objc_msgSend_cardViewControllerAuxiliaryNavigationBarAlpha_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerAuxiliaryNavigationBarAlpha:cardData:");
}

id objc_msgSend_cardViewControllerCanCloseAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerCanCloseAsset:");
}

id objc_msgSend_cardViewControllerContractedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerContractedState:");
}

id objc_msgSend_cardViewControllerDidTapCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerDidTapCard:");
}

id objc_msgSend_cardViewControllerDidTapCloseAllCards_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerDidTapCloseAllCards:");
}

id objc_msgSend_cardViewControllerDidTapCloseAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerDidTapCloseAsset:");
}

id objc_msgSend_cardViewControllerDidTapScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerDidTapScrollView:");
}

id objc_msgSend_cardViewControllerExpandedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerExpandedState:");
}

id objc_msgSend_cardViewControllerScrollView_accessibilityWantsToScrollToOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerScrollView:accessibilityWantsToScrollToOffset:");
}

id objc_msgSend_cardViewControllerStatusBarBackgroundOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerStatusBarBackgroundOpacity:");
}

id objc_msgSend_cardViewControllerUpdateCardSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardViewControllerUpdateCardSize:");
}

id objc_msgSend_cardsAppendedDuringTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardsAppendedDuringTransition");
}

id objc_msgSend_cardsCanExpand(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cardsCanExpand");
}

id objc_msgSend_caretRectForPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caretRectForPosition:");
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_catalogService(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "catalogService");
}

id objc_msgSend_cellAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellAtPoint:");
}

id objc_msgSend_cellAtPoint_ensureSelectionRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellAtPoint:ensureSelectionRect:");
}

id objc_msgSend_cellColumnsForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellColumnsForSize:");
}

id objc_msgSend_cellForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForIndex:");
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForRowAtIndexPath:");
}

id objc_msgSend_cellSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellSize");
}

id objc_msgSend_cellSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellSpacing");
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "center");
}

id objc_msgSend_centerImageSelected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerImageSelected");
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerXAnchor");
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerYAnchor");
}

id objc_msgSend_cfi(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfi");
}

id objc_msgSend_cfiCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiCount");
}

id objc_msgSend_cfiEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiEnd");
}

id objc_msgSend_cfiPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiPosition");
}

id objc_msgSend_cfiSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiSet");
}

id objc_msgSend_cfiSetWithCFIStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiSetWithCFIStrings:");
}

id objc_msgSend_cfiStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiStart");
}

id objc_msgSend_cfiWithAdjustedSpineIndex_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiWithAdjustedSpineIndex:error:");
}

id objc_msgSend_cfiWithString_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiWithString:error:");
}

id objc_msgSend_cfis(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfis");
}

id objc_msgSend_cfisWithMinimumCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfisWithMinimumCount:");
}

id objc_msgSend_cgInterests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cgInterests");
}

id objc_msgSend_chainWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chainWithName:");
}

id objc_msgSend_changeTokenController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeTokenController");
}

id objc_msgSend_changeType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeType");
}

id objc_msgSend_changedObjectID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changedObjectID");
}

id objc_msgSend_changedValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changedValues");
}

id objc_msgSend_changes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changes");
}

id objc_msgSend_chapterNum(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterNum");
}

id objc_msgSend_chapterTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTitle");
}

id objc_msgSend_chapterTitleForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTitleForAnnotation:");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterCount");
}

id objc_msgSend_characterCountForCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterCountForCFI:");
}

id objc_msgSend_characterCountIfComputable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterCountIfComputable");
}

id objc_msgSend_characterCountLimitforAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterCountLimitforAnnotation:");
}

id objc_msgSend_characterDirectionForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterDirectionForLanguage:");
}

id objc_msgSend_characterIsMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterIsMember:");
}

id objc_msgSend_characterLimit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterLimit");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_characters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characters");
}

id objc_msgSend_checkoutBookStringForHTMLGenerator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkoutBookStringForHTMLGenerator:");
}

id objc_msgSend_childTransitionDidComplete_finished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childTransitionDidComplete:finished:");
}

id objc_msgSend_childTransitionDidStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childTransitionDidStart:");
}

id objc_msgSend_childTransitionWillStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childTransitionWillStart:");
}

id objc_msgSend_childViewControllerForStatusBarStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllerForStatusBarStyle");
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllers");
}

id objc_msgSend_children(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "children");
}

id objc_msgSend_citation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "citation");
}

id objc_msgSend_citationIncludingStoreURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "citationIncludingStoreURL:");
}

id objc_msgSend_citationWithPropertyProvider_storeURL_pageRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "citationWithPropertyProvider:storeURL:pageRange:");
}

id objc_msgSend_citationWordCountLimit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "citationWordCountLimit");
}

id objc_msgSend_ckAssetStoreDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ckAssetStoreDirectory");
}

id objc_msgSend_clauseForSelectedTextForAnnotation_inSentence_possibleLength_highlightedRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clauseForSelectedTextForAnnotation:inSentence:possibleLength:highlightedRange:");
}

id objc_msgSend_clean_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clean:");
}

id objc_msgSend_cleanUpCacheFilesInPath_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanUpCacheFilesInPath:withExtension:");
}

id objc_msgSend_cleanupAfterTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupAfterTransition:");
}

id objc_msgSend_cleanupGrabbedCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupGrabbedCell");
}

id objc_msgSend_cleanupSubscribers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupSubscribers");
}

id objc_msgSend_cleanupTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupTransition");
}

id objc_msgSend_cleanupViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupViewControllers");
}

id objc_msgSend_clear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clear");
}

id objc_msgSend_clearCacheFiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCacheFiles");
}

id objc_msgSend_clearCallbackState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCallbackState");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearEndTimeObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearEndTimeObserver");
}

id objc_msgSend_clearExternalDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearExternalDisplay");
}

id objc_msgSend_clearOldCacheFiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearOldCacheFiles");
}

id objc_msgSend_clearReadCFIs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearReadCFIs");
}

id objc_msgSend_clearSavedContentOffsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSavedContentOffsets");
}

id objc_msgSend_clearSavedContentOffsetsForCardAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSavedContentOffsetsForCardAtIndex:");
}

id objc_msgSend_clearSuspendedViewState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSuspendedViewState");
}

id objc_msgSend_clearTimeObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearTimeObservers");
}

id objc_msgSend_clearTocEntrys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearTocEntrys");
}

id objc_msgSend_clientApplicationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientApplicationController");
}

id objc_msgSend_clientUserAgentWithOverrideVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientUserAgentWithOverrideVersion:");
}

id objc_msgSend_clippedCoverIndexes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clippedCoverIndexes");
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "close");
}

id objc_msgSend_closeBox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeBox");
}

id objc_msgSend_closePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closePath");
}

id objc_msgSend_cloudServerResponseTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudServerResponseTimeout");
}

id objc_msgSend_cloudSyncVersionsForDataType_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudSyncVersionsForDataType:performBlock:");
}

id objc_msgSend_cloudVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cloudVersion");
}

id objc_msgSend_coalescedChangeProcessing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescedChangeProcessing");
}

id objc_msgSend_coalescedConnectOrdinals(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescedConnectOrdinals");
}

id objc_msgSend_coalescedFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescedFetch");
}

id objc_msgSend_coalescedSave(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescedSave");
}

id objc_msgSend_coalescingCleanup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescingCleanup");
}

id objc_msgSend_coalescingPreloading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescingPreloading");
}

id objc_msgSend_coalescingPruning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescingPruning");
}

id objc_msgSend_coalescingSaves(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescingSaves");
}

id objc_msgSend_coalescingVersionBump(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coalescingVersionBump");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_collapseNewlinesForMutableAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collapseNewlinesForMutableAttributedString:");
}

id objc_msgSend_colorAtPixelX_y_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorAtPixelX:y:");
}

id objc_msgSend_colorControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorControls");
}

id objc_msgSend_colorForAnnotationStyle_propertyName_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorForAnnotationStyle:propertyName:pageTheme:");
}

id objc_msgSend_colorForThemeItem_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorForThemeItem:pageTheme:");
}

id objc_msgSend_colorNamed_inBundle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorNamed:inBundle:compatibleWithTraitCollection:");
}

id objc_msgSend_colorRegistry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorRegistry");
}

id objc_msgSend_colorSpace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorSpace");
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_colorWithCGColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithCGColor:");
}

id objc_msgSend_colorWithHue_saturation_brightness_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithHue:saturation:brightness:alpha:");
}

id objc_msgSend_colorWithPatternImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithPatternImage:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_columnNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "columnNames");
}

id objc_msgSend_commandWithTitle_image_action_input_modifierFlags_propertyList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandWithTitle:image:action:input:modifierFlags:propertyList:");
}

id objc_msgSend_comments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "comments");
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commit");
}

id objc_msgSend_commonPrefixWithString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commonPrefixWithString:options:");
}

id objc_msgSend_compact(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compact");
}

id objc_msgSend_compactWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactWidth");
}

id objc_msgSend_comparator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "comparator");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_compareCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compareCFI:");
}

id objc_msgSend_compareCFIHead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compareCFIHead:");
}

id objc_msgSend_compareCFITail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compareCFITail:");
}

id objc_msgSend_compareHeadToTail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compareHeadToTail:");
}

id objc_msgSend_compareTailToHead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compareTailToHead:");
}

id objc_msgSend_compareWithSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compareWithSection:");
}

id objc_msgSend_compile(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compile");
}

id objc_msgSend_completeTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completeTransition:");
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completion");
}

id objc_msgSend_completionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionBlock");
}

id objc_msgSend_completionCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionCount");
}

id objc_msgSend_completionCurve(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionCurve");
}

id objc_msgSend_completionQ(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionQ");
}

id objc_msgSend_completionQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionQueue");
}

id objc_msgSend_completionSpeed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionSpeed");
}

id objc_msgSend_completions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completions");
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_componentsWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsWithURL:resolvingAgainstBaseURL:");
}

id objc_msgSend_computedRating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "computedRating");
}

id objc_msgSend_concurrencyType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "concurrencyType");
}

id objc_msgSend_confidence(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confidence");
}

id objc_msgSend_confidenceThreshold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confidenceThreshold");
}

id objc_msgSend_configs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configs");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuration");
}

id objc_msgSend_configurationByApplyingConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationByApplyingConfiguration:");
}

id objc_msgSend_configurationManager_namespaceDataDidUpdateFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationManager:namespaceDataDidUpdateFrom:to:");
}

id objc_msgSend_configurationWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithFont:");
}

id objc_msgSend_configurationWithIdentifier_previewProvider_actionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithIdentifier:previewProvider:actionProvider:");
}

id objc_msgSend_configurationWithPaletteColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPaletteColors:");
}

id objc_msgSend_configurationWithPointSize_weight_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:scale:");
}

id objc_msgSend_configurationWithTextStyle_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithTextStyle:scale:");
}

id objc_msgSend_configureChromeForContracted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureChromeForContracted");
}

id objc_msgSend_configureChromeForExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureChromeForExpanded");
}

id objc_msgSend_configureWithSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithSection:");
}

id objc_msgSend_configureWithTransparentBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithTransparentBackground");
}

id objc_msgSend_conformsToProtocol(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_conformsToType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToType:");
}

id objc_msgSend_connectedScenes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectedScenes");
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connection");
}

id objc_msgSend_connectionRequired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "connectionRequired");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:multiplier:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:multiplier:constant:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:");
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToAnchor:constant:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:constant:");
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "container");
}

id objc_msgSend_containerIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerIdentifier");
}

id objc_msgSend_containerLayers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerLayers");
}

id objc_msgSend_containerQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerQueue");
}

id objc_msgSend_containerURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerURL");
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerView");
}

id objc_msgSend_containerViewForHostingCoversDuringAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerViewForHostingCoversDuringAnimation");
}

id objc_msgSend_containerViewForIMTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerViewForIMTransition:");
}

id objc_msgSend_contains_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contains:");
}

id objc_msgSend_containsDocumentWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsDocumentWithIdentifier:");
}

id objc_msgSend_containsIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsIndex:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsPoint:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_containsSubstring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsSubstring:");
}

id objc_msgSend_containsTraitsInCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsTraitsInCollection:");
}

id objc_msgSend_containsValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsValueForKey:");
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "content");
}

id objc_msgSend_contentChangedDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentChangedDate");
}

id objc_msgSend_contentContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentContainerView");
}

id objc_msgSend_contentCreationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentCreationDate");
}

id objc_msgSend_contentEdgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentEdgeInsets");
}

id objc_msgSend_contentFileSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentFileSize");
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInset");
}

id objc_msgSend_contentInsetAdjustmentBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInsetAdjustmentBehavior");
}

id objc_msgSend_contentInsetForContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInsetForContent");
}

id objc_msgSend_contentInsetTopLarge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInsetTopLarge");
}

id objc_msgSend_contentInsetTopMedium(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInsetTopMedium");
}

id objc_msgSend_contentInsetTopSmall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInsetTopSmall");
}

id objc_msgSend_contentInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInsets");
}

id objc_msgSend_contentMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentMode");
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentOffset");
}

id objc_msgSend_contentProtected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentProtected");
}

id objc_msgSend_contentRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentRectForBounds:");
}

id objc_msgSend_contentScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentScrollView");
}

id objc_msgSend_contentScrollViewContentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentScrollViewContentOffset");
}

id objc_msgSend_contentScrollViewForEdge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentScrollViewForEdge:");
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentSize");
}

id objc_msgSend_contentSizeForThumbnailAspectRatio_spread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentSizeForThumbnailAspectRatio:spread:");
}

id objc_msgSend_contentStoreIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentStoreIdentifier");
}

id objc_msgSend_contentTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentTextColor");
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentType");
}

id objc_msgSend_contentTypeForExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentTypeForExtension:");
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView");
}

id objc_msgSend_contentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController");
}

id objc_msgSend_contentViewControllerForCardAtIndex_cardContentScrollManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerForCardAtIndex:cardContentScrollManager:");
}

id objc_msgSend_contentViewControllerForCardSet_index_cardContentScrollManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerForCardSet:index:cardContentScrollManager:");
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_contentsScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsScale");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context");
}

id objc_msgSend_contextAwareSelectedTextFromAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextAwareSelectedTextFromAnnotation:");
}

id objc_msgSend_contexts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contexts");
}

id objc_msgSend_contextsMatchingIdentifierPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextsMatchingIdentifierPath:completion:");
}

id objc_msgSend_contextsMatchingPredicate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextsMatchingPredicate:completion:");
}

id objc_msgSend_continueAnimationWithTimingParameters_durationFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueAnimationWithTimingParameters:durationFactor:");
}

id objc_msgSend_contractedCardWidthForContainerWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contractedCardWidthForContainerWidth:");
}

id objc_msgSend_contractedPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contractedPosition");
}

id objc_msgSend_contractedState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contractedState");
}

id objc_msgSend_contractedTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contractedTransform");
}

id objc_msgSend_contractingState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contractingState");
}

id objc_msgSend_controlCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlCharacterSet");
}

id objc_msgSend_controller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controller");
}

id objc_msgSend_controllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controllers");
}

id objc_msgSend_controls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controls");
}

id objc_msgSend_convertPoint_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:fromView:");
}

id objc_msgSend_convertPoint_toLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toLayer:");
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toView:");
}

id objc_msgSend_convertRect_fromLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromLayer:");
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromView:");
}

id objc_msgSend_convertRect_fromWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromWindow:");
}

id objc_msgSend_convertRect_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toView:");
}

id objc_msgSend_convertRect_toWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toWindow:");
}

id objc_msgSend_convertTime_fromLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertTime:fromLayer:");
}

id objc_msgSend_coordinateReadingItemAtURL_options_error_byAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateReadingItemAtURL:options:error:byAccessor:");
}

id objc_msgSend_coordinateWritingItemAtURL_options_error_byAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateWritingItemAtURL:options:error:byAccessor:");
}

id objc_msgSend_coordinatingObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinatingObserver");
}

id objc_msgSend_coordinator_observer_didChangeFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinator:observer:didChangeFont:");
}

id objc_msgSend_coordinator_observer_didChangeLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinator:observer:didChangeLayout:");
}

id objc_msgSend_coordinator_observer_didChangeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinator:observer:didChangeStyle:");
}

id objc_msgSend_coordinator_observerDidDecreaseFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinator:observerDidDecreaseFontSize:");
}

id objc_msgSend_coordinator_observerDidIncreaseFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinator:observerDidIncreaseFontSize:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_copyCGImageAtTime_actualTime_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCGImageAtTime:actualTime:error:");
}

id objc_msgSend_copyCGImageForKey_resourceSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCGImageForKey:resourceSize:");
}

id objc_msgSend_copyEntityPropertiesArray_fromEntityName_withPredicate_sortBy_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:");
}

id objc_msgSend_copyEntityPropertyArray_fromEntityName_withPredicate_sortBy_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:");
}

id objc_msgSend_copyItemAtPath_toPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtPath:toPath:error:");
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_copyMaxSortValue_forEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyMaxSortValue:forEntityName:");
}

id objc_msgSend_copyPropertyForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyPropertyForKey:");
}

id objc_msgSend_copyTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyTo:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_cornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cornerRadius");
}

id objc_msgSend_cost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cost");
}

id objc_msgSend_costFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "costFor:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countForFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForFetchRequest:error:");
}

id objc_msgSend_countForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForObject:");
}

id objc_msgSend_counter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "counter");
}

id objc_msgSend_coverAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverAspectRatio");
}

id objc_msgSend_coverEffectStyleForImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverEffectStyleForImage:");
}

id objc_msgSend_coverEffectsContentForImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverEffectsContentForImage:");
}

id objc_msgSend_coverFadeItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverFadeItems");
}

id objc_msgSend_coverHost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverHost");
}

id objc_msgSend_coverHostFromPresentingViewController_previousCardSetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverHostFromPresentingViewController:previousCardSetViewController:");
}

id objc_msgSend_coverMoveItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverMoveItems");
}

id objc_msgSend_coverSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverSource");
}

id objc_msgSend_coverSourceForRepresentedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverSourceForRepresentedObject:");
}

id objc_msgSend_coverToCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverToCenter");
}

id objc_msgSend_coverToTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverToTransform");
}

id objc_msgSend_coverView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverView");
}

id objc_msgSend_covered(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "covered");
}

id objc_msgSend_coversAreInNonHorizontalLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coversAreInNonHorizontalLayout");
}

id objc_msgSend_coversNeedClipping(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coversNeedClipping");
}

id objc_msgSend_createAnimator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createAnimator");
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createExternalDisplayOnScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createExternalDisplayOnScreen:");
}

id objc_msgSend_createNewActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createNewActivity");
}

id objc_msgSend_createPageLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPageLabel");
}

id objc_msgSend_createParagraphStyleForFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createParagraphStyleForFont:");
}

id objc_msgSend_createSymbolicLinkAtPath_withDestinationPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createSymbolicLinkAtPath:withDestinationPath:error:");
}

id objc_msgSend_creationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "creationDate");
}

id objc_msgSend_creatorIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "creatorIdentifier");
}

id objc_msgSend_crossfadeWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "crossfadeWithDuration:");
}

id objc_msgSend_currentActivity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentActivity");
}

id objc_msgSend_currentAttributedTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAttributedTitle");
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCalendar");
}

id objc_msgSend_currentCardViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentCardViewController");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentImage");
}

id objc_msgSend_currentIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentIndex");
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentItem");
}

id objc_msgSend_currentLightLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLightLevel");
}

id objc_msgSend_currentLineRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLineRect");
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocale");
}

id objc_msgSend_currentObjectIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentObjectIdentifiers");
}

id objc_msgSend_currentOrNewTransactionWithOptions_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentOrNewTransactionWithOptions:block:");
}

id objc_msgSend_currentPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPage");
}

id objc_msgSend_currentPersistentStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPersistentStore");
}

id objc_msgSend_currentPersistentStoreType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPersistentStoreType");
}

id objc_msgSend_currentProcess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentProcess");
}

id objc_msgSend_currentQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentQueue");
}

id objc_msgSend_currentReachabilityStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentReachabilityStatus");
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRunLoop");
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentState");
}

id objc_msgSend_currentStorefront(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentStorefront");
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentThread");
}

id objc_msgSend_currentThumbImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentThumbImage");
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTime");
}

id objc_msgSend_currentTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTitle");
}

id objc_msgSend_currentTraitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTraitCollection");
}

id objc_msgSend_currentTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTransition");
}

id objc_msgSend_currentUbiquityIdentityToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentUbiquityIdentityToken");
}

id objc_msgSend_customActivityTypeOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customActivityTypeOrder");
}

id objc_msgSend_customShareActivityTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customShareActivityTitle");
}

id objc_msgSend_cutoffToDismissScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cutoffToDismissScrollView:");
}

id objc_msgSend_damping(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "damping");
}

id objc_msgSend_darkGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkGrayColor");
}

id objc_msgSend_darkTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkTextColor");
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "data");
}

id objc_msgSend_dataHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataHighlights");
}

id objc_msgSend_dataManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataManager");
}

id objc_msgSend_dataRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataRepresentation");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource");
}

id objc_msgSend_dataSourceIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSourceIdentifier");
}

id objc_msgSend_dataSourceInsertionDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSourceInsertionDate");
}

id objc_msgSend_dataSourceMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSourceMap");
}

id objc_msgSend_dataStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataStore");
}

id objc_msgSend_dataStoreInformation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataStoreInformation");
}

id objc_msgSend_dataTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithRequest:completionHandler:");
}

id objc_msgSend_dataTaskWithURL_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataTaskWithURL:completionHandler:");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_database(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "database");
}

id objc_msgSend_databaseFolderURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseFolderURL");
}

id objc_msgSend_databaseVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseVersion");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateByAddingComponents_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingComponents:toDate:options:");
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateByAddingTimeInterval:");
}

id objc_msgSend_dateChecked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateChecked");
}

id objc_msgSend_dateFormatFromTemplate_options_locale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatFromTemplate:options:locale:");
}

id objc_msgSend_dateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatter");
}

id objc_msgSend_dateFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFromString:");
}

id objc_msgSend_dateKeysForDictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateKeysForDictionaryRepresentation");
}

id objc_msgSend_dateLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateLabel");
}

id objc_msgSend_dateSinceLastActiveOverride(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateSinceLastActiveOverride");
}

id objc_msgSend_dateWithDeltaDays_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithDeltaDays:");
}

id objc_msgSend_dateWithDeltaWeeks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithDeltaWeeks:");
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSince1970:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceReferenceDate:");
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "day");
}

id objc_msgSend_dayOfWeekFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dayOfWeekFromDate:");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugDescription");
}

id objc_msgSend_debugHighlightViewWithColor_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugHighlightViewWithColor:width:");
}

id objc_msgSend_debugIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugIdentifier");
}

id objc_msgSend_debugLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugLayout");
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalDigitCharacterSet");
}

id objc_msgSend_decimalNumberWithDecimal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalNumberWithDecimal:");
}

id objc_msgSend_decimalNumberWithMantissa_exponent_isNegative_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalNumberWithMantissa:exponent:isNegative:");
}

id objc_msgSend_decimalNumberWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalNumberWithString:");
}

id objc_msgSend_decodeBytesForKey_returnedLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBytesForKey:returnedLength:");
}

id objc_msgSend_decodeIntForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntForKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_deepLink(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deepLink");
}

id objc_msgSend_defaultBag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBag");
}

id objc_msgSend_defaultBookmarkContainerKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBookmarkContainerKey");
}

id objc_msgSend_defaultBookmarkGenerationKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBookmarkGenerationKey");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultContainer");
}

id objc_msgSend_defaultDeviceInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultDeviceInfo");
}

id objc_msgSend_defaultHeightForMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultHeightForMetrics:");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultParagraphStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultParagraphStyle");
}

id objc_msgSend_defaultStatusBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultStatusBarHeight");
}

id objc_msgSend_defaultTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultTransition");
}

id objc_msgSend_defaultWrapperRevisionKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultWrapperRevisionKey");
}

id objc_msgSend_delay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delay");
}

id objc_msgSend_delayTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delayTimer");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_deleteButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteButton");
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCharactersInRange:");
}

id objc_msgSend_deleteEntriesMarkedToBeDeleted_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEntriesMarkedToBeDeleted:completion:");
}

id objc_msgSend_deleteEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEntry");
}

id objc_msgSend_deleteEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteEntry:");
}

id objc_msgSend_deleteImageForEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteImageForEntryLocation:");
}

id objc_msgSend_deleteItemForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteItemForKey:");
}

id objc_msgSend_deleteItemsWithAllKeysContaining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteItemsWithAllKeysContaining:");
}

id objc_msgSend_deleteItemsWithKeyLike_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteItemsWithKeyLike:");
}

id objc_msgSend_deleteObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteObject:");
}

id objc_msgSend_deleteRemovedEntries_deletingCompletedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRemovedEntries:deletingCompletedHandler:");
}

id objc_msgSend_deleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleted");
}

id objc_msgSend_deletedFlagFromDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletedFlagFromDictionaryRepresentation:");
}

id objc_msgSend_deletedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deletedObjects");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:");
}

id objc_msgSend_describedImageFromEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describedImageFromEntryLocation:");
}

id objc_msgSend_describedImageFromImageEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describedImageFromImageEntry:");
}

id objc_msgSend_describedImageRequested(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describedImageRequested");
}

id objc_msgSend_describedImageShown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describedImageShown");
}

id objc_msgSend_describedImageWithIdentifier_size_processingOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describedImageWithIdentifier:size:processingOptions:");
}

id objc_msgSend_describedImageWithPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describedImageWithPriority:");
}

id objc_msgSend_describedImagesFromProductProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describedImagesFromProductProfile:");
}

id objc_msgSend_describedImagesToDictionaryOfSets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describedImagesToDictionaryOfSets:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_descriptionForKind(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionForKind");
}

id objc_msgSend_descriptionLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionLayer");
}

id objc_msgSend_deserializeFromDictionary_trustedSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deserializeFromDictionary:trustedSource:");
}

id objc_msgSend_desiredSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredSize");
}

id objc_msgSend_desktopSupportLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desktopSupportLevel");
}

id objc_msgSend_destinationImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destinationImage");
}

id objc_msgSend_deviceSupportsASTC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSupportsASTC");
}

id objc_msgSend_deviceSupportsHEIC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deviceSupportsHEIC");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryRepresentation");
}

id objc_msgSend_dictionaryResultsForAnnotationsWithPredicate_properties_propertyNamesMap_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryResultsForAnnotationsWithPredicate:properties:propertyNamesMap:inManagedObjectContext:");
}

id objc_msgSend_dictionaryResultsForAssetsWithPredicate_properties_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryResultsForAssetsWithPredicate:properties:inManagedObjectContext:");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithDictionary:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_didAccessValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didAccessValueForKey:");
}

id objc_msgSend_didBecomeCurrentStateCardViewController_previousState_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didBecomeCurrentStateCardViewController:previousState:cardData:");
}

id objc_msgSend_didBecomeTopCardSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didBecomeTopCardSet");
}

id objc_msgSend_didBecomeVisibleContentScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didBecomeVisibleContentScrollView");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_didFinishRotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishRotation");
}

id objc_msgSend_didHide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didHide");
}

id objc_msgSend_didHideAnnotationEditor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didHideAnnotationEditor:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didOpenBookWithAssetID_version_title_pageCount_storeID_coverImage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didOpenBookWithAssetID:version:title:pageCount:storeID:coverImage:completion:");
}

id objc_msgSend_didSetCurrentCardState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSetCurrentCardState:");
}

id objc_msgSend_didShowAnnotationEditor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didShowAnnotationEditor:");
}

id objc_msgSend_differenceFromRequest_toCandidateImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "differenceFromRequest:toCandidateImage:");
}

id objc_msgSend_dimmingOverlayView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dimmingOverlayView");
}

id objc_msgSend_directoriesSubpath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoriesSubpath");
}

id objc_msgSend_disableUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableUpdates");
}

id objc_msgSend_disabledTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disabledTextColor");
}

id objc_msgSend_discardContentIfPossible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discardContentIfPossible");
}

id objc_msgSend_disclaimerSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disclaimerSection");
}

id objc_msgSend_dismissAllCardsAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissAllCardsAnimated:completion:");
}

id objc_msgSend_dismissCardStackAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissCardStackAnimated:");
}

id objc_msgSend_dismissPanGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPanGestureRecognizer");
}

id objc_msgSend_dismissPopoverAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPopoverAnimated:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissing");
}

id objc_msgSend_dismissingState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissingState");
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchQueue");
}

id objc_msgSend_displayGamut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayGamut");
}

id objc_msgSend_displayOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayOrder");
}

id objc_msgSend_displayScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayScale");
}

id objc_msgSend_displayTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayTitle");
}

id objc_msgSend_displayedCardViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayedCardViewControllers");
}

id objc_msgSend_dissociateCloudDataFromSyncWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dissociateCloudDataFromSyncWithCompletion:");
}

id objc_msgSend_distanceToCoverSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceToCoverSource");
}

id objc_msgSend_distanceToDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceToDismiss");
}

id objc_msgSend_distanceToExpand(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceToExpand");
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distantPast");
}

id objc_msgSend_dividerLineRectForControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dividerLineRectForControl:");
}

id objc_msgSend_doRestrictedProcessing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doRestrictedProcessing:");
}

id objc_msgSend_documentCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentCount");
}

id objc_msgSend_documentString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentString");
}

id objc_msgSend_documentsURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentsURL");
}

id objc_msgSend_documentsURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentsURL:");
}

id objc_msgSend_doesNotExistTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doesNotExistTimestamp");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_doubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleForKey:");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_downloadingPercent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadingPercent");
}

id objc_msgSend_dq_archiveCurrentUbiquityIdentityToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_archiveCurrentUbiquityIdentityToken");
}

id objc_msgSend_dq_claimAssertionForIdentifier_description_signalBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_claimAssertionForIdentifier:description:signalBlock:");
}

id objc_msgSend_dq_isICloudDriveEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_isICloudDriveEnabled");
}

id objc_msgSend_dq_refreshUbiquityAvailabilityStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_refreshUbiquityAvailabilityStatus");
}

id objc_msgSend_dq_releaseAssertionForIdentifier_signalBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_releaseAssertionForIdentifier:signalBlock:");
}

id objc_msgSend_dq_releaseAssertionForTaskID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dq_releaseAssertionForTaskID:");
}

id objc_msgSend_dragAndDropDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dragAndDropDelegate");
}

id objc_msgSend_dragInteraction_item_willAnimateCancelWithAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dragInteraction:item:willAnimateCancelWithAnimator:");
}

id objc_msgSend_dragInteraction_previewForLiftingItem_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dragInteraction:previewForLiftingItem:session:");
}

id objc_msgSend_dragInteraction_session_didEndWithOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dragInteraction:session:didEndWithOperation:");
}

id objc_msgSend_dragInteraction_session_willAddItems_forInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dragInteraction:session:willAddItems:forInteraction:");
}

id objc_msgSend_dragItemsForDataSourceIndex_cellIndex_interaction_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dragItemsForDataSourceIndex:cellIndex:interaction:session:");
}

id objc_msgSend_draggedCellIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "draggedCellIDs");
}

id objc_msgSend_drawAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawAtPoint:");
}

id objc_msgSend_drawAtPoint_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawAtPoint:blendMode:alpha:");
}

id objc_msgSend_drawCenteredImaged_screenScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawCenteredImaged:screenScale:");
}

id objc_msgSend_drawInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:");
}

id objc_msgSend_drawInRect_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:blendMode:alpha:");
}

id objc_msgSend_drawLabelInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawLabelInRect:");
}

id objc_msgSend_drawSpecialGrayHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawSpecialGrayHighlights");
}

id objc_msgSend_dropInteraction_canHandleSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dropInteraction:canHandleSession:");
}

id objc_msgSend_dropInteraction_previewForDroppingItem_withDefault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dropInteraction:previewForDroppingItem:withDefault:");
}

id objc_msgSend_dropProposalForInteraction_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dropProposalForInteraction:session:");
}

id objc_msgSend_dummyCacheValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dummyCacheValue");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duration");
}

id objc_msgSend_ebookInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ebookInfo");
}

id objc_msgSend_edgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "edgeInsets");
}

id objc_msgSend_edgePanGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "edgePanGestureRecognizer");
}

id objc_msgSend_editorController_deleteAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:deleteAnnotation:");
}

id objc_msgSend_editorController_editNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:editNote:");
}

id objc_msgSend_editorController_editedAnnotation_toText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:editedAnnotation:toText:");
}

id objc_msgSend_editorController_isRightArrowEnabledForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:isRightArrowEnabledForAnnotation:");
}

id objc_msgSend_editorController_isSharingEnabledForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:isSharingEnabledForAnnotation:");
}

id objc_msgSend_editorController_setTheme_forAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:setTheme:forAnnotation:");
}

id objc_msgSend_editorController_shareAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:shareAnnotation:");
}

id objc_msgSend_editorController_showEditMenuForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:showEditMenuForAnnotation:");
}

id objc_msgSend_editsOnLaunch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editsOnLaunch");
}

id objc_msgSend_effect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effect");
}

id objc_msgSend_effectIdentifierWithRTL_style_content_nightMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectIdentifierWithRTL:style:content:nightMode:");
}

id objc_msgSend_effectWithPreview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithPreview:");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_effectiveBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveBackgroundView");
}

id objc_msgSend_effectiveGeometry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveGeometry");
}

id objc_msgSend_effectiveUserInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection");
}

id objc_msgSend_elementRegistry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elementRegistry");
}

id objc_msgSend_emitContextualActionSheetExposureEventWithTracker_startDate_propertyProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitContextualActionSheetExposureEventWithTracker:startDate:propertyProvider:");
}

id objc_msgSend_emitShareEventWithTracker_propertyProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitShareEventWithTracker:propertyProvider:");
}

id objc_msgSend_emitShareSheetExposureEventWithTracker_startDate_propertyProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitShareSheetExposureEventWithTracker:startDate:propertyProvider:");
}

id objc_msgSend_emitUnifiedMessageActionEventWithTracker_startDate_messageType_messageIdentifier_hasActionable_actionIdentifier_placementName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUnifiedMessageActionEventWithTracker:startDate:messageType:messageIdentifier:hasActionable:actionIdentifier:placementName:");
}

id objc_msgSend_emitUnifiedMessageExposureEventWithTracker_startDate_messageType_messageIdentifier_hasActionable_actionIdentifier_placementName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUnifiedMessageExposureEventWithTracker:startDate:messageType:messageIdentifier:hasActionable:actionIdentifier:placementName:");
}

id objc_msgSend_enableCloudSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableCloudSync");
}

id objc_msgSend_enableUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableUpdates");
}

id objc_msgSend_enabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enabled");
}

id objc_msgSend_encodeBytes_length_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBytes:length:forKey:");
}

id objc_msgSend_encodeInt_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInt:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_endAppearanceTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endAppearanceTransition");
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endBackgroundTask:");
}

id objc_msgSend_endEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing");
}

id objc_msgSend_endEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endEditing:");
}

id objc_msgSend_endOfBookExperienceFeatureEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOfBookExperienceFeatureEnabled");
}

id objc_msgSend_endPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endPosition");
}

id objc_msgSend_endPresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endPresentation:");
}

id objc_msgSend_endSeek(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSeek");
}

id objc_msgSend_endTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endTime");
}

id objc_msgSend_endTracking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endTracking:");
}

id objc_msgSend_endTransitionUpdateMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endTransitionUpdateMode");
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endUpdates");
}

id objc_msgSend_endingRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endingRect");
}

id objc_msgSend_enqueueBlocksForEntries_withChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueBlocksForEntries:withChange:");
}

id objc_msgSend_enqueueValueCall_arguments_file_line_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueValueCall:arguments:file:line:");
}

id objc_msgSend_ensureLayoutForTextContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ensureLayoutForTextContainer:");
}

id objc_msgSend_entity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity");
}

id objc_msgSend_entity_withPredicate_sortBy_ascending_fetchLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity:withPredicate:sortBy:ascending:fetchLimit:");
}

id objc_msgSend_entity_withPredicate_sortDescriptors_fetchLimit_prefetchRelationships_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:");
}

id objc_msgSend_entityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityForName:inManagedObjectContext:");
}

id objc_msgSend_entityName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityName");
}

id objc_msgSend_entries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entries");
}

id objc_msgSend_entry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entry");
}

id objc_msgSend_entryLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entryLocation");
}

id objc_msgSend_entryLocationForLevelID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entryLocationForLevelID:");
}

id objc_msgSend_entryLocationFromParameters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entryLocationFromParameters");
}

id objc_msgSend_entryLocationWithIdentifier_level_size_options_quality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entryLocationWithIdentifier:level:size:options:quality:");
}

id objc_msgSend_enumerateAllCardsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateAllCardsUsingBlock:");
}

id objc_msgSend_enumerateAttribute_inRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateAttribute:inRange:options:usingBlock:");
}

id objc_msgSend_enumerateIndexesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateIndexesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsWithOptions:usingBlock:");
}

id objc_msgSend_enumerateResultsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateResultsUsingBlock:");
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_enumeratorAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtPath:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "environment");
}

id objc_msgSend_epubID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "epubID");
}

id objc_msgSend_epubId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "epubId");
}

id objc_msgSend_epubTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "epubTheme");
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "error");
}

id objc_msgSend_errorCheck(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorCheck");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_evaluateWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithContext:");
}

id objc_msgSend_evaluateWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithObject:");
}

id objc_msgSend_exactSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exactSize");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_excerpt(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "excerpt");
}

id objc_msgSend_excludedActivityTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "excludedActivityTypes");
}

id objc_msgSend_execute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "execute:");
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeFetchRequest:error:");
}

id objc_msgSend_executeRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeRequest:error:");
}

id objc_msgSend_executeRequest_withContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeRequest:withContext:error:");
}

id objc_msgSend_existingObjectWithID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingObjectWithID:error:");
}

id objc_msgSend_expandInVC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandInVC:");
}

id objc_msgSend_expanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expanded");
}

id objc_msgSend_expandedActivityItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedActivityItems");
}

id objc_msgSend_expandedActivityItemsFromActivityItems_conformingToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedActivityItemsFromActivityItems:conformingToProtocol:");
}

id objc_msgSend_expandedCardViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedCardViewController");
}

id objc_msgSend_expandedItemProviders(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedItemProviders");
}

id objc_msgSend_expandedPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedPosition");
}

id objc_msgSend_expandedState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedState");
}

id objc_msgSend_expandedTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedTransform");
}

id objc_msgSend_expandingState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandingState");
}

id objc_msgSend_expectedDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedDate");
}

id objc_msgSend_expectedResultForJSOverride_andDefaultsOverride_defaultValue_forBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expectedResultForJSOverride:andDefaultsOverride:defaultValue:forBehavior:");
}

id objc_msgSend_experience(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experience");
}

id objc_msgSend_experiencePoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experiencePoint");
}

id objc_msgSend_expiration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expiration");
}

id objc_msgSend_expirationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expirationDate");
}

id objc_msgSend_expiry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expiry");
}

id objc_msgSend_exportAnnotationsMatchingPredicate_toURL_withType_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exportAnnotationsMatchingPredicate:toURL:withType:error:");
}

id objc_msgSend_expressionForConstantValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expressionForConstantValue:");
}

id objc_msgSend_expressionForEvaluatedObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expressionForEvaluatedObject");
}

id objc_msgSend_expressionForFunction_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expressionForFunction:arguments:");
}

id objc_msgSend_expressionForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expressionForKeyPath:");
}

id objc_msgSend_expressionResultType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expressionResultType");
}

id objc_msgSend_externalDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalDisplay");
}

id objc_msgSend_failedRecordIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "failedRecordIDs:completion:");
}

id objc_msgSend_fakeCoverSourceByIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fakeCoverSourceByIndex");
}

id objc_msgSend_fallbackStorefrontID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fallbackStorefrontID");
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "familyName");
}

id objc_msgSend_fetchAllImageSets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAllImageSets");
}

id objc_msgSend_fetchCGImageFor_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCGImageFor:forRequest:completion:");
}

id objc_msgSend_fetchCoverForURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCoverForURL:completion:");
}

id objc_msgSend_fetchCoverURLsFor_immediately_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCoverURLsFor:immediately:completion:");
}

id objc_msgSend_fetchEntryFromImageSet_matchingDescription_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchEntryFromImageSet:matchingDescription:forRequest:");
}

id objc_msgSend_fetchHistoryAfterToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchHistoryAfterToken:");
}

id objc_msgSend_fetchImageEntriesMatchingAddedEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImageEntriesMatchingAddedEntries:");
}

id objc_msgSend_fetchImageEntriesWithLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImageEntriesWithLocations:");
}

id objc_msgSend_fetchImageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImageForKey:");
}

id objc_msgSend_fetchImageForKey_canAcceptSurfaceBacked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImageForKey:canAcceptSurfaceBacked:");
}

id objc_msgSend_fetchImageSetsWithDescribedImages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImageSetsWithDescribedImages:");
}

id objc_msgSend_fetchImageSetsWithIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImageSetsWithIDs:");
}

id objc_msgSend_fetchImagesForEntry_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImagesForEntry:forRequest:completion:");
}

id objc_msgSend_fetchImagesFromImageEntry_matchingDescription_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImagesFromImageEntry:matchingDescription:forRequest:completion:");
}

id objc_msgSend_fetchImagesFromImageSet_matchingDescription_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImagesFromImageSet:matchingDescription:forRequest:completion:");
}

id objc_msgSend_fetchImagesMatchingDescription_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImagesMatchingDescription:forRequest:completion:");
}

id objc_msgSend_fetchItemsForStoreIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchItemsForStoreIDs:completion:");
}

id objc_msgSend_fetchMetadataForIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMetadataForIdentifier:completion:");
}

id objc_msgSend_fetchMixedAssetsWithBookIds_audiobookIds_relationships_views_additionalParameters_batchSize_metadata_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMixedAssetsWithBookIds:audiobookIds:relationships:views:additionalParameters:batchSize:metadata:completionHandler:");
}

id objc_msgSend_fetchMixedSeriesWithBookSeriesIds_audiobookSeriesIds_relationships_views_additionalParameters_batchSize_metadata_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchMixedSeriesWithBookSeriesIds:audiobookSeriesIds:relationships:views:additionalParameters:batchSize:metadata:completionHandler:");
}

id objc_msgSend_fetchRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequest");
}

id objc_msgSend_fetchRequestWithEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchRequestWithEntityName:");
}

id objc_msgSend_fetchResourcesWithAdamIDs_relationships_views_additionalParameters_batchSize_metadata_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchResourcesWithAdamIDs:relationships:views:additionalParameters:batchSize:metadata:completionHandler:");
}

id objc_msgSend_fetchSingleConfigurationWithSettings_completionQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchSingleConfigurationWithSettings:completionQueue:completion:");
}

id objc_msgSend_fetchStoreURLOfUnknownTypeForAdamID_metadata_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchStoreURLOfUnknownTypeForAdamID:metadata:completionHandler:");
}

id objc_msgSend_fetchUserQuotaWithTimeOut_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchUserQuotaWithTimeOut:completion:");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_filePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filePath");
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSize");
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSystemRepresentation");
}

id objc_msgSend_fileTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileTimestamp");
}

id objc_msgSend_fileURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURL");
}

id objc_msgSend_fileURLForCachingCKAssetWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLForCachingCKAssetWithAssetID:");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_filenameMatches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filenameMatches:");
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fill");
}

id objc_msgSend_fillBoundsTargetRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillBoundsTargetRect");
}

id objc_msgSend_fillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillColor");
}

id objc_msgSend_fillColorUsesTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillColorUsesTintColor");
}

id objc_msgSend_fillSizeForScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fillSizeForScale:");
}

id objc_msgSend_filterUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterUsingPredicate:");
}

id objc_msgSend_filterWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterWithType:");
}

id objc_msgSend_finalAnimationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finalAnimationType");
}

id objc_msgSend_finalFrameForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finalFrameForViewController:");
}

id objc_msgSend_finalize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finalize");
}

id objc_msgSend_finalizeForAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finalizeForAnimation");
}

id objc_msgSend_findFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findFirstResponder");
}

id objc_msgSend_fineScrubSpeedChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fineScrubSpeedChanged:");
}

id objc_msgSend_fineScrubbing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fineScrubbing");
}

id objc_msgSend_fineScrubbingVerticalRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fineScrubbingVerticalRange");
}

id objc_msgSend_finish(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finish");
}

id objc_msgSend_finishAnimationAtPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishAnimationAtPosition:");
}

id objc_msgSend_finishInteractiveTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishInteractiveTransition");
}

id objc_msgSend_fireTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fireTransition:");
}

id objc_msgSend_firstCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstCFI");
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstIndex");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_firstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstResponder");
}

id objc_msgSend_flattenedAnnotationString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flattenedAnnotationString");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_flushMemoryCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushMemoryCache");
}

id objc_msgSend_focusShapeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "focusShapeView");
}

id objc_msgSend_focusedIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "focusedIndex");
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "font");
}

id objc_msgSend_fontDescriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptor");
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithSymbolicTraits:");
}

id objc_msgSend_fontName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontName");
}

id objc_msgSend_fontScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontScale");
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_fontWithName_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithName:size:");
}

id objc_msgSend_fontWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithSize:");
}

id objc_msgSend_footerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footerView");
}

id objc_msgSend_footerViewForGridView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footerViewForGridView:");
}

id objc_msgSend_forceTouchCapability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceTouchCapability");
}

id objc_msgSend_forceTriggerTimeObserverAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceTriggerTimeObserverAt:");
}

id objc_msgSend_foregroundForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "foregroundForSize:");
}

id objc_msgSend_formUnionWithCharacterSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formUnionWithCharacterSet:");
}

id objc_msgSend_fractionComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fractionComplete");
}

id objc_msgSend_fragment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fragment");
}

id objc_msgSend_fragmentFilterSpecificationForDocumentLength_librarySpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fragmentFilterSpecificationForDocumentLength:librarySpecification:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_frameColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameColor");
}

id objc_msgSend_frameForAlignmentRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForAlignmentRect:");
}

id objc_msgSend_frameForCardAtIndex_inCoordinatesOfCardAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForCardAtIndex:inCoordinatesOfCardAtIndex:");
}

id objc_msgSend_frameWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameWidth");
}

id objc_msgSend_fromEndFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromEndFrame");
}

id objc_msgSend_fromJSON_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromJSON:");
}

id objc_msgSend_fromStartFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromStartFrame");
}

id objc_msgSend_fromView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromView");
}

id objc_msgSend_fromViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromViewController");
}

id objc_msgSend_fromViewSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromViewSnapshot");
}

id objc_msgSend_fullDifferenceFromRequest_toCandidateImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullDifferenceFromRequest:toCandidateImage:");
}

id objc_msgSend_fullLineRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullLineRect");
}

id objc_msgSend_functionWithControlPoints__::(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithControlPoints::::");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_futureProofing11(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureProofing11");
}

id objc_msgSend_futureProofing12(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "futureProofing12");
}

id objc_msgSend_gatherAllAssetAdamIDsInSeries_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherAllAssetAdamIDsInSeries:completion:");
}

id objc_msgSend_gatherPrunableItemsForLevel_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherPrunableItemsForLevel:withCompletion:");
}

id objc_msgSend_gatherPrunableItemsForMedium_level_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherPrunableItemsForMedium:level:withCompletion:");
}

id objc_msgSend_gatherPrunableItemsForMedium_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherPrunableItemsForMedium:withCompletion:");
}

id objc_msgSend_gatherPrunableItemsWithIdentifier_forLevel_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherPrunableItemsWithIdentifier:forLevel:withCompletion:");
}

id objc_msgSend_gatherPrunableItemsWithIdentifier_forMedium_level_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherPrunableItemsWithIdentifier:forMedium:level:withCompletion:");
}

id objc_msgSend_gatherPrunableItemsWithIdentifier_forMedium_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gatherPrunableItemsWithIdentifier:forMedium:withCompletion:");
}

id objc_msgSend_generateBestRepresentationForRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateBestRepresentationForRequest:completionHandler:");
}

id objc_msgSend_generateCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateCFI");
}

id objc_msgSend_generateImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateImage:");
}

id objc_msgSend_generation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generation");
}

id objc_msgSend_generationCacheKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generationCacheKey");
}

id objc_msgSend_generationValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generationValue:");
}

id objc_msgSend_genericRequestsInProcess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genericRequestsInProcess");
}

id objc_msgSend_genre(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genre");
}

id objc_msgSend_genreName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genreName");
}

id objc_msgSend_genres(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genres");
}

id objc_msgSend_gesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gesture");
}

id objc_msgSend_gestureHoverState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gestureHoverState");
}

id objc_msgSend_get_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "get:");
}

id objc_msgSend_getAnnotationChangesSince_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAnnotationChangesSince:completion:");
}

id objc_msgSend_getBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBytes:length:");
}

id objc_msgSend_getCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCharacters:");
}

id objc_msgSend_getCharacters_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCharacters:range:");
}

id objc_msgSend_getHue_saturation_brightness_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getHue:saturation:brightness:alpha:");
}

id objc_msgSend_getIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getIndexes:");
}

id objc_msgSend_getPrimaryImageForRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPrimaryImageForRequest:completion:");
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRed:green:blue:alpha:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getSortedBestMatchOf_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSortedBestMatchOf:completion:");
}

id objc_msgSend_getSortedBestMatchesOf_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSortedBestMatchesOf:forRequest:completion:");
}

id objc_msgSend_getValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getValue:");
}

id objc_msgSend_getWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getWhite:alpha:");
}

id objc_msgSend_glassView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "glassView");
}

id objc_msgSend_globalAnnotationForAssetID_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "globalAnnotationForAssetID:inManagedObjectContext:");
}

id objc_msgSend_goContracted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goContracted");
}

id objc_msgSend_goContractedInteractive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goContractedInteractive:");
}

id objc_msgSend_goContractedInteractive_withTiming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goContractedInteractive:withTiming:");
}

id objc_msgSend_goExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goExpanded");
}

id objc_msgSend_goExpandedInteractive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goExpandedInteractive:");
}

id objc_msgSend_gradientLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gradientLayer");
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "grayColor");
}

id objc_msgSend_greenTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "greenTheme:");
}

id objc_msgSend_gridInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridInset");
}

id objc_msgSend_gridView_canDeleteCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:canDeleteCellAtIndex:");
}

id objc_msgSend_gridView_canDragCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:canDragCellAtIndex:");
}

id objc_msgSend_gridView_canReorderCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:canReorderCellAtIndex:");
}

id objc_msgSend_gridView_cellForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:cellForIndex:");
}

id objc_msgSend_gridView_didSelectItemAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:didSelectItemAtIndex:");
}

id objc_msgSend_gridView_numberOfColumnsForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:numberOfColumnsForSize:");
}

id objc_msgSend_gridView_reorderCellAtIndex_toIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:reorderCellAtIndex:toIndex:");
}

id objc_msgSend_gridView_shouldDeleteItemAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:shouldDeleteItemAtIndex:");
}

id objc_msgSend_gridView_updateSelectedCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:updateSelectedCell:");
}

id objc_msgSend_gridView_willGrabCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:willGrabCell:");
}

id objc_msgSend_gridView_willSelectItemAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView:willSelectItemAtIndex:");
}

id objc_msgSend_gridViewDidReleaseGrabbedCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridViewDidReleaseGrabbedCell:");
}

id objc_msgSend_gripperEndingAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gripperEndingAlpha");
}

id objc_msgSend_gripperStartingAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gripperStartingAlpha");
}

id objc_msgSend_gripperView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gripperView");
}

id objc_msgSend_groupDescribedImagesByIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupDescribedImagesByIdentifier:");
}

id objc_msgSend_groupTableViewBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupTableViewBackgroundColor");
}

id objc_msgSend_grouping(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "grouping");
}

id objc_msgSend_guid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "guid");
}

id objc_msgSend_handleDialogResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleDialogResult:");
}

id objc_msgSend_handler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handler");
}

id objc_msgSend_hasAssetTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasAssetTypes");
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasChanges");
}

id objc_msgSend_hasDatabaseVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasDatabaseVersion");
}

id objc_msgSend_hasHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasHeight");
}

id objc_msgSend_hasImageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasImageForKey:");
}

id objc_msgSend_hasItemForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasItemForKey:");
}

id objc_msgSend_hasLargeBacklog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLargeBacklog");
}

id objc_msgSend_hasLocationCFIString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLocationCFIString");
}

id objc_msgSend_hasLocationModificationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLocationModificationDate");
}

id objc_msgSend_hasObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasObjectForKey:");
}

id objc_msgSend_hasPlUserData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPlUserData");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasRACSupport(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRACSupport");
}

id objc_msgSend_hasReadingProgressHighWaterMark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasReadingProgressHighWaterMark");
}

id objc_msgSend_hasRecentlyTriedToFetchShortStoreURLFromNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRecentlyTriedToFetchShortStoreURLFromNetwork");
}

id objc_msgSend_hasRecentlyTriedToFetchStoreURLFromNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRecentlyTriedToFetchStoreURLFromNetwork");
}

id objc_msgSend_hasSaltChangedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSaltChangedWithCompletion:");
}

id objc_msgSend_hasSelectedTextRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSelectedTextRange");
}

id objc_msgSend_hasSeriesTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSeriesTypes");
}

id objc_msgSend_hasStoreInCommonWith_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasStoreInCommonWith:");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasTooManyAuthors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTooManyAuthors");
}

id objc_msgSend_hasTooManyNarrators(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTooManyNarrators");
}

id objc_msgSend_hasUniqueAuthors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUniqueAuthors");
}

id objc_msgSend_hasUserModificationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUserModificationDate");
}

id objc_msgSend_hasValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasValue");
}

id objc_msgSend_hasWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasWidth");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hash");
}

id objc_msgSend_hashTableWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashTableWithOptions:");
}

id objc_msgSend_hashTableWithWeakObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashTableWithWeakObjects");
}

id objc_msgSend_haveTOCCFIIndices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haveTOCCFIIndices");
}

id objc_msgSend_haveTextNodeLengthIndices(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "haveTextNodeLengthIndices");
}

id objc_msgSend_headBody(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headBody");
}

id objc_msgSend_headCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headCFI");
}

id objc_msgSend_headerTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerTextColor");
}

id objc_msgSend_heatMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heatMap");
}

id objc_msgSend_height(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "height");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_heightForAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightForAspectRatio");
}

id objc_msgSend_helper_annotationProviderForURL_needsCoordination_forAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helper:annotationProviderForURL:needsCoordination:forAssetID:");
}

id objc_msgSend_helper_setMetadata_forKey_forURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helper:setMetadata:forKey:forURL:");
}

id objc_msgSend_helperCoverImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperCoverImage");
}

id objc_msgSend_helperDeletePersistentCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperDeletePersistentCache");
}

id objc_msgSend_helperForURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperForURL:withOptions:");
}

id objc_msgSend_helperMetadataForKey_needsCoordination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperMetadataForKey:needsCoordination:");
}

id objc_msgSend_helperMinifiedController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperMinifiedController");
}

id objc_msgSend_helperUpdateCachedURLTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperUpdateCachedURLTo:");
}

id objc_msgSend_helperValidateBookAuthorizationWithError_needsCoordination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperValidateBookAuthorizationWithError:needsCoordination:");
}

id objc_msgSend_helperViewControllerWithOptions_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperViewControllerWithOptions:completion:");
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hide");
}

id objc_msgSend_hideBarWithTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideBarWithTransition:");
}

id objc_msgSend_hideCardCoverSources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideCardCoverSources");
}

id objc_msgSend_hideThumbView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideThumbView");
}

id objc_msgSend_hidesNavigationBarDuringPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidesNavigationBarDuringPresentation");
}

id objc_msgSend_highPriorityWorkQ(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highPriorityWorkQ");
}

id objc_msgSend_highPriorityWorkQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highPriorityWorkQueue");
}

id objc_msgSend_highlight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlight");
}

id objc_msgSend_highlightBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightBackgroundColor");
}

id objc_msgSend_highlightColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightColor");
}

id objc_msgSend_highlightColorBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightColorBar");
}

id objc_msgSend_highlightColorBarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightColorBarFrame");
}

id objc_msgSend_highlightInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightInsets:");
}

id objc_msgSend_highlightLayers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightLayers");
}

id objc_msgSend_highlightOpacityForPageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightOpacityForPageTheme:");
}

id objc_msgSend_highlightView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightView");
}

id objc_msgSend_highlighted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlighted");
}

id objc_msgSend_highlightedAnnotationBlendMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedAnnotationBlendMode");
}

id objc_msgSend_highlightedMarginNoteMarkers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedMarginNoteMarkers");
}

id objc_msgSend_highlightedTextFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextFont");
}

id objc_msgSend_highlightedTextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextLabel");
}

id objc_msgSend_highlightedTextLabelFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextLabelFrame");
}

id objc_msgSend_highlightedThumb(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedThumb");
}

id objc_msgSend_historyToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "historyToken");
}

id objc_msgSend_historyTokenOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "historyTokenOffset");
}

id objc_msgSend_hitRectForThumb(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hitRectForThumb");
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hitTest:withEvent:");
}

id objc_msgSend_horizontalRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalRange");
}

id objc_msgSend_horizontalRangeIncludingFake(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalRangeIncludingFake");
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalSizeClass");
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "host");
}

id objc_msgSend_hoverInteraction_didChangeStateForRegionWithKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hoverInteraction:didChangeStateForRegionWithKeys:");
}

id objc_msgSend_hoverInteractionDidSettle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hoverInteractionDidSettle:");
}

id objc_msgSend_href(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "href");
}

id objc_msgSend_htmlHighlightForString_style_isUnderline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "htmlHighlightForString:style:isUnderline:");
}

id objc_msgSend_iCloudIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iCloudIdentity");
}

id objc_msgSend_iOSPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iOSPredicate");
}

id objc_msgSend_id(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "id");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_identifierFromEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifierFromEntryLocation:");
}

id objc_msgSend_identifiersByTaskID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifiersByTaskID");
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identity");
}

id objc_msgSend_idleTimerDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idleTimerDelay");
}

id objc_msgSend_idleTimerDisableRefCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idleTimerDisableRefCount");
}

id objc_msgSend_ignoreChildStatusBarStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreChildStatusBarStyle");
}

id objc_msgSend_ignoreContentOffsetForCardViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreContentOffsetForCardViewController:");
}

id objc_msgSend_ignoresTintColorAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoresTintColorAlpha");
}

id objc_msgSend_imIsHorizontalWritingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imIsHorizontalWritingMode");
}

id objc_msgSend_imIsVerticalWritingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imIsVerticalWritingMode");
}

id objc_msgSend_im_CGImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_CGImage");
}

id objc_msgSend_im_CGImages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_CGImages");
}

id objc_msgSend_im_ancestorConformingToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_ancestorConformingToProtocol:");
}

id objc_msgSend_im_ancestorValueForKey_conformingToProtocol_fromViewControllersConformingToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_ancestorValueForKey:conformingToProtocol:fromViewControllersConformingToProtocol:");
}

id objc_msgSend_im_ancestorViewControllerConformingToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_ancestorViewControllerConformingToProtocol:");
}

id objc_msgSend_im_ancestorViewControllerConformingToProtocol_includePresenting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_ancestorViewControllerConformingToProtocol:includePresenting:");
}

id objc_msgSend_im_bookshelfTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_bookshelfTheme");
}

id objc_msgSend_im_childValueForKey_conformingToProtocol_fromViewControllersConformingToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_childValueForKey:conformingToProtocol:fromViewControllersConformingToProtocol:");
}

id objc_msgSend_im_childViewControllerForTabBarVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_childViewControllerForTabBarVisibility");
}

id objc_msgSend_im_dismissChildViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_dismissChildViewController:animated:");
}

id objc_msgSend_im_effectiveViewControllerForTabBarVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_effectiveViewControllerForTabBarVisibility");
}

id objc_msgSend_im_enumerateVisibleChildrenConformingToProtocol_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_enumerateVisibleChildrenConformingToProtocol:block:");
}

id objc_msgSend_im_firstVisibleChildConformingToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_firstVisibleChildConformingToProtocol:");
}

id objc_msgSend_im_firstVisibleChildConformingToProtocol_includePresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_firstVisibleChildConformingToProtocol:includePresented:");
}

id objc_msgSend_im_firstVisibleChildConformingToProtocol_stopIfDescendentConformsToProtocol_includePresented_validateItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_firstVisibleChildConformingToProtocol:stopIfDescendentConformsToProtocol:includePresented:validateItem:");
}

id objc_msgSend_im_firstVisibleChildValidateWithItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_firstVisibleChildValidateWithItem:");
}

id objc_msgSend_im_frameEnvironmentBounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_frameEnvironmentBounds");
}

id objc_msgSend_im_imageWithCGImages_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_imageWithCGImages:size:");
}

id objc_msgSend_im_imageWithPixelSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_imageWithPixelSize:");
}

id objc_msgSend_im_imageWithSize_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_imageWithSize:options:");
}

id objc_msgSend_im_imageWithSize_preserveAspectRatio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_imageWithSize:preserveAspectRatio:");
}

id objc_msgSend_im_isAncestorOfChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_isAncestorOfChildViewController:");
}

id objc_msgSend_im_isCompactHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_isCompactHeight");
}

id objc_msgSend_im_isCompactWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_isCompactWidth");
}

id objc_msgSend_im_navigationController_dismissChildViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_navigationController:dismissChildViewController:animated:");
}

id objc_msgSend_im_notifyThemeDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_notifyThemeDidChange");
}

id objc_msgSend_im_overrideAncestorViewControllerForTabBarVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_overrideAncestorViewControllerForTabBarVisibility");
}

id objc_msgSend_im_performSafeAccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_performSafeAccess:");
}

id objc_msgSend_im_popSafeAccessState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_popSafeAccessState");
}

id objc_msgSend_im_propertiesDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_propertiesDescription");
}

id objc_msgSend_im_pushSafeAccessState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_pushSafeAccessState");
}

id objc_msgSend_im_recursiveDescriptionChildrenBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_recursiveDescriptionChildrenBlock:");
}

id objc_msgSend_im_snapshotInContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_snapshotInContext");
}

id objc_msgSend_im_stringByReplacingNewLinesWithHTMLBreaks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_stringByReplacingNewLinesWithHTMLBreaks");
}

id objc_msgSend_im_stringByStrippingHTML(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_stringByStrippingHTML");
}

id objc_msgSend_im_stringByUnescapingHTMLEntities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_stringByUnescapingHTMLEntities");
}

id objc_msgSend_im_stringWithPathRelativeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_stringWithPathRelativeTo:");
}

id objc_msgSend_im_tabBarVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_tabBarVisible");
}

id objc_msgSend_im_theme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_theme");
}

id objc_msgSend_im_themeDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_themeDidChange");
}

id objc_msgSend_im_uppercaseStringWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_uppercaseStringWithLocale:");
}

id objc_msgSend_im_visibleChildViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_visibleChildViewControllers");
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "image");
}

id objc_msgSend_imageButtonMarginOverride(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageButtonMarginOverride");
}

id objc_msgSend_imageCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageCache");
}

id objc_msgSend_imageColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageColor");
}

id objc_msgSend_imageColorARGBHex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageColorARGBHex");
}

id objc_msgSend_imageColorForIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageColorForIdentifier:completion:");
}

id objc_msgSend_imageComparator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageComparator");
}

id objc_msgSend_imageDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageDescription");
}

id objc_msgSend_imageEdgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageEdgeInsets");
}

id objc_msgSend_imageEntries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageEntries");
}

id objc_msgSend_imageForEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForEntryLocation:");
}

id objc_msgSend_imageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForKey:");
}

id objc_msgSend_imageForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForState:");
}

id objc_msgSend_imageGravity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageGravity");
}

id objc_msgSend_imageLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageLayer");
}

id objc_msgSend_imageMaskWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageMaskWithColor:");
}

id objc_msgSend_imageMatchingDescription_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageMatchingDescription:forRequest:");
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:inBundle:");
}

id objc_msgSend_imageNamed_inBundle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:inBundle:compatibleWithTraitCollection:");
}

id objc_msgSend_imageOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageOrientation");
}

id objc_msgSend_imageRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageRectForBounds:");
}

id objc_msgSend_imageRectForBounds_image_gravity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageRectForBounds:image:gravity:");
}

id objc_msgSend_imageRectForContentRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageRectForContentRect:");
}

id objc_msgSend_imageRefs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageRefs");
}

id objc_msgSend_imageRepository(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageRepository");
}

id objc_msgSend_imageSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSet");
}

id objc_msgSend_imageSetForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSetForIdentifier:");
}

id objc_msgSend_imageSetPersistence(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSetPersistence");
}

id objc_msgSend_imageSetPersisting_newVersionForImageSetIdentifierss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSetPersisting:newVersionForImageSetIdentifierss:");
}

id objc_msgSend_imageSetStorage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSetStorage");
}

id objc_msgSend_imageSetStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSetStore");
}

id objc_msgSend_imageSetWithEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSetWithEntry:");
}

id objc_msgSend_imageSets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSets");
}

id objc_msgSend_imageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSize");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageView");
}

id objc_msgSend_imageWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithActions:");
}

id objc_msgSend_imageWithAlignmentRectInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithAlignmentRectInsets:");
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:");
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:scale:orientation:");
}

id objc_msgSend_imageWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithConfiguration:");
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:");
}

id objc_msgSend_imageWithTintColor_renderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:renderingMode:");
}

id objc_msgSend_imagesInCacheSinceLaunch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imagesInCacheSinceLaunch");
}

id objc_msgSend_imagesProcessing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imagesProcessing");
}

id objc_msgSend_imaxAddSafeCategoryDependenciesToCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxAddSafeCategoryDependenciesToCollection:");
}

id objc_msgSend_imaxAncestorIsKindOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxAncestorIsKindOf:");
}

id objc_msgSend_imaxAnnotationNote(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxAnnotationNote");
}

id objc_msgSend_imaxAnnotationSelectedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxAnnotationSelectedText");
}

id objc_msgSend_imaxAnnotationStyleDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxAnnotationStyleDescription");
}

id objc_msgSend_imaxBaseSafeCategoryClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxBaseSafeCategoryClass");
}

id objc_msgSend_imaxBoolValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxBoolValueForKey:");
}

id objc_msgSend_imaxFindAncestor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxFindAncestor:");
}

id objc_msgSend_imaxHasNote(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxHasNote");
}

id objc_msgSend_imaxIdentification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxIdentification");
}

id objc_msgSend_imaxLocalizedNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxLocalizedNumber:");
}

id objc_msgSend_imaxLocalizedNumber_maximumNumberOfDigitsAfterDecimalSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxLocalizedNumber:maximumNumberOfDigitsAfterDecimalSeparator:");
}

id objc_msgSend_imaxLocalizedNumber_numberStyle_maximumNumberOfDigitsAfterDecimalSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxLocalizedNumber:numberStyle:maximumNumberOfDigitsAfterDecimalSeparator:");
}

id objc_msgSend_imaxLocalizedPercentage_maximumNumberOfDigitsAfterDecimalSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxLocalizedPercentage:maximumNumberOfDigitsAfterDecimalSeparator:");
}

id objc_msgSend_imaxLocalizedUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxLocalizedUnsignedInteger:");
}

id objc_msgSend_imaxSetIdentification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxSetIdentification:");
}

id objc_msgSend_imaxSetParentAnnotationPopoverViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxSetParentAnnotationPopoverViewController:");
}

id objc_msgSend_imaxTargetClassName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxTargetClassName");
}

id objc_msgSend_imaxValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxValueForKey:");
}

id objc_msgSend_imaxWholeAnnotationDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxWholeAnnotationDescription");
}

id objc_msgSend_immutableData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "immutableData");
}

id objc_msgSend_impressionStartTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "impressionStartTime");
}

id objc_msgSend_inUseCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inUseCount");
}

id objc_msgSend_includedActivityTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "includedActivityTypes");
}

id objc_msgSend_includesCapSpace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "includesCapSpace");
}

id objc_msgSend_increaseCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "increaseCount");
}

id objc_msgSend_incrementCounter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementCounter:");
}

id objc_msgSend_incrementVersionForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementVersionForIdentifier:");
}

id objc_msgSend_incrementVersionForIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementVersionForIdentifiers:");
}

id objc_msgSend_index(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "index");
}

id objc_msgSend_indexForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexForCell:");
}

id objc_msgSend_indexForX_Y_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexForX:Y:");
}

id objc_msgSend_indexGreaterThanIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexGreaterThanIndex:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObject_inSortedRange_options_usingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:inSortedRange:options:usingComparator:");
}

id objc_msgSend_indexOfObjectIdenticalTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectIdenticalTo:");
}

id objc_msgSend_indexPathForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForCell:");
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexPathForRowPreceedingIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRowPreceedingIndexPath:");
}

id objc_msgSend_indexSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSet");
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndexesInRange:");
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoDictionary");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init");
}

id objc_msgSend_initCommon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initCommon");
}

id objc_msgSend_initFromArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFromArchive:");
}

id objc_msgSend_initWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:");
}

id objc_msgSend_initWithAction_forIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAction:forIndex:");
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithActivityItems_applicationActivities_shareType_propertySource_tracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityItems:applicationActivities:shareType:propertySource:tracker:");
}

id objc_msgSend_initWithActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityType:");
}

id objc_msgSend_initWithAdamIDs_keyProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdamIDs:keyProfile:");
}

id objc_msgSend_initWithAdded_updated_deleted_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdded:updated:deleted:context:");
}

id objc_msgSend_initWithAnimationCurve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnimationCurve:");
}

id objc_msgSend_initWithAnimations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnimations:completion:");
}

id objc_msgSend_initWithAnimator_context_waitUntilReadyBlock_setupBeforeAnimationBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnimator:context:waitUntilReadyBlock:setupBeforeAnimationBlock:");
}

id objc_msgSend_initWithAnnotation_propertyProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnnotation:propertyProvider:");
}

id objc_msgSend_initWithAnnotationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnnotationProvider:");
}

id objc_msgSend_initWithAnnotationStyle_contentScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnnotationStyle:contentScale:");
}

id objc_msgSend_initWithAnnotationStyle_contentScale_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnnotationStyle:contentScale:cornerRadius:");
}

id objc_msgSend_initWithAnnotations_propertySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnnotations:propertySource:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetID:");
}

id objc_msgSend_initWithAssetID_assetURL_bookVersionString_pathToAssetContextDirectory_isManagedBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetID:assetURL:bookVersionString:pathToAssetContextDirectory:isManagedBook:");
}

id objc_msgSend_initWithAssetID_versionString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetID:versionString:");
}

id objc_msgSend_initWithAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAttributedString:");
}

id objc_msgSend_initWithBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBackgroundColor:");
}

id objc_msgSend_initWithBag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBag:");
}

id objc_msgSend_initWithBag_caller_keyProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBag:caller:keyProfile:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithBookMetadataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBookMetadataProvider:");
}

id objc_msgSend_initWithBoundsSize_requestHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBoundsSize:requestHandler:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCFI:");
}

id objc_msgSend_initWithCFI_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCFI:error:");
}

id objc_msgSend_initWithCFIArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCFIArray:");
}

id objc_msgSend_initWithCFIString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCFIString:");
}

id objc_msgSend_initWithCFIStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCFIStrings:");
}

id objc_msgSend_initWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCGImage:");
}

id objc_msgSend_initWithCachePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCachePath:");
}

id objc_msgSend_initWithCalendarIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCalendarIdentifier:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCardStackViewController_isDismiss_cardSetViewController_focusedIndex_coverHost_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCardStackViewController:isDismiss:cardSetViewController:focusedIndex:coverHost:dataSource:");
}

id objc_msgSend_initWithCharactersNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCharactersNoCopy:length:freeWhenDone:");
}

id objc_msgSend_initWithCloudDataSource_entityName_notificationName_immutableClass_mutableClass_syncManager_cloudKitController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:");
}

id objc_msgSend_initWithCloudKitController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCloudKitController:");
}

id objc_msgSend_initWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCompletion:");
}

id objc_msgSend_initWithConcurrencyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConcurrencyType:");
}

id objc_msgSend_initWithConfiguration_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:predicate:");
}

id objc_msgSend_initWithContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContent:");
}

id objc_msgSend_initWithContentDirectoryURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentDirectoryURL:");
}

id objc_msgSend_initWithContentOffset_contentScrollViewContentOffset_viewSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentOffset:contentScrollViewContentOffset:viewSize:");
}

id objc_msgSend_initWithContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentViewController:");
}

id objc_msgSend_initWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfFile:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithControlPoint1_controlPoint2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithControlPoint1:controlPoint2:");
}

id objc_msgSend_initWithCoverFrame_referenceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoverFrame:referenceView:");
}

id objc_msgSend_initWithCurrentIdentity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCurrentIdentity");
}

id objc_msgSend_initWithCustomCurve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCustomCurve:");
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCustomView:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_MIMEType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:MIMEType:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithDatabase_catalogService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabase:catalogService:");
}

id objc_msgSend_initWithDatabaseHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDatabaseHandle:");
}

id objc_msgSend_initWithDebugLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDebugLayout:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_package_manager_identifierMap_environment_state_feedId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:package:manager:identifierMap:environment:state:feedId:");
}

id objc_msgSend_initWithDelegate_propertySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:propertySource:");
}

id objc_msgSend_initWithDescribedImage_imageEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDescribedImage:imageEntry:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDictionary:");
}

id objc_msgSend_initWithDisableAbTesting_overrideSegmentSetIDs_additionalSegmentSetIDs_configurationSource_debugEnvironment_ignoreCache_enableExtraLogs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDisableAbTesting:overrideSegmentSetIDs:additionalSegmentSetIDs:configurationSource:debugEnvironment:ignoreCache:enableExtraLogs:");
}

id objc_msgSend_initWithDocument_filterSpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDocument:filterSpecification:");
}

id objc_msgSend_initWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDouble:");
}

id objc_msgSend_initWithDuration_curve_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDuration:curve:animations:");
}

id objc_msgSend_initWithDuration_timingParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDuration:timingParameters:");
}

id objc_msgSend_initWithDynamicProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDynamicProvider:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithEntityName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntityName:");
}

id objc_msgSend_initWithEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEnvironment:");
}

id objc_msgSend_initWithFetchRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFetchRequest:");
}

id objc_msgSend_initWithFileAtURL_size_scale_representationTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileAtURL:size:scale:representationTypes:");
}

id objc_msgSend_initWithFileExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileExtension:");
}

id objc_msgSend_initWithFileID_line_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileID:line:");
}

id objc_msgSend_initWithFilePath_targetQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFilePath:targetQueue:");
}

id objc_msgSend_initWithFilePresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFilePresenter:");
}

id objc_msgSend_initWithFileURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileURL:");
}

id objc_msgSend_initWithFilterSpecification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFilterSpecification:");
}

id objc_msgSend_initWithFireDate_interval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFireDate:interval:target:selector:userInfo:repeats:");
}

id objc_msgSend_initWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFloat:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:arguments:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_generateHighlight_generateHighlightAsynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:generateHighlight:generateHighlightAsynchronously:");
}

id objc_msgSend_initWithFrame_privateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:privateStyle:");
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:style:");
}

id objc_msgSend_initWithFrame_textContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:textContainer:");
}

id objc_msgSend_initWithFromViewController_toViewController_push_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFromViewController:toViewController:push:");
}

id objc_msgSend_initWithHighPriorityTargetQueue_backgroundTargetQueue_renderer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHighPriorityTargetQueue:backgroundTargetQueue:renderer:");
}

id objc_msgSend_initWithHighPriorityTargetQueue_backgroundTargetQueue_transformer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHighPriorityTargetQueue:backgroundTargetQueue:transformer:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_basePath_memorySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:basePath:memorySize:");
}

id objc_msgSend_initWithIdentifier_intrinsicAspectRatio_imageColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:intrinsicAspectRatio:imageColor:");
}

id objc_msgSend_initWithIdentifier_pageRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:pageRange:");
}

id objc_msgSend_initWithIdentifier_title_score_maxScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:title:score:maxScore:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithImage_key_format_persistentCachePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:key:format:persistentCachePath:");
}

id objc_msgSend_initWithImage_landscapeImagePhone_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:landscapeImagePhone:style:target:action:");
}

id objc_msgSend_initWithImageRefs_imageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImageRefs:imageSize:");
}

id objc_msgSend_initWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInt:");
}

id objc_msgSend_initWithInterfaceOrientations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInterfaceOrientations:");
}

id objc_msgSend_initWithIsExpanded_viewSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIsExpanded:viewSize:");
}

id objc_msgSend_initWithItemProvider_properties_placeholderImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItemProvider:properties:placeholderImage:");
}

id objc_msgSend_initWithKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:");
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:ascending:");
}

id objc_msgSend_initWithKeyOptions_valueOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKeyOptions:valueOptions:capacity:");
}

id objc_msgSend_initWithKind_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKind:details:");
}

id objc_msgSend_initWithLayer_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLayer:orientation:");
}

id objc_msgSend_initWithLevelID_comparator_dataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLevelID:comparator:dataStore:");
}

id objc_msgSend_initWithLevelID_highPriorityTargetQueue_backgroundTargetQueue_imageSetStore_comparator_nextCacheLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLevelID:highPriorityTargetQueue:backgroundTargetQueue:imageSetStore:comparator:nextCacheLevel:");
}

id objc_msgSend_initWithLevelID_imageSetPersistence_comparator_dataStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLevelID:imageSetPersistence:comparator:dataStore:");
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocaleIdentifier:");
}

id objc_msgSend_initWithLocationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocationDictionary:");
}

id objc_msgSend_initWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLongLong:");
}

id objc_msgSend_initWithMOC_zoneName_cloudKitController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMOC:zoneName:cloudKitController:");
}

id objc_msgSend_initWithMainContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMainContext:");
}

id objc_msgSend_initWithManagedObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManagedObjectModel:");
}

id objc_msgSend_initWithManagedObjectModel_nameOnDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManagedObjectModel:nameOnDisk:");
}

id objc_msgSend_initWithManager_database_catalogService_onFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManager:database:catalogService:onFinished:");
}

id objc_msgSend_initWithMarkupText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMarkupText:");
}

id objc_msgSend_initWithMass_stiffness_damping_initialVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMass:stiffness:damping:initialVelocity:");
}

id objc_msgSend_initWithName_managedObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:managedObjectModel:");
}

id objc_msgSend_initWithNavigationControllerClass_cardSetData_distanceToExpand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNavigationControllerClass:cardSetData:distanceToExpand:");
}

id objc_msgSend_initWithNotifyBlock_blockDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNotifyBlock:blockDescription:");
}

id objc_msgSend_initWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjectsAndKeys:");
}

id objc_msgSend_initWithObserver_factory_manager_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObserver:factory:manager:delegate:");
}

id objc_msgSend_initWithOptions_queue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:queue:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPath_maxSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:maxSize:");
}

id objc_msgSend_initWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPattern:options:error:");
}

id objc_msgSend_initWithPersistenStoreDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersistenStoreDirectory:");
}

id objc_msgSend_initWithPersistentStore_comparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersistentStore:comparator:");
}

id objc_msgSend_initWithPersistentStoreURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPersistentStoreURL:");
}

id objc_msgSend_initWithPlainTextString_htmlString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlainTextString:htmlString:");
}

id objc_msgSend_initWithPlugins_forUrl_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlugins:forUrl:withOptions:");
}

id objc_msgSend_initWithPrivateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrivateStyle:");
}

id objc_msgSend_initWithProcessInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProcessInfo:");
}

id objc_msgSend_initWithProfileDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithProfileDictionary:");
}

id objc_msgSend_initWithPropertySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPropertySource:");
}

id objc_msgSend_initWithQueue_andBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithQueue:andBlock:");
}

id objc_msgSend_initWithRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRegistry:");
}

id objc_msgSend_initWithRenderer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRenderer:");
}

id objc_msgSend_initWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:");
}

id objc_msgSend_initWithRequest_placement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:placement:");
}

id objc_msgSend_initWithRequest_placement_messageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:placement:messageType:");
}

id objc_msgSend_initWithRequestKey_responseKey_fallbackURL_userID_storefrontID_bundleID_deviceInfo_debugOverrides_requestMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequestKey:responseKey:fallbackURL:userID:storefrontID:bundleID:deviceInfo:debugOverrides:requestMode:");
}

id objc_msgSend_initWithRootActivityItems_expandedActivityItems_applicationActivities_sharingStyle_customActivityTypeOrder_customShareActivityTitle_appAnalyticsProvider_tracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootActivityItems:expandedActivityItems:applicationActivities:sharingStyle:customActivityTypeOrder:customShareActivityTitle:appAnalyticsProvider:tracker:");
}

id objc_msgSend_initWithScrubber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithScrubber:");
}

id objc_msgSend_initWithServiceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithServiceName:");
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:");
}

id objc_msgSend_initWithSize_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:format:");
}

id objc_msgSend_initWithSize_hasWidth_hasHeight_exactSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:hasWidth:hasHeight:exactSize:");
}

id objc_msgSend_initWithSpecification_hashProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSpecification:hashProvider:");
}

id objc_msgSend_initWithStatement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStatement:");
}

id objc_msgSend_initWithStatusBarBackgroundController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStatusBarBackgroundController:");
}

id objc_msgSend_initWithStoreID_contentType_storeURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStoreID:contentType:storeURL:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:reuseIdentifier:");
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSuiteName:");
}

id objc_msgSend_initWithTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTarget_action_watchView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:watchView:");
}

id objc_msgSend_initWithTitle_actionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:actionBlock:");
}

id objc_msgSend_initWithTitle_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:block:");
}

id objc_msgSend_initWithTitle_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:target:action:");
}

id objc_msgSend_initWithToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithToken:");
}

id objc_msgSend_initWithTraitCollection_viewController_viewSize_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTraitCollection:viewController:viewSize:windowSize:");
}

id objc_msgSend_initWithTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTransaction:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_allowsCardExpansion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:allowsCardExpansion:");
}

id objc_msgSend_initWithType_identifier_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:identifier:title:");
}

id objc_msgSend_initWithType_subpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:subpredicates:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:resolvingAgainstBaseURL:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_initWithUTI_resolutionBlock_thumbnailResolutionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUTI:resolutionBlock:thumbnailResolutionBlock:");
}

id objc_msgSend_initWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnsignedLongLong:");
}

id objc_msgSend_initWithUrlScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUrlScheme:");
}

id objc_msgSend_initWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithValue:");
}

id objc_msgSend_initWithView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithView:");
}

id objc_msgSend_initWithView_flags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithView:flags:");
}

id objc_msgSend_initWithViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithViewController:");
}

id objc_msgSend_initWithViewController_configurationEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithViewController:configurationEnvironment:");
}

id objc_msgSend_initWithZoneDataManager_tokenController_databaseController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneDataManager:tokenController:databaseController:");
}

id objc_msgSend_initWithZoneName_ownerName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZoneName:ownerName:");
}

id objc_msgSend_initalizeAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initalizeAnimation");
}

id objc_msgSend_initialFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialFrame");
}

id objc_msgSend_initialFrameForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialFrameForViewController:");
}

id objc_msgSend_initialVelocity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialVelocity");
}

id objc_msgSend_initiallyInteractive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initiallyInteractive");
}

id objc_msgSend_innerBorderColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "innerBorderColor");
}

id objc_msgSend_innerBorderLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "innerBorderLayer");
}

id objc_msgSend_innerRectSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "innerRectSize");
}

id objc_msgSend_inscribeProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inscribeProgress");
}

id objc_msgSend_insertAnnotationWithAssetID_creatorIdentifier_annotationUuid_intoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertAnnotationWithAssetID:creatorIdentifier:annotationUuid:intoManagedObjectContext:");
}

id objc_msgSend_insertCGImage_forKey_mimeType_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertCGImage:forKey:mimeType:properties:");
}

id objc_msgSend_insertCGImages_forKey_mimeType_baseSize_properties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertCGImages:forKey:mimeType:baseSize:properties:");
}

id objc_msgSend_insertData_forKey_mimeType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertData:forKey:mimeType:");
}

id objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertNewObjectForEntityForName:inManagedObjectContext:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertSeriesCheckWithAdamId_intoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSeriesCheckWithAdamId:intoManagedObjectContext:");
}

id objc_msgSend_insertSeriesContainerWithSeriesAdamId_intoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSeriesContainerWithSeriesAdamId:intoManagedObjectContext:");
}

id objc_msgSend_insertSeriesItemWithAdamId_seriesAdamId_intoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSeriesItemWithAdamId:seriesAdamId:intoManagedObjectContext:");
}

id objc_msgSend_insertStoreItemWithAdamId_intoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertStoreItemWithAdamId:intoManagedObjectContext:");
}

id objc_msgSend_insertString_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertString:atIndex:");
}

id objc_msgSend_insertSublayer_above_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSublayer:above:");
}

id objc_msgSend_insertSublayer_below_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSublayer:below:");
}

id objc_msgSend_insertSubview_aboveSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:aboveSubview:");
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:atIndex:");
}

id objc_msgSend_insertSubview_belowSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:belowSubview:");
}

id objc_msgSend_insertedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertedObjects");
}

id objc_msgSend_insertionHeaderSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertionHeaderSection");
}

id objc_msgSend_insetsForHighlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insetsForHighlight:");
}

id objc_msgSend_instanceMethodForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instanceMethodForSelector:");
}

id objc_msgSend_instancesRespondToSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instancesRespondToSelector:");
}

id objc_msgSend_instantiateTemplate_bindings_actionObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "instantiateTemplate:bindings:actionObject:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_interactivePopGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interactivePopGestureRecognizer");
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceOrientation");
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_interruptibleAnimatorForTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interruptibleAnimatorForTransition:");
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_intersectWithCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectWithCFI:");
}

id objc_msgSend_intersects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersects:");
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsSet:");
}

id objc_msgSend_intraOrdinalOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intraOrdinalOrder");
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intrinsicContentSize");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invalidateEntries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateEntries");
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

id objc_msgSend_invalidateNumberOfColumns(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateNumberOfColumns");
}

id objc_msgSend_invertedContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertedContent");
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertedSet");
}

id objc_msgSend_invocationWithMethodSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invocationWithMethodSignature:");
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invoke");
}

id objc_msgSend_invokeWithTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeWithTarget:");
}

id objc_msgSend_isAlsSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAlsSupported");
}

id objc_msgSend_isAlternateGeneric(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAlternateGeneric");
}

id objc_msgSend_isAnimated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnimated");
}

id objc_msgSend_isAnnotationDeleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnotationDeleted");
}

id objc_msgSend_isAnnotationSyncOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnotationSyncOptedIn");
}

id objc_msgSend_isAssetOfflineWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAssetOfflineWithAssetID:");
}

id objc_msgSend_isAtEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAtEnd");
}

id objc_msgSend_isAudiobook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAudiobook");
}

id objc_msgSend_isAudiobookTrackContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAudiobookTrackContentType:");
}

id objc_msgSend_isBKBookmarkCreatorIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBKBookmarkCreatorIdentifier:");
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingDismissed");
}

id objc_msgSend_isBeingPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingPresented");
}

id objc_msgSend_isBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBook");
}

id objc_msgSend_isBookStoreAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBookStoreAllowed");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCancelled");
}

id objc_msgSend_isCandidate_smallerThan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCandidate:smallerThan:");
}

id objc_msgSend_isCloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCloud");
}

id objc_msgSend_isCloudKitSyncOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCloudKitSyncOptedIn");
}

id objc_msgSend_isCollectionSyncOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCollectionSyncOptedIn");
}

id objc_msgSend_isCompactHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompactHeight");
}

id objc_msgSend_isCompactWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompactWidth");
}

id objc_msgSend_isCompressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompressed");
}

id objc_msgSend_isContentDiscarded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContentDiscarded");
}

id objc_msgSend_isCurrentCard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentCard");
}

id objc_msgSend_isCurrentlyInteractive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentlyInteractive");
}

id objc_msgSend_isDate_inSameDayAsDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDate:inSameDayAsDate:");
}

id objc_msgSend_isDecelerating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDecelerating");
}

id objc_msgSend_isDeleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeleted");
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDescendantOfView:");
}

id objc_msgSend_isDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDismiss");
}

id objc_msgSend_isDismissingCardStack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDismissingCardStack");
}

id objc_msgSend_isDisplayClassSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDisplayClassSize");
}

id objc_msgSend_isDownloading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDownloading");
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDragging");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditing");
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnabled");
}

id objc_msgSend_isEnterpriseBookMetadataSyncAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnterpriseBookMetadataSyncAllowed");
}

id objc_msgSend_isEphemeral(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEphemeral");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToAttributedString:");
}

id objc_msgSend_isEqualToDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDay:");
}

id objc_msgSend_isEqualToDescribedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDescribedImage:");
}

id objc_msgSend_isEqualToDescribedImagePair_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDescribedImagePair:");
}

id objc_msgSend_isEqualToEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToEnvironment:");
}

id objc_msgSend_isEqualToLayoutConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToLayoutConfiguration:");
}

id objc_msgSend_isEqualToLayoutConfigurationEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToLayoutConfigurationEnvironment:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExpanded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExpanded");
}

id objc_msgSend_isExpired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExpired");
}

id objc_msgSend_isExplicit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExplicit");
}

id objc_msgSend_isExplicitContentAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExplicitContentAllowed");
}

id objc_msgSend_isExternalPlaybackActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExternalPlaybackActive");
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFileURL");
}

id objc_msgSend_isFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFinished");
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFirstResponder");
}

id objc_msgSend_isFocusedCard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFocusedCard");
}

id objc_msgSend_isFocusedCover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFocusedCover");
}

id objc_msgSend_isForPrint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isForPrint");
}

id objc_msgSend_isFragmentEpubCFIFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFragmentEpubCFIFunction:");
}

id objc_msgSend_isFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFuture");
}

id objc_msgSend_isGeneric(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGeneric");
}

id objc_msgSend_isGenericSeriesStack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGenericSeriesStack");
}

id objc_msgSend_isGlobalICloudDriveSyncOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGlobalICloudDriveSyncOptedIn");
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHidden");
}

id objc_msgSend_isHighlighted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHighlighted");
}

id objc_msgSend_isHorizontal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHorizontal");
}

id objc_msgSend_isHovering(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHovering");
}

id objc_msgSend_isICloudDriveEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isICloudDriveEnabled");
}

id objc_msgSend_isICloudDriveEnabledForBooks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isICloudDriveEnabledForBooks");
}

id objc_msgSend_isICloudDriveSyncOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isICloudDriveSyncOptedIn");
}

id objc_msgSend_isIdleTimerDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isIdleTimerDisabled");
}

id objc_msgSend_isInNonHorizontalLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInNonHorizontalLayout");
}

id objc_msgSend_isInTransitionUpdateMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInTransitionUpdateMode");
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInternalInstall");
}

id objc_msgSend_isKeyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isKeyWindow");
}

id objc_msgSend_isLandscape(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLandscape");
}

id objc_msgSend_isLiverpoolAndUbiquityEnabledWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLiverpoolAndUbiquityEnabledWithReply:");
}

id objc_msgSend_isLocal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocal");
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocked");
}

id objc_msgSend_isLowQuality(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLowQuality");
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMainThread");
}

id objc_msgSend_isManagedBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isManagedBook");
}

id objc_msgSend_isManagedWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isManagedWithAssetID:");
}

id objc_msgSend_isMatching_withCandidateImage_includeQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMatching:withCandidateImage:includeQuality:");
}

id objc_msgSend_isMatching_withGenericImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMatching:withGenericImage:");
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isMultitaskingSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMultitaskingSupported");
}

id objc_msgSend_isNavigationBarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNavigationBarHidden");
}

id objc_msgSend_isNotLocal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNotLocal");
}

id objc_msgSend_isOffline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOffline");
}

id objc_msgSend_isOldVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOldVersion");
}

id objc_msgSend_isOnExperiencePage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOnExperiencePage");
}

id objc_msgSend_isOnScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOnScreen");
}

id objc_msgSend_isOpaque(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOpaque");
}

id objc_msgSend_isOrdered(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOrdered");
}

id objc_msgSend_isPaused(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPaused");
}

id objc_msgSend_isPlaybackBufferEmpty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPlaybackBufferEmpty");
}

id objc_msgSend_isPlaybackLikelyToKeepUp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPlaybackLikelyToKeepUp");
}

id objc_msgSend_isPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPlaying");
}

id objc_msgSend_isPrefetchCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPrefetchCancelled");
}

id objc_msgSend_isPreorder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPreorder");
}

id objc_msgSend_isPresentationTransitionCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresentationTransitionCompleted");
}

id objc_msgSend_isPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPresented");
}

id objc_msgSend_isPrimaryAccountManagedAppleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPrimaryAccountManagedAppleID");
}

id objc_msgSend_isProgressValid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProgressValid");
}

id objc_msgSend_isProof(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProof");
}

id objc_msgSend_isRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRange");
}

id objc_msgSend_isReadingNowSyncOptedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReadingNowSyncOptedIn");
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReady");
}

id objc_msgSend_isReversed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReversed");
}

id objc_msgSend_isRunning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRunning");
}

id objc_msgSend_isRunningInStoreDemoMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRunningInStoreDemoMode");
}

id objc_msgSend_isRunningTest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRunningTest");
}

id objc_msgSend_isSG(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSG");
}

id objc_msgSend_isSample(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSample");
}

id objc_msgSend_isScrubberDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScrubberDisabled");
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSelected");
}

id objc_msgSend_isSelectedTextRepeatedInRepresentativeTextForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSelectedTextRepeatedInRepresentativeTextForAnnotation:");
}

id objc_msgSend_isSeries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSeries");
}

id objc_msgSend_isSeriesStackWithGenerics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSeriesStackWithGenerics");
}

id objc_msgSend_isSignedIntoICloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSignedIntoICloud");
}

id objc_msgSend_isSingleState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSingleState");
}

id objc_msgSend_isStarted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStarted");
}

id objc_msgSend_isStatusBarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStatusBarHidden");
}

id objc_msgSend_isStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStore");
}

id objc_msgSend_isStoreAccountManagedAppleID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStoreAccountManagedAppleID");
}

id objc_msgSend_isStoreAsset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStoreAsset");
}

id objc_msgSend_isStoreAudiobook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStoreAudiobook");
}

id objc_msgSend_isStoreURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStoreURL");
}

id objc_msgSend_isStoreURL_29693365(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStoreURL_29693365");
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSubclassOfClass:");
}

id objc_msgSend_isSupplementalContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSupplementalContent");
}

id objc_msgSend_isSupportedInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSupportedInterfaceOrientation:");
}

id objc_msgSend_isTimestampNewerThanMaxDeletedAge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTimestampNewerThanMaxDeletedAge:");
}

id objc_msgSend_isTimestampTrustworthy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTimestampTrustworthy:");
}

id objc_msgSend_isToday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isToday");
}

id objc_msgSend_isTopCardSetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTopCardSetViewController:");
}

id objc_msgSend_isTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTracking");
}

id objc_msgSend_isTransformableMatch_withCandidateImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTransformableMatch:withCandidateImage:");
}

id objc_msgSend_isUnderline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUnderline");
}

id objc_msgSend_isUndesirableImageData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUndesirableImageData:error:");
}

id objc_msgSend_isUnknownCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUnknownCFI");
}

id objc_msgSend_isUploaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUploaded");
}

id objc_msgSend_isUploading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUploading");
}

id objc_msgSend_isUserInteractionEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUserInteractionEnabled");
}

id objc_msgSend_isUserSignedInToiCloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUserSignedInToiCloud");
}

id objc_msgSend_isValidForDeserialization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidForDeserialization:");
}

id objc_msgSend_isValidForSerialization(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidForSerialization");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isViewLoaded");
}

id objc_msgSend_isWhitespace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWhitespace");
}

id objc_msgSend_isWorking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWorking");
}

id objc_msgSend_isWritableFileAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isWritableFileAtPath:");
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "item");
}

id objc_msgSend_itemFetchProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemFetchProperties");
}

id objc_msgSend_itemIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemIdentifiers");
}

id objc_msgSend_itemProviderSource_shouldShareActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemProviderSource:shouldShareActivityType:");
}

id objc_msgSend_itemPushedOnCard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemPushedOnCard");
}

id objc_msgSend_itemPushedOnCardAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemPushedOnCardAtIndex:");
}

id objc_msgSend_ixStoreSheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ixStoreSheet");
}

id objc_msgSend_ixStoreSheetBooks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ixStoreSheetBooks");
}

id objc_msgSend_javascriptConfiguration_updatedKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "javascriptConfiguration:updatedKeys:");
}

id objc_msgSend_jiggleWhenEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jiggleWhenEditing");
}

id objc_msgSend_jsBridge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jsBridge");
}

id objc_msgSend_jsSubscribers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jsSubscribers");
}

id objc_msgSend_jsa_sharedApplicationIfNotExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jsa_sharedApplicationIfNotExtension");
}

id objc_msgSend_jsa_valueWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jsa_valueWithCompletion:");
}

id objc_msgSend_jsa_valueWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jsa_valueWithError:");
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "key");
}

id objc_msgSend_keyColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyColor");
}

id objc_msgSend_keyCommandWithInput_modifierFlags_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyCommandWithInput:modifierFlags:action:");
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyEnumerator");
}

id objc_msgSend_keyForAssetID_prefix_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyForAssetID:prefix:size:");
}

id objc_msgSend_keyForSize_withBaseKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyForSize:withBaseKey:");
}

id objc_msgSend_keyboardAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyboardAppearance");
}

id objc_msgSend_keyboardVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyboardVisible");
}

id objc_msgSend_keys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keys");
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kind");
}

id objc_msgSend_landscapePredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "landscapePredicate");
}

id objc_msgSend_languageIsArabic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsArabic:");
}

id objc_msgSend_languageIsBengali_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsBengali:");
}

id objc_msgSend_languageIsDevanagari_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsDevanagari:");
}

id objc_msgSend_languageIsGujarati_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsGujarati:");
}

id objc_msgSend_languageIsGurmukhi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsGurmukhi:");
}

id objc_msgSend_languageIsHebrew_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsHebrew:");
}

id objc_msgSend_languageIsHongKongChinese_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsHongKongChinese:");
}

id objc_msgSend_languageIsInuktitut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsInuktitut:");
}

id objc_msgSend_languageIsJapanese_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsJapanese:");
}

id objc_msgSend_languageIsKannada_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsKannada:");
}

id objc_msgSend_languageIsKorean_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsKorean:");
}

id objc_msgSend_languageIsMalayalam_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsMalayalam:");
}

id objc_msgSend_languageIsOriya_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsOriya:");
}

id objc_msgSend_languageIsSimplifiedChinese_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsSimplifiedChinese:");
}

id objc_msgSend_languageIsSinhala_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsSinhala:");
}

id objc_msgSend_languageIsTamil_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsTamil:");
}

id objc_msgSend_languageIsTelugu_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsTelugu:");
}

id objc_msgSend_languageIsThai_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsThai:");
}

id objc_msgSend_languageIsTibetan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsTibetan:");
}

id objc_msgSend_languageIsTraditionalChinese_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsTraditionalChinese:");
}

id objc_msgSend_largerTextConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "largerTextConstraints");
}

id objc_msgSend_largerThan(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "largerThan");
}

id objc_msgSend_lastArchivedUbiquityIdentityToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastArchivedUbiquityIdentityToken");
}

id objc_msgSend_lastCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastCFI");
}

id objc_msgSend_lastCachedFreeBytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastCachedFreeBytes");
}

id objc_msgSend_lastEventDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastEventDate");
}

id objc_msgSend_lastIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastIndex");
}

id objc_msgSend_lastKnownScrollEndCardIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastKnownScrollEndCardIndex");
}

id objc_msgSend_lastModificationFromDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastModificationFromDictionaryRepresentation:");
}

id objc_msgSend_lastNavigationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastNavigationType");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastOpenDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastOpenDate");
}

id objc_msgSend_lastOpenedDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastOpenedDate");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_lastUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastUpdate");
}

id objc_msgSend_lastUsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastUsed");
}

id objc_msgSend_lastUsedTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastUsedTime");
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "laterDate:");
}

id objc_msgSend_launches(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launches");
}

id objc_msgSend_launchesRequiredToPurge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchesRequiredToPurge");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_layers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layers");
}

id objc_msgSend_layout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layout:");
}

id objc_msgSend_layoutContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutContent");
}

id objc_msgSend_layoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutDirection");
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutFrame");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutLines");
}

id objc_msgSend_layoutManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutManager");
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMarginsGuide");
}

id objc_msgSend_layoutSubviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutSubviews");
}

id objc_msgSend_leading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leading");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftAnchor");
}

id objc_msgSend_leftArrowButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftArrowButton");
}

id objc_msgSend_leftBarButtonItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftBarButtonItems");
}

id objc_msgSend_leftPageLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftPageLabel");
}

id objc_msgSend_leftPageShortenString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftPageShortenString");
}

id objc_msgSend_leftPageString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftPageString");
}

id objc_msgSend_legacyBookmarkKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "legacyBookmarkKey");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_lengthProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lengthProvider");
}

id objc_msgSend_lettersForSelectedTextForAnnotation_inSentence_possibleLength_highlightedRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lettersForSelectedTextForAnnotation:inSentence:possibleLength:highlightedRange:");
}

id objc_msgSend_level(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "level");
}

id objc_msgSend_level1(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "level1");
}

id objc_msgSend_level2(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "level2");
}

id objc_msgSend_level4(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "level4");
}

id objc_msgSend_levelID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "levelID");
}

id objc_msgSend_libraryDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "libraryDelegate");
}

id objc_msgSend_lightLevelDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightLevelDidChange:");
}

id objc_msgSend_limit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "limit");
}

id objc_msgSend_lineBreakMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineBreakMode");
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineHeight");
}

id objc_msgSend_lineWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineWidth");
}

id objc_msgSend_lines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lines");
}

id objc_msgSend_linkColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkColor");
}

id objc_msgSend_linkItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkItemAtURL:toURL:error:");
}

id objc_msgSend_listenDefaultTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "listenDefaultTitle");
}

id objc_msgSend_loadCacheMetaData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadCacheMetaData");
}

id objc_msgSend_loadCoreData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadCoreData");
}

id objc_msgSend_loadDataWithTypeIdentifier_forItemProviderCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadDataWithTypeIdentifier:forItemProviderCompletionHandler:");
}

id objc_msgSend_loadImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadImageView");
}

id objc_msgSend_loadManagedObjectModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadManagedObjectModel");
}

id objc_msgSend_loadPersistentStoreCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadPersistentStoreCoordinator");
}

id objc_msgSend_loadPersistentStoresWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadPersistentStoresWithCompletionHandler:");
}

id objc_msgSend_loadState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadState");
}

id objc_msgSend_loadToView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadToView");
}

id objc_msgSend_loadValuesAsynchronouslyForKeys_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadValuesAsynchronouslyForKeys:completionHandler:");
}

id objc_msgSend_loadedTimeRanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadedTimeRanges");
}

id objc_msgSend_loadingProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadingProgress");
}

id objc_msgSend_localFileURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localFileURL");
}

id objc_msgSend_localIdentifierFromRecord_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localIdentifierFromRecord:");
}

id objc_msgSend_localPersistentStoreLoader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localPersistentStoreLoader");
}

id objc_msgSend_localVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localVersion");
}

id objc_msgSend_localWiFiStatusForFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localWiFiStatusForFlags:");
}

id objc_msgSend_localizedColorNameStringForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedColorNameStringForStyle:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedDescription");
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedFailureReason");
}

id objc_msgSend_localizedRecoveryOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedRecoveryOptions");
}

id objc_msgSend_localizedRecoverySuggestion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedRecoverySuggestion");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_locateActionWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locateActionWithIdentifier:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "location");
}

id objc_msgSend_locationCFIString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationCFIString");
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_locationModificationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationModificationDate");
}

id objc_msgSend_lock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lock");
}

id objc_msgSend_lockChildForStatusBarStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockChildForStatusBarStyle");
}

id objc_msgSend_lockedChildForStatusBarStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lockedChildForStatusBarStyle");
}

id objc_msgSend_logDescribedImage_withComment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logDescribedImage:withComment:");
}

id objc_msgSend_logOperation_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logOperation:forRequest:");
}

id objc_msgSend_logRecursively(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logRecursively");
}

id objc_msgSend_logger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logger");
}

id objc_msgSend_longDateStringFromDateNoRel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longDateStringFromDateNoRel:");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longLongValue");
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longValue");
}

id objc_msgSend_lookup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lookup");
}

id objc_msgSend_lookupResultPromise(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lookupResultPromise");
}

id objc_msgSend_lowPriorityTarget(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowPriorityTarget");
}

id objc_msgSend_lowPriorityWorkQ(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowPriorityWorkQ");
}

id objc_msgSend_lowPriorityWorkQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowPriorityWorkQueue");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_mailLikeDescriptionFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mailLikeDescriptionFromDate:");
}

id objc_msgSend_mainAppContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainAppContext");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainQueue");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeKeyAndVisible");
}

id objc_msgSend_managedBooksAllowedToSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedBooksAllowedToSync");
}

id objc_msgSend_managedBooksMapWithAssetIDs_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedBooksMapWithAssetIDs:completion:");
}

id objc_msgSend_managedObjectBackgroundMonitor_didSaveNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectBackgroundMonitor:didSaveNotify:");
}

id objc_msgSend_managedObjectBackgroundMonitor_fetchNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectBackgroundMonitor:fetchNotify:");
}

id objc_msgSend_managedObjectBackgroundMonitor_willSaveNotify_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectBackgroundMonitor:willSaveNotify:");
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectContext");
}

id objc_msgSend_managedObjectModel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectModel");
}

id objc_msgSend_managedObjectModelBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectModelBundle");
}

id objc_msgSend_managedObjectModelName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectModelName");
}

id objc_msgSend_manager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manager");
}

id objc_msgSend_manualCompletion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manualCompletion");
}

id objc_msgSend_mapTableWithKeyOptions_valueOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapTableWithKeyOptions:valueOptions:");
}

id objc_msgSend_mapTableWithStrongToStrongObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapTableWithStrongToStrongObjects");
}

id objc_msgSend_mappedAssetContentType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mappedAssetContentType");
}

id objc_msgSend_mappedAssetID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mappedAssetID");
}

id objc_msgSend_marginNoteAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "marginNoteAtPoint:");
}

id objc_msgSend_marginNoteMarkers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "marginNoteMarkers");
}

id objc_msgSend_markAsOldImageForEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markAsOldImageForEntryLocation:");
}

id objc_msgSend_markEntriesAsStored_notStored_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markEntriesAsStored:notStored:completion:");
}

id objc_msgSend_mask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mask");
}

id objc_msgSend_mass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mass");
}

id objc_msgSend_masterImageKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "masterImageKey");
}

id objc_msgSend_matchScore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchScore");
}

id objc_msgSend_maxAnnotationVersionForAssetsWithPredicate_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxAnnotationVersionForAssetsWithPredicate:inManagedObjectContext:");
}

id objc_msgSend_maxAnnotationVersionInMOC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxAnnotationVersionInMOC:");
}

id objc_msgSend_maxCardWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxCardWidth");
}

id objc_msgSend_maxCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxCount");
}

id objc_msgSend_maxDeletedAge(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxDeletedAge");
}

id objc_msgSend_maxExpressionDescriptionForProperty_expressionName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxExpressionDescriptionForProperty:expressionName:");
}

id objc_msgSend_maxInstanceCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxInstanceCount");
}

id objc_msgSend_maxModificationDateColumnName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxModificationDateColumnName");
}

id objc_msgSend_maxModificationDateExpressionDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxModificationDateExpressionDescription");
}

id objc_msgSend_maxSlideDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxSlideDistance");
}

id objc_msgSend_maxTitleSlideDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxTitleSlideDistance");
}

id objc_msgSend_maxWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxWidth");
}

id objc_msgSend_maximumCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumCFI");
}

id objc_msgSend_maximumCFICount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumCFICount");
}

id objc_msgSend_maximumNumberOfLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumNumberOfLines");
}

id objc_msgSend_maximumValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumValue");
}

id objc_msgSend_menuItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuItems");
}

id objc_msgSend_menuTitleColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuTitleColor");
}

id objc_msgSend_menuTitleFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuTitleFont");
}

id objc_msgSend_menuWithTitle_children_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithTitle:children:");
}

id objc_msgSend_mergeAnnotation_withServerAnnotation_moc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeAnnotation:withServerAnnotation:moc:");
}

id objc_msgSend_mergeChangesFromContextDidSaveNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergeChangesFromContextDidSaveNotification:");
}

id objc_msgSend_messageId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageId");
}

id objc_msgSend_messageType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageType");
}

id objc_msgSend_messageViewController_didFailWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageViewController:didFailWithError:");
}

id objc_msgSend_messageViewController_didSelectActionWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageViewController:didSelectActionWithURL:");
}

id objc_msgSend_messageViewControllerDidSelectCancel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messageViewControllerDidSelectCancel:");
}

id objc_msgSend_messagesAlreadyDisplayed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "messagesAlreadyDisplayed");
}

id objc_msgSend_metaData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metaData");
}

id objc_msgSend_metadataDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataDictionary");
}

id objc_msgSend_metadataDictionaryDirty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataDictionaryDirty");
}

id objc_msgSend_metadataForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataForIdentifier:");
}

id objc_msgSend_metadataForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataForKey:");
}

id objc_msgSend_metadataForPersistentStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataForPersistentStore:");
}

id objc_msgSend_metadataMigrationVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataMigrationVersion");
}

id objc_msgSend_metadataObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataObjectForKey:");
}

id objc_msgSend_metadataValueForKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataValueForKey:completion:");
}

id objc_msgSend_methodReturnType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodReturnType");
}

id objc_msgSend_methodSignature(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodSignature");
}

id objc_msgSend_methodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodSignatureForSelector:");
}

id objc_msgSend_metrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metrics");
}

id objc_msgSend_metricsEvent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsEvent");
}

id objc_msgSend_metricsForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsForTextStyle:");
}

id objc_msgSend_metricsTemplateURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsTemplateURL");
}

id objc_msgSend_mightContainFragment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mightContainFragment:");
}

id objc_msgSend_mightContainKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mightContainKey:");
}

id objc_msgSend_migrateCacheAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateCacheAt:");
}

id objc_msgSend_migrateFromPersistentStoreCoordinator_toPersistentStoreCoordinator_withPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrateFromPersistentStoreCoordinator:toPersistentStoreCoordinator:withPredicate:");
}

id objc_msgSend_migrationHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "migrationHandler");
}

id objc_msgSend_mimeForIMRenderingCacheSerializeFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mimeForIMRenderingCacheSerializeFormat:");
}

id objc_msgSend_minCPLForSpreadPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minCPLForSpreadPages");
}

id objc_msgSend_minInstanceCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minInstanceCount");
}

id objc_msgSend_minimumBoundingBox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumBoundingBox");
}

id objc_msgSend_minimumCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumCFI");
}

id objc_msgSend_minimumValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumValue");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_moc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moc");
}

id objc_msgSend_modalPresentationStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modalPresentationStyle");
}

id objc_msgSend_modernDictionaryRepresentationForAnnotationsMatchingPredicate_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modernDictionaryRepresentationForAnnotationsMatchingPredicate:inManagedObjectContext:");
}

id objc_msgSend_modificationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modificationDate");
}

id objc_msgSend_modifyAnnotationsWithUUIDs_type_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "modifyAnnotationsWithUUIDs:type:performBlock:");
}

id objc_msgSend_monitorCallback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitorCallback");
}

id objc_msgSend_monitoringEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monitoringEnabled");
}

id objc_msgSend_monospacedDigitSystemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monospacedDigitSystemFontOfSize:weight:");
}

id objc_msgSend_month(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "month");
}

id objc_msgSend_moveItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveItemAtURL:toURL:error:");
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveToPoint:");
}

id objc_msgSend_mq_trackedAssetForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mq_trackedAssetForAssetID:");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_mutableString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableString");
}

id objc_msgSend_mutableUserInfoCreateIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableUserInfoCreateIfNeeded:");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_namespaceIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "namespaceIdentifier");
}

id objc_msgSend_narratorCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "narratorCount");
}

id objc_msgSend_narratorNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "narratorNames");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationSkrimView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationSkrimView");
}

id objc_msgSend_needsFadeInOnDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsFadeInOnDismiss");
}

id objc_msgSend_needsNewVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsNewVersion");
}

id objc_msgSend_networkStatusForFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "networkStatusForFlags:");
}

id objc_msgSend_newBackgroundContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newBackgroundContext");
}

id objc_msgSend_newBookmarkDictionarysArray_modern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newBookmarkDictionarysArray:modern:");
}

id objc_msgSend_newByClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newByClass:");
}

id objc_msgSend_newCompletionHandlerWithWorkItem_onQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newCompletionHandlerWithWorkItem:onQueue:");
}

id objc_msgSend_newManagedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newManagedObjectContext");
}

id objc_msgSend_newManagedObjectContextWithClass_concurrencyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newManagedObjectContextWithClass:concurrencyType:");
}

id objc_msgSend_newMaskView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newMaskView:");
}

id objc_msgSend_newOperationWithImage_size_contentsScale_priority_options_waitForCPUSynchronization_logKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newOperationWithImage:size:contentsScale:priority:options:waitForCPUSynchronization:logKey:completion:");
}

id objc_msgSend_newOperationWithImages_filters_size_contentsScale_waitForCPUSynchronization_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newOperationWithImages:filters:size:contentsScale:waitForCPUSynchronization:completion:");
}

id objc_msgSend_newPrivateQueueManagedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPrivateQueueManagedObjectContext");
}

id objc_msgSend_newlineCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newlineCharacterSet");
}

id objc_msgSend_nextCacheLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextCacheLevel");
}

id objc_msgSend_nextDiskPruneDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextDiskPruneDate");
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextObject");
}

id objc_msgSend_nextRamPruneDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextRamPruneDate");
}

id objc_msgSend_nextResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextResponder");
}

id objc_msgSend_nextRowAsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextRowAsArray");
}

id objc_msgSend_nextRowAsDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextRowAsDictionary");
}

id objc_msgSend_noSyncURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noSyncURL");
}

id objc_msgSend_nonShadowArea(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nonShadowArea");
}

id objc_msgSend_normalBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalBackgroundColor");
}

id objc_msgSend_notPredicateWithSubpredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notPredicateWithSubpredicate:");
}

id objc_msgSend_note(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "note");
}

id objc_msgSend_noteBorderColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteBorderColor");
}

id objc_msgSend_noteEditorViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteEditorViewController");
}

id objc_msgSend_noteEditorViewControllerAnnotationToEdit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteEditorViewControllerAnnotationToEdit:");
}

id objc_msgSend_noteEditorViewControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteEditorViewControllerDidEndEditing:");
}

id objc_msgSend_noteFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteFillColor");
}

id objc_msgSend_noteMarkerBorderColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteMarkerBorderColor");
}

id objc_msgSend_noteMarkerFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteMarkerFillColor");
}

id objc_msgSend_noteMarkerHasBorder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteMarkerHasBorder");
}

id objc_msgSend_noteMarkerStrikethroughColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteMarkerStrikethroughColor");
}

id objc_msgSend_noteTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteTextColor");
}

id objc_msgSend_notesProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notesProvider");
}

id objc_msgSend_notesSidebarBarColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notesSidebarBarColor");
}

id objc_msgSend_notifyAllCardsAboutMessageDisplayed_from_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyAllCardsAboutMessageDisplayed:from:");
}

id objc_msgSend_notifyQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyQueue");
}

id objc_msgSend_notifyTransitionDidEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyTransitionDidEnd");
}

id objc_msgSend_notifyTransitionWillStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyTransitionWillStart");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "now");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "null");
}

id objc_msgSend_numConcurrentWorkItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numConcurrentWorkItems");
}

id objc_msgSend_numberFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberFromString:");
}

id objc_msgSend_numberOfArguments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfArguments");
}

id objc_msgSend_numberOfCards_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfCards:");
}

id objc_msgSend_numberOfCellsInGridView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfCellsInGridView:");
}

id objc_msgSend_numberOfColumns(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfColumns");
}

id objc_msgSend_numberOfCommonSteps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfCommonSteps");
}

id objc_msgSend_numberOfEndSteps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfEndSteps");
}

id objc_msgSend_numberOfEntries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfEntries");
}

id objc_msgSend_numberOfLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfLines");
}

id objc_msgSend_numberOfRows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRows");
}

id objc_msgSend_numberOfRowsForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRowsForSize:");
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRowsInSection:");
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSections");
}

id objc_msgSend_numberOfSectionsInTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSectionsInTableView:");
}

id objc_msgSend_numberOfStartSteps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfStartSteps");
}

id objc_msgSend_numberValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberValue");
}

id objc_msgSend_numberValueForKey_domain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberValueForKey:domain:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithShort_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithShort:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objCType");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectEnumerator");
}

id objc_msgSend_objectForAnnotationStyle_propertyName_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForAnnotationStyle:propertyName:pageTheme:");
}

id objc_msgSend_objectForInfoDictionaryKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForInfoDictionaryKey:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectForThemeItem_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForThemeItem:pageTheme:");
}

id objc_msgSend_objectsHoldingIdleTimerDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsHoldingIdleTimerDisabled");
}

id objc_msgSend_observer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observer");
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observers");
}

id objc_msgSend_observersHash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observersHash");
}

id objc_msgSend_offScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "offScreen");
}

id objc_msgSend_offer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "offer");
}

id objc_msgSend_okButtonTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "okButtonTitle");
}

id objc_msgSend_oldestDateForUpgrade(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldestDateForUpgrade");
}

id objc_msgSend_oldestDateToAvoidPurgeOfBooks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldestDateToAvoidPurgeOfBooks");
}

id objc_msgSend_oldestDateToAvoidPurgeOfSamples(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldestDateToAvoidPurgeOfSamples");
}

id objc_msgSend_oldestDateToKeepFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "oldestDateToKeepFinished");
}

id objc_msgSend_onAnnotationsMatchingPredicate_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onAnnotationsMatchingPredicate:performBlock:");
}

id objc_msgSend_onFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onFinished");
}

id objc_msgSend_onScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onScreen");
}

id objc_msgSend_onSeekTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onSeekTimer:");
}

id objc_msgSend_openBooks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openBooks");
}

id objc_msgSend_opening(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "opening");
}

id objc_msgSend_operationKind(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationKind");
}

id objc_msgSend_operationQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationQueue");
}

id objc_msgSend_operationToLogString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationToLogString:");
}

id objc_msgSend_operationToWatchdogTimerMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationToWatchdogTimerMap");
}

id objc_msgSend_operationWithKind_subject_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationWithKind:subject:request:");
}

id objc_msgSend_operationWithKind_subject_result_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationWithKind:subject:result:request:");
}

id objc_msgSend_operationWithKind_vendedImageInterest_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationWithKind:vendedImageInterest:request:");
}

id objc_msgSend_operationWithKind_vendedImageInterest_subject_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationWithKind:vendedImageInterest:subject:request:");
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operations");
}

id objc_msgSend_operationsFromInterestInDescribedImages_comparator_imageRequest_vendedImageInterest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationsFromInterestInDescribedImages:comparator:imageRequest:vendedImageInterest:");
}

id objc_msgSend_operationsLog(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationsLog");
}

id objc_msgSend_optimizationTargetProportion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optimizationTargetProportion");
}

id objc_msgSend_optimizePerformanceOverAccuracy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optimizePerformanceOverAccuracy");
}

id objc_msgSend_optimizedRepresentativeTextForSerialization_selectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optimizedRepresentativeTextForSerialization:selectedText:");
}

id objc_msgSend_optimizedSelectedTextForSerialization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optimizedSelectedTextForSerialization:");
}

id objc_msgSend_optionalKeysForDictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optionalKeysForDictionaryRepresentation");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "options");
}

id objc_msgSend_orderedSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orderedSet");
}

id objc_msgSend_orderedTOCEntryCFICache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orderedTOCEntryCFICache");
}

id objc_msgSend_ordinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ordinal");
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orientation");
}

id objc_msgSend_originForCellAtX_Y_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originForCellAtX:Y:");
}

id objc_msgSend_originalRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originalRequest");
}

id objc_msgSend_originatingSceneController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originatingSceneController");
}

id objc_msgSend_outerBorderColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outerBorderColor");
}

id objc_msgSend_outerBorderLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outerBorderLayer");
}

id objc_msgSend_outerContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outerContext");
}

id objc_msgSend_outputs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outputs");
}

id objc_msgSend_overrideAlgorithm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideAlgorithm");
}

id objc_msgSend_overrideHasBorder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideHasBorder");
}

id objc_msgSend_overridePercentage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overridePercentage");
}

id objc_msgSend_overridePersistentDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overridePersistentDirectory");
}

id objc_msgSend_overrideProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideProvider");
}

id objc_msgSend_overrideUserInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideUserInterfaceStyle");
}

id objc_msgSend_overrides(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrides");
}

id objc_msgSend_ownerFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ownerFrame");
}

id objc_msgSend_ownerScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ownerScale");
}

id objc_msgSend_ownerSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ownerSize");
}

id objc_msgSend_p2LaunchAudioBookStorePathPatterns(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p2LaunchAudioBookStorePathPatterns");
}

id objc_msgSend_p2LaunchEbookstoreHostPatterns(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p2LaunchEbookstoreHostPatterns");
}

id objc_msgSend_p2LaunchEbookstorePathPatterns(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p2LaunchEbookstorePathPatterns");
}

id objc_msgSend_p_assetAuthorForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_assetAuthorForStoreId:dataSource:");
}

id objc_msgSend_p_assetCategoryForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_assetCategoryForStoreId:dataSource:");
}

id objc_msgSend_p_assetTitleForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_assetTitleForStoreId:dataSource:");
}

id objc_msgSend_p_borderWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_borderWidth");
}

id objc_msgSend_p_boundingRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_boundingRect");
}

id objc_msgSend_p_buildPaletteImageForFrontTag_middleTag_backTag_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_buildPaletteImageForFrontTag:middleTag:backTag:pageTheme:");
}

id objc_msgSend_p_buttonTagForTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_buttonTagForTheme:");
}

id objc_msgSend_p_colorControlImageForColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_colorControlImageForColor:");
}

id objc_msgSend_p_colorControlImageForColor_withForegroundImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_colorControlImageForColor:withForegroundImage:");
}

id objc_msgSend_p_colorControlImageForTag_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_colorControlImageForTag:pageTheme:");
}

id objc_msgSend_p_colorControlUnderlineImageForPageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_colorControlUnderlineImageForPageTheme:");
}

id objc_msgSend_p_colorForTag_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_colorForTag:pageTheme:");
}

id objc_msgSend_p_containerFrameForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_containerFrameForView:");
}

id objc_msgSend_p_currentLineRectForLine_ofHighlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_currentLineRectForLine:ofHighlight:");
}

id objc_msgSend_p_didShow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_didShow");
}

id objc_msgSend_p_downloadEmailContentForStoreId_dataSource_overrideClientVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_downloadEmailContentForStoreId:dataSource:overrideClientVersion:");
}

id objc_msgSend_p_downloadedStoreUrlForStoreId_keyProfile_path_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_downloadedStoreUrlForStoreId:keyProfile:path:dataSource:");
}

id objc_msgSend_p_drawColorControlCircleWithFrame_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_drawColorControlCircleWithFrame:color:");
}

id objc_msgSend_p_drawCrescentWithCircleRect_color_leftShift_addRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_drawCrescentWithCircleRect:color:leftShift:addRadius:");
}

id objc_msgSend_p_ensureDirectoryPathExists_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_ensureDirectoryPathExists:");
}

id objc_msgSend_p_ensureTextViewLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_ensureTextViewLayout");
}

id objc_msgSend_p_filenameForOfflineDBWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_filenameForOfflineDBWithAssetID:");
}

id objc_msgSend_p_generatedEmailBodyForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_generatedEmailBodyForStoreId:dataSource:");
}

id objc_msgSend_p_hasBorder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_hasBorder");
}

id objc_msgSend_p_highlightForContainerLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_highlightForContainerLayer:");
}

id objc_msgSend_p_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_init");
}

id objc_msgSend_p_isConnectedToInternet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_isConnectedToInternet");
}

id objc_msgSend_p_isDownloadEnabledForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_isDownloadEnabledForStoreId:dataSource:");
}

id objc_msgSend_p_isLocalGenerationEnabledForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_isLocalGenerationEnabledForStoreId:dataSource:");
}

id objc_msgSend_p_keyForPrefix_storeId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_keyForPrefix:storeId:");
}

id objc_msgSend_p_lineRectsForHighlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_lineRectsForHighlight:");
}

id objc_msgSend_p_marginNoteIntersectingRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_marginNoteIntersectingRect:");
}

id objc_msgSend_p_markerColor_withEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_markerColor:withEffect:");
}

id objc_msgSend_p_monochromaticImageFromImage_withColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_monochromaticImageFromImage:withColor:");
}

id objc_msgSend_p_noteGlyphForTag_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_noteGlyphForTag:pageTheme:");
}

id objc_msgSend_p_orderHighlights_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_orderHighlights:");
}

id objc_msgSend_p_paletteImageForTag_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_paletteImageForTag:pageTheme:");
}

id objc_msgSend_p_paletteImageWithFrontColor_middleColor_backColor_frontForegroundImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_paletteImageWithFrontColor:middleColor:backColor:frontForegroundImage:");
}

id objc_msgSend_p_permittedArrowDirectionsWithRect_view_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_permittedArrowDirectionsWithRect:view:");
}

id objc_msgSend_p_popoverSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_popoverSize");
}

id objc_msgSend_p_postDeleteConfirmation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_postDeleteConfirmation");
}

id objc_msgSend_p_removeAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_removeAnnotation:");
}

id objc_msgSend_p_renderHighlightLayer_inContext_flippingOriginWithY_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_renderHighlightLayer:inContext:flippingOriginWithY:");
}

id objc_msgSend_p_renderLinesForHighlight_intoContainerLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_renderLinesForHighlight:intoContainerLayer:");
}

id objc_msgSend_p_setFrame_onViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_setFrame:onViewController:");
}

id objc_msgSend_p_setStyle_forAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_setStyle:forAnnotation:");
}

id objc_msgSend_p_shouldShowCompactMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_shouldShowCompactMenu");
}

id objc_msgSend_p_shouldShowShareButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_shouldShowShareButton");
}

id objc_msgSend_p_storeShortURLForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_storeShortURLForStoreId:dataSource:");
}

id objc_msgSend_p_storeURLForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_storeURLForStoreId:dataSource:");
}

id objc_msgSend_p_textColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_textColor");
}

id objc_msgSend_p_themeForStyle_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_themeForStyle:pageTheme:");
}

id objc_msgSend_p_underlineForegroundImageForContextMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_underlineForegroundImageForContextMenu");
}

id objc_msgSend_p_underlineForegroundImageForPageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_underlineForegroundImageForPageTheme:");
}

id objc_msgSend_p_updateAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_updateAppearance");
}

id objc_msgSend_p_updateLayerColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_updateLayerColors");
}

id objc_msgSend_p_updateLayerDimensions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_updateLayerDimensions");
}

id objc_msgSend_p_updateLayerLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_updateLayerLayout");
}

id objc_msgSend_p_willHide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_willHide");
}

id objc_msgSend_p_willShow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_willShow");
}

id objc_msgSend_package(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "package");
}

id objc_msgSend_packageWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "packageWithURL:");
}

id objc_msgSend_pageCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCount");
}

id objc_msgSend_pageIndexOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageIndexOffset");
}

id objc_msgSend_pageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumber");
}

id objc_msgSend_pageNumberLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberLabel");
}

id objc_msgSend_pageNumberStringForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberStringForAnnotation:");
}

id objc_msgSend_pageProgressionIsRTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageProgressionIsRTL");
}

id objc_msgSend_pageRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageRange");
}

id objc_msgSend_pageTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageTheme");
}

id objc_msgSend_paginationDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationDataSource");
}

id objc_msgSend_pagingWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagingWidth");
}

id objc_msgSend_pairsToKeyMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pairsToKeyMap");
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "panGestureRecognizer");
}

id objc_msgSend_parent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parent");
}

id objc_msgSend_parentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentView");
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parentViewController");
}

id objc_msgSend_parseCFI_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseCFI:error:");
}

id objc_msgSend_passthroughView_shouldAcceptHitAtPoint_onView_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "passthroughView:shouldAcceptHitAtPoint:onView:withEvent:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathComponents");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathExtension");
}

id objc_msgSend_pathExtensionForContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathExtensionForContentType:");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pathToAssetContextDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathToAssetContextDirectory");
}

id objc_msgSend_pathToContextDirectoryForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathToContextDirectoryForAssetID:");
}

id objc_msgSend_pathWithComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathWithComponents:");
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pause");
}

id objc_msgSend_pauseAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseAnimation");
}

id objc_msgSend_pauseDismissCancellationAndReset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseDismissCancellationAndReset");
}

id objc_msgSend_pending(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pending");
}

id objc_msgSend_pendingBlocks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingBlocks");
}

id objc_msgSend_pendingCancelView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingCancelView");
}

id objc_msgSend_pendingDropView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingDropView");
}

id objc_msgSend_pendingTransactions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingTransactions");
}

id objc_msgSend_pendingTransitions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingTransitions");
}

id objc_msgSend_pendingWrapper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingWrapper");
}

id objc_msgSend_perStateContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "perStateContent");
}

id objc_msgSend_percentDrivenInteractiveTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "percentDrivenInteractiveTransition");
}

id objc_msgSend_performActionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performActionBlock:");
}

id objc_msgSend_performAsCurrentTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAsCurrentTraitCollection:");
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:");
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAndWait:");
}

id objc_msgSend_performBlockOnUserSideQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockOnUserSideQueue:");
}

id objc_msgSend_performBlockOnUserSideQueueAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockOnUserSideQueueAndWait:");
}

id objc_msgSend_performCallbackWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performCallbackWithImage:");
}

id objc_msgSend_performDropForInteraction_session_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performDropForInteraction:session:");
}

id objc_msgSend_performExtraValidation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performExtraValidation");
}

id objc_msgSend_performFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performFetch:");
}

id objc_msgSend_performFirstHalfOfProcessing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performFirstHalfOfProcessing");
}

id objc_msgSend_performLookupWithBundleIdentifiers_itemIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performLookupWithBundleIdentifiers:itemIdentifiers:");
}

id objc_msgSend_performOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performOperation");
}

id objc_msgSend_performSecondHalfOfProcessing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSecondHalfOfProcessing");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performSelector_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:");
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:");
}

id objc_msgSend_performSelector_withObject_afterDelay_inModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:inModes:");
}

id objc_msgSend_performSelectorOnMainThread_withObject_waitUntilDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelectorOnMainThread:withObject:waitUntilDone:");
}

id objc_msgSend_performTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performTransition");
}

id objc_msgSend_performValidation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performValidation");
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithoutAnimation:");
}

id objc_msgSend_performWork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWork:");
}

id objc_msgSend_periodicTimeObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "periodicTimeObserver");
}

id objc_msgSend_permanent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "permanent");
}

id objc_msgSend_permlink(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "permlink");
}

id objc_msgSend_persistanceOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistanceOptions");
}

id objc_msgSend_persistenceQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistenceQueue");
}

id objc_msgSend_persistentCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentCache");
}

id objc_msgSend_persistentCacheFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentCacheFileName");
}

id objc_msgSend_persistentCachePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentCachePath");
}

id objc_msgSend_persistentStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStore");
}

id objc_msgSend_persistentStoreCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreCoordinator");
}

id objc_msgSend_persistentStoreDescriptionWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreDescriptionWithURL:");
}

id objc_msgSend_persistentStoreExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreExtension");
}

id objc_msgSend_persistentStoreInitializedHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreInitializedHandler");
}

id objc_msgSend_persistentStoreName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreName");
}

id objc_msgSend_persistentStoreNameSeed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreNameSeed");
}

id objc_msgSend_persistentStoreURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreURL");
}

id objc_msgSend_persistentStoreVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreVersion");
}

id objc_msgSend_persistentStores(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStores");
}

id objc_msgSend_physicalPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPageNumber");
}

id objc_msgSend_pinkTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinkTheme:");
}

id objc_msgSend_plAbsolutePhysicalLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plAbsolutePhysicalLocation");
}

id objc_msgSend_plLocationRangeEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plLocationRangeEnd");
}

id objc_msgSend_plLocationRangeStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plLocationRangeStart");
}

id objc_msgSend_plLocationStorageUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plLocationStorageUUID");
}

id objc_msgSend_plStorageUUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plStorageUUID");
}

id objc_msgSend_plUserData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plUserData");
}

id objc_msgSend_placement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "placement");
}

id objc_msgSend_plainButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plainButtonConfiguration");
}

id objc_msgSend_plainTextString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plainTextString");
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "play");
}

id objc_msgSend_playFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playFrom:");
}

id objc_msgSend_playbackFailedWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackFailedWithError:");
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "player");
}

id objc_msgSend_player_callbackForTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "player:callbackForTime:");
}

id objc_msgSend_playerAllowsExternalPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerAllowsExternalPlayback:");
}

id objc_msgSend_playerCurrentItemChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerCurrentItemChanged:");
}

id objc_msgSend_playerCurrentItemEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerCurrentItemEnded:");
}

id objc_msgSend_playerCurrentItemStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerCurrentItemStopped:");
}

id objc_msgSend_playerErrorDidOccur_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerErrorDidOccur:error:");
}

id objc_msgSend_playerItemWithAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerItemWithAsset:");
}

id objc_msgSend_playerLayerWithPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerLayerWithPlayer:");
}

id objc_msgSend_playerLoadStateChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerLoadStateChanged:");
}

id objc_msgSend_playerMediaTypeAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerMediaTypeAvailable:");
}

id objc_msgSend_playerPeriodicUpdate_elapsed_duration_isFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerPeriodicUpdate:elapsed:duration:isFinished:");
}

id objc_msgSend_playerStateChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerStateChanged:");
}

id objc_msgSend_playerWithPlayerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playerWithPlayerItem:");
}

id objc_msgSend_pluginForExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pluginForExtension:");
}

id objc_msgSend_pointInside_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointInside:withEvent:");
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointSize");
}

id objc_msgSend_pointerInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointerInsets");
}

id objc_msgSend_pointerInteraction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointerInteraction");
}

id objc_msgSend_popAllCardsAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popAllCardsAnimated:completion:");
}

id objc_msgSend_popCardsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popCardsAnimated:");
}

id objc_msgSend_popCardsAnimated_reason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popCardsAnimated:reason:");
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToRootViewControllerAnimated:");
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToViewController:animated:");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_popoverController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverController");
}

id objc_msgSend_popping(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popping");
}

id objc_msgSend_populateHTMLGenerator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateHTMLGenerator:");
}

id objc_msgSend_portType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "portType");
}

id objc_msgSend_portraitPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "portraitPredicate");
}

id objc_msgSend_position(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "position");
}

id objc_msgSend_possibleLineLengthForAnnotation_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "possibleLineLengthForAnnotation:size:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_potentialPrimary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "potentialPrimary");
}

id objc_msgSend_predicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicate");
}

id objc_msgSend_predicateForAllAnnotationsIncludingDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAllAnnotationsIncludingDeleted:");
}

id objc_msgSend_predicateForAllBookItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAllBookItems");
}

id objc_msgSend_predicateForAllItemsAndContainerWithAdamIdInList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAllItemsAndContainerWithAdamIdInList:");
}

id objc_msgSend_predicateForAllItemsAndContainersInSeries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAllItemsAndContainersInSeries:");
}

id objc_msgSend_predicateForAllNonSeriesBookItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAllNonSeriesBookItems");
}

id objc_msgSend_predicateForAllSeriesContainerItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAllSeriesContainerItems");
}

id objc_msgSend_predicateForAnnotationIncludingDeletedWithUUID_assetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAnnotationIncludingDeletedWithUUID:assetID:");
}

id objc_msgSend_predicateForAnnotationsIncludingDeletedWithUUIDInList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAnnotationsIncludingDeletedWithUUIDInList:");
}

id objc_msgSend_predicateForAnnotationsIncludingDeletedWithUUIDInList_assetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAnnotationsIncludingDeletedWithUUIDInList:assetID:");
}

id objc_msgSend_predicateForAnnotationsWithAssetID_includingDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAnnotationsWithAssetID:includingDeleted:");
}

id objc_msgSend_predicateForAnnotationsWithAssetIDInList_includingDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAnnotationsWithAssetIDInList:includingDeleted:");
}

id objc_msgSend_predicateForContainerWithSeriesId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForContainerWithSeriesId:");
}

id objc_msgSend_predicateForDisplayClassSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForDisplayClassSize:");
}

id objc_msgSend_predicateForExactSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForExactSize:");
}

id objc_msgSend_predicateForGlobalAnnotationWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForGlobalAnnotationWithAssetID:");
}

id objc_msgSend_predicateForGlobalAnnotationsWithAssetIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForGlobalAnnotationsWithAssetIDs:");
}

id objc_msgSend_predicateForItemWithAdamId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForItemWithAdamId:");
}

id objc_msgSend_predicateForNonGlobalAnnotationsIncludingDeleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForNonGlobalAnnotationsIncludingDeleted");
}

id objc_msgSend_predicateForObjectsWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForObjectsWithIdentifier:");
}

id objc_msgSend_predicateForSeriesCheckWithAdamIDsInList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForSeriesCheckWithAdamIDsInList:");
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithBlock:");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_predicateWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithTraitCollection:");
}

id objc_msgSend_predicateWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithValue:");
}

id objc_msgSend_preferSlideForDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferSlideForDismiss");
}

id objc_msgSend_preferVerticalPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferVerticalPresentation");
}

id objc_msgSend_preferencesDomain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferencesDomain");
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSize");
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSizeCategory");
}

id objc_msgSend_preferredDeserializedLocationDataFromDictionary_trustedSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredDeserializedLocationDataFromDictionary:trustedSource:");
}

id objc_msgSend_preferredFilenameExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFilenameExtension");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFormat");
}

id objc_msgSend_preferredMaxLayoutWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredMaxLayoutWidth");
}

id objc_msgSend_prefersAdditionalSafeAreaInsetsForInsetting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersAdditionalSafeAreaInsetsForInsetting");
}

id objc_msgSend_prefersCrossfade(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersCrossfade");
}

id objc_msgSend_prefersStatusBarBackgroundHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prefersStatusBarBackgroundHidden");
}

id objc_msgSend_preloadPresentationInVC_pageProgressionIsRTL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preloadPresentationInVC:pageProgressionIsRTL:completion:");
}

id objc_msgSend_preorderedDefaultTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preorderedDefaultTitle");
}

id objc_msgSend_prepare(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepare");
}

id objc_msgSend_prepareForAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForAnimation:");
}

id objc_msgSend_prepareForCoverSourceCapturingWithToViewController_toViewTransform_revealCoverBlock_captureCoverFrameBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForCoverSourceCapturingWithToViewController:toViewTransform:revealCoverBlock:captureCoverFrameBlock:");
}

id objc_msgSend_prepareForDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForDismiss");
}

id objc_msgSend_prepareForReuse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForReuse");
}

id objc_msgSend_prepareForTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForTransition:");
}

id objc_msgSend_prepareTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareTransition");
}

id objc_msgSend_prepareViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareViewControllers");
}

id objc_msgSend_prerollAtRate_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prerollAtRate:completionHandler:");
}

id objc_msgSend_presentAlertController_promptContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAlertController:promptContext:");
}

id objc_msgSend_presentInVC_autoExpanded_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentInVC:autoExpanded:details:");
}

id objc_msgSend_presentPopoverFromRect_inView_permittedArrowDirections_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentPopoverFromRect:inView:permittedArrowDirections:animated:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationController");
}

id objc_msgSend_presentationLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationLayer");
}

id objc_msgSend_presentationStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationStyle");
}

id objc_msgSend_presentationTransitionDidComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationTransitionDidComplete");
}

id objc_msgSend_presentationViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationViewController");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_presenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenter");
}

id objc_msgSend_presenterWantsToDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenterWantsToDismiss:");
}

id objc_msgSend_presenters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenters");
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewController");
}

id objc_msgSend_presentingViewControllerIsFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewControllerIsFullScreen");
}

id objc_msgSend_presentingViewControllerSafeAreaInsetsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewControllerSafeAreaInsetsDidChange:");
}

id objc_msgSend_previewAssetCoverFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previewAssetCoverFuture");
}

id objc_msgSend_previewAssetCoverItemProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previewAssetCoverItemProvider");
}

id objc_msgSend_prewarmSharedResourcesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmSharedResourcesWithCompletion:");
}

id objc_msgSend_priceFormatted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "priceFormatted");
}

id objc_msgSend_priceString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "priceString");
}

id objc_msgSend_primaryEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryEntry");
}

id objc_msgSend_primaryEntryFromEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryEntryFromEntries:");
}

id objc_msgSend_primaryImageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryImageSize");
}

id objc_msgSend_primaryRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryRequest");
}

id objc_msgSend_primaryTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryTextColor");
}

id objc_msgSend_primitiveValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primitiveValueForKey:");
}

id objc_msgSend_prioritizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prioritizer");
}

id objc_msgSend_priority(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "priority");
}

id objc_msgSend_privateCloudDatabaseController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privateCloudDatabaseController");
}

id objc_msgSend_privateCloudSyncMOC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privateCloudSyncMOC");
}

id objc_msgSend_privateUserEditMOC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "privateUserEditMOC");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processInfo");
}

id objc_msgSend_processPendingChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processPendingChanges");
}

id objc_msgSend_processURLTemplate_forSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processURLTemplate:forSize:");
}

id objc_msgSend_processingOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processingOptions");
}

id objc_msgSend_productProfile(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "productProfile");
}

id objc_msgSend_profileDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profileDictionary");
}

id objc_msgSend_profileFetcher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profileFetcher");
}

id objc_msgSend_profilesForStoreIDs_keyProfile_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profilesForStoreIDs:keyProfile:completion:");
}

id objc_msgSend_profilesToFetch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profilesToFetch");
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progress");
}

id objc_msgSend_progressColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressColor");
}

id objc_msgSend_progressKitDataStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressKitDataStore");
}

id objc_msgSend_progressLineCap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressLineCap");
}

id objc_msgSend_progressThickness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressThickness");
}

id objc_msgSend_promoteTrackedAsset_promoteIfNotTracked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promoteTrackedAsset:promoteIfNotTracked:");
}

id objc_msgSend_promotionObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promotionObservers");
}

id objc_msgSend_promptMessage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promptMessage");
}

id objc_msgSend_promptTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promptTitle");
}

id objc_msgSend_propertiesByName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertiesByName");
}

id objc_msgSend_propertyProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyProvider");
}

id objc_msgSend_propertySource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertySource");
}

id objc_msgSend_proportionRead(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proportionRead");
}

id objc_msgSend_proportionalScaleSize_toDestinationSize_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proportionalScaleSize:toDestinationSize:options:");
}

id objc_msgSend_protected_takeAssetOfflineWithProvider_assetID_copyData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protected_takeAssetOfflineWithProvider:assetID:copyData:");
}

id objc_msgSend_protocolHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "protocolHandler");
}

id objc_msgSend_provideSceneController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provideSceneController:");
}

id objc_msgSend_providerBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "providerBlock");
}

id objc_msgSend_pruneItems_forMedium_prunedEntry_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pruneItems:forMedium:prunedEntry:withCompletion:");
}

id objc_msgSend_pruneItems_forMedium_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pruneItems:forMedium:withCompletion:");
}

id objc_msgSend_pruneScore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pruneScore");
}

id objc_msgSend_pruneScoreFrom_lastUsedDate_oldVersion_expired_processed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pruneScoreFrom:lastUsedDate:oldVersion:expired:processed:");
}

id objc_msgSend_pruneableItemFromEntryLocation_cost_pruneScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pruneableItemFromEntryLocation:cost:pruneScore:");
}

id objc_msgSend_psc(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "psc");
}

id objc_msgSend_publisherLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherLocation");
}

id objc_msgSend_publisherName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherName");
}

id objc_msgSend_publisherYear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherYear");
}

id objc_msgSend_punctuationCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "punctuationCharacterSet");
}

id objc_msgSend_purchaseDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purchaseDate");
}

id objc_msgSend_purgeFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeFromCache:");
}

id objc_msgSend_purgeRecentBooks_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeRecentBooks:completion:");
}

id objc_msgSend_purgeRecentsListFromAllBooksOlderThanDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeRecentsListFromAllBooksOlderThanDate:");
}

id objc_msgSend_purpleTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purpleTheme:");
}

id objc_msgSend_pushCardsWithDataSource_focusedIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushCardsWithDataSource:focusedIndex:animated:");
}

id objc_msgSend_pushedContractedState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushedContractedState");
}

id objc_msgSend_pushedState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushedState");
}

id objc_msgSend_q_createSubpathDirectories(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "q_createSubpathDirectories");
}

id objc_msgSend_quality(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quality");
}

id objc_msgSend_quarternaryTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quarternaryTextColor");
}

id objc_msgSend_query(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "query");
}

id objc_msgSend_queryScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryScore:");
}

id objc_msgSend_questionMarkListForCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "questionMarkListForCollection:");
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queue");
}

id objc_msgSend_quickScroller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quickScroller");
}

id objc_msgSend_quickScrollerMinimumDisplayRowCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quickScrollerMinimumDisplayRowCount");
}

id objc_msgSend_quotaFetchingOperationsQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quotaFetchingOperationsQueue");
}

id objc_msgSend_radialProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "radialProgress");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:");
}

id objc_msgSend_rangeOfCharacterFromSet_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:");
}

id objc_msgSend_rangeOfCharacterFromSet_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:range:");
}

id objc_msgSend_rangeOfFirstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfFirstMatchInString:options:range:");
}

id objc_msgSend_rangeOfPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfPath");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rangeOfString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:range:");
}

id objc_msgSend_rangeOfVisibleCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfVisibleCells");
}

id objc_msgSend_rangeRequiringCards(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeRequiringCards");
}

id objc_msgSend_rangeToCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeToCFI:");
}

id objc_msgSend_rangeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeValue");
}

id objc_msgSend_rate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rate");
}

id objc_msgSend_rating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rating");
}

id objc_msgSend_rawCurrentCardOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rawCurrentCardOffset");
}

id objc_msgSend_reachabilityForInternetConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachabilityForInternetConnection");
}

id objc_msgSend_reachabilityWithAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reachabilityWithAddress:");
}

id objc_msgSend_read(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "read");
}

id objc_msgSend_readCFIAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readCFIAtIndex:");
}

id objc_msgSend_readCFIs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readCFIs");
}

id objc_msgSend_readCFIsCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readCFIsCount");
}

id objc_msgSend_readDefaultTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readDefaultTitle");
}

id objc_msgSend_readProportion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readProportion");
}

id objc_msgSend_readQ(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readQ");
}

id objc_msgSend_readWorkQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readWorkQueue");
}

id objc_msgSend_readableContentGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readableContentGuide");
}

id objc_msgSend_readingCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingCount");
}

id objc_msgSend_readingDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingDirection");
}

id objc_msgSend_readingProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingProgress");
}

id objc_msgSend_readingProgressHighWaterMark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingProgressHighWaterMark");
}

id objc_msgSend_readingStatisticsBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingStatisticsBook");
}

id objc_msgSend_readingStatisticsControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingStatisticsControllers");
}

id objc_msgSend_readingStatisticsDataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingStatisticsDataSource");
}

id objc_msgSend_readingStatisticsDidChangeOnController_changes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingStatisticsDidChangeOnController:changes:");
}

id objc_msgSend_readingThreshold(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingThreshold");
}

id objc_msgSend_readingTimeTracker_cleanupBooksFinishedBefore_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingTimeTracker:cleanupBooksFinishedBefore:completion:");
}

id objc_msgSend_readingTimeTracker_cleanupFinishedBooksExcluding_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingTimeTracker:cleanupFinishedBooksExcluding:completion:");
}

id objc_msgSend_readingTimeTracker_isAssetTrackedAsRecent_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingTimeTracker:isAssetTrackedAsRecent:completion:");
}

id objc_msgSend_readingTimeTracker_updateRecentBook_promoteIfNotTracked_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingTimeTracker:updateRecentBook:promoteIfNotTracked:completion:");
}

id objc_msgSend_readyToSeedRecentBooksList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readyToSeedRecentBooksList");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reason");
}

id objc_msgSend_recentsNotEngagedSinceDateForSamples_dateForNonSamples_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recentsNotEngagedSinceDateForSamples:dateForNonSamples:completion:");
}

id objc_msgSend_reconcileChildViewControllersWithOldViewControllers_newViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reconcileChildViewControllersWithOldViewControllers:newViewControllers:");
}

id objc_msgSend_recordAdamIDsAsChecked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordAdamIDsAsChecked:");
}

id objc_msgSend_recordAdamIDsAsChecked_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordAdamIDsAsChecked:inManagedObjectContext:");
}

id objc_msgSend_recordID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordID");
}

id objc_msgSend_recordName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordName");
}

id objc_msgSend_rectForCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForCellAtIndex:");
}

id objc_msgSend_redColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redColor");
}

id objc_msgSend_redactedAnnotationLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redactedAnnotationLocation");
}

id objc_msgSend_referenceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "referenceView");
}

id objc_msgSend_refreshNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshNamespace:");
}

id objc_msgSend_refreshObject_mergeChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshObject:mergeChanges:");
}

id objc_msgSend_refreshOnRegister(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshOnRegister");
}

id objc_msgSend_regionWithRect_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regionWithRect:identifier:");
}

id objc_msgSend_registerAssetEnginePlugin_forExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerAssetEnginePlugin:forExtension:");
}

id objc_msgSend_registerColor_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerColor:withName:");
}

id objc_msgSend_registerDataRepresentationForTypeIdentifier_visibility_loadHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDataRepresentationForTypeIdentifier:visibility:loadHandler:");
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDefaults:");
}

id objc_msgSend_registerFileRepresentationForTypeIdentifier_fileOptions_visibility_loadHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerFileRepresentationForTypeIdentifier:fileOptions:visibility:loadHandler:");
}

id objc_msgSend_registerFileRepresentationFromAssetDragInfo_withProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerFileRepresentationFromAssetDragInfo:withProvider:");
}

id objc_msgSend_registerForTraitChanges_withAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTraitChanges:withAction:");
}

id objc_msgSend_registerItemForTypeIdentifier_loadHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerItemForTypeIdentifier:loadHandler:");
}

id objc_msgSend_registerNamedColorsWithTemplateManger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerNamedColorsWithTemplateManger:");
}

id objc_msgSend_registerNotificationBlock_forProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerNotificationBlock:forProperties:");
}

id objc_msgSend_registerObject_visibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObject:visibility:");
}

id objc_msgSend_registerObjectOfClass_visibility_loadHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerObjectOfClass:visibility:loadHandler:");
}

id objc_msgSend_registerPackage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerPackage:");
}

id objc_msgSend_registerPlainTextRepresentationFromAssetDragInfo_withProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerPlainTextRepresentationFromAssetDragInfo:withProvider:");
}

id objc_msgSend_registerReadingStatisticsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerReadingStatisticsController:");
}

id objc_msgSend_registerSceneRepresentationFromAssetDragInfo_withProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerSceneRepresentationFromAssetDragInfo:withProvider:");
}

id objc_msgSend_registerServerChangeTokenStore_forZoneID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerServerChangeTokenStore:forZoneID:");
}

id objc_msgSend_registerURLRepresentationFromAssetDragInfo_withProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerURLRepresentationFromAssetDragInfo:withProvider:");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_regularTextConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularTextConstraints");
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relativePath");
}

id objc_msgSend_releaseDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseDate");
}

id objc_msgSend_releaseIdleTimerDisabledForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseIdleTimerDisabledForObject:");
}

id objc_msgSend_releaseOutlets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseOutlets");
}

id objc_msgSend_releaseViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseViews");
}

id objc_msgSend_reloadAllCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadAllCells");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadData");
}

id objc_msgSend_reloadInputViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadInputViews");
}

id objc_msgSend_remoteConfigurationManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteConfigurationManager");
}

id objc_msgSend_remoteManagerObserverId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remoteManagerObserverId");
}

id objc_msgSend_removeAllIndexes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllIndexes");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeAllTimeObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllTimeObservers");
}

id objc_msgSend_removeAnimationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAnimationForKey:");
}

id objc_msgSend_removeCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCFI:");
}

id objc_msgSend_removeConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConstraint:");
}

id objc_msgSend_removeContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeContext:");
}

id objc_msgSend_removeDescribedImages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDescribedImages:");
}

id objc_msgSend_removeDescribedImages_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDescribedImages:completion:");
}

id objc_msgSend_removeDescribedImages_forRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDescribedImages:forRequest:completion:");
}

id objc_msgSend_removeEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEntry:");
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromParentViewController");
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperlayer");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeGestureRecognizer:");
}

id objc_msgSend_removeHighlightForData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightForData:");
}

id objc_msgSend_removeImageEntriesForDescribedImages_inLevelID_removedEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeImageEntriesForDescribedImages:inLevelID:removedEntries:");
}

id objc_msgSend_removeImageSets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeImageSets:");
}

id objc_msgSend_removeIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeIndex:");
}

id objc_msgSend_removeIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeIndexes:");
}

id objc_msgSend_removeIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeIndexesInRange:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLastObject");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectIdenticalTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectIdenticalTo:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_removeObjectsForKeyWithPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeyWithPrefix:");
}

id objc_msgSend_removeObjectsForKeyWithPrefix_andSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeyWithPrefix:andSuffix:");
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInArray:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeObserver_recordType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:recordType:");
}

id objc_msgSend_removePeriodicTimeObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePeriodicTimeObserver");
}

id objc_msgSend_removePersistentStore_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePersistentStore:error:");
}

id objc_msgSend_removePersistentStores(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePersistentStores");
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTarget:action:forControlEvents:");
}

id objc_msgSend_removeTimeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTimeObserver:");
}

id objc_msgSend_renderInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderInContext:");
}

id objc_msgSend_renderOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderOperations");
}

id objc_msgSend_renderQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderQueue");
}

id objc_msgSend_renderStackFromSource_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderStackFromSource:forRequest:");
}

id objc_msgSend_renderStackFromSource_forRequest_onQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderStackFromSource:forRequest:onQueue:completion:");
}

id objc_msgSend_renderer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderer");
}

id objc_msgSend_renderingCacheCallbackImage_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingCacheCallbackImage:context:");
}

id objc_msgSend_renderingCacheCallbackImage_context_pageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingCacheCallbackImage:context:pageNumber:");
}

id objc_msgSend_renderingController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingController");
}

id objc_msgSend_replaceCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceCharactersInRange:withString:");
}

id objc_msgSend_replaceCurrentItemWithPlayerItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceCurrentItemWithPlayerItem:");
}

id objc_msgSend_replaceMatchesInString_options_range_withTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceMatchesInString:options:range:withTemplate:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replaceObjectsInRange_withObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectsInRange:withObjectsFromArray:");
}

id objc_msgSend_replaceOccurrencesOfString_withString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceOccurrencesOfString:withString:options:range:");
}

id objc_msgSend_report(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "report");
}

id objc_msgSend_reportActionTriggered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportActionTriggered:");
}

id objc_msgSend_reportState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportState");
}

id objc_msgSend_reportWithMarker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportWithMarker:");
}

id objc_msgSend_representativeText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representativeText");
}

id objc_msgSend_representedObjectForCardAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "representedObjectForCardAtIndex:");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "request");
}

id objc_msgSend_requestClose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestClose:");
}

id objc_msgSend_requestGeometryUpdateWithPreferences_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestGeometryUpdateWithPreferences:errorHandler:");
}

id objc_msgSend_requestOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestOptions");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requestWithURL_cachePolicy_timeoutInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:cachePolicy:timeoutInterval:");
}

id objc_msgSend_requiredKeysForDictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiredKeysForDictionaryRepresentation");
}

id objc_msgSend_requiresAggregateContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresAggregateContentType:");
}

id objc_msgSend_requiresNetwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresNetwork");
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reset");
}

id objc_msgSend_resetButtonState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetButtonState");
}

id objc_msgSend_resignActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignActive");
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignFirstResponder");
}

id objc_msgSend_resignKeyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignKeyWindow");
}

id objc_msgSend_resizableSnapshotViewFromRect_afterScreenUpdates_withCapInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:");
}

id objc_msgSend_resolutionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolutionBlock");
}

id objc_msgSend_resolveConflictsForRecords_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolveConflictsForRecords:completion:");
}

id objc_msgSend_resolvedColorWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resolvedColorWithTraitCollection:");
}

id objc_msgSend_resourceSizeForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceSizeForKey:");
}

id objc_msgSend_resourceURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceURL");
}

id objc_msgSend_resourceValuesForKeys_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceValuesForKeys:error:");
}

id objc_msgSend_responseCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "responseCache");
}

id objc_msgSend_restartQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restartQuery");
}

id objc_msgSend_result(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "result");
}

id objc_msgSend_resultWithTimeout_Error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultWithTimeout:Error:");
}

id objc_msgSend_resultWithTimeout_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultWithTimeout:error:");
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "results");
}

id objc_msgSend_resultsDictionaryFromLookupResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultsDictionaryFromLookupResult:");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resume");
}

id objc_msgSend_resumeAndRebuildForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeAndRebuildForReason:");
}

id objc_msgSend_retainArguments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retainArguments");
}

id objc_msgSend_retainIdleTimerDisabledForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retainIdleTimerDisabledForObject:");
}

id objc_msgSend_reuseCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reuseCell:");
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reuseIdentifier");
}

id objc_msgSend_revealCoverForRepresentedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealCoverForRepresentedObject:");
}

id objc_msgSend_reverse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverse");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseObjectEnumerator");
}

id objc_msgSend_rewindFollowingInterruption(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rewindFollowingInterruption");
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightAnchor");
}

id objc_msgSend_rightArrowButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightArrowButton");
}

id objc_msgSend_rightBarButtonItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightBarButtonItems");
}

id objc_msgSend_rightPageLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightPageLabel");
}

id objc_msgSend_rightPageShortenString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightPageShortenString");
}

id objc_msgSend_rightPageString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightPageString");
}

id objc_msgSend_roleForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "roleForViewController:");
}

id objc_msgSend_rollback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rollback");
}

id objc_msgSend_rollbacks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rollbacks");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootViewController");
}

id objc_msgSend_rotationCellContainersForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rotationCellContainersForSize:");
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "row");
}

id objc_msgSend_rowRangeStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowRangeStart");
}

id objc_msgSend_rowSolidFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowSolidFillColor");
}

id objc_msgSend_rowSolidFillColorTopmostAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowSolidFillColorTopmostAlpha");
}

id objc_msgSend_rowTopGradientColor0(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rowTopGradientColor0");
}

id objc_msgSend_runBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runBlock:");
}

id objc_msgSend_runBlockThrottled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runBlockThrottled:");
}

id objc_msgSend_runStatement_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runStatement:arguments:");
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaInsets");
}

id objc_msgSend_safeAreaInsetsAdjustingForNotch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaInsetsAdjustingForNotch:");
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaLayoutGuide");
}

id objc_msgSend_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save:");
}

id objc_msgSend_saveIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveIfNeeded");
}

id objc_msgSend_saveManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveManagedObjectContext:");
}

id objc_msgSend_saveMetaData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveMetaData");
}

id objc_msgSend_saveWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveWithCompletion:");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_scaleImage_toSize_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleImage:toSize:options:");
}

id objc_msgSend_scaleOffset_withTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleOffset:withTransform:");
}

id objc_msgSend_scaledContractedOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledContractedOffset");
}

id objc_msgSend_scaledFontForFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledFontForFont:");
}

id objc_msgSend_scaledImageSizeForBounds_image_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledImageSizeForBounds:image:");
}

id objc_msgSend_scanDecimal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanDecimal:");
}

id objc_msgSend_scanInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanInteger:");
}

id objc_msgSend_scanLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanLocation");
}

id objc_msgSend_scanString_intoString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanString:intoString:");
}

id objc_msgSend_scanUpToCharactersFromSet_intoString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanUpToCharactersFromSet:intoString:");
}

id objc_msgSend_scannerWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scannerWithString:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_repeats_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:repeats:block:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheme");
}

id objc_msgSend_score(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "score");
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screen");
}

id objc_msgSend_screenSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screenSize");
}

id objc_msgSend_screens(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "screens");
}

id objc_msgSend_scrimColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrimColor");
}

id objc_msgSend_scrollCardForFeedOptionsVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollCardForFeedOptionsVisible:");
}

id objc_msgSend_scrollDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollDirection");
}

id objc_msgSend_scrollEdgeAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollEdgeAppearance");
}

id objc_msgSend_scrollRectToVisible_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollRectToVisible:animated:");
}

id objc_msgSend_scrollStartCardIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollStartCardIndex");
}

id objc_msgSend_scrollToTop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToTop:");
}

id objc_msgSend_scrollToTopAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToTopAnimated:");
}

id objc_msgSend_scrollToTopCardAtIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToTopCardAtIndex:animated:");
}

id objc_msgSend_scrollToTopVelocity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToTopVelocity");
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollView");
}

id objc_msgSend_scrollViewContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollViewContentSize");
}

id objc_msgSend_scrollViewScrollerInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollViewScrollerInsets");
}

id objc_msgSend_scrollViewVerticalVelocityWhenDraggingEnded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollViewVerticalVelocityWhenDraggingEnded");
}

id objc_msgSend_scrollViewWillBeginDragging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollViewWillBeginDragging:");
}

id objc_msgSend_scrollingAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollingAssertions");
}

id objc_msgSend_scrollingToTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollingToTop");
}

id objc_msgSend_scrubToValue_refresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubToValue:refresh:");
}

id objc_msgSend_scrubberContainerBounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberContainerBounds");
}

id objc_msgSend_scrubberContainerSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberContainerSize");
}

id objc_msgSend_scrubberHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberHeight");
}

id objc_msgSend_scrubberInscribedRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberInscribedRect:");
}

id objc_msgSend_scrubberLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberLayoutDirection");
}

id objc_msgSend_scrubberSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberSafeAreaInsets");
}

id objc_msgSend_scrubberWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberWidth");
}

id objc_msgSend_secondaryTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryTextColor");
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "section");
}

id objc_msgSend_sectionContainingExperience(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionContainingExperience");
}

id objc_msgSend_sectionForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionForKey:");
}

id objc_msgSend_sectionIndexMinimumDisplayRowCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionIndexMinimumDisplayRowCount");
}

id objc_msgSend_sectionName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sectionName");
}

id objc_msgSend_seedRecentQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seedRecentQueue");
}

id objc_msgSend_seedRecentsListWithRecentlyOpenedBooksNoOlderThanDate_limit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seedRecentsListWithRecentlyOpenedBooksNoOlderThanDate:limit:");
}

id objc_msgSend_seekFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seekFinished:");
}

id objc_msgSend_seekToTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seekToTime:");
}

id objc_msgSend_seekToTime_toleranceBefore_toleranceAfter_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seekToTime:toleranceBefore:toleranceAfter:completionHandler:");
}

id objc_msgSend_segmentIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentIDs");
}

id objc_msgSend_segmentSetIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentSetIDs");
}

id objc_msgSend_segmentsAsStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentsAsStrings");
}

id objc_msgSend_selectDefaultIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectDefaultIndex");
}

id objc_msgSend_selectRowAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectRowAtIndexPath:animated:scrollPosition:");
}

id objc_msgSend_selectedActionIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedActionIdentifier");
}

id objc_msgSend_selectedBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedBackgroundView");
}

id objc_msgSend_selectedBadgeView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedBadgeView");
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedIndex");
}

id objc_msgSend_selectedOutline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedOutline");
}

id objc_msgSend_selectedRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedRange");
}

id objc_msgSend_selectedSegmentTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedSegmentTextColor");
}

id objc_msgSend_selectedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedText");
}

id objc_msgSend_selectedTextRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedTextRange");
}

id objc_msgSend_selectedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedViewController");
}

id objc_msgSend_selectedWhitewashView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedWhitewashView");
}

id objc_msgSend_selectionFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionFrame");
}

id objc_msgSend_selector(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selector");
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "semanticContentAttribute");
}

id objc_msgSend_sendActionsForControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendActionsForControlEvents:");
}

id objc_msgSend_sendItemEndedNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendItemEndedNotification");
}

id objc_msgSend_sendItemStoppedNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendItemStoppedNotification");
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorColor");
}

id objc_msgSend_separatorStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorStyle");
}

id objc_msgSend_sequenceDisplayLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sequenceDisplayLabel");
}

id objc_msgSend_sequenceDisplayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sequenceDisplayName");
}

id objc_msgSend_sequenceNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sequenceNumber");
}

id objc_msgSend_serializeFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeFormat");
}

id objc_msgSend_seriesContainerIdsMatchingPredicate_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesContainerIdsMatchingPredicate:inManagedObjectContext:");
}

id objc_msgSend_seriesContainerWithSeriesId_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesContainerWithSeriesId:inManagedObjectContext:");
}

id objc_msgSend_seriesCoverEffectFilters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesCoverEffectFilters");
}

id objc_msgSend_seriesDecomposer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesDecomposer");
}

id objc_msgSend_seriesID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesID");
}

id objc_msgSend_seriesIDContainingBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesIDContainingBook:");
}

id objc_msgSend_seriesIDsReferencedByAdamIds_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesIDsReferencedByAdamIds:inManagedObjectContext:");
}

id objc_msgSend_seriesInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesInfo");
}

id objc_msgSend_seriesInfoRequestBatchSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesInfoRequestBatchSize");
}

id objc_msgSend_seriesInfoUpdateIntervalInDays(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesInfoUpdateIntervalInDays");
}

id objc_msgSend_seriesInfoWithDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesInfoWithDictionary:");
}

id objc_msgSend_seriesIsCloudOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesIsCloudOnly");
}

id objc_msgSend_seriesIsHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesIsHidden");
}

id objc_msgSend_seriesIsOrdered(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesIsOrdered");
}

id objc_msgSend_seriesItemAdamIdsMatchingPredicate_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesItemAdamIdsMatchingPredicate:inManagedObjectContext:");
}

id objc_msgSend_seriesItemWithAdamId_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesItemWithAdamId:inManagedObjectContext:");
}

id objc_msgSend_seriesResource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesResource");
}

id objc_msgSend_seriesSortKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesSortKey");
}

id objc_msgSend_seriesStack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesStack");
}

id objc_msgSend_seriesTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesTitle");
}

id objc_msgSend_series_adamId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "series_adamId");
}

id objc_msgSend_series_genres(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "series_genres");
}

id objc_msgSend_series_isContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "series_isContainer");
}

id objc_msgSend_series_position(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "series_position");
}

id objc_msgSend_series_seriesInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "series_seriesInfo");
}

id objc_msgSend_series_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "series_title");
}

id objc_msgSend_sessionContextType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionContextType");
}

id objc_msgSend_sessionID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionID");
}

id objc_msgSend_sessionObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionObservers");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAcceptsHits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAcceptsHits:");
}

id objc_msgSend_setAccessibilityAttributedLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityAttributedLabel:");
}

id objc_msgSend_setAccessibilityDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityDelegate:");
}

id objc_msgSend_setAccessibilityElementsHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityElementsHidden:");
}

id objc_msgSend_setAccessibilityIgnoresInvertColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIgnoresInvertColors:");
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityLabel:");
}

id objc_msgSend_setAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityTraits:");
}

id objc_msgSend_setAccessibilityViewIsModal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityViewIsModal:");
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:");
}

id objc_msgSend_setActionAtItemEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionAtItemEnd:");
}

id objc_msgSend_setActionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionProvider:");
}

id objc_msgSend_setActive_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:error:");
}

id objc_msgSend_setActiveTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveTransaction:");
}

id objc_msgSend_setActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityType:");
}

id objc_msgSend_setActivityTypeOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityTypeOrder:");
}

id objc_msgSend_setActivityVC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityVC:");
}

id objc_msgSend_setActualAspectRatio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActualAspectRatio:");
}

id objc_msgSend_setAdamID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdamID:");
}

id objc_msgSend_setAdamId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdamId:");
}

id objc_msgSend_setAddNoteButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddNoteButton:");
}

id objc_msgSend_setAddProhibited_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddProhibited:");
}

id objc_msgSend_setAdditionalSafeAreaInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalSafeAreaInsets:");
}

id objc_msgSend_setAdditive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditive:");
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontForContentSizeCategory:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAdjustsImageWhenHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsImageWhenHighlighted:");
}

id objc_msgSend_setAfterScreenUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAfterScreenUpdates:");
}

id objc_msgSend_setAirplayActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplayActive:");
}

id objc_msgSend_setAirplayRouteName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAirplayRouteName:");
}

id objc_msgSend_setAl_workItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAl_workItems:");
}

id objc_msgSend_setAl_workingOnItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAl_workingOnItems:");
}

id objc_msgSend_setAlertController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlertController:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllowedUnits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedUnits:");
}

id objc_msgSend_setAllowsAutomaticMirroring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsAutomaticMirroring:");
}

id objc_msgSend_setAllowsExternalPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsExternalPlayback:");
}

id objc_msgSend_setAllowsGroupBlending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsGroupBlending:");
}

id objc_msgSend_setAllowsGroupOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsGroupOpacity:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAlternateRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlternateRequest:");
}

id objc_msgSend_setAlwaysBounceVertical_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysBounceVertical:");
}

id objc_msgSend_setAnchorPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnchorPoint:");
}

id objc_msgSend_setAnimate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimate:");
}

id objc_msgSend_setAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimated:");
}

id objc_msgSend_setAnimatesInInnerContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimatesInInnerContainerView:");
}

id objc_msgSend_setAnimationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationCount:");
}

id objc_msgSend_setAnimationDidEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationDidEnd:");
}

id objc_msgSend_setAnimationsBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationsBlock:");
}

id objc_msgSend_setAnimationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationsEnabled:");
}

id objc_msgSend_setAnimationsFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationsFinished:");
}

id objc_msgSend_setAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimator:");
}

id objc_msgSend_setAnimatorInitialized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimatorInitialized:");
}

id objc_msgSend_setAnimators_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimators:");
}

id objc_msgSend_setAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotation:");
}

id objc_msgSend_setAnnotationAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationAssetID:");
}

id objc_msgSend_setAnnotationBlendMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationBlendMode:");
}

id objc_msgSend_setAnnotationCreationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationCreationDate:");
}

id objc_msgSend_setAnnotationCreatorIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationCreatorIdentifier:");
}

id objc_msgSend_setAnnotationDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationDeleted:");
}

id objc_msgSend_setAnnotationIsUnderline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationIsUnderline:");
}

id objc_msgSend_setAnnotationModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationModificationDate:");
}

id objc_msgSend_setAnnotationNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationNote:");
}

id objc_msgSend_setAnnotationPageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationPageTheme:");
}

id objc_msgSend_setAnnotationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationProvider:");
}

id objc_msgSend_setAnnotationRepresentativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationRepresentativeText:");
}

id objc_msgSend_setAnnotationSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationSelectedText:");
}

id objc_msgSend_setAnnotationSelectedTextRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationSelectedTextRange:");
}

id objc_msgSend_setAnnotationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationStyle:");
}

id objc_msgSend_setAnnotationTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationTheme:");
}

id objc_msgSend_setAnnotationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationType:");
}

id objc_msgSend_setAnnotationUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationUuid:");
}

id objc_msgSend_setAnnotationVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationVersion:");
}

id objc_msgSend_setAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotations:");
}

id objc_msgSend_setAppVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppVersion:");
}

id objc_msgSend_setAppearingFromRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppearingFromRect:");
}

id objc_msgSend_setAppearingToRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppearingToRect:");
}

id objc_msgSend_setApplicationSnapshotScrimColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplicationSnapshotScrimColor:");
}

id objc_msgSend_setAppliesMediaSelectionCriteriaAutomatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppliesMediaSelectionCriteriaAutomatically:");
}

id objc_msgSend_setArchivedCloudDriveOptedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArchivedCloudDriveOptedIn:");
}

id objc_msgSend_setArgument_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArgument:atIndex:");
}

id objc_msgSend_setArrangedObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArrangedObjects:");
}

id objc_msgSend_setArrowX_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArrowX:");
}

id objc_msgSend_setArtwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtwork:");
}

id objc_msgSend_setAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsset:");
}

id objc_msgSend_setAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetID:");
}

id objc_msgSend_setAssetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetURL:");
}

id objc_msgSend_setAssetVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetVersion:");
}

id objc_msgSend_setAsyncProducer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsyncProducer:");
}

id objc_msgSend_setAttributedPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedPlaceholder:");
}

id objc_msgSend_setAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedString:");
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedText:");
}

id objc_msgSend_setAttributedTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedTitle:");
}

id objc_msgSend_setAttributes_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:range:");
}

id objc_msgSend_setAudioMix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioMix:");
}

id objc_msgSend_setAudioTimePitchAlgorithm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioTimePitchAlgorithm:");
}

id objc_msgSend_setAuthor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthor:");
}

id objc_msgSend_setAutoExpand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoExpand:");
}

id objc_msgSend_setAutocapitalizationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutocapitalizationType:");
}

id objc_msgSend_setAutocorrectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutocorrectionType:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAuxiliaryNavigationBarDismissPanGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuxiliaryNavigationBarDismissPanGestureRecognizer:");
}

id objc_msgSend_setAuxiliaryNavigationBarTopConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuxiliaryNavigationBarTopConstraint:");
}

id objc_msgSend_setAuxiliaryNavigationBarViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuxiliaryNavigationBarViewController:");
}

id objc_msgSend_setAvailableContextIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvailableContextIndexes:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundContext:");
}

id objc_msgSend_setBackgroundEffects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundEffects:");
}

id objc_msgSend_setBackgroundFixedGradientColor0_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundFixedGradientColor0:");
}

id objc_msgSend_setBackgroundFixedGradientColor1_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundFixedGradientColor1:");
}

id objc_msgSend_setBackgroundHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundHidden:");
}

id objc_msgSend_setBackgroundImage_forBarPosition_barMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundImage:forBarPosition:barMetrics:");
}

id objc_msgSend_setBackgroundImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundImage:forState:");
}

id objc_msgSend_setBackgroundImage_forToolbarPosition_barMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundImage:forToolbarPosition:barMetrics:");
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundView:");
}

id objc_msgSend_setBadgeLabelNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeLabelNumber:");
}

id objc_msgSend_setBadgeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBadgeText:");
}

id objc_msgSend_setBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBar:");
}

id objc_msgSend_setBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarStyle:");
}

id objc_msgSend_setBarTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarTintColor:");
}

id objc_msgSend_setBaseForegroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseForegroundColor:");
}

id objc_msgSend_setBcSafeAreaInsetsObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBcSafeAreaInsetsObserver:");
}

id objc_msgSend_setBc_request_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBc_request:");
}

id objc_msgSend_setBeginTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBeginTime:");
}

id objc_msgSend_setBk_containerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBk_containerView:");
}

id objc_msgSend_setBlackScrimView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlackScrimView:");
}

id objc_msgSend_setBlendMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlendMode:");
}

id objc_msgSend_setBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlock:");
}

id objc_msgSend_setBlurDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlurDisabled:");
}

id objc_msgSend_setBoldColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoldColor:");
}

id objc_msgSend_setBoldRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoldRange:");
}

id objc_msgSend_setBookMetadataProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookMetadataProvider:");
}

id objc_msgSend_setBookPromotionTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookPromotionTimer:");
}

id objc_msgSend_setBookVersionString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookVersionString:");
}

id objc_msgSend_setBookmarkLabelColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarkLabelColor:");
}

id objc_msgSend_setBookmarkPageNumberColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarkPageNumberColor:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderColor:");
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderWidth:");
}

id objc_msgSend_setBottomCardWasExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBottomCardWasExpanded:");
}

id objc_msgSend_setBouncesZoom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBouncesZoom:");
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounds:");
}

id objc_msgSend_setBreadcrumbLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBreadcrumbLayer:");
}

id objc_msgSend_setBreadcrumbValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBreadcrumbValue:");
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBundleID:");
}

id objc_msgSend_setButtonSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonSize:");
}

id objc_msgSend_setButtonState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonState:");
}

id objc_msgSend_setButtonTitleColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonTitleColor:");
}

id objc_msgSend_setButtonTitleColorDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonTitleColorDisabled:");
}

id objc_msgSend_setButtonTitleFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonTitleFont:");
}

id objc_msgSend_setBuyParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuyParameters:");
}

id objc_msgSend_setByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObject:");
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromSet:");
}

id objc_msgSend_setCFIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCFIs:");
}

id objc_msgSend_setCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCGImage:");
}

id objc_msgSend_setCacheLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheLoaded:");
}

id objc_msgSend_setCacheMetaData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheMetaData:");
}

id objc_msgSend_setCachePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachePath:");
}

id objc_msgSend_setCacheResponses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheResponses:");
}

id objc_msgSend_setCachedCharacterCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedCharacterCount:");
}

id objc_msgSend_setCachedDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedDuration:");
}

id objc_msgSend_setCachedTextNodeCFIsAndCharacterCounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedTextNodeCFIsAndCharacterCounts:");
}

id objc_msgSend_setCachedTextNodeCFIsAndCharacterCountsOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedTextNodeCFIsAndCharacterCountsOrdinal:");
}

id objc_msgSend_setCalendar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalendar:");
}

id objc_msgSend_setCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallback:");
}

id objc_msgSend_setCaller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCaller:");
}

id objc_msgSend_setCalloutBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCalloutBar:");
}

id objc_msgSend_setCanCancelContentTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanCancelContentTouches:");
}

id objc_msgSend_setCanDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanDelete:");
}

id objc_msgSend_setCanUseFilters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanUseFilters:");
}

id objc_msgSend_setCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelled:");
}

id objc_msgSend_setCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCard:");
}

id objc_msgSend_setCardByIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardByIndex:");
}

id objc_msgSend_setCardContentDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardContentDelegate:");
}

id objc_msgSend_setCardCoverSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardCoverSource:");
}

id objc_msgSend_setCardCoverSourceByIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardCoverSourceByIndex:");
}

id objc_msgSend_setCardCoverSourceUnhideBlocksByIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardCoverSourceUnhideBlocksByIndex:");
}

id objc_msgSend_setCardMoveItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardMoveItems:");
}

id objc_msgSend_setCardNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardNavigationController:");
}

id objc_msgSend_setCardSetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardSetViewController:");
}

id objc_msgSend_setCardSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardSize:");
}

id objc_msgSend_setCardSlideItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardSlideItems:");
}

id objc_msgSend_setCardStackTransitioningCardContentAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardStackTransitioningCardContentAlpha:");
}

id objc_msgSend_setCardStackTransitioningCoverSourceExtraXOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardStackTransitioningCoverSourceExtraXOffset:");
}

id objc_msgSend_setCardStackTransitioningCoverSourceImageChangeObserverBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardStackTransitioningCoverSourceImageChangeObserverBlock:");
}

id objc_msgSend_setCardSuperviewToTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardSuperviewToTransform:");
}

id objc_msgSend_setCardToCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardToCenter:");
}

id objc_msgSend_setCardToTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardToTransform:");
}

id objc_msgSend_setCardView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCardView:");
}

id objc_msgSend_setCellNotVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellNotVisible:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setCenterPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenterPlaceholder:");
}

id objc_msgSend_setCfi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCfi:");
}

id objc_msgSend_setCfiEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCfiEnd:");
}

id objc_msgSend_setCfiPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCfiPosition:");
}

id objc_msgSend_setCfiStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCfiStart:");
}

id objc_msgSend_setChangeTokenController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChangeTokenController:");
}

id objc_msgSend_setChapterNum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChapterNum:");
}

id objc_msgSend_setCharacterCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharacterCount:");
}

id objc_msgSend_setCharactersToBeSkipped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharactersToBeSkipped:");
}

id objc_msgSend_setCitationsAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCitationsAllowed:");
}

id objc_msgSend_setClearsContextBeforeDrawing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClearsContextBeforeDrawing:");
}

id objc_msgSend_setClientName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientName:");
}

id objc_msgSend_setClientVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientVersion:");
}

id objc_msgSend_setClippedCoverIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClippedCoverIndexes:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setCloudData_predicate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudData:predicate:completion:");
}

id objc_msgSend_setCloudVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCloudVersion:");
}

id objc_msgSend_setCoalescingCleanup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoalescingCleanup:");
}

id objc_msgSend_setCoalescingDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoalescingDelay:");
}

id objc_msgSend_setColorControls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColorControls:");
}

id objc_msgSend_setColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColors:");
}

id objc_msgSend_setCommit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCommit:");
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletion:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionCount:");
}

id objc_msgSend_setCompletionWithItemsHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionWithItemsHandler:");
}

id objc_msgSend_setCompositingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompositingFilter:");
}

id objc_msgSend_setCompressionQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompressionQuality:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConformsToProtocol:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainer:");
}

id objc_msgSend_setContainerLayers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerLayers:");
}

id objc_msgSend_setContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainerView:");
}

id objc_msgSend_setContentChangedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentChangedDate:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setContentContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentContainerView:");
}

id objc_msgSend_setContentCreationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCreationDate:");
}

id objc_msgSend_setContentEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentEdgeInsets:");
}

id objc_msgSend_setContentFileSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentFileSize:");
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInset:");
}

id objc_msgSend_setContentInsetAdjustmentBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsetAdjustmentBehavior:");
}

id objc_msgSend_setContentInsetForContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsetForContent:");
}

id objc_msgSend_setContentInsetTopLarge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsetTopLarge:");
}

id objc_msgSend_setContentInsetTopMedium_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsetTopMedium:");
}

id objc_msgSend_setContentInsetTopSmall_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsetTopSmall:");
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsets:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:");
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:animated:");
}

id objc_msgSend_setContentOffsetUpdatesSuspended_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffsetUpdatesSuspended:");
}

id objc_msgSend_setContentProtected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentProtected:");
}

id objc_msgSend_setContentScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentScrollView:");
}

id objc_msgSend_setContentScrollView_forEdge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentScrollView:forEdge:");
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentSize:");
}

id objc_msgSend_setContentStatusBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentStatusBarStyle:");
}

id objc_msgSend_setContentStoreIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentStoreIdentifier:");
}

id objc_msgSend_setContentTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentTextColor:");
}

id objc_msgSend_setContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentViewController:");
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContents:");
}

id objc_msgSend_setContentsCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsCenter:");
}

id objc_msgSend_setContentsScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentsScale:");
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContext:");
}

id objc_msgSend_setContextMenuInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContextMenuInteractionEnabled:");
}

id objc_msgSend_setContexts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContexts:");
}

id objc_msgSend_setContractedTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContractedTransform:");
}

id objc_msgSend_setControls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControls:");
}

id objc_msgSend_setCornerCurve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerCurve:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCornerStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerStyle:");
}

id objc_msgSend_setCost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCost:");
}

id objc_msgSend_setCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCount:");
}

id objc_msgSend_setCounter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCounter:");
}

id objc_msgSend_setCoverControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverControllers:");
}

id objc_msgSend_setCoverFadeItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverFadeItems:");
}

id objc_msgSend_setCoverMoveItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverMoveItems:");
}

id objc_msgSend_setCoverSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverSource:");
}

id objc_msgSend_setCoverToCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverToCenter:");
}

id objc_msgSend_setCoverToTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverToTransform:");
}

id objc_msgSend_setCovered_animated_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCovered:animated:duration:");
}

id objc_msgSend_setCoversAreInNonHorizontalLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoversAreInNonHorizontalLayout:");
}

id objc_msgSend_setCoversNeedClipping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoversNeedClipping:");
}

id objc_msgSend_setCurrentIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentIndex:");
}

id objc_msgSend_setCurrentLineRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentLineRect:");
}

id objc_msgSend_setCurrentPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPage:");
}

id objc_msgSend_setCurrentPersistentStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPersistentStore:");
}

id objc_msgSend_setCurrentPersistentStoreType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPersistentStoreType:");
}

id objc_msgSend_setCurrentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentState:");
}

id objc_msgSend_setCurrentTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTraitCollection:");
}

id objc_msgSend_setCurrentTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTransition:");
}

id objc_msgSend_setDamping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDamping:");
}

id objc_msgSend_setDataHighlights_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataHighlights:");
}

id objc_msgSend_setDataManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataManager:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDataStoreInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataStoreInformation:");
}

id objc_msgSend_setDataType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataType:");
}

id objc_msgSend_setDatabaseVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatabaseVersion:");
}

id objc_msgSend_setDateChecked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateChecked:");
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateFormat:");
}

id objc_msgSend_setDateRequested_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateRequested:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDay:");
}

id objc_msgSend_setDebugIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDebugIdentifier:");
}

id objc_msgSend_setDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelay:");
}

id objc_msgSend_setDelayTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelayTimer:");
}

id objc_msgSend_setDelaysContentTouches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelaysContentTouches:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDeleteButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeleteButton:");
}

id objc_msgSend_setDescribedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescribedImage:");
}

id objc_msgSend_setDescribedImageRequested_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescribedImageRequested:");
}

id objc_msgSend_setDescribedImageShown_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescribedImageShown:");
}

id objc_msgSend_setDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDescription:");
}

id objc_msgSend_setDestinationImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDestinationImage:");
}

id objc_msgSend_setDifferentDate_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentDate:forKey:");
}

id objc_msgSend_setDifferentNumber_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentNumber:forKey:");
}

id objc_msgSend_setDifferentObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentObject:forKey:");
}

id objc_msgSend_setDifferentString_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentString:forKey:");
}

id objc_msgSend_setDifferentValue_forKey_klass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentValue:forKey:klass:");
}

id objc_msgSend_setDisableActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableActions:");
}

id objc_msgSend_setDismissPanGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissPanGestureRecognizer:");
}

id objc_msgSend_setDismissState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissState:");
}

id objc_msgSend_setDismissing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissing:");
}

id objc_msgSend_setDisplayOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayOrder:");
}

id objc_msgSend_setDisplayedCardViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayedCardViewControllers:");
}

id objc_msgSend_setDistanceFromFocusedCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceFromFocusedCard:");
}

id objc_msgSend_setDistanceToCoverSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceToCoverSource:");
}

id objc_msgSend_setDistanceToDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceToDismiss:");
}

id objc_msgSend_setDistanceToExpand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistanceToExpand:");
}

id objc_msgSend_setDividerColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDividerColor:");
}

id objc_msgSend_setDoesRelativeDateFormatting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoesRelativeDateFormatting:");
}

id objc_msgSend_setDouble_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDouble:forKey:");
}

id objc_msgSend_setDownloadingPercent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloadingPercent:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdgeInsets:");
}

id objc_msgSend_setEdgePanGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdgePanGestureRecognizer:");
}

id objc_msgSend_setEdges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdges:");
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditable:");
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:");
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:animated:");
}

id objc_msgSend_setEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEffect:");
}

id objc_msgSend_setElementRegistry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElementRegistry:");
}

id objc_msgSend_setEnableCloudSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnableCloudSync:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEndPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndPoint:");
}

id objc_msgSend_setEndPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndPosition:");
}

id objc_msgSend_setEndingRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndingRect:");
}

id objc_msgSend_setEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntity:");
}

id objc_msgSend_setEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntries:");
}

id objc_msgSend_setEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntryLocation:");
}

id objc_msgSend_setEpubId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEpubId:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExcludedActivityTypes:");
}

id objc_msgSend_setExclusionPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExclusionPaths:");
}

id objc_msgSend_setExpandedTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpandedTransform:");
}

id objc_msgSend_setExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperience:");
}

id objc_msgSend_setExpiration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpiration:");
}

id objc_msgSend_setExpiry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpiry:");
}

id objc_msgSend_setExpression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpression:");
}

id objc_msgSend_setExpressionResultType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpressionResultType:");
}

id objc_msgSend_setExternalDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalDisplay:");
}

id objc_msgSend_setExtraXOffsetForAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtraXOffsetForAnimation:");
}

id objc_msgSend_setFakeCoverSourceByIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFakeCoverSourceByIndex:");
}

id objc_msgSend_setFetchBatchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchBatchSize:");
}

id objc_msgSend_setFetchLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchLimit:");
}

id objc_msgSend_setFetchOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchOffset:");
}

id objc_msgSend_setFetchQuotaCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchQuotaCompletionBlock:");
}

id objc_msgSend_setFilePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilePath:");
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFill");
}

id objc_msgSend_setFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillColor:");
}

id objc_msgSend_setFillColorUsesTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillColorUsesTintColor:");
}

id objc_msgSend_setFillMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillMode:");
}

id objc_msgSend_setFinalAnimationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinalAnimationType:");
}

id objc_msgSend_setFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinished:");
}

id objc_msgSend_setFinishedForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinishedForAssetID:");
}

id objc_msgSend_setFocusEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFocusEffect:");
}

id objc_msgSend_setFocusShapeView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFocusShapeView:");
}

id objc_msgSend_setFocusedIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFocusedIndex:");
}

id objc_msgSend_setFocusedIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFocusedIndex:animated:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFontScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontScale:");
}

id objc_msgSend_setFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontSize:");
}

id objc_msgSend_setFooterTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFooterTextColor:");
}

id objc_msgSend_setFooterView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFooterView:");
}

id objc_msgSend_setForPrint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForPrint:");
}

id objc_msgSend_setForegroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForegroundColor:");
}

id objc_msgSend_setFormatOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFormatOptions:");
}

id objc_msgSend_setFractionComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFractionComplete:");
}

id objc_msgSend_setFractionComplete_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFractionComplete:cardData:");
}

id objc_msgSend_setFragment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFragment:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFrameOnTransitioningView_forTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrameOnTransitioningView:forTransition:");
}

id objc_msgSend_setFrameOnViewController_forTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrameOnViewController:forTransition:");
}

id objc_msgSend_setFromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromView:");
}

id objc_msgSend_setFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromViewController:");
}

id objc_msgSend_setFromViewSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromViewSnapshot:");
}

id objc_msgSend_setFrozen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrozen:");
}

id objc_msgSend_setFullLineRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullLineRect:");
}

id objc_msgSend_setGaijiImageFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGaijiImageFilter:");
}

id objc_msgSend_setGeneration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGeneration:");
}

id objc_msgSend_setGenerationValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGenerationValue:forKey:");
}

id objc_msgSend_setGenre_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGenre:");
}

id objc_msgSend_setGeometryFlipped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGeometryFlipped:");
}

id objc_msgSend_setGlassView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlassView:");
}

id objc_msgSend_setGlobalMetadataFetched_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGlobalMetadataFetched:");
}

id objc_msgSend_setGrabTimerDelayEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrabTimerDelayEditing:");
}

id objc_msgSend_setGrabTimerDelayNotEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrabTimerDelayNotEditing:");
}

id objc_msgSend_setGrabbed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrabbed:");
}

id objc_msgSend_setGrabbedCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrabbedCell:");
}

id objc_msgSend_setGrabbedCellUniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGrabbedCellUniqueID:");
}

id objc_msgSend_setGridListToggleSelectedColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGridListToggleSelectedColor:");
}

id objc_msgSend_setGripperEndingAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGripperEndingAlpha:");
}

id objc_msgSend_setGripperStartingAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGripperStartingAlpha:");
}

id objc_msgSend_setGroupTableViewBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGroupTableViewBackgroundColor:");
}

id objc_msgSend_setHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandler:");
}

id objc_msgSend_setHasRowTopGradient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRowTopGradient:");
}

id objc_msgSend_setHasSpineOnRight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasSpineOnRight:");
}

id objc_msgSend_setHasValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasValue:");
}

id objc_msgSend_setHaveTOCCFIIndices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHaveTOCCFIIndices:");
}

id objc_msgSend_setHaveTextNodeLengthIndices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHaveTextNodeLengthIndices:");
}

id objc_msgSend_setHeaderTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderTextColor:");
}

id objc_msgSend_setHeaderTextColorDimmed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeaderTextColorDimmed:");
}

id objc_msgSend_setHeatMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeatMap:");
}

id objc_msgSend_setHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeight:");
}

id objc_msgSend_setHeightForAspectRatio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeightForAspectRatio:");
}

id objc_msgSend_setHeightTracksTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeightTracksTextView:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHideFooterView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHideFooterView:");
}

id objc_msgSend_setHidesWhenStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesWhenStopped:");
}

id objc_msgSend_setHighPriorityWorkQ_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighPriorityWorkQ:");
}

id objc_msgSend_setHighlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlight:");
}

id objc_msgSend_setHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlighted:");
}

id objc_msgSend_setHighlighted_forControl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlighted:forControl:");
}

id objc_msgSend_setHighlightedAnnotationBlendMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedAnnotationBlendMode:");
}

id objc_msgSend_setHighlightedTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedTextColor:");
}

id objc_msgSend_setHistoryToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHistoryToken:");
}

id objc_msgSend_setHistoryTokenOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHistoryTokenOffset:");
}

id objc_msgSend_setHorizontalRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHorizontalRange:");
}

id objc_msgSend_setHorizontalRangeIncludingFake_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHorizontalRangeIncludingFake:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHref:");
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentifier:");
}

id objc_msgSend_setIdleTimerDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleTimerDelay:");
}

id objc_msgSend_setIdleTimerDisabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdleTimerDisabled:");
}

id objc_msgSend_setIgnoreChangesToHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreChangesToHidden:");
}

id objc_msgSend_setIgnoreChildStatusBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreChildStatusBarStyle:");
}

id objc_msgSend_setIgnoresTintColorAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoresTintColorAlpha:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setImage_animatedWithAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:animatedWithAnimator:");
}

id objc_msgSend_setImage_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forKey:");
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forState:");
}

id objc_msgSend_setImageCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageCache:");
}

id objc_msgSend_setImageChangeObserverBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageChangeObserverBlock:");
}

id objc_msgSend_setImageColor_forIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageColor:forIdentifier:");
}

id objc_msgSend_setImageColorARGBHex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageColorARGBHex:");
}

id objc_msgSend_setImageEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageEntries:");
}

id objc_msgSend_setImageMultiplyExpandedContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageMultiplyExpandedContentMode:");
}

id objc_msgSend_setImageRepository_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageRepository:");
}

id objc_msgSend_setImageSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageSet:");
}

id objc_msgSend_setImageSetStorage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageSetStorage:");
}

id objc_msgSend_setImageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageSize:");
}

id objc_msgSend_setImpressionStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImpressionStartTime:");
}

id objc_msgSend_setInUseCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInUseCount:");
}

id objc_msgSend_setIncludedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludedActivityTypes:");
}

id objc_msgSend_setIncludesPendingChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesPendingChanges:");
}

id objc_msgSend_setIncludesPropertyValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesPropertyValues:");
}

id objc_msgSend_setIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndicatorStyle:");
}

id objc_msgSend_setInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfo:");
}

id objc_msgSend_setInfoDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoDictionary:");
}

id objc_msgSend_setInitialFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialFrame:");
}

id objc_msgSend_setInitialVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialVelocity:");
}

id objc_msgSend_setInnerBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInnerBorderColor:");
}

id objc_msgSend_setInnerBorderLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInnerBorderLayer:");
}

id objc_msgSend_setInnerContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInnerContainerView:");
}

id objc_msgSend_setInputParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInputParameters:");
}

id objc_msgSend_setInteractive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractive:");
}

id objc_msgSend_setInterruptible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInterruptible:");
}

id objc_msgSend_setIntraOrdinalOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIntraOrdinalOrder:");
}

id objc_msgSend_setIsAccessibilityElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAccessibilityElement:");
}

id objc_msgSend_setIsContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsContainer:");
}

id objc_msgSend_setIsCurrentCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsCurrentCard:");
}

id objc_msgSend_setIsDismissingCardStack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDismissingCardStack:");
}

id objc_msgSend_setIsDisplayClassSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDisplayClassSize:");
}

id objc_msgSend_setIsDownloading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDownloading:");
}

id objc_msgSend_setIsFocusedCard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFocusedCard:");
}

id objc_msgSend_setIsFocusedCover_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFocusedCover:");
}

id objc_msgSend_setIsInTransitionUpdateMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsInTransitionUpdateMode:");
}

id objc_msgSend_setIsKnob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsKnob:");
}

id objc_msgSend_setIsLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLocal:");
}

id objc_msgSend_setIsNotLocal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsNotLocal:");
}

id objc_msgSend_setIsOnExperiencePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOnExperiencePage:");
}

id objc_msgSend_setIsParentCardOccluded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsParentCardOccluded:");
}

id objc_msgSend_setIsPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPresented:");
}

id objc_msgSend_setIsSingleState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSingleState:");
}

id objc_msgSend_setIsUploaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUploaded:");
}

id objc_msgSend_setIsUploading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsUploading:");
}

id objc_msgSend_setItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItem:");
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:");
}

id objc_msgSend_setJiggling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setJiggling:");
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKey:");
}

id objc_msgSend_setKeyColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyColor:");
}

id objc_msgSend_setKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyPath:");
}

id objc_msgSend_setKeyTimes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyTimes:");
}

id objc_msgSend_setKeyboardAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardAppearance:");
}

id objc_msgSend_setKeyboardVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardVisible:");
}

id objc_msgSend_setKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeys:");
}

id objc_msgSend_setLargerThan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLargerThan:");
}

id objc_msgSend_setLastAccessDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastAccessDate:");
}

id objc_msgSend_setLastCachedFreeBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastCachedFreeBytes:");
}

id objc_msgSend_setLastEventDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastEventDate:");
}

id objc_msgSend_setLastKnownScrollEndCardIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastKnownScrollEndCardIndex:");
}

id objc_msgSend_setLastNavigationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastNavigationType:");
}

id objc_msgSend_setLastOpenedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastOpenedDate:");
}

id objc_msgSend_setLastUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUpdate:");
}

id objc_msgSend_setLastUsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUsed:");
}

id objc_msgSend_setLastUsedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastUsedTime:");
}

id objc_msgSend_setLaunches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLaunches:");
}

id objc_msgSend_setLayoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutDirection:");
}

id objc_msgSend_setLeftBarButtonItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftBarButtonItems:");
}

id objc_msgSend_setLeftBarButtonItems_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftBarButtonItems:animated:");
}

id objc_msgSend_setLeftPageShortenString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftPageShortenString:");
}

id objc_msgSend_setLeftPageString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftPageString:");
}

id objc_msgSend_setLengthProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLengthProvider:");
}

id objc_msgSend_setLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLevel:");
}

id objc_msgSend_setLightenBlend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLightenBlend:");
}

id objc_msgSend_setLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLimit:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLineCapStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineCapStyle:");
}

id objc_msgSend_setLineFragmentPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineFragmentPadding:");
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineWidth:");
}

id objc_msgSend_setLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLines:");
}

id objc_msgSend_setLinkColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinkColor:");
}

id objc_msgSend_setListAuthorAndGenreTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListAuthorAndGenreTextColor:");
}

id objc_msgSend_setListBookTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListBookTextColor:");
}

id objc_msgSend_setListMoveHandleColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setListMoveHandleColor:");
}

id objc_msgSend_setLoadState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadState:");
}

id objc_msgSend_setLoadingProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadingProgress:");
}

id objc_msgSend_setLocalVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalVersion:");
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocale:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLocationModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationModificationDate:");
}

id objc_msgSend_setLockedChildForStatusBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLockedChildForStatusBarStyle:");
}

id objc_msgSend_setLookupResultPromise_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLookupResultPromise:");
}

id objc_msgSend_setLowPriorityWorkQ_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLowPriorityWorkQ:");
}

id objc_msgSend_setMacIdiomStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMacIdiomStyle:");
}

id objc_msgSend_setManagedBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedBook:");
}

id objc_msgSend_setManagedObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedObjectModel:");
}

id objc_msgSend_setManagedObjectModelName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedObjectModelName:");
}

id objc_msgSend_setManualCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManualCompletion:");
}

id objc_msgSend_setMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMask:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMass:");
}

id objc_msgSend_setMatchScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMatchScore:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMaxInstanceCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxInstanceCount:");
}

id objc_msgSend_setMaxSlideDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxSlideDistance:");
}

id objc_msgSend_setMaxTitleSlideDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxTitleSlideDistance:");
}

id objc_msgSend_setMaximumCFICount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumCFICount:");
}

id objc_msgSend_setMaximumDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumDelay:");
}

id objc_msgSend_setMaximumFractionDigits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumFractionDigits:");
}

id objc_msgSend_setMaximumNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumNumberOfLines:");
}

id objc_msgSend_setMaximumSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumSize:");
}

id objc_msgSend_setMenuImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenuImage:");
}

id objc_msgSend_setMenuTitleColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenuTitleColor:");
}

id objc_msgSend_setMenuTitleFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenuTitleFont:");
}

id objc_msgSend_setMenuViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenuViewController:");
}

id objc_msgSend_setMergePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMergePolicy:");
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessage:");
}

id objc_msgSend_setMessageType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessageType:");
}

id objc_msgSend_setMessagesAlreadyDisplayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMessagesAlreadyDisplayed:");
}

id objc_msgSend_setMetadata_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadata:forKey:");
}

id objc_msgSend_setMetadata_forPersistentStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadata:forPersistentStore:");
}

id objc_msgSend_setMetadata_forPersistentStoreOfType_URL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadata:forPersistentStoreOfType:URL:options:error:");
}

id objc_msgSend_setMetadataDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadataDictionary:");
}

id objc_msgSend_setMetadataDictionaryDirty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadataDictionaryDirty:");
}

id objc_msgSend_setMetadataObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadataObject:forKey:");
}

id objc_msgSend_setMetadataValue_forKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadataValue:forKey:completion:");
}

id objc_msgSend_setMigrationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMigrationHandler:");
}

id objc_msgSend_setMinCPLForSpreadPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinCPLForSpreadPages:");
}

id objc_msgSend_setMinInstanceCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinInstanceCount:");
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumScaleFactor:");
}

id objc_msgSend_setModalPresentationCapturesStatusBarAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationCapturesStatusBarAppearance:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setModern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModern:");
}

id objc_msgSend_setMonitorCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMonitorCallback:");
}

id objc_msgSend_setMultiplyImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultiplyImage:");
}

id objc_msgSend_setMutableUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMutableUserInfo:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNamespaceIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNamespaceIdentifier:");
}

id objc_msgSend_setNavigationBarHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHeight:");
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:");
}

id objc_msgSend_setNavigationSkrimView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationSkrimView:");
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsDisplay");
}

id objc_msgSend_setNeedsDisplayOnBoundsChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsDisplayOnBoundsChange:");
}

id objc_msgSend_setNeedsFadeInOnDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsFadeInOnDismiss:");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsLayout");
}

id objc_msgSend_setNeedsNewVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsNewVersion:");
}

id objc_msgSend_setNeedsStatusBarAppearanceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsStatusBarAppearanceUpdate");
}

id objc_msgSend_setNeedsUserInterfaceAppearanceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUserInterfaceAppearanceUpdate");
}

id objc_msgSend_setNextDiskPruneDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNextDiskPruneDate:");
}

id objc_msgSend_setNextRamPruneDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNextRamPruneDate:");
}

id objc_msgSend_setNonShadowArea_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNonShadowArea:");
}

id objc_msgSend_setNormalBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNormalBackgroundColor:");
}

id objc_msgSend_setNotesProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNotesProvider:");
}

id objc_msgSend_setNowPlayingInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNowPlayingInfo:");
}

id objc_msgSend_setNumConcurrentWorkItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumConcurrentWorkItems:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberStyle:");
}

id objc_msgSend_setObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:");
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:atIndexedSubscript:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKey_cost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:cost:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setObservedArtworkSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservedArtworkSource:");
}

id objc_msgSend_setObservedCoverSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservedCoverSource:");
}

id objc_msgSend_setObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObservers:");
}

id objc_msgSend_setOffScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOffScreen:");
}

id objc_msgSend_setOnScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnScreen:");
}

id objc_msgSend_setOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpacity:");
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpaque:");
}

id objc_msgSend_setOperationKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationKind:");
}

id objc_msgSend_setOperationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationQueue:");
}

id objc_msgSend_setOperationsLog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationsLog:");
}

id objc_msgSend_setOrderedTOCEntryCFICache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrderedTOCEntryCFICache:");
}

id objc_msgSend_setOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrdinal:");
}

id objc_msgSend_setOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientation:");
}

id objc_msgSend_setOrigin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrigin:");
}

id objc_msgSend_setOriginalURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalURL:");
}

id objc_msgSend_setOriginatingSceneController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginatingSceneController:");
}

id objc_msgSend_setOuterBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOuterBorderColor:");
}

id objc_msgSend_setOuterBorderLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOuterBorderLayer:");
}

id objc_msgSend_setOuterContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOuterContext:");
}

id objc_msgSend_setOverlayContentBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverlayContentBackgroundColor:");
}

id objc_msgSend_setOverrideObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideObject:forKey:");
}

id objc_msgSend_setOverrideUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideUserInterfaceStyle:");
}

id objc_msgSend_setOverrides_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrides:");
}

id objc_msgSend_setPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageNumber:");
}

id objc_msgSend_setPageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageTheme:");
}

id objc_msgSend_setPageTurnSpineAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageTurnSpineAlpha:");
}

id objc_msgSend_setPaginationDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaginationDataSource:");
}

id objc_msgSend_setPagingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPagingEnabled:");
}

id objc_msgSend_setPagingWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPagingWidth:");
}

id objc_msgSend_setParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParentViewController:");
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPath:");
}

id objc_msgSend_setPathToAssetContextDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPathToAssetContextDirectory:");
}

id objc_msgSend_setPendingBlocks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingBlocks:");
}

id objc_msgSend_setPendingCancelView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingCancelView:");
}

id objc_msgSend_setPendingDropView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingDropView:");
}

id objc_msgSend_setPendingTransitions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingTransitions:");
}

id objc_msgSend_setPendingWrapper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingWrapper:");
}

id objc_msgSend_setPerStateContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerStateContent:");
}

id objc_msgSend_setPercentDrivenInteractiveTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPercentDrivenInteractiveTransition:");
}

id objc_msgSend_setPerformantForScrolling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerformantForScrolling:");
}

id objc_msgSend_setPeriodicTimeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPeriodicTimeObserver:");
}

id objc_msgSend_setPermanent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermanent:");
}

id objc_msgSend_setPersistedToDisk_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistedToDisk:");
}

id objc_msgSend_setPersistentCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentCache:");
}

id objc_msgSend_setPersistentCachePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentCachePath:");
}

id objc_msgSend_setPersistentStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStore:");
}

id objc_msgSend_setPersistentStoreCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreCoordinator:");
}

id objc_msgSend_setPersistentStoreDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreDescriptions:");
}

id objc_msgSend_setPersistentStoreInitializedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreInitializedHandler:");
}

id objc_msgSend_setPersistentStoreURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreURL:");
}

id objc_msgSend_setPlLocationRangeStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlLocationRangeStart:");
}

id objc_msgSend_setPlUserData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlUserData:");
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholder:");
}

id objc_msgSend_setPlacement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlacement:");
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlayer:");
}

id objc_msgSend_setPopoverBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopoverBackgroundColor:");
}

id objc_msgSend_setPopoverTitleColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopoverTitleColor:");
}

id objc_msgSend_setPopping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPopping:");
}

id objc_msgSend_setPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPosition:");
}

id objc_msgSend_setPotentialPrimary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPotentialPrimary:");
}

id objc_msgSend_setPreCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreCompletionHandler:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPreferSlideForDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferSlideForDismiss:");
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredContentSize:");
}

id objc_msgSend_setPreferredContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredContentSizeCategory:");
}

id objc_msgSend_setPreferredMenuElementOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredMenuElementOrder:");
}

id objc_msgSend_setPreferredPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredPresentationStyle:");
}

id objc_msgSend_setPreferredSymbolConfigurationForImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredSymbolConfigurationForImage:");
}

id objc_msgSend_setPrefersCrossfade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersCrossfade:");
}

id objc_msgSend_setPrefersFullSizePreview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrefersFullSizePreview:");
}

id objc_msgSend_setPreloadsCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreloadsCache:");
}

id objc_msgSend_setPresentationRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationRect:");
}

id objc_msgSend_setPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationStyle:");
}

id objc_msgSend_setPresentationView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationView:");
}

id objc_msgSend_setPresentingDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentingDelegate:");
}

id objc_msgSend_setPresentingViewControllerIsFullScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentingViewControllerIsFullScreen:");
}

id objc_msgSend_setPriceString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriceString:");
}

id objc_msgSend_setPrimaryActivityItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryActivityItem:");
}

id objc_msgSend_setPrimaryRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryRequest:");
}

id objc_msgSend_setPrimitiveValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimitiveValue:forKey:");
}

id objc_msgSend_setPrioritizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrioritizer:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setProcessingOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProcessingOptions:");
}

id objc_msgSend_setProfilesToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProfilesToFetch:");
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:");
}

id objc_msgSend_setProgressColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressColor:");
}

id objc_msgSend_setPropertiesToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesToFetch:");
}

id objc_msgSend_setPropertiesToGroupBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesToGroupBy:");
}

id objc_msgSend_setProperty_forKey_domain_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProperty:forKey:domain:");
}

id objc_msgSend_setProportionRead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProportionRead:");
}

id objc_msgSend_setProviderBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProviderBlock:");
}

id objc_msgSend_setPruneScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPruneScore:");
}

id objc_msgSend_setPublisherLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublisherLocation:");
}

id objc_msgSend_setPublisherName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublisherName:");
}

id objc_msgSend_setPublisherYear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublisherYear:");
}

id objc_msgSend_setQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuality:");
}

id objc_msgSend_setQualityOfService_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQualityOfService:");
}

id objc_msgSend_setQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuery:");
}

id objc_msgSend_setQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueue:");
}

id objc_msgSend_setQueuePriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueuePriority:");
}

id objc_msgSend_setRasterizationScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRasterizationScale:");
}

id objc_msgSend_setRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRate:");
}

id objc_msgSend_setRate_withVolumeRampDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRate:withVolumeRampDuration:");
}

id objc_msgSend_setRawCurrentCardOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRawCurrentCardOffset:");
}

id objc_msgSend_setReadCFIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadCFIs:");
}

id objc_msgSend_setReadOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadOnly:");
}

id objc_msgSend_setReadProportion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadProportion:");
}

id objc_msgSend_setReadingCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingCount:");
}

id objc_msgSend_setReadingDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingDirection:");
}

id objc_msgSend_setReadingPositionAbsolutePhysicalLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionAbsolutePhysicalLocation:");
}

id objc_msgSend_setReadingPositionAnnotationVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionAnnotationVersion:");
}

id objc_msgSend_setReadingPositionAssetVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionAssetVersion:");
}

id objc_msgSend_setReadingPositionCFIString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionCFIString:");
}

id objc_msgSend_setReadingPositionLocationRangeEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionLocationRangeEnd:");
}

id objc_msgSend_setReadingPositionLocationRangeStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionLocationRangeStart:");
}

id objc_msgSend_setReadingPositionPhysicalPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionPhysicalPageNumber:");
}

id objc_msgSend_setReadingPositionStorageUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionStorageUUID:");
}

id objc_msgSend_setReadingPositionUserData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionUserData:");
}

id objc_msgSend_setReadingPositionUserUpdatedDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingPositionUserUpdatedDate:");
}

id objc_msgSend_setReadingProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingProgress:");
}

id objc_msgSend_setReadingProgressHighWaterMark_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingProgressHighWaterMark:");
}

id objc_msgSend_setReadingStatisticsBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingStatisticsBook:");
}

id objc_msgSend_setReadingStatisticsDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingStatisticsDataSource:");
}

id objc_msgSend_setReadyToSeedRecentBooksList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadyToSeedRecentBooksList:");
}

id objc_msgSend_setReferenceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReferenceView:");
}

id objc_msgSend_setRelationshipKeyPathsForPrefetching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRelationshipKeyPathsForPrefetching:");
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoteObjectInterface:");
}

id objc_msgSend_setRemovedOnCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemovedOnCompletion:");
}

id objc_msgSend_setRepeatCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRepeatCount:");
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequest:");
}

id objc_msgSend_setRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestOptions:");
}

id objc_msgSend_setRequestedTimeToleranceAfter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestedTimeToleranceAfter:");
}

id objc_msgSend_setRequestedTimeToleranceBefore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestedTimeToleranceBefore:");
}

id objc_msgSend_setResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResult:");
}

id objc_msgSend_setResultType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultType:");
}

id objc_msgSend_setReturnValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnValue:");
}

id objc_msgSend_setReturnsDistinctResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnsDistinctResults:");
}

id objc_msgSend_setReturnsObjectsAsFaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnsObjectsAsFaults:");
}

id objc_msgSend_setReverse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReverse:");
}

id objc_msgSend_setReversed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReversed:");
}

id objc_msgSend_setRightArrowButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightArrowButton:");
}

id objc_msgSend_setRightBarButtonItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItems:");
}

id objc_msgSend_setRightBarButtonItems_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightBarButtonItems:animated:");
}

id objc_msgSend_setRightPageShortenString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightPageShortenString:");
}

id objc_msgSend_setRightPageString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightPageString:");
}

id objc_msgSend_setRollback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRollback:");
}

id objc_msgSend_setRoundedCorners_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRoundedCorners:");
}

id objc_msgSend_setRowBottomGradient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowBottomGradient:");
}

id objc_msgSend_setRowSolidFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowSolidFillColor:");
}

id objc_msgSend_setRowSolidFillColorBottommostAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowSolidFillColorBottommostAlpha:");
}

id objc_msgSend_setRowSolidFillColorTopmostAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowSolidFillColorTopmostAlpha:");
}

id objc_msgSend_setRowTopGradientColor0_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowTopGradientColor0:");
}

id objc_msgSend_setRowTopGradientColor1_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowTopGradientColor1:");
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScale:");
}

id objc_msgSend_setScaledContractedOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScaledContractedOffset:");
}

id objc_msgSend_setScanLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScanLocation:");
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScheme:");
}

id objc_msgSend_setScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScore:");
}

id objc_msgSend_setScreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScreen:");
}

id objc_msgSend_setScrimAlpha_animated_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrimAlpha:animated:duration:");
}

id objc_msgSend_setScrimColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrimColor:");
}

id objc_msgSend_setScrimColorList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrimColorList:");
}

id objc_msgSend_setScrollEdgeAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEdgeAppearance:");
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEnabled:");
}

id objc_msgSend_setScrollIndicatorInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollIndicatorInsets:");
}

id objc_msgSend_setScrollStartCardIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollStartCardIndex:");
}

id objc_msgSend_setScrollToTopVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollToTopVelocity:");
}

id objc_msgSend_setScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollView:");
}

id objc_msgSend_setScrollViewVerticalVelocityWhenDraggingEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollViewVerticalVelocityWhenDraggingEnded:");
}

id objc_msgSend_setScrollingAssertions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollingAssertions:");
}

id objc_msgSend_setScrollingToTop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollingToTop:");
}

id objc_msgSend_setScrubberWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrubberWidth:");
}

id objc_msgSend_setSearchBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchBackgroundColor:");
}

id objc_msgSend_setSearchBackgroundColorList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchBackgroundColorList:");
}

id objc_msgSend_setSearchBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchBarStyle:");
}

id objc_msgSend_setSearchPlaceholderTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchPlaceholderTextColor:");
}

id objc_msgSend_setSearchScopes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchScopes:");
}

id objc_msgSend_setSearchTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchTextColor:");
}

id objc_msgSend_setSectionContainingExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionContainingExperience:");
}

id objc_msgSend_setSegmentIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentIDs:");
}

id objc_msgSend_setSegmentSetIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentSetIDs:");
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelected:");
}

id objc_msgSend_setSelectedBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedBackgroundView:");
}

id objc_msgSend_setSelectedIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedIndex:");
}

id objc_msgSend_setSelectedIndex_withTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedIndex:withTransition:");
}

id objc_msgSend_setSelectedOutline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedOutline:");
}

id objc_msgSend_setSelectedSegmentTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedSegmentTextColor:");
}

id objc_msgSend_setSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedText:");
}

id objc_msgSend_setSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelector:");
}

id objc_msgSend_setSeparatorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorColor:");
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorInset:");
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorStyle:");
}

id objc_msgSend_setSeparatorsVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorsVisible:");
}

id objc_msgSend_setSerializeFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerializeFormat:");
}

id objc_msgSend_setSeriesAdamId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeriesAdamId:");
}

id objc_msgSend_setSeriesDecomposer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeriesDecomposer:");
}

id objc_msgSend_setSessionContextType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionContextType:");
}

id objc_msgSend_setSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionID:");
}

id objc_msgSend_setSettingContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSettingContentOffset:");
}

id objc_msgSend_setSetup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSetup:");
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowColor:");
}

id objc_msgSend_setShadowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowHeight:");
}

id objc_msgSend_setShadowLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowLayer:");
}

id objc_msgSend_setShadowLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowLeft:");
}

id objc_msgSend_setShadowOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOffset:");
}

id objc_msgSend_setShadowOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOpacity:");
}

id objc_msgSend_setShadowPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowPath:");
}

id objc_msgSend_setShadowRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowRadius:");
}

id objc_msgSend_setShadowTop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowTop:");
}

id objc_msgSend_setShadowWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowWidth:");
}

id objc_msgSend_setShareButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShareButton:");
}

id objc_msgSend_setSharingStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharingStyle:");
}

id objc_msgSend_setShelfTopColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShelfTopColor:");
}

id objc_msgSend_setShouldAddStoreAsynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAddStoreAsynchronously:");
}

id objc_msgSend_setShouldAllowInterfaceRotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAllowInterfaceRotation:");
}

id objc_msgSend_setShouldInferMappingModelAutomatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldInferMappingModelAutomatically:");
}

id objc_msgSend_setShouldInvertContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldInvertContent:");
}

id objc_msgSend_setShouldMigrateStoreAutomatically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldMigrateStoreAutomatically:");
}

id objc_msgSend_setShouldRasterize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldRasterize:");
}

id objc_msgSend_setShouldRetainBackgroundAndTitleState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldRetainBackgroundAndTitleState:");
}

id objc_msgSend_setShowCloseBox_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowCloseBox:");
}

id objc_msgSend_setShowImages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowImages:");
}

id objc_msgSend_setShowMoreAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowMoreAttributedText:");
}

id objc_msgSend_setShowMoreFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowMoreFont:");
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsHorizontalScrollIndicator:");
}

id objc_msgSend_setShowsTouchWhenHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsTouchWhenHighlighted:");
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVerticalScrollIndicator:");
}

id objc_msgSend_setSide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSide:");
}

id objc_msgSend_setSideInsetFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSideInsetFactor:");
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSize:");
}

id objc_msgSend_setSnapshotAnchorPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapshotAnchorPoint:");
}

id objc_msgSend_setSnapshotContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapshotContainerView:");
}

id objc_msgSend_setSnapshotFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapshotFrame:");
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortDescriptors:");
}

id objc_msgSend_setSourceImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceImage:");
}

id objc_msgSend_setSpeakScreenHighlightColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakScreenHighlightColor:");
}

id objc_msgSend_setSpeakScreenUnderlineColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeakScreenUnderlineColor:");
}

id objc_msgSend_setSpecialization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecialization:");
}

id objc_msgSend_setSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpeed:");
}

id objc_msgSend_setSpineIndexUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpineIndexUpdated:");
}

id objc_msgSend_setSpringAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpringAnimation:");
}

id objc_msgSend_setStackIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStackIDs:");
}

id objc_msgSend_setStackOutline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStackOutline:");
}

id objc_msgSend_setStackRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStackRequest:");
}

id objc_msgSend_setStandardAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStandardAppearance:");
}

id objc_msgSend_setStartCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartCell:");
}

id objc_msgSend_setStartPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartPoint:");
}

id objc_msgSend_setStartPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartPosition:");
}

id objc_msgSend_setStarted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStarted:");
}

id objc_msgSend_setStartingRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartingRect:");
}

id objc_msgSend_setStartingTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartingTransform:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateChangeBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateChangeBlock:");
}

id objc_msgSend_setStatusBarBackgroundController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarBackgroundController:");
}

id objc_msgSend_setStiffness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStiffness:");
}

id objc_msgSend_setStoreFrontIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreFrontIdentifier:");
}

id objc_msgSend_setStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreId:");
}

id objc_msgSend_setStoreIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreIdentifier:");
}

id objc_msgSend_setStoreName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreName:");
}

id objc_msgSend_setStoredData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoredData:");
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setString:");
}

id objc_msgSend_setStroke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStroke");
}

id objc_msgSend_setStrokeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeColor:");
}

id objc_msgSend_setStrokeWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeWidth:");
}

id objc_msgSend_setSubject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubject:");
}

id objc_msgSend_setSubscribers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSubscribers:");
}

id objc_msgSend_setSuggestedName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuggestedName:");
}

id objc_msgSend_setSupportedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportedActivityTypes:");
}

id objc_msgSend_setSuspended_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuspended:");
}

id objc_msgSend_setSync_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSync:");
}

id objc_msgSend_setSyncManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncManager:");
}

id objc_msgSend_setSyncProducer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncProducer:");
}

id objc_msgSend_setSyncVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSyncVersion:");
}

id objc_msgSend_setSystemDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemDefaults:");
}

id objc_msgSend_setSystemGrayColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemGrayColor:");
}

id objc_msgSend_setTableViewBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewBackgroundColor:");
}

id objc_msgSend_setTableViewCellBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewCellBackgroundColor:");
}

id objc_msgSend_setTableViewCellSelectedColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewCellSelectedColor:");
}

id objc_msgSend_setTableViewHeaderViewColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewHeaderViewColor:");
}

id objc_msgSend_setTableViewSeparatorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewSeparatorColor:");
}

id objc_msgSend_setTableViewToolbarColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewToolbarColor:");
}

id objc_msgSend_setTableViewToolbarTranslucent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableViewToolbarTranslucent:");
}

id objc_msgSend_setTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTag:");
}

id objc_msgSend_setTapToDismissGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTapToDismissGestureRecognizer:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTargetSceneController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetSceneController:");
}

id objc_msgSend_setTargetSceneDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetSceneDescriptor:");
}

id objc_msgSend_setTargetTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetTransform:");
}

id objc_msgSend_setTemporaryURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTemporaryURL:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTextContainerInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextContainerInset:");
}

id objc_msgSend_setTextDragOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextDragOptions:");
}

id objc_msgSend_setTextHighlightType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextHighlightType:");
}

id objc_msgSend_setTextProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextProvider:");
}

id objc_msgSend_setTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTheme:");
}

id objc_msgSend_setThemeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThemeIdentifier:");
}

id objc_msgSend_setThemeInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThemeInterfaceStyle:");
}

id objc_msgSend_setThemePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThemePage:");
}

id objc_msgSend_setThickness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThickness:");
}

id objc_msgSend_setThreadPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThreadPriority:");
}

id objc_msgSend_setThumbImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThumbImage:forState:");
}

id objc_msgSend_setThumbnail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThumbnail:");
}

id objc_msgSend_setTimeClosed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeClosed:");
}

id objc_msgSend_setTimeOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeOffset:");
}

id objc_msgSend_setTimeOpened_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeOpened:");
}

id objc_msgSend_setTimePosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimePosition:");
}

id objc_msgSend_setTimeStamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStamp:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTimeUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeUpdated:");
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeZone:");
}

id objc_msgSend_setTimeoutInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeoutInterval:");
}

id objc_msgSend_setTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimestamp:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleColor:forState:");
}

id objc_msgSend_setTitleTextAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleTextAttributes:");
}

id objc_msgSend_setTitleTextAttributes_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleTextAttributes:forState:");
}

id objc_msgSend_setTitleView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleView:");
}

id objc_msgSend_setToView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToView:");
}

id objc_msgSend_setToViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToViewController:");
}

id objc_msgSend_setToViewSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToViewSnapshot:");
}

id objc_msgSend_setTocEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTocEntry:");
}

id objc_msgSend_setTocPageNumberTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTocPageNumberTextColor:");
}

id objc_msgSend_setToolbarHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarHeight:");
}

id objc_msgSend_setToolbarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarStyle:");
}

id objc_msgSend_setToolbarTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarTintColor:");
}

id objc_msgSend_setToolbarTitleColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarTitleColor:");
}

id objc_msgSend_setTotalCostLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalCostLimit:");
}

id objc_msgSend_setTotalCoverCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalCoverCount:");
}

id objc_msgSend_setTotalStoredCost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalStoredCost:");
}

id objc_msgSend_setTouchesNext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchesNext:");
}

id objc_msgSend_setTouchesPrev_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTouchesPrev:");
}

id objc_msgSend_setTrackOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackOrientation:");
}

id objc_msgSend_setTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTraitCollection:");
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform:");
}

id objc_msgSend_setTransitionInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitionInProgress:");
}

id objc_msgSend_setTransitioningContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitioningContext:");
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransitioningDelegate:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setTranslucent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslucent:");
}

id objc_msgSend_setTreatmentIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTreatmentIDs:");
}

id objc_msgSend_setTriggeredLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTriggeredLocation:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setURL:");
}

id objc_msgSend_setUnderlinePosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlinePosition:");
}

id objc_msgSend_setUnderlyingCardSetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingCardSetViewController:");
}

id objc_msgSend_setUndoManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndoManager:");
}

id objc_msgSend_setUnitsStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnitsStyle:");
}

id objc_msgSend_setUniversalLinkURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUniversalLinkURL:");
}

id objc_msgSend_setUnknownAspectRatio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnknownAspectRatio:");
}

id objc_msgSend_setUnresolvedConflict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnresolvedConflict:");
}

id objc_msgSend_setUp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUp:");
}

id objc_msgSend_setUploadingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUploadingError:");
}

id objc_msgSend_setUploadingPercent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUploadingPercent:");
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrl:");
}

id objc_msgSend_setUrlProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrlProvider:");
}

id objc_msgSend_setUrlString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrlString:");
}

id objc_msgSend_setUseInnerRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseInnerRect:");
}

id objc_msgSend_setUseSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseSelectedText:");
}

id objc_msgSend_setUseSnapshots_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseSnapshots:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUserInterfaceLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInterfaceLevel:");
}

id objc_msgSend_setUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInterfaceStyle:");
}

id objc_msgSend_setUserModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserModificationDate:");
}

id objc_msgSend_setUsesExternalPlaybackWhileExternalScreenIsActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesExternalPlaybackWhileExternalScreenIsActive:");
}

id objc_msgSend_setUsesGroupingSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesGroupingSeparator:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:animated:");
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forHTTPHeaderField:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValue_forPragmaNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forPragmaNamed:");
}

id objc_msgSend_setValueFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueFunction:");
}

id objc_msgSend_setValueInMutableDictionary_forKey_withValueForExtendedAttributeNamed_fromUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValueInMutableDictionary:forKey:withValueForExtendedAttributeNamed:fromUrl:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_setValuesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValuesFromDictionary:");
}

id objc_msgSend_setVelocityForPop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVelocityForPop:");
}

id objc_msgSend_setVendedImageInterest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVendedImageInterest:");
}

id objc_msgSend_setVideoGravity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoGravity:");
}

id objc_msgSend_setVideoLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVideoLayer:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:");
}

id objc_msgSend_setViewFrameBeforeAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewFrameBeforeAnimation:");
}

id objc_msgSend_setViewScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewScale:");
}

id objc_msgSend_setViewState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewState:");
}

id objc_msgSend_setViewToHide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewToHide:");
}

id objc_msgSend_setViewToSlide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewToSlide:");
}

id objc_msgSend_setViewToSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewToSnapshot:");
}

id objc_msgSend_setVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisible:");
}

id objc_msgSend_setVisibleCardIndexesWithAdjustedCoverSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisibleCardIndexesWithAdjustedCoverSource:");
}

id objc_msgSend_setVisibleCardRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisibleCardRange:");
}

id objc_msgSend_setVisibleCoverSourceByIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisibleCoverSourceByIndex:");
}

id objc_msgSend_setVisibleRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisibleRange:");
}

id objc_msgSend_setWeekOfYear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWeekOfYear:");
}

id objc_msgSend_setWhiteScrimView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWhiteScrimView:");
}

id objc_msgSend_setWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWidth:");
}

id objc_msgSend_setWidthForAspectRatio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWidthForAspectRatio:");
}

id objc_msgSend_setWidthTracksTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWidthTracksTextView:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWordLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWordLimit:");
}

id objc_msgSend_setWorkBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkBlock:");
}

id objc_msgSend_setWorkDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkDescription:");
}

id objc_msgSend_setWorkItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkItem:");
}

id objc_msgSend_setWorkItemTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkItemTimeout:");
}

id objc_msgSend_setWorkQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorkQueue:");
}

id objc_msgSend_setWorking_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWorking:");
}

id objc_msgSend_setXOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setXOffset:");
}

id objc_msgSend_setYStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setYStart:");
}

id objc_msgSend_setZPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZPosition:");
}

id objc_msgSend_setZeroFormattingBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZeroFormattingBehavior:");
}

id objc_msgSend_settingContentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingContentOffset");
}

id objc_msgSend_settingsForPrivateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsForPrivateStyle:");
}

id objc_msgSend_settingsForPrivateStyle_graphicsQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsForPrivateStyle:graphicsQuality:");
}

id objc_msgSend_settingsWithUserID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settingsWithUserID:completion:");
}

id objc_msgSend_settlingDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settlingDuration");
}

id objc_msgSend_setup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setup");
}

id objc_msgSend_setupAnimatorsForCancellation_velocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupAnimatorsForCancellation:velocity:");
}

id objc_msgSend_setupEndTimeObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupEndTimeObserver");
}

id objc_msgSend_setupForInteractiveDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupForInteractiveDismiss");
}

id objc_msgSend_setupRootContentScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupRootContentScrollView:");
}

id objc_msgSend_setupSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupSource");
}

id objc_msgSend_setupTimeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupTimeObserver:");
}

id objc_msgSend_setupWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupWithCompletion:");
}

id objc_msgSend_setupWithCoverSource_cardCoverSource_coverView_isDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupWithCoverSource:cardCoverSource:coverView:isDismiss:");
}

id objc_msgSend_setupWithCoverSource_coverView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupWithCoverSource:coverView:");
}

id objc_msgSend_shadowColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowColor");
}

id objc_msgSend_shadowHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowHeight");
}

id objc_msgSend_shadowLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowLayer");
}

id objc_msgSend_shadowLeft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowLeft");
}

id objc_msgSend_shadowOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowOffset");
}

id objc_msgSend_shadowTop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowTop");
}

id objc_msgSend_shadowWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowWidth");
}

id objc_msgSend_shapeWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shapeWithPath:");
}

id objc_msgSend_shapeWithRoundedRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shapeWithRoundedRect:");
}

id objc_msgSend_shareButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareButton");
}

id objc_msgSend_shareType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareType");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shared");
}

id objc_msgSend_sharedClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedClient");
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedConnection");
}

id objc_msgSend_sharedGenerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedGenerator");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedManager");
}

id objc_msgSend_sharedProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedProvider");
}

id objc_msgSend_sharedReachabilityForInternetConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedReachabilityForInternetConnection");
}

id objc_msgSend_sharedReporter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedReporter");
}

id objc_msgSend_sharedSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedSession");
}

id objc_msgSend_sharingStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharingStyle");
}

id objc_msgSend_shortDateStringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortDateStringFromDate:");
}

id objc_msgSend_shortDateStringFromDateNoRel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortDateStringFromDateNoRel:");
}

id objc_msgSend_shortDescriptionOfProcessingOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortDescriptionOfProcessingOptions");
}

id objc_msgSend_shortTimeStringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortTimeStringFromDate:");
}

id objc_msgSend_shouldAllowInterfaceRotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowInterfaceRotation");
}

id objc_msgSend_shouldAutomaticallyForwardAppearanceMethods(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutomaticallyForwardAppearanceMethods");
}

id objc_msgSend_shouldAutomaticallyReportMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAutomaticallyReportMetrics");
}

id objc_msgSend_shouldBeRemovedOnPrimaryChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldBeRemovedOnPrimaryChanged:");
}

id objc_msgSend_shouldDim(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDim");
}

id objc_msgSend_shouldDisableOptimizeSpeed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisableOptimizeSpeed");
}

id objc_msgSend_shouldDisableTouchEmulation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisableTouchEmulation");
}

id objc_msgSend_shouldDisplayPageInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisplayPageInfo");
}

id objc_msgSend_shouldInvertContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldInvertContent");
}

id objc_msgSend_shouldMonitorLightLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldMonitorLightLevel");
}

id objc_msgSend_shouldOnlyAllowDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldOnlyAllowDismiss");
}

id objc_msgSend_shouldPerformChildTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPerformChildTransition:");
}

id objc_msgSend_shouldPerformTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPerformTransition");
}

id objc_msgSend_shouldRecheckAdamID_withIntervalInDays_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRecheckAdamID:withIntervalInDays:inManagedObjectContext:");
}

id objc_msgSend_shouldRetainBackgroundAndTitleState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldRetainBackgroundAndTitleState");
}

id objc_msgSend_shouldShareActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShareActivityType:");
}

id objc_msgSend_showBarWithTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBarWithTransition:");
}

id objc_msgSend_showImages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showImages");
}

id objc_msgSend_showMoreTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showMoreTextColor");
}

id objc_msgSend_showViewController_sendAppearanceMessages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showViewController:sendAppearanceMessages:");
}

id objc_msgSend_side(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "side");
}

id objc_msgSend_sideInsetFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideInsetFactor");
}

id objc_msgSend_signalSyncToCKTransactionForEntityName_syncManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalSyncToCKTransactionForEntityName:syncManager:");
}

id objc_msgSend_signalWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalWithCompletion:");
}

id objc_msgSend_singleBookMetadataProviderWithAssetID_assetURL_bookVersionString_pathToAssetContextDirectory_isManagedBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singleBookMetadataProviderWithAssetID:assetURL:bookVersionString:pathToAssetContextDirectory:isManagedBook:");
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "size");
}

id objc_msgSend_sizeForAnnotation_font_width_numberOfLines_useSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeForAnnotation:font:width:numberOfLines:useSelectedText:");
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeThatFitsControls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFitsControls:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeToFit");
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithAttributes:");
}

id objc_msgSend_skipToast(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "skipToast");
}

id objc_msgSend_sliderAlpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderAlpha");
}

id objc_msgSend_sliderIsProgressSlider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sliderIsProgressSlider:");
}

id objc_msgSend_smallAirplayBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smallAirplayBackground");
}

id objc_msgSend_snapshotAnchorPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotAnchorPoint");
}

id objc_msgSend_snapshotContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotContainerView");
}

id objc_msgSend_snapshotFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotFrame");
}

id objc_msgSend_snapshotViewAfterScreenUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotViewAfterScreenUpdates:");
}

id objc_msgSend_sortAuthor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortAuthor");
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortDescriptorWithKey:ascending:");
}

id objc_msgSend_sortTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortTitle");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingSelector:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingDescriptors:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_sortedBestMatchOf_toCandidateImages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedBestMatchOf:toCandidateImages:");
}

id objc_msgSend_sourceImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceImage");
}

id objc_msgSend_speed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "speed");
}

id objc_msgSend_spineIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spineIndex");
}

id objc_msgSend_spineIndexUpdated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spineIndexUpdated");
}

id objc_msgSend_springAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "springAnimation");
}

id objc_msgSend_sq_activateTransactions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_activateTransactions");
}

id objc_msgSend_sq_cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_cancel");
}

id objc_msgSend_sq_commitsToProcess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_commitsToProcess");
}

id objc_msgSend_sq_get_caller_value_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_get:caller:value:error:");
}

id objc_msgSend_sq_isFinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_isFinal");
}

id objc_msgSend_sq_removeFinishedTransactions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_removeFinishedTransactions");
}

id objc_msgSend_sq_rollbacksToProcess(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_rollbacksToProcess");
}

id objc_msgSend_sq_whenCancelledBlocks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_whenCancelledBlocks");
}

id objc_msgSend_sq_whenCompletedBlocks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sq_whenCompletedBlocks");
}

id objc_msgSend_stackIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackIDs");
}

id objc_msgSend_stackLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackLayer");
}

id objc_msgSend_stackManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackManager");
}

id objc_msgSend_stackOutline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackOutline");
}

id objc_msgSend_stackRenderingResultSrc_result_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackRenderingResultSrc:result:forRequest:");
}

id objc_msgSend_stackRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackRequest");
}

id objc_msgSend_standardDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardDescription");
}

id objc_msgSend_standardNotes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardNotes");
}

id objc_msgSend_standardProgressCapability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardProgressCapability");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_standardWidgetReportingCapability(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardWidgetReportingCapability");
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "start");
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimating");
}

id objc_msgSend_startAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimation");
}

id objc_msgSend_startAnimationAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimationAfterDelay:");
}

id objc_msgSend_startIdleTimer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startIdleTimer:");
}

id objc_msgSend_startInputCheck(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startInputCheck");
}

id objc_msgSend_startPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPosition");
}

id objc_msgSend_startQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startQuery");
}

id objc_msgSend_startStepAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startStepAtIndex:");
}

id objc_msgSend_startSyncToCKWithSyncManager_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSyncToCKWithSyncManager:completion:");
}

id objc_msgSend_startWithLookupBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startWithLookupBlock:");
}

id objc_msgSend_started(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "started");
}

id objc_msgSend_startingRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startingRect");
}

id objc_msgSend_startingTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startingTransform");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_stateChangeBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateChangeBlock");
}

id objc_msgSend_stateChangeCoalescingCallBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateChangeCoalescingCallBlock");
}

id objc_msgSend_statement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statement");
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "status");
}

id objc_msgSend_statusBarBackgroundController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarBackgroundController");
}

id objc_msgSend_statusBarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarFrame");
}

id objc_msgSend_statusBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarHeight");
}

id objc_msgSend_statusBarManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarManager");
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusCode");
}

id objc_msgSend_statusOfValueForKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusOfValueForKey:error:");
}

id objc_msgSend_stiffness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stiffness");
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stop");
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnimating");
}

id objc_msgSend_stopAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnimation:");
}

id objc_msgSend_stopNotifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopNotifier");
}

id objc_msgSend_stopQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopQuery");
}

id objc_msgSend_stopwatchWithDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopwatchWithDescription:");
}

id objc_msgSend_storageKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storageKey");
}

id objc_msgSend_storeAddedEntries_forRequest_storingCompletedHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeAddedEntries:forRequest:storingCompletedHandler:");
}

id objc_msgSend_storeFrontID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeFrontID");
}

id objc_msgSend_storeID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeID");
}

id objc_msgSend_storeId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeId");
}

id objc_msgSend_storeImage_forKey_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeImage:forKey:size:");
}

id objc_msgSend_storeImage_forKey_size_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeImage:forKey:size:format:");
}

id objc_msgSend_storeImage_forRequest_forEntryLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeImage:forRequest:forEntryLocation:");
}

id objc_msgSend_storeLink(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeLink");
}

id objc_msgSend_storeMgr(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeMgr");
}

id objc_msgSend_storeName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeName");
}

id objc_msgSend_storePlaylistID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storePlaylistID");
}

id objc_msgSend_storeReachable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeReachable");
}

id objc_msgSend_storeShortURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeShortURL");
}

id objc_msgSend_storeURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeURL");
}

id objc_msgSend_storeURLForHTMLGenerator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeURLForHTMLGenerator:");
}

id objc_msgSend_storeURLPreferShort(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeURLPreferShort");
}

id objc_msgSend_storedData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storedData");
}

id objc_msgSend_storingMedium(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storingMedium");
}

id objc_msgSend_stretchableImageWithLeftCapWidth_topCapHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stretchableImageWithLeftCapWidth:topCapHeight:");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathExtension:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByConvertingNewlineCharacterSetToSpace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByConvertingNewlineCharacterSetToSpace");
}

id objc_msgSend_stringByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByDeletingLastPathComponent");
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByDeletingPathExtension");
}

id objc_msgSend_stringByEnclosingInQuotes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByEnclosingInQuotes");
}

id objc_msgSend_stringByEscapingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByEscapingString:");
}

id objc_msgSend_stringByRemovingEnclosingQuotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByRemovingEnclosingQuotations");
}

id objc_msgSend_stringByReplacingCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingCharactersInRange:withString:");
}

id objc_msgSend_stringByReplacingMatchesInString_options_range_withTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingMatchesInString:options:range:withTemplate:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByResolvingSymlinksInPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByResolvingSymlinksInPath");
}

id objc_msgSend_stringByStandardizingPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByStandardizingPath");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringByTruncatingToLength_options_truncationString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTruncatingToLength:options:truncationString:");
}

id objc_msgSend_stringForImageQuality_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForImageQuality:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringForLeftPageLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForLeftPageLabel");
}

id objc_msgSend_stringForRightPageLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForRightPageLabel");
}

id objc_msgSend_stringFromByteCount_countStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromByteCount:countStyle:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringFromNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromNumber:");
}

id objc_msgSend_stringFromTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromTimeInterval:");
}

id objc_msgSend_stringNeedsHTMLParsing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringNeedsHTMLParsing:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCapacity:");
}

id objc_msgSend_stringWithContentsOfFile_encoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithContentsOfFile:encoding:error:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stroke");
}

id objc_msgSend_strokeColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strokeColor");
}

id objc_msgSend_strokeColorUsesTintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strokeColorUsesTintColor");
}

id objc_msgSend_strongToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strongToStrongObjectsMapTable");
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strongToWeakObjectsMapTable");
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "style");
}

id objc_msgSend_styleMenuCell_withTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "styleMenuCell:withTraitCollection:");
}

id objc_msgSend_styleSection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "styleSection");
}

id objc_msgSend_styleWithEffect_shape_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "styleWithEffect:shape:");
}

id objc_msgSend_styleWithShape_constrainedAxes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "styleWithShape:constrainedAxes:");
}

id objc_msgSend_stylizeBCNavigationBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeBCNavigationBar:");
}

id objc_msgSend_stylizeKeyboard_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeKeyboard:");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_subject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subject");
}

id objc_msgSend_sublayers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sublayers");
}

id objc_msgSend_subpredicates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subpredicates");
}

id objc_msgSend_subscribe_toKeys_inNamespace_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribe:toKeys:inNamespace:callback:");
}

id objc_msgSend_subscribers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subscribers");
}

id objc_msgSend_substringByUnescapingString_inRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringByUnescapingString:inRange:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_subtractCFISet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subtractCFISet:");
}

id objc_msgSend_subviewOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviewOfClass:");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_superclass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superclass");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_supportedActivityTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedActivityTypes");
}

id objc_msgSend_supportedFileExtensions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedFileExtensions");
}

id objc_msgSend_supportedInterfaceOrientations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedInterfaceOrientations");
}

id objc_msgSend_supportedMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedMetrics");
}

id objc_msgSend_supportedUrlSchemes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportedUrlSchemes");
}

id objc_msgSend_supportediBooksInternalURLSchemes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportediBooksInternalURLSchemes");
}

id objc_msgSend_supportediBooksStoreURLSchemes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportediBooksStoreURLSchemes");
}

id objc_msgSend_supportsActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsActivityType:");
}

id objc_msgSend_supportsImageSets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsImageSets");
}

id objc_msgSend_supportsTheming(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsTheming");
}

id objc_msgSend_suspendAndTeardownForReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspendAndTeardownForReason:");
}

id objc_msgSend_suspendedCardViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspendedCardViewControllers");
}

id objc_msgSend_suspendedCardsScrollingAssertions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspendedCardsScrollingAssertions");
}

id objc_msgSend_symbolicTraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "symbolicTraits");
}

id objc_msgSend_sync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sync");
}

id objc_msgSend_syncDefaultsWithTCC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncDefaultsWithTCC");
}

id objc_msgSend_syncIsLiverpoolAndUbiquityEnabledWithReply_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncIsLiverpoolAndUbiquityEnabledWithReply:");
}

id objc_msgSend_syncManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "syncManager");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronize");
}

id objc_msgSend_synchronousRemoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "synchronousRemoteObjectProxyWithErrorHandler:");
}

id objc_msgSend_system(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "system");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_systemBlackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlackColor");
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlueColor");
}

id objc_msgSend_systemDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemDefaults");
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:");
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:weight:");
}

id objc_msgSend_systemGreenColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGreenColor");
}

id objc_msgSend_systemGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemGroupedBackgroundColor");
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemImageNamed_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:compatibleWithTraitCollection:");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemLayoutSizeFittingSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLayoutSizeFittingSize:");
}

id objc_msgSend_systemOrangeColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemOrangeColor");
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemRedColor");
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemVersion");
}

id objc_msgSend_systemWhiteColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemWhiteColor");
}

id objc_msgSend_tabBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBar");
}

id objc_msgSend_tabBarController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabBarController");
}

id objc_msgSend_tableCellBlueTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableCellBlueTextColor");
}

id objc_msgSend_tableNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableNames");
}

id objc_msgSend_tableSeparatorLightColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableSeparatorLightColor");
}

id objc_msgSend_tableView_didSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:didSelectRowAtIndexPath:");
}

id objc_msgSend_tableView_estimatedHeightForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:estimatedHeightForRowAtIndexPath:");
}

id objc_msgSend_tableView_heightForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:heightForHeaderInSection:");
}

id objc_msgSend_tableView_heightForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:heightForRowAtIndexPath:");
}

id objc_msgSend_tableView_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:numberOfRowsInSection:");
}

id objc_msgSend_tableView_willSelectRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:willSelectRowAtIndexPath:");
}

id objc_msgSend_tableViewBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewBackgroundColor");
}

id objc_msgSend_tableViewCellBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewCellBackgroundColor");
}

id objc_msgSend_tableViewCellSelectedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewCellSelectedColor");
}

id objc_msgSend_tableViewSeparatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewSeparatorColor");
}

id objc_msgSend_tag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tag");
}

id objc_msgSend_tailBody(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tailBody");
}

id objc_msgSend_tailCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tailCFI");
}

id objc_msgSend_tapToDismissGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapToDismissGestureRecognizer");
}

id objc_msgSend_tapToSelectMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapToSelectMode");
}

id objc_msgSend_tapped_atLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapped:atLocation:");
}

id objc_msgSend_target(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "target");
}

id objc_msgSend_targetSceneController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetSceneController");
}

id objc_msgSend_targetSceneDescriptor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetSceneDescriptor");
}

id objc_msgSend_targetTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetTransform");
}

id objc_msgSend_targetView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetView");
}

id objc_msgSend_taskIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "taskIDs");
}

id objc_msgSend_tearDownQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tearDownQuery");
}

id objc_msgSend_teardown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teardown");
}

id objc_msgSend_tellAFriendBaseURLForHTMLGenerator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tellAFriendBaseURLForHTMLGenerator:");
}

id objc_msgSend_tellAFriendEmailBodyURLBase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tellAFriendEmailBodyURLBase");
}

id objc_msgSend_templateBasedDocumentString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "templateBasedDocumentString");
}

id objc_msgSend_templateFromURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "templateFromURL:");
}

id objc_msgSend_templateStringForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "templateStringForName:");
}

id objc_msgSend_temporaryAssetID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "temporaryAssetID");
}

id objc_msgSend_tertiaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tertiaryLabelColor");
}

id objc_msgSend_tertiarySystemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tertiarySystemBackgroundColor");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textColor");
}

id objc_msgSend_textContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textContainer");
}

id objc_msgSend_textForActivityType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textForActivityType:");
}

id objc_msgSend_textItemWithPropertySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textItemWithPropertySource:");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textLabel");
}

id objc_msgSend_textNodes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textNodes");
}

id objc_msgSend_textProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textProvider");
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textView");
}

id objc_msgSend_thaxAnnotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thaxAnnotation");
}

id objc_msgSend_thaxAnnotationIsUnderline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thaxAnnotationIsUnderline");
}

id objc_msgSend_thaxAnnotationStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thaxAnnotationStyle");
}

id objc_msgSend_theme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "theme");
}

id objc_msgSend_themeDescriptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeDescriptions");
}

id objc_msgSend_themeDescriptionsDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeDescriptionsDictionary");
}

id objc_msgSend_themeForAnnotationStyle_pageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeForAnnotationStyle:pageTheme:");
}

id objc_msgSend_themeForAnnotationStyle_pageTheme_isUnderline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeForAnnotationStyle:pageTheme:isUnderline:");
}

id objc_msgSend_themeForNoteEditorViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeForNoteEditorViewController:");
}

id objc_msgSend_themeIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeIdentifier");
}

id objc_msgSend_themeItemForAnnotationStyle_propertyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeItemForAnnotationStyle:propertyName:");
}

id objc_msgSend_themePage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themePage");
}

id objc_msgSend_themeWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeWithIdentifier:");
}

id objc_msgSend_thickness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thickness");
}

id objc_msgSend_threadDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "threadDictionary");
}

id objc_msgSend_throttler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "throttler");
}

id objc_msgSend_thumb(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumb");
}

id objc_msgSend_thumbRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbRect");
}

id objc_msgSend_thumbRectForBounds_trackRect_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbRectForBounds:trackRect:value:");
}

id objc_msgSend_thumbnailResolutionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailResolutionBlock");
}

id objc_msgSend_time(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "time");
}

id objc_msgSend_timeClosed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeClosed");
}

id objc_msgSend_timeControlStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeControlStatus");
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSince1970");
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceDate:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timeOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeOffset");
}

id objc_msgSend_timeOpened(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeOpened");
}

id objc_msgSend_timeOut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeOut");
}

id objc_msgSend_timePosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timePosition");
}

id objc_msgSend_timeStamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeStamp");
}

id objc_msgSend_timeThresholdForPromotion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeThresholdForPromotion");
}

id objc_msgSend_timeThresholdForSamplePromotion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeThresholdForSamplePromotion");
}

id objc_msgSend_timeTracker_didBeginTrackingSession_trackerEventType_asset_readingFeatureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeTracker:didBeginTrackingSession:trackerEventType:asset:readingFeatureFlags:");
}

id objc_msgSend_timeTracker_didEndTrackingSession_duration_trackerEventType_asset_readingFeatureFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeTracker:didEndTrackingSession:duration:trackerEventType:asset:readingFeatureFlags:");
}

id objc_msgSend_timeTracker_didPromoteAsset_deletedFromWantToRead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeTracker:didPromoteAsset:deletedFromWantToRead:");
}

id objc_msgSend_timeUpdated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeUpdated");
}

id objc_msgSend_timeZoneWithAbbreviation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeZoneWithAbbreviation:");
}

id objc_msgSend_timeoutInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeoutInterval");
}

id objc_msgSend_timestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestamp");
}

id objc_msgSend_timestampCacheKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timestampCacheKey");
}

id objc_msgSend_timingFunction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timingFunction");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintColor");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_titleEdgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleEdgeInsets");
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleLabel");
}

id objc_msgSend_titleRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleRectForBounds:");
}

id objc_msgSend_titleTextAttributesForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleTextAttributesForState:");
}

id objc_msgSend_toEndFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toEndFrame");
}

id objc_msgSend_toStartFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toStartFrame");
}

id objc_msgSend_toView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toView");
}

id objc_msgSend_toViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toViewController");
}

id objc_msgSend_toViewSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toViewSnapshot");
}

id objc_msgSend_tocEntriesRequiringProcessing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocEntriesRequiringProcessing");
}

id objc_msgSend_tocEntryAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocEntryAtIndex:");
}

id objc_msgSend_tocEntryStatisticsForHref_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocEntryStatisticsForHref:completion:");
}

id objc_msgSend_tocEntrys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocEntrys");
}

id objc_msgSend_tocEntrysCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocEntrysCount");
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "token");
}

id objc_msgSend_tokenCountWithEnumerationOptions_maxTokenCount_outLimitLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenCountWithEnumerationOptions:maxTokenCount:outLimitLength:");
}

id objc_msgSend_tokenForCurrentIdentityIfICloudDriveEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenForCurrentIdentityIfICloudDriveEnabled");
}

id objc_msgSend_tombstone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tombstone");
}

id objc_msgSend_toolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toolbar");
}

id objc_msgSend_toolbarTitleColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toolbarTitleColor");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topCardSetViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topCardSetViewController");
}

id objc_msgSend_topContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topContentViewController");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_totalCoverCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalCoverCount");
}

id objc_msgSend_totalRowCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalRowCount");
}

id objc_msgSend_totalStoredCost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalStoredCost");
}

id objc_msgSend_touchInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchInsets");
}

id objc_msgSend_touchesForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchesForView:");
}

id objc_msgSend_touchesNext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchesNext");
}

id objc_msgSend_touchesPrev(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchesPrev");
}

id objc_msgSend_touchesShouldCancelInContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchesShouldCancelInContentView:");
}

id objc_msgSend_track(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "track");
}

id objc_msgSend_trackBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackBackgroundColor");
}

id objc_msgSend_trackBreadcrumbImageForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackBreadcrumbImageForState:");
}

id objc_msgSend_trackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackColor");
}

id objc_msgSend_trackDiameter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackDiameter");
}

id objc_msgSend_trackForegroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackForegroundColor");
}

id objc_msgSend_trackOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackOrientation");
}

id objc_msgSend_trackRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackRectForBounds:");
}

id objc_msgSend_trackThickness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackThickness");
}

id objc_msgSend_trackedAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackedAnimations");
}

id objc_msgSend_tracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tracker");
}

id objc_msgSend_tracksScore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tracksScore");
}

id objc_msgSend_tracksWithMediaCharacteristic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tracksWithMediaCharacteristic:");
}

id objc_msgSend_tracksWithMediaType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tracksWithMediaType:");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_traitCollectionByModifyingTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionByModifyingTraits:");
}

id objc_msgSend_traitCollectionLimitedToSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionLimitedToSizeCategory:");
}

id objc_msgSend_traitCollectionWithHorizontalSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithHorizontalSizeClass:");
}

id objc_msgSend_traitCollectionWithTraitsFromCollections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithTraitsFromCollections:");
}

id objc_msgSend_traitCollectionWithUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithUserInterfaceStyle:");
}

id objc_msgSend_traitCollectionWithVerticalSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollectionWithVerticalSizeClass:");
}

id objc_msgSend_traitOverrides(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitOverrides");
}

id objc_msgSend_transactionManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionManager");
}

id objc_msgSend_transactionNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transactionNumber");
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transform");
}

id objc_msgSend_transformController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformController");
}

id objc_msgSend_transformResultSrc_result_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformResultSrc:result:forRequest:");
}

id objc_msgSend_transformSource_to_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformSource:to:completion:");
}

id objc_msgSend_transformSource_to_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformSource:to:forRequest:");
}

id objc_msgSend_transformedQualityFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformedQualityFrom:");
}

id objc_msgSend_transformer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformer");
}

id objc_msgSend_transition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transition");
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionCoordinator");
}

id objc_msgSend_transitionDidComplete_finished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionDidComplete:finished:");
}

id objc_msgSend_transitionDidStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionDidStart:");
}

id objc_msgSend_transitionFromViewController_toViewController_transition_reverse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionFromViewController:toViewController:transition:reverse:");
}

id objc_msgSend_transitionInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionInProgress");
}

id objc_msgSend_transitionRectInView_transition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionRectInView:transition:");
}

id objc_msgSend_transitionToSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionToSettings:");
}

id objc_msgSend_transitionWasCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionWasCancelled");
}

id objc_msgSend_transitionWillStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionWillStart:");
}

id objc_msgSend_transitionWithView_duration_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionWithView:duration:options:animations:completion:");
}

id objc_msgSend_transitioning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitioning");
}

id objc_msgSend_transitioningCardContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitioningCardContent");
}

id objc_msgSend_transitioningContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitioningContext");
}

id objc_msgSend_translationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "translationInView:");
}

id objc_msgSend_treatmentIDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treatmentIDs");
}

id objc_msgSend_treatmentsAsStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "treatmentsAsStrings");
}

id objc_msgSend_triggerTimeObserverAt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggerTimeObserverAt:");
}

id objc_msgSend_triggeredLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "triggeredLocation");
}

id objc_msgSend_trimmedStandardDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trimmedStandardDescription");
}

id objc_msgSend_trimmedStandardNotes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trimmedStandardNotes");
}

id objc_msgSend_truncatedAnnotationSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "truncatedAnnotationSelectedText:");
}

id objc_msgSend_trustedDomains(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trustedDomains");
}

id objc_msgSend_txForCardIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "txForCardIndex");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_typeWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "typeWithIdentifier:");
}

id objc_msgSend_ubiquityDocumentsObserver_didLoadWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityDocumentsObserver:didLoadWithItems:");
}

id objc_msgSend_ubiquityDocumentsObserver_itemsDidBecomeAvailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityDocumentsObserver:itemsDidBecomeAvailable:");
}

id objc_msgSend_ubiquityDocumentsObserver_itemsDidBecomeUnavailable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityDocumentsObserver:itemsDidBecomeUnavailable:");
}

id objc_msgSend_ubiquityDocumentsObserver_itemsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityDocumentsObserver:itemsDidChange:");
}

id objc_msgSend_ubiquityIdentityDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityIdentityDidChange");
}

id objc_msgSend_ubiquityIdentityToken(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityIdentityToken");
}

id objc_msgSend_ubiquityMetadataForURL_options_needsCoordination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityMetadataForURL:options:needsCoordination:");
}

id objc_msgSend_ubiquityStatusChangedToAvailableWithNewIdentity_oldIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityStatusChangedToAvailableWithNewIdentity:oldIdentity:");
}

id objc_msgSend_ubiquityStatusMonitor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityStatusMonitor");
}

id objc_msgSend_ubiquityStatusUnchangedWithIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ubiquityStatusUnchangedWithIdentity:");
}

id objc_msgSend_uiEdgeInsetsValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uiEdgeInsetsValue");
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:");
}

id objc_msgSend_unbatchedObjectsWithPredicate_forEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unbatchedObjectsWithPredicate:forEntity:");
}

id objc_msgSend_underlineDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "underlineDirection");
}

id objc_msgSend_underlineTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "underlineTheme:");
}

id objc_msgSend_underlyingCardSetViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "underlyingCardSetViewController");
}

id objc_msgSend_underlyingDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "underlyingDictionary");
}

id objc_msgSend_unhideBlocksByCardSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unhideBlocksByCardSet");
}

id objc_msgSend_unhighlightMarginNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unhighlightMarginNote:");
}

id objc_msgSend_unionCFISet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionCFISet:");
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_unionWithCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionWithCFI:");
}

id objc_msgSend_uniqueIdentifierForCellIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueIdentifierForCellIndex:");
}

id objc_msgSend_uniqueIdentifierForDragItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueIdentifierForDragItem:");
}

id objc_msgSend_universalLinkURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "universalLinkURL");
}

id objc_msgSend_unknownAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unknownAspectRatio");
}

id objc_msgSend_unlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlock");
}

id objc_msgSend_unlockChildForStatusBarStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockChildForStatusBarStyle");
}

id objc_msgSend_unregisterReadingStatisticsController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterReadingStatisticsController:");
}

id objc_msgSend_unresolvedConflict(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unresolvedConflict");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongLongValue");
}

id objc_msgSend_up(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "up");
}

id objc_msgSend_updateAirplayNoContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAirplayNoContentView");
}

id objc_msgSend_updateAnimator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAnimator");
}

id objc_msgSend_updateAssetDetailsWithGlobalAnnotations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAssetDetailsWithGlobalAnnotations:completion:");
}

id objc_msgSend_updateAssetsFromCloudSyncForAssetAdamIDsWithTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAssetsFromCloudSyncForAssetAdamIDsWithTypes:");
}

id objc_msgSend_updateBookProgress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBookProgress:completion:");
}

id objc_msgSend_updateButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButton");
}

id objc_msgSend_updateCardSize_addExtra_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCardSize:addExtra:");
}

id objc_msgSend_updateCardViewController_contentScrollView_basedOnCardScrollView_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCardViewController:contentScrollView:basedOnCardScrollView:cardData:");
}

id objc_msgSend_updateCards(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCards");
}

id objc_msgSend_updateConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateConfiguration:");
}

id objc_msgSend_updateContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContentSize");
}

id objc_msgSend_updateContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContentSize:");
}

id objc_msgSend_updateContractedTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContractedTransform");
}

id objc_msgSend_updateDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDate");
}

id objc_msgSend_updateDismissFractionCompleteWithCardOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDismissFractionCompleteWithCardOffset:");
}

id objc_msgSend_updateExpiredSeriesForAssetAdamIDsWithTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateExpiredSeriesForAssetAdamIDsWithTypes:");
}

id objc_msgSend_updateFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFactor:");
}

id objc_msgSend_updateHoverState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHoverState");
}

id objc_msgSend_updateIfNeededWithEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateIfNeededWithEnvironment:");
}

id objc_msgSend_updateInteractiveTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateInteractiveTransition:");
}

id objc_msgSend_updateMaskViewsForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMaskViewsForView:");
}

id objc_msgSend_updateNowPlayingInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNowPlayingInfo");
}

id objc_msgSend_updateParentViewOfCardStackBackgroundViewWithParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateParentViewOfCardStackBackgroundViewWithParentViewController:");
}

id objc_msgSend_updatePlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePlayer");
}

id objc_msgSend_updatePopoverSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePopoverSize");
}

id objc_msgSend_updateQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateQueue");
}

id objc_msgSend_updateQuickScroller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateQuickScroller");
}

id objc_msgSend_updateScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScale");
}

id objc_msgSend_updateScrollViewContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScrollViewContent");
}

id objc_msgSend_updateScrollViewsWhenCantExpandCardViewController_cardScrollView_contentScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScrollViewsWhenCantExpandCardViewController:cardScrollView:contentScrollView:");
}

id objc_msgSend_updateSeekTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSeekTime:");
}

id objc_msgSend_updateSeries_withResource_inMoc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSeries:withResource:inMoc:");
}

id objc_msgSend_updateSeriesForAssetAdamIDsWithTypes_forceCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSeriesForAssetAdamIDsWithTypes:forceCheck:");
}

id objc_msgSend_updateSeriesForSeriesAdamIDsWithTypes_forceCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSeriesForSeriesAdamIDsWithTypes:forceCheck:");
}

id objc_msgSend_updateSyncGenerationFromCloudData_predicate_propertyIDKey_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:");
}

id objc_msgSend_updateSystemAndLocationModificationDates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemAndLocationModificationDates");
}

id objc_msgSend_updateSystemAndUserModificationDates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemAndUserModificationDates");
}

id objc_msgSend_updateSystemModificationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSystemModificationDate");
}

id objc_msgSend_updateTextViewFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTextViewFrame");
}

id objc_msgSend_updateTimeObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTimeObservers");
}

id objc_msgSend_updateValueAndRefresh_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateValueAndRefresh:");
}

id objc_msgSend_updateValueForTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateValueForTouch:");
}

id objc_msgSend_updateVideoLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVideoLayer");
}

id objc_msgSend_updateVolume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVolume");
}

id objc_msgSend_updateWithAppendedCards(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithAppendedCards");
}

id objc_msgSend_updateWithCFI_minimumCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithCFI:minimumCount:");
}

id objc_msgSend_updateWithCFISet_minimumCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateWithCFISet:minimumCount:");
}

id objc_msgSend_updatedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedObjects");
}

id objc_msgSend_uploadingError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadingError");
}

id objc_msgSend_uploadingPercent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uploadingPercent");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uppercaseString");
}

id objc_msgSend_uppercaseStringWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uppercaseStringWithLocale:");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "url");
}

id objc_msgSend_urlForOfflineDBWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlForOfflineDBWithAssetID:");
}

id objc_msgSend_urlProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlProvider");
}

id objc_msgSend_urlString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlString");
}

id objc_msgSend_useContentInsetForContentForScrollIndicatorInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useContentInsetForContentForScrollIndicatorInsets");
}

id objc_msgSend_useInnerRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useInnerRect");
}

id objc_msgSend_useMaskForHighlightView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useMaskForHighlightView");
}

id objc_msgSend_useSelectedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useSelectedText");
}

id objc_msgSend_useSnapshots(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useSnapshots");
}

id objc_msgSend_userAnnotationTypeValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAnnotationTypeValues");
}

id objc_msgSend_userID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userID");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirection");
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirectionForSemanticContentAttribute:");
}

id objc_msgSend_userInterfaceLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLevel");
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceStyle");
}

id objc_msgSend_userModificationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userModificationDate");
}

id objc_msgSend_userPublishing_assetAuthorForStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPublishing:assetAuthorForStoreId:");
}

id objc_msgSend_userPublishing_assetCategoryForStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPublishing:assetCategoryForStoreId:");
}

id objc_msgSend_userPublishing_assetTitleForStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPublishing:assetTitleForStoreId:");
}

id objc_msgSend_userPublishing_isDownloadEnabledForStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPublishing:isDownloadEnabledForStoreId:");
}

id objc_msgSend_userPublishing_isLocalGenerationEnabledForStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPublishing:isLocalGenerationEnabledForStoreId:");
}

id objc_msgSend_userPublishing_storeShortURLForStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPublishing:storeShortURLForStoreId:");
}

id objc_msgSend_userPublishing_storeURLForStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPublishing:storeURLForStoreId:");
}

id objc_msgSend_userPublishing_tellAFriendEmailBaseURLForStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userPublishing:tellAFriendEmailBaseURLForStoreId:");
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "username");
}

id objc_msgSend_utiTypeForContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "utiTypeForContentType:");
}

id objc_msgSend_uuid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uuid");
}

id objc_msgSend_validCollectionPeriod(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validCollectionPeriod");
}

id objc_msgSend_validRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validRange");
}

id objc_msgSend_validateAnnotationUuid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateAnnotationUuid");
}

id objc_msgSend_validateConsistency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateConsistency:");
}

id objc_msgSend_validateHoverState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateHoverState:");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueForAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForAttribute:");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForKey_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:context:");
}

id objc_msgSend_valueForKey_fromNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:fromNamespace:");
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_valueWithBytes_objCType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithBytes:objCType:");
}

id objc_msgSend_valueWithCATransform3D_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCATransform3D:");
}

id objc_msgSend_valueWithCGPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGPoint:");
}

id objc_msgSend_valueWithCGRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGRect:");
}

id objc_msgSend_valueWithCGSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGSize:");
}

id objc_msgSend_valueWithCMTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCMTime:");
}

id objc_msgSend_valueWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCompletion:");
}

id objc_msgSend_valueWithPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithPointer:");
}

id objc_msgSend_valueWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithRange:");
}

id objc_msgSend_valueWithUIEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithUIEdgeInsets:");
}

id objc_msgSend_velocityForPop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "velocityForPop");
}

id objc_msgSend_velocityInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "velocityInView:");
}

id objc_msgSend_vendedImageInterest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vendedImageInterest");
}

id objc_msgSend_vendedImageInterests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vendedImageInterests");
}

id objc_msgSend_vendedLayerDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vendedLayerDelegate");
}

id objc_msgSend_vendedLayerDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vendedLayerDidUpdate:");
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "version");
}

id objc_msgSend_versionBumpedIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "versionBumpedIdentifiers");
}

id objc_msgSend_versionNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "versionNumber");
}

id objc_msgSend_versionNumberHumanReadable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "versionNumberHumanReadable");
}

id objc_msgSend_vertical(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "vertical");
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalSizeClass");
}

id objc_msgSend_videoLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "videoLayer");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController");
}

id objc_msgSend_viewController_didDisplayMessageWithId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:didDisplayMessageWithId:");
}

id objc_msgSend_viewControllerAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerAtIndex:");
}

id objc_msgSend_viewControllerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForKey:");
}

id objc_msgSend_viewControllerFromPluginIndex_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerFromPluginIndex:withCompletion:");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllers");
}

id objc_msgSend_viewDidAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewDidAppear:");
}

id objc_msgSend_viewDidDisappear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewDidDisappear:");
}

id objc_msgSend_viewForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewForKey:");
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewIfLoaded");
}

id objc_msgSend_viewSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewSize");
}

id objc_msgSend_viewState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewState");
}

id objc_msgSend_viewToHide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewToHide");
}

id objc_msgSend_viewToSlide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewToSlide");
}

id objc_msgSend_viewToSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewToSnapshot");
}

id objc_msgSend_viewWillAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewWillAppear:");
}

id objc_msgSend_viewWillDisappear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewWillDisappear:");
}

id objc_msgSend_viewWillLayoutSubviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewWillLayoutSubviews");
}

id objc_msgSend_viewWithTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewWithTag:");
}

id objc_msgSend_viewsToBeCleanedUp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewsToBeCleanedUp");
}

id objc_msgSend_visibilityOfCoverSource_ignoringYAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibilityOfCoverSource:ignoringYAxis:");
}

id objc_msgSend_visibleCFIs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCFIs");
}

id objc_msgSend_visibleCardIndexesWithAdjustedCoverSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCardIndexesWithAdjustedCoverSource");
}

id objc_msgSend_visibleCardRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCardRange");
}

id objc_msgSend_visibleCellForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCellForIndex:");
}

id objc_msgSend_visibleCoverSourceByIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCoverSourceByIndex");
}

id objc_msgSend_visibleRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleRange");
}

id objc_msgSend_waitForPendingSyncIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitForPendingSyncIfNeeded");
}

id objc_msgSend_waitUntilDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilDate:");
}

id objc_msgSend_waitUntilReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilReady:");
}

id objc_msgSend_waitUntilReadyThenAnimate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilReadyThenAnimate");
}

id objc_msgSend_waitingBlocks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitingBlocks");
}

id objc_msgSend_wasLessThanAWeekAgo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasLessThanAWeekAgo");
}

id objc_msgSend_wasPreordered(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasPreordered");
}

id objc_msgSend_wasYesterday(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasYesterday");
}

id objc_msgSend_watchView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "watchView");
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakObjectsHashTable");
}

id objc_msgSend_weakObjectsPointerArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakObjectsPointerArray");
}

id objc_msgSend_weakToStrongObjectsMapTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weakToStrongObjectsMapTable");
}

id objc_msgSend_weekOfYear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "weekOfYear");
}

id objc_msgSend_whenCompletedBlocks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whenCompletedBlocks");
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whiteColor");
}

id objc_msgSend_whiteScrimView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whiteScrimView");
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceAndNewlineCharacterSet");
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceCharacterSet");
}

id objc_msgSend_wholeHTMLForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wholeHTMLForStoreId:dataSource:");
}

id objc_msgSend_width(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "width");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}

id objc_msgSend_widthForAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthForAspectRatio");
}

id objc_msgSend_willAccessValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willAccessValueForKey:");
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willChangeValueForKey:");
}

id objc_msgSend_willHide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willHide");
}

id objc_msgSend_willHideAnnotationEditor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willHideAnnotationEditor:");
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willMoveToParentViewController:");
}

id objc_msgSend_willShow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willShow");
}

id objc_msgSend_willShowAnnotationEditor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willShowAnnotationEditor:");
}

id objc_msgSend_willStopBeingCurrentStateCardViewController_newState_cardDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willStopBeingCurrentStateCardViewController:newState:cardDate:");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_windowRotationDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowRotationDuration");
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowScene");
}

id objc_msgSend_windows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windows");
}

id objc_msgSend_withExistingImageSetForDescribedImage_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withExistingImageSetForDescribedImage:performBlock:");
}

id objc_msgSend_withImageSetForDescribedImage_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "withImageSetForDescribedImage:performBlock:");
}

id objc_msgSend_wordLimit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wordLimit");
}

id objc_msgSend_wordsForSelectedTextForAnnotation_inSentence_possibleLength_highlightedRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wordsForSelectedTextForAnnotation:inSentence:possibleLength:highlightedRange:");
}

id objc_msgSend_workBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workBlock");
}

id objc_msgSend_workComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workComplete");
}

id objc_msgSend_workComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workComplete:");
}

id objc_msgSend_workDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workDescription");
}

id objc_msgSend_workHighPriorityTarget(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workHighPriorityTarget");
}

id objc_msgSend_workItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workItem");
}

id objc_msgSend_workItemTimeout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workItemTimeout");
}

id objc_msgSend_workItemWithPriority_description_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workItemWithPriority:description:block:");
}

id objc_msgSend_workQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workQueue");
}

id objc_msgSend_workQueueWithHighPriorityTargetQueue_backgroundTargetQueue_numConcurrentWorkItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workQueueWithHighPriorityTargetQueue:backgroundTargetQueue:numConcurrentWorkItems:");
}

id objc_msgSend_workerQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workerQueue");
}

id objc_msgSend_workingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "workingView");
}

id objc_msgSend_writeCacheMetaData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeCacheMetaData:");
}

id objc_msgSend_writePNGRepresentationOfImage_toURL_format_colorSpace_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writePNGRepresentationOfImage:toURL:format:colorSpace:options:error:");
}

id objc_msgSend_writeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeTo:");
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:atomically:");
}

id objc_msgSend_writeToFile_atomically_encoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:atomically:encoding:error:");
}

id objc_msgSend_writeToURL_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:atomically:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_writeWorkQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeWorkQueue");
}

id objc_msgSend_xOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "xOffset");
}

id objc_msgSend_yInScreenFromYInScrollView_cardViewController_cardData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yInScreenFromYInScrollView:cardViewController:cardData:");
}

id objc_msgSend_yInScrollView_cardViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yInScrollView:cardViewController:");
}

id objc_msgSend_yStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yStart");
}

id objc_msgSend_year(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "year");
}

id objc_msgSend_yellowTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yellowTheme:");
}

id objc_msgSend_zPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zPosition");
}

id objc_msgSend_zero(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zero");
}

