void sub_40DC(uint64_t a1, void *a2)
{
  void (**v3)(_QWORD);
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  void ***v6;
  void **v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  void *v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t);
  id v18;

  v3 = a2;
  v13 = 0;
  v14 = &v13;
  v15 = 0x3032000000;
  v16 = sub_41FC;
  v17 = sub_420C;
  v18 = 0;
  v4 = *(os_unfair_lock_s **)(a1 + 32);
  v5 = v4 + 2;
  v7 = _NSConcreteStackBlock;
  v8 = 3221225472;
  v9 = sub_4214;
  v10 = &unk_28B700;
  v12 = &v13;
  v11 = v4;
  v6 = &v7;
  os_unfair_lock_lock(v5);
  v9((uint64_t)v6);
  os_unfair_lock_unlock(v5);

  objc_msgSend(*(id *)(a1 + 32), "performFetch:", v14[5], v7, v8);
  v3[2](v3);

  _Block_object_dispose(&v13, 8);
}

void sub_41E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_41FC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_420C(uint64_t a1)
{

}

void sub_4214(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profilesToFetch"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  objc_msgSend(*(id *)(a1 + 32), "setProfilesToFetch:", v5);

}

void sub_4394(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "profilesToFetch"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completions"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  if (!v6)
  {
    v6 = objc_alloc_init((Class)NSMutableArray);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completions"));
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v6, *(_QWORD *)(a1 + 40));

  }
  v5 = objc_msgSend(*(id *)(a1 + 48), "copy");
  objc_msgSend(v6, "addObject:", v5);

}

void sub_452C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  void *v16;
  void *v17;
  void *v18;
  BICProductProfileData *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id obj;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];

  v7 = a2;
  v27 = a3;
  v8 = a4;
  if (v8)
  {
    v9 = BCImageCacheLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1B3128();

  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v28 = v7;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "allValues"));
  v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v31;
    do
    {
      for (i = 0; i != v13; i = (char *)i + 1)
      {
        if (*(_QWORD *)v31 != v14)
          objc_enumerationMutation(obj);
        v16 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)i);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "profileDictionary"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectForKeyedSubscript:", CFSTR("artwork")));

        v19 = objc_alloc_init(BICProductProfileData);
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "profileDictionary"));
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectForKeyedSubscript:", CFSTR("id")));
        -[BICProductProfileData setIdentifier:](v19, "setIdentifier:", v21);

        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("width")));
        -[BICProductProfileData setWidth:](v19, "setWidth:", objc_msgSend(v22, "integerValue"));

        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("height")));
        -[BICProductProfileData setHeight:](v19, "setHeight:", objc_msgSend(v23, "integerValue"));

        v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("url")));
        -[BICProductProfileData setUrl:](v19, "setUrl:", v24);

        objc_msgSend(v11, "addObject:", v19);
      }
      v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    }
    while (v13);
  }

  v25 = objc_retainBlock(*(id *)(a1 + 40));
  v26 = v25;
  if (v25)
    (*((void (**)(id, void *))v25 + 2))(v25, v11);

}

void sub_49F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_4A24(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completions"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completions"));
  objc_msgSend(v6, "setObject:forKeyedSubscript:", 0, *(_QWORD *)(a1 + 40));

}

void sub_4C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_4C2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allObjects"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_4C64(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  void *v14;
  BICProductProfileData *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  os_unfair_lock_s *v23;
  BICProductProfileData *v24;
  void *v25;
  os_unfair_lock_s *v26;
  _QWORD *v27;
  void *v28;
  os_unfair_lock_s *v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  id obj;
  id v37;
  id v38;
  _QWORD v39[5];
  id v40;
  uint64_t *v41;
  _QWORD v42[2];
  void (*v43)(uint64_t);
  void *v44;
  id v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  void (*v51)(uint64_t);
  id v52;
  _QWORD v53[2];
  id (*v54)(uint64_t);
  void *v55;
  id v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  void (*v63)(uint64_t);
  void *v64;
  id v65;
  BICProductProfileData *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _BYTE v71[128];

  v35 = a2;
  v37 = a3;
  v38 = a4;
  if (v38)
  {
    v7 = BCImageCacheLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B318C();

  }
  v69 = 0u;
  v70 = 0u;
  v67 = 0u;
  v68 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "allValues"));
  v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v67, v71, 16);
  if (v9)
  {
    v10 = *(_QWORD *)v68;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v68 != v10)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v67 + 1) + 8 * (_QWORD)i);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "profileDictionary"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", CFSTR("artwork")));

        v15 = objc_alloc_init(BICProductProfileData);
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "profileDictionary"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("id")));
        -[BICProductProfileData setIdentifier:](v15, "setIdentifier:", v17);

        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("width")));
        -[BICProductProfileData setWidth:](v15, "setWidth:", objc_msgSend(v18, "integerValue"));

        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("height")));
        -[BICProductProfileData setHeight:](v15, "setHeight:", objc_msgSend(v19, "integerValue"));

        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("url")));
        -[BICProductProfileData setUrl:](v15, "setUrl:", v20);

        -[BICProductProfileData setExpiration:](v15, "setExpiration:", v37);
        -[BICProductProfileData setError:](v15, "setError:", v38);
        v21 = *(void **)(a1 + 32);
        v22 = (void *)objc_claimAutoreleasedReturnValue(-[BICProductProfileData identifier](v15, "identifier"));
        objc_msgSend(v21, "_fetchedProfile:withIdentifier:", v15, v22);

        v23 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
        v62[0] = _NSConcreteStackBlock;
        v62[1] = 3221225472;
        v63 = sub_5188;
        v64 = &unk_28B808;
        v65 = *(id *)(a1 + 40);
        v66 = v15;
        v24 = v15;
        os_unfair_lock_lock(v23);
        v63((uint64_t)v62);
        os_unfair_lock_unlock(v23);

      }
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v67, v71, 16);
    }
    while (v9);
  }

  v58 = 0;
  v59 = &v58;
  v60 = 0x2020000000;
  v61 = 0;
  v25 = *(void **)(a1 + 40);
  v26 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
  v53[0] = _NSConcreteStackBlock;
  v53[1] = 3221225472;
  v57 = &v58;
  v54 = sub_51C8;
  v55 = &unk_28B700;
  v56 = v25;
  v27 = v53;
  os_unfair_lock_lock(v26);
  v54((uint64_t)v27);
  os_unfair_lock_unlock(v26);

  if (v59[3])
  {
    v47 = 0;
    v48 = &v47;
    v49 = 0x3032000000;
    v50 = sub_41FC;
    v51 = sub_420C;
    v52 = 0;
    v28 = *(void **)(a1 + 40);
    v29 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
    v42[0] = _NSConcreteStackBlock;
    v42[1] = 3221225472;
    v43 = sub_51F8;
    v44 = &unk_28B700;
    v46 = &v47;
    v45 = v28;
    v30 = v42;
    os_unfair_lock_lock(v29);
    v43((uint64_t)v30);
    os_unfair_lock_unlock(v29);

    v31 = (void *)objc_claimAutoreleasedReturnValue(+[BLJaliscoDAAPClient sharedClient](BLJaliscoDAAPClient, "sharedClient"));
    v32 = v48[5];
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_522C;
    v39[3] = &unk_28B830;
    v33 = *(_QWORD *)(a1 + 32);
    v34 = *(void **)(a1 + 40);
    v41 = &v47;
    v39[4] = v33;
    v40 = v34;
    objc_msgSend(v31, "fetchItemsForStoreIDs:completion:", v32, v39);

    _Block_object_dispose(&v47, 8);
  }

  _Block_object_dispose(&v58, 8);
}

void sub_5154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_5188(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
  objc_msgSend(v1, "removeObject:", v2);

}

id sub_51C8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "count");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_51F8(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(a1 + 32), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_522C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  id v13;
  BICProductProfileData *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  os_unfair_lock_s *v19;
  BICProductProfileData *v20;
  void *v21;
  os_unfair_lock_s *v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *j;
  id obj;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD v34[2];
  void (*v35)(uint64_t);
  void *v36;
  id v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  _QWORD v45[2];
  void (*v46)(uint64_t);
  void *v47;
  id v48;
  BICProductProfileData *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _BYTE v54[128];
  _BYTE v55[128];

  v5 = a2;
  v29 = a3;
  if (v29)
  {
    v6 = BCImageCacheLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1B31EC();

  }
  v52 = 0u;
  v53 = 0u;
  v50 = 0u;
  v51 = 0u;
  obj = v5;
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v55, 16);
  if (v8)
  {
    v9 = *(_QWORD *)v51;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v51 != v9)
          objc_enumerationMutation(obj);
        v11 = *(void **)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)i);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "artworkURLString"));
        v13 = objc_msgSend(v12, "length");

        if (v13)
        {
          v14 = objc_alloc_init(BICProductProfileData);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "storeID"));
          -[BICProductProfileData setIdentifier:](v14, "setIdentifier:", v15);

          -[BICProductProfileData setWidth:](v14, "setWidth:", 0);
          -[BICProductProfileData setHeight:](v14, "setHeight:", 0);
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "artworkURLString"));
          -[BICProductProfileData setUrl:](v14, "setUrl:", v16);

          -[BICProductProfileData setError:](v14, "setError:", v29);
          v17 = *(void **)(a1 + 32);
          v18 = (void *)objc_claimAutoreleasedReturnValue(-[BICProductProfileData identifier](v14, "identifier"));
          objc_msgSend(v17, "_fetchedProfile:withIdentifier:", v14, v18);

          v19 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
          v45[0] = _NSConcreteStackBlock;
          v45[1] = 3221225472;
          v46 = sub_563C;
          v47 = &unk_28B808;
          v48 = *(id *)(a1 + 40);
          v49 = v14;
          v20 = v14;
          os_unfair_lock_lock(v19);
          v46((uint64_t)v45);
          os_unfair_lock_unlock(v19);

        }
      }
      v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v55, 16);
    }
    while (v8);
  }

  v39 = 0;
  v40 = &v39;
  v41 = 0x3032000000;
  v42 = sub_41FC;
  v43 = sub_420C;
  v44 = 0;
  v21 = *(void **)(a1 + 40);
  v22 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472;
  v35 = sub_567C;
  v36 = &unk_28B700;
  v38 = &v39;
  v37 = v21;
  v23 = v34;
  os_unfair_lock_lock(v22);
  v35((uint64_t)v23);
  os_unfair_lock_unlock(v22);

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v24 = (id)v40[5];
  v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v30, v54, 16);
  if (v25)
  {
    v26 = *(_QWORD *)v31;
    do
    {
      for (j = 0; j != v25; j = (char *)j + 1)
      {
        if (*(_QWORD *)v31 != v26)
          objc_enumerationMutation(v24);
        objc_msgSend(*(id *)(a1 + 32), "_fetchedProfile:withIdentifier:", 0, *(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)j));
      }
      v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v30, v54, 16);
    }
    while (v25);
  }

  _Block_object_dispose(&v39, 8);
}

void sub_5610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_563C(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
  objc_msgSend(v1, "removeObject:", v2);

}

void sub_567C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allObjects"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_573C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_5770(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_5B98(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Block_object_dispose((const void *)(v2 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_5BE0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesProcessing"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

}

void sub_5C2C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesProcessing"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_5C6C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id *v6;
  id WeakRetained;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;
  id v23;
  id v24;
  uint8_t buf[4];
  uint64_t v26;

  v19 = a2;
  v5 = a3;
  v6 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "workQueue"));
  v9 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v5, v8);

  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationStackCreationQueueEnd[0], *(_QWORD *)(a1 + 32));
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationStackCreationStart[0], *(_QWORD *)(a1 + 32));
  kdebug_trace(725353744, 0, 0, 0, 0);
  v10 = BCImageCacheLog();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138412290;
    v26 = v12;
    _os_log_impl(&dword_0, v11, OS_LOG_TYPE_INFO, "BCStackManager: Performing Rendering stack for: %@", buf, 0xCu);
  }

  v13 = objc_loadWeakRetained((id *)(a1 + 48));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "renderer"));
  v16 = *(_QWORD *)(a1 + 40);
  v15 = (id *)(a1 + 40);
  v17 = (uint64_t)*(v15 - 1);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_5EC8;
  v20[3] = &unk_28B880;
  objc_copyWeak(&v24, v6);
  v21 = *v15;
  v22 = *(v15 - 1);
  v18 = v9;
  v23 = v18;
  objc_msgSend(v14, "renderStackFromSource:forRequest:onQueue:completion:", v16, v17, v19, v20);

  objc_destroyWeak(&v24);
}

void sub_5EAC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_5EC8(uint64_t a1, void *a2)
{
  id v3;
  os_unfair_lock_s *WeakRetained;
  os_unfair_lock_s *v5;
  _QWORD v6[4];
  os_unfair_lock_s *v7;
  id v8;

  v3 = a2;
  WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 56));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    -[os_unfair_lock_s _renderCompleteSource:to:forRequest:](WeakRetained, "_renderCompleteSource:to:forRequest:", *(_QWORD *)(a1 + 32), v3, *(_QWORD *)(a1 + 40));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_5FB8;
    v6[3] = &unk_28B808;
    v7 = v5;
    v8 = *(id *)(a1 + 32);
    os_unfair_lock_lock(v5 + 2);
    sub_5FB8((uint64_t)v6);
    os_unfair_lock_unlock(v5 + 2);

  }
  kdebug_trace(725353744, 1, 0, 0, 0);
  objc_msgSend(*(id *)(a1 + 48), "workComplete");

}

void sub_5FB8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesProcessing"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

}

void sub_6218(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_30D490;
  qword_30D490 = (uint64_t)v1;

}

void sub_64E4(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_30D4A0;
  qword_30D4A0 = (uint64_t)v1;

}

id sub_667C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "bc_analyticsVisibilityUpdateSubtree");
}

id sub_67F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "bc_analyticsVisibilityUpdateSubtree");
}

void sub_6838(id a1)
{
  NSSet *v1;
  uint64_t v2;
  void *v3;

  v1 = +[NSSet setWithObject:](NSSet, "setWithObject:", objc_opt_class(UISearchController));
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)qword_30D4B0;
  qword_30D4B0 = v2;

}

void sub_8314(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_8758(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "auxiliaryNavigationBarViewController"));
  objc_msgSend(v2, "setIsParentCardOccluded:", 0);

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topContentViewController"));
  objc_msgSend(v3, "didBecomeVisibleContentScrollView");

}

void sub_89D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_89F4(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  id WeakRetained;
  void *v6;
  void *v7;
  NSMutableArray *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v22;
  void *v23;
  _QWORD v24[4];
  id v25;
  id v26;
  _QWORD v27[4];
  id v28;
  id v29;

  v3 = a2;
  v4 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v6 = WeakRetained;
  if (!WeakRetained)
  {
    v12 = 0;
    goto LABEL_10;
  }
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  v8 = objc_opt_new(NSMutableArray);
  if (objc_msgSend(v7, "cardViewControllerCanCloseAsset:", v6))
  {
    v9 = IMCommonCoreBundle();
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("Return to Book"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  }
  else
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "presentingViewController"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "im_ancestorViewControllerConformingToProtocol:", &OBJC_PROTOCOL___BCRootBarStringForReturnToRootBarItemProviding));

    v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "bc_stringForReturnToRootBarItem"));
    if (!v11)
    {
      v22 = IMCommonCoreBundle();
      v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("Close All Product Cards"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));

      goto LABEL_7;
    }
  }
  v14 = (void *)v11;
LABEL_7:

  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_8D0C;
  v27[3] = &unk_28B988;
  objc_copyWeak(&v29, v4);
  v15 = v7;
  v28 = v15;
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[UIAction actionWithTitle:image:identifier:handler:](UIAction, "actionWithTitle:image:identifier:handler:", v14, 0, 0, v27));
  -[NSMutableArray addObject:](v8, "addObject:", v16);
  if (objc_msgSend(v15, "cardViewControllerCanCloseAsset:", v6))
  {
    v17 = IMCommonCoreBundle();
    v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("Go to Home"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));

    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_8D4C;
    v24[3] = &unk_28B988;
    objc_copyWeak(&v26, v4);
    v25 = v15;
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[UIAction actionWithTitle:image:identifier:handler:](UIAction, "actionWithTitle:image:identifier:handler:", v19, 0, 0, v24));
    -[NSMutableArray addObject:](v8, "addObject:", v20);

    objc_destroyWeak(&v26);
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:children:](UIMenu, "menuWithTitle:children:", &stru_296430, v8));

  objc_destroyWeak(&v29);
LABEL_10:

  return v12;
}

void sub_8CDC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_8D0C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "cardViewControllerDidTapCloseAllCards:", WeakRetained);

}

void sub_8D4C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "cardViewControllerDidTapCloseAsset:", WeakRetained);

}

void sub_8F38(uint64_t a1, void *a2)
{
  _BYTE *v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unsigned int v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;

  v22 = a2;
  v3 = *(_BYTE **)(a1 + 32);
  if (v3[61])
  {
    objc_msgSend(v3, "auxiliaryNavigationBarHeight");
    v5 = v4;
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "auxiliaryNavigationBarViewController"));
    objc_msgSend(v6, "setNavigationBarHeight:", v5);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentState"));
    v8 = *(void **)(a1 + 32);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "auxiliaryNavigationBarView"));
    objc_msgSend(v7, "cardViewController:positionAuxiliaryNavigationBarView:cardDate:", v8, v9, *(_QWORD *)(a1 + 32));

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "auxiliaryNavigationBarViewController"));
    objc_msgSend(v10, "cardViewController:positionAuxiliaryNavigationBarBackgroundWithData:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 32));
  }
  else
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "gripperView"));
    objc_msgSend(v11, "removeFromSuperview");

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardView"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "gripperView"));
    objc_msgSend(v12, "addSubview:", v13);

    v14 = *(void **)(a1 + 32);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "gripperView"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardNavigationController"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "view"));
    objc_msgSend(v14, "anchorGripperView:toView:", v10, v16);

  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardSetData"));
  if ((objc_msgSend(v17, "covered") & 1) != 0)
  {

LABEL_8:
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "auxiliaryNavigationBarViewController"));
    v20 = v19;
    v21 = 1;
    goto LABEL_9;
  }
  v18 = objc_msgSend(*(id *)(a1 + 32), "isCurrentCard");

  if (!v18)
    goto LABEL_8;
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "auxiliaryNavigationBarViewController"));
  v20 = v19;
  v21 = 0;
LABEL_9:
  objc_msgSend(v19, "setIsParentCardOccluded:", v21);

}

void sub_9114(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "setContentInset:", *(double *)(*(_QWORD *)(a1 + 32) + 16), *(double *)(*(_QWORD *)(a1 + 32) + 24), *(double *)(*(_QWORD *)(a1 + 32) + 32), *(double *)(*(_QWORD *)(a1 + 32) + 40));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentState"));
  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "contentScrollView"));
  objc_msgSend(v4, "cardViewController:repositionOffsetsWithContentScrollView:cardData:", v2, v3, *(_QWORD *)(a1 + 32));

}

id sub_97C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateContentSize:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

void sub_A278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_A29C(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  unsigned int v15;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "setAuxiliaryNavigationBarViewController:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "auxiliaryNavigationBarViewController"));
  objc_msgSend(v4, "setDelegate:", WeakRetained);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentState"));
  objc_msgSend(v5, "cardViewControllerAuxiliaryNavigationBarAlpha:cardData:", WeakRetained, WeakRetained);
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "auxiliaryNavigationBarView"));
  objc_msgSend(v8, "setAlpha:", v7);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "auxiliaryNavigationBarView"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "layer"));
  objc_msgSend(v10, "setZPosition:", 1000.0);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "auxiliaryNavigationBarView"));
  objc_msgSend(v11, "_accessibilitySetSortPriority:", 999);

  objc_msgSend(WeakRetained, "auxiliaryNavigationBarHeight");
  objc_msgSend(v3, "setNavigationBarHeight:");
  objc_msgSend(v3, "cardViewController:positionAuxiliaryNavigationBarBackgroundWithData:", WeakRetained, WeakRetained);

  v12 = objc_msgSend(objc_alloc((Class)UIPanGestureRecognizer), "initWithTarget:action:", WeakRetained, "dismissPan:");
  objc_msgSend(v12, "setDelegate:", WeakRetained);
  objc_msgSend(WeakRetained, "setAuxiliaryNavigationBarDismissPanGestureRecognizer:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "auxiliaryNavigationBarView"));
  objc_msgSend(v13, "addGestureRecognizer:", v12);

  if ((objc_msgSend(WeakRetained, "isCurrentCard") & 1) != 0
    || (v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cardSetViewController")),
        v15 = objc_msgSend(v14, "isPresentationTransitionCompleted"),
        v14,
        v15))
  {
    objc_msgSend(WeakRetained, "attachAuxiliaryNavigationBarViewAnimated:", 0);
  }

}

void sub_A454(uint64_t a1, void *a2, int a3)
{
  id v5;
  id WeakRetained;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id obj;

  v5 = a2;
  if (a1)
  {
    obj = v5;
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 176));

    v5 = obj;
    if (WeakRetained != obj)
    {
      *(_BYTE *)(a1 + 8) = 0;
      v7 = objc_loadWeakRetained((id *)(a1 + 176));
      objc_msgSend(v7, "removeObserver:forKeyPath:context:", a1, CFSTR("contentSize"), off_306A00);

      v8 = objc_loadWeakRetained((id *)(a1 + 176));
      objc_msgSend(v8, "_removeScrollViewScrollObserver:", a1);

      v9 = objc_loadWeakRetained((id *)(a1 + 176));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)a1, "scrollView"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "panGestureRecognizer"));
      objc_msgSend(v9, "removeGestureRecognizer:", v11);

      objc_storeWeak((id *)(a1 + 176), obj);
      objc_msgSend(obj, "setScrollEnabled:", 0);
      objc_msgSend(*(id *)(a1 + 48), "setContentScrollView:", obj);
      v12 = objc_loadWeakRetained((id *)(a1 + 176));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)a1, "scrollView"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "panGestureRecognizer"));
      objc_msgSend(v12, "addGestureRecognizer:", v14);

      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)a1, "cardNavigationController"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "viewControllers"));
      if ((unint64_t)objc_msgSend(v16, "count") < 2)
        objc_msgSend((id)a1, "contentInset");
      else
        objc_msgSend((id)a1, "contentInsetForContent");
      v21 = v17;
      v22 = v18;
      v23 = v19;
      v24 = v20;

      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)a1, "cardNavigationController"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "viewControllers"));
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "lastObject"));
      objc_msgSend((id)a1, "_updateViewController:withContentInset:unalteredContentInset:", v27, v21, v22, v23, v24, *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)(a1 + 32), *(double *)(a1 + 40));

      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)a1, "configuration"));
      objc_msgSend(obj, "setShowsVerticalScrollIndicator:", objc_msgSend(v28, "cardsCanExpand") ^ 1);

      objc_msgSend(obj, "addObserver:forKeyPath:options:context:", a1, CFSTR("contentSize"), 7, off_306A00);
      objc_msgSend(obj, "_addScrollViewScrollObserver:", a1);
      v5 = obj;
      if (a3)
      {
        *(_BYTE *)(a1 + 8) = 1;
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)a1, "currentState"));
        objc_msgSend(v29, "cardViewController:contentScrollViewDidChange:cardData:", a1, obj, a1);

        v5 = obj;
      }
    }
  }

}

void sub_A9BC(uint64_t a1)
{
  double v1;
  id v2;

  v1 = *(double *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blackScrimView"));
  objc_msgSend(v2, "setAlpha:", v1);

}

id *sub_A9FC(id *result, int a2)
{
  id *v2;
  void *v3;

  if (a2)
  {
    v2 = result;
    if (*((double *)result + 5) == 0.0)
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(result[4], "blackScrimView"));
      objc_msgSend(v3, "removeFromSuperview");

      return (id *)objc_msgSend(v2[4], "setBlackScrimView:", 0);
    }
  }
  return result;
}

void sub_B6D4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "setContentScrollView:", 0);
  v3 = *(void **)(a1 + 32);
  v2 = *(void **)(a1 + 40);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "scrollView"));
  objc_msgSend(v3, "cardContentViewController:initializeManagerWithScrollView:", v2, v4);

}

void sub_CB2C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

id sub_CB48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_setAuxiliaryNavigationBarViewAlpha:", *(double *)(a1 + 40));
}

void sub_CB58(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id WeakRetained;

  if ((objc_msgSend(a2, "isCancelled") & 1) == 0)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    v3 = BUProtocolCast(&OBJC_PROTOCOL___BCSafeAreaInsetsObservable, *(_QWORD *)(a1 + 32));
    v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    objc_msgSend(v4, "setBcSafeAreaInsetsObserver:", *(_QWORD *)(a1 + 40));
    v5 = *(_QWORD *)(a1 + 32);
    v6 = objc_opt_class(UIViewController);
    v7 = BUClassAndProtocolCast(v5, v6, 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    objc_msgSend(v8, "setCardContentDelegate:", *(_QWORD *)(a1 + 40), &OBJC_PROTOCOL___BCCardContent);
    if (*(_QWORD *)(a1 + 48))
      objc_msgSend(WeakRetained, "setCurrentState:");
    if (*(_BYTE *)(a1 + 72) || *(_QWORD *)(a1 + 64) != 1)
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "scrollView"));
      objc_msgSend(WeakRetained, "setContentScrollView:", v14);

      objc_msgSend(WeakRetained, "_updateCardFrames");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 40), "_applyContentInsetToContentViewController:", v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "currentState"));
      v10 = *(_QWORD *)(a1 + 40);
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "scrollView"));
      objc_msgSend(v9, "cardViewController:positionCardScrollViewBasedOnContentScrollView:cardDate:", v10, v11, *(_QWORD *)(a1 + 40));

      v12 = *(void **)(a1 + 40);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "scrollView"));
      objc_msgSend(v12, "setupRootContentScrollView:", v13);

    }
  }
}

void sub_DA24(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_DAA8(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_alloc_init((Class)TUIManager);
  v3 = (void *)qword_30D4C8;
  qword_30D4C8 = (uint64_t)v2;

  v4 = objc_alloc_init((Class)TUIElementRegistry);
  objc_msgSend((id)qword_30D4C8, "setElementRegistry:", v4);
  objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32)), "registerNamedColorsWithTemplateManger:", qword_30D4C8);

}

void sub_E294(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;

  v2 = objc_alloc((Class)TUITemplateFactory);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_manager"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "elementRegistry"));
  v5 = objc_msgSend(v2, "initWithRegistry:", v4);
  v6 = (void *)qword_30D4D8;
  qword_30D4D8 = (uint64_t)v5;

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_templatePackageURL"));
  v8 = (id)objc_claimAutoreleasedReturnValue(+[TUIBinaryPackage packageWithURL:](TUIBinaryPackage, "packageWithURL:", v7));

  objc_msgSend((id)qword_30D4D8, "registerPackage:", v8);
}

id sub_F540(id result)
{
  double v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;

  if (result)
  {
    v5 = 0.0;
    v3 = 0.0;
    v4 = 0.0;
    v2 = 0;
    result = objc_msgSend(result, "getRed:green:blue:alpha:", &v5, &v4, &v3, &v2);
    if ((_DWORD)result)
    {
      if (vabdd_f64(v5, v4) >= fabs(v4 * 0.00100000005))
        return 0;
      v1 = fabs(v3 * 0.00100000005);
      if (vabdd_f64(v5, v3) >= v1)
        return 0;
      else
        return (id)(vabdd_f64(v4, v3) < v1);
    }
  }
  return result;
}

void sub_F9DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_FA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)IMJPEGPrefetch;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_FA68(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_FC9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_FCC4(uint64_t a1)
{
  CGDataProvider *v2;
  CGImage *v3;

  v2 = CGDataProviderCreateWithCFData(*(CFDataRef *)(a1 + 32));
  v3 = CGImageCreateWithJPEGDataProvider(v2, 0, 0, kCGRenderingIntentDefault);
  CGImageRelease(*(CGImageRef *)(*(_QWORD *)(a1 + 40) + 56));
  *(_QWORD *)(*(_QWORD *)(a1 + 40) + 56) = CGImageRetain(v3);
  CGDataProviderRelease(v2);
  CGImageRelease(v3);
  dispatch_group_leave(*(dispatch_group_t *)(*(_QWORD *)(a1 + 40) + 40));
}

void sub_FD3C(uint64_t a1, CGImageRef image)
{
  dispatch_queue_global_t global_queue;
  NSObject *v5;
  _QWORD v6[6];

  CGImageRetain(image);
  global_queue = dispatch_get_global_queue(2, 0);
  v5 = objc_claimAutoreleasedReturnValue(global_queue);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_FDC8;
  v6[3] = &unk_28BAE8;
  v6[4] = *(_QWORD *)(a1 + 32);
  v6[5] = image;
  dispatch_async(v5, v6);

}

void sub_FDC8(uint64_t a1)
{
  __int128 v2;
  NSObject *v3;
  _QWORD v4[4];
  __int128 v5;

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_FE48;
  v4[3] = &unk_28BAE8;
  v2 = *(_OWORD *)(a1 + 32);
  v3 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 32);
  v5 = v2;
  dispatch_sync(v3, v4);
  dispatch_group_leave(*(dispatch_group_t *)(*(_QWORD *)(a1 + 32) + 40));
  CGImageRelease(*(CGImageRef *)(a1 + 40));
}

CGImageRef sub_FE48(CGImageRef result)
{
  uint64_t v1;
  CGImageRef v2;

  v1 = *((_QWORD *)result + 4);
  if (*(_QWORD *)(v1 + 64))
  {
    v2 = result;
    *(_QWORD *)(v1 + 64) = 0;
    if (*((_QWORD *)result + 5))
    {
      CGImageRelease(*(CGImageRef *)(*((_QWORD *)result + 4) + 56));
      result = CGImageRetain(*((CGImageRef *)v2 + 5));
      *(_QWORD *)(*((_QWORD *)v2 + 4) + 56) = result;
    }
  }
  return result;
}

uint64_t sub_FE98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_FEA8(_QWORD *a1)
{
  CGImageRef image;

  image = 0;
  if (qword_30D500 != -1)
    dispatch_once(&qword_30D500, &stru_28BC20);
  CMPhotoJPEGDecodeSessionCreateCGImageFromData(qword_30D4E8, a1[4], a1[5], &image);
  (*(void (**)(void))(a1[6] + 16))();
  CGImageRelease(image);
}

void sub_10074(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_101EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 80), 8);
  _Unwind_Resume(a1);
}

CGImage *sub_10210(_QWORD *a1)
{
  CGImage *result;

  result = *(CGImage **)(a1[4] + 56);
  if (result)
  {
    result = CGImageRetain(result);
    *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24) = result;
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = 1;
  }
  return result;
}

CGImageRef sub_1025C(uint64_t a1)
{
  CGImageRef result;

  result = CGImageRetain(*(CGImageRef *)(*(_QWORD *)(a1 + 32) + 56));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_102FC(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v2 + 64))
  {
    if (qword_30D500 != -1)
      dispatch_once(&qword_30D500, &stru_28BC20);
    CMPhotoJPEGDecodeSessionCancelRequest(qword_30D4E8, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 64));
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) = 0;
    v2 = *(_QWORD *)(a1 + 32);
  }
  CGImageRelease(*(CGImageRef *)(v2 + 56));
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56) = 0;
}

void sub_10438(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];
  id v7;
  id v8;

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1050C;
  v6[3] = &unk_28BB60;
  v2 = *(void **)(a1 + 40);
  v6[4] = *(_QWORD *)(a1 + 32);
  v7 = v2;
  v8 = *(id *)(a1 + 48);
  v3 = objc_retainBlock(v6);
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v5 + 56))
    ((void (*)(_QWORD *))v3[2])(v3);
  else
    dispatch_group_notify(*(dispatch_group_t *)(v5 + 40), *(dispatch_queue_t *)(v5 + 32), v3);

}

void sub_104EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;

  _Unwind_Resume(a1);
}

void sub_1050C(uint64_t a1)
{
  CGImageRef v2;
  NSObject *v3;
  id v4;
  _QWORD block[5];
  id v6;
  CGImageRef v7;

  v2 = CGImageRetain(*(CGImageRef *)(*(_QWORD *)(a1 + 32) + 56));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1059C;
  block[3] = &unk_28BC00;
  v3 = *(NSObject **)(a1 + 40);
  v4 = *(id *)(a1 + 48);
  block[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  v7 = v2;
  dispatch_async(v3, block);

}

void sub_1059C(uint64_t a1)
{
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), objc_msgSend(*(id *)(a1 + 32), "isPrefetchCancelled") ^ 1, *(_QWORD *)(a1 + 48));
  CGImageRelease(*(CGImageRef *)(a1 + 48));
}

void sub_1061C(id a1)
{
  dispatch_queue_global_t global_queue;
  NSObject *v2;
  dispatch_source_t v3;
  void *v4;
  NSOperationQueue *v5;
  void *v6;
  id v7;
  id v8;

  CMPhotoJPEGDecodeSessionCreate(kCFAllocatorDefault, 0, &qword_30D4E8);
  if (qword_30D4E8)
  {
    global_queue = dispatch_get_global_queue(0, 0);
    v2 = objc_claimAutoreleasedReturnValue(global_queue);
    v3 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_memorypressure, 0, 2uLL, v2);
    v4 = (void *)qword_30D4F0;
    qword_30D4F0 = (uint64_t)v3;

    dispatch_source_set_event_handler((dispatch_source_t)qword_30D4F0, &stru_28BC40);
    dispatch_resume((dispatch_object_t)qword_30D4F0);
    v5 = objc_opt_new(NSOperationQueue);
    v6 = (void *)qword_30D4F8;
    qword_30D4F8 = (uint64_t)v5;

    v8 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    v7 = objc_msgSend(v8, "addObserverForName:object:queue:usingBlock:", UIApplicationDidEnterBackgroundNotification, 0, qword_30D4F8, &stru_28BC80);

  }
}

void sub_10728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1073C(id a1)
{
  CMPhotoJPEGDecodeSessionDiscardCachedBuffers(qword_30D4E8);
}

void sub_10748(id a1, NSNotification *a2)
{
  CMPhotoJPEGDecodeSessionDiscardCachedBuffers(qword_30D4E8);
}

void sub_10950(uint64_t a1, void *a2)
{
  id v3;
  CGContext *v4;
  CGContext *v5;

  v3 = a2;
  v4 = (CGContext *)objc_msgSend(v3, "CGContext");
  CGContextTranslateCTM(v4, 0.0, *(CGFloat *)(a1 + 48));
  CGContextScaleCTM(v4, 1.0, -1.0);
  v5 = (CGContext *)objc_msgSend(v3, "CGContext");

  CGContextDrawImage(v5, *(CGRect *)(a1 + 56), (CGImageRef)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "CGImage"));
}

id sub_11178(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "menuViewController");
}

uint64_t sub_119BC(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = a2;
  v4 = a1;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithObjects:](NSSet, "setWithObjects:", UIActivityTypePostToFacebook, CFSTR("com.linkedin.LinkedIn.ShareExtension"), UIActivityTypePostToTwitter, UIActivityTypeCopyToPasteboard, 0));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "propertyProvider"));

  if (objc_msgSend(v6, "assetType") == (char *)&dword_0 + 3)
    v7 = objc_msgSend(v5, "containsObject:", v3) ^ 1;
  else
    v7 = 0;

  return v7;
}

id sub_12338(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v19;
  id obj;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v1, "count")));
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v24 = 0u;
    v19 = v2;
    obj = v2;
    v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v22;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(_QWORD *)v22 != v6)
            objc_enumerationMutation(obj);
          v8 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
          v9 = objc_opt_class(NSDictionary);
          v10 = BUDynamicCast(v9, v8);
          v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
          v12 = objc_opt_class(NSString);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("name")));
          v14 = BUDynamicCast(v12, v13);
          v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

          if (v15)
            objc_msgSend(v3, "addObject:", v15);

        }
        v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      }
      while (v5);
    }

    v16 = v3;
    if (objc_msgSend(v3, "count"))
      v17 = objc_msgSend(v3, "copy");
    else
      v17 = 0;

    v2 = v19;
  }
  else
  {
    v17 = 0;
  }

  return v17;
}

void sub_133F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1341C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_134C0;
  v5[3] = &unk_28BD10;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_134C0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "stateChangeBlock"));
  v3 = (void *)v2;
  if (v2)
    (*(void (**)(uint64_t))(v2 + 16))(v2);
  objc_msgSend(WeakRetained, "setStateChangeBlock:", 0);

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1375C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_13778(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  unsigned int v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  id obj;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = BCAugmentedExperienceLog();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    sub_1B33DC();

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "augmentedExperiences"));
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v23 != v7)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "experience"));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "location"));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "validRange"));
        v13 = objc_msgSend(v12, "contains:", *(_QWORD *)(a1 + 32));

        if (!v13)
        {
          objc_msgSend(v9, "setAutoExpand:", 0);
          v20 = 0;
          goto LABEL_14;
        }
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "experience"));
        v15 = objc_msgSend(v14, "kind");

        if (!v15)
          objc_msgSend(v9, "setTriggeredLocation:", 2);
        objc_msgSend(WeakRetained, "_processStateEvent:forExperience:", 1, v9);
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "experience"));
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "location"));
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "experiencePoint"));
        v19 = (char *)objc_msgSend(v18, "compare:", *(_QWORD *)(a1 + 32));

        if (v19 != (_BYTE *)&dword_0 + 1)
        {
          v20 = 2;
LABEL_14:
          objc_msgSend(WeakRetained, "_processStateEvent:forExperience:", v20, v9);
          continue;
        }
      }
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v6);
  }

}

void sub_13C7C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_13C98(id *a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  id v5;
  id v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id obj;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];

  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v3 = BCAugmentedExperienceLog();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    sub_1B3540();

  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "augmentedExperiences"));
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v5)
  {
    v6 = v5;
    v24 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v26 != v24)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "experience"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "location"));
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "validRange"));

        v12 = a1[4];
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "experience"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "location"));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "experiencePoint"));
        LODWORD(v12) = objc_msgSend(v12, "contains:", v15);

        if ((_DWORD)v12)
        {
          objc_msgSend(v8, "setIsOnExperiencePage:", 1);
          objc_msgSend(v8, "setSectionContainingExperience:", a1[4]);
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "experience"));
          v17 = objc_msgSend(v16, "kind");

          if (!v17)
            objc_msgSend(v8, "setTriggeredLocation:", 2);
          objc_msgSend(WeakRetained, "_processStateEvent:forExperience:", 1, v8);
          v18 = 2;
        }
        else if (objc_msgSend(a1[4], "intersects:", v11))
        {
          objc_msgSend(v8, "setIsOnExperiencePage:", 0);
          v18 = 1;
        }
        else
        {
          if (objc_msgSend(v8, "isOnExperiencePage"))
          {
            v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "sectionContainingExperience"));

            if (v19)
            {
              v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "sectionContainingExperience"));
              if ((objc_msgSend(v20, "intersects:", a1[4]) & 1) != 0)
              {
                v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "sectionContainingExperience"));
                v22 = objc_msgSend(v21, "compareWithSection:", a1[4]);

                if (v22 == (id)-1)
                  objc_msgSend(a1[5], "_expandExperience:", v8);
              }
              else
              {

              }
            }
          }
          objc_msgSend(v8, "setIsOnExperiencePage:", 0);
          objc_msgSend(v8, "setAutoExpand:", 0);
          v18 = 0;
        }
        objc_msgSend(WeakRetained, "_processStateEvent:forExperience:", v18, v8);

      }
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v6);
  }

}

void sub_148BC(uint64_t a1, char a2)
{
  void *v2;
  _QWORD block[5];
  id v4;
  char v5;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1492C;
  block[3] = &unk_28BDD0;
  v2 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v5 = a2;
  v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_1492C(uint64_t a1)
{
  uint64_t v1;

  if (*(_BYTE *)(a1 + 48))
    v1 = 4;
  else
    v1 = 3;
  return objc_msgSend(*(id *)(a1 + 32), "_processStateEvent:forExperience:", v1, *(_QWORD *)(a1 + 40));
}

id sub_14B34(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setDelayTimer:", 0);
  return objc_msgSend(*(id *)(a1 + 40), "_delayCompletedForExperience:", *(_QWORD *)(a1 + 32));
}

id sub_14C38(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_processStateEvent:forExperience:", 5, *(_QWORD *)(a1 + 40));
}

id sub_1512C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setIsPresented:", 0);
}

void sub_15444(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_15450(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_15DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_15DDC(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  uint64_t v7;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "predicate"));
  v6 = objc_msgSend(v5, "score");

  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  if ((uint64_t)v6 > *(_QWORD *)(v7 + 24))
  {
    *(_QWORD *)(v7 + 24) = v6;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = a3;
  }
}

id sub_17304(uint64_t a1)
{
  void *v1;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageFromImageEntry:](BICDescribedImage, "describedImageFromImageEntry:", a1));
  objc_msgSend(v1, "setFilePath:", CFSTR("filePath"));
  return v1;
}

void sub_17A3C(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.529411765, 0.749019608, 0.407843137, 1.0));
  v9[0] = v1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.952941176, 0.768627451, 0.321568627, 1.0));
  v9[1] = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.91372549, 0.6, 0.258823529, 1.0));
  v9[2] = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.82745098, 0.325490196, 0.329411765, 1.0));
  v9[3] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.607843137, 0.360784314, 0.647058824, 1.0));
  v9[4] = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.349019608, 0.670588235, 0.870588235, 1.0));
  v9[5] = v6;
  v7 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v9, 6));
  v8 = (void *)qword_30D508;
  qword_30D508 = v7;

}

uint64_t BCViewportSize(double a1, double a2)
{
  double v2;
  double v3;
  void *v4;
  char *v5;

  if (a1 <= a2)
    v2 = a1;
  else
    v2 = a2;
  if (a1 <= a2)
    v3 = a2;
  else
    v3 = a1;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIDevice currentDevice](UIDevice, "currentDevice"));
  v5 = (char *)objc_msgSend(v4, "userInterfaceIdiom");

  if (v5 == (_BYTE *)&dword_4 + 1)
    return 3;
  if (v5 == (_BYTE *)&dword_0 + 1)
  {
    if (isMegaPad())
      return 3;
    else
      return 2;
  }
  else if (v5)
  {
    return 4;
  }
  else
  {
    if (v2 == 375.0 && v3 == 812.0)
      return 1;
    if (v2 == 414.0 && v3 == 896.0)
      return 1;
    else
      return v3 == 926.0 && v2 == 428.0;
  }
}

id sub_17F8C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_fontNeedsUpdate");
}

void sub_186FC(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)(a1 + 32);
  if (a2)
  {
    objc_msgSend(v3, "fetchImagesFromImageSet:matchingDescription:forRequest:completion:", a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
    return;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nextCacheLevel"));

  if (v4)
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));
    objc_msgSend(v6, "fetchImagesMatchingDescription:forRequest:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
LABEL_7:
    v5 = v6;
    goto LABEL_8;
  }
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationAsyncFetchExactFail[0], *(_QWORD *)(a1 + 48));
  v5 = objc_retainBlock(*(id *)(a1 + 56));
  if (v5)
  {
    v6 = v5;
    (*((void (**)(id, _QWORD))v5 + 2))(v5, 0);
    goto LABEL_7;
  }
LABEL_8:

}

void sub_18A08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18A2C(uint64_t a1, void *a2)
{
  id WeakRetained;
  void (**v4)(void);
  void (**v5)(void);
  void (*v6)(void);
  uint64_t v7;
  void *v8;
  char *v9;
  void (**v10)(void);
  id v11;

  v11 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (objc_msgSend(v11, "count"))
    {
      +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationAsyncFetchExactSuccess[0], *(_QWORD *)(a1 + 32));
      v4 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
      v5 = v4;
      if (v4)
      {
        v6 = v4[2];
LABEL_9:
        v6();
        goto LABEL_10;
      }
      goto LABEL_10;
    }
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "nextCacheLevel"));
    if (v7)
    {
      v8 = (void *)v7;
      v9 = (char *)objc_msgSend(*(id *)(a1 + 32), "priority");

      if (v9 != (_BYTE *)&dword_0 + 1)
      {
        v5 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "nextCacheLevel"));
        objc_msgSend(v5, "fetchImagesMatchingDescription:forRequest:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48));
        goto LABEL_10;
      }
    }
  }
  v10 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
  v5 = v10;
  if (v10)
  {
    v6 = v10[2];
    goto LABEL_9;
  }
LABEL_10:

}

void sub_18CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18CDC(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void (**v6)(void);
  void (**v7)(void);
  void (*v8)(void);
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  void (**v14)(void);
  int v15;
  uint64_t v16;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = WeakRetained;
  if (v3)
  {
    v6 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    v7 = v6;
    if (v6)
    {
      v8 = v6[2];
LABEL_4:
      v8();
    }
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "nextCacheLevel"));

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "nextCacheLevel"));
      objc_msgSend(v10, "getPrimaryImageForRequest:completion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

      goto LABEL_8;
    }
    v11 = BCImageCacheLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      v13 = *(_QWORD *)(a1 + 32);
      v15 = 138412290;
      v16 = v13;
      _os_log_impl(&dword_0, v12, OS_LOG_TYPE_INFO, "BICCacheLevel: No primary image for request: %@", (uint8_t *)&v15, 0xCu);
    }

    v14 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    v7 = v14;
    if (v14)
    {
      v8 = v14[2];
      goto LABEL_4;
    }
  }

LABEL_8:
}

void sub_18FD0(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_18FD8(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_18FE0(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_19270(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;
  id v12;
  id v13;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));
  v9[0] = _NSConcreteStackBlock;
  v9[2] = sub_19344;
  v9[3] = &unk_28BFB8;
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(void **)(a1 + 40);
  v10 = v3;
  v11 = v5;
  v7 = *(_QWORD *)(a1 + 48);
  v9[1] = 3221225472;
  v12 = v6;
  v13 = *(id *)(a1 + 56);
  v8 = v3;
  objc_msgSend(v4, "_getSortedBestMatchesOf:forRequest:completion:", v6, v7, v9);

}

void sub_19344(uint64_t a1, void *a2)
{
  uint64_t *v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = (uint64_t *)(a1 + 32);
  v4 = *(void **)(a1 + 32);
  v5 = a2;
  if (objc_msgSend(v4, "count"))
  {
    v6 = BCImageCacheLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      sub_1B35E4(v3, v7);

  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:", *(_QWORD *)(a1 + 32)));
  objc_msgSend(v8, "addObjectsFromArray:", v5);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "imageComparator"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "sortedBestMatchOf:toCandidateImages:", *(_QWORD *)(a1 + 48), v8));

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
}

void sub_19618(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  _QWORD v9[5];
  id v10;
  id v11;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));
    v6 = *(__int16 *)(a1 + 48);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_19710;
    v9[3] = &unk_28BFE0;
    v9[4] = *(_QWORD *)(a1 + 32);
    v10 = v3;
    v11 = *(id *)(a1 + 40);
    objc_msgSend(v5, "gatherPrunableItemsForMedium:withCompletion:", v6, v9);

  }
  else
  {
    v7 = objc_retainBlock(*(id *)(a1 + 40));
    v8 = v7;
    if (v7)
      (*((void (**)(id, id))v7 + 2))(v7, v3);

  }
}

void sub_19710(id *a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "lowPriorityWorkQ"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_197CC;
  block[3] = &unk_28B750;
  v7 = a1[5];
  v8 = v3;
  v9 = a1[6];
  v5 = v3;
  dispatch_async(v4, block);

}

void sub_197CC(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 40));
  v2 = objc_retainBlock(*(id *)(a1 + 48));
  v3 = v2;
  if (v2)
    (*((void (**)(id, id))v2 + 2))(v2, v4);

}

void sub_19910(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD v10[5];
  id v11;
  id v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));
    v6 = *(__int16 *)(a1 + 56);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_19A14;
    v10[3] = &unk_28BFE0;
    v7 = *(_QWORD *)(a1 + 40);
    v10[4] = *(_QWORD *)(a1 + 32);
    v11 = v3;
    v12 = *(id *)(a1 + 48);
    objc_msgSend(v5, "gatherPrunableItemsWithIdentifier:forMedium:withCompletion:", v7, v6, v10);

  }
  else
  {
    v8 = objc_retainBlock(*(id *)(a1 + 48));
    v9 = v8;
    if (v8)
      (*((void (**)(id, id))v8 + 2))(v8, v3);

  }
}

void sub_19A14(id *a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "lowPriorityWorkQ"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_19AD0;
  block[3] = &unk_28B750;
  v7 = a1[5];
  v8 = v3;
  v9 = a1[6];
  v5 = v3;
  dispatch_async(v4, block);

}

void sub_19AD0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 40));
  v2 = objc_retainBlock(*(id *)(a1 + 48));
  v3 = v2;
  if (v2)
    (*((void (**)(id, id))v2 + 2))(v2, v4);

}

void sub_19C04(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  _QWORD v10[5];
  id v11;
  id v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));
    v6 = *(__int16 *)(a1 + 56);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_19D08;
    v10[3] = &unk_28BFE0;
    v7 = *(_QWORD *)(a1 + 40);
    v10[4] = *(_QWORD *)(a1 + 32);
    v11 = v3;
    v12 = *(id *)(a1 + 48);
    objc_msgSend(v5, "pruneItems:forMedium:withCompletion:", v7, v6, v10);

  }
  else
  {
    v8 = objc_retainBlock(*(id *)(a1 + 48));
    v9 = v8;
    if (v8)
      (*((void (**)(id, id))v8 + 2))(v8, v3);

  }
}

void sub_19D08(id *a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "lowPriorityWorkQ"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_19DC4;
  block[3] = &unk_28B750;
  v7 = a1[5];
  v8 = v3;
  v9 = a1[6];
  v5 = v3;
  dispatch_async(v4, block);

}

void sub_19DC4(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 40));
  v2 = objc_retainBlock(*(id *)(a1 + 48));
  v3 = v2;
  if (v2)
    (*((void (**)(id, id))v2 + 2))(v2, v4);

}

void sub_19EE8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  id v12;

  v3 = a2;
  if (*(_BYTE *)(a1 + 48)
    || (v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel")),
        v6,
        !v6))
  {
    v4 = objc_retainBlock(*(id *)(a1 + 40));
    v5 = v4;
    if (v4)
      (*((void (**)(id, id))v4 + 2))(v4, v3);

  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));
    v8 = *(unsigned __int8 *)(a1 + 48);
    v9 = *(unsigned __int8 *)(a1 + 49);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_19FF0;
    v10[3] = &unk_28C058;
    v11 = v3;
    v12 = *(id *)(a1 + 40);
    objc_msgSend(v7, "_inventoryLevelOnly:addLevelID:completion:", v8, v9, v10);

  }
}

void sub_19FF0(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v7 = objc_msgSend(v3, "mutableCopy");
  objc_msgSend(v7, "addObjectsFromArray:", v4);

  v5 = objc_retainBlock(*(id *)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(id, id))v5 + 2))(v5, v7);

}

void sub_1A100(uint64_t a1)
{
  void *v2;
  void *v3;
  void (**v4)(void);
  void (**v5)(void);
  _QWORD v6[4];
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "nextCacheLevel"));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1A1C8;
    v6[3] = &unk_28BF90;
    v7 = *(id *)(a1 + 40);
    objc_msgSend(v3, "_clean:", v6);

  }
  else
  {
    v4 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    if (v4)
    {
      v5 = v4;
      v4[2]();
      v4 = v5;
    }

  }
}

void sub_1A1C8(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_1A660(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 128));
  _Unwind_Resume(a1);
}

void sub_1A6B0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 16);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1A75C;
    v7[3] = &unk_28C080;
    v8 = WeakRetained;
    v9 = v3;
    dispatch_async(v6, v7);

  }
}

void sub_1A75C(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1A7C8;
  v2[3] = &unk_28C140;
  v1 = *(void **)(a1 + 32);
  v3 = *(id *)(a1 + 40);
  objc_msgSend(v1, "_saveHeatMapWithCompletion:", v2);

}

void sub_1A7C8(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_1A7FC(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 16);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1A8A8;
    v7[3] = &unk_28C080;
    v8 = WeakRetained;
    v9 = v3;
    dispatch_async(v6, v7);

  }
}

id sub_1A8A8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_processDirtyTOCEntriesWithCompletion:", *(_QWORD *)(a1 + 40));
}

void sub_1A8B4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = *(NSObject **)(*(_QWORD *)(a1 + 32) + 16);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1A960;
    v7[3] = &unk_28C080;
    v8 = WeakRetained;
    v9 = v3;
    dispatch_async(v6, v7);

  }
}

id sub_1A960(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_connectOrdinalsWithCompletion:", *(_QWORD *)(a1 + 40));
}

void sub_1AB60(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _UNKNOWN **v11;
  uint64_t v12;
  void *v13;
  _UNKNOWN **v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  const __CFString *v20;
  uint64_t v21;
  _QWORD v22[2];
  _QWORD v23[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_predicateForTOCEntriesWithHref:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTOCEntry")));
  objc_msgSend(v3, "setPredicate:", v2);
  v4 = *(void **)(a1 + 48);
  v19 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v3, &v19));
  v6 = v19;
  if (v6)
  {
LABEL_2:
    v7 = objc_retainBlock(*(id *)(a1 + 56));
    v8 = v7;
    if (v7)
      (*((void (**)(id, _QWORD, id))v7 + 2))(v7, 0, v6);
    goto LABEL_14;
  }
  if (!objc_msgSend(v5, "count"))
  {
    v17 = *(_QWORD *)(a1 + 40);
    if (v17)
    {
      v20 = CFSTR("href");
      v21 = v17;
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v21, &v20, 1));
    }
    else
    {
      v18 = 0;
    }
    v6 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BCReadingStatistics"), 1000, v18));
    if (v17)

    goto LABEL_2;
  }
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
  v22[0] = CFSTR("readProportion");
  v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "proportionRead"));
  v10 = (void *)v9;
  if (v9)
    v11 = (_UNKNOWN **)v9;
  else
    v11 = &off_2A93F8;
  v22[1] = CFSTR("totalCharacterCount");
  v23[0] = v11;
  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "cachedCharacterCount"));
  v13 = (void *)v12;
  if (v12)
    v14 = (_UNKNOWN **)v12;
  else
    v14 = &off_2A93F8;
  v23[1] = v14;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v23, v22, 2));

  v15 = objc_retainBlock(*(id *)(a1 + 56));
  v16 = v15;
  if (v15)
    (*((void (**)(id, void *, _QWORD))v15 + 2))(v15, v8, 0);

LABEL_14:
}

void sub_1AE3C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void (**v6)(void);
  void (**v7)(void);
  void (*v8)(void);
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *i;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  void *v24;
  void *v25;
  void (**v26)(void);
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  id v32;
  _QWORD v33[2];
  _QWORD v34[2];
  _BYTE v35[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchRequestForTOCEntries"));
  v3 = *(void **)(a1 + 40);
  v32 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v2, &v32));
  v5 = v32;
  if (v5)
  {
LABEL_2:
    v6 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
    v7 = v6;
    if (v6)
    {
      v8 = v6[2];
LABEL_17:
      v8();
      goto LABEL_18;
    }
    goto LABEL_18;
  }
  if (!objc_msgSend(v4, "count"))
  {
    v5 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BCReadingStatistics"), 1000, 0));
    goto LABEL_2;
  }
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v9 = v4;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v28, v35, 16);
  if (v10)
  {
    v11 = v10;
    v27 = v4;
    v12 = 0;
    v13 = 0;
    v14 = *(_QWORD *)v29;
    do
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(_QWORD *)v29 != v14)
          objc_enumerationMutation(v9);
        v16 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)i);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "cachedCharacterCount"));
        v13 += (unint64_t)objc_msgSend(v17, "integerValue");

        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "proportionRead"));
        objc_msgSend(v18, "doubleValue");
        v20 = v19;
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "cachedCharacterCount"));
        objc_msgSend(v21, "doubleValue");
        v12 += llround(v20 * v22);

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v28, v35, 16);
    }
    while (v11);
    v23 = (double)v12;
    v4 = v27;
  }
  else
  {
    v13 = 0;
    v23 = 0.0;
  }

  v33[0] = CFSTR("readProportion");
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v23 / (double)v13));
  v33[1] = CFSTR("totalCharacterCount");
  v34[0] = v24;
  v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v13));
  v34[1] = v25;
  v5 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v34, v33, 2));

  v26 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
  v7 = v26;
  if (v26)
  {
    v8 = v26[2];
    goto LABEL_17;
  }
LABEL_18:

}

void sub_1B198(id *a1)
{
  void *v2;
  void *v3;
  NSMutableDictionary *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_fetchRequestForTOCEntries"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "executeFetchRequest:error:", v2, 0));
  v4 = objc_opt_new(NSMutableDictionary);
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v19;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v19 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)i);
        v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "cfiStart", (_QWORD)v18));
        if (v11)
        {
          v12 = (void *)v11;
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "href"));

          if (v13)
          {
            v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "cfiStart"));
            v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "href"));
            -[NSMutableDictionary setObject:forKey:](v4, "setObject:forKey:", v14, v15);

          }
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v7);
  }

  v16 = objc_retainBlock(a1[6]);
  v17 = v16;
  if (v16)
    (*((void (**)(id, NSMutableDictionary *))v16 + 2))(v16, v4);

}

void sub_1B3D8(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;
  id v4;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1B448;
  v2[3] = &unk_28C1B8;
  v1 = *(void **)(a1 + 40);
  v3 = *(id *)(a1 + 32);
  v4 = v1;
  objc_msgSend(v3, "_updateHeatMapWithCompletion:", v2);

}

void sub_1B448(uint64_t a1)
{
  id v2;

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(*(_QWORD *)(a1 + 32) + 16));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCFIs"));
  objc_msgSend(v2, "unionCFISet:", *(_QWORD *)(a1 + 40));

}

void sub_1B510(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;
  id v4;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1B580;
  v2[3] = &unk_28C1B8;
  v1 = *(void **)(a1 + 40);
  v3 = *(id *)(a1 + 32);
  v4 = v1;
  objc_msgSend(v3, "_updateHeatMapWithCompletion:", v2);

}

void sub_1B580(uint64_t a1)
{
  id v2;

  dispatch_assert_queue_V2(*(dispatch_queue_t *)(*(_QWORD *)(a1 + 32) + 16));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCFIs"));
  objc_msgSend(v2, "subtractCFISet:", *(_QWORD *)(a1 + 40));

}

id sub_1B6D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateHeatMapWithCompletion:", 0);
}

void sub_1B988(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *j;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  NSObject *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void (**v51)(id, id);
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  uint64_t v59;
  id obj;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  id v65;
  id v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _BYTE v79[128];
  _BYTE v80[128];
  _BYTE v81[128];
  id v82;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_predicateForTOCEntriesWithOrdinal:", *(_QWORD *)(a1 + 64)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTOCEntry")));
  v56 = objc_msgSend(objc_alloc((Class)NSSortDescriptor), "initWithKey:ascending:", CFSTR("intraOrdinalOrder"), 1);
  v82 = v56;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v82, 1));
  objc_msgSend(v3, "setSortDescriptors:", v4);

  v53 = (void *)v2;
  objc_msgSend(v3, "setPredicate:", v2);
  v5 = (id *)(a1 + 40);
  v57 = v3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "executeFetchRequest:error:", v3, 0));
  v75 = 0u;
  v76 = 0u;
  v77 = 0u;
  v78 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v75, v81, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v76;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v76 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*(id *)(*((_QWORD *)&v75 + 1) + 8 * (_QWORD)i), "setCachedCharacterCount:", 0);
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v75, v81, 16);
    }
    while (v8);
  }
  v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_predicateForCharacterCountsWithOrdinal:", *(_QWORD *)(a1 + 64)));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTextNode")));
  v55 = (void *)v11;
  objc_msgSend(v12, "setPredicate:", v11);
  v61 = a1;
  v54 = v12;
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "executeFetchRequest:error:", v12, 0));
  v71 = 0u;
  v72 = 0u;
  v73 = 0u;
  v74 = 0u;
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v71, v80, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v72;
    do
    {
      for (j = 0; j != v15; j = (char *)j + 1)
      {
        if (*(_QWORD *)v72 != v16)
          objc_enumerationMutation(v13);
        objc_msgSend(*v5, "deleteObject:", *(_QWORD *)(*((_QWORD *)&v71 + 1) + 8 * (_QWORD)j));
      }
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v71, v80, 16);
    }
    while (v15);
  }
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "allKeys"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "sortedArrayUsingSelector:", "compare:"));

  v69 = 0u;
  v70 = 0u;
  v67 = 0u;
  v68 = 0u;
  obj = v19;
  v58 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v67, v79, 16);
  if (v58)
  {
    v20 = 0;
    v59 = *(_QWORD *)v68;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v68 != v59)
          objc_enumerationMutation(obj);
        v62 = v21;
        v22 = *(void **)(*((_QWORD *)&v67 + 1) + 8 * v21);
        if (v20 < (unint64_t)objc_msgSend(v6, "count"))
        {
          v23 = 0;
          while (1)
          {
            v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", v20));

            v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "cfiStart"));
            if (v25)
            {
              v63 = v20;
              v26 = v22;
              v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "cfiStart"));
              v66 = 0;
              v28 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI cfiWithString:error:](BCCFI, "cfiWithString:error:", v27, &v66));
              v29 = v66;

              if (v29)
              {
                v43 = v53;
                goto LABEL_51;
              }
              v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "cfiEnd"));
              if (!v30)
              {
                v22 = v26;
                if (objc_msgSend(v26, "compareTailToHead:", v28) == (char *)&dword_0 + 1)
                {
                  v20 = v63;
                }
                else
                {
                  v34 = v24;
                  v24 = 0;
                  v20 = v63;
LABEL_40:

                }
                goto LABEL_42;
              }
              v31 = (void *)v30;
              v32 = v24;
              v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "cfiEnd"));
              v65 = 0;
              v34 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI cfiWithString:error:](BCCFI, "cfiWithString:error:", v33, &v65));
              v29 = v65;

              if (v29)
              {

                v43 = v53;
                v24 = v32;
LABEL_51:

LABEL_53:
                v48 = v56;
                v47 = v57;
                v50 = v54;
                v49 = v55;
                v51 = (void (**)(id, id))objc_retainBlock(*(id *)(v61 + 56));
                if (v51)
                  goto LABEL_54;
                goto LABEL_55;
              }
              v22 = v26;
              if (objc_msgSend(v26, "compareTailToHead:", v28) == (char *)&dword_0 + 1)
              {
                v20 = v63;
                v24 = v32;
                if (!v34 || objc_msgSend(v22, "compareHeadToTail:", v34) == (id)-1)
                  goto LABEL_40;
              }
              else
              {
                v20 = v63;
                v24 = v32;
                if (!v34)
                  goto LABEL_36;
              }
              if (objc_msgSend(v22, "compareHeadToTail:", v34) == (id)-1)
              {
LABEL_36:

                v34 = v24;
                v24 = 0;
                goto LABEL_40;
              }

              v24 = 0;
            }
            ++v20;
            v23 = v24;
            if (v20 >= (unint64_t)objc_msgSend(v6, "count"))
              goto LABEL_42;
          }
        }
        v24 = 0;
LABEL_42:
        v35 = v24;
        v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("BCReadingStatsTextNode"), *(_QWORD *)(v61 + 40)));
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v61 + 48), "objectForKeyedSubscript:", v22));
        v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "string"));
        objc_msgSend(v36, "setCfi:", v38);

        objc_msgSend(v36, "setCharacterCount:", v37);
        v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(v61 + 64)));
        objc_msgSend(v36, "setOrdinal:", v39);

        objc_msgSend(v36, "setTocEntry:", v24);
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "cachedCharacterCount"));
        v41 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", (char *)objc_msgSend(v40, "integerValue") + (_QWORD)objc_msgSend(v37, "integerValue")));
        objc_msgSend(v35, "setCachedCharacterCount:", v41);

        v21 = v62 + 1;
      }
      while ((id)(v62 + 1) != v58);
      v58 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v67, v79, 16);
    }
    while (v58);
  }

  if (!objc_msgSend(*v5, "hasChanges"))
  {
    v29 = 0;
    v43 = v53;
    goto LABEL_53;
  }
  v42 = *v5;
  v64 = 0;
  objc_msgSend(v42, "save:", &v64);
  v29 = v64;
  v43 = v53;
  if (v29)
  {
    v44 = BCReadingStatisticsLog();
    v45 = objc_claimAutoreleasedReturnValue(v44);
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
      sub_1B36C8();
    v46 = v61;
  }
  else
  {
    v46 = v61;
    v45 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v61 + 32), "haveTextNodeLengthIndices"));
    -[NSObject addIndex:](v45, "addIndex:", *(_QWORD *)(v61 + 64));
  }

  v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v46 + 32), "coalescedConnectOrdinals"));
  objc_msgSend(v52, "signalWithCompletion:", &stru_28C1D8);

  v51 = (void (**)(id, id))objc_retainBlock(*(id *)(v46 + 56));
  v48 = v56;
  v47 = v57;
  v50 = v54;
  v49 = v55;
  if (v51)
LABEL_54:
    v51[2](v51, v29);
LABEL_55:

}

void sub_1C1F4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  id v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  NSObject *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint8_t buf[4];
  uint64_t v61;
  __int16 v62;
  id v63;
  _BYTE v64[128];

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_predicateForCharacterCountsWithOrdinal:", *(_QWORD *)(a1 + 64)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTextNode")));
  v47 = (void *)v2;
  objc_msgSend(v3, "setPredicate:", v2);
  v53 = a1;
  v5 = *(void **)(a1 + 40);
  v4 = (id *)(a1 + 40);
  v46 = v3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "executeFetchRequest:error:", v3, 0));
  v56 = 0u;
  v57 = 0u;
  v58 = 0u;
  v59 = 0u;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v56, v64, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v57;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v57 != v9)
          objc_enumerationMutation(v6);
        objc_msgSend(*v4, "deleteObject:", *(_QWORD *)(*((_QWORD *)&v56 + 1) + 8 * (_QWORD)i));
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v56, v64, 16);
    }
    while (v8);
  }
  v11 = objc_msgSend(*(id *)(v53 + 48), "count");
  if (v11)
  {
    v12 = (unint64_t)v11;
    v13 = 0;
    do
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v53 + 48), "objectAtIndexedSubscript:", v13));
      v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("href")));
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTOCEntry")));
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K = %@"), CFSTR("href"), v15));
      objc_msgSend(v16, "setPredicate:", v17);

      v55 = 0;
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "execute:", &v55));
      v50 = v16;
      v51 = (void *)v15;
      v48 = v55;
      v52 = v18;
      if (objc_msgSend(v18, "count"))
      {
        if (objc_msgSend(v18, "count") == (char *)&dword_0 + 1)
        {
          v19 = v18;
        }
        else
        {
          v21 = BCReadingStatisticsLog();
          v22 = objc_claimAutoreleasedReturnValue(v21);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
          {
            v35 = objc_msgSend(v18, "count");
            *(_DWORD *)buf = 138412546;
            v61 = v15;
            v62 = 2048;
            v63 = v35;
            _os_log_error_impl(&dword_0, v22, OS_LOG_TYPE_ERROR, "Not expecting more than one TOC entry with href %@.  Have %lu", buf, 0x16u);
          }

          v19 = v18;
        }
        v20 = objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "firstObject"));
      }
      else
      {
        v20 = objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("BCReadingStatsTOCEntry"), *v4));
      }
      v23 = (void *)v20;
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("cfiStart")));
      objc_msgSend(v23, "setCfiStart:", v24);

      v49 = v13;
      v25 = v13 + 1;
      if (v13 + 1 < v12)
      {
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v53 + 48), "objectAtIndexedSubscript:", v13 + 1));
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "objectForKeyedSubscript:", CFSTR("cfiStart")));
        objc_msgSend(v23, "setCfiEnd:", v27);

      }
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("href")));
      objc_msgSend(v23, "setHref:", v28);

      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectForKeyedSubscript:", CFSTR("name")));
      objc_msgSend(v23, "setName:", v29);

      v30 = v14;
      v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(v53 + 64)));
      objc_msgSend(v23, "setOrdinal:", v31);

      v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v49));
      objc_msgSend(v23, "setIntraOrdinalOrder:", v32);

      v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "proportionRead"));
      if (!v33)
        objc_msgSend(v23, "setProportionRead:", &off_2A93F8);
      v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v53 + 32), "bookVersionString"));
      objc_msgSend(v23, "setAssetVersion:", v34);

      v13 = v25;
    }
    while (v12 != v25);
  }
  if ((objc_msgSend(*v4, "hasChanges") & 1) != 0)
  {
    v36 = *v4;
    v54 = 0;
    objc_msgSend(v36, "save:", &v54);
    v37 = v54;
    if (v37)
    {
      v38 = v37;
      v39 = BCReadingStatisticsLog();
      v40 = objc_claimAutoreleasedReturnValue(v39);
      if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
        sub_1B36C8();
      goto LABEL_29;
    }
  }
  if (objc_msgSend(*(id *)(v53 + 48), "count"))
  {
    v40 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v53 + 32), "haveTOCCFIIndices"));
    -[NSObject addIndex:](v40, "addIndex:", *(_QWORD *)(v53 + 64));
    v38 = 0;
LABEL_29:
    v42 = v46;
    v41 = v47;

    goto LABEL_31;
  }
  v38 = 0;
  v42 = v46;
  v41 = v47;
LABEL_31:
  objc_msgSend(*(id *)(v53 + 32), "_invalidateTOCEntryCFICache");
  v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v53 + 32), "coalescedConnectOrdinals"));
  objc_msgSend(v43, "signalWithCompletion:", &stru_28C220);

  v44 = objc_retainBlock(*(id *)(v53 + 56));
  v45 = v44;
  if (v44)
    (*((void (**)(id, void *))v44 + 2))(v44, v38);

}

void sub_1C820(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "observers"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 32));

}

void sub_1C924(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "observers"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 32));

}

int64_t sub_1CC4C(id a1, NSArray *a2, NSArray *a3)
{
  NSArray *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](a2, "objectAtIndexedSubscript:", 0));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](v4, "objectAtIndexedSubscript:", 0));

  v7 = objc_msgSend(v5, "compareCFI:", v6);
  return (int64_t)v7;
}

void sub_1CE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1CE8C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1CE9C(uint64_t a1)
{

}

void sub_1CEA4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  NSMutableArray *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  id obj;
  _QWORD v28[2];
  _BYTE v29[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTextNode")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_predicateForCharacterCountsWithOrdinal:", *(_QWORD *)(a1 + 64)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = *(void **)(a1 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  obj = *(id *)(v5 + 40);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &obj));
  objc_storeStrong((id *)(v5 + 40), obj);
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v7 = objc_opt_new(NSMutableArray);
    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    v8 = v6;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v29, 16);
    if (v9)
    {
      v10 = v9;
      v21 = v6;
      v22 = v2;
      v11 = *(_QWORD *)v24;
      while (2)
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(_QWORD *)v24 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)i);
          v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "cachedCFI", v21, v22, (_QWORD)v23));
          if (!v14)
          {

            v7 = 0;
            goto LABEL_12;
          }
          v15 = (void *)v14;
          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "characterCount"));
          v28[0] = v15;
          v28[1] = v16;
          v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v28, 2));
          -[NSMutableArray addObject:](v7, "addObject:", v17);

        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v29, 16);
        if (v10)
          continue;
        break;
      }
LABEL_12:
      v6 = v21;
      v2 = v22;
    }

    v18 = objc_claimAutoreleasedReturnValue(-[NSMutableArray sortedArrayUsingComparator:](v7, "sortedArrayUsingComparator:", &stru_28C280));
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v20 = *(void **)(v19 + 40);
    *(_QWORD *)(v19 + 40) = v18;

  }
}

int64_t sub_1D0CC(id a1, NSArray *a2, NSArray *a3)
{
  NSArray *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](a2, "objectAtIndexedSubscript:", 0));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](v4, "objectAtIndexedSubscript:", 0));

  v7 = objc_msgSend(v5, "compareCFI:", v6);
  return (int64_t)v7;
}

void sub_1D180(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForInfoDictionaryKey:", CFSTR("CFBundleShortVersionString")));
  v2 = objc_msgSend(v1, "copy");
  v3 = (void *)qword_30D518;
  qword_30D518 = (uint64_t)v2;

}

void sub_1D5D4(id *a1)
{
  id *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  id v8;
  id v9;
  uint64_t v10;
  void *j;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  id v20;
  void *v21;
  id *v22;
  void *v23;
  void *v24;
  id obj;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];
  _BYTE v36[128];

  v2 = a1 + 4;
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsHeatMapEntry")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v2, "executeFetchRequest:error:"));
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v32;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v32 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*v2, "deleteObject:", *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)i));
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
    }
    while (v5);
  }
  v22 = a1;
  v23 = v3;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  obj = a1[5];
  v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v28;
    do
    {
      for (j = 0; j != v9; j = (char *)j + 1)
      {
        if (*(_QWORD *)v28 != v10)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)j);
        v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("BCReadingStatsHeatMapEntry"), *v2));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("cfiString")));
        objc_msgSend(v13, "setCfi:", v14);

        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("count")));
        objc_msgSend(v13, "setCount:", v15);

      }
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v35, 16);
    }
    while (v9);
  }

  objc_msgSend(a1[6], "_updateAppVersionOnMOC:", a1[4]);
  if (objc_msgSend(a1[4], "hasChanges"))
  {
    v16 = *v2;
    v26 = 0;
    objc_msgSend(v16, "save:", &v26);
    v17 = v26;
    if (v17)
    {
      v18 = BCReadingStatisticsLog();
      v19 = objc_claimAutoreleasedReturnValue(v18);
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        sub_1B36C8();

    }
  }
  else
  {
    v17 = 0;
  }
  v20 = objc_retainBlock(v22[7]);
  v21 = v20;
  if (v20)
    (*((void (**)(id, id))v20 + 2))(v20, v17);

}

void sub_1DAD0(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *i;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  id v14;
  NSObject *v15;
  id v16;
  id v17;
  uint64_t v18;
  void *j;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  void *k;
  void *v30;
  void *v31;
  char *v32;
  void *v33;
  char *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  NSObject *v45;
  id v46;
  BCCountedCFISet *v47;
  void *v48;
  void *v49;
  void *v50;
  id obj;
  void *v53;
  NSObject *v54;
  BCCountedCFISet *v55;
  _QWORD block[4];
  BCCountedCFISet *v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t *v61;
  id v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  id v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  id v76;
  id v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  const __CFString *v82;
  _BYTE v83[128];
  _QWORD v84[2];
  _BYTE v85[128];
  const __CFString *v86;
  _BYTE v87[128];

  v55 = objc_alloc_init(BCCountedCFISet);
  v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsHeatMapEntry")));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "executeFetchRequest:error:", v50, 0));
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  obj = v1;
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v78, v87, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v79;
    while (2)
    {
      for (i = 0; i != v2; i = (char *)i + 1)
      {
        if (*(_QWORD *)v79 != v3)
          objc_enumerationMutation(obj);
        v5 = *(id *)(*((_QWORD *)&v78 + 1) + 8 * (_QWORD)i);
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "cfi"));
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "count"));
        objc_msgSend(v7, "doubleValue");
        v77 = 0;
        -[BCCountedCFISet addCFIString:count:error:](v55, "addCFIString:count:error:", v6, &v77);
        v8 = v77;

        if (v8)
        {
          v14 = BCReadingStatisticsLog();
          v15 = objc_claimAutoreleasedReturnValue(v14);
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
            sub_1B3898(v5);

          v55 = 0;
          v68 = 0;
          v69 = &v68;
          v70 = 0x2020000000;
          v71 = 0;
          goto LABEL_41;
        }

      }
      v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v78, v87, 16);
      if (v2)
        continue;
      break;
    }
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTextNode")));
  objc_msgSend(v9, "setResultType:", 2);
  objc_msgSend(v9, "setReturnsDistinctResults:", 1);
  v86 = CFSTR("ordinal");
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v86, 1));
  objc_msgSend(v9, "setPropertiesToFetch:", v10);

  v11 = *(void **)(a1 + 32);
  v76 = 0;
  v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "executeFetchRequest:error:", v9, &v76));
  v8 = v76;
  if (v8)
  {
    v12 = BCReadingStatisticsLog();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1B3838();
  }
  else
  {
    v13 = objc_claimAutoreleasedReturnValue(+[NSMutableIndexSet indexSet](NSMutableIndexSet, "indexSet"));
    v74 = 0u;
    v75 = 0u;
    v72 = 0u;
    v73 = 0u;
    v16 = v53;
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v72, v85, 16);
    if (v17)
    {
      v18 = *(_QWORD *)v73;
      do
      {
        for (j = 0; j != v17; j = (char *)j + 1)
        {
          if (*(_QWORD *)v73 != v18)
            objc_enumerationMutation(v16);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v72 + 1) + 8 * (_QWORD)j), "objectForKeyedSubscript:", CFSTR("ordinal")));
          v21 = objc_msgSend(v20, "integerValue");

          -[NSObject addIndex:](v13, "addIndex:", v21);
        }
        v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v72, v85, 16);
      }
      while (v17);
    }

    objc_msgSend(*(id *)(a1 + 40), "setHaveTextNodeLengthIndices:", v13);
  }

  v68 = 0;
  v69 = &v68;
  v70 = 0x2020000000;
  v71 = 0;
  if (!v8)
  {
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTOCEntry")));
    objc_msgSend(v22, "setResultType:", 2);
    objc_msgSend(v22, "setReturnsDistinctResults:", 1);
    v84[0] = CFSTR("ordinal");
    v84[1] = CFSTR("cfiStart");
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v84, 2));
    objc_msgSend(v22, "setPropertiesToFetch:", v23);
    v49 = v22;

    v24 = *(void **)(a1 + 32);
    v67 = 0;
    v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "executeFetchRequest:error:", v22, &v67));
    v8 = v67;
    if (v8)
    {
      v25 = BCReadingStatisticsLog();
      v54 = objc_claimAutoreleasedReturnValue(v25);
      if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
        sub_1B37D8();
    }
    else
    {
      v54 = objc_claimAutoreleasedReturnValue(+[NSMutableIndexSet indexSet](NSMutableIndexSet, "indexSet"));
      v65 = 0u;
      v66 = 0u;
      v63 = 0u;
      v64 = 0u;
      v26 = v48;
      v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v63, v83, 16);
      if (v27)
      {
        v28 = *(_QWORD *)v64;
        do
        {
          for (k = 0; k != v27; k = (char *)k + 1)
          {
            if (*(_QWORD *)v64 != v28)
              objc_enumerationMutation(v26);
            v30 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * (_QWORD)k);
            v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "objectForKeyedSubscript:", CFSTR("ordinal")));
            v32 = (char *)objc_msgSend(v31, "integerValue");

            v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "objectForKeyedSubscript:", CFSTR("cfiStart")));
            if (objc_msgSend(v33, "length"))
            {
              -[NSObject addIndex:](v54, "addIndex:", v32);
              if ((unint64_t)(v32 + 1) > v69[3])
                v34 = v32 + 1;
              else
                v34 = (char *)v69[3];
              v69[3] = (uint64_t)v34;
            }

          }
          v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v63, v83, 16);
        }
        while (v27);
      }

      objc_msgSend(*(id *)(a1 + 40), "setHaveTOCCFIIndices:", v54);
    }

  }
LABEL_41:
  v35 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsAppVersion")));
  v82 = CFSTR("appVersion");
  v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v82, 1));
  objc_msgSend(v35, "setPropertiesToFetch:", v36);

  v37 = *(void **)(a1 + 32);
  v62 = v8;
  v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "executeFetchRequest:error:", v35, &v62));
  v39 = v62;

  if (!v39 && objc_msgSend(v38, "count"))
  {
    v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_appVersion"));
    v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "objectAtIndexedSubscript:", 0));
    v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "appVersion"));
    objc_msgSend(v40, "isEqualToString:", v42);

  }
  v43 = *(_QWORD *)(a1 + 40);
  v44 = *(void **)(a1 + 48);
  v45 = *(NSObject **)(v43 + 16);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1E284;
  block[3] = &unk_28C310;
  v57 = v55;
  v58 = v43;
  v61 = &v68;
  v59 = v39;
  v60 = v44;
  v46 = v39;
  v47 = v55;
  dispatch_async(v45, block);

  _Block_object_dispose(&v68, 8);
}

void sub_1E238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_1E284(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "heatMap"));
  objc_msgSend(*(id *)(a1 + 32), "setMaximumCFICount:", objc_msgSend(v2, "maximumCFICount"));

  objc_msgSend(*(id *)(a1 + 32), "setLengthProvider:", *(_QWORD *)(a1 + 40));
  v3 = objc_msgSend(*(id *)(a1 + 32), "maximumCFICount");
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
  if ((unint64_t)v3 <= 2 * v4)
    v5 = 2 * v4;
  else
    v5 = (uint64_t)v3;
  objc_msgSend(*(id *)(a1 + 32), "setMaximumCFICount:", v5);
  objc_msgSend(*(id *)(a1 + 40), "setHeatMap:", *(_QWORD *)(a1 + 32));
  v6 = objc_retainBlock(*(id *)(a1 + 56));
  if (v6)
  {
    v7 = v6;
    (*((void (**)(id, _QWORD))v6 + 2))(v6, *(_QWORD *)(a1 + 48));
    v6 = v7;
  }

}

void sub_1E608(id *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  void *v14;
  double v15;
  double v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *j;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  NSObject *v42;
  id v43;
  void *v44;
  id *v45;
  void *v46;
  id v47;
  id obj;
  id v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  _BYTE v59[128];

  v45 = a1 + 5;
  v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_fetchRequestForTOCEntries"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v45, "executeFetchRequest:error:"));
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = 0u;
  obj = v2;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v54, v59, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v55;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v55 != v5)
          objc_enumerationMutation(obj);
        v7 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * (_QWORD)i);
        v8 = a1[6];
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "href"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v9));

        if (v10)
        {
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("readProportion")));
          objc_msgSend(v11, "doubleValue");
          v13 = v12;

          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "proportionRead"));
          objc_msgSend(v14, "doubleValue");
          v16 = v15;

          if (v13 > v16)
          {
            v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v13));
            objc_msgSend(v7, "setProportionRead:", v17);

            v18 = objc_opt_class(NSString);
            v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("assetVersion")));
            v20 = BUDynamicCast(v18, v19);
            v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

            if (v21)
              objc_msgSend(v7, "setAssetVersion:", v21);

          }
          v22 = a1[6];
          v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "href"));
          objc_msgSend(v22, "setObject:forKeyedSubscript:", 0, v23);

        }
      }
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v54, v59, 16);
    }
    while (v4);
  }
  v52 = 0u;
  v53 = 0u;
  v50 = 0u;
  v51 = 0u;
  v47 = a1[6];
  v24 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
  if (v24)
  {
    v25 = v24;
    v26 = *(_QWORD *)v51;
    do
    {
      for (j = 0; j != v25; j = (char *)j + 1)
      {
        if (*(_QWORD *)v51 != v26)
          objc_enumerationMutation(v47);
        v28 = *(_QWORD *)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)j);
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectForKeyedSubscript:", v28));
        v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("BCReadingStatsTOCEntry"), a1[5]));
        objc_msgSend(v30, "setHref:", v28);
        v31 = objc_opt_class(NSNumber);
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "objectForKeyedSubscript:", CFSTR("readProportion")));
        v33 = BUDynamicCast(v31, v32);
        v34 = (void *)objc_claimAutoreleasedReturnValue(v33);
        objc_msgSend(v30, "setProportionRead:", v34);

        v35 = objc_opt_class(NSString);
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "objectForKeyedSubscript:", CFSTR("assetVersion")));
        v37 = BUDynamicCast(v35, v36);
        v38 = (void *)objc_claimAutoreleasedReturnValue(v37);
        objc_msgSend(v30, "setAssetVersion:", v38);

      }
      v25 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
    }
    while (v25);
  }

  if (objc_msgSend(*v45, "hasChanges"))
  {
    v39 = *v45;
    v49 = 0;
    objc_msgSend(v39, "save:", &v49);
    v40 = v49;
    if (v40)
    {
      v41 = BCReadingStatisticsLog();
      v42 = objc_claimAutoreleasedReturnValue(v41);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
        sub_1B36C8();

    }
  }
  else
  {
    v40 = 0;
  }
  v43 = objc_retainBlock(a1[7]);
  v44 = v43;
  if (v43)
    (*((void (**)(id))v43 + 2))(v43);

}

void sub_1EB30(uint64_t a1)
{
  void *v2;
  void *v3;
  void (**v4)(id, void *);

  v4 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "heatMap"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "cfisWithMinimumCount:", *(double *)(a1 + 48)));
    v4[2](v4, v3);

  }
}

void sub_1ECB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1ECC8(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[4];
  id v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "heatMap"));
  v4 = *(_QWORD *)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "readingThreshold");
  objc_msgSend(v3, "updateWithCFISet:minimumCount:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "coalescedSave"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1ED88;
  v6[3] = &unk_28BF90;
  v7 = *(id *)(a1 + 48);
  objc_msgSend(v5, "signalWithCompletion:", v6);

}

void sub_1ED88(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_1EE38(uint64_t a1)
{
  void *v2;
  id v3;
  void (**v4)(id, id);

  v4 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "heatMap"));
    v3 = objc_msgSend(v2, "copy");
    v4[2](v4, v3);

  }
}

void sub_1F024(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTextNode")));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "executeFetchRequest:error:"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "sortedArrayUsingComparator:", &stru_28C3C8));
  v4 = objc_retainBlock(*(id *)(a1 + 40));
  v5 = v4;
  if (v4)
    (*((void (**)(id, void *))v4 + 2))(v4, v3);

}

int64_t sub_1F0C8(id a1, BCReadingStatsTextNode *a2, BCReadingStatsTextNode *a3)
{
  BCReadingStatsTextNode *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatsTextNode cachedCFI](a2, "cachedCFI"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatsTextNode cachedCFI](v4, "cachedCFI"));

  v7 = objc_msgSend(v5, "compareCFIHead:", v6);
  return (int64_t)v7;
}

void sub_1F1F4(id *a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_fetchRequestForTOCEntries"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "executeFetchRequest:error:"));
  v3 = objc_retainBlock(a1[6]);
  v4 = v3;
  if (v3)
    (*((void (**)(id, void *))v3 + 2))(v3, v2);

}

id sub_1F788(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setOrderedTOCEntryCFICache:", 0);
}

void sub_1F898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1F8B0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchRequestForTOCEntries"));
  objc_msgSend(v2, "setResultType:", 2);
  v8[0] = CFSTR("cfiStart");
  v8[1] = CFSTR("cfiEnd");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v8, 2));
  objc_msgSend(v2, "setPropertiesToFetch:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "executeFetchRequest:error:", v2, 0));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bu_arrayByInvokingBlock:", &stru_28C408));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

NSArray *__cdecl sub_1F9A4(id a1, NSDictionary *a2)
{
  NSDictionary *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  void *v13;
  id v15;
  id v16;
  _QWORD v17[2];

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKeyedSubscript:](v2, "objectForKeyedSubscript:", CFSTR("cfiStart")));
  if (v3)
  {
    v16 = 0;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI cfiWithString:error:](BCCFI, "cfiWithString:error:", v3, &v16));
    v5 = v16;
    if (v5)
    {
      v6 = BCReadingStatisticsLog();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1B39A4();

    }
  }
  else
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v5 = 0;
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKeyedSubscript:](v2, "objectForKeyedSubscript:", CFSTR("cfiEnd")));
  if (v8)
  {
    v15 = 0;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI cfiWithString:error:](BCCFI, "cfiWithString:error:", v8, &v15));
    v10 = v15;

    if (v10)
    {
      v11 = BCReadingStatisticsLog();
      v12 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1B3920();

    }
  }
  else
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
    v10 = v5;
  }
  v13 = 0;
  if (v4 && v9)
  {
    v17[0] = v4;
    v17[1] = v9;
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v17, 2));
  }

  return (NSArray *)v13;
}

void sub_1FCAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

int64_t sub_1FCC4(id a1, BCCFI *a2, NSArray *a3)
{
  BCCFI *v4;
  void *v5;
  void *v6;
  int64_t v7;

  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[NSArray objectAtIndexedSubscript:](a3, "objectAtIndexedSubscript:", 1));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  if (v5 == v6)
    v7 = -1;
  else
    v7 = -[BCCFI compareCFITail:](v4, "compareCFITail:", v5);

  return v7;
}

void sub_1FD48(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  v18 = a2;
  v8 = a3;
  v9 = objc_opt_class(BCCFI);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", 0));
  v11 = BUDynamicCast(v9, v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

  v13 = objc_opt_class(BCCFI);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", 1));

  v15 = BUDynamicCast(v13, v14);
  v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

  if (objc_msgSend(v18, "compareTailToHead:", v12) == (char *)&dword_0 + 1
    && (!v16 || objc_msgSend(v18, "compareHeadToTail:", v16) == (id)-1))
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tocEntriesRequiringProcessing"));
    objc_msgSend(v17, "addIndex:", a5);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }

}

void sub_1FFB4(id *a1)
{
  void *v2;
  id v3;
  void *v4;
  char *v5;
  __int128 v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *k;
  void *v17;
  id v18;
  void *v19;
  char *v20;
  void *v21;
  void *v22;
  double v23;
  double v24;
  void *v25;
  void *v26;
  void *v27;
  char *v28;
  char *v29;
  char *i;
  void *v31;
  unint64_t v32;
  char *j;
  void *v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  void *v40;
  void *v41;
  id v42;
  double v43;
  id v44;
  NSObject *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  unint64_t v52;
  id v53;
  void *v54;
  id v55;
  __int128 v56;
  id *v57;
  void *v58;
  void *v59;
  char *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  id v65;
  unint64_t v66;
  _BYTE v67[128];
  _QWORD v68[5];
  _QWORD v69[5];
  uint8_t buf[4];
  unint64_t v71;
  __int16 v72;
  id v73;
  __int16 v74;
  char *v75;
  __int16 v76;
  double v77;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "_fetchRequestForTOCEntries"));
  v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "executeFetchRequest:error:", v2, 0));
  v3 = objc_msgSend(a1[6], "count");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  if (v3)
  {
    v57 = a1 + 5;
    v66 = 0;
    v5 = (char *)objc_msgSend(a1[7], "firstIndex");
    if (v5 != (char *)0x7FFFFFFFFFFFFFFFLL)
    {
      v20 = v5;
      *(_QWORD *)&v6 = 134218752;
      v56 = v6;
      do
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v59, "objectAtIndexedSubscript:", v20, v56));
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "proportionRead"));
        objc_msgSend(v22, "doubleValue");
        v24 = v23;

        objc_msgSend(v21, "setProportionRead:", 0);
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "textNodes"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "allObjects"));
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "sortedArrayUsingComparator:", &stru_28C4D8));

        v28 = (char *)objc_msgSend(v27, "count");
        v60 = v20;
        if (v28)
        {
          v29 = v28;
          for (i = 0; i != v29; ++i)
          {
            v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "objectAtIndexedSubscript:", i));
            objc_msgSend(v31, "setReadingCount:", &off_2A93F8);

          }
          objc_msgSend(a1[4], "_slideIterateSortedArray:andArray:index1:index2:comparator:executing:", v27, a1[6], 0, &v66, &stru_28C518, &stru_28C558);
          v32 = 0;
          for (j = 0; j != v29; ++j)
          {
            v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "objectAtIndexedSubscript:", j));
            v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "readingCount"));
            objc_msgSend(v35, "doubleValue");
            v37 = v36;
            objc_msgSend(a1[4], "readingThreshold");
            v39 = v38;

            if (v37 > v39)
            {
              v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "characterCount"));
              v32 += (unint64_t)objc_msgSend(v40, "integerValue");

            }
          }
        }
        else
        {
          objc_msgSend(a1[4], "_slideIterateSortedArray:andArray:index1:index2:comparator:executing:", v27, a1[6], 0, &v66, &stru_28C518, &stru_28C558);
          v32 = 0;
        }
        v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "cachedCharacterCount"));
        v42 = objc_msgSend(v41, "unsignedIntegerValue");

        if (v42)
          v43 = (double)v32 / (double)(unint64_t)v42;
        else
          v43 = 0.0;
        v44 = BCReadingStatisticsLog();
        v45 = objc_claimAutoreleasedReturnValue(v44);
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEBUG))
        {
          v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "cachedCharacterCount"));
          v55 = objc_msgSend(v54, "unsignedIntegerValue");
          *(_DWORD *)buf = v56;
          v71 = v32;
          v72 = 2048;
          v73 = v55;
          v74 = 2048;
          v75 = v60 + 1;
          v76 = 2048;
          v77 = v43 * 100.0;
          _os_log_debug_impl(&dword_0, v45, OS_LOG_TYPE_DEBUG, "read %lu characters of %lu in chapter %lu, %.1lf%%", buf, 0x2Au);

        }
        v46 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v43));
        objc_msgSend(v21, "setProportionRead:", v46);

        if (llround(v24 * (double)(unint64_t)v42) != v32)
        {
          v68[0] = CFSTR("oldReadCharacterCount");
          v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:"));
          v69[0] = v58;
          v68[1] = CFSTR("newReadCharacterCount");
          v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v32));
          v69[1] = v47;
          v68[2] = CFSTR("oldReadProportion");
          v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v24));
          v69[2] = v48;
          v68[3] = CFSTR("newReadProportion");
          v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v43));
          v69[3] = v49;
          v68[4] = CFSTR("tocEntryHref");
          v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "href"));
          v69[4] = v50;
          v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v69, v68, 5));

          objc_msgSend(v4, "addObject:", v51);
        }
        v52 = v66;
        v53 = objc_msgSend(a1[6], "count");

        if (v52 >= (unint64_t)v53)
          break;
        v20 = (char *)objc_msgSend(a1[7], "indexGreaterThanIndex:", v60);
      }
      while (v20 != (char *)0x7FFFFFFFFFFFFFFFLL);
    }
    if (objc_msgSend(*v57, "hasChanges"))
    {
      v7 = *v57;
      v65 = 0;
      objc_msgSend(v7, "save:", &v65);
      v8 = v65;
      if (v8)
      {
        v9 = v8;
        v10 = BCReadingStatisticsLog();
        v11 = objc_claimAutoreleasedReturnValue(v10);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1B36C8();

      }
    }
  }
  objc_msgSend(a1[7], "removeAllIndexes");
  if (objc_msgSend(v4, "count"))
  {
    v63 = 0u;
    v64 = 0u;
    v61 = 0u;
    v62 = 0u;
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "observers"));
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v61, v67, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v62;
      do
      {
        for (k = 0; k != v14; k = (char *)k + 1)
        {
          if (*(_QWORD *)v62 != v15)
            objc_enumerationMutation(v12);
          v17 = *(void **)(*((_QWORD *)&v61 + 1) + 8 * (_QWORD)k);
          if ((objc_opt_respondsToSelector(v17, "readingStatisticsDidChangeOnController:changes:") & 1) != 0)
            objc_msgSend(v17, "readingStatisticsDidChangeOnController:changes:", a1[4], v4);
        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v61, v67, 16);
      }
      while (v14);
    }

  }
  v18 = objc_retainBlock(a1[8]);
  v19 = v18;
  if (v18)
    (*((void (**)(id))v18 + 2))(v18);

}

int64_t sub_205E0(id a1, BCReadingStatsTextNode *a2, BCReadingStatsTextNode *a3)
{
  BCReadingStatsTextNode *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatsTextNode cachedCFI](a2, "cachedCFI"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatsTextNode cachedCFI](v4, "cachedCFI"));

  v7 = objc_msgSend(v5, "compareCFIHead:", v6);
  return (int64_t)v7;
}

int64_t sub_2064C(id a1, BCReadingStatsTextNode *a2, NSDictionary *a3)
{
  NSDictionary *v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatsTextNode cachedCFI](a2, "cachedCFI"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKeyedSubscript:](v4, "objectForKeyedSubscript:", CFSTR("cfi")));

  v7 = objc_msgSend(v5, "compareCFITail:", v6);
  return (int64_t)v7;
}

void sub_206C4(id a1, BCReadingStatsTextNode *a2, NSDictionary *a3, unint64_t a4, unint64_t a5)
{
  NSDictionary *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  void *v17;
  BCReadingStatsTextNode *v18;

  v18 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatsTextNode cachedCFI](v18, "cachedCFI"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("cfi")));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "intersectWithCFI:", v8));
  if (objc_msgSend(v9, "isRange"))
  {
    v10 = objc_msgSend(v7, "characterCountIfComputable");
    v11 = (double)(unint64_t)objc_msgSend(v9, "characterCountIfComputable") / (double)(unint64_t)v10;
    v12 = (void *)objc_claimAutoreleasedReturnValue(-[NSDictionary objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("count")));
    objc_msgSend(v12, "doubleValue");
    v14 = v13;

    v15 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatsTextNode readingCount](v18, "readingCount"));
    objc_msgSend(v15, "doubleValue");
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v16 + v11 * v14));
    -[BCReadingStatsTextNode setReadingCount:](v18, "setReadingCount:", v17);

  }
}

void sub_208A0(uint64_t a1)
{
  _UNKNOWN **v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  NSMutableDictionary *v12;
  NSMutableDictionary *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  NSMutableDictionary *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  NSObject *v30;
  void (**v31)(_QWORD);
  void (**v32)(_QWORD);
  char *v33;
  void *v34;
  char *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  char *v49;
  BOOL v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  _UNKNOWN **v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  NSObject *v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  uint64_t v72;
  void *i;
  id v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  NSObject *v79;
  void *v80;
  id v81;
  NSObject *v82;
  id v83;
  void *v84;
  id v85;
  uint64_t v86;
  void *j;
  void *v88;
  void *v89;
  id v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  void *k;
  void *v95;
  void *v96;
  void *v97;
  id v98;
  NSObject *v99;
  void *v100;
  void *v101;
  void *v102;
  NSMutableDictionary *v103;
  NSMutableDictionary *v104;
  uint64_t v105;
  void *v106;
  unint64_t v107;
  id v108;
  uint64_t v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  id obj;
  id obja;
  id v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  id v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  id v131;
  id v132[2];
  id v133;
  _BYTE v134[128];
  uint8_t v135[128];
  uint8_t buf[4];
  void *v137;
  __int16 v138;
  void *v139;
  _BYTE v140[128];
  const __CFString *v141;
  id v142;

  v2 = CATransaction_ptr;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTextNode")));
  v108 = objc_msgSend(objc_alloc((Class)NSSortDescriptor), "initWithKey:ascending:", CFSTR("ordinal"), 0);
  v142 = v108;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v142, 1));
  objc_msgSend(v3, "setSortDescriptors:", v4);

  objc_msgSend(v3, "setResultType:", 2);
  objc_msgSend(v3, "setReturnsDistinctResults:", 1);
  v141 = CFSTR("ordinal");
  v5 = v3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v141, 1));
  objc_msgSend(v3, "setPropertiesToFetch:", v6);

  objc_msgSend(v3, "setFetchLimit:", 1);
  objc_msgSend(v3, "setFetchOffset:", 0);
  v7 = *(void **)(a1 + 32);
  v133 = 0;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "executeFetchRequest:error:", v3, &v133));
  v9 = v133;
  if (v9)
  {
    v10 = BCReadingStatisticsLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1B3B60();

    goto LABEL_5;
  }
  if (!objc_msgSend(v8, "count"))
  {
LABEL_5:
    v12 = (NSMutableDictionary *)objc_retainBlock(*(id *)(a1 + 48));
    v13 = v12;
    if (v12)
      ((void (*)(NSMutableDictionary *))v12[2].super.super.isa)(v12);
    goto LABEL_92;
  }
  v102 = v5;
  v14 = objc_opt_class(NSNumber);
  v15 = objc_opt_class(NSDictionary);
  v101 = v8;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "firstObject"));
  v17 = BUDynamicCast(v15, v16);
  v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectForKeyedSubscript:", CFSTR("ordinal")));
  v20 = BUDynamicCast(v14, v19);
  v21 = (void *)objc_claimAutoreleasedReturnValue(v20);
  v22 = objc_msgSend(v21, "unsignedIntegerValue");

  v13 = objc_opt_new(NSMutableDictionary);
  v23 = objc_opt_new(NSMutableDictionary);
  v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_fetchRequestForTOCEntries"));
  v25 = *(void **)(a1 + 32);
  v132[1] = 0;
  v100 = (void *)v24;
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "executeFetchRequest:error:"));
  v27 = 0;
  if (v27)
  {
    v9 = v27;
    v28 = v26;
    v29 = BCReadingStatisticsLog();
    v30 = objc_claimAutoreleasedReturnValue(v29);
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      sub_1B3B00();

    v31 = (void (**)(_QWORD))objc_retainBlock(*(id *)(a1 + 48));
    v32 = v31;
    v5 = v102;
    goto LABEL_89;
  }
  v107 = (unint64_t)v22;
  v33 = (char *)objc_msgSend(v26, "count");
  v104 = v13;
  v105 = a1;
  v103 = v23;
  v106 = v26;
  if (objc_msgSend(v26, "count") && v33)
  {
    v34 = v26;
    v35 = 0;
    while (1)
    {
      v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "objectAtIndexedSubscript:", v35));
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "cfiStart"));
      if (v37)
        break;
      v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "cfiEnd"));

      if (v38)
        goto LABEL_18;
      ++v35;
LABEL_27:

      if (v35 == v33)
        goto LABEL_30;
    }

LABEL_18:
    if (++v35 < v33)
    {
      v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "objectAtIndexedSubscript:", v35));
      v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "cfiStart"));
      objc_msgSend(v36, "setCfiEnd:", v40);

    }
    v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "ordinal"));
    v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "intraOrdinalOrder"));
    v43 = objc_msgSend(v42, "integerValue");

    if (!v43)
      -[NSMutableDictionary setObject:forKeyedSubscript:](v13, "setObject:forKeyedSubscript:", v36, v41);
    v44 = objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v23, "objectForKeyedSubscript:", v41));
    if (!v44)
      goto LABEL_25;
    v45 = (void *)v44;
    v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v36, "intraOrdinalOrder"));
    v47 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v23, "objectForKeyedSubscript:", v41));
    v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v47, "intraOrdinalOrder"));
    v49 = (char *)objc_msgSend(v46, "compare:", v48);

    a1 = v105;
    v50 = v49 == (_BYTE *)&dword_0 + 1;
    v23 = v103;
    v13 = v104;
    if (v50)
LABEL_25:
      -[NSMutableDictionary setObject:forKeyedSubscript:](v23, "setObject:forKeyedSubscript:", v36, v41);

    v34 = v106;
    goto LABEL_27;
  }
LABEL_30:
  v113 = 0;
  v51 = 0;
  v52 = v107;
  while (1)
  {
    v53 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_predicateForCharacterCountsWithOrdinal:", v51));
    v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2[56], "fetchRequestWithEntityName:", CFSTR("BCReadingStatsTextNode")));
    v111 = (void *)v53;
    objc_msgSend(v54, "setPredicate:", v53);
    v55 = *(void **)(a1 + 32);
    v132[0] = v113;
    v110 = v54;
    v112 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v55, "executeFetchRequest:error:", v54, v132));
    v56 = v132[0];

    if (v56)
      break;
    v57 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v51));
    v58 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v13, "objectForKeyedSubscript:", v57));

    if (v51 - 1 < 0)
    {
      v114 = 0;
    }
    else
    {
      v59 = v2;
      v60 = v51;
      while (1)
      {
        v61 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", --v60));
        v62 = objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v23, "objectForKeyedSubscript:", v61));

        if (v62)
          break;
        if (v60 <= 0)
        {
          v114 = 0;
          goto LABEL_39;
        }
      }
      v114 = (void *)v62;
LABEL_39:
      v52 = v107;
      v2 = v59;
    }
    v109 = v51;
    v63 = v58;
    if (!v58)
    {
      obj = 0;
LABEL_45:
      v129 = 0u;
      v130 = 0u;
      v127 = 0u;
      v128 = 0u;
      v67 = v112;
      v69 = -[NSObject countByEnumeratingWithState:objects:count:](v67, "countByEnumeratingWithState:objects:count:", &v127, v140, 16);
      if (v69)
      {
        v70 = v69;
        v71 = 0;
        v72 = *(_QWORD *)v128;
        do
        {
          for (i = 0; i != v70; i = (char *)i + 1)
          {
            if (*(_QWORD *)v128 != v72)
              objc_enumerationMutation(v67);
            v74 = *(id *)(*((_QWORD *)&v127 + 1) + 8 * (_QWORD)i);
            v75 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v74, "cfi"));
            v126 = 0;
            v76 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI cfiWithString:error:](BCCFI, "cfiWithString:error:", v75, &v126));
            v77 = v126;

            v71 = v77;
            if (v77)
            {
              v78 = BCReadingStatisticsLog();
              v79 = objc_claimAutoreleasedReturnValue(v78);
              if (os_log_type_enabled(v79, OS_LOG_TYPE_ERROR))
              {
                v80 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v74, "cfi"));
                *(_DWORD *)buf = 138412546;
                v137 = v80;
                v138 = 2112;
                v139 = v71;
                _os_log_error_impl(&dword_0, v79, OS_LOG_TYPE_ERROR, "_connectOrdinalsWithCompletion Unable form CFI with string %@.  Error=%@", buf, 0x16u);

              }
            }
            else if (!v58 || objc_msgSend(v76, "compareCFIHead:", obj) == (id)-1)
            {
              objc_msgSend(v74, "setTocEntry:", v114);
            }

          }
          v70 = -[NSObject countByEnumeratingWithState:objects:count:](v67, "countByEnumeratingWithState:objects:count:", &v127, v140, 16);
        }
        while (v70);
        v113 = v71;
        v13 = v104;
        a1 = v105;
        v23 = v103;
        v2 = CATransaction_ptr;
        v52 = v107;
        v63 = v58;
      }
      else
      {
        v113 = 0;
        v52 = v107;
      }
      goto LABEL_61;
    }
    v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "cfiStart"));
    v131 = 0;
    obj = (id)objc_claimAutoreleasedReturnValue(+[BCCFI cfiWithString:error:](BCCFI, "cfiWithString:error:", v64, &v131));
    v65 = v131;

    v113 = v65;
    if (!v65)
      goto LABEL_45;
    v66 = BCReadingStatisticsLog();
    v67 = objc_claimAutoreleasedReturnValue(v66);
    if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
    {
      v68 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "cfiStart"));
      *(_DWORD *)buf = 138412546;
      v137 = v68;
      v138 = 2112;
      v139 = v113;
      _os_log_error_impl(&dword_0, v67, OS_LOG_TYPE_ERROR, "_connectOrdinalsWithCompletion Unable form CFI with string %@.  Error=%@", buf, 0x16u);

    }
LABEL_61:

    v51 = v109 + 1;
    if (v109 + 1 > v52)
      goto LABEL_66;
  }
  v81 = BCReadingStatisticsLog();
  v82 = objc_claimAutoreleasedReturnValue(v81);
  if (os_log_type_enabled(v82, OS_LOG_TYPE_ERROR))
    sub_1B3A88((uint64_t)v56, v51, v82);

  v113 = v56;
LABEL_66:
  v124 = 0u;
  v125 = 0u;
  v122 = 0u;
  v123 = 0u;
  obja = v106;
  v83 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v122, v135, 16);
  v84 = v113;
  if (v83)
  {
    v85 = v83;
    v86 = *(_QWORD *)v123;
    do
    {
      for (j = 0; j != v85; j = (char *)j + 1)
      {
        if (*(_QWORD *)v123 != v86)
          objc_enumerationMutation(obja);
        v88 = *(void **)(*((_QWORD *)&v122 + 1) + 8 * (_QWORD)j);
        v118 = 0u;
        v119 = 0u;
        v120 = 0u;
        v121 = 0u;
        v89 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v88, "textNodes"));
        v90 = objc_msgSend(v89, "countByEnumeratingWithState:objects:count:", &v118, v134, 16);
        if (v90)
        {
          v91 = v90;
          v92 = 0;
          v93 = *(_QWORD *)v119;
          do
          {
            for (k = 0; k != v91; k = (char *)k + 1)
            {
              if (*(_QWORD *)v119 != v93)
                objc_enumerationMutation(v89);
              v95 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v118 + 1)
                                                                                 + 8 * (_QWORD)k), "characterCount"));
              v92 += (uint64_t)objc_msgSend(v95, "unsignedIntegerValue");

            }
            v91 = objc_msgSend(v89, "countByEnumeratingWithState:objects:count:", &v118, v134, 16);
          }
          while (v91);
        }
        else
        {
          v92 = 0;
        }

        v96 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v92));
        objc_msgSend(v88, "setCachedCharacterCount:", v96);

        v84 = v113;
      }
      v85 = objc_msgSend(obja, "countByEnumeratingWithState:objects:count:", &v122, v135, 16);
    }
    while (v85);
  }

  if (objc_msgSend(*(id *)(v105 + 32), "hasChanges"))
  {
    v97 = *(void **)(v105 + 32);
    v117 = v84;
    objc_msgSend(v97, "save:", &v117);
    v9 = v117;

    v5 = v102;
    v23 = v103;
    v13 = v104;
    v28 = v106;
    if (v9)
    {
      v98 = BCReadingStatisticsLog();
      v99 = objc_claimAutoreleasedReturnValue(v98);
      if (os_log_type_enabled(v99, OS_LOG_TYPE_ERROR))
        sub_1B3A28();

    }
  }
  else
  {
    v9 = v84;
    v5 = v102;
    v23 = v103;
    v13 = v104;
    v28 = v106;
  }
  v31 = (void (**)(_QWORD))objc_retainBlock(*(id *)(v105 + 48));
  v32 = v31;
LABEL_89:
  v8 = v101;
  if (v31)
    v32[2](v32);

LABEL_92:
}

void sub_21738(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_2174C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_2176C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t sub_217BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_217C8(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_21DE8(id a1)
{
  BCProgressKitController *v1;
  void *v2;

  v1 = objc_opt_new(BCProgressKitController);
  v2 = (void *)qword_30D528;
  qword_30D528 = (uint64_t)v1;

}

void sub_22164(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookIdentifierFromAssetID:", *(_QWORD *)(a1 + 40)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:"));
  if (v2)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "removeContext:", v2);
    objc_msgSend(*(id *)(a1 + 32), "_saveChanges");
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "removeAllObjects");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "removeAllObjects");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "removeAllObjects");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "removeAllObjects");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "removeAllObjects");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "removeAllObjects");
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 48));

}

void sub_222EC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;

  v3 = a2;
  if (v3)
  {
    v4 = BCProgressKitLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      sub_1B3BEC();

  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_22728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2274C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_2275C(uint64_t a1)
{

}

void sub_22764(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v5 = a3;
  if (v5)
  {
    v6 = BCProgressKitLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1B3C78();

  }
  else
  {
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "firstObject"));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

id sub_22E90(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;

  v5 = *(void **)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = a3;
  objc_msgSend(a2, "doubleValue");
  v9 = v8;
  objc_msgSend(v7, "doubleValue");
  v11 = v10;

  objc_msgSend(v5, "_updateContext:withScore:maxScore:", v6, v9, v11);
  return objc_msgSend(*(id *)(a1 + 32), "_resignActiveContext");
}

void sub_231F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_23208(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v8;
  id v9;

  v8 = a2;
  if (*(_QWORD *)(a1 + 32) == a3)
  {
    v9 = v8;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    v8 = v9;
    *a4 = 1;
  }

}

void sub_2333C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSObject *v18;
  _BOOL4 v19;
  void *v20;
  unsigned __int8 v21;
  id v22;
  void *v23;
  unsigned __int8 v24;
  void *v25;
  void *v26;
  void *v27;
  dispatch_semaphore_t v28;
  void *v29;
  NSObject *v30;
  dispatch_time_t v31;
  id v32;
  NSObject *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *i;
  void *v38;
  void *v39;
  id v40;
  NSObject *v41;
  id v42;
  void *v43;
  id obj;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint8_t v58;
  _BYTE v59[15];
  _QWORD v60[4];
  NSObject *v61;
  __int128 *p_buf;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint8_t v67[128];
  __int128 buf;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  void (*v71)(uint64_t);
  id v72;
  _BYTE v73[128];

  v2 = BCProgressKitLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1B3DEC(a1, v3, v4, v5, v6, v7, v8, v9);

  if (objc_msgSend(*(id *)(a1 + 40), "_isBookOpen:", *(_QWORD *)(a1 + 32)))
  {
    v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_getOpenBookContext:", *(_QWORD *)(a1 + 32)));
    if (v45)
    {
      v65 = 0u;
      v66 = 0u;
      v63 = 0u;
      v64 = 0u;
      obj = *(id *)(a1 + 48);
      v47 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v73, 16);
      if (v47)
      {
        v46 = *(_QWORD *)v64;
        do
        {
          v10 = 0;
          do
          {
            if (*(_QWORD *)v64 != v46)
            {
              v11 = v10;
              objc_enumerationMutation(obj);
              v10 = v11;
            }
            v48 = v10;
            v12 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * v10);
            v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("uniqueID")));
            v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_chapterIdentifierFromAssetID:chapterID:", *(_QWORD *)(a1 + 32), v49));
            v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("title")));
            v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("displayOrder")));
            v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_contextWithID:", v52));
            v14 = *(void **)(a1 + 40);
            v15 = *(_QWORD *)(a1 + 32);
            v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("cfi")));
            v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "_universalLinkFromAssetID:cfi:", v15, v16));

            v17 = BCProgressKitLog();
            v18 = objc_claimAutoreleasedReturnValue(v17);
            v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG);
            if (v13)
            {
              if (v19)
              {
                LODWORD(buf) = 138412290;
                *(_QWORD *)((char *)&buf + 4) = v49;
                _os_log_debug_impl(&dword_0, v18, OS_LOG_TYPE_DEBUG, "buildContextTree: updating chapter %@", (uint8_t *)&buf, 0xCu);
              }

              v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "title"));
              v21 = objc_msgSend(v20, "isEqualToString:", v51);

              if ((v21 & 1) == 0)
                objc_msgSend(v13, "setTitle:", v51);
              v22 = objc_msgSend(v13, "displayOrder");
              if (v22 != objc_msgSend(v50, "integerValue"))
                objc_msgSend(v13, "setDisplayOrder:", objc_msgSend(v50, "integerValue"));
              if (v53)
              {
                v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "universalLinkURL"));
                v24 = objc_msgSend(v53, "isEqual:", v23);

                if ((v24 & 1) == 0)
                  objc_msgSend(v13, "setUniversalLinkURL:", v53);
              }
            }
            else
            {
              if (v19)
              {
                LODWORD(buf) = 138412290;
                *(_QWORD *)((char *)&buf + 4) = v49;
                _os_log_debug_impl(&dword_0, v18, OS_LOG_TYPE_DEBUG, "buildContextTree: creating chapter %@", (uint8_t *)&buf, 0xCu);
              }

              v13 = objc_msgSend(objc_alloc((Class)CLSContext), "initWithType:identifier:title:", 2, v52, v51);
              v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "contentStoreIdentifier"));
              objc_msgSend(v13, "setContentStoreIdentifier:", v25);

              objc_msgSend(v13, "setDisplayOrder:", objc_msgSend(v50, "integerValue"));
              objc_msgSend(v13, "setUniversalLinkURL:", v53);
              v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "standardProgressCapability"));
              objc_msgSend(v13, "addProgressReportingCapabilities:", v26);

              objc_msgSend(v45, "addChildContext:", v13);
            }
            v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K = %@"), CLSPredicateKeyPathParent, v13));
            *(_QWORD *)&buf = 0;
            *((_QWORD *)&buf + 1) = &buf;
            v69 = 0x3032000000;
            v70 = sub_2274C;
            v71 = sub_2275C;
            v72 = 0;
            v28 = dispatch_semaphore_create(0);
            v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "progressKitDataStore"));
            v60[0] = _NSConcreteStackBlock;
            v60[1] = 3221225472;
            v60[2] = sub_23A0C;
            v60[3] = &unk_28C640;
            p_buf = &buf;
            v30 = v28;
            v61 = v30;
            objc_msgSend(v29, "contextsMatchingPredicate:completion:", v27, v60);

            v31 = dispatch_time(0, 1000000000);
            if (dispatch_semaphore_wait(v30, v31))
            {
              v32 = BCProgressKitLog();
              v33 = objc_claimAutoreleasedReturnValue(v32);
              if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
                sub_1B3DB0(&v58, v59, v33);

            }
            if (objc_msgSend(*(id *)(*((_QWORD *)&buf + 1) + 40), "count"))
            {
              v56 = 0u;
              v57 = 0u;
              v54 = 0u;
              v55 = 0u;
              v34 = *(id *)(*((_QWORD *)&buf + 1) + 40);
              v35 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v54, v67, 16);
              if (v35)
              {
                v36 = *(_QWORD *)v55;
                do
                {
                  for (i = 0; i != v35; i = (char *)i + 1)
                  {
                    if (*(_QWORD *)v55 != v36)
                      objc_enumerationMutation(v34);
                    v38 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * (_QWORD)i);
                    if (objc_msgSend(v38, "type") == (char *)&dword_0 + 3)
                    {
                      v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "progressKitDataStore"));
                      objc_msgSend(v39, "removeContext:", v38);

                    }
                  }
                  v35 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v54, v67, 16);
                }
                while (v35);
              }

            }
            _Block_object_dispose(&buf, 8);

            v10 = v48 + 1;
          }
          while ((id)(v48 + 1) != v47);
          v47 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v63, v73, 16);
        }
        while (v47);
      }

      objc_msgSend(*(id *)(a1 + 40), "_saveChanges");
    }
    else
    {
      v40 = BCProgressKitLog();
      v41 = objc_claimAutoreleasedReturnValue(v40);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
        sub_1B3D84();

    }
  }
  v42 = objc_retainBlock(*(id *)(a1 + 56));
  v43 = v42;
  if (v42)
    (*((void (**)(id, _QWORD))v42 + 2))(v42, 0);

}

void sub_239D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a65;

  _Block_object_dispose(&a65, 8);
  _Unwind_Resume(a1);
}

void sub_23A0C(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_23B20(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookIdentifierFromAssetID:", *(_QWORD *)(a1 + 40)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:"));
  if (!v2)
  {
    v3 = objc_msgSend(objc_alloc((Class)CLSContext), "initWithType:identifier:title:", 11, v9, *(_QWORD *)(a1 + 48));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "mainAppContext"));
    objc_msgSend(v4, "addChildContext:", v3);

    objc_msgSend(v3, "setContentStoreIdentifier:", *(_QWORD *)(a1 + 40));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL bu_urlWithAssetID:](NSURL, "bu_urlWithAssetID:", *(_QWORD *)(a1 + 40)));
    objc_msgSend(v3, "setUniversalLinkURL:", v5);

    objc_msgSend(*(id *)(a1 + 32), "_saveChanges");
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v9));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardProgressCapability"));
    objc_msgSend(v2, "addProgressReportingCapabilities:", v6);

  }
  v7 = objc_retainBlock(*(id *)(a1 + 56));
  v8 = v7;
  if (v7)
    (*((void (**)(id, void *, _QWORD))v7 + 2))(v7, v2, 0);

}

void sub_23CD8(uint64_t a1)
{
  void *v2;
  void (**v3)(id, void *);

  v3 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 40));
  if (v3)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "activeContext"));
    v3[2](v3, v2);

  }
}

void sub_23E80(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BCProgressKitProgressInfo *v17;
  void *v18;
  BCProgressKitProgressInfo *v19;
  void *v20;
  id v21;
  NSObject *v22;
  id v23;
  void *v24;

  v2 = (_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookIdentifierFromAssetID:", *(_QWORD *)(a1 + 40)));
  if ((objc_msgSend((id)*(v2 - 1), "_isBookOpen:", *v2) & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v3));
    if (v5)
      goto LABEL_7;
    v6 = BCProgressKitLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      sub_1B3EB4();

    v8 = objc_msgSend(objc_alloc((Class)CLSContext), "initWithType:identifier:title:", 11, v3, *(_QWORD *)(a1 + 48));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "mainAppContext"));
    objc_msgSend(v9, "addChildContext:", v8);

    objc_msgSend(v8, "setContentStoreIdentifier:", *(_QWORD *)(a1 + 56));
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL bu_urlWithAssetID:](NSURL, "bu_urlWithAssetID:", *(_QWORD *)(a1 + 40)));
    objc_msgSend(v8, "setUniversalLinkURL:", v10);

    objc_msgSend(v8, "setThumbnail:", objc_msgSend(*(id *)(a1 + 64), "CGImage"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardProgressCapability"));
    objc_msgSend(v8, "addProgressReportingCapabilities:", v11);

    objc_msgSend(*(id *)(a1 + 32), "_saveChanges");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v3));

    if (v5)
    {
LABEL_7:
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "title"));
      v13 = objc_msgSend(v12, "isEqualToString:", *(_QWORD *)(a1 + 48));

      if ((v13 & 1) == 0)
        objc_msgSend(v5, "setTitle:", *(_QWORD *)(a1 + 48));
      objc_msgSend(v5, "setThumbnail:", objc_msgSend(*(id *)(a1 + 64), "CGImage"));
      v14 = *(_QWORD *)(a1 + 80);
      if (v14 == 0x7FFFFFFFFFFFFFFFLL)
        v15 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v15 = 0;
      if (v14 == 0x7FFFFFFFFFFFFFFFLL)
        v16 = 0;
      else
        v16 = *(_QWORD *)(a1 + 80);
      v17 = [BCProgressKitProgressInfo alloc];
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "identifier"));
      v19 = -[BCProgressKitProgressInfo initWithIdentifier:pageRange:](v17, "initWithIdentifier:pageRange:", v18, v15, v16);

      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "openBooks"));
      objc_msgSend(v20, "setObject:forKey:", v19, *(_QWORD *)(a1 + 40));

      objc_msgSend(*(id *)(a1 + 32), "_becomeActiveOnContext:", v5);
      objc_msgSend(*(id *)(a1 + 32), "_saveChanges");

      v4 = v5;
    }
    else
    {
      v4 = 0;
    }
    v21 = BCProgressKitLog();
    v22 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
      sub_1B3E54();

  }
  v23 = objc_retainBlock(*(id *)(a1 + 72));
  v24 = v23;
  if (v23)
    (*((void (**)(id, void *))v23 + 2))(v23, v4);

}

void sub_24250(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  NSObject *v29;
  id v30;
  void *v31;
  id v32;

  v2 = (_QWORD *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40)))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getOpenBookContext:", *(_QWORD *)(a1 + 40)));
    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_updateCurrentChapterProgressForBook:", *(_QWORD *)(a1 + 40)));
      objc_msgSend(*(id *)(a1 + 32), "_resignActiveContext");
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readingStatisticsControllers"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

      if (v6)
      {
        objc_msgSend(v6, "removeObserver:", *(_QWORD *)(a1 + 32));
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readingStatisticsControllers"));
        objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      }
      objc_msgSend(*(id *)(a1 + 32), "_saveChanges");

    }
    else
    {
      v9 = BCProgressKitLog();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1B3FA0();

      v4 = 0;
    }
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeChapters"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

    if (v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getActiveChapterContext:", *(_QWORD *)(a1 + 40)));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "currentActivity"));
      objc_msgSend(v14, "stop");

      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeChapters"));
      objc_msgSend(v15, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    }
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeSections"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

    if (v17)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getActiveSectionContext:", *(_QWORD *)(a1 + 40)));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "currentActivity"));
      objc_msgSend(v19, "stop");

      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeSections"));
      objc_msgSend(v20, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    }
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeWidgets"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

    if (v22)
    {
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getActiveWidgetContext:", *(_QWORD *)(a1 + 40)));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "currentActivity"));
      objc_msgSend(v24, "stop");

      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeWidgets"));
      objc_msgSend(v25, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    }
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeTrackingProviders"));
    objc_msgSend(v26, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "openBooks"));
    objc_msgSend(v27, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    if (v4)
    {
      v28 = BCProgressKitLog();
      v29 = objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        sub_1B3F2C(v2, (uint64_t)v4, v29);

    }
    v30 = objc_retainBlock(*(id *)(a1 + 48));
    v31 = v30;
    if (v30)
      (*((void (**)(id, void *))v30 + 2))(v30, v4);

  }
  else
  {
    v8 = objc_retainBlock(*(id *)(a1 + 48));
    if (v8)
    {
      v32 = v8;
      (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);
      v8 = v32;
    }

  }
}

void sub_2462C(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  NSObject *v6;
  dispatch_time_t v7;
  id v8;
  NSObject *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  void *v19;
  id v20;
  NSObject *v21;
  id v22;
  void *v23;
  id v24;
  _QWORD v25[4];
  NSObject *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t);
  id v40;

  v2 = (_QWORD *)(a1 + 40);
  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40)))
  {
    v35 = 0;
    v36 = &v35;
    v37 = 0x3032000000;
    v38 = sub_2274C;
    v39 = sub_2275C;
    v40 = 0;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getOpenBookContext:", *(_QWORD *)(a1 + 40)));
    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readingStatisticsControllers"));
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", *v2));

      if (v5)
      {
        v29 = 0;
        v30 = &v29;
        v31 = 0x3032000000;
        v32 = sub_2274C;
        v33 = sub_2275C;
        v34 = 0;
        v25[0] = _NSConcreteStackBlock;
        v25[1] = 3221225472;
        v25[2] = sub_249D0;
        v25[3] = &unk_28C6E0;
        v27 = &v35;
        v28 = &v29;
        v6 = dispatch_semaphore_create(0);
        v26 = v6;
        -[NSObject bookStatisticsWithCompletion:](v5, "bookStatisticsWithCompletion:", v25);
        v7 = dispatch_time(0, 1000000000);
        if (dispatch_semaphore_wait(v6, v7))
        {
          v8 = BCProgressKitLog();
          v9 = objc_claimAutoreleasedReturnValue(v8);
          if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
            sub_1B4090();

        }
        if (!v36[5])
        {
          v10 = *(void **)(a1 + 32);
          objc_msgSend((id)v30[5], "doubleValue");
          objc_msgSend(v10, "_updateContext:withProgress:", v3);
        }

        _Block_object_dispose(&v29, 8);
      }
      else
      {
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "openBooks"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "objectForKeyedSubscript:", *v2));

        objc_msgSend(v14, "setCurrentPage:", *(_QWORD *)(a1 + 56));
        if (objc_msgSend(v14, "isProgressValid"))
        {
          v15 = *(void **)(a1 + 32);
          objc_msgSend(v14, "progress");
          objc_msgSend(v15, "_updateContext:withProgress:", v3);
        }
        else
        {
          v16 = BCProgressKitLog();
          v17 = objc_claimAutoreleasedReturnValue(v16);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            sub_1B4064();

        }
      }
      if (v36[5]
        || (v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_updateCurrentChapterProgressForBook:", *(_QWORD *)(a1 + 40))),
            v19 = (void *)v36[5],
            v36[5] = v18,
            v19,
            v36[5]))
      {
        v20 = BCProgressKitLog();
        v21 = objc_claimAutoreleasedReturnValue(v20);
        if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
          sub_1B3FF8();

      }
    }
    else
    {
      v12 = BCProgressKitLog();
      v5 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1B3FCC();
    }

    v22 = objc_retainBlock(*(id *)(a1 + 48));
    v23 = v22;
    if (v22)
      (*((void (**)(id, uint64_t))v22 + 2))(v22, v36[5]);

    _Block_object_dispose(&v35, 8);
  }
  else
  {
    v11 = objc_retainBlock(*(id *)(a1 + 48));
    if (v11)
    {
      v24 = v11;
      (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
      v11 = v24;
    }

  }
}

void sub_24984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_249D0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a3);
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("readProportion")));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_24BB4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  BCProgressKitProgressInfo *v18;
  void *v19;
  BCProgressKitProgressInfo *v20;
  void *v21;
  id v22;
  NSObject *v23;
  id v24;
  void *v25;
  id v26;

  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40)))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_chapterIdentifierFromAssetID:chapterID:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getActiveChapterContext:", *(_QWORD *)(a1 + 40)));
    v4 = v3;
    if (v3)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "identifier"));
      v6 = objc_msgSend(v5, "isEqualToString:", v2);

      if ((v6 & 1) != 0)
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeChapters"));
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

        objc_msgSend(v8, "setCurrentPage:", *(_QWORD *)(a1 + 88));
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_updateCurrentChapterProgressForBook:", *(_QWORD *)(a1 + 40)));

        if (!v9)
          goto LABEL_24;
        goto LABEL_21;
      }
    }
    v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v2));
    if (v11)
    {
      if (!v4)
      {
LABEL_19:
        objc_msgSend(*(id *)(a1 + 32), "_deactivateCurrentWidget:", *(_QWORD *)(a1 + 40));
        objc_msgSend(*(id *)(a1 + 32), "_becomeActiveOnContext:", v11);
        v18 = [BCProgressKitProgressInfo alloc];
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "identifier"));
        v20 = -[BCProgressKitProgressInfo initWithIdentifier:pageRange:](v18, "initWithIdentifier:pageRange:", v19, *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));

        -[BCProgressKitProgressInfo setCurrentPage:](v20, "setCurrentPage:", *(_QWORD *)(a1 + 88));
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeChapters"));
        objc_msgSend(v21, "setObject:forKey:", v20, *(_QWORD *)(a1 + 40));

        objc_msgSend(*(id *)(a1 + 32), "_saveChanges");
        v9 = 0;
LABEL_20:

        if (!v9)
        {
LABEL_24:
          v24 = objc_retainBlock(*(id *)(a1 + 64));
          v25 = v24;
          if (v24)
            (*((void (**)(id, void *))v24 + 2))(v24, v9);

          return;
        }
LABEL_21:
        v22 = BCProgressKitLog();
        v23 = objc_claimAutoreleasedReturnValue(v22);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          sub_1B40BC();

        goto LABEL_24;
      }
    }
    else
    {
      v11 = objc_msgSend(objc_alloc((Class)CLSContext), "initWithType:identifier:title:", 2, v2, *(_QWORD *)(a1 + 56));
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getOpenBookContext:", *(_QWORD *)(a1 + 40)));
      v13 = v12;
      if (v12)
      {
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "contentStoreIdentifier"));
        objc_msgSend(v11, "setContentStoreIdentifier:", v14);

        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardProgressCapability"));
        objc_msgSend(v11, "addProgressReportingCapabilities:", v15);

        objc_msgSend(v13, "addChildContext:", v11);
      }
      else
      {
        v16 = BCProgressKitLog();
        v17 = objc_claimAutoreleasedReturnValue(v16);
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          sub_1B4128();

      }
      if (!v4)
        goto LABEL_19;
    }
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_updateCurrentChapterProgressForBook:", *(_QWORD *)(a1 + 40)));
    if (v9)
      goto LABEL_20;
    goto LABEL_19;
  }
  v10 = objc_retainBlock(*(id *)(a1 + 64));
  if (v10)
  {
    v26 = v10;
    (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
    v10 = v26;
  }

}

void sub_25174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_251BC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a3);
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40))
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("readProportion")));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

void sub_253B0(uint64_t a1)
{
  void *v2;
  dispatch_semaphore_t v3;
  void *v4;
  void *v5;
  NSObject *v6;
  dispatch_time_t v7;
  id v8;
  NSObject *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  double v23;
  id v24;
  NSObject *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _QWORD v36[4];
  NSObject *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t);
  id v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  void (*v50)(uint64_t);
  id v51;
  uint8_t buf[4];
  id v53;
  __int16 v54;
  void *v55;
  __int16 v56;
  uint64_t v57;
  _BYTE v58[128];
  _QWORD v59[3];

  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40)))
  {
    v46 = 0;
    v47 = &v46;
    v48 = 0x3032000000;
    v49 = sub_2274C;
    v50 = sub_2275C;
    v51 = 0;
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookIdentifierFromAssetID:", *(_QWORD *)(a1 + 40)));
    v30 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_chapterIdentifierFromAssetID:chapterID:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_mediaIdentifierFromCFI:", *(_QWORD *)(a1 + 56)));
    v40 = 0;
    v41 = &v40;
    v42 = 0x3032000000;
    v43 = sub_2274C;
    v44 = sub_2275C;
    v45 = 0;
    v3 = dispatch_semaphore_create(0);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "progressKitDataStore"));
    v59[0] = v29;
    v59[1] = v30;
    v59[2] = v2;
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v59, 3));
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_258E8;
    v36[3] = &unk_28C758;
    v38 = &v46;
    v39 = &v40;
    v6 = v3;
    v37 = v6;
    objc_msgSend(v4, "contextsMatchingIdentifierPath:completion:", v5, v36);

    v7 = dispatch_time(0, 1000000000);
    if (dispatch_semaphore_wait(v6, v7))
    {
      v8 = BCProgressKitLog();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        sub_1B41F4();

    }
    if (v47[5])
    {
      v10 = 0;
    }
    else
    {
      v34 = 0u;
      v35 = 0u;
      v32 = 0u;
      v33 = 0u;
      v12 = (id)v41[5];
      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v32, v58, 16);
      if (v13)
      {
        v14 = *(_QWORD *)v33;
LABEL_13:
        v15 = 0;
        while (1)
        {
          if (*(_QWORD *)v33 != v14)
            objc_enumerationMutation(v12);
          v16 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * v15);
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "identifier"));
          v18 = objc_msgSend(v17, "isEqualToString:", v2);

          if ((v18 & 1) != 0)
            break;
          if (v13 == (id)++v15)
          {
            v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v32, v58, 16);
            if (v13)
              goto LABEL_13;
            goto LABEL_19;
          }
        }
        v10 = v16;

        if (v10)
          goto LABEL_22;
      }
      else
      {
LABEL_19:

      }
      v10 = objc_msgSend(objc_alloc((Class)CLSContext), "initWithType:identifier:title:", 15, v2, v2);
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v30));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "contentStoreIdentifier"));
      objc_msgSend(v10, "setContentStoreIdentifier:", v20);

      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardProgressCapability"));
      objc_msgSend(v10, "addProgressReportingCapabilities:", v21);

      objc_msgSend(v19, "addChildContext:", v10);
      if (v10)
      {
LABEL_22:
        objc_msgSend(*(id *)(a1 + 32), "_becomeActiveOnContext:", v10);
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_currentActivityForContext:", v10));
        objc_msgSend(*(id *)(a1 + 64), "doubleValue");
        objc_msgSend(v22, "addProgressRangeFromStart:toEnd:", 0.0, v23);

        objc_msgSend(*(id *)(a1 + 32), "_saveChanges");
      }
    }
    if (v47[5])
    {
      v24 = BCProgressKitLog();
      v25 = objc_claimAutoreleasedReturnValue(v24);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        v28 = v47[5];
        *(_DWORD *)buf = 138412802;
        v53 = v30;
        v54 = 2112;
        v55 = v2;
        v56 = 2112;
        v57 = v28;
        _os_log_error_impl(&dword_0, v25, OS_LOG_TYPE_ERROR, "updateMediaForBook: %@, media: %@, error: %@", buf, 0x20u);
      }

    }
    v26 = objc_retainBlock(*(id *)(a1 + 72));
    v27 = v26;
    if (v26)
      (*((void (**)(id, uint64_t))v26 + 2))(v26, v47[5]);

    _Block_object_dispose(&v40, 8);
    _Block_object_dispose(&v46, 8);

  }
  else
  {
    v11 = objc_retainBlock(*(id *)(a1 + 72));
    if (v11)
    {
      v31 = v11;
      (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
      v11 = v31;
    }

  }
}

void sub_2588C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_258E8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v5 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a3);
  v9 = a3;
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;
  v8 = v5;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_25AF4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  unsigned __int8 v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;

  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40))
    && objc_msgSend(*(id *)(a1 + 48), "tracksScore"))
  {
    v2 = *(void **)(a1 + 32);
    v3 = *(_QWORD *)(a1 + 40);
    v4 = *(_QWORD *)(a1 + 64);
    if (*(_QWORD *)(a1 + 56))
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_sectionIdentifierFromAssetID:chapterID:sectionID:", v3, v4));
    else
      v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_chapterIdentifierFromAssetID:chapterID:", v3, v4));
    v6 = (void *)v5;
    v7 = *(void **)(a1 + 56);
    if (!v7)
      v7 = *(void **)(a1 + 64);
    v8 = v7;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v6));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_widgetIdentifierFromAssetID:parentID:widgetID:", *(_QWORD *)(a1 + 40), v8, *(_QWORD *)(a1 + 72)));
    if (!v9)
      goto LABEL_24;
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getActiveWidgetContext:", *(_QWORD *)(a1 + 40)));
    v12 = v11;
    if (v11)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "identifier"));
      v14 = objc_msgSend(v13, "isEqualToString:", v10);

      if ((v14 & 1) != 0)
      {
LABEL_23:

LABEL_24:
        goto LABEL_25;
      }
      objc_msgSend(*(id *)(a1 + 32), "_deactivateCurrentWidget:", *(_QWORD *)(a1 + 40));
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_universalLinkFromAssetID:cfi:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 80)));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v10));
    if (v16)
    {
      v17 = v16;
      if (v15)
      {
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "universalLinkURL"));
        v19 = objc_msgSend(v15, "isEqual:", v18);

        if ((v19 & 1) == 0)
          objc_msgSend(v17, "setUniversalLinkURL:", v15);
      }
    }
    else
    {
      v20 = objc_alloc((Class)CLSContext);
      if (objc_msgSend(*(id *)(a1 + 48), "tracksScore"))
        v21 = 8;
      else
        v21 = 0;
      v17 = objc_msgSend(v20, "initWithType:identifier:title:", v21, v10, *(_QWORD *)(a1 + 88));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "contentStoreIdentifier"));
      objc_msgSend(v17, "setContentStoreIdentifier:", v22);

      objc_msgSend(v17, "setUniversalLinkURL:", v15);
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "standardWidgetReportingCapability"));
      objc_msgSend(v17, "addProgressReportingCapabilities:", v23);

      objc_msgSend(v9, "addChildContext:", v17);
    }
    objc_msgSend(*(id *)(a1 + 32), "_becomeActiveOnContext:", v17);
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeWidgets"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "identifier"));
    objc_msgSend(v24, "setObject:forKey:", v25, *(_QWORD *)(a1 + 40));

    if (*(_QWORD *)(a1 + 48))
    {
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeTrackingProviders"));
      objc_msgSend(v26, "setObject:forKey:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));

    }
    objc_msgSend(*(id *)(a1 + 32), "_saveChanges");

    goto LABEL_23;
  }
LABEL_25:
  v27 = objc_retainBlock(*(id *)(a1 + 96));
  if (v27)
  {
    v28 = v27;
    (*((void (**)(id, _QWORD))v27 + 2))(v27, 0);
    v27 = v28;
  }

}

void sub_25E48(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40)))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_getActiveWidgetContext:", *(_QWORD *)(a1 + 40)));
    if (v2)
    {
      objc_msgSend(*(id *)(a1 + 32), "_deactivateCurrentWidget:", *(_QWORD *)(a1 + 40));
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeWidgets"));
      objc_msgSend(v3, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeTrackingProviders"));
      objc_msgSend(v4, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "parent"));
      objc_msgSend(*(id *)(a1 + 32), "_becomeActiveOnContext:", v5);
      objc_msgSend(*(id *)(a1 + 32), "_saveChanges");

    }
  }
  v6 = objc_retainBlock(*(id *)(a1 + 48));
  if (v6)
  {
    v7 = v6;
    (*((void (**)(id, _QWORD))v6 + 2))(v6, 0);
    v6 = v7;
  }

}

void sub_26064(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40)))
  {
    v2 = *(_QWORD *)(a1 + 48);
    if (!v2)
      v2 = *(_QWORD *)(a1 + 56);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_widgetIdentifierFromAssetID:parentID:widgetID:", *(_QWORD *)(a1 + 40), v2, *(_QWORD *)(a1 + 64)));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v3));
    if (v4)
    {
      v5 = *(void **)(a1 + 32);
      objc_msgSend(*(id *)(a1 + 72), "doubleValue");
      objc_msgSend(v5, "_updateContext:withProgress:", v4);
    }

  }
  v6 = objc_retainBlock(*(id *)(a1 + 80));
  if (v6)
  {
    v7 = v6;
    (*((void (**)(id, _QWORD))v6 + 2))(v6, 0);
    v6 = v7;
  }

}

void sub_26280(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;

  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40)))
  {
    v2 = *(_QWORD *)(a1 + 48);
    if (!v2)
      v2 = *(_QWORD *)(a1 + 56);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_widgetIdentifierFromAssetID:parentID:widgetID:", *(_QWORD *)(a1 + 40), v2, *(_QWORD *)(a1 + 64)));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v3));
    if (v4)
    {
      v5 = *(void **)(a1 + 32);
      objc_msgSend(*(id *)(a1 + 72), "doubleValue");
      v7 = v6;
      objc_msgSend(*(id *)(a1 + 80), "doubleValue");
      objc_msgSend(v5, "_updateContext:withScore:maxScore:", v4, v7, v8);
    }

  }
  v9 = objc_retainBlock(*(id *)(a1 + 88));
  if (v9)
  {
    v10 = v9;
    (*((void (**)(id, _QWORD))v9 + 2))(v9, 0);
    v9 = v10;
  }

}

void sub_2646C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  if (objc_msgSend(*(id *)(a1 + 32), "_isBookOpen:", *(_QWORD *)(a1 + 40)))
  {
    v2 = *(_QWORD *)(a1 + 48);
    if (!v2)
      v2 = *(_QWORD *)(a1 + 56);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_widgetIdentifierFromAssetID:parentID:widgetID:", *(_QWORD *)(a1 + 40), v2, *(_QWORD *)(a1 + 64)));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:", v3));
    v5 = v4;
    if (v4)
    {
      v6 = objc_msgSend(v4, "createNewActivity");
      objc_msgSend(*(id *)(a1 + 32), "_saveChanges");
    }

  }
  v7 = objc_retainBlock(*(id *)(a1 + 72));
  if (v7)
  {
    v8 = v7;
    (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);
    v7 = v8;
  }

}

void sub_265E8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookIdentifierFromAssetID:", *(_QWORD *)(a1 + 40)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contextWithID:"));
  v3 = v2;
  if (v2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "title"));
    v5 = objc_msgSend(v4, "isEqualToString:", *(_QWORD *)(a1 + 48));

    if ((v5 & 1) == 0)
    {
      objc_msgSend(v3, "setTitle:", *(_QWORD *)(a1 + 48));
      objc_msgSend(*(id *)(a1 + 32), "_saveChanges");
    }
  }
  v6 = objc_retainBlock(*(id *)(a1 + 56));
  v7 = v6;
  if (v6)
    (*((void (**)(id, _QWORD))v6 + 2))(v6, 0);

}

void sub_267BC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_267E0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_267F0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_debug_impl(a1, v4, OS_LOG_TYPE_DEBUG, a4, v5, 0xCu);
}

uint64_t sub_26828(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_274F8(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "text"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "stringByAppendingString:", CFSTR("\n")));

  return v2;
}

id sub_2753C(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "propertyProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "assetCover"));

  return v2;
}

id sub_27578(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = IMCommonCoreBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("Excerpt from:\n%@"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "citation"));
  v6 = IMCommonCoreBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("This material may be protected by copyright."), &stru_296430, CFSTR("BCCommonCoreLocalizable")));

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", v4, v5));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@\n%@"), v9, v8));

  return v10;
}

id sub_27674(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "propertyProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "assetCover"));

  return v2;
}

id sub_276B0(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "propertyProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "storeURL"));

  return v2;
}

id sub_276EC(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "propertyProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "assetCover"));

  return v2;
}

id sub_27BA8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "text");
}

id sub_27BB0(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "propertyProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "assetCover"));

  return v2;
}

id sub_27BEC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "propertyProvider"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "storeShortURL"));

  if (v3)
  {
    v4 = 0;
  }
  else
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "propertyProvider"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "storeURL"));

  }
  return v4;
}

id sub_27C64(uint64_t a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "propertyProvider"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "assetCover"));

  return v2;
}

uint64_t sub_29538(uint64_t result)
{
  if (*(_BYTE *)(result + 40))
    *(_BYTE *)(*(_QWORD *)(result + 32) + 9) = 0;
  return result;
}

double BCCardAdditionalBottomInset()
{
  int v0;
  double result;

  v0 = isPad();
  result = 0.0;
  if (v0)
    return 22.0;
  return result;
}

id sub_29D28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "animateTransition:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16));
}

id sub_29E68(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "animateTransition:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16));
}

id sub_2AC18(uint64_t a1)
{
  double v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  int v12;
  void *v13;
  _BOOL8 v14;

  v2 = *(double *)(a1 + 40);
  v3 = *(double *)(a1 + 48);
  if ((_os_feature_enabled_impl("UIKit", "uip_floating_tab_bar_only") & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentingViewController"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "presentingViewController"));

    if (v5)
    {
      do
      {
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "presentingViewController"));

        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "presentingViewController"));
        v4 = v6;
      }
      while (v7);
    }
    else
    {
      v6 = v4;
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "viewIfLoaded"));

    if (v8)
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));
      objc_msgSend(v9, "bounds");
      v2 = v10;
      v3 = v11;

    }
  }
  v12 = *(unsigned __int8 *)(a1 + 56);
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configuration"));
  v14 = v12 != objc_msgSend(v13, "cardsCanExpand");

  return objc_msgSend(*(id *)(a1 + 32), "_layoutStackByChangingMode:newViewSize:", v14, v2, v3);
}

void sub_2AFD4(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(objc_alloc((Class)NSMapTable), "initWithKeyOptions:valueOptions:capacity:", 5, 5, 1);
  v2 = (void *)qword_30D538;
  qword_30D538 = (uint64_t)v1;

}

void sub_2B4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2B50C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_2B51C(uint64_t a1)
{

}

void sub_2B524(uint64_t a1)
{
  BCCardStackViewController *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  __int128 v14;
  _QWORD v15[4];
  id v16;
  __int128 v17;
  id v18;
  id location;

  v2 = objc_alloc_init(BCCardStackViewController);
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "presentingViewControllerSafeAreaInsetsDidChange:", *(_QWORD *)(a1 + 32));
  if (*(_BYTE *)(a1 + 80))
    v5 = 6;
  else
    v5 = 5;
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "setModalPresentationStyle:", v5);
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "setPresentingViewControllerIsFullScreen:", *(unsigned __int8 *)(a1 + 80));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "_pushCardsWithDataSource:focusedIndex:animated:presentingViewController:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 72), *(unsigned __int8 *)(a1 + 81), *(_QWORD *)(a1 + 32)));
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "setPendingWrapper:", v6);
  if (!*(_BYTE *)(a1 + 80))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "traitCollection"));
    v8 = objc_msgSend(v7, "userInterfaceStyle");
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "presentationController"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "traitOverrides"));
    objc_msgSend(v10, "setUserInterfaceStyle:", v8);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "presentationController"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "traitOverrides"));
    objc_msgSend(v12, "setUserInterfaceLevel:", 1);

  }
  objc_msgSend(*(id *)(a1 + 48), "setObject:forKeyedSubscript:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), *(_QWORD *)(a1 + 32));
  objc_initWeak(&location, *(id *)(a1 + 32));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_2B754;
  v15[3] = &unk_28C978;
  objc_copyWeak(&v18, &location);
  v16 = *(id *)(a1 + 48);
  v14 = *(_OWORD *)(a1 + 56);
  v13 = (id)v14;
  v17 = v14;
  objc_msgSend(v6, "waitUntilReady:", v15);

  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

}

void sub_2B738(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_2B754(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  uint64_t v18;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = *(void **)(a1 + 32);
    v5 = WeakRetained;
    objc_msgSend(v4, "removeObjectForKey:", v5);
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "presentingViewController"));
    v7 = (void *)v6;
    if (v6)
      v8 = (void *)v6;
    else
      v8 = v5;
    v9 = v8;

    objc_msgSend(v9, "bc_analyticsVisibilitySubtreeWillDisappear");
    v11 = *(void **)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 48);
    v12 = *(_QWORD *)(*(_QWORD *)(v10 + 8) + 40);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_2B87C;
    v15[3] = &unk_28C950;
    v18 = v10;
    v16 = v9;
    v17 = v11;
    v13 = v9;
    objc_msgSend(v5, "bc_presentCardViewController:animated:completion:", v12, 1, v15);

  }
  else
  {
    v14 = objc_retainBlock(*(id *)(a1 + 40));
    v5 = v14;
    if (v14)
      (*((void (**)(id))v14 + 2))(v14);
  }

}

void sub_2B87C(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setPendingWrapper:", 0);
  objc_msgSend(*(id *)(a1 + 32), "bc_analyticsVisibilityUpdateSubtree");
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_2B8D8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;

  v3 = a2;
  if (v3)
  {
    v4 = BCCardModelLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1B4220((uint64_t)v3, v5);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_2C898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id *location, id *a18)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(location);
  objc_destroyWeak(a18);
  objc_destroyWeak((id *)&STACK[0x270]);
  _Unwind_Resume(a1);
}

id sub_2C8EC(_QWORD *a1)
{
  return +[BCCardStackCoverSourceController revealCoverSourceAtIndex:dataSource:coverHost:](BCCardStackCoverSourceController, "revealCoverSourceAtIndex:dataSource:coverHost:", a1[6], a1[4], a1[5]);
}

id sub_2C904(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "performFirstHalfOfProcessing");
}

void sub_2C90C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v3 = a2;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v8), "cardStackTransitioningCardContentPrepareForDismiss", (_QWORD)v11);
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

  objc_msgSend(*(id *)(a1 + 40), "prepareForAnimation:", 0);
  v9 = objc_retainBlock(v3);
  v10 = v9;
  if (v9)
    (*((void (**)(id))v9 + 2))(v9);

}

id sub_2CA38(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "hideCardCoverSources");
}

void sub_2CA40(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v5 = *(id *)(a1 + 32);
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v20;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v20 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)v9), "cardStackTransitioningCardContentFinalizeForDismiss", (_QWORD)v19);
        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    }
    while (v7);
  }

  objc_msgSend(*(id *)(a1 + 40), "finalizeForAnimation");
  objc_msgSend(*(id *)(a1 + 48), "bc_analyticsVisibilitySubtreeWillDisappear");
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
  objc_msgSend(v10, "removeFromSuperview");

  objc_msgSend(*(id *)(a1 + 48), "removeFromParentViewController");
  objc_msgSend(*(id *)(a1 + 48), "bc_analyticsVisibilitySubtreeDidDisappear");
  objc_msgSend(*(id *)(a1 + 56), "bc_analyticsVisibilityUpdateSubtree");
  objc_msgSend(*(id *)(a1 + 56), "becomeFirstResponder");
  objc_msgSend(*(id *)(a1 + 64), "contentInset");
  objc_msgSend(*(id *)(a1 + 56), "setContentInset:");
  objc_msgSend(*(id *)(a1 + 56), "didBecomeTopCardSet");
  if (!*(_QWORD *)(a1 + 56))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "topViewController"));
    v12 = BUProtocolCast(&OBJC_PROTOCOL___BCCardContentScrollViewDelegate, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    if (v13)
    {
      objc_msgSend(v13, "didBecomeVisibleContentScrollView");
    }
    else
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "topViewController"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "tabBarController"));

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "selectedViewController"));
      objc_msgSend(v16, "setContentScrollView:forEdge:", 0, 15);

      objc_msgSend(v15, "bc_setPreferredTabBarScrollEdgeAppearance:", 0);
    }

  }
  objc_msgSend(WeakRetained, "setNeedsStatusBarAppearanceUpdate", (_QWORD)v19);
  objc_msgSend(WeakRetained, "setTransitionInProgress:", 0);
  objc_msgSend(WeakRetained, "_layoutAdornmentViews");
  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 80), "animationEnded:") & 1) != 0)
    objc_msgSend(*(id *)(a1 + 80), "animationEnded:", a2);
  if (!*(_BYTE *)(a1 + 104))
  {
    v17 = objc_retainBlock(*(id *)(a1 + 88));
    v18 = v17;
    if (v17)
      (*((void (**)(id))v17 + 2))(v17);

  }
}

void sub_2CCA8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_updateStatusBarBackgroundOpacityForCardSetViewController:", *(_QWORD *)(a1 + 32));
  objc_msgSend(WeakRetained, "setLockedChildForStatusBarStyle:", *(_QWORD *)(a1 + 32));
  objc_msgSend(WeakRetained, "setNeedsStatusBarAppearanceUpdate");
  objc_msgSend(WeakRetained, "setLockedChildForStatusBarStyle:", 0);

}

void sub_2CD04(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_popCardFrontAnimatorForCardSet:cardSetViewControllerToUnfade:duration:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  objc_msgSend(v1, "startAnimation");

}

void sub_2CD3C(uint64_t a1)
{
  id v2;
  _QWORD v3[4];
  id v4;

  v2 = objc_msgSend(objc_alloc((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 3, 0, 0.2);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_2CDDC;
  v3[3] = &unk_28B960;
  v4 = *(id *)(a1 + 32);
  objc_msgSend(v2, "addAnimations:", v3);
  objc_msgSend(v2, "startAnimation");

}

void sub_2CDDC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "auxiliaryNavigationBarView"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

void sub_2CE10(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "bc_analyticsVisibilitySubtreeWillDisappear");
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "presentingViewController"));
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "presentingViewController"));
    v7 = (void *)v6;
    if (v6)
      v8 = (void *)v6;
    else
      v8 = v5;
    v9 = v8;

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_2CF54;
    v12[3] = &unk_28CAB8;
    objc_copyWeak(&v15, v2);
    v10 = v9;
    v13 = v10;
    v14 = *(id *)(a1 + 32);
    objc_msgSend(v5, "bc_dismissCardViewController:animated:completion:", v4, 1, v12);

    objc_destroyWeak(&v15);
  }
  else
  {
    v11 = objc_retainBlock(*(id *)(a1 + 32));
    v5 = v11;
    if (v11)
      (*((void (**)(id))v11 + 2))(v11);
  }

}

void sub_2CF40(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2CF54(id *a1)
{
  id *v2;
  id WeakRetained;
  id v4;
  void (**v5)(void);
  void (**v6)(void);

  v2 = a1 + 6;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  objc_msgSend(WeakRetained, "setPendingWrapper:", 0);

  +[UIViewController attemptRotationToDeviceOrientation](UIViewController, "attemptRotationToDeviceOrientation");
  v4 = objc_loadWeakRetained(v2);
  objc_msgSend(v4, "bc_analyticsVisibilitySubtreeDidDisappear");

  objc_msgSend(a1[4], "bc_analyticsVisibilityUpdateSubtree");
  v5 = (void (**)(void))objc_retainBlock(a1[5]);
  if (v5)
  {
    v6 = v5;
    v5[2]();
    v5 = v6;
  }

}

void sub_2D3EC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  __int128 v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  _OWORD v14[3];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "view"));
  v5 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v14[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v14[1] = v5;
  v14[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v4, "setTransform:", v14);

  v6 = CGRectMakeWithSize(*(double *)(a1 + 32), *(double *)(a1 + 40));
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "view"));
  objc_msgSend(v13, "setFrame:", v6, v8, v10, v12);

  objc_msgSend(v3, "cardLayoutDidChange:", *(unsigned __int8 *)(a1 + 48));
}

void sub_2E9B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,id location)
{
  id *v53;
  id *v54;
  id *v55;

  objc_destroyWeak(v53);
  objc_destroyWeak(v54);
  objc_destroyWeak(v55);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2EA04(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "layoutIfNeeded");

}

void sub_2EA34(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_2EA3C(uint64_t a1)
{
  id v2;
  id v3;
  _QWORD v4[4];
  id v5;
  id v6;

  v2 = objc_alloc_init((Class)TUIMutableTransactionOptions);
  objc_msgSend(v2, "setAnimate:", 1);
  objc_msgSend(v2, "setDuration:", 0.6);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_2EB08;
  v4[3] = &unk_28CB00;
  v5 = *(id *)(a1 + 32);
  v6 = *(id *)(a1 + 40);
  v3 = +[TUITransaction currentOrNewTransactionWithOptions:block:](TUITransaction, "currentOrNewTransactionWithOptions:block:", v2, v4);

}

id sub_2EB08(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v6), "cardStackTransitionSuspendUpdatesUntilEndOfTransaction", (_QWORD)v8);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  return objc_msgSend(*(id *)(a1 + 40), "removeAllObjects");
}

void sub_2EBFC(uint64_t a1, void *a2)
{
  void *v3;
  NSObject *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  unsigned __int8 v21;
  NSObject *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  id v27;
  void *v28;
  id v29;
  id obj;
  uint64_t v31;
  _QWORD v32[4];
  id v33;
  _QWORD block[4];
  NSObject *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  unsigned __int8 v41;
  _QWORD v42[5];
  NSObject *v43;
  char *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint8_t buf[4];
  char *v50;
  _BYTE v51[128];

  v29 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bundleIdentifier"));

  v4 = dispatch_group_create();
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  obj = *(id *)(a1 + 32);
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v45, v51, 16);
  if (v5)
  {
    v6 = v5;
    v7 = 0;
    v31 = *(_QWORD *)v46;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v46 != v31)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v45 + 1) + 8 * (_QWORD)v8);
        v10 = BCCardStackSignpost();
        v11 = objc_claimAutoreleasedReturnValue(v10);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134217984;
          v50 = (char *)v8 + v7;
          _os_log_debug_impl(&dword_0, v11, OS_LOG_TYPE_DEBUG, "starting layout cardIndex=%lu", buf, 0xCu);
        }

        dispatch_group_enter(v4);
        v12 = 40;
        if (!*(_BYTE *)(a1 + 88))
          v12 = 48;
        v13 = *(_QWORD *)(a1 + v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "currentCardViewController", v28));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "view"));
        objc_msgSend(v15, "bounds");
        v17 = v16;
        v19 = v18;
        v42[0] = _NSConcreteStackBlock;
        v42[1] = 3221225472;
        v42[2] = sub_2EF94;
        v42[3] = &unk_28C9C8;
        v42[4] = v9;
        v44 = (char *)v8 + v7;
        v43 = v4;
        objc_msgSend(v9, "cardStackTransitioningCardContentPrepareForOpenWithViewController:viewSize:index:completion:", v13, (char *)v8 + v7, v42, v17, v19);

        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v45, v51, 16);
      v7 += (uint64_t)v8;
    }
    while (v6);
  }

  v20 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication jsa_sharedApplicationIfNotExtension](UIApplication, "jsa_sharedApplicationIfNotExtension"));
  v21 = objc_msgSend(v20, "isRunningTest");

  v22 = *(NSObject **)(*(_QWORD *)(a1 + 48) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_2F060;
  block[3] = &unk_28CB28;
  v41 = v21;
  v23 = *(_QWORD *)(a1 + 80);
  v35 = v4;
  v40 = v23;
  v24 = v28;
  v36 = v24;
  v37 = *(id *)(a1 + 64);
  v38 = *(id *)(a1 + 72);
  v39 = v29;
  v25 = v29;
  v26 = v4;
  dispatch_async(v22, block);
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_2F304;
  v32[3] = &unk_28B960;
  v33 = v24;
  v27 = v24;
  dispatch_group_notify(v26, (dispatch_queue_t)&_dispatch_main_q, v32);

}

void sub_2EF94(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  _QWORD block[5];
  id v4;
  uint64_t v5;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_2F008;
  block[3] = &unk_28C9C8;
  v2 = (void *)a1[5];
  v1 = a1[6];
  block[4] = a1[4];
  v5 = v1;
  v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_2F008(uint64_t a1)
{
  id v2;
  NSObject *v3;

  objc_msgSend(*(id *)(a1 + 32), "cardStackTransitioningCardContentFinalizePreparationForOpen");
  v2 = BCCardStackSignpost();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1B4344(a1, v3);

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_2F060(uint64_t a1)
{
  int64_t v2;
  NSObject *v3;
  dispatch_time_t v4;
  intptr_t v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  os_signpost_id_t v9;
  const __CFString *v10;
  const char *v11;
  const __CFString *v12;
  _QWORD block[4];
  id v14;
  id v15;
  id v16;
  uint8_t buf[4];
  const __CFString *v18;

  if (*(_BYTE *)(a1 + 80))
    v2 = 5000000000;
  else
    v2 = 300000000;
  v3 = *(NSObject **)(a1 + 32);
  v4 = dispatch_time(0, v2);
  v5 = dispatch_group_wait(v3, v4);
  v6 = BCCardStackSignpost();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  v8 = v7;
  v9 = *(_QWORD *)(a1 + 72);
  if (v5)
  {
    if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
    {
      v10 = *(const __CFString **)(a1 + 40);
      if (!v10)
        v10 = CFSTR("Unknown");
      *(_DWORD *)buf = 138412290;
      v18 = v10;
      v11 = "Timeout: Display product cards";
LABEL_15:
      _os_signpost_emit_with_name_impl(&dword_0, v8, OS_SIGNPOST_INTERVAL_END, v9, v11, "mainBundleId=%@ enableTelemetry=YES ", buf, 0xCu);
    }
  }
  else if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    v12 = *(const __CFString **)(a1 + 40);
    if (!v12)
      v12 = CFSTR("Unknown");
    *(_DWORD *)buf = 138412290;
    v18 = v12;
    v11 = "No Timeout: Display product cards";
    goto LABEL_15;
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_2F240;
  block[3] = &unk_28B750;
  v14 = *(id *)(a1 + 48);
  v15 = *(id *)(a1 + 56);
  v16 = *(id *)(a1 + 64);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_2F240(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void (**v5)(void);
  void (**v6)(void);

  kdebug_trace(725354452, 0, 0, 0, 0);
  objc_msgSend(a1[4], "performSecondHalfOfProcessing");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "coverMoveItems"));
  objc_msgSend(a1[5], "setCoverMoveItems:", v2);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "cardMoveItems"));
  objc_msgSend(a1[5], "setCardMoveItems:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "coverFadeItems"));
  objc_msgSend(a1[5], "setCoverFadeItems:", v4);

  v5 = (void (**)(void))objc_retainBlock(a1[6]);
  if (v5)
  {
    v6 = v5;
    v5[2]();
    v5 = v6;
  }

}

void sub_2F304(uint64_t a1)
{
  id v2;
  NSObject *v3;
  const __CFString *v4;
  int v5;
  const __CFString *v6;

  v2 = BCCardStackSignpost();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_signpost_enabled(v3))
  {
    v4 = *(const __CFString **)(a1 + 32);
    if (!v4)
      v4 = CFSTR("Unknown");
    v5 = 138412290;
    v6 = v4;
    _os_signpost_emit_with_name_impl(&dword_0, v3, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "Display product cards", "mainBundleId=%@ enableTelemetry=YES ", (uint8_t *)&v5, 0xCu);
  }

}

id sub_2F3C8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "prepareForAnimation:", 1);
}

void sub_2F3D4(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  objc_msgSend(*(id *)(a1 + 32), "removeAllObjects");
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  if (*(_BYTE *)(a1 + 96))
  {
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v5 = *(id *)(a1 + 40);
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v13;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v13 != v8)
            objc_enumerationMutation(v5);
          objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i), "cardStackTransitioningCardContentFinalizeForOpen", (_QWORD)v12);
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      }
      while (v7);
    }

    objc_msgSend(*(id *)(a1 + 48), "finalizeForAnimation");
    objc_msgSend(*(id *)(a1 + 56), "endTransitionUpdateMode");
  }
  objc_msgSend(*(id *)(a1 + 56), "didMoveToParentViewController:", WeakRetained, (_QWORD)v12);
  objc_msgSend(*(id *)(a1 + 56), "presentationTransitionDidComplete");
  objc_msgSend(WeakRetained, "setTransitionInProgress:", 0);
  objc_msgSend(WeakRetained, "unlockChildForStatusBarStyle");
  objc_msgSend(WeakRetained, "_layoutAdornmentViews");
  if ((objc_opt_respondsToSelector(*(_QWORD *)(a1 + 64), "animationEnded:") & 1) != 0)
    objc_msgSend(*(id *)(a1 + 64), "animationEnded:", a2);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 72), "view"));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "window"));
  objc_msgSend(v11, "setUserInteractionEnabled:", 1);

  objc_msgSend(WeakRetained, "_suspendAndTeardownChildViewControllerAsNeeded");
  objc_msgSend(*(id *)(a1 + 80), "bc_analyticsVisibilitySubtreeDidDisappear");
  objc_msgSend(*(id *)(a1 + 56), "bc_analyticsVisibilityUpdateSubtree");

}

void sub_2F590(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "unlockChildForStatusBarStyle");
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "statusBarBackgroundController"));
  objc_msgSend(v1, "setOpacity:", 0.0);

  objc_msgSend(WeakRetained, "setNeedsStatusBarAppearanceUpdate");
}

void sub_2F5E8(uint64_t a1, double a2)
{
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_pushCardBackAnimatorForCardSet:cardSetViewControllerToFade:duration:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), a2));
  objc_msgSend(v4, "startAnimation");

}

void sub_2F644(uint64_t a1, double a2)
{
  id v4;
  void *v5;
  _QWORD v6[4];
  id v7;

  v4 = objc_msgSend(objc_alloc((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 3, 0, a2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "auxiliaryNavigationBarView"));
  objc_msgSend(v5, "setAlpha:", 0.0);

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_2F720;
  v6[3] = &unk_28B960;
  v7 = *(id *)(a1 + 32);
  objc_msgSend(v4, "addAnimations:delayFactor:", v6, (a2 + -0.2) / a2);
  objc_msgSend(v4, "startAnimation");

}

void sub_2F720(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "auxiliaryNavigationBarView"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_2F8A0(uint64_t a1)
{
  uint64_t v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "_layoutUnderlyingCardSetViewController:animated:", *(_QWORD *)(a1 + 40), 1);
  v2 = *(_QWORD *)(a1 + 48);
  if (v2)
  {
    objc_msgSend(*(id *)(a1 + 32), "_applyCardSetViewController:withTransform:", v2, 1);
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
    objc_msgSend(v3, "setAlpha:", 0.0);

  }
}

void sub_2F914(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "setHidden:", 1);

}

void sub_2FCB0(id *a1)
{
  void *v2;
  __int128 v3;
  id v4;
  void *v5;
  _OWORD v6[3];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "view"));
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v3;
  v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  objc_msgSend(v2, "setTransform:", v6);

  objc_msgSend(a1[4], "setCovered:animated:duration:", 0, 1, 0.28);
  v4 = a1[5];
  if (v4)
  {
    objc_msgSend(a1[6], "_applyCardSetViewController:withTransform:", v4, 2);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "view"));
    objc_msgSend(v5, "setAlpha:", 1.0);

  }
}

void sub_301C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_301DC(uint64_t a1)
{
  double v1;
  id *v2;
  _QWORD v3[4];
  id v4;
  _QWORD v5[4];
  id v6;

  v1 = *(double *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_302D4;
  v5[3] = &unk_28CC18;
  v2 = (id *)(a1 + 32);
  objc_copyWeak(&v6, (id *)(a1 + 32));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_303D0;
  v3[3] = &unk_28CC40;
  objc_copyWeak(&v4, v2);
  +[UIView animateKeyframesWithDuration:delay:options:animations:completion:](UIView, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v5, v3, v1, 0.0);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&v6);
}

void sub_302B8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_302D4(uint64_t a1)
{
  _QWORD v1[4];
  id v2;

  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_3036C;
  v1[3] = &unk_28CC18;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v1, 0.5, 0.5);
  objc_destroyWeak(&v2);
}

void sub_30358(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_3036C(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "childViewControllers"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "lastObject"));

  objc_msgSend(WeakRetained, "setLockedChildForStatusBarStyle:", v2);
  objc_msgSend(WeakRetained, "setNeedsStatusBarAppearanceUpdate");

}

void sub_303D0(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setLockedChildForStatusBarStyle:", 0);

}

void sub_30514(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_30540(uint64_t a1)
{
  double v1;
  _QWORD v2[4];
  id v3;

  v1 = *(double *)(a1 + 40);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_305F0;
  v2[3] = &unk_28CC18;
  objc_copyWeak(&v3, (id *)(a1 + 32));
  +[UIView animateKeyframesWithDuration:delay:options:animations:completion:](UIView, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v2, &stru_28CCA8, v1, 0.0);
  objc_destroyWeak(&v3);
}

void sub_305DC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_305F0(uint64_t a1)
{
  _QWORD v1[4];
  id v2;

  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_30688;
  v1[3] = &unk_28CC18;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v1, 0.0, 0.5);
  objc_destroyWeak(&v2);
}

void sub_30674(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_30688(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setIgnoreChildStatusBarStyle:", 1);
  objc_msgSend(WeakRetained, "setNeedsStatusBarAppearanceUpdate");

}

void sub_306C4(uint64_t a1, uint64_t a2)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setIgnoreChildStatusBarStyle:", 0);
  if (a2)
  {
    objc_msgSend(WeakRetained, "setNeedsStatusBarAppearanceUpdate");
    objc_msgSend(*(id *)(a1 + 32), "_updateStatusBarBackgroundOpacity");
  }

}

void sub_31238(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void sub_31454(uint64_t a1)
{
  IMImageCache *v2;
  objc_class *v3;
  NSString *v4;
  void *v5;
  IMImageCache *v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(+[UIApplication applicationCacheDirectory](UIApplication, "applicationCacheDirectory"));
  v2 = [IMImageCache alloc];
  v3 = (objc_class *)objc_opt_class(*(_QWORD *)(a1 + 32));
  v4 = NSStringFromClass(v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v6 = -[IMImageCache initWithIdentifier:basePath:memorySize:](v2, "initWithIdentifier:basePath:memorySize:", v5, v8, 20971520);
  v7 = (void *)qword_30D550;
  qword_30D550 = (uint64_t)v6;

}

void sub_31A54(uint64_t a1)
{
  void *v2;
  unsigned __int8 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentCache"));
  v3 = objc_msgSend(v2, "hasItemForKey:", *(_QWORD *)(a1 + 40));

  if ((v3 & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentCache"));
    v6 = *(_QWORD *)(a1 + 40);
    v5 = *(_QWORD *)(a1 + 48);
    v7 = *(_QWORD *)(a1 + 56);
    objc_msgSend(*(id *)(a1 + 64), "size");
    objc_msgSend(v4, "insertCGImages:forKey:mimeType:baseSize:properties:", v5, v6, v7, *(_QWORD *)(a1 + 72));

    objc_msgSend(*(id *)(a1 + 80), "setPersistedToDisk:", 1);
  }
}

void sub_31D3C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentCache"));
  objc_msgSend(v2, "deleteItemForKey:", *(_QWORD *)(a1 + 40));

}

void sub_32068(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchImageForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(a1 + 48);
  if (v3)
  {
    v4 = v2;
    (*(void (**)(void))(v3 + 16))();
    v2 = v4;
  }

}

uint64_t sub_322C8(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, double, double))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

void sub_322E0(uint64_t a1)
{
  __int128 *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;
  __int128 v10;

  v2 = (__int128 *)(a1 + 80);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "im_imageWithSize:options:", *(unsigned int *)(a1 + 96), *(double *)(a1 + 80), *(double *)(a1 + 88)));
  objc_msgSend(*(id *)(a1 + 40), "setImage:forKey:");
  v4 = *(void **)(a1 + 72);
  if (v4)
  {
    v5 = *(NSObject **)(a1 + 56);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_3240C;
    block[3] = &unk_28CD20;
    v9 = v4;
    v7 = v3;
    v8 = *(id *)(a1 + 64);
    v10 = *v2;
    dispatch_async(v5, block);

  }
}

uint64_t sub_3240C(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, double, double))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

void sub_326A0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void **v6;
  uint64_t v7;
  void (*v8)(uint64_t, void *, void *, void *);
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  __int128 v15;
  char v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLRequest requestWithURL:cachePolicy:timeoutInterval:](NSURLRequest, "requestWithURL:cachePolicy:timeoutInterval:", *(_QWORD *)(a1 + 32), 1, 10.0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLSession sharedSession](NSURLSession, "sharedSession"));
  v6 = _NSConcreteStackBlock;
  v7 = 3221225472;
  v8 = sub_327B8;
  v9 = &unk_28CD70;
  v4 = *(void **)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = v4;
  v16 = *(_BYTE *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 80);
  v12 = *(id *)(a1 + 56);
  v13 = *(id *)(a1 + 64);
  v14 = *(id *)(a1 + 72);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataTaskWithRequest:completionHandler:", v2, &v6));
  objc_msgSend(v5, "resume", v6, v7, v8, v9, v10);

}

void sub_327B8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  void *v16;
  id v17;
  NSObject *v18;
  NSObject *v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[4];
  id v24;
  _QWORD block[4];
  id v26;
  id v27;
  id v28;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = v9;
  if (v7 && !v9)
  {
    v28 = 0;
    +[IMCoverUtilities isUndesirableImageData:error:](IMCoverUtilities, "isUndesirableImageData:error:", v7, &v28);
    v10 = v28;
  }
  if (!v7 || v10)
  {
    v13 = *(NSObject **)(a1 + 56);
    v14 = v13;
    if (!v13)
    {
      v14 = &_dispatch_main_q;
      v15 = &_dispatch_main_q;
    }
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_329DC;
    v23[3] = &unk_28BF90;
    v24 = *(id *)(a1 + 64);
    dispatch_async(v14, v23);
    if (!v13)

    v11 = v24;
  }
  else
  {
    v11 = objc_msgSend(objc_alloc((Class)UIImage), "initWithData:", v7);
    objc_msgSend(*(id *)(a1 + 32), "setImage:forKey:", v11, *(_QWORD *)(a1 + 40));
    if (*(_BYTE *)(a1 + 88))
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "im_imageWithSize:preserveAspectRatio:", 1, *(double *)(a1 + 72), *(double *)(a1 + 80)));
      objc_msgSend(*(id *)(a1 + 32), "setImage:forKey:", v12, *(_QWORD *)(a1 + 48));
    }
    else
    {
      v12 = 0;
    }
    if (v12)
      v16 = v12;
    else
      v16 = v11;
    v17 = v16;
    v18 = *(NSObject **)(a1 + 56);
    v19 = v18;
    if (!v18)
    {
      v19 = &_dispatch_main_q;
      v20 = &_dispatch_main_q;
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_329CC;
    block[3] = &unk_28C388;
    v21 = *(id *)(a1 + 64);
    v26 = v17;
    v27 = v21;
    v22 = v17;
    dispatch_async(v19, block);
    if (!v18)

  }
}

uint64_t sub_329CC(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_329DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_33528(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", &off_2AF8B8));
  v2 = (void *)qword_30D558;
  qword_30D558 = v1;

}

void sub_335D4(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", &off_2AF8D0));
  v2 = (void *)qword_30D568;
  qword_30D568 = v1;

}

void sub_33648(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", &off_2AF8E8));
  v2 = (void *)qword_30D578;
  qword_30D578 = v1;

}

void sub_337A0(id a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;

  v13 = (id)objc_claimAutoreleasedReturnValue(+[BUBag defaultBag](BUBag, "defaultBag"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "p2LaunchEbookstoreHostPatterns"));
  v2 = sub_3387C((uint64_t)v1, v1);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)qword_30D588;
  qword_30D588 = v3;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "p2LaunchEbookstorePathPatterns"));
  v6 = sub_3387C((uint64_t)v5, v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "p2LaunchAudioBookStorePathPatterns"));
  v9 = sub_3387C((uint64_t)v8, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "arrayByAddingObjectsFromArray:", v10));
  v12 = (void *)qword_30D590;
  qword_30D590 = v11;

}

id sub_3387C(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  id v7;

  v7 = 0;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "jsa_valueWithError:", &v7));
  v3 = v7;
  if (v3)
  {
    v4 = BCIMLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1B43E8((uint64_t)v3, v5);

  }
  return v2;
}

void sub_339AC(uint64_t a1, void *a2)
{
  void (**v3)(id, id);
  id v4;

  v4 = a2;
  v3 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 40));
  if (v3)
    v3[2](v3, objc_msgSend(*(id *)(a1 + 32), "_validateWithSheetInfo:", v4));

}

void sub_33D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  uint64_t v36;

  _Block_object_dispose(&a36, 8);
  _Block_object_dispose((const void *)(v36 - 232), 8);
  _Block_object_dispose((const void *)(v36 - 184), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_33D8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_33D9C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_33DAC(uint64_t a1)
{

}

void sub_33DB4(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_33E00(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_33E4C(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

uint64_t sub_33E98(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "host"));
  v3 = objc_msgSend(v2, "bc_hasMatchInRegexPatterns:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));

  if (v3)
  {
    v4 = objc_msgSend(objc_alloc((Class)NSURLComponents), "initWithURL:resolvingAgainstBaseURL:", *(_QWORD *)(a1 + 32), 0);
    v5 = objc_msgSend(v4, "rangeOfPath");
    if (v5 == (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "path"));
    }
    else
    {
      v7 = v5;
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "string"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "substringFromIndex:", v7));

    }
    if ((objc_msgSend(v6, "bc_hasMatchInRegexPatterns:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40)) & 1) == 0)objc_msgSend(v6, "bc_hasMatchInRegexPatterns:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40));

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_34050(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  uint64_t v7;
  void (**v8)(id, id);
  id v9;

  v9 = a2;
  v6 = a4;
  if (!v9 || v6)
  {
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_defaultIXStoreSheetDictionary"));

    v9 = (id)v7;
  }
  v8 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 40));
  if (v8)
    v8[2](v8, objc_msgSend(*(id *)(a1 + 32), "_validateWithSheetInfo:", v9));

}

void sub_3419C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  void *v15;
  unsigned __int8 v16;
  uint64_t v17;
  id v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];

  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v3 = a2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v21;
    while (2)
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v21 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v7);
        v9 = objc_opt_class(NSString);
        v10 = BUDynamicCast(v9, v8);
        v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "stringByReplacingOccurrencesOfString:withString:", CFSTR("*"), &stru_296430, (_QWORD)v20));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "host"));
        v14 = objc_msgSend(v13, "isEqualToString:", v12);

        if ((v14 & 1) != 0
          || objc_msgSend(v12, "hasPrefix:", CFSTR("."))
          && (v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "host")),
              v16 = objc_msgSend(v15, "hasSuffix:", v12),
              v15,
              (v16 & 1) != 0))
        {

          v17 = 1;
          goto LABEL_13;
        }

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      if (v5)
        continue;
      break;
    }
  }
  v17 = 0;
LABEL_13:

  v18 = objc_retainBlock(*(id *)(a1 + 40));
  v19 = v18;
  if (v18)
    (*((void (**)(id, uint64_t))v18 + 2))(v18, v17);

}

int64_t sub_36498(id a1, id a2, id a3)
{
  id v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "cfi"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "cfi"));

  v7 = objc_msgSend(v5, "compareCFI:", v6);
  return (int64_t)v7;
}

uint64_t sub_36A84(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", objc_msgSend(a2, "unsignedIntegerValue")));
  v8 = objc_msgSend(v7, "characterCount");

  v9 = *(void **)(a1 + 32);
  v10 = objc_msgSend(v6, "unsignedIntegerValue");

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectAtIndexedSubscript:", v10));
  v12 = objc_msgSend(v11, "characterCount");

  if (v8 < v12)
    return -1;
  else
    return v8 > v12;
}

int64_t sub_36B20(id a1, NSNumber *a2, NSNumber *a3)
{
  return -[NSNumber compare:](a2, "compare:", a3);
}

void sub_37018(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  void *v10;
  void *v11;
  CGAffineTransform v12;
  CGAffineTransform v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v5 = a3;
  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "transform");
    v9 = *(double *)&v16;
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
    v14 = 0u;
    v9 = 0.0;
  }

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v9));
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v10, v6);

  CGAffineTransformMakeTranslation(&v13, v9, 0.0);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));

  v12 = v13;
  objc_msgSend(v11, "setTransform:", &v12);

}

void sub_37110(uint64_t a1, double a2)
{
  CGFloat v3;
  double v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  CGAffineTransform v8;
  CGAffineTransform v9;

  v3 = 0.0;
  if (!*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 32), "maxSlideDistance", a2, 0.0);
    v3 = v4;
  }
  memset(&v9, 0, sizeof(v9));
  CGAffineTransformMakeTranslation(&v9, 0.0, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "displayedCardViewControllers"));
  v6[1] = 3221225472;
  v8 = v9;
  v6[0] = _NSConcreteStackBlock;
  v6[2] = sub_371D4;
  v6[3] = &unk_28CFF0;
  v7 = *(id *)(a1 + 40);
  objc_msgSend(v5, "enumerateKeysAndObjectsUsingBlock:", v6);

}

void sub_371D4(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;
  void *v7;
  float v8;
  __int128 v9;
  void *v10;
  CGAffineTransform v11;
  CGAffineTransform v12;
  CGAffineTransform v13;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", a2));
  objc_msgSend(v7, "floatValue");
  v9 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)&v12.a = *(_OWORD *)(a1 + 40);
  *(_OWORD *)&v12.c = v9;
  *(_OWORD *)&v12.tx = *(_OWORD *)(a1 + 72);
  CGAffineTransformTranslate(&v13, &v12, v8, 0.0);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "view"));

  v11 = v13;
  objc_msgSend(v10, "setTransform:", &v11);

}

void sub_37288(uint64_t a1, double a2)
{
  CGFloat v3;
  double v4;
  void *v5;
  void *v6;
  void *v7;
  int IsValid;
  void *v9;
  double v10;
  _QWORD v11[6];
  CGAffineTransform v12;
  CGAffineTransform v13;

  v3 = 0.0;
  if (!*(_BYTE *)(a1 + 40))
  {
    objc_msgSend(*(id *)(a1 + 32), "maxTitleSlideDistance", a2, 0.0);
    v3 = v4;
  }
  CGAffineTransformMakeTranslation(&v13, 0.0, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "titleLabel"));
  v12 = v13;
  objc_msgSend(v5, "setTransform:", &v12);

  v6 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 40))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "backgroundView"));
    objc_msgSend(v7, "setAlpha:", 1.0);

  }
  else
  {
    IsValid = CGFloatIsValid(objc_msgSend(v6, "distanceToCoverSource"));
    v9 = *(void **)(a1 + 32);
    if (IsValid)
    {
      objc_msgSend(v9, "distanceToCoverSource");
      if (v10 < 50.0)
        v10 = 50.0;
    }
    else
    {
      objc_msgSend(v9, "maxSlideDistance");
    }
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_373AC;
    v11[3] = &unk_28B938;
    v11[4] = *(_QWORD *)(a1 + 32);
    *(double *)&v11[5] = v10;
    +[UIView animateKeyframesWithDuration:delay:options:animations:completion:](UIView, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v11, 0, 0.0, 0.0);
  }
}

id sub_373AC(uint64_t a1)
{
  double v2;
  double v3;
  _QWORD v5[5];
  _QWORD v6[5];

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_3746C;
  v6[3] = &unk_28B960;
  v6[4] = *(_QWORD *)(a1 + 32);
  +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v6, 0.0, 0.0);
  v2 = *(double *)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 32), "maxSlideDistance");
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_374A0;
  v5[3] = &unk_28B960;
  v5[4] = *(_QWORD *)(a1 + 32);
  return +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v5, 0.0, v2 / v3);
}

void sub_3746C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundView"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

void sub_374A0(uint64_t a1)
{
  double v2;
  double v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "_minBackgroundViewAlpha");
  v3 = v2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundView"));
  objc_msgSend(v4, "setAlpha:", v3);

}

id sub_374F4(uint64_t a1)
{
  _QWORD v2[6];
  char v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_37574;
  v2[3] = &unk_28D040;
  v3 = *(_BYTE *)(a1 + 48);
  v2[4] = *(_QWORD *)(a1 + 32);
  v2[5] = *(_QWORD *)(a1 + 40);
  return +[UIView animateKeyframesWithDuration:delay:options:animations:completion:](UIView, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v2, 0, 0.0, 0.0);
}

id sub_37574(uint64_t a1)
{
  double v2;
  _QWORD *v3;
  double v4;
  _QWORD v6[5];
  _QWORD v7[5];
  _QWORD v8[5];

  if (*(_BYTE *)(a1 + 48))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_3767C;
    v8[3] = &unk_28B960;
    v8[4] = *(_QWORD *)(a1 + 32);
    v2 = 1.0;
    v3 = v8;
  }
  else
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_376F4;
    v7[3] = &unk_28B960;
    v7[4] = *(_QWORD *)(a1 + 32);
    +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v7, 0.0, 0.0);
    v4 = *(double *)(a1 + 40);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_3776C;
    v6[3] = &unk_28B960;
    v6[4] = *(_QWORD *)(a1 + 32);
    v2 = 0.18 / v4;
    v3 = v6;
  }
  return +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v3, 0.0, v2);
}

void sub_3767C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "titleLabel"));
  objc_msgSend(v2, "setAlpha:", 1.0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "leftArrowButton"));
  objc_msgSend(v3, "setAlpha:", 1.0);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rightArrowButton"));
  objc_msgSend(v4, "setAlpha:", 1.0);

}

void sub_376F4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "titleLabel"));
  objc_msgSend(v2, "setAlpha:", 1.0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "leftArrowButton"));
  objc_msgSend(v3, "setAlpha:", 1.0);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rightArrowButton"));
  objc_msgSend(v4, "setAlpha:", 1.0);

}

void sub_3776C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "titleLabel"));
  objc_msgSend(v2, "setAlpha:", 0.0);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "leftArrowButton"));
  objc_msgSend(v3, "setAlpha:", 0.0);

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "rightArrowButton"));
  objc_msgSend(v4, "setAlpha:", 0.0);

}

void sub_37908(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;

  v3 = objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    v4 = v3;
    (*((void (**)(id, BOOL))v3 + 2))(v3, a2 == 0);
    v3 = v4;
  }

}

void sub_39B3C(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", CFSTR("<>&")));
  v2 = (void *)qword_30D5B0;
  qword_30D5B0 = v1;

}

void sub_3ADF4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_3AE08(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "cacheMetadataDictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadataDictionary"));
  objc_msgSend(v2, "setValue:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

  return objc_msgSend(*(id *)(a1 + 32), "setMetadataDictionaryDirty:", 1);
}

void sub_3AF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_3AF74(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_3AF84(uint64_t a1)
{

}

void sub_3AF8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "cacheMetadataDictionary");
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadataDictionary"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "valueForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_3B538(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  uint64_t v5;
  id v6;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "topContentViewController"));
  v5 = BUProtocolCast(&OBJC_PROTOCOL___BCMessageObserving, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue(v5);

  objc_msgSend(v6, "viewController:didDisplayMessageWithId:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void sub_3B654(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(id, id, BOOL, id);
  id v7;

  v7 = a2;
  v5 = a3;
  v6 = (void (**)(id, id, BOOL, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v6)
    v6[2](v6, objc_msgSend(v7, "isEqualToString:", CFSTR("Y")), v7 != 0, v5);

}

void sub_3CCF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_3CD18(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_3CD28(uint64_t a1)
{

}

id sub_3CD30(uint64_t a1)
{
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 32), 0xFFFFFFFFFFFFFFFFLL);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 72), "addObjectsFromArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
}

void sub_3CD68(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  BCRemoteManagedObjectIDChanges *v13;
  id WeakRetained;
  id v15;
  NSObject *v16;
  uint64_t v17;
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  BCRemoteManagedObjectIDChanges *v22;
  uint64_t v23;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24)));
  objc_msgSend(v2, "setPredicate:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32));
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
    v3 = 2;
  else
    v3 = 1;
  objc_msgSend(v2, "setResultType:", v3);
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
  {
    v23 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40);
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v23, 1));
    objc_msgSend(v2, "setPropertiesToFetch:", v4);

  }
  else
  {
    objc_msgSend(v2, "setPropertiesToFetch:", 0);
  }
  v5 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  v18 = 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "executeFetchRequest:error:", v2, &v18));
  v7 = v18;
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
  {
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "valueForKey:"));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;
  }
  else
  {
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v12 = v6;
    v10 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v12;
  }

  v13 = -[BCRemoteManagedObjectIDChanges initWithAdded:updated:deleted:context:]([BCRemoteManagedObjectIDChanges alloc], "initWithAdded:updated:deleted:context:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), 0, 0, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8));
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 56));
  objc_msgSend(WeakRetained, "managedObjectBackgroundMonitor:fetchNotify:", *(_QWORD *)(a1 + 32), v13);

  v15 = BCRemoteManagedObjectIDMonitorLog();
  v16 = objc_claimAutoreleasedReturnValue(v15);
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    v17 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138543618;
    v20 = v17;
    v21 = 2112;
    v22 = v13;
    _os_log_impl(&dword_0, v16, OS_LOG_TYPE_DEFAULT, "%{public}@ FINISHED INITIALIZATION fetch:%@", buf, 0x16u);
  }

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_3D130(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  void *v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  id v17;
  void *v18;
  _QWORD v19[5];
  uint8_t buf[4];
  void *v21;
  __int16 v22;
  uint64_t v23;

  v2 = objc_opt_class(NSPersistentStoreCoordinator);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "object"));
  v4 = BUDynamicCast(v2, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  v6 = BCRemoteManagedObjectIDMonitorLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v8 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    v21 = v8;
    v22 = 2112;
    v23 = v9;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_DEFAULT, "%@ PersistentRemoteChangeNotification: %@", buf, 0x16u);
  }

  v11 = *(_QWORD *)(a1 + 40);
  v10 = (id *)(a1 + 40);
  v12 = *(void **)(v11 + 16);
  v13 = BCRemoteManagedObjectIDMonitorLog();
  v14 = objc_claimAutoreleasedReturnValue(v13);
  v15 = v14;
  if (v12 == v5)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v10, "currentObjectIdentifiers"));
      *(_DWORD *)buf = 138412290;
      v21 = v16;
      _os_log_impl(&dword_0, v15, OS_LOG_TYPE_DEFAULT, "Currently tracking objects: %@", buf, 0xCu);

    }
    v17 = *v10;
    v18 = (void *)*((_QWORD *)*v10 + 1);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_3D2FC;
    v19[3] = &unk_28B960;
    v19[4] = v17;
    objc_msgSend(v18, "performBlock:", v19);
  }
  else
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_1B445C((uint64_t *)v10, v15);

  }
}

void sub_3D2FC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  NSMutableSet *v10;
  __CFString *v11;
  __CFString *v12;
  id v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  __int128 v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *j;
  void *v29;
  void *v30;
  void *v31;
  unsigned int v32;
  BOOL v33;
  id v34;
  id v35;
  uint64_t v36;
  void *k;
  void *v38;
  void *v39;
  void *v40;
  unsigned int v41;
  unsigned int v42;
  NSMutableSet *v43;
  int v44;
  id v45;
  id v46;
  uint64_t v47;
  void *m;
  void *v49;
  void *v50;
  void *v51;
  NSObject *v52;
  id v53;
  BCRemoteManagedObjectIDChanges *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  NSObject *v59;
  uint64_t v60;
  NSObject *v61;
  id v62;
  NSObject *v63;
  void *v64;
  id WeakRetained;
  void *v66;
  void *v67;
  id v68;
  NSObject *v69;
  void *v70;
  NSObject *v71;
  void *v72;
  NSObject *v73;
  id v74;
  void *v75;
  __int128 v76;
  NSObject *v77;
  NSObject *obj;
  uint64_t v79;
  id v80;
  id v81;
  void *i;
  NSMutableSet *v83;
  NSMutableSet *v84;
  _QWORD v85[5];
  NSMutableSet *v86;
  NSMutableSet *v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  id v100;
  id v101;
  id v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  _QWORD block[6];
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t);
  void (*v112)(uint64_t);
  id v113;
  _BYTE v114[128];
  _BYTE v115[128];
  uint8_t v116[128];
  uint8_t buf[4];
  void *v118;
  __int16 v119;
  NSObject *v120;
  __int16 v121;
  id v122;
  __int16 v123;
  id v124;
  __int16 v125;
  id v126;
  __int16 v127;
  id v128;
  _BYTE v129[128];

  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "historyToken"));
  v77 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "_fetchPersistentHistoryWithHistoryToken:", v3));

  v4 = BCRemoteManagedObjectIDMonitorLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v77)
  {
    if (v6)
    {
      v7 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      v118 = v7;
      v119 = 2112;
      v120 = v77;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "%@ historyResult %@", buf, 0x16u);
    }

    v108 = 0;
    v109 = &v108;
    v110 = 0x3032000000;
    v111 = sub_3CD18;
    v112 = sub_3CD28;
    v113 = 0;
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(NSObject **)(v8 + 64);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_3DDB0;
    block[3] = &unk_28B700;
    block[4] = v8;
    block[5] = &v108;
    dispatch_sync(v9, block);
    v10 = objc_opt_new(NSMutableSet);
    v84 = objc_opt_new(NSMutableSet);
    v83 = objc_opt_new(NSMutableSet);
    v11 = *(__CFString **)(*(_QWORD *)(a1 + 32) + 40);
    if (!v11)
      v11 = CFSTR("objectID");
    v12 = v11;
    v13 = BCRemoteManagedObjectIDMonitorLog();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      v15 = *(void **)(a1 + 32);
      v16 = -[NSObject count](v77, "count");
      *(_DWORD *)buf = 138412546;
      v118 = v15;
      v119 = 2048;
      v120 = v16;
      _os_log_impl(&dword_0, v14, OS_LOG_TYPE_INFO, "%@ total transactions: %lu", buf, 0x16u);
    }

    v105 = 0u;
    v106 = 0u;
    v103 = 0u;
    v104 = 0u;
    obj = v77;
    v80 = -[NSObject countByEnumeratingWithState:objects:count:](obj, "countByEnumeratingWithState:objects:count:", &v103, v129, 16);
    if (v80)
    {
      v79 = *(_QWORD *)v104;
      *(_QWORD *)&v17 = 138413570;
      v76 = v17;
      do
      {
        for (i = 0; i != v80; i = (char *)i + 1)
        {
          if (*(_QWORD *)v104 != v79)
            objc_enumerationMutation(obj);
          v18 = *(void **)(*((_QWORD *)&v103 + 1) + 8 * (_QWORD)i);
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context", v76));
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "entityName"));
          v101 = 0;
          v102 = 0;
          v100 = 0;
          objc_msgSend(v18, "bc_getManagedObjectsWith:entityName:inserted:updated:tombstones:", v19, v20, &v102, &v101, &v100);
          v21 = v102;
          v22 = v101;
          v81 = v100;

          v23 = BCRemoteManagedObjectIDMonitorLog();
          v24 = objc_claimAutoreleasedReturnValue(v23);
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
          {
            v50 = *(void **)(a1 + 32);
            v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "timestamp"));
            v52 = objc_claimAutoreleasedReturnValue(objc_msgSend(v51, "description"));
            v53 = objc_msgSend(v18, "transactionNumber");
            *(_DWORD *)buf = v76;
            v118 = v50;
            v119 = 2114;
            v120 = v52;
            v121 = 2048;
            v122 = v53;
            v123 = 2112;
            v124 = v21;
            v125 = 2112;
            v126 = v22;
            v127 = 2112;
            v128 = v81;
            _os_log_debug_impl(&dword_0, v24, OS_LOG_TYPE_DEBUG, "%@ [Transaction] %{public}@ transaction# %lld, pulled insertedObjects:%@ updatedObjects:%@ deletedTombstones:%@", buf, 0x3Eu);

          }
          v98 = 0u;
          v99 = 0u;
          v96 = 0u;
          v97 = 0u;
          v25 = v21;
          v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v96, v116, 16);
          if (v26)
          {
            v27 = *(_QWORD *)v97;
            do
            {
              for (j = 0; j != v26; j = (char *)j + 1)
              {
                if (*(_QWORD *)v97 != v27)
                  objc_enumerationMutation(v25);
                v29 = *(void **)(*((_QWORD *)&v96 + 1) + 8 * (_QWORD)j);
                v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v29, "valueForKey:", v12));
                v31 = *(void **)(*(_QWORD *)(a1 + 32) + 32);
                if (v31)
                  v32 = objc_msgSend(v31, "evaluateWithObject:", v29);
                else
                  v32 = 1;
                if (v30)
                  v33 = v32 == 0;
                else
                  v33 = 1;
                if (!v33)
                  -[NSMutableSet addObject:](v10, "addObject:", v30);

              }
              v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v96, v116, 16);
            }
            while (v26);
          }

          v94 = 0u;
          v95 = 0u;
          v93 = 0u;
          v92 = 0u;
          v34 = v22;
          v35 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v92, v115, 16);
          if (v35)
          {
            v36 = *(_QWORD *)v93;
            do
            {
              for (k = 0; k != v35; k = (char *)k + 1)
              {
                if (*(_QWORD *)v93 != v36)
                  objc_enumerationMutation(v34);
                v38 = *(void **)(*((_QWORD *)&v92 + 1) + 8 * (_QWORD)k);
                v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "valueForKey:", v12));
                if (v39 && objc_msgSend(*(id *)(a1 + 32), "_objectHasChangesOfInterest:", v38))
                {
                  v40 = *(void **)(*(_QWORD *)(a1 + 32) + 32);
                  v41 = v40 ? objc_msgSend(v40, "evaluateWithObject:", v38) : 1;
                  v42 = objc_msgSend((id)v109[5], "containsObject:", v39);
                  v43 = v10;
                  if (((v41 ^ 1 | v42) & 1) == 0
                    || (v44 = v42 ^ 1, v43 = v84, (v41 | v44) != 1)
                    || (v43 = v83, ((v41 ^ 1 | v44) & 1) == 0))
                  {
                    -[NSMutableSet addObject:](v43, "addObject:", v39);
                  }
                }

              }
              v35 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v92, v115, 16);
            }
            while (v35);
          }

          v90 = 0u;
          v91 = 0u;
          v88 = 0u;
          v89 = 0u;
          v45 = v81;
          v46 = objc_msgSend(v45, "countByEnumeratingWithState:objects:count:", &v88, v114, 16);
          if (v46)
          {
            v47 = *(_QWORD *)v89;
            do
            {
              for (m = 0; m != v46; m = (char *)m + 1)
              {
                if (*(_QWORD *)v89 != v47)
                  objc_enumerationMutation(v45);
                v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v88 + 1)
                                                                                   + 8 * (_QWORD)m), "valueForKey:", v12));
                if (v49 && objc_msgSend((id)v109[5], "containsObject:", v49))
                  -[NSMutableSet addObject:](v84, "addObject:", v49);

              }
              v46 = objc_msgSend(v45, "countByEnumeratingWithState:objects:count:", &v88, v114, 16);
            }
            while (v46);
          }

        }
        v80 = -[NSObject countByEnumeratingWithState:objects:count:](obj, "countByEnumeratingWithState:objects:count:", &v103, v129, 16);
      }
      while (v80);
    }

    if (-[NSMutableSet count](v10, "count")
      || -[NSMutableSet count](v84, "count")
      || -[NSMutableSet count](v83, "count"))
    {
      v54 = [BCRemoteManagedObjectIDChanges alloc];
      v55 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableSet allObjects](v10, "allObjects"));
      v56 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableSet allObjects](v83, "allObjects"));
      v57 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableSet allObjects](v84, "allObjects"));
      v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "context"));
      v59 = -[BCRemoteManagedObjectIDChanges initWithAdded:updated:deleted:context:](v54, "initWithAdded:updated:deleted:context:", v55, v56, v57, v58);

      v60 = *(_QWORD *)(a1 + 32);
      v61 = *(NSObject **)(v60 + 64);
      v85[0] = _NSConcreteStackBlock;
      v85[1] = 3221225472;
      v85[2] = sub_3DDE8;
      v85[3] = &unk_28C5F0;
      v85[4] = v60;
      v86 = v84;
      v87 = v10;
      dispatch_sync(v61, v85);
      v62 = BCRemoteManagedObjectIDMonitorLog();
      v63 = objc_claimAutoreleasedReturnValue(v62);
      if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
      {
        v64 = *(void **)(a1 + 32);
        *(_DWORD *)buf = 138412546;
        v118 = v64;
        v119 = 2112;
        v120 = v59;
        _os_log_impl(&dword_0, v63, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor didSaveNotify %@", buf, 0x16u);
      }

      WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 56));
      objc_msgSend(WeakRetained, "managedObjectBackgroundMonitor:didSaveNotify:", *(_QWORD *)(a1 + 32), v59);

    }
    else
    {
      v74 = BCRemoteManagedObjectIDMonitorLog();
      v59 = objc_claimAutoreleasedReturnValue(v74);
      if (os_log_type_enabled(v59, OS_LOG_TYPE_DEFAULT))
      {
        v75 = *(void **)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v118 = v75;
        _os_log_impl(&dword_0, v59, OS_LOG_TYPE_DEFAULT, "%@ no relevant changes from this notification", buf, 0xCu);
      }
    }

    v66 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject lastObject](obj, "lastObject"));
    v67 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v66, "token"));

    v68 = BCRemoteManagedObjectIDMonitorLog();
    v69 = objc_claimAutoreleasedReturnValue(v68);
    if (os_log_type_enabled(v69, OS_LOG_TYPE_DEFAULT))
    {
      v70 = *(void **)(a1 + 32);
      v71 = objc_claimAutoreleasedReturnValue(objc_msgSend(v70, "historyToken"));
      *(_DWORD *)buf = 138412802;
      v118 = v70;
      v119 = 2112;
      v120 = v71;
      v121 = 2112;
      v122 = v67;
      _os_log_impl(&dword_0, v69, OS_LOG_TYPE_DEFAULT, "%@ Updated NSPersistentHistoryToken from %@ to %@", buf, 0x20u);

    }
    objc_msgSend(*(id *)(a1 + 32), "setHistoryToken:", v67);

    _Block_object_dispose(&v108, 8);
  }
  else
  {
    if (v6)
    {
      v72 = *(void **)(a1 + 32);
      v73 = objc_claimAutoreleasedReturnValue(objc_msgSend(v72, "historyToken"));
      *(_DWORD *)buf = 138412546;
      v118 = v72;
      v119 = 2112;
      v120 = v73;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "%@ No history changes with %@.", buf, 0x16u);

    }
  }

}

void sub_3DD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  _Block_object_dispose(&a69, 8);
  _Unwind_Resume(a1);
}

void sub_3DDB0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_3DDE8(_QWORD *a1)
{
  objc_msgSend(*(id *)(a1[4] + 72), "minusSet:", a1[5]);
  return objc_msgSend(*(id *)(a1[4] + 72), "unionSet:", a1[6]);
}

void sub_3E790(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_3F504(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageEntries"));
  v3 = objc_msgSend(v2, "mutableCopy");

  objc_msgSend(v3, "removeObject:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setImageEntries:", v3);

}

void sub_3F5EC(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageEntries"));
  v3 = objc_msgSend(v2, "mutableCopy");

  objc_msgSend(v3, "addObject:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 40), "setImageSet:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 32), "setImageEntries:", v3);

}

void sub_3F928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_3F960(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_3F970(uint64_t a1)
{

}

void sub_3F978(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageEntries"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t AriadneTrace_AppLaunchMilestone_PopulateTabsStart()
{
  return kdebug_trace(725353712, 114, 0, 0, 0);
}

uint64_t AriadneTrace_AppLaunchMilestone_PopulateTabsEnd()
{
  return kdebug_trace(725353712, 115, 0, 0, 0);
}

uint64_t AriadneTrace_AudiobookReceivedInitiatePlaybackOfContentItem()
{
  return kdebug_trace(725353460, 0, 0, 0, 0);
}

uint64_t AriadneTrace_AudiobookDispatchedInitiatePlaybackOfContentItem()
{
  return kdebug_trace(725353464, 0, 0, 0, 0);
}

uint64_t AriadneTrace_AudiobookBeginPlayback()
{
  return kdebug_trace(725353448, 0, 0, 0, 0);
}

uint64_t IMAccessibilitySetShouldInstallCategories(uint64_t result)
{
  byte_308368 = result;
  return result;
}

void IMAccessibilityInitialize()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (IMAccessibilityShouldPerformValidationChecks())
  {
    __IMAccessibilityValidateIsKindOfClass(CFSTR("IMCustomSlider"), CFSTR("UISlider"));
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKAudiobookPlayer"), CFSTR("positionInCurentChapter"), "d", v0, v1, v2, v3, v4, 0);
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKAudiobookPlayer"), CFSTR("durationOfCurrentChapter"), "d", v5, v6, v7, v8, v9, 0);
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("IMMediaPlayer"), CFSTR("currentMediaItem"), "@", v10, v11, v12, v13, v14, 0);
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("IMCustomSlider"), CFSTR("delegate"), "@", v15, v16, v17, v18, v19, 0);
    __IMAccessibilityValidateProtocolMethod(CFSTR("IMMediaItem"), CFSTR("chapters"), 1, 1);
    __IMAccessibilityValidateProtocolMethod(CFSTR("IMMediaChapter"), CFSTR("assetTimeRange"), 1, 1);
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("UISlider"), CFSTR("_accessibilityBumpValue:"), "v", v20, v21, v22, v23, v24, "B");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("IMMediaPlayer"), CFSTR("currentChapter"), "q", v25, v26, v27, v28, v29, 0);
    __IMAccessibilityValidateIvar(CFSTR("IMGridViewCell"), "_title");
    __IMAccessibilityValidateIvar(CFSTR("IMGridViewCell"), "_title");
    __IMAccessibilityValidateIvar(CFSTR("IMGridView"), "_grabbedCell");
    __IMAccessibilityValidateIvar(CFSTR("IMPopupController"), "_mask");
    __IMAccessibilityValidateIvarType(CFSTR("IMRadialProgressButton"), "_progress", "f");
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMPopupController"), CFSTR("dismissPopupViewControllerAnimated:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMPopupController"), CFSTR("presentPopupViewController:parent:dimmedView:animated:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEAnnotationPopoverViewController"), CFSTR("didHide"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlight"), CFSTR("annotation"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightColorEditorController"), CFSTR("viewDidLoad"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightColorEditorController"), CFSTR("colorControls"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightColorEditorController"), CFSTR("addNoteButton"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightColorEditorController"), CFSTR("deleteButton"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightColorEditorController"), CFSTR("rightArrowButton"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightColorEditorController"), CFSTR("showColorControlsMenu:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightColorEditorController"), CFSTR("calloutBar"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightedTextLabel"), CFSTR("annotation"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEAnnotation"), CFSTR("annotatedAttributedString"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridViewCell"), CFSTR("closeBox"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridViewCell"), CFSTR("isEditing"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridViewCell"), CFSTR("title"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridView"), CFSTR("rangeOfVisibleCells"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridViewCell"), CFSTR("deleteConfirmationControlWasClicked:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridView"), CFSTR("numberOfColumns"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridView"), CFSTR("numberOfRows"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridView"), CFSTR("setGrabbedCell:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMGridView"), CFSTR("_swapGrabbedCell:withOtherCell:"));
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("IMViewController"), CFSTR("_transitionFromViewController:toViewController:transition:reverse:"), "@", v30, v31, v32, v33, v34, "@");
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMFlipViewTransition"), CFSTR("flipClosed"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEAnnotationPopoverViewController"), CFSTR("didShow"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("AEAudioBookSleepViewController"), CFSTR("UIViewController"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEHighlightColorEditorController"), CFSTR("releaseOutlets"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AENoteEditorViewController"), CFSTR("viewDidLoad"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AENoteEditorViewController"), CFSTR("textView"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AENoteEditorViewController"), CFSTR("delegate"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AENotePopoverEditorController"), CFSTR("noteEditorViewController"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEMarginNote"), CFSTR("annotation"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("AENoteEditorViewController"), CFSTR("UIViewController"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("AEHighlightColorEditorController"), CFSTR("AEAnnotationPopoverViewController"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("AEAnnotationPopoverViewController"), CFSTR("UIViewController"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("IMGridView"), CFSTR("UIScrollView"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMTouchInsetsButton"), CFSTR("touchInsets"));
  }
  if (byte_308368)
  {
    IMAccessibilityInstallSafeCategory(CFSTR("IMUIViewAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMCustomSliderAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMAccessibilityLabelAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMGridViewCellAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMViewControllerAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMGridViewAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMFlipViewTransitionAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("AEAudioBookSleepViewControllerAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("AEAudioNoHitPinningViewAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("AENotePopoverEditorControllerAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("AENoteEditorViewControllerAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("AEAnnotationPopoverViewControllerAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("AEHighlightColorEditorControllerAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("AEMarginNotesControllerAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("AEHighlightedTextLabelAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMRadialProgressButtonAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMTouchInsetsButtonAccessibility"));
    IMAccessibilityInstallSafeCategory(CFSTR("IMPassthroughViewAccessibility"));
  }
}

BOOL sub_40218(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 32) == a2;
}

uint64_t sub_4027C(uint64_t a1, uint64_t a2)
{
  return objc_opt_isKindOfClass(a2, *(_QWORD *)(a1 + 32)) & 1;
}

uint64_t sub_4050C(uint64_t a1, uint64_t a2)
{
  return objc_opt_isKindOfClass(a2, *(_QWORD *)(a1 + 32)) & 1;
}

BOOL sub_4053C(id a1, id a2)
{
  return _objc_msgSend(a2, "isAccessibilityElement");
}

id IMAXLocString(void *a1)
{
  id v1;
  void *v2;
  NSBundle *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = a1;
  v2 = (void *)qword_30D5C8;
  if (qword_30D5C8
    || (v3 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(IMAccessibility)), v4 = objc_claimAutoreleasedReturnValue(v3), v5 = (void *)qword_30D5C8, qword_30D5C8 = v4, v5, (v2 = (void *)qword_30D5C8) != 0))
  {
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, &stru_296430, CFSTR("IMAccessibility")));
  }
  else
  {
    v6 = 0;
  }
  if (v6 == v1)
  {
    if (IMAccessibilityShouldPerformValidationChecks())
    {
      NSLog(CFSTR("UIAccessibilityError: String could not be found for key: %@"), v1);
      abort();
    }

    v6 = 0;
  }

  return v6;
}

uint64_t _accessibilityDomain()
{
  uint64_t result;

  result = qword_30D5D0;
  if (!qword_30D5D0)
  {
    result = CPCopySharedResourcesPreferencesDomainForDomain(kAXSAccessibilityPreferenceDomain);
    qword_30D5D0 = result;
  }
  return result;
}

id IMAXDurationDescription(double a1)
{
  double v1;
  NSDateComponentsFormatter *v2;
  void *v3;

  v1 = floor(a1);
  v2 = objc_opt_new(NSDateComponentsFormatter);
  -[NSDateComponentsFormatter setUnitsStyle:](v2, "setUnitsStyle:", 3);
  -[NSDateComponentsFormatter setAllowedUnits:](v2, "setAllowedUnits:", 224);
  v3 = (void *)objc_claimAutoreleasedReturnValue(-[NSDateComponentsFormatter stringFromTimeInterval:](v2, "stringFromTimeInterval:", (double)(uint64_t)v1));

  return v3;
}

void IMAXAccessibilityPerformSafeBlock(void *a1)
{
  void (**v1)(void);

  v1 = a1;
  v1[2]();

}

BOOL IMAccessibilityIsInvertColorsEnabled()
{
  return UIAccessibilityIsInvertColorsEnabled();
}

uint64_t IMAccessibilityIsFKAEnabledWithKeyboardAttached()
{
  uint64_t result;

  result = _AXSFullKeyboardAccessEnabled();
  if ((_DWORD)result)
    return GSEventIsHardwareKeyboardAttached() != 0;
  return result;
}

void sub_4097C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_40994(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetStorage"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", v3));

  if (!v9)
  {
    v9 = (id)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetStorage"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
    objc_msgSend(v4, "setObject:forKeyedSubscript:", v9, v5);

  }
  v6 = objc_msgSend(*(id *)(a1 + 40), "copy");
  if (((unsigned __int16)objc_msgSend(v6, "requestOptions") & 0x400) != 0)
    v7 = objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", 10.0));
  else
    v7 = objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  v8 = (void *)v7;
  objc_msgSend(v6, "setLastUsed:", v7);

  objc_msgSend(v9, "setObject:forKeyedSubscript:", v6, *(_QWORD *)(a1 + 48));
  +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", v6, CFSTR("MemoryDataStoreSaveImage"));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(v6, "costFor:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setTotalStoredCost:", (char *)objc_msgSend(*(id *)(a1 + 32), "totalStoredCost")+ *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24));

}

void sub_40B94(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  int v10;
  uint64_t v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_imageSetIDFromImageEntryLocation:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetStorage"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", v2));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
    if (v5)
    {
      +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", v5, CFSTR("MemoryDataStoreDeleteImage"));
      objc_msgSend(*(id *)(a1 + 32), "setTotalStoredCost:", (_BYTE *)objc_msgSend(*(id *)(a1 + 32), "totalStoredCost") - (_BYTE *)objc_msgSend(v5, "costFor:", 0));
      v6 = BCImageCacheLog();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v8 = *(_QWORD *)(a1 + 40);
        v10 = 138412290;
        v11 = v8;
        _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "BICMemoryDataStore: RAM: deleting: %@", (uint8_t *)&v10, 0xCu);
      }

      objc_msgSend(v4, "removeObjectForKey:", *(_QWORD *)(a1 + 40));
      if (!objc_msgSend(v4, "count"))
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetStorage"));
        objc_msgSend(v9, "removeObjectForKey:", v2);

      }
    }

  }
}

void sub_40DA8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  int v8;
  void *v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_imageSetIDFromImageEntryLocation:", *(_QWORD *)(a1 + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetStorage"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", v2));

  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
    if (objc_msgSend(v5, "quality") >= 2)
    {
      objc_msgSend(v5, "setQuality:", 3);
      v6 = BCImageCacheLog();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        v8 = 138412290;
        v9 = v5;
        _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "BICMemoryDataStore: RAM: Marking non primary as old: %@", (uint8_t *)&v8, 0xCu);
      }

    }
  }

}

void sub_4133C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_41354(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_41364(uint64_t a1)
{

}

void sub_4136C(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetStorage"));
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));

  v3 = v8;
  if (v8)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 48)));
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "setLastUsed:", v7);

    v3 = v8;
  }

}

void sub_41630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_41648(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "totalStoredCost");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_418C8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetStorage", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allValues"));

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v11;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v11 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(a1 + 40);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)v7), "allKeys"));
        objc_msgSend(v8, "addObjectsFromArray:", v9);

        v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v5);
  }

}

id sub_41A8C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetStorage"));
  objc_msgSend(v2, "removeAllObjects");

  return objc_msgSend(*(id *)(a1 + 32), "setTotalStoredCost:", 0);
}

void sub_43804(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  __int128 v7;
  id v8;
  _QWORD block[5];
  id v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderingController"));
  v3 = *(_QWORD *)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "annotationUuid"));
  objc_msgSend(v2, "addHighlight:forData:", v3, v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderingController"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "highlightLayers"));

  block[1] = 3221225472;
  v7 = *(_OWORD *)(a1 + 80);
  v12 = *(_OWORD *)(a1 + 64);
  block[0] = _NSConcreteStackBlock;
  block[2] = sub_438F4;
  block[3] = &unk_28D3B8;
  block[4] = *(_QWORD *)(a1 + 32);
  v10 = v6;
  v11 = *(_QWORD *)(a1 + 56);
  v13 = v7;
  v8 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_438F4(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "window"));

  if (v2)
  {
    v10 = 0u;
    v11 = 0u;
    v8 = 0u;
    v9 = 0u;
    v3 = *(id *)(a1 + 40);
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v9;
      do
      {
        v7 = 0;
        do
        {
          if (*(_QWORD *)v9 != v6)
            objc_enumerationMutation(v3);
          objc_msgSend(*(id *)(a1 + 32), "p_renderHighlightLayer:inContext:flippingOriginWithY:", *(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v7), *(_QWORD *)(a1 + 48), CGRectGetHeight(*(CGRect *)(a1 + 56)), (_QWORD)v8);
          v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      }
      while (v5);
    }

  }
}

void sub_4406C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_44098(_QWORD *a1, CTLineRef line, uint64_t a3, _BYTE *a4)
{
  double TypographicBounds;
  uint64_t v7;
  double *v8;
  double v9;
  uint64_t v10;
  double v11;
  CGFloat leading;
  CGFloat descent;
  CGFloat ascent;

  if (a1[6] == a3)
  {
    *a4 = 1;
  }
  else
  {
    descent = 0.0;
    ascent = 0.0;
    leading = 0.0;
    TypographicBounds = CTLineGetTypographicBounds(line, &ascent, &descent, &leading);
    v7 = *(_QWORD *)(a1[4] + 8);
    v8 = (double *)(a1[7] + 16 * a3);
    v9 = TypographicBounds + *v8;
    if (*(double *)(v7 + 24) >= v9)
      v9 = *(double *)(v7 + 24);
    *(double *)(v7 + 24) = v9;
    v10 = *(_QWORD *)(a1[5] + 8);
    v11 = *(double *)(v10 + 24);
    if (v11 >= v8[1] - descent)
      v11 = v8[1] - descent;
    *(double *)(v10 + 24) = v11;
  }
}

uint64_t sub_45800(uint64_t a1, uint64_t a2, char a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "representedObjectForCardAtIndex:", a2));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverHost"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "coverSourceForRepresentedObject:", v7));

  if (v9)
  {
    if (objc_msgSend(v9, "isInNonHorizontalLayout"))
      objc_msgSend(*(id *)(a1 + 32), "setCoversAreInNonHorizontalLayout:", 1);
    if ((a3 & 1) != 0
      || (v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverHost")),
          v11 = (char *)objc_msgSend(v10, "visibilityOfCoverSource:ignoringYAxis:", v9, 0),
          v10,
          v12 = 0,
          v11 != (_BYTE *)&dword_0 + 2))
    {
      v13 = *(void **)(a1 + 40);
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2));
      objc_msgSend(v13, "setObject:forKeyedSubscript:", v9, v14);

      v12 = 1;
    }
  }
  else
  {
    v12 = 0;
  }

  return v12;
}

uint64_t sub_45914(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "visibleCardRange");
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

BOOL sub_45A90(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  _BOOL8 v25;
  CGRect v27;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCoverSourceByIndex"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v5));

  v7 = *(void **)(a1 + 40);
  objc_msgSend(v6, "cardStackTransitioningCoverSourceFrame");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "cardStackTransitioningCoverSourceReferenceView"));
  objc_msgSend(v7, "convertRect:fromView:", v16, v9, v11, v13, v15);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v27.origin.x = v18;
  v27.origin.y = v20;
  v27.size.width = v22;
  v27.size.height = v24;
  v25 = vabdd_f64(*(double *)(a1 + 48), CGRectGetMaxY(v27)) <= 10.0;

  return v25;
}

uint64_t sub_45D14(uint64_t a1, unint64_t a2)
{
  int64_t v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  BCCardStackTransitioningPlaceholderCoverSource *v19;
  id v20;
  unint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  CGRect v28;

  v4 = *(_QWORD *)(a1 + 56);
  if (v4 <= (uint64_t)a2)
    v4 = *(_QWORD *)(a1 + 64);
  v5 = *(void **)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v4));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v6));

  objc_msgSend(v7, "cardStackTransitioningCoverSourceFrame");
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "cardStackTransitioningCoverSourceReferenceView"));
  v17 = a2 - v4;
  if (objc_msgSend(*(id *)(a1 + 40), "_isRTL"))
    v18 = -v17;
  else
    v18 = v17;
  v28.origin.x = v9;
  v28.origin.y = v11;
  v28.size.width = v13;
  v28.size.height = v15;
  v19 = -[BCCardStackTransitioningPlaceholderCoverSource initWithCoverFrame:referenceView:]([BCCardStackTransitioningPlaceholderCoverSource alloc], "initWithCoverFrame:referenceView:", v16, v9 + (CGRectGetWidth(v28) + 28.0) * (double)v18, v11, v13, v15);
  v20 = objc_msgSend(*(id *)(a1 + 40), "visibleCardRange");
  if (a2 >= (unint64_t)v20 && a2 - (unint64_t)v20 < v21
    || (v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "coverHost")),
        v23 = (char *)objc_msgSend(v22, "visibilityOfCoverSource:ignoringYAxis:", v19, 0),
        v22,
        v24 = 0,
        v23 != (_BYTE *)&dword_0 + 2))
  {
    v25 = *(void **)(a1 + 48);
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2));
    objc_msgSend(v25, "setObject:forKeyedSubscript:", v19, v26);

    v24 = 1;
  }

  return v24;
}

uint64_t sub_46120(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;

  v2 = *(_QWORD *)(a1 + 40);
  v4 = a2 >= v2;
  v3 = a2 - v2;
  v4 = !v4 || v3 >= *(_QWORD *)(a1 + 48);
  if (!v4)
    return 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_coverSourceAtIndex:", a2));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverHost"));
  v8 = 1;
  v9 = (char *)objc_msgSend(v7, "visibilityOfCoverSource:ignoringYAxis:", v6, 1);

  if (v9 != (_BYTE *)&dword_0 + 1)
    return 0;
  return v8;
}

void sub_463FC(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_coverSourceAtIndex:", a2));
  objc_msgSend(v3, "cardStackTransitioningCoverSourceReplaceReferenceView:", *(_QWORD *)(a1 + 40));

}

void sub_46544(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "representedObjectForCardAtIndex:", a2));

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coverHost"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "coverSourceForRepresentedObject:", v9));

  if (v6)
  {
    v7 = *(void **)(a1 + 40);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v6, v8);

  }
}

void sub_46C48(uint64_t a1, uint64_t a2)
{
  BCCardStackTransitionCoverMoveAnimationItem *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v13 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%ld-cover-move"), a2));
  v4 = -[BCCardStackTransitionAnimationItem initWithKey:]([BCCardStackTransitionCoverMoveAnimationItem alloc], "initWithKey:", v13);
  -[BCCardStackTransitionCoverMoveAnimationItem setIsFocusedCover:](v4, "setIsFocusedCover:", *(_QWORD *)(a1 + 48) == a2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCoverSourceByIndex"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v6));
  -[BCCardStackTransitionCoverMoveAnimationItem setCoverSource:](v4, "setCoverSource:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardCoverSourceByIndex"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v9));
  -[BCCardStackTransitionCoverMoveAnimationItem setCardCoverSource:](v4, "setCardCoverSource:", v10);

  if ((objc_msgSend(*(id *)(a1 + 32), "isDismiss") & 1) != 0)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCardIndexesWithAdjustedCoverSource"));
    -[BCCardStackTransitionCoverMoveAnimationItem setNeedsFadeInOnDismiss:](v4, "setNeedsFadeInOnDismiss:", objc_msgSend(v11, "containsIndex:", a2));

  }
  else
  {
    -[BCCardStackTransitionCoverMoveAnimationItem setNeedsFadeInOnDismiss:](v4, "setNeedsFadeInOnDismiss:", 0);
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "clippedCoverIndexes"));
  -[BCCardStackTransitionCoverMoveAnimationItem setAnimatesInInnerContainerView:](v4, "setAnimatesInInnerContainerView:", objc_msgSend(v12, "containsIndex:", a2));

  objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);
}

void sub_46DF4(uint64_t a1, uint64_t a2)
{
  BCCardStackTransitionCardMoveAnimationItem *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;

  v27 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%ld-card-move"), a2));
  v4 = -[BCCardStackTransitionAnimationItem initWithKey:]([BCCardStackTransitionCardMoveAnimationItem alloc], "initWithKey:", v27);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fakeCoverSourceByIndex"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v6));
  if (v7)
  {
    -[BCCardStackTransitionCardMoveAnimationItem setCoverSource:](v4, "setCoverSource:", v7);
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCoverSourceByIndex"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", v9));
    -[BCCardStackTransitionCardMoveAnimationItem setCoverSource:](v4, "setCoverSource:", v10);

  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardByIndex"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", v12));
  -[BCCardStackTransitionCardMoveAnimationItem setCard:](v4, "setCard:", v13);

  -[BCCardStackTransitionCardMoveAnimationItem setIsFocusedCard:](v4, "setIsFocusedCard:", *(_QWORD *)(a1 + 48) == a2);
  v14 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardStackTransitionCardMoveAnimationItem coverSource](v4, "coverSource"));

  if (!v14)
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fakeCoverSourceByIndex"));
    v16 = a2 - 1;
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2 - 1));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "objectForKeyedSubscript:", v17));
    if (v18)
    {
      -[BCCardStackTransitionCardMoveAnimationItem setCoverSource:](v4, "setCoverSource:", v18);
    }
    else
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCoverSourceByIndex"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v16));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKeyedSubscript:", v20));
      -[BCCardStackTransitionCardMoveAnimationItem setCoverSource:](v4, "setCoverSource:", v21);

    }
    v22 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardStackTransitionCardMoveAnimationItem coverSource](v4, "coverSource"));

    if (!v22)
    {
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "fakeCoverSourceByIndex"));
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "objectForKeyedSubscript:", &off_2A9428));
      if (v24)
      {
        -[BCCardStackTransitionCardMoveAnimationItem setCoverSource:](v4, "setCoverSource:", v24);
      }
      else
      {
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCoverSourceByIndex"));
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "objectForKeyedSubscript:", &off_2A9428));
        -[BCCardStackTransitionCardMoveAnimationItem setCoverSource:](v4, "setCoverSource:", v26);

      }
    }
  }
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);

}

void sub_471D4(uint64_t a1, uint64_t a2)
{
  BCCardStackTransitionCoverFadeAnimationItem *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%ld-fade"), a2));
  v4 = -[BCCardStackTransitionAnimationItem initWithKey:]([BCCardStackTransitionCoverFadeAnimationItem alloc], "initWithKey:", v8);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCoverSourceByIndex"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v6));
  -[BCCardStackTransitionCoverFadeAnimationItem setCoverSource:](v4, "setCoverSource:", v7);

  objc_msgSend(*(id *)(a1 + 40), "addObject:", v4);
}

void sub_4754C(uint64_t a1, void *a2, void *a3)
{
  double v5;
  double v6;
  id v7;

  v7 = a3;
  v5 = (double)((unint64_t)objc_msgSend(a2, "integerValue") - *(_QWORD *)(a1 + 40));
  if (objc_msgSend(*(id *)(a1 + 32), "_isRTL"))
    v6 = -(v5 * 0.0);
  else
    v6 = v5 * 0.0;
  objc_msgSend(v7, "cardStackTransitioningCardPrepare:extraXOffsetForAnimation:", objc_msgSend(*(id *)(a1 + 32), "isDismiss") ^ 1, v6);

}

void sub_47718(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;

  v9 = a2;
  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v9));

  if (!v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "cardStackTransitioningCoverSourceHide"));
    v8 = objc_retainBlock(v7);
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v8, v9);

  }
}

void sub_47878(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;

  v5 = a2;
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "cardStackTransitioningCoverSourceHide"));
  v6 = objc_retainBlock(v7);
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v6, v5);

}

void sub_4799C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = a3;
  objc_msgSend(v4, "cardStackTransitioningCardFinalize:", objc_msgSend(v3, "isDismiss") ^ 1);

}

void sub_47DCC(id a1, NSNumber *a2, id a3)
{
  (*((void (**)(id))a3 + 2))(a3);
}

id sub_48A8C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "dq_refreshUbiquityAvailabilityStatus");
}

void sub_48BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_48BD4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_48BE4(uint64_t a1)
{

}

void sub_48BEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentUbiquityIdentityToken"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_48DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_48E04(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "dq_isICloudDriveEnabled");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_48EF8(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (v3)
    BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Utilities/BCUbiquityStatusMonitor.m", 129, (uint64_t)"-[IMUbiquityStatusMonitor addObserver:]_block_invoke", (uint64_t)"[self.observers containsObject:observer] == NO", CFSTR("%p is already an observer"), v4, v5, v6, *(_QWORD *)(a1 + 40));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  objc_msgSend(v7, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_4905C(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (v3)
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
    objc_msgSend(v4, "removeObject:", *(_QWORD *)(a1 + 40));

  }
}

id sub_491A0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coordinatingObserver"));

  if (v2)
    BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Utilities/BCUbiquityStatusMonitor.m", 157, (uint64_t)"-[IMUbiquityStatusMonitor registerCoordinatingObserver:]_block_invoke", (uint64_t)"!self.coordinatingObserver", 0, v3, v4, v5, v7);
  return _objc_msgSend(*(id *)(a1 + 32), "setCoordinatingObserver:", *(_QWORD *)(a1 + 40));
}

void sub_4926C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned int v8;
  _BOOL8 v9;
  id v10;
  NSObject *v11;
  const __CFString *v12;
  id v13;
  NSObject *v14;
  const __CFString *v15;
  void *v16;
  void *v17;
  id v18;
  NSObject *v19;
  id v20;
  NSObject *v21;
  int v22;
  const __CFString *v23;

  v2 = BCUbiquityEnabledLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    LOWORD(v22) = 0;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BCUbiquityStatusMonitor: restartObserving was called", (uint8_t *)&v22, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "dq_refreshUbiquityAvailabilityStatus");
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastArchivedUbiquityIdentityToken"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentUbiquityIdentityToken"));
  if (v4 == v5)
  {
    v8 = 0;
  }
  else
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastArchivedUbiquityIdentityToken"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentUbiquityIdentityToken"));
    v8 = objc_msgSend(v6, "isEqual:", v7) ^ 1;

  }
  v9 = +[BCSyncUserDefaults isICloudDriveSyncOptedIn](BCSyncUserDefaults, "isICloudDriveSyncOptedIn");
  v10 = BCUbiquityEnabledLog();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    v12 = CFSTR("NO");
    if (v9)
      v12 = CFSTR("YES");
    v22 = 138412290;
    v23 = v12;
    _os_log_impl(&dword_0, v11, OS_LOG_TYPE_INFO, "BCUbiquityStatusMonitor: restartObserving cloudDriveOptedIn:%@", (uint8_t *)&v22, 0xCu);
  }

  if (v9 != objc_msgSend(*(id *)(a1 + 32), "archivedCloudDriveOptedIn"))
  {
    objc_msgSend(*(id *)(a1 + 32), "setArchivedCloudDriveOptedIn:", v9);
    v13 = BCUbiquityEnabledLog();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
    {
      v15 = CFSTR("disabled");
      if (v9)
        v15 = CFSTR("enabled");
      v22 = 138412290;
      v23 = v15;
      _os_log_impl(&dword_0, v14, OS_LOG_TYPE_INFO, "BCUbiquityStatusMonitor: restartObserving - Books / iCloud Drive switch was %@", (uint8_t *)&v22, 0xCu);
    }

    goto LABEL_17;
  }
  if (v8)
  {
LABEL_17:
    objc_msgSend(*(id *)(a1 + 32), "dq_archiveCurrentUbiquityIdentityToken");
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentUbiquityIdentityToken"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastArchivedUbiquityIdentityToken"));
    v18 = BCUbiquityEnabledLog();
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v22) = 0;
      _os_log_impl(&dword_0, v19, OS_LOG_TYPE_DEFAULT, "BCUbiquityStatusMonitor: restartObserving - notifying observers of a token change", (uint8_t *)&v22, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "_notifyObserversForChangesWithCurrentToken:lastToken:", v16, v17);
    goto LABEL_23;
  }
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentUbiquityIdentityToken"));
  v20 = BCUbiquityEnabledLog();
  v21 = objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v22) = 0;
    _os_log_impl(&dword_0, v21, OS_LOG_TYPE_DEFAULT, "BCUbiquityStatusMonitor: restartObserving - tokens match ... so we are not notifying anyone for changes", (uint8_t *)&v22, 2u);
  }

  objc_msgSend(*(id *)(a1 + 32), "_notifyObserversForUnchangedWithCurrentToken:", v16);
LABEL_23:

}

void sub_496E0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  id v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  id v11;
  NSObject *v12;
  uint8_t v13[16];
  uint8_t buf[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BUAccountsProvider sharedProvider](BUAccountsProvider, "sharedProvider"));
  objc_msgSend(v2, "ubiquityIdentityDidChange");

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentUbiquityIdentityToken"));
  objc_msgSend(*(id *)(a1 + 32), "dq_refreshUbiquityAvailabilityStatus");
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentUbiquityIdentityToken"));
  objc_msgSend(*(id *)(a1 + 32), "dq_archiveCurrentUbiquityIdentityToken");
  v5 = BCUbiquityEnabledLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    sub_1B471C(v4, v6);

  if (v3 == v4 || objc_msgSend((id)v3, "isEqual:", v4))
  {
    if (!(v3 | v4))
    {
      v7 = BCUbiquityEnabledLog();
      v8 = objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1B46DC(v8);

    }
    v9 = BCUbiquityEnabledLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "BCUbiquityStatusMonitor: p_ubiquityIdentityDidChange - tokens match. Skipping notification to observers for changes", buf, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "_notifyObserversForUnchangedWithCurrentToken:", v4);
  }
  else
  {
    v11 = BCUbiquityEnabledLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_0, v12, OS_LOG_TYPE_DEFAULT, "BCUbiquityStatusMonitor: p_ubiquityIdentityDidChange - notifying observers of a token change", v13, 2u);
    }

    objc_msgSend(*(id *)(a1 + 32), "_notifyObserversForChangesWithCurrentToken:lastToken:", v4, v3);
  }

}

id sub_49AD4(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  v2 = BCUbiquityEnabledLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v7 = 138412546;
    v8 = v4;
    v9 = 2112;
    v10 = v5;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BCUbiquityStatusMonitor: iCloud identity changed. Notifying newToken:%@ oldToken:%@", (uint8_t *)&v7, 0x16u);
  }

  return objc_msgSend(*(id *)(a1 + 48), "ubiquityStatusChangedToAvailableWithNewIdentity:oldIdentity:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id sub_49B90(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  v2 = BCUbiquityEnabledLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v7 = 138412546;
    v8 = v4;
    v9 = 2112;
    v10 = v5;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BCUbiquityStatusMonitor: iCloud identity changed. Notifying coordinating observer newToken:%@ oldToken:%@", (uint8_t *)&v7, 0x16u);
  }

  return objc_msgSend(*(id *)(a1 + 48), "ubiquityStatusChangedToAvailableWithNewIdentity:oldIdentity:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

id sub_49E68(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = BCUbiquityEnabledLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BCUbiquityStatusMonitor: iCloud identity NOT changed. Notifying token:%@", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "ubiquityStatusUnchangedWithIdentity:", *(_QWORD *)(a1 + 32));
}

id sub_49F14(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;

  v2 = BCUbiquityEnabledLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BCUbiquityStatusMonitor: iCloud identity NOT changed. Notifying coordinating observer token:%@", (uint8_t *)&v6, 0xCu);
  }

  return objc_msgSend(*(id *)(a1 + 40), "ubiquityStatusUnchangedWithIdentity:", *(_QWORD *)(a1 + 32));
}

void sub_4A184(uint64_t a1)
{
  void *v2;
  id *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;
  NSFileCoordinator *v12;
  void *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  NSObject *v29;
  _QWORD block[5];
  _QWORD v31[4];
  id v32;
  id v33;
  uint8_t buf[4];
  uint64_t v35;
  __int16 v36;
  uint64_t v37;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v4 = *(void **)(a1 + 32);
  v3 = (id *)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "containerIdentifier"));
  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "URLForUbiquityContainerIdentifier:", v5));
  v7 = (void *)*((_QWORD *)*v3 + 2);
  *((_QWORD *)*v3 + 2) = v6;

  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)*v3 + 2), "URLByAppendingPathComponent:", CFSTR("Documents")));
  v9 = (void *)*((_QWORD *)*v3 + 3);
  *((_QWORD *)*v3 + 3) = v8;

  v10 = BKLibraryDataSourceUbiquityLog();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
    sub_1B47A8((uint64_t)v3, v11);

  if (*((_QWORD *)*v3 + 3))
  {
    v12 = objc_opt_new(NSFileCoordinator);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)*v3 + 3), "path"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "contentsOfDirectoryAtPath:error:", v13, 0));

    v15 = 0;
    if (objc_msgSend(v14, "count"))
    {
      v16 = 0;
      do
      {
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectAtIndex:", v16));
        if (!objc_msgSend(v17, "rangeOfString:", CFSTR(".Trash")))
        {
          v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*((id *)*v3 + 3), "URLByAppendingPathComponent:", v17));
          v33 = v15;
          v31[0] = _NSConcreteStackBlock;
          v31[1] = 3221225472;
          v31[2] = sub_4A544;
          v31[3] = &unk_28D600;
          v32 = v2;
          -[NSFileCoordinator coordinateWritingItemAtURL:options:error:byAccessor:](v12, "coordinateWritingItemAtURL:options:error:byAccessor:", v18, 1, &v33, v31);
          v19 = v33;

          v15 = v19;
        }

        ++v16;
      }
      while (v16 < (unint64_t)objc_msgSend(v14, "count"));
    }

  }
  v20 = BCUbiquityEnabledLog();
  v21 = objc_claimAutoreleasedReturnValue(v20);
  if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
  {
    v22 = *((_QWORD *)*v3 + 3);
    *(_DWORD *)buf = 138412290;
    v35 = v22;
    _os_log_impl(&dword_0, v21, OS_LOG_TYPE_INFO, "dq_refreshUbiquityAvailabilityStatus iCloud documentURL changed. {documentURL: %@}", buf, 0xCu);
  }

  v23 = BDSCloudKitLog();
  v24 = objc_claimAutoreleasedReturnValue(v23);
  if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
  {
    v25 = *((_QWORD *)*v3 + 3);
    *(_DWORD *)buf = 138412290;
    v35 = v25;
    _os_log_impl(&dword_0, v24, OS_LOG_TYPE_INFO, "dq_refreshUbiquityAvailabilityStatus iCloud documentURL changed. {documentURL: %@}", buf, 0xCu);
  }

  v26 = BKLibraryDataSourceUbiquityLog();
  v27 = objc_claimAutoreleasedReturnValue(v26);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
  {
    v28 = *((_QWORD *)*v3 + 3);
    *(_DWORD *)buf = 141558274;
    v35 = 1752392040;
    v36 = 2112;
    v37 = v28;
    _os_log_impl(&dword_0, v27, OS_LOG_TYPE_INFO, "dq_refreshUbiquityAvailabilityStatus iCloud documentURL changed. {documentURL: %{mask.hash}@}", buf, 0x16u);
  }

  v29 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v3, "dispatchQueue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_4A62C;
  block[3] = &unk_28B960;
  block[4] = *v3;
  dispatch_async(v29, block);

}

void sub_4A544(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  uint8_t buf[4];
  id v10;
  __int16 v11;
  id v12;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v8 = 0;
  objc_msgSend(v4, "removeItemAtURL:error:", v3, &v8);
  v5 = v8;
  if (v5)
  {
    v6 = BDSCloudKitLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412546;
      v10 = v3;
      v11 = 2112;
      v12 = v5;
      _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "Error deleting the folder:[%@] : Error: {%@}", buf, 0x16u);
    }

  }
}

void sub_4A62C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  _QWORD v10[6];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "observers"));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v12;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v12 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)i);
        if ((objc_opt_respondsToSelector(v7, "ubiquityDocumentsURLChanged:") & 1) != 0)
        {
          v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "notifyQueue"));
          v10[0] = _NSConcreteStackBlock;
          v10[1] = 3221225472;
          v10[2] = sub_4A798;
          v10[3] = &unk_28B808;
          v9 = *(_QWORD *)(a1 + 32);
          v10[4] = v7;
          v10[5] = v9;
          dispatch_async(v8, v10);

        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v4);
  }

}

id sub_4A798(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "ubiquityDocumentsURLChanged:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 24));
}

void sub_4A7A8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  uint8_t v8[16];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 16);
  *(_QWORD *)(v2 + 16) = 0;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 24);
  *(_QWORD *)(v4 + 24) = 0;

  v6 = BKLibraryDataSourceUbiquityLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "Container URL set to: <nil>", v8, 2u);
  }

}

void sub_4A8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_4A910(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 16));
}

void sub_4A9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_4AA04(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 24));
}

void sub_4AB80(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id sub_4ABA4(uint64_t a1)
{
  id WeakRetained;
  void *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_stateForLog"));

  return v2;
}

void sub_4B590(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

id sub_4B5C4(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "window"));
  objc_msgSend(v2, "setUserInteractionEnabled:", 1);

  return _objc_msgSend(*(id *)(a1 + 40), "didShow");
}

id sub_4B888(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "hide");
}

id sub_4BAE4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_4BAF0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setUserInteractionEnabled:", 1);
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

id BABackgroundColorDataFromBCAppearanceStyle(unint64_t a1)
{
  uint64_t v1;

  if (a1 > 4)
    v1 = 4;
  else
    v1 = qword_269F00[a1];
  return objc_msgSend(objc_alloc((Class)BABackgroundColorData), "initWithBackgroundColor:", v1);
}

void sub_4BE48(id a1)
{
  BCThemeCoordinator *v1;
  void *v2;

  v1 = objc_opt_new(BCThemeCoordinator);
  v2 = (void *)qword_30D5D8;
  qword_30D5D8 = (uint64_t)v1;

}

void *SetBookFormatByExtensionCB(void *result)
{
  off_30D5E8 = result;
  return result;
}

uint64_t BookFormatByExtension(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (!v1)
    goto LABEL_6;
  if (!objc_msgSend(v1, "caseInsensitiveCompare:", CFSTR("epub")))
  {
    v3 = 0;
    goto LABEL_9;
  }
  if (!objc_msgSend(v2, "caseInsensitiveCompare:", CFSTR("pdf")))
  {
    v3 = 2;
    goto LABEL_9;
  }
  if (off_30D5E8)
    v3 = off_30D5E8(v2);
  else
LABEL_6:
    v3 = 0xFFFFFFFFLL;
LABEL_9:

  return v3;
}

uint64_t BookFormatByFilePath(void *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "pathExtension"));
  v2 = BookFormatByExtension(v1);

  return v2;
}

id sub_4D430(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "setContentInset:", *(double *)(*(_QWORD *)(a1 + 32) + 264), *(double *)(*(_QWORD *)(a1 + 32) + 272), *(double *)(*(_QWORD *)(a1 + 32) + 280), *(double *)(*(_QWORD *)(a1 + 32) + 288));
}

void sub_4D938(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_4D950(_QWORD *result, void *a2, uint64_t a3, _BYTE *a4)
{
  _QWORD *v5;

  if (result[4] == a3)
  {
    v5 = result;
    result = objc_msgSend(a2, "unsignedIntegerValue");
    *(_QWORD *)(*(_QWORD *)(v5[5] + 8) + 24) = result;
    *a4 = 1;
  }
  return result;
}

void sub_4E3A4(uint64_t a1)
{
  void *v2;
  void *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v7[3];
  _OWORD v8[2];
  __int128 v9;

  objc_msgSend(*(id *)(a1 + 32), "updateCards");
  if (*(_BYTE *)(a1 + 56))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
    v6 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v8[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v5 = v8[0];
    v8[1] = v6;
    v9 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    v4 = v9;
    objc_msgSend(v2, "setTransform:", v8);

    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
    v7[0] = v5;
    v7[1] = v6;
    v7[2] = v4;
    objc_msgSend(v3, "setTransform:", v7);

  }
}

void sub_4E444(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  CGAffineTransform v5;
  CGAffineTransform v6;
  CGAffineTransform v7;
  CGAffineTransform v8;

  CGAffineTransformMakeTranslation(&v8, -*(double *)(a1 + 56), 0.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v7 = v8;
  objc_msgSend(v2, "setTransform:", &v7);

  CGAffineTransformMakeTranslation(&v6, *(CGFloat *)(a1 + 56), 0.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  v5 = v6;
  objc_msgSend(v3, "setTransform:", &v5);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "currentCardViewController"));
  objc_msgSend(v4, "setScrimAlpha:animated:duration:", 1, 0.2, *(double *)(a1 + 64));

}

void sub_4E50C(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "updateCards");
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v2, "layoutIfNeeded");

}

void sub_4E550(uint64_t a1)
{
  void *v2;
  void *v3;
  CGAffineTransform v4;
  CGAffineTransform v5;
  CGAffineTransform v6;
  CGAffineTransform v7;

  CGAffineTransformMakeTranslation(&v7, -*(double *)(a1 + 48), 0.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v6 = v7;
  objc_msgSend(v2, "setTransform:", &v6);

  CGAffineTransformMakeTranslation(&v5, *(CGFloat *)(a1 + 48), 0.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  v4 = v5;
  objc_msgSend(v3, "setTransform:", &v4);

}

void sub_4E5F0(uint64_t a1)
{
  void *v2;
  void *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _OWORD v7[3];
  _OWORD v8[2];
  __int128 v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v6 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v8[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5 = v8[0];
  v8[1] = v6;
  v9 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  v4 = v9;
  objc_msgSend(v2, "setTransform:", v8);

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  v7[0] = v5;
  v7[1] = v6;
  v7[2] = v4;
  objc_msgSend(v3, "setTransform:", v7);

}

void sub_4EDD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_4EDEC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = v4;
  if (*(_BYTE *)(a1 + 32))
  {
    objc_msgSend(v4, "viewWillLayoutSubviews");
    v4 = v5;
  }
  objc_msgSend(v4, "goContracted");

}

void sub_4EE34(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  double v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;

  v13 = a3;
  v5 = objc_msgSend(a2, "unsignedIntegerValue");
  if (v5 == objc_msgSend(*(id *)(a1 + 32), "focusedIndex"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "scrollView"));
    objc_msgSend(v6, "contentOffset");
    if (v7 == 0.0)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "cardNavigationController"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "viewControllers"));
      v10 = a1 + 40;
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (unint64_t)objc_msgSend(v9, "count") > 1;

    }
    else
    {
      v10 = a1 + 40;
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    }

    if (!*(_BYTE *)(a1 + 48) || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)v10 + 8) + 24))
    {
      objc_msgSend(v13, "goExpanded");
      goto LABEL_10;
    }
  }
  else
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "cardNavigationController"));
    v12 = objc_msgSend(v11, "popToRootViewControllerAnimated:", 0);

  }
  objc_msgSend(v13, "goContracted");
LABEL_10:

}

id sub_4EF5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_didBecomeVisibleContentScrollView");
}

void sub_4F128(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = objc_msgSend(a2, "unsignedIntegerValue");
  if ((unint64_t)v5 < *(_QWORD *)(a1 + 40) || (unint64_t)v5 > *(_QWORD *)(a1 + 48))
  {
    objc_msgSend(v7, "suspendAndTeardownForReason:", CFSTR("horizontal size class change begin"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "view"));
    objc_msgSend(v6, "setHidden:", 1);

    objc_msgSend(*(id *)(a1 + 32), "addObject:", v7);
  }

}

void sub_4F1B4(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint8_t buf[4];
  void *v22;
  _BYTE v23[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "configuration"));
  v3 = objc_msgSend(v2, "cardsCanExpand");

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "displayedCardViewControllers"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "allValues"));

  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v6 = *(id *)(a1 + 40);
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v17, v23, 16);
  if (v7)
  {
    v9 = v7;
    v10 = *(_QWORD *)v18;
    *(_QWORD *)&v8 = 138412290;
    v16 = v8;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v18 != v10)
          objc_enumerationMutation(v6);
        v12 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v11);
        if (*(unsigned __int8 *)(a1 + 48) != v3)
          objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)v11), "clearSavedContentOffsets");
        if (objc_msgSend(v5, "indexOfObjectIdenticalTo:", v12, v16, (_QWORD)v17) == (id)0x7FFFFFFFFFFFFFFFLL)
        {
          v13 = BCCardModelLog();
          v14 = objc_claimAutoreleasedReturnValue(v13);
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = v16;
            v22 = v12;
            _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "Skipped resuming card %@ as it's no longer displayed", buf, 0xCu);
          }

        }
        else
        {
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "view"));
          objc_msgSend(v15, "setHidden:", 0);

          objc_msgSend(v12, "resumeAndRebuildForReason:", CFSTR("horizontal size class change end"));
        }
        v11 = (char *)v11 + 1;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v17, v23, 16);
    }
    while (v9);
  }

}

void sub_4F458(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  objc_msgSend(*(id *)(a1 + 32), "_updateFramesToSize:", *(double *)(a1 + 40), *(double *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "_layoutCards");
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 10) = 0;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "displayedCardViewControllers"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_4F4F0;
  v3[3] = &unk_28D6C0;
  v3[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v3);

}

void sub_4F4F0(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  id v5;
  double CenterNoRounding;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;

  v4 = *(void **)(a1 + 32);
  v5 = a3;
  CenterNoRounding = CGRectGetCenterNoRounding(objc_msgSend(v4, "_frameForCardAtIndex:", objc_msgSend(a2, "integerValue")));
  v8 = v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
  objc_msgSend(v9, "setCenter:", CenterNoRounding, v8);

  v18 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
  v10 = CGRectMakeWithOriginSize(objc_msgSend(v18, "bounds"));
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));

  objc_msgSend(v17, "setBounds:", v10, v12, v14, v16);
}

void sub_4F698(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  id v5;
  double CenterNoRounding;
  double v7;
  double v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;

  v4 = *(void **)(a1 + 32);
  v5 = a3;
  CenterNoRounding = CGRectGetCenterNoRounding(objc_msgSend(v4, "_frameForCardAtIndex:", objc_msgSend(a2, "integerValue")));
  v8 = v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
  objc_msgSend(v9, "setCenter:", CenterNoRounding, v8);

  v18 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
  v10 = CGRectMakeWithOriginSize(objc_msgSend(v18, "bounds"));
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));

  objc_msgSend(v17, "setBounds:", v10, v12, v14, v16);
}

void sub_4F7E4(id a1, NSNumber *a2, BCCardViewController *a3, BOOL *a4)
{
  -[BCCardViewController prepareForDismiss](a3, "prepareForDismiss");
}

id sub_4FC74(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _OWORD v6[3];
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = *(void **)(a1 + 40);
  if (v2)
  {
    objc_msgSend(v2, "expandedTransform");
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
    v7 = 0u;
  }
  v3 = *(void **)(a1 + 32);
  v6[0] = v7;
  v6[1] = v8;
  v6[2] = v9;
  objc_msgSend(v3, "setTransform:", v6);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "currentCardViewController"));
  objc_msgSend(v4, "configureChromeForExpanded");

  return objc_msgSend(*(id *)(a1 + 40), "_didBecomeVisibleContentScrollView");
}

void sub_4FFF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_50010(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 0);
}

uint64_t sub_5001C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_5002C(uint64_t a1)
{

}

void sub_50034(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "CGColor")));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_50084(uint64_t a1)
{
  id v2;
  uint64_t v3;
  _QWORD v4[4];
  id v5;
  uint64_t v6;
  id v7;
  char v8;
  char v9;
  id location;

  objc_initWeak(&location, *(id *)(a1 + 32));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_50170;
  v4[3] = &unk_28D8A0;
  v8 = *(_BYTE *)(a1 + 56);
  v2 = *(id *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v5 = v2;
  v6 = v3;
  v9 = *(_BYTE *)(a1 + 57);
  objc_copyWeak(&v7, &location);
  +[UIView animateKeyframesWithDuration:delay:options:animations:completion:](UIView, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v4, 0, 0.2, 0.0);
  objc_destroyWeak(&v7);

  objc_destroyWeak(&location);
}

void sub_50154(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_50170(uint64_t a1)
{
  _QWORD v2[4];
  id v3;

  if (*(_BYTE *)(a1 + 56))
    objc_msgSend(*(id *)(a1 + 32), "setBackgroundColor:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  if (!*(_BYTE *)(a1 + 57))
  {
    v2[0] = _NSConcreteStackBlock;
    v2[1] = 3221225472;
    v2[2] = sub_50234;
    v2[3] = &unk_28CC18;
    objc_copyWeak(&v3, (id *)(a1 + 48));
    +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v2, 0.5, 0.5);
    objc_destroyWeak(&v3);
  }
}

void sub_50220(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_50234(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cardStackViewController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "statusBarBackgroundController"));
  objc_msgSend(v2, "setOpacity:", 1.0);

}

id sub_5028C(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *(unsigned __int8 *)(a1 + 64);
  if (!a2 && *(_BYTE *)(a1 + 64))
  {
    v5 = *(_QWORD *)(a1 + 56);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentCardViewController"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "traitOverrides"));
    objc_msgSend(v7, "setUserInterfaceLevel:", v5);

    v4 = *(unsigned __int8 *)(a1 + 64);
  }
  if (v4)
    objc_msgSend(*(id *)(a1 + 40), "setBackgroundColor:", *(_QWORD *)(a1 + 48));
  return _objc_msgSend(*(id *)(a1 + 32), "zoomingAnimationCompletedAtPosition:", a2);
}

void sub_5056C(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "_goContractedCommonTransformingView:", *(_QWORD *)(a1 + 40));
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentCardViewController"));
  objc_msgSend(v2, "configureChromeForContracted");

}

char *sub_505B4(char *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  _OWORD v7[3];
  CGAffineTransform v8;
  CGAffineTransform v9;
  CGAffineTransform v10;
  uint64_t v11;
  uint64_t v12;

  if (a2 == 1)
  {
    v11 = v2;
    v12 = v3;
    v4 = result;
    memset(&v10, 0, sizeof(v10));
    v5 = *(_OWORD *)(result + 56);
    *(_OWORD *)&v9.a = *(_OWORD *)(result + 40);
    *(_OWORD *)&v9.c = v5;
    *(_OWORD *)&v9.tx = *(_OWORD *)(result + 72);
    CGAffineTransformScale(&v10, &v9, 0.9, 0.9);
    v8 = v10;
    objc_msgSend(*((id *)v4 + 4), "setTransform:", &v8);
    v6 = *(_OWORD *)(v4 + 56);
    v7[0] = *(_OWORD *)(v4 + 40);
    v7[1] = v6;
    v7[2] = *(_OWORD *)(v4 + 72);
    return (char *)objc_msgSend(*((id *)v4 + 4), "setTransform:", v7);
  }
  return result;
}

void sub_50934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

id sub_50950(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setUserInterfaceLevel:", *(_QWORD *)(a1 + 32));
}

void sub_5095C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "CGColor")));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_509AC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  _QWORD v4[4];
  id v5;
  uint64_t v6;
  id v7;
  char v8;
  id location;

  objc_initWeak(&location, *(id *)(a1 + 32));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_50A90;
  v4[3] = &unk_28D960;
  v8 = *(_BYTE *)(a1 + 56);
  v2 = *(id *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v5 = v2;
  v6 = v3;
  objc_copyWeak(&v7, &location);
  +[UIView animateKeyframesWithDuration:delay:options:animations:completion:](UIView, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v4, 0, 0.2, 0.0);
  objc_destroyWeak(&v7);

  objc_destroyWeak(&location);
}

void sub_50A74(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_50A90(uint64_t a1)
{
  _QWORD v2[4];
  id v3;

  if (*(_BYTE *)(a1 + 56))
    objc_msgSend(*(id *)(a1 + 32), "setBackgroundColor:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  if ((_os_feature_enabled_impl("Books", "unifiedProductPage") & 1) == 0)
  {
    v2[0] = _NSConcreteStackBlock;
    v2[1] = 3221225472;
    v2[2] = sub_50B64;
    v2[3] = &unk_28CC18;
    objc_copyWeak(&v3, (id *)(a1 + 48));
    +[UIView addKeyframeWithRelativeStartTime:relativeDuration:animations:](UIView, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v2, 0.5, 0.5);
    objc_destroyWeak(&v3);
  }
}

void sub_50B50(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_50B64(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cardStackViewController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "statusBarBackgroundController"));
  objc_msgSend(v2, "setOpacity:", 0.0);

}

id sub_50BBC(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *(unsigned __int8 *)(a1 + 64);
  if (!a2 && *(_BYTE *)(a1 + 64))
  {
    v5 = *(_QWORD *)(a1 + 56);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentCardViewController"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "traitOverrides"));
    objc_msgSend(v7, "setUserInterfaceLevel:", v5);

    v4 = *(unsigned __int8 *)(a1 + 64);
  }
  if (v4)
    objc_msgSend(*(id *)(a1 + 40), "setBackgroundColor:", *(_QWORD *)(a1 + 48));
  return _objc_msgSend(*(id *)(a1 + 32), "zoomingAnimationCompletedAtPosition:", a2);
}

void sub_517B4(id *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  if (objc_msgSend(a1[4], "containsIndex:", objc_msgSend(v12, "unsignedIntegerValue")))
  {
    objc_msgSend(a1[5], "setObject:forKeyedSubscript:", v5, v12);
  }
  else
  {
    objc_msgSend(v5, "suspendAndTeardownForReason:", CFSTR("card set: card not displayed"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "suspendedCardViewControllers"));
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v5, v12);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "view"));
    objc_msgSend(v7, "setHidden:", 1);

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "topContentViewController"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "scrollingAssertions"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKey:", v8));

    if (v10)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "suspendedCardsScrollingAssertions"));
      objc_msgSend(v11, "setObject:forKey:", v10, v8);

    }
  }

}

void sub_518E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  BCCardViewController *v7;
  void *v8;
  double CenterNoRounding;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  BCCardViewController *v33;
  uint64_t v34;
  void *v35;
  BCCardViewController *v36;
  void *v37;
  void *v38;
  void *v39;
  __int128 v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  BCCardSetScrollingAssertion *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  unsigned int v71;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  uint64_t v79;
  void *v80;
  _OWORD v81[3];
  _QWORD v82[4];
  BCCardViewController *v83;

  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
  v7 = (BCCardViewController *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v6));

  v8 = *(void **)(a1 + 40);
  if (v7)
  {
    CenterNoRounding = CGRectGetCenterNoRounding(objc_msgSend(v8, "_frameForCardAtIndex:", a2));
    v11 = v10;
    v12 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v7, "view"));
    objc_msgSend(v12, "setCenter:", CenterNoRounding, v11);

    v13 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v7, "view"));
    v14 = CGRectMakeWithOriginSize(objc_msgSend(v13, "bounds"));
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v21 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v7, "view"));
    objc_msgSend(v21, "setBounds:", v14, v16, v18, v20);

    v22 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController cardNavigationController](v7, "cardNavigationController"));
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "topViewController"));

    if (v23)
      goto LABEL_23;
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "contentViewControllerForCardSet:index:cardContentScrollManager:", *(_QWORD *)(a1 + 40), a2, v7));
    if (!v27)
      BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Cards/BCCardSetViewController.m", 1761, (uint64_t)"-[BCCardSetViewController _layoutCards]_block_invoke_2", (uint64_t)"contentViewController != nil", CFSTR("Not expecting a nil contentViewController"), v24, v25, v26, *(uint64_t *)&v81[0]);
    -[BCCardViewController setContentViewController:](v7, "setContentViewController:", v27);
  }
  else
  {
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "suspendedCardViewControllers"));
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
    v30 = objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "objectForKeyedSubscript:", v29));

    if (v30)
    {
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "suspendedCardViewControllers"));
      v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
      objc_msgSend(v31, "setObject:forKeyedSubscript:", 0, v32);

      v7 = (BCCardViewController *)v30;
    }
    else
    {
      v33 = [BCCardViewController alloc];
      v34 = *(_QWORD *)(a1 + 64);
      v35 = *(void **)(a1 + 40);
      objc_msgSend(v35, "distanceToExpand");
      v36 = -[BCCardViewController initWithNavigationControllerClass:cardSetData:distanceToExpand:](v33, "initWithNavigationControllerClass:cardSetData:distanceToExpand:", v34, v35);
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "configuration"));
      -[BCCardViewController setConfiguration:](v36, "setConfiguration:", v37);

      -[BCCardViewController setCardSetViewController:](v36, "setCardSetViewController:", *(_QWORD *)(a1 + 40));
      -[BCCardViewController setDelegate:](v36, "setDelegate:", *(_QWORD *)(a1 + 40));
      v38 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v36, "view"));
      objc_msgSend(v38, "setAlpha:", 0.0);

      objc_msgSend(*(id *)(a1 + 40), "addChildViewController:", v36);
      v82[0] = _NSConcreteStackBlock;
      v82[1] = 3221225472;
      v82[2] = sub_51FB4;
      v82[3] = &unk_28B960;
      v7 = v36;
      v83 = v7;
      +[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v82, 0.2);

    }
    v39 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v7, "view"));
    v40 = *(_OWORD *)&CGAffineTransformIdentity.c;
    v81[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
    v81[1] = v40;
    v81[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
    objc_msgSend(v39, "setTransform:", v81);

    objc_msgSend(*(id *)(a1 + 40), "_frameForCardAtIndex:", a2);
    v42 = v41;
    v44 = v43;
    v46 = v45;
    v48 = v47;
    v49 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v7, "view"));
    objc_msgSend(v49, "setFrame:", v42, v44, v46, v48);

    if (!v30)
    {
      v50 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "scrollView"));
      v51 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v7, "view"));
      objc_msgSend(v50, "addSubview:", v51);

      -[BCCardViewController didMoveToParentViewController:](v7, "didMoveToParentViewController:", *(_QWORD *)(a1 + 40));
    }
    objc_msgSend(*(id *)(a1 + 40), "contentInset");
    -[BCCardViewController setContentInset:](v7, "setContentInset:");
    if (v30)
    {
      v52 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController topContentViewController](v7, "topContentViewController"));
      v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "suspendedCardsScrollingAssertions"));
      v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v53, "objectForKey:", v52));

      v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "suspendedCardsScrollingAssertions"));
      objc_msgSend(v55, "removeObjectForKey:", v52);

      if (v54)
      {
        v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "scrollingAssertions"));
        objc_msgSend(v56, "setObject:forKey:", v54, v52);

      }
      -[BCCardViewController resumeAndRebuildForReason:](v7, "resumeAndRebuildForReason:", CFSTR("card layout"));
      v57 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v7, "view"));
      objc_msgSend(v57, "setHidden:", 0);

    }
    else
    {
      v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "contentViewControllerForCardSet:index:cardContentScrollManager:", *(_QWORD *)(a1 + 40), a2, v7));
      if (!v52)
        BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Cards/BCCardSetViewController.m", 1720, (uint64_t)"-[BCCardSetViewController _layoutCards]_block_invoke_2", (uint64_t)"contentViewController != nil", CFSTR("Not expecting a nil contentViewController"), v58, v59, v60, *(uint64_t *)&v81[0]);
      v61 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "scrollingAssertions"));
      if (v61)
      {
        v62 = (void *)v61;
        v63 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "scrollingAssertions"));
        v64 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v63, "objectForKey:", v52));

        if (!v64)
        {
          v65 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "scrollingAssertions"));
          v66 = -[BCCardSetScrollingAssertion initWithContent:]([BCCardSetScrollingAssertion alloc], "initWithContent:", v52);
          objc_msgSend(v65, "setObject:forKey:", v66, v52);

        }
      }
      -[BCCardViewController setContentViewController:](v7, "setContentViewController:", v52);
    }

    v67 = *(void **)(a1 + 32);
    v68 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a2));
    objc_msgSend(v67, "setObject:forKeyedSubscript:", v7, v68);

    v27 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](v7, "view"));
    objc_msgSend(v27, "layoutIfNeeded");
  }

LABEL_23:
  v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "configuration"));
  objc_msgSend(v69, "cardCornerRadius");
  -[BCCardViewController setCornerRadius:](v7, "setCornerRadius:");

  v70 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "configuration"));
  v71 = objc_msgSend(v70, "cardsCanExpand");

  if (v71)
    v72 = 3;
  else
    v72 = 2;
  v73 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController cardNavigationController](v7, "cardNavigationController"));
  objc_msgSend(v73, "_setPreferredNavigationBarPosition:", v72);

  if (v71)
  {
    v74 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController cardNavigationController](v7, "cardNavigationController"));
    objc_msgSend(v74, "_setPositionBarsExclusivelyWithSafeArea:", 0);

  }
  -[BCCardViewController setIsCurrentCard:](v7, "setIsCurrentCard:", v4 == a2);
  if (v7)
  {
    v75 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController cardNavigationController](v7, "cardNavigationController"));
    v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v75, "topViewController"));

    if (v76)
    {
      v77 = (void *)objc_claimAutoreleasedReturnValue(-[BCCardViewController cardNavigationController](v7, "cardNavigationController"));
      v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v77, "topViewController"));
      v79 = BUProtocolCast(&OBJC_PROTOCOL___BCCardSetIndexObserver, v78);
      v80 = (void *)objc_claimAutoreleasedReturnValue(v79);

      objc_msgSend(v80, "setDistanceFromFocusedCard:", *(_QWORD *)(a1 + 56) - a2);
    }
  }

}

void sub_51FB4(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

uint64_t sub_52148(uint64_t a1, uint64_t a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  CGRect v22;
  CGRect v23;

  objc_msgSend(*(id *)(a1 + 32), "_frameForCardAtIndex:", a2);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
  objc_msgSend(v11, "convertRect:fromView:", v12, v4, v6, v8, v10);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v22.origin.x = v14;
  v22.origin.y = v16;
  v22.size.width = v18;
  v22.size.height = v20;
  v23 = CGRectIntersection(v22, *(CGRect *)(a1 + 48));
  return (*(uint64_t (**)(__n128, __n128, __n128, __n128))(*(_QWORD *)(a1 + 40) + 16))((__n128)v23.origin, *(__n128 *)&v23.origin.y, (__n128)v23.size, *(__n128 *)&v23.size.height);
}

BOOL sub_52224(id a1, int64_t a2, CGRect a3)
{
  return !CGRectIsNull(a3);
}

void sub_522C4(uint64_t a1, void *a2, void *a3)
{
  char *v5;
  unint64_t v6;
  char *v7;
  BOOL v8;
  void *v9;
  id v10;

  v10 = a3;
  v5 = (char *)objc_msgSend(a2, "unsignedIntegerValue");
  v6 = *(_QWORD *)(a1 + 32);
  v8 = (unint64_t)v5 >= v6;
  v7 = &v5[-v6];
  v8 = !v8 || (unint64_t)v7 >= *(_QWORD *)(a1 + 40);
  if (v8)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "view"));
    objc_msgSend(v9, "setHidden:", 1);

  }
}

void sub_52398(id a1, NSNumber *a2, BCCardViewController *a3, BOOL *a4)
{
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(-[BCCardViewController view](a3, "view"));
  objc_msgSend(v4, "setHidden:", 0);

}

void sub_523F4(id a1, NSNumber *a2, BCCardViewController *a3, BOOL *a4)
{
  -[BCCardViewController cardSetPresentationTransitionDidComplete](a3, "cardSetPresentationTransitionDidComplete");
}

void sub_52500(void *a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  if (a1)
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "scrollStartCardIndex"));
    if (v2 || (v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "lastKnownScrollEndCardIndex"))) != 0)
    {
      v8 = (id)v2;
      v3 = objc_msgSend(a1, "currentIndex");
      if (objc_msgSend(v8, "integerValue") != v3)
      {
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "displayedCardViewControllers"));
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKeyedSubscript:", v8));

        if (v5)
        {
          objc_msgSend(v5, "bc_analyticsVisibilitySubtreeWillDisappear");
          objc_msgSend(v5, "bc_analyticsVisibilitySubtreeDidDisappear");
        }
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "currentCardViewController"));
        objc_msgSend(v6, "bc_analyticsVisibilityUpdateSubtree");

      }
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v3));
      objc_msgSend(a1, "setLastKnownScrollEndCardIndex:", v7);

    }
  }
}

void sub_52AE0(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  v1 = BCCardModelLog();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "Done closing all cards", v3, 2u);
  }

}

void sub_52BA0(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  v1 = BCCardModelLog();
  v2 = objc_claimAutoreleasedReturnValue(v1);
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_0, v2, OS_LOG_TYPE_DEFAULT, "Done closing card stack, EOB card and current asset", v3, 2u);
  }

}

id sub_52F2C(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "suspendAndTeardownForReason:", *(_QWORD *)(a1 + 32));
}

id sub_52FCC(uint64_t a1, uint64_t a2, void *a3)
{
  return objc_msgSend(a3, "resumeAndRebuildForReason:", *(_QWORD *)(a1 + 32));
}

id sub_53F68(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setPersistentStoreCoordinator:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setUndoManager:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setMergePolicy:", NSMergeByPropertyObjectTrumpMergePolicy);
}

id sub_54048(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "loadManagedObjectModel");
  objc_msgSend(*(id *)(a1 + 32), "loadPersistentStoreCoordinator");
  return _objc_msgSend(*(id *)(a1 + 32), "loadPersistentStore");
}

void sub_54170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_54184(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "cacheMetadataDictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadataDictionary"));
  objc_msgSend(v2, "setValue:forKey:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

  return objc_msgSend(*(id *)(a1 + 32), "setMetadataDictionaryDirty:", 1);
}

void sub_542D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_542F0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_54300(uint64_t a1)
{

}

void sub_54308(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "cacheMetadataDictionary");
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "metadataDictionary"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "valueForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_546F0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(*(id *)(a1 + 32), "removePersistentStores");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bringUpPersistentStoreLoader"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStoreCoordinator"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "addPersistentStoreToPersistentStoreCoordinator:", v3));
  objc_msgSend(*(id *)(a1 + 32), "setCurrentPersistentStore:", v4);

  return objc_msgSend(*(id *)(a1 + 32), "setCurrentPersistentStoreType:", 2);
}

void sub_555BC()
{
  __break(1u);
}

void sub_55644()
{
  objc_end_catch();
  JUMPOUT(0x5564CLL);
}

void sub_55778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_55790(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(a1 + 40), "deleteObject:", *(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)v6), (_QWORD)v8);
        ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
        v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        if (*(_DWORD *)(v7 + 24) == 100)
        {
          *(_DWORD *)(v7 + 24) = 0;
          objc_msgSend(*(id *)(a1 + 40), "save:", 0);
        }
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

void sub_5642C(void *a1)
{
  void *v1;
  void *v2;

  objc_begin_catch(a1);

  objc_exception_rethrow();
}

void sub_56450(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_568D4(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
  JUMPOUT(0x568C4);
}

void sub_56CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_56CD4(uint64_t a1)
{
  id result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1 + 32), "touchInsets");
  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 40) + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

void sub_57248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_5726C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id WeakRetained;
  id v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setLookupResultPromise:", 0);

  v7 = objc_retainBlock(*(id *)(a1 + 32));
  v8 = v7;
  if (v7)
    (*((void (**)(id, id, id))v7 + 2))(v7, v9, v5);

}

void sub_575AC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

void sub_5768C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

double mainScreenScaleFactor()
{
  if (qword_30D600 != -1)
    dispatch_once(&qword_30D600, &stru_28DB50);
  return *(double *)&qword_3089D8;
}

void sub_57888(id a1)
{
  uint64_t v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v2, "scale");
  qword_3089D8 = v1;

}

BOOL isPortrait()
{
  void *v0;
  void *v1;
  char *v2;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIWindow _applicationKeyWindow](UIWindow, "_applicationKeyWindow"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "windowScene"));
  v2 = (char *)objc_msgSend(v1, "interfaceOrientation");

  return (unint64_t)(v2 - 1) < 2;
}

BOOL isLandscape()
{
  void *v0;
  void *v1;
  char *v2;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIWindow _applicationKeyWindow](UIWindow, "_applicationKeyWindow"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "windowScene"));
  v2 = (char *)objc_msgSend(v1, "interfaceOrientation");

  return (unint64_t)(v2 - 3) < 2;
}

uint64_t isPad()
{
  if (qword_30D610 != -1)
    dispatch_once(&qword_30D610, &stru_28DB70);
  return byte_30D608;
}

void sub_579BC(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[UIDevice currentDevice](UIDevice, "currentDevice"));
  if ((objc_opt_respondsToSelector(v1, "userInterfaceIdiom") & 1) != 0)
    byte_30D608 = objc_msgSend(v1, "userInterfaceIdiom") != 0;

}

BOOL isMegaPad()
{
  if (qword_30D620 != -1)
    dispatch_once(&qword_30D620, &stru_28DB90);
  return dword_30D618 != 0;
}

void sub_57A5C(id a1)
{
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  _BOOL4 v6;

  if (qword_30D610 != -1)
    dispatch_once(&qword_30D610, &stru_28DB70);
  if (byte_30D608 == 1)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
    objc_msgSend(v1, "bounds");
    v3 = v2;
    v5 = v4;

    v6 = fabs(v3 + -1366.0) < 0.00999999978;
    if (fabs(v5 + -1366.0) < 0.00999999978)
      v6 = 1;
    dword_30D618 = v6;
  }
}

BOOL isPhone()
{
  if (qword_30D610 != -1)
    dispatch_once(&qword_30D610, &stru_28DB70);
  return (byte_30D608 & 1) == 0;
}

BOOL isTallPhone()
{
  void *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  CGRect v10;
  CGRect v11;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;

  if (qword_30D610 != -1)
    dispatch_once(&qword_30D610, &stru_28DB70);
  if ((byte_30D608 & 1) != 0)
    return 0;
  v10.origin.x = v2;
  v10.origin.y = v4;
  v10.size.width = v6;
  v10.size.height = v8;
  if (CGRectGetHeight(v10) >= 568.0)
    return 1;
  v11.origin.x = v2;
  v11.origin.y = v4;
  v11.size.width = v6;
  v11.size.height = v8;
  return CGRectGetWidth(v11) >= 568.0;
}

uint64_t isMultitaskingSupported()
{
  void *v0;

  if ((byte_30D629 & 1) == 0)
  {
    v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIDevice currentDevice](UIDevice, "currentDevice"));
    if ((objc_opt_respondsToSelector(v0, "isMultitaskingSupported") & 1) != 0)
      byte_30D628 = objc_msgSend(v0, "isMultitaskingSupported");
    byte_30D629 = 1;

  }
  return byte_30D628;
}

BOOL isRetina()
{
  void *v0;
  double v1;
  _BOOL8 v2;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  if ((objc_opt_respondsToSelector(v0, "scale") & 1) != 0)
  {
    objc_msgSend(v0, "scale");
    v2 = v1 > 1.0;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

BOOL isARMv6()
{
  size_t v1;
  int v2;

  v2 = 0;
  v1 = 4;
  sysctlbyname("hw.cpusubtype", &v2, &v1, 0, 0);
  return v2 == 6;
}

void sub_57FCC(id a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD v27[8];
  _QWORD v28[8];

  v27[0] = CFSTR("All_Collection_ID");
  v1 = IMCommonCoreBundle();
  v26 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "localizedStringForKey:value:table:", CFSTR("Library"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  v28[0] = v25;
  v27[1] = CFSTR("AudioBooks_Collection_ID");
  v2 = IMCommonCoreBundle();
  v24 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "localizedStringForKey:value:table:", CFSTR("Audiobooks"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  v28[1] = v23;
  v27[2] = CFSTR("Books_Collection_ID");
  v3 = IMCommonCoreBundle();
  v22 = (void *)objc_claimAutoreleasedReturnValue(v3);
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "localizedStringForKey:value:table:", CFSTR("Books"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  v28[2] = v21;
  v27[3] = CFSTR("Downloaded_Collection_ID");
  v4 = IMCommonCoreBundle();
  v20 = (void *)objc_claimAutoreleasedReturnValue(v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "localizedStringForKey:value:table:", CFSTR("Downloaded"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  v28[3] = v5;
  v27[4] = CFSTR("Finished_Collection_ID");
  v6 = IMCommonCoreBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "localizedStringForKey:value:table:", CFSTR("Finished"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  v28[4] = v8;
  v27[5] = CFSTR("Pdfs_Collection_ID");
  v9 = IMCommonCoreBundle();
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "localizedStringForKey:value:table:", CFSTR("PDFs"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  v28[5] = v11;
  v27[6] = CFSTR("Want_To_Read_Collection_ID");
  v12 = IMCommonCoreBundle();
  v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "localizedStringForKey:value:table:", CFSTR("Want to Read"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  v28[6] = v14;
  v27[7] = CFSTR("Samples_Collection_ID");
  v15 = IMCommonCoreBundle();
  v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("My Samples"), &stru_296430, CFSTR("BCCommonCoreLocalizable")));
  v28[7] = v17;
  v18 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v28, v27, 8));
  v19 = (void *)qword_30D630;
  qword_30D630 = v18;

}

void sub_584C4(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[8];
  _QWORD v4[8];

  v3[0] = CFSTR("All_Collection_ID");
  v3[1] = CFSTR("AudioBooks_Collection_ID");
  v4[0] = &off_2A9440;
  v4[1] = &off_2A9458;
  v3[2] = CFSTR("Books_Collection_ID");
  v3[3] = CFSTR("Downloaded_Collection_ID");
  v4[2] = &off_2A9470;
  v4[3] = &off_2A9488;
  v3[4] = CFSTR("Finished_Collection_ID");
  v3[5] = CFSTR("Pdfs_Collection_ID");
  v4[4] = &off_2A94A0;
  v4[5] = &off_2A94B8;
  v3[6] = CFSTR("Want_To_Read_Collection_ID");
  v3[7] = CFSTR("Samples_Collection_ID");
  v4[6] = &off_2A94D0;
  v4[7] = &off_2A94E8;
  v1 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v4, v3, 8));
  v2 = (void *)qword_30D640;
  qword_30D640 = v1;

}

void sub_58A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  id v5;

  --*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(_QWORD *)(a1 + 32);
  if (!*(_QWORD *)(v2 + 8))
  {
    v4 = objc_retainBlock(*(id *)(v2 + 16));
    if (v4)
    {
      v5 = v4;
      (*((void (**)(id, uint64_t))v4 + 2))(v4, a2);
      v4 = v5;
    }

  }
}

void sub_591A0(id a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = objc_alloc_init((Class)NSNumberFormatter);
  v2 = (void *)qword_30D650;
  qword_30D650 = (uint64_t)v1;

  v3 = (void *)qword_30D650;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale currentLocale](NSLocale, "currentLocale"));
  objc_msgSend(v3, "setLocale:", v4);

  objc_msgSend((id)qword_30D650, "setNumberStyle:", 3);
}

void sub_59BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_59BC4(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  _QWORD *v7;

  if (++*(_QWORD *)(*(_QWORD *)(result[4] + 8) + 24) >= result[5])
  {
    *a7 = 1;
    v7 = (_QWORD *)result[6];
    if (v7)
      *v7 = a5 + a6;
  }
  return result;
}

void sub_59D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_59D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  unint64_t v9;
  uint64_t v10;
  id result;

  v9 = a3 + a4;
  v10 = *(_QWORD *)(a1 + 48);
  result = objc_msgSend(*(id *)(a1 + 32), "length");
  if (v9 <= v10 - (uint64_t)result)
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v9;
  else
    *a7 = 1;
  return result;
}

void sub_5A4D4(id a1)
{
  id v1;
  void *v2;
  id v3;

  v3 = objc_alloc_init((Class)NSMutableCharacterSet);
  objc_msgSend(v3, "addCharactersInRange:", 34, 1);
  objc_msgSend(v3, "addCharactersInRange:", 39, 1);
  objc_msgSend(v3, "addCharactersInRange:", 171, 1);
  objc_msgSend(v3, "addCharactersInRange:", 187, 1);
  objc_msgSend(v3, "addCharactersInRange:", 8216, 7);
  objc_msgSend(v3, "addCharactersInRange:", 8249, 2);
  objc_msgSend(v3, "addCharactersInRange:", 12296, 8);
  v1 = objc_msgSend(v3, "copy");
  v2 = (void *)qword_30D660;
  qword_30D660 = (uint64_t)v1;

}

BOOL sub_5A67C(id a1, NSObject *a2, BOOL *a3)
{
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = a2;
  v4 = objc_opt_class(NSString);
  v5 = BUDynamicCast(v4, v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  LOBYTE(v3) = objc_msgSend(v6, "length") != 0;
  return (char)v3;
}

__CFString *BC_CFXMLCreateStringByUnescapingEntities(const __CFAllocator *a1, CFStringRef theString, const __CFDictionary *a3)
{
  const __CFString *v4;
  CFIndex Length;
  __CFDictionary *MutableCopy;
  __CFDictionary *v8;
  const UniChar *CharactersPtr;
  const char *CStringPtr;
  __CFString *Mutable;
  CFIndex v12;
  CFIndex v13;
  CFIndex v14;
  UniChar *v15;
  CFIndex v16;
  UniChar v17;
  uint64_t v18;
  CFIndex v19;
  const __CFString *v20;
  CFIndex v21;
  UniChar *v22;
  CFIndex v23;
  UniChar v24;
  uint64_t v25;
  CFIndex v26;
  CFIndex v27;
  UniChar *v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  UniChar v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  CFIndex v41;
  char v42;
  uint64_t v43;
  CFIndex v44;
  CFIndex v45;
  UniChar *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t i;
  uint64_t v52;
  int v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  CFIndex v62;
  CFStringRef v63;
  const __CFString *Value;
  const __CFString *v65;
  __CFString *v66;
  __CFString *v67;
  CFIndex v68;
  uint64_t v69;
  CFIndex v70;
  uint64_t v71;
  CFIndex v72;
  const __CFString *v73;
  const __CFString *v74;
  const __CFAllocator *v76;
  const __CFString *v77;
  __CFDictionary *v78;
  __CFString *theStringa;
  UniChar chars[2];
  UniChar buffer[8];
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  CFStringRef v89;
  UniChar *v90;
  const char *v91;
  uint64_t v92;
  __int128 v93;
  CFIndex v94;
  CFRange v95;
  CFRange v96;
  CFRange v97;
  CFRange v98;
  CFRange v99;
  CFRange v100;
  CFRange v101;
  CFRange v102;
  CFRange v103;
  CFRange v104;

  v4 = theString;
  Length = CFStringGetLength(theString);
  if (a3)
    MutableCopy = CFDictionaryCreateMutableCopy(a1, 0, a3);
  else
    MutableCopy = CFDictionaryCreateMutable(a1, 0, &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
  v8 = MutableCopy;
  v94 = 0;
  v91 = 0;
  v93 = 0u;
  v87 = 0u;
  v88 = 0u;
  v85 = 0u;
  v86 = 0u;
  v83 = 0u;
  v84 = 0u;
  *(_OWORD *)buffer = 0u;
  v82 = 0u;
  CFDictionaryAddValue(MutableCopy, CFSTR("amp"), CFSTR("&"));
  CFDictionaryAddValue(v8, CFSTR("quot"), CFSTR("\""));
  CFDictionaryAddValue(v8, CFSTR("lt"), CFSTR("<"));
  CFDictionaryAddValue(v8, CFSTR("gt"), CFSTR(">"));
  CFDictionaryAddValue(v8, CFSTR("apos"), CFSTR("'"));
  v89 = v4;
  v92 = 0;
  *(_QWORD *)&v93 = Length - 1;
  CharactersPtr = CFStringGetCharactersPtr(v4);
  CStringPtr = 0;
  v90 = (UniChar *)CharactersPtr;
  if (!CharactersPtr)
    CStringPtr = CFStringGetCStringPtr(v4, 0x600u);
  v91 = CStringPtr;
  *((_QWORD *)&v93 + 1) = 0;
  v94 = 0;
  Mutable = CFStringCreateMutable(a1, 0);
  theStringa = Mutable;
  if (Length >= 1)
  {
    v12 = 0;
    v13 = 0;
    v78 = v8;
    v76 = a1;
    v77 = v4;
    while (1)
    {
      if (v13 < 0 || (v14 = v93, (uint64_t)v93 <= v13))
      {
        v18 = v13 + 1;
        goto LABEL_14;
      }
      v15 = v90;
      if (v90)
      {
        v16 = v92 + v13;
      }
      else
      {
        if (v91)
        {
          v17 = v91[v92 + v13];
          goto LABEL_18;
        }
        if (v94 <= v13 || (v25 = *((_QWORD *)&v93 + 1), *((uint64_t *)&v93 + 1) > v13))
        {
          v26 = v13 - 4;
          if ((unint64_t)v13 < 4)
            v26 = 0;
          if (v26 + 64 < (uint64_t)v93)
            v14 = v26 + 64;
          *((_QWORD *)&v93 + 1) = v26;
          v94 = v14;
          v95.location = v92 + v26;
          v95.length = v14 - v26;
          CFStringGetCharacters(v89, v95, buffer);
          v25 = *((_QWORD *)&v93 + 1);
        }
        v16 = v13 - v25;
        v15 = buffer;
      }
      v17 = v15[v16];
LABEL_18:
      v19 = v13 + 1;
      if (v17 == 38)
      {
        if (v13 > v12)
        {
          v101.location = v12;
          v101.length = v13 - v12;
          v20 = CFStringCreateWithSubstring(a1, v4, v101);
          CFStringAppend(Mutable, v20);
          CFRelease(v20);
        }
        v21 = v93;
        if ((uint64_t)v93 <= v19)
        {
          v24 = 0;
          v18 = v13 + 2;
        }
        else
        {
          v22 = v90;
          if (v90)
          {
            v23 = v92 + v19;
            goto LABEL_24;
          }
          if (v91)
          {
            v24 = v91[v92 + v19];
          }
          else
          {
            if (v94 <= v19 || (v43 = *((_QWORD *)&v93 + 1), *((uint64_t *)&v93 + 1) > v19))
            {
              v44 = v13 - 3;
              if ((unint64_t)v13 < 3)
                v44 = 0;
              if (v44 + 64 < (uint64_t)v93)
                v21 = v44 + 64;
              *((_QWORD *)&v93 + 1) = v44;
              v94 = v21;
              v97.location = v92 + v44;
              v97.length = v21 - v44;
              CFStringGetCharacters(v89, v97, buffer);
              v43 = *((_QWORD *)&v93 + 1);
            }
            v23 = v19 - v43;
            v22 = buffer;
LABEL_24:
            v24 = v22[v23];
          }
          v18 = v13 + 2;
          if (v24 == 35)
          {
            v27 = v93;
            if ((uint64_t)v93 <= v18)
            {
              v42 = 0;
              v24 = 0;
              v18 = v13 + 3;
            }
            else
            {
              v28 = v90;
              if (v90)
              {
                v29 = v92 + v18;
                goto LABEL_41;
              }
              if (v91)
              {
                v24 = v91[v92 + v18];
              }
              else
              {
                if (v94 <= v18 || (v69 = *((_QWORD *)&v93 + 1), *((uint64_t *)&v93 + 1) > v18))
                {
                  v70 = v13 - 2;
                  if ((unint64_t)v13 < 2)
                    v70 = 0;
                  if (v70 + 64 < (uint64_t)v93)
                    v27 = v70 + 64;
                  *((_QWORD *)&v93 + 1) = v70;
                  v94 = v27;
                  v99.location = v92 + v70;
                  v99.length = v27 - v70;
                  CFStringGetCharacters(v89, v99, buffer);
                  v69 = *((_QWORD *)&v93 + 1);
                }
                v29 = v18 - v69;
                v28 = buffer;
LABEL_41:
                v24 = v28[v29];
              }
              v18 = v13 + 3;
              if (v24 == 120)
              {
                v45 = v93;
                if ((uint64_t)v93 <= v18)
                {
                  v24 = 0;
                }
                else
                {
                  v46 = v90;
                  if (v90)
                  {
                    v47 = v92 + v18;
                    goto LABEL_83;
                  }
                  if (v91)
                  {
                    v24 = v91[v92 + v18];
                  }
                  else
                  {
                    if (v94 <= v18 || (v71 = *((_QWORD *)&v93 + 1), *((uint64_t *)&v93 + 1) > v18))
                    {
                      v72 = v13 - 1;
                      if (!v13)
                        v72 = 0;
                      if (v72 + 64 < (uint64_t)v93)
                        v45 = v72 + 64;
                      *((_QWORD *)&v93 + 1) = v72;
                      v94 = v45;
                      v100.location = v92 + v72;
                      v100.length = v45 - v72;
                      CFStringGetCharacters(v89, v100, buffer);
                      v71 = *((_QWORD *)&v93 + 1);
                    }
                    v47 = v18 - v71;
                    v46 = buffer;
LABEL_83:
                    v24 = v46[v47];
                  }
                }
                v18 = v13 + 4;
                v48 = 16;
                v42 = 1;
LABEL_88:
                v30 = 0;
                if (Length <= v18)
                  v49 = v18;
                else
                  v49 = Length;
                v50 = -v18;
                for (i = v18 + 64; ; ++i)
                {
                  if ((unint64_t)v18 >= 4)
                    v52 = 4;
                  else
                    v52 = v18;
                  if ((unsigned __int16)(v24 - 48) > 9u)
                  {
                    v54 = v42 ^ 1;
                    if ((unsigned __int16)(v24 - 97) > 5u)
                      v55 = 1;
                    else
                      v55 = v42 ^ 1;
                    if ((v55 & 1) != 0)
                    {
                      if ((unsigned __int16)(v24 - 65) > 5u)
                        v54 = 1;
                      if ((v54 & 1) != 0)
                      {
                        a1 = v76;
                        v4 = v77;
                        v8 = v78;
                        Mutable = theStringa;
                        v19 = v13 + 1;
                        goto LABEL_43;
                      }
                      v53 = 16 * v30 - 55;
                    }
                    else
                    {
                      v53 = 16 * v30 - 87;
                    }
                  }
                  else
                  {
                    v53 = v30 * v48 - 48;
                  }
                  v30 = v53 + v24;
                  if (v49 == v18)
                  {
                    v18 = v49;
                    a1 = v76;
                    v4 = v77;
                    v8 = v78;
                    Mutable = theStringa;
                    v19 = v13 + 1;
                    goto LABEL_124;
                  }
                  if (v18 < 0 || (v56 = v93, (uint64_t)v93 <= v18))
                  {
                    v24 = 0;
                  }
                  else if (v90)
                  {
                    v24 = v90[v18 + v92];
                  }
                  else if (v91)
                  {
                    v24 = v91[v92 + v18];
                  }
                  else
                  {
                    if (v94 <= v18 || (v57 = *((_QWORD *)&v93 + 1), *((uint64_t *)&v93 + 1) > v18))
                    {
                      v58 = -v52;
                      v59 = v52 + v50;
                      v60 = i - v52;
                      v61 = v18 + v58;
                      v62 = v61 + 64;
                      if (v61 + 64 >= (uint64_t)v93)
                        v62 = v93;
                      *((_QWORD *)&v93 + 1) = v61;
                      v94 = v62;
                      if ((uint64_t)v93 >= v60)
                        v56 = v60;
                      v98.length = v56 + v59;
                      v98.location = v61 + v92;
                      CFStringGetCharacters(v89, v98, buffer);
                      v57 = *((_QWORD *)&v93 + 1);
                    }
                    v24 = buffer[v18 - v57];
                  }
                  ++v18;
                  --v50;
                }
              }
              v42 = 0;
            }
            v48 = 10;
            goto LABEL_88;
          }
        }
        v30 = 0xFFFF;
LABEL_43:
        if (v24 != 59 && v18 < Length)
        {
          v31 = -v18;
          v32 = v18 + 64;
          do
          {
            if ((unint64_t)v18 >= 4)
              v33 = 4;
            else
              v33 = v18;
            if (v18 < 0 || (v34 = v93, (uint64_t)v93 <= v18))
            {
              v35 = 0;
            }
            else if (v90)
            {
              v35 = v90[v18 + v92];
            }
            else if (v91)
            {
              v35 = v91[v92 + v18];
            }
            else
            {
              if (v94 <= v18 || (v36 = *((_QWORD *)&v93 + 1), *((uint64_t *)&v93 + 1) > v18))
              {
                v37 = -v33;
                v38 = v33 + v31;
                v39 = v32 - v33;
                v40 = v18 + v37;
                v41 = v40 + 64;
                if (v40 + 64 >= (uint64_t)v93)
                  v41 = v93;
                *((_QWORD *)&v93 + 1) = v40;
                v94 = v41;
                if ((uint64_t)v93 >= v39)
                  v34 = v39;
                v96.length = v34 + v38;
                v96.location = v40 + v92;
                CFStringGetCharacters(v89, v96, buffer);
                v36 = *((_QWORD *)&v93 + 1);
              }
              v35 = buffer[v18 - v36];
            }
            ++v18;
            if (v35 == 59)
              break;
            --v31;
            ++v32;
          }
          while (v18 < Length);
          v8 = v78;
          Mutable = theStringa;
        }
LABEL_124:
        if (v30 == 0xFFFF)
        {
          v102.length = v18 - v13 - 2;
          v102.location = v19;
          v63 = CFStringCreateWithSubstring(a1, v4, v102);
          Value = (const __CFString *)CFDictionaryGetValue(v8, v63);
          if (Value)
          {
            v65 = Value;
            v66 = Mutable;
          }
          else
          {
            CFRelease(v63);
            v103.location = v13;
            v103.length = v18 - v13;
            v63 = CFStringCreateWithSubstring(a1, v4, v103);
            v66 = Mutable;
            v65 = v63;
          }
          CFStringAppend(v66, v65);
          CFRelease(v63);
        }
        else
        {
          if (v30 < 0x10000)
          {
            chars[0] = v30;
            v67 = Mutable;
            v68 = 1;
          }
          else
          {
            chars[0] = ((v30 + 67043328) >> 10) - 10240;
            chars[1] = v30 & 0x3FF | 0xDC00;
            v67 = Mutable;
            v68 = 2;
          }
          CFStringAppendCharacters(v67, chars, v68);
        }
        v12 = v18;
        goto LABEL_14;
      }
      v18 = v13 + 1;
LABEL_14:
      v13 = v18;
      if (v18 >= Length)
        goto LABEL_154;
    }
  }
  v18 = 0;
  v12 = 0;
LABEL_154:
  if (v12 < Length)
  {
    v104.length = v18 - v12;
    v104.location = v12;
    v73 = CFStringCreateWithSubstring(a1, v4, v104);
    CFStringAppend(theStringa, v73);
    v74 = v73;
    Mutable = theStringa;
    CFRelease(v74);
  }
  CFRelease(v8);
  return Mutable;
}

void sub_5BC98(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_5BCB4(uint64_t a1, void *a2)
{
  id *WeakRetained;
  id *v4;
  void *v5;
  id v6;
  double v7;
  id v8;
  id v9;

  v9 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained[1], "superview"));

    if (v5)
    {
      v6 = v4[1];
      if (UIAccessibilityIsReduceMotionEnabled())
        v7 = 0.3;
      else
        v7 = 0.15;
      v8 = objc_msgSend(objc_alloc((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 0, 0, v7);
      objc_msgSend(v6, "setImage:animatedWithAnimator:", v9, v8);

      objc_msgSend(v8, "startAnimation");
    }
  }

}

id sub_5D1BC(uint64_t a1, void *a2)
{
  void *v2;

  if (*(_BYTE *)(a1 + 32))
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "im_visibleChildViewControllers"));
  else
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "childViewControllers"));
  return v2;
}

id sub_5EA64(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", a2);
}

uint64_t sub_5EFC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_5F35C(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "setTintColor:", *(_QWORD *)(a1 + 40));
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

id sub_6032C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 144), "_setAlongsideCompletions:", 0);
}

id sub_603C0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 144), "_setInteractiveChangeHandlers:", 0);
}

id sub_60498(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 144), "_setAlongsideAnimations:", 0);
}

BOOL sub_6079C(IMViewControllerTransitionContext *self, SEL a2)
{
  return self->_isAnimated;
}

id BKSemanticLayoutInternalLog()
{
  if (qword_30D698 != -1)
    dispatch_once(&qword_30D698, &stru_28DE18);
  return (id)qword_30D690;
}

void sub_60910(id a1)
{
  os_log_t v1;
  id v2;
  void *v3;

  if (+[BCDevice isInternalInstall](BCDevice, "isInternalInstall"))
  {
    v1 = os_log_create("com.apple.iBooks", "BKSemanticLayoutInternal");
  }
  else
  {
    v1 = (os_log_t)&_os_log_disabled;
    v2 = &_os_log_disabled;
  }
  v3 = (void *)qword_30D690;
  qword_30D690 = (uint64_t)v1;

}

void sub_609AC(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("kBKSemanticLayoutOptions_v3")));

  v2 = objc_claimAutoreleasedReturnValue(+[BCSemanticLayoutOptions fromJSON:](BCSemanticLayoutOptions, "fromJSON:", v4));
  v3 = (void *)qword_30D6A8;
  qword_30D6A8 = v2;

}

void sub_60A60(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKSemanticLayoutOptions");
  v2 = (void *)qword_30D6B0;
  qword_30D6B0 = (uint64_t)v1;

}

double sub_60D4C(void *a1, void *a2, double a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  float v11;

  v5 = a2;
  v6 = a1;
  v7 = objc_opt_class(NSNumber);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v5));

  v9 = BUDynamicCast(v7, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

  if (v10)
  {
    objc_msgSend(v10, "floatValue");
    a3 = v11;
  }

  return a3;
}

void sub_618F4(id a1)
{
  NSMutableDictionary *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v1 = objc_opt_new(NSMutableDictionary);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BCCoverEffects sharedInstance](BCCoverEffects, "sharedInstance"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "bookCoverEffectFilters"));

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "identifier", (_QWORD)v12));
        if (v10)
          -[NSMutableDictionary setObject:forKeyedSubscript:](v1, "setObject:forKeyedSubscript:", v9, v10);

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

  v11 = (void *)qword_30D6C0;
  qword_30D6C0 = (uint64_t)v1;

}

void sub_620CC(uint64_t a1, CGImageRef image, double a3, double a4, double a5, double a6)
{
  double Width;
  size_t Height;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  id v21;
  id v22;

  if (image)
  {
    Width = (double)CGImageGetWidth(image);
    Height = CGImageGetHeight(image);
    v14 = *(double *)(a1 + 64);
    v15 = Width / v14;
    v16 = a4 + 0.0 / v14;
    v17 = a3 + 0.0 / v14;
    v18 = v15 - (a4 + a6);
    v19 = (double)Height / v14 - (a3 + a5);
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[BICImage imageWithCGImage:](BICImage, "imageWithCGImage:", image));
    objc_msgSend(*(id *)(a1 + 32), "setImage:", v20);

    objc_msgSend(*(id *)(a1 + 32), "setNonShadowArea:", v16, v17, v18, v19);
    objc_msgSend(*(id *)(a1 + 32), "setProcessingOptions:", objc_msgSend(*(id *)(a1 + 40), "processingOptions"));
    if (objc_msgSend(*(id *)(a1 + 48), "isGeneric"))
      objc_msgSend(*(id *)(a1 + 32), "setProcessingOptions:", objc_msgSend(*(id *)(a1 + 32), "processingOptions") | 0x200);
    +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", *(_QWORD *)(a1 + 32), CFSTR("CacheTransformWithProcessingOptions"));
    v21 = objc_retainBlock(*(id *)(a1 + 56));
    if (v21)
    {
      v22 = v21;
      (*((void (**)(id, _QWORD))v21 + 2))(v21, *(_QWORD *)(a1 + 32));
      v21 = v22;
    }

  }
}

void sub_623B4(uint64_t a1, void *a2, void *a3, double a4, double a5, double a6, double a7)
{
  id v13;
  id v14;
  void (**v15)(id, id, _QWORD, double, double, double, double);
  os_unfair_lock_s *v16;
  os_unfair_lock_s *v17;
  id v18;
  _QWORD v19[5];
  id v20;

  v13 = a2;
  v14 = a3;
  v15 = (void (**)(id, id, _QWORD, double, double, double, double))objc_retainBlock(*(id *)(a1 + 40));
  if (v15)
    v15[2](v15, objc_msgSend(v14, "CGImage"), 0, a4, a5, a6, a7);

  v16 = *(os_unfair_lock_s **)(a1 + 32);
  v17 = v16 + 2;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_624C0;
  v19[3] = &unk_28B808;
  v19[4] = v16;
  v20 = v13;
  v18 = v13;
  os_unfair_lock_lock(v17);
  sub_624C0((uint64_t)v19);
  os_unfair_lock_unlock(v17);

}

void sub_624C0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderOperations"));
  objc_msgSend(v2, "removeObjectIdenticalTo:", *(_QWORD *)(a1 + 40));

}

void sub_62500(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderOperations"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_62874(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *i;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *j;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *k;
  uint64_t v18;
  void *v19;
  id obj;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  _BYTE v35[128];
  _BYTE v36[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  obj = *(id *)(a1 + 32);
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v36, 16);
  if (v3)
  {
    v4 = v3;
    v21 = *(_QWORD *)v31;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v31 != v21)
          objc_enumerationMutation(obj);
        v6 = *(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)i);
        v26 = 0u;
        v27 = 0u;
        v28 = 0u;
        v29 = 0u;
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "imagesInCacheSinceLaunch"));
        v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v26, v35, 16);
        if (v8)
        {
          v9 = v8;
          v10 = *(_QWORD *)v27;
          do
          {
            for (j = 0; j != v9; j = (char *)j + 1)
            {
              if (*(_QWORD *)v27 != v10)
                objc_enumerationMutation(v7);
              v12 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)j);
              if (objc_msgSend(v12, "hasPrefix:", v6))
                objc_msgSend(v2, "addObject:", v12);
            }
            v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v26, v35, 16);
          }
          while (v9);
        }

      }
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v36, 16);
    }
    while (v4);
  }

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v13 = v2;
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v34, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v23;
    do
    {
      for (k = 0; k != v15; k = (char *)k + 1)
      {
        if (*(_QWORD *)v23 != v16)
          objc_enumerationMutation(v13);
        v18 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)k);
        v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dataStore"));
        objc_msgSend(v19, "markAsOldImageForEntryLocation:", v18);

      }
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v22, v34, 16);
    }
    while (v15);
  }

}

void sub_62C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_62C84(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_62C94(uint64_t a1)
{

}

void sub_62C9C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesInCacheSinceLaunch", 0));
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v8, "hasPrefix:", *(_QWORD *)(a1 + 40)))
        {
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataStore"));
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "imageForEntryLocation:", v8));

          if (v10)
          {
            objc_msgSend(v10, "setLocation:", 1);
            objc_msgSend(v2, "addObject:", v10);
          }

        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v5);
  }

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "comparator"));
  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "sortedBestMatchOf:toCandidateImages:", *(_QWORD *)(a1 + 48), v2));
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v14 = *(void **)(v13 + 40);
  *(_QWORD *)(v13 + 40) = v12;

}

void sub_630F8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesInCacheSinceLaunch"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_6332C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesInCacheSinceLaunch"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

}

void sub_63584(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_635A4(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  unsigned int v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesInCacheSinceLaunch", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    while (2)
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v7, "hasPrefix:", *(_QWORD *)(a1 + 40)))
        {
          v8 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageFromEntryLocation:](BICDescribedImage, "describedImageFromEntryLocation:", v7));
          v9 = objc_msgSend(v8, "processingOptions") & 0xFFFFFDFF;
          if (v9 == objc_msgSend(*(id *)(a1 + 48), "processingOptions"))
          {
            objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v7);

            goto LABEL_13;
          }

        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      if (v4)
        continue;
      break;
    }
  }
LABEL_13:

}

void sub_63700(uint64_t a1)
{
  void *v2;
  unsigned int v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesInCacheSinceLaunch"));
  v3 = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (v3)
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(id *)(a1 + 40));
}

void sub_63A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_63A98(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesInCacheSinceLaunch"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_63E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_63E48(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesInCacheSinceLaunch"));
  v3 = objc_msgSend(v2, "mutableCopy");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v8 = (id)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("SELF beginswith %@"), v6));
  objc_msgSend(v7, "filterUsingPredicate:", v8);

}

void sub_640D0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesInCacheSinceLaunch"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

}

void sub_64228(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

void sub_6430C(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

id BCSignpostFeedViewController()
{
  if (qword_30D6D8 != -1)
    dispatch_once(&qword_30D6D8, &stru_28DF10);
  return (id)qword_30D6D0;
}

void sub_64424(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "FeedViewController");
  v2 = (void *)qword_30D6D0;
  qword_30D6D0 = (uint64_t)v1;

}

id BCSignpostLaunch()
{
  if (qword_30D6E8 != -1)
    dispatch_once(&qword_30D6E8, &stru_28DF30);
  return (id)qword_30D6E0;
}

void sub_64494(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "Launch");
  v2 = (void *)qword_30D6E0;
  qword_30D6E0 = (uint64_t)v1;

}

id BCSignpostLibrary()
{
  if (qword_30D6F8 != -1)
    dispatch_once(&qword_30D6F8, &stru_28DF50);
  return (id)qword_30D6F0;
}

void sub_64504(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "Library");
  v2 = (void *)qword_30D6F0;
  qword_30D6F0 = (uint64_t)v1;

}

id BCSignpostLibraryDataSource()
{
  if (qword_30D708 != -1)
    dispatch_once(&qword_30D708, &stru_28DF70);
  return (id)qword_30D700;
}

void sub_64574(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "Library DataSource");
  v2 = (void *)qword_30D700;
  qword_30D700 = (uint64_t)v1;

}

id BCSignpostLibrarySetupQueue()
{
  if (qword_30D718 != -1)
    dispatch_once(&qword_30D718, &stru_28DF90);
  return (id)qword_30D710;
}

void sub_645E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "LibrarySetupQueue");
  v2 = (void *)qword_30D710;
  qword_30D710 = (uint64_t)v1;

}

id BCSignpostPreLaunchQueue()
{
  if (qword_30D728 != -1)
    dispatch_once(&qword_30D728, &stru_28DFB0);
  return (id)qword_30D720;
}

void sub_64654(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "PreLaunchQueue");
  v2 = (void *)qword_30D720;
  qword_30D720 = (uint64_t)v1;

}

id BCSignpostStartupQueue()
{
  if (qword_30D738 != -1)
    dispatch_once(&qword_30D738, &stru_28DFD0);
  return (id)qword_30D730;
}

void sub_646C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "StartupQueue");
  v2 = (void *)qword_30D730;
  qword_30D730 = (uint64_t)v1;

}

void sub_649F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_opt_new(*(_QWORD *)(a1 + 32));
  v2 = (void *)qword_30D740;
  qword_30D740 = v1;

}

id IMCommonCoreAccessibilityLocalizedString(void *a1)
{
  id v1;
  NSBundle *v2;
  void *v3;
  id v4;
  int ShouldCrashOnValidationErrorAfterLaunch;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = a1;
  v2 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(IMCommonCoreAccessibility));
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", v1, &stru_296430, CFSTR("BCCommonCoreAccessibility")));

  if (IMAccessibilityShouldPerformValidationChecks())
  {
    if (v4 == v1)
    {
      ShouldCrashOnValidationErrorAfterLaunch = IMAccessibilityShouldCrashOnValidationErrorAfterLaunch();
      if (__IMAccessibilityHandleValidationErrorWithDescription(ShouldCrashOnValidationErrorAfterLaunch, 0, CFSTR("error: String could not be found for key: %@"), v6, v7, v8, v9, v10, (uint64_t)v1))abort();
    }
  }

  return v4;
}

id __IMAccessibilityStringForVariables(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id *v15;
  id v16;
  id v17;
  void *v18;
  id *v20;

  v9 = a1;
  v10 = objc_opt_class(NSString);
  v11 = objc_opt_class(NSAttributedString);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableString stringWithString:](NSMutableString, "stringWithString:", &stru_296430));
  if ((objc_opt_isKindOfClass(v9, v10) & 1) != 0)
  {
    v13 = v9;
  }
  else
  {
    if ((objc_opt_isKindOfClass(v9, v11) & 1) == 0)
    {
      v14 = 0;
      goto LABEL_7;
    }
    v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "string"));
  }
  v14 = v13;
LABEL_7:
  if (objc_msgSend(v14, "length"))
    objc_msgSend(v12, "appendString:", v14);
  v20 = (id *)&a9;
  while (1)
  {
    v15 = v20++;
    v16 = *v15;
    if ((objc_opt_isKindOfClass(v16, v10) & 1) != 0)
    {
      v17 = v16;
LABEL_14:
      v18 = v17;
      goto LABEL_16;
    }
    if ((objc_opt_isKindOfClass(v16, v11) & 1) != 0)
    {
      v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "string"));
      goto LABEL_14;
    }
    v18 = 0;
LABEL_16:
    if (!objc_msgSend(v18, "length"))
      goto LABEL_21;
    if ((objc_msgSend(v18, "isEqualToString:", CFSTR("__IMAccessibilityStringForVariablesSentinel")) & 1) != 0)
      break;
    if (objc_msgSend(v12, "length"))
      objc_msgSend(v12, "appendString:", CFSTR(", "));
    objc_msgSend(v12, "appendString:", v18);
LABEL_21:

  }
  return v12;
}

void IMAccessibilityPerformBlockOnMainThread(void *a1)
{
  void (**block)(void);

  block = a1;
  if (+[NSThread isMainThread](NSThread, "isMainThread"))
    block[2]();
  else
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void IMAccessibilityPerformBlockAsynchronouslyOnMainThread(dispatch_block_t block)
{
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void IMAccessibilityPerformBlockOnMainThreadAfterDelay(void *a1, double a2)
{
  int64_t v2;
  dispatch_time_t v3;
  dispatch_block_t block;

  v2 = (uint64_t)(a2 * 1000000000.0);
  block = a1;
  v3 = dispatch_time(0, v2);
  dispatch_after(v3, (dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_65250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_65268(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_65278(uint64_t a1)
{

}

void sub_65280(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = sub_65324(*(_QWORD *)(a1 + 48), (uint64_t)objc_msgSend(*(id *)(a1 + 32), "epubTheme"));
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = objc_retainAutorelease(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  v7 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", objc_msgSend(v6, "CGColor")));

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v7;

}

id sub_65324(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  double v4;
  void *v5;
  double v6;
  id result;
  double v8;
  double v9;

  switch(a1)
  {
    case 0:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          goto LABEL_35;
        case 3:
          v2 = 0.968627451;
          v3 = 0.945098039;
          v4 = 0.894117647;
          goto LABEL_74;
        case 4:
          v2 = 0.282352941;
          v4 = 0.290196078;
          goto LABEL_66;
        default:
          goto LABEL_30;
      }
    case 1:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksSecondaryBackground](UIColor, "bc_booksSecondaryBackground"));
          goto LABEL_76;
        case 3:
          goto LABEL_42;
        case 4:
          v2 = 0.341176471;
          v4 = 0.356862745;
          goto LABEL_66;
        default:
          goto LABEL_30;
      }
    case 2:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksGroupedBackground](UIColor, "bc_booksGroupedBackground"));
          goto LABEL_76;
        case 3:
LABEL_42:
          v2 = 0.917647059;
          v3 = 0.898039216;
          v4 = 0.843137255;
          goto LABEL_74;
        case 4:
          v2 = 0.22745098;
          v4 = 0.235294118;
          goto LABEL_66;
        default:
          goto LABEL_30;
      }
    case 3:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksSecondaryGroupedBackground](UIColor, "bc_booksSecondaryGroupedBackground"));
          goto LABEL_76;
        case 3:
          v3 = 0.976470588;
          v4 = 0.925490196;
          v2 = 1.0;
          goto LABEL_74;
        case 4:
          v2 = 0.301960784;
          v4 = 0.309803922;
          goto LABEL_66;
        default:
          goto LABEL_30;
      }
    case 4:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
          v6 = 0.7;
          goto LABEL_69;
        case 3:
          v2 = 0.682352941;
          v3 = 0.654901961;
          v4 = 0.545098039;
          goto LABEL_74;
        case 4:
          v6 = 0.666666667;
          v9 = 0.5;
          goto LABEL_70;
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemBlackColor](UIColor, "systemBlackColor"));
          goto LABEL_76;
        default:
          goto LABEL_30;
      }
    case 5:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
          goto LABEL_33;
        case 3:
          v2 = 0.290196078;
          v3 = 0.2;
          v4 = 0.125490196;
          goto LABEL_74;
        case 4:
          v8 = 0.77;
          goto LABEL_55;
        case 5:
          v8 = 0.67;
LABEL_55:
          v2 = 1.0;
          v3 = 1.0;
          v4 = 1.0;
          goto LABEL_75;
        default:
          goto LABEL_30;
      }
    case 6:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksSecondaryLabelColor](UIColor, "bc_booksSecondaryLabelColor"));
          goto LABEL_76;
        case 3:
          v2 = 0.290196078;
          v3 = 0.2;
          v4 = 0.125490196;
          v8 = 0.5;
          goto LABEL_75;
        case 4:
          v2 = 0.921568627;
          v4 = 0.960784314;
          v8 = 0.4;
          goto LABEL_67;
        default:
          goto LABEL_30;
      }
    case 7:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          goto LABEL_22;
        case 3:
          goto LABEL_44;
        case 4:
          goto LABEL_45;
        default:
          goto LABEL_30;
      }
    case 8:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksQuaternaryLabelColor](UIColor, "bc_booksQuaternaryLabelColor"));
          goto LABEL_76;
        case 3:
          v2 = 0.290196078;
          v3 = 0.2;
          v4 = 0.125490196;
          v8 = 0.19;
          goto LABEL_75;
        case 4:
          goto LABEL_43;
        default:
          goto LABEL_30;
      }
    case 9:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksSeparatorColor](UIColor, "bc_booksSeparatorColor"));
          goto LABEL_76;
        case 3:
          v2 = 0.290196078;
          v3 = 0.2;
          v4 = 0.125490196;
          v8 = 0.29;
          goto LABEL_75;
        case 4:
LABEL_43:
          v2 = 0.921568627;
          v4 = 0.960784314;
          v8 = 0.19;
          goto LABEL_67;
        default:
          goto LABEL_30;
      }
    case 10:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
LABEL_22:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksTertiaryLabelColor](UIColor, "bc_booksTertiaryLabelColor"));
          goto LABEL_76;
        case 3:
LABEL_44:
          v2 = 0.290196078;
          v3 = 0.2;
          v4 = 0.125490196;
          v8 = 0.3;
          goto LABEL_75;
        case 4:
LABEL_45:
          v2 = 0.921568627;
          v4 = 0.960784314;
          v8 = 0.3;
          goto LABEL_67;
        default:
          goto LABEL_30;
      }
    case 11:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemGreenColor](UIColor, "systemGreenColor"));
          goto LABEL_76;
        case 3:
          goto LABEL_39;
        case 4:
          goto LABEL_40;
        default:
          goto LABEL_30;
      }
    case 12:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemBlueColor](UIColor, "systemBlueColor"));
          goto LABEL_76;
        case 3:
          v2 = 0.749019608;
          v3 = 0.57254902;
          v4 = 0.188235294;
          goto LABEL_74;
        case 4:
        case 5:
LABEL_40:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksCyan](UIColor, "bc_booksCyan"));
          goto LABEL_76;
        default:
          goto LABEL_30;
      }
    case 13:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
LABEL_33:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksLabelColor](UIColor, "bc_booksLabelColor"));
          goto LABEL_76;
        case 3:
LABEL_39:
          v2 = 0.780392157;
          v3 = 0.596078431;
          v4 = 0.196078431;
          goto LABEL_74;
        case 4:
        case 5:
LABEL_31:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemWhiteColor](UIColor, "systemWhiteColor"));
          goto LABEL_76;
        default:
          goto LABEL_30;
      }
    case 14:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
          v2 = 0.109803922;
          v4 = 0.117647059;
          goto LABEL_66;
        case 3:
          v2 = 0.380392157;
          v3 = 0.301960784;
          v4 = 0.231372549;
          goto LABEL_74;
        case 4:
          v2 = 0.4;
          v4 = 0.419607843;
          goto LABEL_66;
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor tertiarySystemBackgroundColor](UIColor, "tertiarySystemBackgroundColor"));
          goto LABEL_76;
        default:
          goto LABEL_30;
      }
    case 15:
LABEL_30:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          goto LABEL_31;
        default:
          goto LABEL_32;
      }
    case 16:
LABEL_32:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
          goto LABEL_33;
        case 3:
          goto LABEL_39;
        case 4:
        case 5:
          v2 = 0.921568627;
          v4 = 0.960784314;
          v8 = 0.22;
          goto LABEL_67;
        default:
          goto LABEL_38;
      }
    case 17:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
LABEL_35:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksBackground](UIColor, "bc_booksBackground"));
          goto LABEL_76;
        case 3:
          v2 = 0.831372549;
          v3 = 0.776470588;
          v4 = 0.623529412;
LABEL_74:
          v8 = 1.0;
          goto LABEL_75;
        case 4:
          v2 = 0.352941176;
          v4 = 0.360784314;
LABEL_66:
          v8 = 1.0;
          goto LABEL_67;
        case 5:
          v6 = 0.2;
LABEL_69:
          v9 = 1.0;
LABEL_70:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", v6, v9));
          goto LABEL_76;
        default:
          goto LABEL_38;
      }
    case 18:
      switch(a2)
      {
        case -1:
        case 0:
        case 1:
        case 2:
        case 5:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksTableSelectionColor](UIColor, "bc_booksTableSelectionColor"));
          goto LABEL_76;
        case 3:
          v2 = 0.290196078;
          v3 = 0.2;
          v4 = 0.125490196;
          v8 = 0.15;
          goto LABEL_75;
        case 4:
          v2 = 0.921568627;
          v4 = 0.960784314;
          v8 = 0.13;
LABEL_67:
          v3 = v2;
LABEL_75:
          v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", v2, v3, v4, v8));
LABEL_76:
          result = v5;
          break;
        default:
          goto LABEL_38;
      }
      break;
    default:
LABEL_38:
      result = 0;
      break;
  }
  return result;
}

void sub_65C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_65C8C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = sub_65324(0, (uint64_t)objc_msgSend(*(id *)(a1 + 32), "epubTheme"));
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = objc_retainAutorelease(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  v7 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", objc_msgSend(v6, "CGColor")));

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v7;

}

id sub_65F38(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "stylizeMenuTableViewCell:", *(_QWORD *)(a1 + 40));
}

void sub_660E8(_Unwind_Exception *exception_object)
{
  char v1;

  if ((v1 & 1) != 0)
    objc_end_catch();
  _Unwind_Resume(exception_object);
}

void sub_66578(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_665A4(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 0);
}

void sub_665B0(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 1);
}

void sub_665BC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = sub_65324(0, (uint64_t)objc_msgSend(*(id *)(a1 + 32), "epubTheme"));
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = objc_retainAutorelease(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  v7 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", objc_msgSend(v6, "CGColor")));

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v7;

}

void sub_6665C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = sub_65324(0, (uint64_t)objc_msgSend(*(id *)(a1 + 32), "epubTheme"));
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = objc_retainAutorelease(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  v7 = objc_claimAutoreleasedReturnValue(+[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", objc_msgSend(v6, "CGColor")));

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v7;

}

id sub_68BA0(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v1 = *(void **)(a1 + 32);
  v2 = objc_msgSend(v1, "rangeOfVisibleCells");
  return objc_msgSend(v1, "arrangeVisibleCells:", v2, v3);
}

id sub_68BD0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_endCellAnimations");
}

void sub_69068(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  CGAffineTransform v12;
  CGAffineTransform v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(*(_QWORD *)(a1 + 32) + 184);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v3)
  {
    v4 = v3;
    v5 = 0;
    v6 = *(_QWORD *)v15;
    do
    {
      v7 = 0;
      v8 = v5;
      do
      {
        if (*(_QWORD *)v15 != v6)
          objc_enumerationMutation(v2);
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visibleCellForIndex:", objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v7), "index")));

        if (v5)
        {
          CGAffineTransformMakeScale(&v13, 0.001, 0.001);
          v12 = v13;
          objc_msgSend(v5, "setTransform:", &v12);
        }
        v7 = (char *)v7 + 1;
        v8 = v5;
      }
      while (v4 != v7);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v4);

  }
  v9 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v9 + 208))
    objc_msgSend(*(id *)(v9 + 208), "addObjectsFromArray:", *(_QWORD *)(v9 + 184));
  else
    objc_storeStrong((id *)(v9 + 208), *(id *)(v9 + 184));
  ++*(_DWORD *)(*(_QWORD *)(a1 + 32) + 200);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(void **)(v10 + 184);
  *(_QWORD *)(v10 + 184) = 0;

}

id sub_69234(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "deleteCellDidAnimate");
}

void sub_69C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

id sub_69C34(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setNeedsLayout");
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

uint64_t sub_69C5C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_69C6C(uint64_t a1)
{

}

id sub_69C74(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataSource"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "gridView:cellForIndex:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48)));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "layoutSubviews");
}

id sub_69CD4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setEndCell:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

id sub_69CE8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "prepareToCrossfade");
}

void sub_69F40(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "footerView"));
  objc_msgSend(v1, "setAlpha:", 1.0);

}

id sub_6B32C(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "_hideGrabbedCell");
  if (a2)
    return objc_msgSend(*(id *)(a1 + 32), "dragInteraction:session:didEndWithOperation:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), 0);
  return result;
}

id sub_6B598(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setPendingCancelView:", 0);
}

void sub_6BC18(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingDropView"));

  if (v2)
  {
    objc_msgSend(*(id *)(a1 + 32), "_showGrabbedCell");
    objc_msgSend(*(id *)(a1 + 32), "setPendingDropView:", 0);
  }
}

id sub_6C014(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "layoutSubviews");
}

id sub_6C19C(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  if (*(_BYTE *)(a1 + 48))
    return objc_msgSend(*(id *)(a1 + 40), "layoutSubviews");
  return result;
}

id sub_6CC28(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setAlpha:", 0.0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setAlpha:", 1.0);
}

void sub_6DE28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_6DE48(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v3 = a2;
  v4 = v3;
  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
  {
    v5 = 0;
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
    v12 = 0u;
    v13 = 0u;
    v6 = v3;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v13;
      while (2)
      {
        v10 = 0;
        do
        {
          if (*(_QWORD *)v13 != v9)
            objc_enumerationMutation(v6);
          if ((objc_opt_isKindOfClass(*(_QWORD *)(a1 + 32), *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v10)) & 1) != 0)
          {
            v5 = 1;
            goto LABEL_13;
          }
          v10 = (char *)v10 + 1;
        }
        while (v8 != v10);
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
        if (v8)
          continue;
        break;
      }
    }
    v5 = 0;
LABEL_13:

  }
  return v5;
}

id sub_6E620(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_accessibilityBumpValue:", 1);
}

id sub_6E6B4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_accessibilityBumpValue:", 0);
}

id BCImageCacheLog()
{
  if (qword_30D758 != -1)
    dispatch_once(&qword_30D758, &stru_28E4F8);
  return (id)qword_30D750;
}

void sub_6EA94(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BookCore.imageCache");
  v2 = (void *)qword_30D750;
  qword_30D750 = (uint64_t)v1;

}

id BCAugmentedExperienceLog()
{
  if (qword_30D768 != -1)
    dispatch_once(&qword_30D768, &stru_28E518);
  return (id)qword_30D760;
}

void sub_6EB04(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BookCore.AugmentedExperiences");
  v2 = (void *)qword_30D760;
  qword_30D760 = (uint64_t)v1;

}

id BCReadingStatisticsLog()
{
  if (qword_30D778 != -1)
    dispatch_once(&qword_30D778, &stru_28E538);
  return (id)qword_30D770;
}

void sub_6EB74(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.ReadingStatistics");
  v2 = (void *)qword_30D770;
  qword_30D770 = (uint64_t)v1;

}

id BCProgressKitLog()
{
  if (qword_30D788 != -1)
    dispatch_once(&qword_30D788, &stru_28E558);
  return (id)qword_30D780;
}

void sub_6EBE4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.ClassKit");
  v2 = (void *)qword_30D780;
  qword_30D780 = (uint64_t)v1;

}

id BCCloudKitLog()
{
  if (qword_30D798 != -1)
    dispatch_once(&qword_30D798, &stru_28E578);
  return (id)qword_30D790;
}

void sub_6EC54(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.CloudKit");
  v2 = (void *)qword_30D790;
  qword_30D790 = (uint64_t)v1;

}

id BCQuotaFetcherLog()
{
  if (qword_30D7A8 != -1)
    dispatch_once(&qword_30D7A8, &stru_28E598);
  return (id)qword_30D7A0;
}

void sub_6ECC4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.QuotaFetcher");
  v2 = (void *)qword_30D7A0;
  qword_30D7A0 = (uint64_t)v1;

}

id BCCardModelLog()
{
  if (qword_30D7B8 != -1)
    dispatch_once(&qword_30D7B8, &stru_28E5B8);
  return (id)qword_30D7B0;
}

void sub_6ED34(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.CardModel");
  v2 = (void *)qword_30D7B0;
  qword_30D7B0 = (uint64_t)v1;

}

id BCAVPlayerLog()
{
  if (qword_30D7C8 != -1)
    dispatch_once(&qword_30D7C8, &stru_28E5D8);
  return (id)qword_30D7C0;
}

void sub_6EDA4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.AVPlayer");
  v2 = (void *)qword_30D7C0;
  qword_30D7C0 = (uint64_t)v1;

}

id BCIMLog()
{
  if (qword_30D7D8 != -1)
    dispatch_once(&qword_30D7D8, &stru_28E5F8);
  return (id)qword_30D7D0;
}

void sub_6EE14(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.BCLog");
  v2 = (void *)qword_30D7D0;
  qword_30D7D0 = (uint64_t)v1;

}

id BCDragAndDropLog()
{
  if (qword_30D7E8 != -1)
    dispatch_once(&qword_30D7E8, &stru_28E618);
  return (id)qword_30D7E0;
}

void sub_6EE84(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.DragAndDrop");
  v2 = (void *)qword_30D7E0;
  qword_30D7E0 = (uint64_t)v1;

}

id BCUbiquityEnabledLog()
{
  if (qword_30D7F8 != -1)
    dispatch_once(&qword_30D7F8, &stru_28E638);
  return (id)qword_30D7F0;
}

void sub_6EEF4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.UbiquityEnabled");
  v2 = (void *)qword_30D7F0;
  qword_30D7F0 = (uint64_t)v1;

}

id BKLibraryLog()
{
  if (qword_30D808 != -1)
    dispatch_once(&qword_30D808, &stru_28E658);
  return (id)qword_30D800;
}

void sub_6EF64(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary");
  v2 = (void *)qword_30D800;
  qword_30D800 = (uint64_t)v1;

}

id BCSeriesManagerLog()
{
  if (qword_30D818 != -1)
    dispatch_once(&qword_30D818, &stru_28E678);
  return (id)qword_30D810;
}

void sub_6EFD4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.SeriesManager");
  v2 = (void *)qword_30D810;
  qword_30D810 = (uint64_t)v1;

}

id BCSeriesManagerUpdaterLog()
{
  if (qword_30D828 != -1)
    dispatch_once(&qword_30D828, &stru_28E698);
  return (id)qword_30D820;
}

void sub_6F044(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.SeriesManagerUpdater");
  v2 = (void *)qword_30D820;
  qword_30D820 = (uint64_t)v1;

}

id BKLibraryPerformanceLog()
{
  if (qword_30D838 != -1)
    dispatch_once(&qword_30D838, &stru_28E6B8);
  return (id)qword_30D830;
}

void sub_6F0B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.Performance");
  v2 = (void *)qword_30D830;
  qword_30D830 = (uint64_t)v1;

}

id BKLibraryCoverPerformanceLog()
{
  if (qword_30D848 != -1)
    dispatch_once(&qword_30D848, &stru_28E6D8);
  return (id)qword_30D840;
}

void sub_6F124(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.CoverPerformance");
  v2 = (void *)qword_30D840;
  qword_30D840 = (uint64_t)v1;

}

id BKLibraryUILog()
{
  if (qword_30D858 != -1)
    dispatch_once(&qword_30D858, &stru_28E6F8);
  return (id)qword_30D850;
}

void sub_6F194(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.UI");
  v2 = (void *)qword_30D850;
  qword_30D850 = (uint64_t)v1;

}

id BKMobileCloudSyncLog()
{
  if (qword_30D868 != -1)
    dispatch_once(&qword_30D868, &stru_28E718);
  return (id)qword_30D860;
}

void sub_6F204(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKMobile.CloudSync");
  v2 = (void *)qword_30D860;
  qword_30D860 = (uint64_t)v1;

}

id BKMobileCloudSyncAnnotationsLog()
{
  if (qword_30D878 != -1)
    dispatch_once(&qword_30D878, &stru_28E738);
  return (id)qword_30D870;
}

void sub_6F274(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKMobile.CloudSync.Annotations");
  v2 = (void *)qword_30D870;
  qword_30D870 = (uint64_t)v1;

}

id BKMobileCloudSyncAnnotationsPerformanceLog()
{
  if (qword_30D888 != -1)
    dispatch_once(&qword_30D888, &stru_28E758);
  return (id)qword_30D880;
}

void sub_6F2E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKMobile.CloudSync.Annotations.Performance");
  v2 = (void *)qword_30D880;
  qword_30D880 = (uint64_t)v1;

}

id BKMobileDragAndDropLog()
{
  if (qword_30D898 != -1)
    dispatch_once(&qword_30D898, &stru_28E778);
  return (id)qword_30D890;
}

void sub_6F354(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKMobile.DragAndDrop");
  v2 = (void *)qword_30D890;
  qword_30D890 = (uint64_t)v1;

}

id BCProductPageExtensionLog()
{
  if (qword_30D8A8 != -1)
    dispatch_once(&qword_30D8A8, &stru_28E798);
  return (id)qword_30D8A0;
}

void sub_6F3C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks.iBooksProductPageExtension", "BookCore.BCProductPageExtensionLog");
  v2 = (void *)qword_30D8A0;
  qword_30D8A0 = (uint64_t)v1;

}

id BKStoreLog()
{
  if (qword_30D8B8 != -1)
    dispatch_once(&qword_30D8B8, &stru_28E7B8);
  return (id)qword_30D8B0;
}

void sub_6F434(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKStore");
  v2 = (void *)qword_30D8B0;
  qword_30D8B0 = (uint64_t)v1;

}

id BKStoreAccessLog()
{
  if (qword_30D8C8 != -1)
    dispatch_once(&qword_30D8C8, &stru_28E7D8);
  return (id)qword_30D8C0;
}

void sub_6F4A4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKStore.StoreAccess");
  v2 = (void *)qword_30D8C0;
  qword_30D8C0 = (uint64_t)v1;

}

id BKStoreBookUpdateLog()
{
  if (qword_30D8D8 != -1)
    dispatch_once(&qword_30D8D8, &stru_28E7F8);
  return (id)qword_30D8D0;
}

void sub_6F514(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKStore.BookUpdate");
  v2 = (void *)qword_30D8D0;
  qword_30D8D0 = (uint64_t)v1;

}

id BCUbiquityMetadataHelperLog()
{
  if (qword_30D8E8 != -1)
    dispatch_once(&qword_30D8E8, &stru_28E818);
  return (id)qword_30D8E0;
}

void sub_6F584(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BookCore.Metadata");
  v2 = (void *)qword_30D8E0;
  qword_30D8E0 = (uint64_t)v1;

}

id BKLibraryDataSourceUbiquityLog()
{
  if (qword_30D8F8 != -1)
    dispatch_once(&qword_30D8F8, &stru_28E838);
  return (id)qword_30D8F0;
}

void sub_6F5F4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.DataSource.Ubiquity");
  v2 = (void *)qword_30D8F0;
  qword_30D8F0 = (uint64_t)v1;

}

id BKLibraryDataSourceMediaLibraryLog()
{
  if (qword_30D908 != -1)
    dispatch_once(&qword_30D908, &stru_28E858);
  return (id)qword_30D900;
}

void sub_6F664(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.DataSource.MediaLibrary");
  v2 = (void *)qword_30D900;
  qword_30D900 = (uint64_t)v1;

}

id BKLibraryBookImportLog()
{
  if (qword_30D918 != -1)
    dispatch_once(&qword_30D918, &stru_28E878);
  return (id)qword_30D910;
}

void sub_6F6D4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.Import");
  v2 = (void *)qword_30D910;
  qword_30D910 = (uint64_t)v1;

}

id BCBookDownloadLog()
{
  if (qword_30D928 != -1)
    dispatch_once(&qword_30D928, &stru_28E898);
  return (id)qword_30D920;
}

void sub_6F744(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BookCore.Download");
  v2 = (void *)qword_30D920;
  qword_30D920 = (uint64_t)v1;

}

id BKLibraryDataSourceBookKitLog()
{
  if (qword_30D938 != -1)
    dispatch_once(&qword_30D938, &stru_28E8B8);
  return (id)qword_30D930;
}

void sub_6F7B4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.DataSource.BookKit");
  v2 = (void *)qword_30D930;
  qword_30D930 = (uint64_t)v1;

}

id BKLibraryDataSourceSampleBooksLog()
{
  if (qword_30D948 != -1)
    dispatch_once(&qword_30D948, &stru_28E8D8);
  return (id)qword_30D940;
}

void sub_6F824(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.DataSource.SampleBooks");
  v2 = (void *)qword_30D940;
  qword_30D940 = (uint64_t)v1;

}

id BKLibraryDataSourceJaliscoLog()
{
  if (qword_30D958 != -1)
    dispatch_once(&qword_30D958, &stru_28E8F8);
  return (id)qword_30D950;
}

void sub_6F894(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.DataSource.Jalisco");
  v2 = (void *)qword_30D950;
  qword_30D950 = (uint64_t)v1;

}

id BKLibraryDataSourceSeriesLog()
{
  if (qword_30D968 != -1)
    dispatch_once(&qword_30D968, &stru_28E918);
  return (id)qword_30D960;
}

void sub_6F904(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.DataSource.Series");
  v2 = (void *)qword_30D960;
  qword_30D960 = (uint64_t)v1;

}

id BKATAssetLog()
{
  if (qword_30D978 != -1)
    dispatch_once(&qword_30D978, &stru_28E938);
  return (id)qword_30D970;
}

void sub_6F974(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "iBooks.ATAsset");
  v2 = (void *)qword_30D970;
  qword_30D970 = (uint64_t)v1;

}

id BKBookletMigrationLog()
{
  if (qword_30D988 != -1)
    dispatch_once(&qword_30D988, &stru_28E958);
  return (id)qword_30D980;
}

void sub_6F9E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKBookletMigration");
  v2 = (void *)qword_30D980;
  qword_30D980 = (uint64_t)v1;

}

id BCBookPromotionLog()
{
  if (qword_30D998 != -1)
    dispatch_once(&qword_30D998, &stru_28E978);
  return (id)qword_30D990;
}

void sub_6FA54(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BookPromotion");
  v2 = (void *)qword_30D990;
  qword_30D990 = (uint64_t)v1;

}

id BCCurrentBookLog()
{
  if (qword_30D9A8 != -1)
    dispatch_once(&qword_30D9A8, &stru_28E998);
  return (id)qword_30D9A0;
}

void sub_6FAC4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "CurrentBook");
  v2 = (void *)qword_30D9A0;
  qword_30D9A0 = (uint64_t)v1;

}

id BCCurrentBookLiveResizeLog()
{
  if (qword_30D9B8 != -1)
    dispatch_once(&qword_30D9B8, &stru_28E9B8);
  return (id)qword_30D9B0;
}

void sub_6FB34(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "CurrentBook.LiveResize");
  v2 = (void *)qword_30D9B0;
  qword_30D9B0 = (uint64_t)v1;

}

id BCCoverAnimationLog()
{
  if (qword_30D9C8 != -1)
    dispatch_once(&qword_30D9C8, &stru_28E9D8);
  return (id)qword_30D9C0;
}

void sub_6FBA4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BookCore.CoverAnimationLog");
  v2 = (void *)qword_30D9C0;
  qword_30D9C0 = (uint64_t)v1;

}

id THLog()
{
  if (qword_30D9D8 != -1)
    dispatch_once(&qword_30D9D8, &stru_28E9F8);
  return (id)qword_30D9D0;
}

void sub_6FC14(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "THLog");
  v2 = (void *)qword_30D9D0;
  qword_30D9D0 = (uint64_t)v1;

}

id BKLibraryItemStateProviderLog()
{
  if (qword_30D9E8 != -1)
    dispatch_once(&qword_30D9E8, &stru_28EA18);
  return (id)qword_30D9E0;
}

void sub_6FC84(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKLibrary.ItemStateProvider");
  v2 = (void *)qword_30D9E0;
  qword_30D9E0 = (uint64_t)v1;

}

id BKModernPDFLog()
{
  if (qword_30D9F8 != -1)
    dispatch_once(&qword_30D9F8, &stru_28EA38);
  return (id)qword_30D9F0;
}

void sub_6FCF4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.ModernPDF");
  v2 = (void *)qword_30D9F0;
  qword_30D9F0 = (uint64_t)v1;

}

id BCSpotlightIndexLog()
{
  if (qword_30DA08 != -1)
    dispatch_once(&qword_30DA08, &stru_28EA58);
  return (id)qword_30DA00;
}

void sub_6FD64(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCSpotlightIndexLog");
  v2 = (void *)qword_30DA00;
  qword_30DA00 = (uint64_t)v1;

}

id BALog()
{
  if (qword_30DA18 != -1)
    dispatch_once(&qword_30DA18, &stru_28EA78);
  return (id)qword_30DA10;
}

void sub_6FDD4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BookAnalytics");
  v2 = (void *)qword_30DA10;
  qword_30DA10 = (uint64_t)v1;

}

id BSUIFeedViewControllerLog()
{
  if (qword_30DA28 != -1)
    dispatch_once(&qword_30DA28, &stru_28EA98);
  return (id)qword_30DA20;
}

void sub_6FE44(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BookStoreUI.FeedViewController");
  v2 = (void *)qword_30DA20;
  qword_30DA20 = (uint64_t)v1;

}

id BSUITemplateLog()
{
  if (qword_30DA38 != -1)
    dispatch_once(&qword_30DA38, &stru_28EAB8);
  return (id)qword_30DA30;
}

void sub_6FEB4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BSUITemplate");
  v2 = (void *)qword_30DA30;
  qword_30DA30 = (uint64_t)v1;

}

id BSUIWelcomeScreenLog()
{
  if (qword_30DA48 != -1)
    dispatch_once(&qword_30DA48, &stru_28EAD8);
  return (id)qword_30DA40;
}

void sub_6FF24(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BSUIWelcomeScreenLog");
  v2 = (void *)qword_30DA40;
  qword_30DA40 = (uint64_t)v1;

}

id BSUIGoalsSharableImageRendererLog()
{
  if (qword_30DA58 != -1)
    dispatch_once(&qword_30DA58, &stru_28EAF8);
  return (id)qword_30DA50;
}

void sub_6FF94(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BSUIGoalsSharableImageRendererLog");
  v2 = (void *)qword_30DA50;
  qword_30DA50 = (uint64_t)v1;

}

id BCCardStackSignpost()
{
  if (qword_30DA68 != -1)
    dispatch_once(&qword_30DA68, &stru_28EB18);
  return (id)qword_30DA60;
}

void sub_70004(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCardStackSignpost");
  v2 = (void *)qword_30DA60;
  qword_30DA60 = (uint64_t)v1;

}

id BCAugmentedExperienceSignpost()
{
  if (qword_30DA78 != -1)
    dispatch_once(&qword_30DA78, &stru_28EB38);
  return (id)qword_30DA70;
}

void sub_70074(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCAugmentedExperienceSignpost");
  v2 = (void *)qword_30DA70;
  qword_30DA70 = (uint64_t)v1;

}

id BCSceneLog()
{
  if (qword_30DA88 != -1)
    dispatch_once(&qword_30DA88, &stru_28EB58);
  return (id)qword_30DA80;
}

void sub_700E4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCSceneLog");
  v2 = (void *)qword_30DA80;
  qword_30DA80 = (uint64_t)v1;

}

id BCAppIntentsLog()
{
  if (qword_30DA98 != -1)
    dispatch_once(&qword_30DA98, &stru_28EB78);
  return (id)qword_30DA90;
}

void sub_70154(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AppIntents");
  v2 = (void *)qword_30DA90;
  qword_30DA90 = (uint64_t)v1;

}

id BooksSiriLog()
{
  if (qword_30DAA8 != -1)
    dispatch_once(&qword_30DAA8, &stru_28EB98);
  return (id)qword_30DAA0;
}

void sub_701C4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BooksSiriLog");
  v2 = (void *)qword_30DAA0;
  qword_30DAA0 = (uint64_t)v1;

}

id BRCConfigLog()
{
  if (qword_30DAB8 != -1)
    dispatch_once(&qword_30DAB8, &stru_28EBB8);
  return (id)qword_30DAB0;
}

void sub_70234(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BRCConfigLog");
  v2 = (void *)qword_30DAB0;
  qword_30DAB0 = (uint64_t)v1;

}

id BCLookupLog()
{
  if (qword_30DAC8 != -1)
    dispatch_once(&qword_30DAC8, &stru_28EBD8);
  return (id)qword_30DAC0;
}

void sub_702A4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "Books.Lookup");
  v2 = (void *)qword_30DAC0;
  qword_30DAC0 = (uint64_t)v1;

}

id BCAudiobooksAppLog()
{
  if (qword_30DAD8 != -1)
    dispatch_once(&qword_30DAD8, &stru_28EBF8);
  return (id)qword_30DAD0;
}

void sub_70314(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "Books.Audiobooks");
  v2 = (void *)qword_30DAD0;
  qword_30DAD0 = (uint64_t)v1;

}

id BKCarPlayLog()
{
  if (qword_30DAE8 != -1)
    dispatch_once(&qword_30DAE8, &stru_28EC18);
  return (id)qword_30DAE0;
}

void sub_70384(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKCarPlay");
  v2 = (void *)qword_30DAE0;
  qword_30DAE0 = (uint64_t)v1;

}

id BCRemoteManagedObjectIDMonitorLog()
{
  if (qword_30DAF8 != -1)
    dispatch_once(&qword_30DAF8, &stru_28EC38);
  return (id)qword_30DAF0;
}

void sub_703F4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCRemoteManagedObjectIDMonitor");
  v2 = (void *)qword_30DAF0;
  qword_30DAF0 = (uint64_t)v1;

}

id BCSleepManagerLog()
{
  if (qword_30DB08 != -1)
    dispatch_once(&qword_30DB08, &stru_28EC58);
  return (id)qword_30DB00;
}

void sub_70464(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCSleepManager");
  v2 = (void *)qword_30DB00;
  qword_30DB00 = (uint64_t)v1;

}

id BSUIStoreServicesLog()
{
  if (qword_30DB18 != -1)
    dispatch_once(&qword_30DB18, &stru_28EC78);
  return (id)qword_30DB10;
}

void sub_704D4(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BSUIStoreServices");
  v2 = (void *)qword_30DB10;
  qword_30DB10 = (uint64_t)v1;

}

id BCTransactionLog()
{
  if (qword_30DB28 != -1)
    dispatch_once(&qword_30DB28, &stru_28EC98);
  return (id)qword_30DB20;
}

void sub_70544(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCCommonCore.Transaction");
  v2 = (void *)qword_30DB20;
  qword_30DB20 = (uint64_t)v1;

}

void sub_71670(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 0);
}

void sub_7167C(id a1, UIMutableTraits *a2)
{
  -[UIMutableTraits setUserInterfaceLevel:](a2, "setUserInterfaceLevel:", 1);
}

BOOL BCRectsAlmostEqual(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return vabdd_f64(a1, a5) < 0.00999999978
      && vabdd_f64(a2, a6) < 0.00999999978
      && vabdd_f64(a3, a7) < 0.00999999978
      && vabdd_f64(a4, a8) < 0.00999999978;
}

void sub_71BCC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "layer"));
  v4 = objc_msgSend(v3, "CGContext");

  objc_msgSend(v5, "renderInContext:", v4);
}

id sub_71E08(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(v2, "bounds");
  return _objc_msgSend(v2, "drawViewHierarchyInRect:afterScreenUpdates:", *(unsigned __int8 *)(a1 + 40));
}

void sub_73420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_73438(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workItems"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (unint64_t)objc_msgSend(v2, "count") > 0x4B;

}

void sub_735FC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workItems"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_73868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_73894(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_738A4(uint64_t a1)
{

}

void sub_738AC(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workItems"));
  if (objc_msgSend(v10, "count"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workingOnItems"));
    v3 = objc_msgSend(v2, "count");
    v4 = objc_msgSend(*(id *)(a1 + 32), "numConcurrentWorkItems");

    if (v3 >= v4)
      return;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workItems"));
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "valueForKeyPath:", CFSTR("@max.self")));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workItems"));
    objc_msgSend(v9, "removeObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));

    v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workingOnItems"));
    objc_msgSend(v10, "addObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
  }

}

id sub_739BC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;
  dispatch_time_t v8;
  uint64_t v9;
  id result;
  _QWORD block[6];
  id v12;
  uint8_t buf[4];
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  void *v18;

  v2 = BCImageCacheLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_statsString"));
    *(_DWORD *)buf = 138543874;
    v14 = v4;
    v15 = 2112;
    v16 = v5;
    v17 = 2114;
    v18 = v6;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BICWorkQueue: Running %{public}@ on queue \"%@\". %{public}@", buf, 0x20u);

  }
  if (objc_msgSend(*(id *)(a1 + 32), "manualCompletion"))
  {
    objc_initWeak((id *)buf, *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
    objc_msgSend(*(id *)(a1 + 32), "workItemTimeout");
    v8 = dispatch_time(0, (uint64_t)(v7 * 1000000000.0));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_73BBC;
    block[3] = &unk_28ED78;
    objc_copyWeak(&v12, (id *)buf);
    v9 = *(_QWORD *)(a1 + 48);
    block[4] = *(_QWORD *)(a1 + 32);
    block[5] = v9;
    dispatch_after(v8, (dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v12);
    objc_destroyWeak((id *)buf);
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "performWork:", *(_QWORD *)(a1 + 40));
  result = objc_msgSend(*(id *)(a1 + 32), "manualCompletion");
  if ((result & 1) == 0)
    return objc_msgSend(*(id *)(a1 + 32), "workComplete:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
  return result;
}

void sub_73BA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_73BBC(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  id v6;
  uint64_t v7;
  void ***v8;
  id v9;
  NSObject *v10;
  void *v11;
  void **v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  void *v15;
  os_unfair_lock_s *v16;
  id v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  char v24[24];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  v20 = 0;
  v21 = &v20;
  v22 = 0x2020000000;
  v23 = 0;
  if (WeakRetained)
  {
    v4 = *(os_unfair_lock_s **)(a1 + 32);
    v5 = v4 + 2;
    v12 = _NSConcreteStackBlock;
    v13 = 3221225472;
    v14 = sub_73D54;
    v15 = &unk_28ED50;
    v18 = &v20;
    v16 = v4;
    v6 = WeakRetained;
    v7 = *(_QWORD *)(a1 + 40);
    v17 = v6;
    v19 = v7;
    v8 = &v12;
    os_unfair_lock_lock_with_options(v5, 0x10000);
    v14((uint64_t)v8);
    os_unfair_lock_unlock(v5);

    if (*((_BYTE *)v21 + 24))
    {
      v9 = BCImageCacheLog();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier", v12, v13));
        sub_1B4C18((uint64_t)v6, v11, (uint64_t)v24, v10);
      }

      objc_msgSend(*(id *)(a1 + 32), "_startNextWorkItem");
    }
  }
  _Block_object_dispose(&v20, 8);

}

void sub_73D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_73D54(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workingOnItems"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workingOnItems"));
    objc_msgSend(v3, "removeObject:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));

    _objc_msgSend(*(id *)(a1 + 32), "setAl_totalWorkItemsRun:", (char *)objc_msgSend(*(id *)(a1 + 32), "al_totalWorkItemsRun") + 1);
  }
}

void sub_7400C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7403C(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workingOnItems"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workingOnItems"));
    objc_msgSend(v3, "removeObject:", *(_QWORD *)(a1 + 40));

    _objc_msgSend(*(id *)(a1 + 32), "setAl_totalWorkItemsRun:", (char *)objc_msgSend(*(id *)(a1 + 32), "al_totalWorkItemsRun") + 1);
  }
}

void sub_741F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Block_object_dispose((const void *)(v13 - 48), 8);
  _Unwind_Resume(a1);
}

id sub_74220(uint64_t a1)
{
  void *v2;
  void *v3;
  id result;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workItems"));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v2, "count");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "al_workingOnItems"));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v3, "count");

  result = objc_msgSend(*(id *)(a1 + 32), "al_totalWorkItemsRun");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = result;
  return result;
}

void sub_74B44(id a1)
{
  BCAugmentedExperienceRegistry *v1;
  void *v2;

  v1 = objc_alloc_init(BCAugmentedExperienceRegistry);
  v2 = (void *)qword_30DB30;
  qword_30DB30 = (uint64_t)v1;

}

void sub_75B34(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[5];
  id v6;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_75BB4;
  v5[3] = &unk_28C080;
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

}

void sub_75BB4(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "previewAssetCoverFuture"));
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_75C38;
  v3[3] = &unk_28EE10;
  v4 = *(id *)(a1 + 40);
  objc_msgSend(v2, "get:", v3);

}

void sub_75C38(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD block[4];
  id v11;
  id v12;
  id v13;

  v5 = a2;
  v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_75CF4;
  block[3] = &unk_28EDE8;
  v7 = *(id *)(a1 + 32);
  v12 = v6;
  v13 = v7;
  v11 = v5;
  v8 = v6;
  v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_75CF4(uint64_t a1)
{
  uint64_t v2;
  NSData *v3;
  id v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = UIImagePNGRepresentation(*(UIImage **)(a1 + 32));
  v4 = (id)objc_claimAutoreleasedReturnValue(v3);
  (*(void (**)(uint64_t, id, _QWORD))(v2 + 16))(v2, v4, *(_QWORD *)(a1 + 40));

}

void sub_768C4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringByTrimmingCharactersInSet:", v4));

  if ((objc_msgSend(v5, "hasSuffix:", CFSTR(".")) & 1) == 0)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByAppendingString:", CFSTR(".")));

    v5 = (void *)v6;
  }
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByAppendingString:", CFSTR(" ")));

  objc_msgSend(*(id *)(a1 + 32), "addObject:", v7);
}

void sub_7698C(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "length"))
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

}

void sub_7734C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_77374(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_77384(uint64_t a1)
{

}

void sub_7738C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = 0;
  objc_msgSend(v4, "copyItemAtURL:toURL:error:", v3, v5, &v7);
  v6 = v7;
  if (v6)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
      sub_1B4E1C();
  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(id *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 48), "setTemporaryURL:", *(_QWORD *)(a1 + 40));
  }

}

id _generateText(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = a1;
  v2 = objc_alloc_init((Class)NSMutableArray);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "title"));
  if (objc_msgSend(v3, "length"))
  {
    objc_msgSend(v2, "addObject:", v3);
    objc_msgSend(v2, "addObject:", CFSTR("\n"));
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "author"));
  if (objc_msgSend(v4, "length"))
  {
    objc_msgSend(v2, "addObject:", v4);
    objc_msgSend(v2, "addObject:", CFSTR("\n"));
  }
  if (objc_msgSend(v1, "isStoreAsset"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "storeURLPreferShort"));
    v6 = v5;
    if (v5)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "absoluteString"));
      if (objc_msgSend(v7, "length"))
      {
        objc_msgSend(v2, "addObject:", v7);
        objc_msgSend(v2, "addObject:", CFSTR("\n"));
      }

    }
  }
  if (objc_msgSend(v2, "count"))
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "componentsJoinedByString:", &stru_296430));
  else
    v8 = 0;

  return v8;
}

void sub_783DC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_7867C(id a1, id a2, int64_t a3, BOOL *a4)
{
  objc_msgSend(a2, "imaxSetParentAnnotationPopoverViewController:", 0, a4);
}

void sub_78A80(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;

  v5 = a2;
  v6 = a3 - 1;
  v9 = v5;
  if ((unint64_t)(a3 - 1) <= 5 && ((0x2Fu >> v6) & 1) != 0)
  {
    v7 = IMAXLocString(*(&off_28EF80 + v6));
    v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
    v5 = v9;
    if (v8)
    {
      objc_msgSend(v9, "setAccessibilityLabel:", v8);

      v5 = v9;
    }
  }
  objc_msgSend(v5, "setAccessibilityTraits:", IMAccessibilityTraitMenuItem);
  objc_msgSend(v9, "imaxSetParentAnnotationPopoverViewController:", *(_QWORD *)(a1 + 32));

}

void sub_78C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_78C54(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_78C64(uint64_t a1)
{

}

void sub_78C6C(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  void *v11;
  unsigned int v12;
  id v13;

  v7 = a2;
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v10 = *(_QWORD *)(v8 + 40);
  v9 = (id *)(v8 + 40);
  v13 = v7;
  if (!v10)
  {
    objc_storeStrong(v9, a2);
    v7 = v13;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "imaxValueForKey:", CFSTR("isSelected")));
  v12 = objc_msgSend(v11, "BOOLValue");

  if (v12)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }

}

void sub_78D68(id a1, id a2, int64_t a3, BOOL *a4)
{
  unint64_t v4;
  UIAccessibilityTraits v5;
  void *v6;
  unsigned int v7;
  UIAccessibilityTraits v8;
  id v9;

  v9 = a2;
  v4 = (unint64_t)objc_msgSend(v9, "accessibilityTraits");
  v5 = v4 & ~UIAccessibilityTraitButton | IMAccessibilityTraitMenuItem;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "imaxValueForKey:", CFSTR("isSelected")));
  v7 = objc_msgSend(v6, "BOOLValue");

  if (v7)
    v8 = UIAccessibilityTraitSelected | v5;
  else
    v8 = v5 & ~UIAccessibilityTraitSelected;
  objc_msgSend(v9, "setAccessibilityTraits:", v8);

}

id BCJSConfigurationLog()
{
  if (qword_30DB48 != -1)
    dispatch_once(&qword_30DB48, &stru_28F090);
  return (id)qword_30DB40;
}

void sub_790F0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCJSConfiguration");
  v2 = (void *)qword_30DB40;
  qword_30DB40 = (uint64_t)v1;

}

void sub_7916C(id a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  const __CFString *v11;
  _UNKNOWN **v12;
  const __CFString *v13;
  _UNKNOWN **v14;
  const __CFString *v15;
  _UNKNOWN **v16;
  const __CFString *v17;
  _UNKNOWN **v18;

  v1 = -[BCJSConfiguration _init]([BCJSConfiguration alloc], "_init");
  v2 = (void *)qword_30DB50;
  qword_30DB50 = (uint64_t)v1;

  v3 = (void *)qword_30DB50;
  v17 = CFSTR("BCJSFinishedWindowKey");
  v18 = &off_2B2FE0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v18, &v17, 1));
  objc_msgSend(v3, "updateConfiguration:", v4);

  v5 = (void *)qword_30DB50;
  v15 = CFSTR("BCJSInvalidationWindowKey");
  v16 = &off_2B2FF0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v16, &v15, 1));
  objc_msgSend(v5, "updateConfiguration:", v6);

  v7 = (void *)qword_30DB50;
  v13 = CFSTR("BCJSInvalidationWindowForSamplesKey");
  v14 = &off_2B3000;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v14, &v13, 1));
  objc_msgSend(v7, "updateConfiguration:", v8);

  v9 = (void *)qword_30DB50;
  v11 = CFSTR("BCJSLaunchesRequiredToPurgeKey");
  v12 = &off_2A9530;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v12, &v11, 1));
  objc_msgSend(v9, "updateConfiguration:", v10);

}

void sub_795C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_795E8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_795F8(uint64_t a1)
{

}

void sub_79600(uint64_t a1)
{
  void *v2;
  void *v3;
  NSMutableDictionary *v4;
  uint64_t v5;
  void *v6;
  NSMutableDictionary *v7;
  _QWORD v8[4];
  NSMutableDictionary *v9;
  uint64_t v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
    v4 = (NSMutableDictionary *)objc_msgSend(v3, "mutableCopy");

  }
  else
  {
    v4 = objc_opt_new(NSMutableDictionary);
  }

  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_796D4;
  v8[3] = &unk_28F0D8;
  v6 = *(void **)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v9 = v4;
  v10 = v5;
  v7 = v4;
  objc_msgSend(v6, "enumerateKeysAndObjectsUsingBlock:", v8);
  objc_msgSend(*(id *)(a1 + 32), "setOverrides:", v7);

}

void sub_796D4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v10 = a2;
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", a3, v10);
  v5 = objc_opt_class(NSString);
  if ((objc_opt_isKindOfClass(v10, v5) & 1) != 0)
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "addObject:", v10);
  else
    BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/BookPromotionEngine/BCJSConfiguration.m", 140, (uint64_t)"-[BCJSConfiguration updateConfiguration:]_block_invoke_2", (uint64_t)"NO", CFSTR("Someone is using a non-string key for the configuration. Please file a radar."), v6, v7, v8, v9);

}

void sub_79C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_79CA0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSInvalidationWindowKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_79EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_79F20(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSInvalidationWindowForSamplesKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7A09C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7A0B4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSLaunchesRequiredToPurgeKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7A310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7A334(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSFinishedWindowKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7A590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7A5B4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSUpgradeWindowKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7A7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7A808(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSThresholdForPromotionKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7AA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7AA58(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSValidCollectionPeriodKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7AC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7AC9C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSTimeThresholdForOpenEventKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7AEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7AEE4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSNumberOfBooksInRecentsKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7B1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7B1BC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSWindowForActiveBookKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7B378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7B390(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSOpenBookDefaultBehaviorOverrideKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7B54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7B564(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSOpenBookOpenBehaviorOverrideKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7B720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_7B738(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "overrides"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKeyedSubscript:", CFSTR("BCJSOpenBookClosedSpreadBehaviorOverrideKey")));
  v4 = BUDynamicCast(v2, v3);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_7B914(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_7BCF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_7BD10(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  unsigned int v12;
  id v13;
  NSObject *v14;
  id v15;
  id v16;
  NSObject *v17;
  void (**v18)(id, id, void *);
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint8_t buf[4];
  uint64_t v31;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "operationToWatchdogTimerMap"));
  v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", WeakRetained));

  dispatch_source_cancel(v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "operationToWatchdogTimerMap"));
  objc_msgSend(v10, "setObject:forKey:", 0, WeakRetained);

  if (v6)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[BKReachability sharedReachabilityForInternetConnection](BKReachability, "sharedReachabilityForInternetConnection"));
    v12 = objc_msgSend(v11, "currentReachabilityStatus");

    if (v12)
    {
      v13 = BCQuotaFetcherLog();
      v14 = objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1B55A8((uint64_t)v6, v14);
    }
    else
    {

      v15 = BCQuotaFetcherLog();
      v14 = objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1B5568(v14);
      v6 = 0;
    }

  }
  if (objc_msgSend(WeakRetained, "isCancelled"))
  {
    v16 = BCQuotaFetcherLog();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v17, OS_LOG_TYPE_INFO, "Could not get ahold of the quota server ... operation timed out.", buf, 2u);
    }

    v18 = (void (**)(id, id, void *))objc_retainBlock(a1[5]);
    if (v18)
    {
      v19 = objc_msgSend(a1[4], "lastCachedFreeBytes");
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("IMUbiquityQuotaFetcherErrorDomain"), -1001, 0));
      v18[2](v18, v19, v20);

    }
    goto LABEL_26;
  }
  if (v5)
  {
    v21 = (uint64_t)objc_msgSend(v5, "unsignedLongLongValue");
    v22 = BCQuotaFetcherLog();
    v23 = objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v31 = v21;
      _os_log_impl(&dword_0, v23, OS_LOG_TYPE_INFO, "Fetched quota.  Got the number: %llu.", buf, 0xCu);
    }

    if (v21 == -1)
    {
      BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Utilities/BCUbiquityQuotaFetcher.m", 112, (uint64_t)"-[IMUbiquityQuotaFetcher fetchUserQuotaWithTimeOut:completion:]_block_invoke", (uint64_t)"quota != ULLONG_MAX", CFSTR("Unexpected large size for quota"), v24, v25, v26, v29);
    }
    else if ((v21 & 0x8000000000000000) == 0)
    {
      if (v21)
        objc_msgSend(a1[4], "setLastCachedFreeBytes:", v21);
      goto LABEL_21;
    }
    BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Utilities/BCUbiquityQuotaFetcher.m", 115, (uint64_t)"-[IMUbiquityQuotaFetcher fetchUserQuotaWithTimeOut:completion:]_block_invoke", (uint64_t)"quotaInt64 >= 0", CFSTR("Unexpected negative size for quota(uint64t): %llu, quota(int64_t): %lld"), v24, v25, v26, v21);
  }
LABEL_21:
  v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "stringForKey:", CFSTR("BKUbiquitySimulateQuota")));

  if (objc_msgSend(v28, "length") && ((unint64_t)objc_msgSend(v28, "longLongValue") & 0x8000000000000000) == 0)
    objc_msgSend(a1[4], "setLastCachedFreeBytes:", objc_msgSend(v28, "longLongValue"));

  v18 = (void (**)(id, id, void *))objc_retainBlock(a1[5]);
  if (v18)
    v18[2](v18, objc_msgSend(a1[4], "lastCachedFreeBytes"), v6);
LABEL_26:

}

id sub_7C080(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "cancel");
}

void sub_7E658(uint64_t a1, void *a2)
{
  id v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  void ***v6;
  id v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  void *v12;
  os_unfair_lock_s *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  id v20;

  v3 = a2;
  v15 = 0;
  v16 = &v15;
  v17 = 0x3032000000;
  v18 = sub_7E790;
  v19 = sub_7E7A0;
  v20 = 0;
  v4 = *(os_unfair_lock_s **)(a1 + 32);
  v5 = v4 + 2;
  v9 = _NSConcreteStackBlock;
  v10 = 3221225472;
  v11 = sub_7E7A8;
  v12 = &unk_28B700;
  v14 = &v15;
  v13 = v4;
  v6 = &v9;
  os_unfair_lock_lock(v5);
  v11((uint64_t)v6);
  os_unfair_lock_unlock(v5);

  objc_msgSend(*(id *)(a1 + 32), "_incrementVersionForIdentifiers:", v16[5], v9, v10);
  v7 = objc_retainBlock(v3);
  v8 = v7;
  if (v7)
    (*((void (**)(id))v7 + 2))(v7);

  _Block_object_dispose(&v15, 8);
}

void sub_7E774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_7E790(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_7E7A0(uint64_t a1)
{

}

void sub_7E7A8(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "versionBumpedIdentifiers"));
  v3 = objc_msgSend(v2, "copy");
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "versionBumpedIdentifiers"));
  objc_msgSend(v6, "removeAllObjects");

}

void sub_7E810(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "_pruneIfNeeded");
  v5 = objc_retainBlock(v3);

  v4 = v5;
  if (v5)
  {
    (*((void (**)(id))v5 + 2))(v5);
    v4 = v5;
  }

}

void sub_7E86C(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "_preloadOneBatch");
  v5 = objc_retainBlock(v3);

  v4 = v5;
  if (v5)
  {
    (*((void (**)(id))v5 + 2))(v5);
    v4 = v5;
  }

}

id sub_7E8C8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_checkRestrictedContentSettings");
  return _objc_msgSend(*(id *)(a1 + 32), "_preloadCache");
}

void sub_7E9FC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "level1"));
  objc_msgSend(v4, "pruneItems:forMedium:withCompletion:", v3, 0, &stru_28F1D0);

}

void sub_7EBF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_7EC18(uint64_t a1, uint64_t a2, void *a3)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;

  v3 = (id *)(a1 + 32);
  v4 = a3;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lowPriorityWorkQueue"));
  v7 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v4, v6);

  v8 = objc_loadWeakRetained(v3);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "level4"));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_7ED14;
  v11[3] = &unk_28F1F8;
  v12 = v8;
  v10 = v8;
  objc_msgSend(v9, "_inventoryLevelOnly:addLevelID:completion:", 1, 0, v11);

  objc_msgSend(v7, "workComplete");
}

void sub_7ED14(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "valueForKey:", CFSTR("identifier")));
  objc_msgSend(*(id *)(a1 + 32), "_preloadAdamIDs:", v3);

}

void sub_7EF18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_7EF44(uint64_t a1, uint64_t a2, void *a3)
{
  id *v4;
  id v5;
  id WeakRetained;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void **v14;
  uint64_t v15;
  void (*v16)(uint64_t, void *);
  void *v17;
  id v18;
  id v19;

  v4 = (id *)(a1 + 40);
  v5 = a3;
  WeakRetained = objc_loadWeakRetained(v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lowPriorityWorkQueue"));
  v8 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v5, v7);

  v9 = objc_loadWeakRetained(v4);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithArray:](NSMutableSet, "setWithArray:", *(_QWORD *)(a1 + 32)));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "level2"));
  v14 = _NSConcreteStackBlock;
  v15 = 3221225472;
  v16 = sub_7F074;
  v17 = &unk_28F268;
  v18 = v10;
  v19 = v9;
  v12 = v9;
  v13 = v10;
  objc_msgSend(v11, "_inventoryLevelOnly:addLevelID:completion:", 1, 0, &v14);

  objc_msgSend(v8, "workComplete", v14, v15, v16, v17);
}

void sub_7F074(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  void *v7;
  void **v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void *v11;
  os_unfair_lock_s *v12;
  id v13;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "valueForKey:", CFSTR("identifier")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v3));
  objc_msgSend(*(id *)(a1 + 32), "minusSet:", v4);
  v5 = *(os_unfair_lock_s **)(a1 + 40);
  v6 = v5 + 2;
  v8 = _NSConcreteStackBlock;
  v9 = 3221225472;
  v10 = sub_7F178;
  v11 = &unk_28B808;
  v12 = v5;
  v13 = *(id *)(a1 + 32);
  os_unfair_lock_lock(v6);
  sub_7F178((uint64_t)&v8);
  os_unfair_lock_unlock(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "coalescingPreloading", v8, v9));
  objc_msgSend(v7, "signalWithCompletion:", &stru_28F240);

}

void sub_7F178(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "adamIDsToPreload"));
  objc_msgSend(v2, "unionSet:", *(_QWORD *)(a1 + 40));

}

void sub_7F45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  id *v26;
  uint64_t v27;

  objc_destroyWeak(v26);
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a26, 8);
  objc_destroyWeak((id *)(v27 - 104));
  _Unwind_Resume(a1);
}

void sub_7F4AC(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "adamIDsToPreload"));
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "allObjects"));

  v3 = objc_msgSend(v11, "count");
  if ((unint64_t)v3 >= 0x28)
    v4 = 40;
  else
    v4 = (uint64_t)v3;
  if (v4)
  {
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "subarrayWithRange:", 0));
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "adamIDsToPreload"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)));
    objc_msgSend(v8, "minusSet:", v9);

    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "adamIDsToPreload"));
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v10, "count");

  }
}

void sub_7F5A0(uint64_t a1, uint64_t a2, void *a3)
{
  id *v4;
  id v5;
  id WeakRetained;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  _QWORD v12[4];
  id v13;

  v4 = (id *)(a1 + 40);
  v5 = a3;
  WeakRetained = objc_loadWeakRetained(v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lowPriorityWorkQueue"));
  v8 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v5, v7);

  v9 = objc_loadWeakRetained(v4);
  v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_7F690;
  v12[3] = &unk_28B960;
  v13 = v8;
  v11 = v8;
  objc_msgSend(v9, "_preloadBatch:completion:", v10, v12);

}

id sub_7F690(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "workComplete");
}

void sub_7F804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_7F830(id *a1, void *a2)
{
  id v3;
  void *v4;
  id WeakRetained;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;

  v3 = a2;
  if (objc_msgSend(v3, "count"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", CFSTR("prioritizer"), 0, CGSizeZero.width, CGSizeZero.height));
    objc_msgSend(v4, "setPriority:", 3);
    WeakRetained = objc_loadWeakRetained(a1 + 6);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lowPriorityWorkQueue"));
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_7F9B8;
    v11[3] = &unk_28B8A8;
    objc_copyWeak(&v14, a1 + 6);
    v12 = v3;
    v7 = v4;
    v13 = v7;
    objc_msgSend(v6, "addWorkItemWithPriority:description:block:", v7, CFSTR("CacheManager preload batch"), v11);

    objc_destroyWeak(&v14);
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "coalescingPreloading"));
    objc_msgSend(v8, "signalWithCompletion:", &stru_28F360);

  }
  v9 = objc_retainBlock(a1[5]);
  v10 = v9;
  if (v9)
    (*((void (**)(id))v9 + 2))(v9);

}

void sub_7F9A4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_7F9B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id WeakRetained;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint8_t v41[128];
  uint8_t buf[4];
  id v43;
  _BYTE v44[128];

  v4 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "lowPriorityWorkQueue"));
  v7 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v4, v6);

  v8 = objc_loadWeakRetained((id *)(a1 + 48));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v10 = *(id *)(a1 + 32);
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v37, v44, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v38;
    do
    {
      v14 = 0;
      do
      {
        if (*(_QWORD *)v38 != v13)
          objc_enumerationMutation(v10);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "describedImagesFromProductProfile:", *(_QWORD *)(*((_QWORD *)&v37 + 1) + 8 * (_QWORD)v14)));
        objc_msgSend(v9, "addObjectsFromArray:", v15);

        v14 = (char *)v14 + 1;
      }
      while (v12 != v14);
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v37, v44, 16);
    }
    while (v12);
  }

  if (objc_msgSend(v9, "count"))
  {
    v32 = v4;
    v16 = BCImageCacheLog();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = objc_msgSend(v9, "count");
      *(_DWORD *)buf = 134217984;
      v43 = v18;
      _os_log_impl(&dword_0, v17, OS_LOG_TYPE_INFO, "BCCacheManager: Pushing a pre-loaded batch of %lu URLs", buf, 0xCu);
    }
    v31 = v7;

    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "level1"));
    objc_msgSend(v19, "addDescribedImages:forRequest:completion:", v9, *(_QWORD *)(a1 + 40), &stru_28F300);

    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "valueForKey:", CFSTR("identifier")));
    v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:"));
    v21 = BCImageCacheLog();
    v22 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
    {
      v23 = objc_msgSend(v20, "count");
      *(_DWORD *)buf = 134217984;
      v43 = v23;
      _os_log_impl(&dword_0, v22, OS_LOG_TYPE_INFO, "BCCacheManager: Downloading a pre-loaded batch of %lu covers", buf, 0xCu);
    }

    v35 = 0u;
    v36 = 0u;
    v33 = 0u;
    v34 = 0u;
    v24 = v20;
    v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v33, v41, 16);
    if (v25)
    {
      v26 = v25;
      v27 = *(_QWORD *)v34;
      do
      {
        v28 = 0;
        do
        {
          if (*(_QWORD *)v34 != v27)
            objc_enumerationMutation(v24);
          v29 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", *(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)v28), 0, 50.0, 50.0));
          objc_msgSend(v29, "setPriority:", 3);
          objc_msgSend(v29, "setRequestOptions:", 290);
          objc_msgSend(v8, "fetchCGImageFor:forRequest:completion:", v29, v29, &stru_28F340);

          v28 = (char *)v28 + 1;
        }
        while (v26 != v28);
        v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v33, v41, 16);
      }
      while (v26);
    }

    v7 = v31;
    v4 = v32;
  }
  objc_msgSend(v7, "workComplete");

}

id sub_7FE04(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addDescribedImages:", *(_QWORD *)(a1 + 40));
}

id sub_7FF4C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_addDescribedImages:", *(_QWORD *)(a1 + 40));
}

void sub_7FFF4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", 0));
  if (!objc_msgSend(v3, "priority"))
    objc_msgSend(v3, "setPriority:", 3);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "level1"));
  objc_msgSend(v4, "removeDescribedImages:forRequest:completion:", *(_QWORD *)(a1 + 32), v3, &stru_28F3A8);

  objc_autoreleasePoolPop(v2);
}

void sub_8011C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  double height;
  void *i;
  uint64_t v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    height = CGSizeZero.height;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v10 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", v10, 0, CGSizeZero.width, height, (_QWORD)v12));
        objc_msgSend(v11, "setAdamID:", v10);
        objc_msgSend(v11, "setPriority:", *(_QWORD *)(a1 + 48));
        objc_msgSend(v11, "setQuality:", 203);
        objc_msgSend(v3, "addObject:", v11);

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

  if (objc_msgSend(v3, "count"))
    objc_msgSend(*(id *)(a1 + 40), "_addDescribedImages:", v3);
  objc_msgSend(*(id *)(a1 + 40), "_preloadAdamIDs:", *(_QWORD *)(a1 + 32), (_QWORD)v12);

  objc_autoreleasePoolPop(v2);
}

void sub_80378(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  double height;
  void *i;
  uint64_t v11;
  void *v12;
  void *v13;
  void *context;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];

  context = objc_autoreleasePoolPush();
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 < 1)
    v3 = 0;
  else
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceNow:](NSDate, "dateWithTimeIntervalSinceNow:", (double)(86400 * v2)));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allKeys"));
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v16;
    height = CGSizeZero.height;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v16 != v8)
          objc_enumerationMutation(v5);
        v11 = *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)i);
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", v11, 0, CGSizeZero.width, height));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v11));
        objc_msgSend(v12, "setUrlString:", v13);

        objc_msgSend(v12, "setPriority:", *(_QWORD *)(a1 + 56));
        objc_msgSend(v12, "setQuality:", *(unsigned __int16 *)(a1 + 64));
        objc_msgSend(v12, "setExpiry:", v3);
        objc_msgSend(v4, "addObject:", v12);

      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v7);
  }

  if (objc_msgSend(v4, "count"))
    objc_msgSend(*(id *)(a1 + 40), "_addDescribedImages:", v4);

  objc_autoreleasePoolPop(context);
}

void sub_80864(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  double height;
  void *i;
  uint64_t v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allKeys", 0));
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v14;
    height = CGSizeZero.height;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v7)
          objc_enumerationMutation(v4);
        v10 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", v10, 0, CGSizeZero.width, height));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v10));
        objc_msgSend(v11, "setFilePath:", v12);

        objc_msgSend(v11, "setPriority:", *(_QWORD *)(a1 + 48));
        objc_msgSend(v11, "setQuality:", *(unsigned __int16 *)(a1 + 56));
        objc_msgSend(v3, "addObject:", v11);

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v6);
  }

  if (objc_msgSend(v3, "count"))
    objc_msgSend(*(id *)(a1 + 40), "_addDescribedImages:", v3);

  objc_autoreleasePoolPop(v2);
}

void sub_80AE0(uint64_t a1)
{
  CGImage *v2;
  size_t Width;
  BICDescribedImage *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v2 = *(CGImage **)(a1 + 48);
  if (v2)
  {
    Width = CGImageGetWidth(v2);
    v4 = +[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", *(_QWORD *)(a1 + 32), 0, (double)Width, (double)CGImageGetHeight(*(CGImageRef *)(a1 + 48)));
    v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BICImage imageWithCGImage:](BICImage, "imageWithCGImage:", *(_QWORD *)(a1 + 48)));
    objc_msgSend(v5, "setImage:", v6);

    objc_msgSend(v5, "setPriority:", *(_QWORD *)(a1 + 56));
    objc_msgSend(v5, "setQuality:", *(unsigned __int16 *)(a1 + 64));
    v7 = *(void **)(a1 + 40);
    v9 = v5;
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v9, 1));
    objc_msgSend(v7, "_addDescribedImages:", v8);

    CGImageRelease(*(CGImageRef *)(a1 + 48));
  }
}

void sub_80C64(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "level1"));
  objc_msgSend(v1, "_clean:", &stru_28F418);

}

void sub_80FB0(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "filePath"));
  v7 = (id)v3;
  if (v3)
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v3));
  else
    v4 = 0;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, void *))v5 + 2))(v5, v4);

}

void sub_81290(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "vendedImageInterests"));
  objc_msgSend(v2, "addPointer:", *(_QWORD *)(a1 + 40));

}

void sub_81394(id *a1, void *a2)
{
  void *v3;
  unsigned int v4;
  void *v5;
  id v6;

  v6 = a2;
  if (objc_msgSend(v6, "count"))
  {
    +[BICCacheStats incrementCounter:](BICCacheStats, "incrementCounter:", kBICCacheStatsCounterBestMatches[0]);
    objc_msgSend(a1[4], "_fetchImagesMatchingBestDescriptions:forOriginalDescription:forRequest:", v6, a1[5], a1[6]);
  }
  else if ((objc_msgSend(a1[6], "isAlternateGeneric") & 1) == 0)
  {
    objc_msgSend(a1[4], "_makeGenericForDescription:forRequest:", a1[5], a1[6]);
  }
  if (objc_msgSend(a1[5], "seriesStack"))
  {
    if (!objc_msgSend(v6, "count")
      || (v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectAtIndexedSubscript:", 0)),
          v4 = objc_msgSend(v3, "isGeneric"),
          v3,
          v4))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "stackManager"));
      objc_msgSend(v5, "renderStackFromSource:forRequest:", a1[5], a1[6]);

    }
  }

}

void sub_81570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_81594(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint64_t v12;
  id v13;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "workHighPriorityTarget"));
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_81680;
    v9[3] = &unk_28F4D8;
    v10 = *(id *)(a1 + 32);
    objc_copyWeak(&v13, (id *)(a1 + 48));
    v7 = v3;
    v8 = *(_QWORD *)(a1 + 40);
    v11 = v7;
    v12 = v8;
    dispatch_async(v6, v9);

    objc_destroyWeak(&v13);
  }

}

void sub_81680(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  uint64_t v4;
  id v5;
  int8x16_t v6;
  _QWORD v7[4];
  id v8;
  int8x16_t v9;
  id v10;

  if (objc_msgSend(*(id *)(a1 + 32), "priority") != (char *)&dword_0 + 1)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    v4 = *(_QWORD *)(a1 + 32);
    v3 = *(_QWORD *)(a1 + 40);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_81788;
    v7[3] = &unk_28F4B0;
    objc_copyWeak(&v10, (id *)(a1 + 56));
    v8 = *(id *)(a1 + 32);
    v6 = *(int8x16_t *)(a1 + 40);
    v5 = (id)v6.i64[0];
    v9 = vextq_s8(v6, v6, 8uLL);
    objc_msgSend(WeakRetained, "_fetchImagesMatchingDescription:withTimeout:forRequest:completion:", v3, 30, v4, v7);

    objc_destroyWeak(&v10);
  }
}

void sub_81774(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_81788(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  void *v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[4];
  NSObject *v14;
  id v15;
  id v16;
  uint8_t buf[4];
  void *v18;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained && objc_msgSend(v3, "count") && objc_msgSend(*(id *)(a1 + 32), "priority") != (char *)&dword_0 + 1)
  {
    v8 = BCImageCacheLog();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bu_prettyDescription"));
      *(_DWORD *)buf = 138412290;
      v18 = v10;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_INFO, "BCCacheManager: Exact primary match: images=%@", buf, 0xCu);

    }
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "level1"));
    v12 = *(_QWORD *)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_8196C;
    v13[3] = &unk_28C5F0;
    v14 = WeakRetained;
    v15 = v3;
    v16 = *(id *)(a1 + 32);
    objc_msgSend(v11, "addDescribedImages:forRequest:completion:", v15, v12, v13);

    v6 = v14;
  }
  else
  {
    v5 = BCImageCacheLog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      v7 = *(void **)(a1 + 48);
      *(_DWORD *)buf = 138412290;
      v18 = v7;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_INFO, "BCCacheManager: No primary match for image=%@", buf, 0xCu);
    }
  }

}

id sub_8196C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_checkInterestForDescribedImages:forRequest:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_81AAC(id *a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  _QWORD *v19;
  void *v20;
  void *v21;
  _QWORD v22[4];
  id v23;
  _QWORD *v24;
  _QWORD v25[4];
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint8_t buf[4];
  id v36;
  __int16 v37;
  id v38;
  _BYTE v39[128];

  v2 = objc_autoreleasePoolPush();
  if (objc_msgSend(a1[4], "priority") != (char *)&dword_0 + 1)
  {
    v3 = objc_msgSend(a1[5], "quality");
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    v5 = a1[6];
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v32;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v32 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)i);
          if (!objc_msgSend(v10, "processingOptions") && objc_msgSend(v10, "quality") > v3)
          {
            v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "identifier"));
            objc_msgSend(v4, "addObject:", v11);

          }
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
      }
      while (v7);
    }

    if (objc_msgSend(v4, "count"))
    {
      v12 = BCImageCacheLog();
      v13 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        v14 = a1[6];
        v15 = a1[4];
        *(_DWORD *)buf = 138412546;
        v36 = v14;
        v37 = 2112;
        v38 = v15;
        _os_log_impl(&dword_0, v13, OS_LOG_TYPE_INFO, "BCCacheManager: Checking for interest in image=%@ for series stack request=%@", buf, 0x16u);
      }

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "identifier"));
      v25[0] = _NSConcreteStackBlock;
      v25[1] = 3221225472;
      v25[2] = sub_81DD4;
      v25[3] = &unk_28F528;
      v26 = v4;
      v27 = a1[6];
      v28 = a1[4];
      v17 = v16;
      v18 = a1[7];
      v29 = v17;
      v30 = v18;
      v19 = objc_retainBlock(v25);
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[8], "stackIDs"));
      if (v20)
      {
        ((void (*)(_QWORD *, void *))v19[2])(v19, v20);
      }
      else
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "seriesDecomposer"));
        v22[0] = _NSConcreteStackBlock;
        v22[1] = 3221225472;
        v22[2] = sub_81F00;
        v22[3] = &unk_28C058;
        v23 = a1[8];
        v24 = v19;
        objc_msgSend(v21, "assetIDsAndOptionsForBooksInSeries:completion:", v17, v22);

      }
    }

  }
  objc_autoreleasePoolPop(v2);
}

void sub_81DD4(uint64_t a1, uint64_t a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  uint64_t v11;

  if (objc_msgSend(*(id *)(a1 + 32), "intersectsSet:", a2))
  {
    v3 = BCImageCacheLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "bu_prettyDescription"));
      v6 = *(_QWORD *)(a1 + 48);
      v8 = 138412546;
      v9 = v5;
      v10 = 2112;
      v11 = v6;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "BCCacheManager: Interest found, bumping version for series stack images=%@ request=%@", (uint8_t *)&v8, 0x16u);

    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", *(_QWORD *)(a1 + 56), 0, CGSizeZero.width, CGSizeZero.height));
    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationBeginGenericUpgradeAttemptForStackBook[0], v7);
    objc_msgSend(*(id *)(a1 + 64), "incrementVersionForIdentifier:", *(_QWORD *)(a1 + 56));

  }
}

void sub_81F00(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v3 = a2;
  v4 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithCapacity:", objc_msgSend(v3, "count"));
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v12;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v12 != v8)
          objc_enumerationMutation(v5);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v9), "objectForKeyedSubscript:", CFSTR("assetID"), (_QWORD)v11));
        if (v10)
          objc_msgSend(v4, "addObject:", v10);

        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v7);
  }

  if (objc_msgSend(v4, "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "setStackIDs:", v4);
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void sub_821CC(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  __int128 v5;
  id v6;
  uint64_t v7;
  double height;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint8_t buf[4];
  void *v21;
  __int16 v22;
  uint64_t v23;
  _BYTE v24[128];

  v3 = a2;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
  if (v4)
  {
    v6 = v4;
    v7 = *(_QWORD *)v17;
    height = CGSizeZero.height;
    *(_QWORD *)&v5 = 138412546;
    v15 = v5;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v3);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v9), "objectForKeyedSubscript:", CFSTR("assetID"), v15));
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", v10, 0, CGSizeZero.width, height));
        objc_msgSend(v11, "setPriority:", 3);
        objc_msgSend(v11, "setUnknownAspectRatio:", 1);
        v12 = BCImageCacheLog();
        v13 = objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        {
          v14 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = v15;
          v21 = v11;
          v22 = 2112;
          v23 = v14;
          _os_log_impl(&dword_0, v13, OS_LOG_TYPE_INFO, "BCCacheManager: Refetching a cover image=%@ for series stack request=%@", buf, 0x16u);
        }

        objc_msgSend(*(id *)(a1 + 40), "_fetchPrimaryImage:forRequest:", v11, *(_QWORD *)(a1 + 32));
        v9 = (char *)v9 + 1;
      }
      while (v6 != v9);
      v6 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v24, 16);
    }
    while (v6);
  }

}

char *sub_824A8(id *a1)
{
  char *result;
  id v3;
  NSObject *v4;
  id v5;
  int v6;
  id v7;

  result = (char *)objc_msgSend(a1[4], "priority");
  if (result != (_BYTE *)&dword_0 + 1)
  {
    if (objc_msgSend(a1[5], "isSeriesStackWithGenerics"))
    {
      +[BICCacheStats incrementCounter:](BICCacheStats, "incrementCounter:", kBICCacheStatsCounterStackUpgrades[0]);
      return (char *)_objc_msgSend(a1[6], "_performGenericUpgradeOfStackForRequest:", a1[4]);
    }
    else
    {
      v3 = BCImageCacheLog();
      v4 = objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
      {
        v5 = a1[4];
        v6 = 138412290;
        v7 = v5;
        _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "BCCacheManager: Attempting to upgrade a generic cover request=%@", (uint8_t *)&v6, 0xCu);
      }

      +[BICCacheStats incrementCounter:](BICCacheStats, "incrementCounter:", kBICCacheStatsCounterGenericUpgrades[0]);
      return (char *)objc_msgSend(a1[6], "_fetchPrimaryImage:forRequest:", a1[4], a1[4]);
    }
  }
  return result;
}

void sub_826A0(uint64_t a1)
{
  id v2;
  id v3;
  NSObject *v4;
  int v5;
  id v6;

  if (objc_msgSend(*(id *)(a1 + 32), "priority") != (char *)&dword_0 + 1)
  {
    v2 = objc_msgSend(*(id *)(a1 + 32), "copy");
    v3 = BCImageCacheLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = 138412290;
      v6 = v2;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "BCCacheManager: Attempting quality upgrade of %@", (uint8_t *)&v5, 0xCu);
    }

    objc_msgSend(v2, "setPriority:", 3);
    objc_msgSend(v2, "setRequestOptions:", 128);
    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationAsyncFetchExactHighQualityAttempt[0], v2);
    objc_msgSend(*(id *)(a1 + 40), "_fetchImagesMatchingDescription:forRequest:", v2, v2);

  }
}

void sub_829D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_82A08(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id WeakRetained;
  id *v6;
  id v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  void *i;
  void *v13;
  id v14;
  NSObject *v15;
  unsigned __int8 v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  char v22;
  uint64_t v23;
  void *j;
  void *v25;
  void *v26;
  unsigned int v27;
  void *v28;
  void *v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];

  v3 = a2;
  v4 = objc_autoreleasePoolPush();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (!WeakRetained)
    goto LABEL_37;
  v6 = (id *)(a1 + 32);
  if (objc_msgSend(v3, "count"))
  {
    objc_msgSend(WeakRetained, "_pushDescribedImages:forRequest:", v3, *(_QWORD *)(a1 + 32));
    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v7 = v3;
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
    if (v8)
    {
      v9 = v8;
      v29 = v4;
      v10 = 0;
      v11 = *(_QWORD *)v36;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(_QWORD *)v36 != v11)
            objc_enumerationMutation(v7);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * (_QWORD)i), "image"));
          v10 |= objc_msgSend(v13, "CGImage") != 0;

        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
      }
      while (v9);

      v4 = v29;
      if ((v10 & 1) != 0)
        goto LABEL_37;
    }
    else
    {

    }
    if ((objc_msgSend(*v6, "requestOptions") & 2) == 0
      && (objc_msgSend(*v6, "isAlternateGeneric") & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 40), "_fetchGenericForDescription:forRequest:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));
    }
    goto LABEL_37;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "priority") != (char *)&dword_0 + 1)
  {
    v14 = BCImageCacheLog();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_1B56B8(a1, (_QWORD *)(a1 + 32), v15);

    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationAsyncLoadBestFail[0], *v6);
    v16 = objc_msgSend(*v6, "requestOptions");
    v17 = *v6;
    if ((v16 & 0x40) != 0)
    {
      if ((objc_msgSend(v17, "isAlternateGeneric") & 1) == 0)
        objc_msgSend(*(id *)(a1 + 40), "_makeGenericForDescription:forRequest:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));
    }
    else
    {
      v30 = objc_msgSend(v17, "copy");
      objc_msgSend(v30, "setRequestOptions:", 64);
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
      v31 = 0u;
      v32 = 0u;
      v33 = 0u;
      v34 = 0u;
      v19 = *(id *)(a1 + 64);
      v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
      if (v20)
      {
        v21 = v20;
        v22 = 0;
        v23 = *(_QWORD *)v32;
        do
        {
          for (j = 0; j != v21; j = (char *)j + 1)
          {
            if (*(_QWORD *)v32 != v23)
              objc_enumerationMutation(v19);
            if ((v22 & 1) != 0)
            {
              v25 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)j);
              if ((objc_msgSend(v25, "requiresNetwork") & 1) == 0)
                objc_msgSend(v18, "addObject:", v25);
            }
            v22 = 1;
          }
          v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
        }
        while (v21);
      }

      objc_msgSend(*(id *)(a1 + 40), "_fetchImagesMatchingBestDescriptions:forOriginalDescription:forRequest:", v18, *(_QWORD *)(a1 + 48), v30);
      if (objc_msgSend(*(id *)(a1 + 48), "seriesStack"))
      {
        if (!objc_msgSend(v18, "count")
          || (v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectAtIndexedSubscript:", 0)),
              v27 = objc_msgSend(v26, "isGeneric"),
              v26,
              v27))
        {
          v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stackManager"));
          objc_msgSend(v28, "renderStackFromSource:forRequest:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));

        }
      }

    }
  }
LABEL_37:

  objc_autoreleasePoolPop(v4);
}

void sub_82EFC(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[6];
  id v13;
  __int16 v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  int64_t v18;
  id location;

  v2 = *(void **)(a1 + 32);
  v3 = objc_initWeak(&location, v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "level1"));
  v5 = objc_msgSend(v4, "costFor:", *(__int16 *)(a1 + 40));

  v6 = objc_loadWeakRetained(&location);
  v7 = (uint64_t)objc_msgSend(v6, "_maxCostForMedium:", *(__int16 *)(a1 + 40));

  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = (int64_t)&v5[-v7];
  if ((uint64_t)&v5[-v7] >= 1)
  {
    v8 = objc_autoreleasePoolPush();
    v16[3] += v7 / 5;
    v9 = objc_loadWeakRetained(&location);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "level1"));
    v11 = *(__int16 *)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_830BC;
    v12[3] = &unk_28F5E8;
    v12[4] = *(_QWORD *)(a1 + 32);
    v12[5] = &v15;
    objc_copyWeak(&v13, &location);
    v14 = *(_WORD *)(a1 + 40);
    objc_msgSend(v10, "gatherPrunableItemsForMedium:withCompletion:", v11, v12);

    objc_destroyWeak(&v13);
    objc_autoreleasePoolPop(v8);
  }
  _Block_object_dispose(&v15, 8);
  objc_destroyWeak(&location);
}

void sub_83080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  id *v18;
  uint64_t v19;

  objc_destroyWeak(v18);
  _Block_object_dispose(&a18, 8);
  objc_destroyWeak((id *)(v19 - 56));
  _Unwind_Resume(a1);
}

void sub_830BC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  id v12;
  _QWORD block[4];
  id v14;
  id v15;
  __int16 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sortedArrayUsingSelector:", "compare:"));
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v18;
LABEL_3:
    v9 = 0;
    while (1)
    {
      if (*(_QWORD *)v18 != v8)
        objc_enumerationMutation(v5);
      v10 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * v9);
      objc_msgSend(v4, "addObject:", v10);
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) -= objc_msgSend(v10, "cost");
      if ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) & 0x8000000000000000) != 0)
        break;
      if (v7 == (id)++v9)
      {
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
        if (v7)
          goto LABEL_3;
        break;
      }
    }
  }

  v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lowPriorityTarget"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_832A0;
  block[3] = &unk_28F5C0;
  objc_copyWeak(&v15, (id *)(a1 + 48));
  v14 = v4;
  v16 = *(_WORD *)(a1 + 56);
  v12 = v4;
  dispatch_async(v11, block);

  objc_destroyWeak(&v15);
}

void sub_832A0(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "level1"));
  objc_msgSend(v2, "pruneItems:forMedium:withCompletion:", *(_QWORD *)(a1 + 32), *(__int16 *)(a1 + 48), &stru_28F598);

}

void sub_8339C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  id v9;
  __int16 v10;
  id location;

  v2 = *(void **)(a1 + 32);
  v3 = objc_initWeak(&location, v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "level1"));
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(__int16 *)(a1 + 48);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_834AC;
  v7[3] = &unk_28F660;
  objc_copyWeak(&v9, &location);
  v10 = *(_WORD *)(a1 + 48);
  v8 = *(id *)(a1 + 40);
  objc_msgSend(v4, "gatherPrunableItemsWithIdentifier:forMedium:withCompletion:", v5, v6, v7);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void sub_83488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_834AC(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  uint64_t v7;
  _QWORD v8[4];
  id v9;
  __int16 v10;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "level1"));
  v7 = *(__int16 *)(a1 + 48);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_83570;
  v8[3] = &unk_28F638;
  v9 = *(id *)(a1 + 32);
  v10 = *(_WORD *)(a1 + 48);
  objc_msgSend(v6, "pruneItems:forMedium:withCompletion:", v4, v7, v8);

}

void sub_83570(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  int v9;

  v2 = BCImageCacheLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(__int16 *)(a1 + 40);
    v6 = 138412546;
    v7 = v4;
    v8 = 1024;
    v9 = v5;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "BCCacheManager: covers for assetID %@ were pruned from medium %d", (uint8_t *)&v6, 0x12u);
  }

}

void sub_8391C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_8396C(uint64_t a1)
{
  id WeakRetained;

  if (!*(_BYTE *)(a1 + 56))
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(WeakRetained, "_checkInterestForDescribedImages:forRequest:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

  }
}

void sub_83A80(id *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  id v11;
  id location;

  if (objc_msgSend(a1[4], "priority") != (char *)&dword_0 + 1)
  {
    objc_initWeak(&location, a1[5]);
    v3 = a1[5];
    v2 = a1[6];
    v4 = a1[4];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_83B88;
    v7[3] = &unk_28F4B0;
    objc_copyWeak(&v11, &location);
    v8 = a1[4];
    v5 = a1[6];
    v6 = a1[5];
    v9 = v5;
    v10 = v6;
    objc_msgSend(v3, "_fetchImagesMatchingDescription:withTimeout:forRequest:completion:", v2, 30, v4, v7);

    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }
}

void sub_83B6C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_83B88(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (objc_msgSend(v3, "count"))
    {
      v5 = BCImageCacheLog();
      v6 = objc_claimAutoreleasedReturnValue(v5);
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bu_prettyDescription"));
        v8 = 138412290;
        v9 = v7;
        _os_log_impl(&dword_0, v6, OS_LOG_TYPE_INFO, "BCCacheManager: Found exact match from L2-L4, pushing to L1. images=%@", (uint8_t *)&v8, 0xCu);

      }
      objc_msgSend(WeakRetained, "_pushDescribedImages:forRequest:", v3, *(_QWORD *)(a1 + 32));
    }
    else if (objc_msgSend(*(id *)(a1 + 40), "isGeneric"))
    {
      objc_msgSend(*(id *)(a1 + 48), "_makeGenericForDescription:forRequest:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
    }
    else
    {
      objc_msgSend(WeakRetained, "_fetchBestImagesForDescription:forRequest:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
    }
  }

}

void sub_83F04(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 136));
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_83F38(uint64_t a1)
{
  os_unfair_lock_s *v2;
  uint64_t v3;
  _QWORD *v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;
  _QWORD v9[2];
  uint64_t (*v10)(uint64_t);
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;

  v14 = 0;
  v15 = &v14;
  v16 = 0x2020000000;
  v17 = 0;
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v10 = sub_8406C;
  v11 = &unk_28F6F8;
  v3 = *(_QWORD *)(a1 + 48);
  v12 = &v14;
  v13 = v3;
  v4 = v9;
  os_unfair_lock_lock(v2);
  v10((uint64_t)v4);
  os_unfair_lock_unlock(v2);

  if (*((_BYTE *)v15 + 24))
  {
    v5 = BCImageCacheLog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1B5730(a1, v6);

    v7 = objc_retainBlock(*(id *)(a1 + 40));
    v8 = v7;
    if (v7)
      (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);

  }
  _Block_object_dispose(&v14, 8);
}

void sub_8404C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_8406C(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8)
                                                                            + 24) ^ 1;
  return result;
}

void sub_84088(uint64_t a1, void *a2)
{
  id v3;
  os_unfair_lock_s *v4;
  id v5;
  void *v6;
  _QWORD v7[5];

  v3 = a2;
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_8413C;
  v7[3] = &unk_28F748;
  v7[4] = *(_QWORD *)(a1 + 48);
  os_unfair_lock_lock(v4);
  sub_8413C((uint64_t)v7);
  os_unfair_lock_unlock(v4);
  v5 = objc_retainBlock(*(id *)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(id, id))v5 + 2))(v5, v3);

}

uint64_t sub_8413C(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
  return result;
}

void sub_84150(uint64_t a1, void *a2)
{
  id v3;
  os_unfair_lock_s *v4;
  id v5;
  void *v6;
  _QWORD v7[5];

  v3 = a2;
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_84204;
  v7[3] = &unk_28F748;
  v7[4] = *(_QWORD *)(a1 + 48);
  os_unfair_lock_lock(v4);
  sub_84204((uint64_t)v7);
  os_unfair_lock_unlock(v4);
  v5 = objc_retainBlock(*(id *)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(id, id))v5 + 2))(v5, v3);

}

uint64_t sub_84204(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = 1;
  return result;
}

void sub_842D4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  id v7;
  id location;

  objc_initWeak(&location, *(id *)(a1 + 32));
  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_843B4;
  v5[3] = &unk_28F798;
  objc_copyWeak(&v7, &location);
  v6 = *(id *)(a1 + 48);
  objc_msgSend(v2, "_fetchImagesMatchingDescription:withTimeout:forRequest:completion:", v3, 30, v4, v5);

  objc_destroyWeak(&v7);
  objc_destroyWeak(&location);
}

void sub_84398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_843B4(uint64_t a1, void *a2)
{
  id WeakRetained;
  id v4;

  v4 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && objc_msgSend(v4, "count"))
    objc_msgSend(WeakRetained, "_checkInterestForDescribedImages:forRequest:", v4, *(_QWORD *)(a1 + 32));

}

void sub_846CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_84708(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "genericRequestsInProcess"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_849F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_84A28(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "vendedImageInterests"));
  objc_msgSend(v2, "compact");

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "vendedImageInterests"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "allObjects"));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_84E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_84E94(id *a1)
{
  _QWORD *v2;
  id v3;

  v2 = a1 + 4;
  if (objc_msgSend(a1[4], "seriesStack") && !objc_msgSend(a1[5], "seriesStack"))
    v2 = a1 + 5;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "genericRequestsInProcess"));
  objc_msgSend(v3, "addObject:", *v2);

}

void sub_84F00(uint64_t a1, void *a2, void *a3)
{
  NSObject *v5;
  id v6;
  id WeakRetained;
  void *v8;
  id v9;
  id v10;
  _QWORD *v11;
  id v12;
  void *v13;
  void *v14;
  const __CFString *v15;
  __CFString *v16;
  __CFString *v17;
  const __CFString *v18;
  __CFString *v19;
  __CFString *v20;
  void *v21;
  id v22;
  NSObject *v23;
  _QWORD block[4];
  id v25;
  id v26;
  id v27;
  _QWORD *v28;
  id v29[5];
  __int128 v30;
  id location[2];
  __int128 v32;
  uint64_t v33;
  _QWORD v34[4];
  id v35;
  id v36;
  id v37;
  id v38[3];

  v5 = a2;
  v6 = a3;
  kdebug_trace(725353748, 1, 0, 0, 0);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "highPriorityWorkQueue"));
  v9 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v6, v8);

  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationMakingGenericQueueEnd[0], *(_QWORD *)(a1 + 32));
  v34[0] = _NSConcreteStackBlock;
  v34[1] = 3221225472;
  v34[2] = sub_85324;
  v34[3] = &unk_28F7C0;
  objc_copyWeak(v38, (id *)(a1 + 48));
  v10 = v9;
  v35 = v10;
  v36 = *(id *)(a1 + 32);
  v37 = *(id *)(a1 + 40);
  v11 = objc_retainBlock(v34);
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationMakingGenericStart[0], *(_QWORD *)(a1 + 32));
  +[BICCacheStats incrementCounter:](BICCacheStats, "incrementCounter:", kBICCacheStatsCounterGenericsCreated[0]);
  v12 = objc_loadWeakRetained((id *)(a1 + 48));
  if (objc_msgSend(*(id *)(a1 + 32), "seriesStack")
    && !objc_msgSend(*(id *)(a1 + 40), "seriesStack")
    || objc_msgSend(v12, "_isVendedInterestBlankOrOldForRequest:", *(_QWORD *)(a1 + 32)))
  {
    kdebug_trace(725353748, 2, 0, 0, 0);
    v33 = 0;
    v32 = 0u;
    *(_OWORD *)location = 0u;
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "delegate"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
    if (v13)
    {
      objc_msgSend(v13, "cacheManager:bookCoverInfoForIdentifier:", v12, v14);
    }
    else
    {
      v33 = 0;
      v32 = 0u;
      *(_OWORD *)location = 0u;
    }

    kdebug_trace(725353748, 3, 0, 0, 0);
    if (!location[0])
    {
      v15 = (const __CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "title"));
      v16 = (__CFString *)v15;
      v17 = v15 ? (__CFString *)v15 : CFSTR("Title");
      objc_storeStrong(location, v17);

      v18 = (const __CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "author"));
      v19 = (__CFString *)v18;
      v20 = v18 ? (__CFString *)v18 : CFSTR("Author");
      objc_storeStrong(&location[1], v20);

      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "title"));
      if (!v21)
      {
        v22 = BCImageCacheLog();
        v23 = objc_claimAutoreleasedReturnValue(v22);
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          sub_1B57C8();

      }
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3254779904;
    block[2] = sub_8545C;
    block[3] = &unk_28F7E8;
    v25 = *(id *)(a1 + 32);
    v26 = *(id *)(a1 + 40);
    sub_859F8((uint64_t)v29, (uint64_t)location);
    v30 = *(_OWORD *)(a1 + 56);
    v28 = v11;
    v27 = v12;
    dispatch_async(v5, block);

    sub_85A60(v29);
    sub_85A60(location);
  }
  else
  {
    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationMakingGenericEnd, *(_QWORD *)(a1 + 32));
    ((void (*)(_QWORD *))v11[2])(v11);
  }

  objc_destroyWeak(v38);
}

void sub_852F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  sub_85A60(&a25);
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_85324(id *a1)
{
  os_unfair_lock_s *WeakRetained;
  _QWORD v3[4];
  id v4;
  id v5;
  os_unfair_lock_s *v6;

  WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained(a1 + 7);
  if (WeakRetained)
  {
    objc_msgSend(a1[4], "workComplete");
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_853F0;
    v3[3] = &unk_28C5F0;
    v4 = a1[5];
    v5 = a1[6];
    v6 = WeakRetained;
    os_unfair_lock_lock(WeakRetained + 2);
    sub_853F0((id *)v3);
    os_unfair_lock_unlock(WeakRetained + 2);

  }
}

void sub_853F0(id *a1)
{
  _QWORD *v2;
  id v3;

  v2 = a1 + 4;
  if (objc_msgSend(a1[4], "seriesStack") && !objc_msgSend(a1[5], "seriesStack"))
    v2 = a1 + 5;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "genericRequestsInProcess"));
  objc_msgSend(v3, "removeObject:", *v2);

}

void sub_8545C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  uint64_t v5;
  unsigned int v6;
  unsigned __int8 v7;
  int v8;
  int v9;
  id v10;
  __CFString *v11;
  int v12;
  double v13;
  double v14;
  CGColorSpace *DeviceRGB;
  CGColorSpace *v16;
  CGContext *v17;
  double v18;
  double v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  __CFString *v24;
  CGImage *ImageWithItemIDAndLayout;
  id v26;
  NSObject *v27;
  CGPath *Mutable;
  id v29;
  NSObject *v30;
  void *v31;
  double v32;
  double v33;
  CGFloat v34;
  CGFloat v35;
  id v36;
  void *v37;
  uint64_t v38;
  NSObject *v39;
  id v40;
  _QWORD block[4];
  id v42;
  id v43;
  id v44;
  uint8_t buf[4];
  void *v46;
  __int16 v47;
  uint64_t v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  v2 = BCImageCacheLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "priority")));
    v5 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    v46 = v4;
    v47 = 2112;
    v48 = v5;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BCCacheManager: Rendering generic at priority %@ for image=%@", buf, 0x16u);

  }
  kdebug_trace(725353748, 0, 0, 0, 0);
  v6 = 544;
  if (objc_msgSend(*(id *)(a1 + 40), "seriesStack"))
  {
    v7 = objc_msgSend(*(id *)(a1 + 40), "processingOptions");
    v8 = (v7 & 0x40) << 18;
    v6 = v7 & 0x40 | 0x220;
  }
  else
  {
    v8 = 0;
  }
  v9 = v8 | *(unsigned __int8 *)(a1 + 97) | (*(unsigned __int8 *)(a1 + 98) << 8) | (*(unsigned __int8 *)(a1 + 96) << 16);
  v10 = *(id *)(a1 + 88);
  v11 = (__CFString *)*(id *)(a1 + 80);
  v12 = BKGenericBookCoverLayoutFromLanguageAndVerticality(v11, (int)objc_msgSend(v10, "imIsVerticalWritingMode"));
  v13 = *(double *)(a1 + 104);
  v14 = *(double *)(a1 + 112);
  if (objc_msgSend(*(id *)(a1 + 40), "seriesStack"))
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    if (DeviceRGB)
    {
      v16 = DeviceRGB;
      v17 = CGBitmapContextCreate(0, (unint64_t)v13, (unint64_t)v14, 8uLL, vcvtd_n_u64_f64(v13, 2uLL), DeviceRGB, 1u);
      CGColorSpaceRelease(v16);
      if (v17)
      {
        v18 = v13 * 0.85;
        v19 = v14 * 0.85;
        goto LABEL_14;
      }
      v20 = BCImageCacheLog();
      v21 = objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        sub_1B584C();

    }
  }
  v17 = 0;
  v19 = v14;
  v18 = v13;
LABEL_14:
  v22 = *(_QWORD *)(a1 + 64);
  v23 = *(_QWORD *)(a1 + 72);
  v24 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
  ImageWithItemIDAndLayout = (CGImage *)BKGenericBookCoverCreateImageWithItemIDAndLayout(v22, v23, 0x3FF0000000000000, v9, v24, v12);

  if (!ImageWithItemIDAndLayout)
  {
    v26 = BCImageCacheLog();
    v27 = objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      sub_1B5820();

  }
  Mutable = 0;
  if (objc_msgSend(*(id *)(a1 + 40), "seriesStack") && v17)
  {
    v49.origin.y = v14 - v19;
    v49.origin.x = 0.0;
    v49.size.width = v18;
    v49.size.height = v19;
    CGContextDrawImage(v17, v49, ImageWithItemIDAndLayout);
    v50.origin.x = v13 - v18;
    v50.origin.y = 0.0;
    v50.size.width = v18;
    v50.size.height = v19;
    CGContextDrawImage(v17, v50, ImageWithItemIDAndLayout);
    CGImageRelease(ImageWithItemIDAndLayout);
    ImageWithItemIDAndLayout = CGBitmapContextCreateImage(v17);
    if (!ImageWithItemIDAndLayout)
    {
      v29 = BCImageCacheLog();
      v30 = objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
        sub_1B57F4();

    }
    CGContextRelease(v17);
    Mutable = CGPathCreateMutable();
    v31 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
    objc_msgSend(v31, "scale");
    v33 = v32;

    v34 = v18 / v33;
    v35 = v19 / v33;
    v51.origin.x = 0.0;
    v51.origin.y = 0.0;
    v51.size.width = v34;
    v51.size.height = v35;
    CGPathAddRect(Mutable, 0, v51);
    v52.origin.x = v13 / v33 - v34;
    v52.origin.y = v14 / v33 - v35;
    v52.size.width = v34;
    v52.size.height = v35;
    CGPathAddRect(Mutable, 0, v52);
  }
  v36 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v37 = (void *)objc_claimAutoreleasedReturnValue(+[BICImage imageWithCGImage:](BICImage, "imageWithCGImage:", ImageWithItemIDAndLayout));
  objc_msgSend(v36, "setImage:", v37);

  objc_msgSend(v36, "setStackOutline:", Mutable);
  if (objc_msgSend(*(id *)(a1 + 40), "seriesStack"))
    v38 = v6;
  else
    v38 = 512;
  objc_msgSend(v36, "setProcessingOptions:", v38);
  objc_msgSend(v36, "setQuality:", 2);
  objc_msgSend(v36, "setImageSize:", *(double *)(a1 + 104), *(double *)(a1 + 112));
  CGImageRelease(ImageWithItemIDAndLayout);
  if (Mutable)
    CGPathRelease(Mutable);
  kdebug_trace(725353748, 1, 0, 0, 0);
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationMakingGenericEnd, *(_QWORD *)(a1 + 32));
  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  v39 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "workHighPriorityTarget"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_8595C;
  block[3] = &unk_28C5F0;
  v42 = *(id *)(a1 + 48);
  v43 = v36;
  v44 = *(id *)(a1 + 32);
  v40 = v36;
  dispatch_async(v39, block);

}

void sub_8595C(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = (void *)a1[4];
  v4 = a1[5];
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v4, 1));
  objc_msgSend(v2, "_pushDescribedImages:forRequest:", v3, a1[6]);

}

id sub_859EC(uint64_t a1, uint64_t a2)
{
  return sub_859F8(a1 + 64, a2 + 64);
}

id sub_859F8(uint64_t a1, uint64_t a2)
{
  id result;
  char v5;

  *(_QWORD *)a1 = *(id *)a2;
  *(_QWORD *)(a1 + 8) = *(id *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(id *)(a2 + 16);
  result = *(id *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = result;
  v5 = *(_BYTE *)(a2 + 34);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_BYTE *)(a1 + 34) = v5;
  return result;
}

void sub_85A58(uint64_t a1)
{
  sub_85A60((id *)(a1 + 64));
}

void sub_85A60(id *a1)
{

}

id sub_85BF8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "incrementVersionForIdentifiers:", a2);
}

void sub_85CB8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "versionBumpedIdentifiers"));
  objc_msgSend(v2, "unionSet:", *(_QWORD *)(a1 + 40));

}

void sub_85DB0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "versionBumpedIdentifiers"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

id sub_85E8C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  int v8;
  void *v9;

  v2 = BCImageCacheLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allObjects"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bu_prettyDescription"));
    v8 = 138412290;
    v9 = v5;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BCCacheManager: Incrementing version for assetIDs=%@", (uint8_t *)&v8, 0xCu);

  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "level1"));
  objc_msgSend(v6, "incrementVersionForIdentifiers:", *(_QWORD *)(a1 + 32));

  return +[BICCacheStats addToCounter:amount:](BICCacheStats, "addToCounter:amount:", kBICCacheStatsCounterVersionBumps[0], objc_msgSend(*(id *)(a1 + 32), "count"));
}

void sub_860D4(id *a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  _QWORD *v7;
  void *v8;
  unsigned int v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *k;
  void *v19;
  id v20;
  NSObject *v21;
  unsigned int v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  id obj;
  void *v30;
  void *i;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *j;
  id v37;
  void *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _QWORD v51[2];
  id (*v52)(uint64_t);
  void *v53;
  os_unfair_lock_s *v54;
  __int128 *p_buf;
  _QWORD *v56;
  _QWORD v57[4];
  uint8_t v58[4];
  unsigned int v59;
  __int16 v60;
  void *v61;
  __int16 v62;
  void *v63;
  __int16 v64;
  id v65;
  _BYTE v66[128];
  _BYTE v67[128];
  uint8_t v68[128];
  __int128 buf;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t);
  void (*v72)(uint64_t);
  id v73;

  kdebug_trace(725353752, 2, 0, 0, 0);
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "bu_arrayByInvokingBlock:", &stru_28F8C8));
  v2 = BCImageCacheLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "bu_prettyDescription"));
    LODWORD(buf) = 138412290;
    *(_QWORD *)((char *)&buf + 4) = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, "BCCacheManager: Checking interest for images=%@", (uint8_t *)&buf, 0xCu);

  }
  v30 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage groupDescribedImagesByIdentifier:](BICDescribedImage, "groupDescribedImagesByIdentifier:", a1[4]));
  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v70 = 0x3032000000;
  v71 = sub_7E790;
  v72 = sub_7E7A0;
  v73 = 0;
  v57[0] = 0;
  v57[1] = v57;
  v57[2] = 0x2020000000;
  v57[3] = 0;
  v5 = (os_unfair_lock_s *)a1[5];
  v6 = v5 + 2;
  v51[0] = _NSConcreteStackBlock;
  v51[1] = 3221225472;
  v52 = sub_86720;
  v53 = &unk_28F2B8;
  v54 = v5;
  p_buf = &buf;
  v56 = v57;
  v7 = v51;
  os_unfair_lock_lock(v6);
  v52((uint64_t)v7);
  os_unfair_lock_unlock(v6);

  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  obj = *(id *)(*((_QWORD *)&buf + 1) + 40);
  v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v68, 16);
  if (v26)
  {
    v28 = *(_QWORD *)v48;
    do
    {
      for (i = 0; i != v26; i = (char *)i + 1)
      {
        if (*(_QWORD *)v48 != v28)
          objc_enumerationMutation(obj);
        v35 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * (_QWORD)i);
        v43 = 0u;
        v44 = 0u;
        v45 = 0u;
        v46 = 0u;
        v32 = v30;
        v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v43, v67, 16);
        if (v34)
        {
          v33 = *(_QWORD *)v44;
          do
          {
            for (j = 0; j != v34; j = (char *)j + 1)
            {
              if (*(_QWORD *)v44 != v33)
                objc_enumerationMutation(v32);
              v38 = *(void **)(*((_QWORD *)&v43 + 1) + 8 * (_QWORD)j);
              v37 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "describedImageRequested", v26));
              if (objc_msgSend(v37, "seriesStack"))
              {
                v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "describedImageShown"));
                v9 = objc_msgSend(v8, "isGeneric");

                if (v9)
                {
                  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "stackRequest"));
                  if (v10 == v37)
                  {

                  }
                  else
                  {
                    v11 = a1[6];
                    v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "alternateRequest"));
                    LOBYTE(v11) = v11 == v12;

                    if ((v11 & 1) == 0)
                      objc_msgSend(a1[5], "_checkStack:forInterestIn:", v35, v38);
                  }
                }
              }
              v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "comparator"));
              v14 = (void *)objc_claimAutoreleasedReturnValue(+[BCCacheManager operationsFromInterestInDescribedImages:comparator:imageRequest:vendedImageInterest:](BCCacheManager, "operationsFromInterestInDescribedImages:comparator:imageRequest:vendedImageInterest:", v38, v13, a1[6], v35));

              v41 = 0u;
              v42 = 0u;
              v39 = 0u;
              v40 = 0u;
              v15 = v14;
              v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v39, v66, 16);
              if (v16)
              {
                v17 = *(_QWORD *)v40;
                do
                {
                  for (k = 0; k != v16; k = (char *)k + 1)
                  {
                    if (*(_QWORD *)v40 != v17)
                      objc_enumerationMutation(v15);
                    v19 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * (_QWORD)k);
                    v20 = BCImageCacheLog();
                    v21 = objc_claimAutoreleasedReturnValue(v20);
                    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
                    {
                      v22 = objc_msgSend(v19, "operationKind");
                      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "descriptionForKind"));
                      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "bu_prettyDescription"));
                      v25 = a1[6];
                      *(_DWORD *)v58 = 67109890;
                      v59 = v22;
                      v60 = 2114;
                      v61 = v23;
                      v62 = 2112;
                      v63 = v24;
                      v64 = 2112;
                      v65 = v25;
                      _os_log_impl(&dword_0, v21, OS_LOG_TYPE_INFO, "BCCacheManager: Performing operation %d=%{public}@ for image=%@ for request=%@", v58, 0x26u);

                    }
                    objc_msgSend(a1[5], "_performOperation:", v19);
                  }
                  v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v39, v66, 16);
                }
                while (v16);
              }

            }
            v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v43, v67, 16);
          }
          while (v34);
        }

      }
      v26 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v68, 16);
    }
    while (v26);
  }

  kdebug_trace(725353752, 3, 0, 0, 0);
  _Block_object_dispose(v57, 8);
  _Block_object_dispose(&buf, 8);

}

void sub_86658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  uint64_t v57;

  _Block_object_dispose(&a57, 8);
  _Block_object_dispose((const void *)(v57 - 160), 8);
  _Unwind_Resume(a1);
}

id sub_866B8(id a1, id a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;

  v2 = BUProtocolCast(&OBJC_PROTOCOL___BICDescribedImage, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "adamID"));
  v5 = v4;
  if (v4)
    v6 = v4;
  else
    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "description"));
  v7 = v6;

  return v7;
}

id sub_86720(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id result;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "vendedImageInterests"));
  objc_msgSend(v2, "compact");

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "vendedImageInterests"));
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "allObjects"));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

  result = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "count");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = result;
  return result;
}

void sub_86B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_86B70(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "vendedImageInterests"));
  objc_msgSend(v2, "compact");

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "vendedImageInterests"));
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "allObjects"));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_87284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_872CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blankImages"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_87324(uint64_t a1)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blankImages"));
  objc_msgSend(v3, "setObject:forKeyedSubscript:", v2, *(_QWORD *)(a1 + 40));

}

void sub_87E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location,id a28)
{
  id *v28;
  id *v29;
  uint64_t v30;

  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  _Block_object_dispose((const void *)(v30 - 176), 8);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a28);
  _Unwind_Resume(a1);
}

void sub_87EC0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cgInterests"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_87F00(uint64_t a1, void *a2, int a3)
{
  id v6;
  id WeakRetained;
  id v8;
  unsigned int v9;
  void *v10;
  unsigned __int8 v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  int v17;
  os_unfair_lock_s *v19;
  _QWORD *v20;
  id v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  id v26;
  NSObject *v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  void *v37;
  _QWORD v38[2];
  void (*v39)(uint64_t);
  void *v40;
  id v41;
  id v42;
  _BYTE *v43;
  uint8_t v44[4];
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  _BYTE buf[24];
  char v49;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v8 = objc_loadWeakRetained((id *)(a1 + 72));
  v9 = objc_msgSend(v6, "quality");
  if (v9 != 2 || (objc_msgSend(v6, "requestOptions") & 8) != 0)
  {
    v17 = 0;
  }
  else
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "describedImageRequested"));
    v11 = objc_msgSend(v10, "requestOptions");

    if ((v11 & 0x10) != 0)
    {
      v17 = 1;
    }
    else
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "describedImageRequested"));
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "operationsLog"));

      v13 = (void *)objc_claimAutoreleasedReturnValue(+[BICCacheStats operationToLogString:](BICCacheStats, "operationToLogString:", BICCacheStatsOperationNetworkDownloadQueueStart[0]));
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[BICCacheStats operationToLogString:](BICCacheStats, "operationToLogString:", BICCacheStatsOperationProfileDownloadQueueStart[0]));
      if ((objc_msgSend(v37, "containsString:", v13) & 1) != 0
        || objc_msgSend(v37, "containsString:", v14))
      {
        v15 = BCImageCacheLog();
        v16 = objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
          sub_1B5950(a1, v16);

        v17 = 0;
      }
      else
      {
        v17 = 1;
      }

    }
  }
  if ((a3 & 1) != 0)
  {
    v17 = 1;
  }
  else if (v9 > 2 || *(_BYTE *)(a1 + 80) != 0)
  {
    v17 = 1;
  }
  if (v9 > objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "quality", v37))
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), a2);
  if (v17)
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x2020000000;
    v49 = 0;
    v19 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 40) + 8);
    v38[0] = _NSConcreteStackBlock;
    v38[1] = 3221225472;
    v39 = sub_883AC;
    v40 = &unk_28D240;
    v41 = WeakRetained;
    v43 = buf;
    v42 = v8;
    v20 = v38;
    os_unfair_lock_lock(v19);
    v39((uint64_t)v20);
    os_unfair_lock_unlock(v19);

    if (!*(_BYTE *)(*(_QWORD *)&buf[8] + 24))
    {
      if ((a3 & 1) != 0)
      {
LABEL_36:

        _Block_object_dispose(buf, 8);
        goto LABEL_37;
      }
      v29 = BCImageCacheLog();
      v30 = objc_claimAutoreleasedReturnValue(v29);
      if (os_log_type_enabled(v30, OS_LOG_TYPE_INFO))
      {
        v31 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        v32 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)v44 = 138412546;
        v45 = v31;
        v46 = 2112;
        v47 = v32;
        _os_log_impl(&dword_0, v30, OS_LOG_TYPE_INFO, "BCCacheManager: Ignoring unexpected delivery of uninterested image=%@ for request=%@", v44, 0x16u);
      }
LABEL_35:

      goto LABEL_36;
    }
    if (a3)
    {
      v21 = BCImageCacheLog();
      v22 = objc_claimAutoreleasedReturnValue(v21);
      if (!os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        goto LABEL_33;
      v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      v24 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)v44 = 138412546;
      v45 = v23;
      v46 = 2112;
      v47 = v24;
      v25 = "BCCacheManager: Timed out while fetching image, returning %@ for request=%@";
    }
    else
    {
      v33 = BCImageCacheLog();
      v22 = objc_claimAutoreleasedReturnValue(v33);
      if (!os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        goto LABEL_33;
      v34 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      v35 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)v44 = 138412546;
      v45 = v34;
      v46 = 2112;
      v47 = v35;
      v25 = "BCCacheManager: Returning image=%@ for request=%@";
    }
    _os_log_impl(&dword_0, v22, OS_LOG_TYPE_DEFAULT, v25, v44, 0x16u);
LABEL_33:

    v36 = objc_retainBlock(*(id *)(a1 + 48));
    v30 = v36;
    if (v36)
      ((void (*)(NSObject *, _QWORD))v36[2].isa)(v36, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    goto LABEL_35;
  }
  v26 = BCImageCacheLog();
  v27 = objc_claimAutoreleasedReturnValue(v26);
  if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
  {
    v28 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    *(_QWORD *)&buf[4] = v6;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v28;
    _os_log_impl(&dword_0, v27, OS_LOG_TYPE_INFO, "BCCacheManager: Waiting for better image to be delivered for: current=%@ request=%@", buf, 0x16u);
  }

LABEL_37:
}

void sub_8837C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_883AC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "cgInterests"));
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v3, "indexOfObjectIdenticalTo:", *(_QWORD *)(a1 + 40)) != (id)0x7FFFFFFFFFFFFFFFLL;

    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cgInterests"));
    objc_msgSend(v4, "removeObjectIdenticalTo:", *(_QWORD *)(a1 + 40));

  }
}

void sub_88434(uint64_t a1)
{
  void *v2;
  void (**v3)(id, void *, uint64_t);

  v3 = (void (**)(id, void *, uint64_t))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handler"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_blankCoverForDescribedImage:", *(_QWORD *)(a1 + 48)));
  v3[2](v3, v2, 1);

}

void sub_885A8(uint64_t a1)
{
  id v2;
  id v3;
  __int128 v4;
  id v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint8_t buf[4];
  void *v19;
  __int16 v20;
  uint64_t v21;
  _BYTE v22[128];

  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
  if (v3)
  {
    v5 = v3;
    v6 = *(_QWORD *)v15;
    *(_QWORD *)&v4 = 138412546;
    v13 = v4;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v6)
          objc_enumerationMutation(v2);
        v8 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        objc_msgSend(*(id *)(a1 + 40), "_refetchInterestsForNewVersion:", v8, v13, (_QWORD)v14);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "seriesDecomposer"));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "seriesIDContainingBook:", v8));

        if (objc_msgSend(v10, "length"))
        {
          v11 = BCImageCacheLog();
          v12 = objc_claimAutoreleasedReturnValue(v11);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)buf = v13;
            v19 = v10;
            v20 = 2112;
            v21 = v8;
            _os_log_impl(&dword_0, v12, OS_LOG_TYPE_INFO, "BCCacheManager: Incrementing Series Stack version for seriesID=%@ because of assetID=%@", buf, 0x16u);
          }

          objc_msgSend(*(id *)(a1 + 40), "incrementVersionForIdentifier:", v10);
        }

      }
      v5 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v22, 16);
    }
    while (v5);
  }

}

void sub_88F04(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xEu);
}

id im_expandedItemSourcesFromItemSource(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  if (objc_msgSend(v1, "conformsToProtocol:", &OBJC_PROTOCOL___IMActivityItemSource))
    objc_msgSend(v2, "addObject:", v1);
  if (objc_msgSend(v1, "conformsToProtocol:", &OBJC_PROTOCOL___IMActivityItemSourceExpanding))
  {
    v13 = 0u;
    v14 = 0u;
    v11 = 0u;
    v12 = 0u;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "expandedItemProviders", 0));
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v12;
      do
      {
        v7 = 0;
        do
        {
          if (*(_QWORD *)v12 != v6)
            objc_enumerationMutation(v3);
          v8 = im_expandedItemSourcesFromItemSource(*(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v7));
          v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
          if (objc_msgSend(v9, "count"))
            objc_msgSend(v2, "addObjectsFromArray:", v9);

          v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      }
      while (v5);
    }

  }
  return v2;
}

void sub_89914(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "database"));
  v3 = objc_msgSend(v2, "newPrivateQueueManagedObjectContext");
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  v6 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = v6;

}

id sub_899F4(uint64_t a1)
{
  id v2;
  NSObject *v3;

  v2 = BCSeriesManagerUpdaterLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1B59C4(a1);

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 56), "addObjectsFromArray:", *(_QWORD *)(a1 + 32));
}

id sub_89AB4(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setFinished:", 1);
  return _objc_msgSend(*(id *)(a1 + 32), "setOnFinished:", 0);
}

void sub_89B50(uint64_t a1)
{
  void *v2;
  _QWORD v3[5];

  if ((objc_msgSend(*(id *)(a1 + 32), "isFinished") & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "setFinished:", 1);
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_89BDC;
    v3[3] = &unk_28B960;
    v3[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v2, "performBlockAndWait:", v3);

  }
}

void sub_89BDC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  unsigned int v23;
  id v24;
  NSObject *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;

  v2 = BCSeriesManagerUpdaterLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1B5AB4(a1);

  v5 = *(_QWORD *)(a1 + 32);
  v4 = (id *)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v5 + 56), "allObjects"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "managedObjectContext"));
  +[BKSeriesCheck recordAdamIDsAsChecked:inManagedObjectContext:](BKSeriesCheck, "recordAdamIDsAsChecked:inManagedObjectContext:", v6, v7);

  objc_msgSend(*((id *)*v4 + 7), "removeAllObjects");
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "managedObjectContext"));
  LODWORD(v6) = objc_msgSend(v8, "hasChanges");

  if ((_DWORD)v6)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "managedObjectContext"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "insertedObjects"));
    v12 = sub_89EDC((uint64_t)v11, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    if (objc_msgSend(v13, "count"))
      objc_msgSend(v9, "setObject:forKey:", v13, CFSTR("BKSeriesItemAdamIDsAdded"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "managedObjectContext"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "updatedObjects"));
    v16 = sub_89EDC((uint64_t)v15, v15);
    v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

    if (objc_msgSend(v17, "count"))
      objc_msgSend(v9, "setObject:forKey:", v17, CFSTR("BKSeriesItemAdamIDsUpdated"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "managedObjectContext"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "deletedObjects"));
    v20 = sub_89EDC((uint64_t)v19, v19);
    v21 = (void *)objc_claimAutoreleasedReturnValue(v20);

    if (objc_msgSend(v21, "count"))
      objc_msgSend(v9, "setObject:forKey:", v21, CFSTR("BKSeriesItemAdamIDsRemoved"));
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "managedObjectContext"));
    v31 = 0;
    v23 = objc_msgSend(v22, "save:", &v31);
    v24 = v31;

    if (v23)
    {
      if (!objc_msgSend(v9, "count"))
      {
LABEL_16:

        goto LABEL_17;
      }
      v25 = objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "manager"));
      v27 = objc_msgSend(v9, "copy");
      -[NSObject postNotificationName:object:userInfo:](v25, "postNotificationName:object:userInfo:", CFSTR("BKSeriesManagerUpdatesSeriesNotification"), v26, v27);

    }
    else
    {
      v28 = BCSeriesManagerUpdaterLog();
      v25 = objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
        sub_1B5A50();
    }

    goto LABEL_16;
  }
LABEL_17:
  v29 = objc_claimAutoreleasedReturnValue(objc_msgSend(*v4, "onFinished"));
  v30 = (void *)v29;
  if (v29)
    (*(void (**)(uint64_t))(v29 + 16))(v29);

}

id sub_89EDC(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v2 = a2;
  v3 = v2;
  if (v2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v2, "count")));
    v16 = 0u;
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v5 = v3;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v17;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(_QWORD *)v17 != v8)
            objc_enumerationMutation(v5);
          v10 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
          v11 = objc_opt_class(BKSeriesItem);
          if ((objc_opt_isKindOfClass(v10, v11) & 1) != 0)
          {
            v12 = v10;
            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "adamId", (_QWORD)v16));

            if (v13)
            {
              v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "adamId"));
              objc_msgSend(v4, "addObject:", v14);

            }
          }
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      }
      while (v7);
    }

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_8A154(uint64_t a1, double a2)
{
  NSObject *v4;
  void *v5;
  _QWORD v6[5];
  id v7;
  id v8;
  double v9;

  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_8A200;
  v6[3] = &unk_28F918;
  v5 = *(void **)(a1 + 40);
  v6[4] = *(_QWORD *)(a1 + 32);
  v7 = v5;
  v8 = *(id *)(a1 + 48);
  v9 = a2;
  dispatch_async(v4, v6);

}

void sub_8A200(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD v4[5];
  id v5;
  id v6;
  uint64_t v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_8A2A4;
  v4[3] = &unk_28F918;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  v6 = *(id *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  objc_msgSend(v2, "performBlock:", v4);

}

void sub_8A2A4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  id v6;
  _QWORD block[5];
  id v8;
  _QWORD v9[2];
  _QWORD v10[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_filteredAdamIDs:withIntervalInDays:", *(_QWORD *)(a1 + 40), 14.0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_filteredAdamIDs:withIntervalInDays:", *(_QWORD *)(a1 + 48), *(double *)(a1 + 56)));
  if (objc_msgSend(v2, "count") || objc_msgSend(v3, "count"))
  {
    v9[0] = BKSeriesManagerAssetTypeBooks[0];
    v9[1] = BKSeriesManagerAssetTypeAudiobooks[0];
    v10[0] = v2;
    v10[1] = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v10, v9, 2));
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue"));
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_8A3FC;
    block[3] = &unk_28B808;
    block[4] = *(_QWORD *)(a1 + 32);
    v8 = v4;
    v6 = v4;
    dispatch_async(v5, block);

  }
}

id sub_8A3FC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_updateSeriesForAssetIDsWithTypes:forceCheck:", *(_QWORD *)(a1 + 40), 1);
}

void sub_8A6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_8A70C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_8A71C(uint64_t a1)
{

}

void sub_8A724(uint64_t a1, double a2)
{
  NSObject *v4;
  _QWORD v5[4];
  __int128 v6;
  uint64_t v7;
  double v8;

  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_8A7B0;
  v5[3] = &unk_28F968;
  v6 = *(_OWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = a2;
  dispatch_async(v4, v5);

}

void sub_8A7B0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[4];
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];
  _QWORD v13[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_8A8DC;
  v8[3] = &unk_28F940;
  v9 = *(_OWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  objc_msgSend(v2, "performBlockAndWait:", v8);

  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v12[0] = BKSeriesManagerSeriesTypeBookSeries[0];
  v12[1] = BKSeriesManagerSeriesTypeAudiobookSeries;
  v5 = &__NSArray0__struct;
  if (!v4)
    v4 = &__NSArray0__struct;
  v6 = *(void **)(*(_QWORD *)(v3 + 8) + 40);
  if (v6)
    v5 = v6;
  v13[0] = v4;
  v13[1] = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v13, v12, 2));
  objc_msgSend(*(id *)(a1 + 32), "_updateSeriesForSeriesAdamIDsWithFilteredTypes:", v7);

}

void sub_8A8DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_filteredAdamIDs:withIntervalInDays:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), 14.0));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_filteredAdamIDs:withIntervalInDays:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(double *)(a1 + 56)));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_8A9FC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;

  v6 = a4;
  if (v6)
  {
    v7 = BCSeriesManagerUpdaterLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B5B9C();

    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), 150);
  }
  else
  {
    (*(void (**)(_QWORD, id))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), objc_msgSend(a2, "unsignedIntegerValue"));
  }

}

void sub_8AC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_8ACBC(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  __int128 v12;
  uint64_t v13;
  _QWORD v14[4];

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "catalogService"));
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v14[0] = BFMCatalogRequestRelationshipBooks;
  v14[1] = BFMCatalogRequestRelationshipAudiobooks;
  v14[2] = BFMCatalogRequestRelationshipGenres;
  v14[3] = BFMCatalogRequestRelationshipMappedSeries;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v14, 4));
  v8 = objc_alloc((Class)BFMRequestMetadata);
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%s"), "BKSeriesManagerUpdater.m"));
  v10 = objc_msgSend(v8, "initWithFileID:line:", v9, 265);
  v11[1] = 3221225472;
  v11[2] = sub_8AE64;
  v11[3] = &unk_28FA30;
  v12 = *(_OWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 48);
  v11[0] = _NSConcreteStackBlock;
  objc_msgSend(v4, "fetchMixedSeriesWithBookSeriesIds:audiobookSeriesIds:relationships:views:additionalParameters:batchSize:metadata:completionHandler:", v5, v6, v7, 0, &off_2AF988, a2, v10, v11);

}

void sub_8AE64(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  id v14;
  NSObject *v15;
  _QWORD v16[5];
  id v17;
  int8x16_t v18;
  uint8_t buf[4];
  uint64_t v20;
  __int16 v21;
  id v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;

  v5 = a2;
  v6 = a3;
  v7 = BCSeriesManagerUpdaterLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = objc_msgSend(v5, "count");
    v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    *(_DWORD *)buf = 134218754;
    v20 = v9;
    v21 = 2048;
    v22 = v10;
    v23 = 2112;
    v24 = v11;
    v25 = 2112;
    v26 = v12;
    _os_log_impl(&dword_0, v8, OS_LOG_TYPE_INFO, "<BKSeriesManagerUpdater: %p> Processing %lu resources for series with bookSeriesAdamIds: %@, audiobookSeriesAdamIDs: %@", buf, 0x2Au);
  }

  if (objc_msgSend(v5, "count"))
  {
    v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue"));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_8B028;
    v16[3] = &unk_28FA08;
    v18 = vextq_s8(*(int8x16_t *)(a1 + 40), *(int8x16_t *)(a1 + 40), 8uLL);
    v16[4] = *(_QWORD *)(a1 + 32);
    v17 = v5;
    dispatch_async(v13, v16);

  }
  else
  {
    v14 = BCSeriesManagerUpdaterLog();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_1B5BFC();

    objc_msgSend(*(id *)(a1 + 32), "finish");
  }

}

void sub_8B028(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[5];
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(&__NSArray0__struct, "arrayByAddingObjectsFromArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "arrayByAddingObjectsFromArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40)));

  objc_msgSend(*(id *)(a1 + 32), "_updateSeriesContainersWithSeriesIDs:withResources:", v3, *(_QWORD *)(a1 + 40));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_8B0FC;
  v5[3] = &unk_28F9E0;
  v4 = *(void **)(a1 + 40);
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v4;
  +[BKSeriesManagerUpdaterHelper gatherAllAssetAdamIDsInSeries:completion:](BKSeriesManagerUpdaterHelper, "gatherAllAssetAdamIDsInSeries:completion:", v6, v5);

}

void sub_8B0FC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v5 = a2;
  v6 = a3;
  v7 = BCSeriesManagerUpdaterLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if (v5)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v10 = *(_QWORD *)(a1 + 32);
      v11 = 134217984;
      v12 = v10;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_INFO, "<BKSeriesManagerUpdater: %p> Processing updateSeriesAdamIds children", (uint8_t *)&v11, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 32), "_updateSeriesChildrenWithAdamIDs:forSeries:", v5, *(_QWORD *)(a1 + 40));
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B5C60();

    objc_msgSend(*(id *)(a1 + 32), "finish");
  }

}

void sub_8B2CC(id *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *j;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  void *v22;
  id v23;
  NSObject *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  id v41;
  uint8_t buf[4];
  id v43;
  __int16 v44;
  uint64_t v45;
  _BYTE v46[128];
  _BYTE v47[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem fetchRequest](BKSeriesItem, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllItemsAndContainersInSeries:](BKSeriesItem, "predicateForAllItemsAndContainersInSeries:", a1[4]));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "managedObjectContext"));
  v41 = 0;
  v32 = v2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v41));
  v31 = v41;

  v6 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v5, "count"));
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v7 = v5;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v37, v47, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v38;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v38 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * (_QWORD)i);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "adamId"));
        objc_msgSend(v6, "setObject:forKeyedSubscript:", v12, v13);

      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v37, v47, 16);
    }
    while (v9);
  }
  v30 = v7;

  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  v14 = a1[4];
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v33, v46, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v34;
    do
    {
      for (j = 0; j != v16; j = (char *)j + 1)
      {
        if (*(_QWORD *)v34 != v17)
          objc_enumerationMutation(v14);
        v19 = *(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)j);
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "objectForKeyedSubscript:", v19));
        if (v20)
        {
          v21 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v19));
          if (!v21)
          {
            v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "managedObjectContext"));
            v21 = objc_claimAutoreleasedReturnValue(+[BKSeriesItem insertSeriesContainerWithSeriesAdamId:intoManagedObjectContext:](BKSeriesItem, "insertSeriesContainerWithSeriesAdamId:intoManagedObjectContext:", v19, v22));

            v23 = BCSeriesManagerUpdaterLog();
            v24 = objc_claimAutoreleasedReturnValue(v23);
            if (os_log_type_enabled(v24, OS_LOG_TYPE_DEBUG))
            {
              v29 = a1[5];
              *(_DWORD *)buf = 134218242;
              v43 = v29;
              v44 = 2112;
              v45 = v19;
              _os_log_debug_impl(&dword_0, v24, OS_LOG_TYPE_DEBUG, "<BKSeriesManagerUpdater: %p> _updateSeriesContainersWithSeriesID created seriesItem for:%@", buf, 0x16u);
            }

          }
          v25 = (void *)objc_opt_class(a1[5]);
          v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "managedObjectContext"));
          objc_msgSend(v25, "_populateItem:withSeriesResource:inMoc:", v21, v20, v26);

        }
        else
        {
          v27 = BCSeriesManagerUpdaterLog();
          v21 = objc_claimAutoreleasedReturnValue(v27);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEBUG))
          {
            v28 = a1[5];
            *(_DWORD *)buf = 134218242;
            v43 = v28;
            v44 = 2112;
            v45 = v19;
            _os_log_debug_impl(&dword_0, v21, OS_LOG_TYPE_DEBUG, "<BKSeriesManagerUpdater: %p> _updateSeriesContainersWithSeriesID missing series resource for seriesID:%@", buf, 0x16u);
          }
        }

      }
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v33, v46, 16);
    }
    while (v16);
  }

}

void sub_8B75C(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *i;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *j;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  NSObject *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  _QWORD v42[5];
  id v43;
  uint64_t *v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  void (*v53)(uint64_t);
  id v54;
  id v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  id v60;
  uint8_t buf[4];
  uint64_t v62;
  __int16 v63;
  void *v64;
  _BYTE v65[128];
  _BYTE v66[128];
  _QWORD v67[3];

  v2 = a1 + 32;
  objc_msgSend(*(id *)(a1 + 32), "recordAdamIDsAsChecked:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem fetchRequest](BKSeriesItem, "fetchRequest"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllBookItems](BKSeriesItem, "predicateForAllBookItems"));
  v67[0] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllItemsAndContainerWithAdamIdInList:](BKSeriesItem, "predicateForAllItemsAndContainerWithAdamIdInList:", *(_QWORD *)(v2 + 8)));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate notPredicateWithSubpredicate:](NSCompoundPredicate, "notPredicateWithSubpredicate:", v5));
  v67[1] = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "allKeys"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllItemsAndContainersInSeries:](BKSeriesItem, "predicateForAllItemsAndContainersInSeries:", v7));
  v67[2] = v8;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v67, 3));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v9));
  objc_msgSend(v3, "setPredicate:", v10);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)v2, "managedObjectContext"));
  v60 = 0;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "executeFetchRequest:error:", v3, &v60));
  v13 = v60;

  if (objc_msgSend(v12, "count"))
  {
    v58 = 0u;
    v59 = 0u;
    v56 = 0u;
    v57 = 0u;
    v14 = v12;
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v56, v66, 16);
    if (v15)
    {
      v16 = *(_QWORD *)v57;
      do
      {
        for (i = 0; i != v15; i = (char *)i + 1)
        {
          if (*(_QWORD *)v57 != v16)
            objc_enumerationMutation(v14);
          v18 = *(_QWORD *)(*((_QWORD *)&v56 + 1) + 8 * (_QWORD)i);
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
          objc_msgSend(v19, "deleteObject:", v18);

        }
        v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v56, v66, 16);
      }
      while (v15);
    }

  }
  v41 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem fetchRequest](BKSeriesItem, "fetchRequest"));
  v20 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllItemsAndContainerWithAdamIdInList:](BKSeriesItem, "predicateForAllItemsAndContainerWithAdamIdInList:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v41, "setPredicate:", v20);

  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
  v55 = v13;
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "executeFetchRequest:error:", v41, &v55));
  v40 = v55;

  v49 = 0;
  v50 = &v49;
  v51 = 0x3032000000;
  v52 = sub_8A70C;
  v53 = sub_8A71C;
  v54 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v22, "count"));
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v23 = v22;
  v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v45, v65, 16);
  if (v24)
  {
    v25 = *(_QWORD *)v46;
    do
    {
      for (j = 0; j != v24; j = (char *)j + 1)
      {
        if (*(_QWORD *)v46 != v25)
          objc_enumerationMutation(v23);
        v27 = *(void **)(*((_QWORD *)&v45 + 1) + 8 * (_QWORD)j);
        v28 = (void *)v50[5];
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "adamId", v40));
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "objectForKeyedSubscript:", v29));

        if (v30)
        {
          v31 = BCSeriesManagerUpdaterLog();
          v32 = objc_claimAutoreleasedReturnValue(v31);
          if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
          {
            v35 = *(_QWORD *)(a1 + 32);
            v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "adamId"));
            *(_DWORD *)buf = 134218242;
            v62 = v35;
            v63 = 2112;
            v64 = v36;
            _os_log_error_impl(&dword_0, v32, OS_LOG_TYPE_ERROR, "<BKSeriesManagerUpdater: %p> _updateSeriesChildrenWithAdamIDs: Found duplicate series item of adam ID: %@", buf, 0x16u);

          }
          v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
          objc_msgSend(v33, "deleteObject:", v27);
        }
        else
        {
          v34 = (void *)v50[5];
          v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v27, "adamId"));
          objc_msgSend(v34, "setObject:forKeyedSubscript:", v27, v33);
        }

      }
      v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v45, v65, 16);
    }
    while (v24);
  }

  v37 = *(void **)(a1 + 48);
  v42[0] = _NSConcreteStackBlock;
  v42[1] = 3221225472;
  v42[2] = sub_8BCE8;
  v42[3] = &unk_28FAA8;
  v38 = *(_QWORD *)(a1 + 32);
  v44 = &v49;
  v42[4] = v38;
  v39 = v40;
  v43 = v39;
  objc_msgSend(v37, "enumerateKeysAndObjectsUsingBlock:", v42);
  objc_msgSend(*(id *)(a1 + 32), "finish");

  _Block_object_dispose(&v49, 8);
}

void sub_8BCB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

void sub_8BCE8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;

  v5 = a2;
  v6 = a3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "assets"));
  if (objc_msgSend(v7, "count"))
  {
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_8BDE4;
    v18[3] = &unk_28FA80;
    v22 = *(_QWORD *)(a1 + 48);
    v8 = v5;
    v9 = *(_QWORD *)(a1 + 32);
    v19 = v8;
    v20 = v9;
    v21 = v6;
    objc_msgSend(v7, "enumerateObjectsUsingBlock:", v18);

  }
  else
  {
    v10 = BCSeriesManagerUpdaterLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1B5CC4(a1, v11, v12, v13, v14, v15, v16, v17);

  }
}

void sub_8BDE4(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v5 = a2;
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "id"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "objectForKeyedSubscript:"));
  if (!v6)
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "managedObjectContext"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem insertSeriesItemWithAdamId:seriesAdamId:intoManagedObjectContext:](BKSeriesItem, "insertSeriesItemWithAdamId:seriesAdamId:intoManagedObjectContext:", v9, v7, v8));

  }
  objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 40)), "_populateItem:position:withAssetResource:seriesResource:", v6, a3, v5, *(_QWORD *)(a1 + 48));

}

void sub_8BFB8(uint64_t a1, uint64_t a2)
{
  void *v4;
  _QWORD v5[4];
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  char v10;

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_8C054;
  v5[3] = &unk_28FB48;
  v10 = *(_BYTE *)(a1 + 56);
  v4 = *(void **)(a1 + 40);
  v6 = *(id *)(a1 + 32);
  v7 = v4;
  v8 = *(id *)(a1 + 48);
  v9 = a2;
  objc_msgSend(v6, "_intervalInDaysWithCompletion:", v5);

}

void sub_8C054(uint64_t a1, double a2)
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  _QWORD v9[4];
  id v10;
  id v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char v15;

  v4 = BCSeriesManagerUpdaterLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    sub_1B5D2C(a1);

  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue"));
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_8C13C;
  v9[3] = &unk_28FB20;
  v10 = *(id *)(a1 + 40);
  v7 = *(id *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 32);
  v11 = v7;
  v12 = v8;
  v13 = a2;
  v14 = *(_QWORD *)(a1 + 56);
  dispatch_async(v6, v9);

}

void sub_8C13C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  _QWORD v20[7];
  _QWORD v21[5];
  id v22;
  id v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  _QWORD v39[3];
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;

  v33 = 0;
  v34 = &v33;
  v35 = 0x3032000000;
  v36 = sub_8A70C;
  v37 = sub_8A71C;
  v38 = *(id *)(a1 + 32);
  v27 = 0;
  v28 = &v27;
  v29 = 0x3032000000;
  v30 = sub_8A70C;
  v31 = sub_8A71C;
  v32 = *(id *)(a1 + 40);
  if (!*(_BYTE *)(a1 + 72))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "managedObjectContext"));
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_8C55C;
    v21[3] = &unk_28FAD0;
    v3 = *(_QWORD *)(a1 + 48);
    v24 = &v33;
    v21[4] = v3;
    v22 = *(id *)(a1 + 32);
    v25 = &v27;
    v23 = *(id *)(a1 + 40);
    v26 = *(_QWORD *)(a1 + 56);
    objc_msgSend(v2, "performBlockAndWait:", v21);

  }
  if (objc_msgSend((id)v34[5], "count") || objc_msgSend((id)v28[5], "count"))
  {
    kdebug_trace(725352856, 0, 0, 0, 0);
    objc_msgSend(*(id *)(a1 + 48), "recordAdamIDsAsChecked:", v34[5]);
    objc_msgSend(*(id *)(a1 + 48), "recordAdamIDsAsChecked:", v28[5]);
    v4 = BCSeriesManagerUpdaterLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *(_QWORD *)(a1 + 48);
      v7 = v34[5];
      v8 = v28[5];
      *(_DWORD *)buf = 134218498;
      v41 = v6;
      v42 = 2112;
      v43 = v7;
      v44 = 2112;
      v45 = v8;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_INFO, "<BKSeriesManagerUpdater: %p> Fetching mixed assets: books: %@, audiobooks: %@", buf, 0x20u);
    }

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "catalogService"));
    v10 = v34[5];
    v11 = v28[5];
    v39[0] = BFMCatalogRequestRelationshipAudiobookSeries;
    v39[1] = BFMCatalogRequestRelationshipBookSeries;
    v39[2] = BFMCatalogRequestRelationshipGenres;
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v39, 3));
    v13 = *(_QWORD *)(a1 + 64);
    v14 = objc_alloc((Class)BFMRequestMetadata);
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%s"), "BKSeriesManagerUpdater.m"));
    v16 = objc_msgSend(v14, "initWithFileID:line:", v15, 463);
    v20[1] = 3221225472;
    v20[2] = sub_8C5C4;
    v20[3] = &unk_28FA30;
    v20[4] = *(_QWORD *)(a1 + 48);
    v20[5] = &v33;
    v20[6] = &v27;
    v20[0] = _NSConcreteStackBlock;
    objc_msgSend(v9, "fetchMixedAssetsWithBookIds:audiobookIds:relationships:views:additionalParameters:batchSize:metadata:completionHandler:", v10, v11, v12, 0, &off_2AF9B0, v13, v16, v20);

  }
  else
  {
    v17 = BCSeriesManagerUpdaterLog();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
    {
      v19 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 134217984;
      v41 = v19;
      _os_log_impl(&dword_0, v18, OS_LOG_TYPE_INFO, "<BKSeriesManagerUpdater: %p> All series have been checked recently. We are done.", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 48), "finish");
  }
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&v33, 8);
}

void sub_8C528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a34, 8);
  _Unwind_Resume(a1);
}

void sub_8C55C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_filteredAdamIDs:withIntervalInDays:", *(_QWORD *)(a1 + 40), 14.0));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_filteredAdamIDs:withIntervalInDays:", *(_QWORD *)(a1 + 48), *(double *)(a1 + 72)));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_8C5C4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD block[4];
  id v18;
  uint64_t v19;
  id v20;
  uint8_t buf[4];
  uint64_t v22;
  __int16 v23;
  id v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;

  v5 = a2;
  v6 = a3;
  v7 = BCSeriesManagerUpdaterLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = objc_msgSend(v5, "count");
    v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    *(_DWORD *)buf = 134218754;
    v22 = v9;
    v23 = 2048;
    v24 = v10;
    v25 = 2112;
    v26 = v11;
    v27 = 2112;
    v28 = v12;
    _os_log_impl(&dword_0, v8, OS_LOG_TYPE_INFO, "<BKSeriesManagerUpdater: %p> Received %lu resources for mixed assets: books: %@, audiobooks: %@", buf, 0x2Au);
  }

  v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_8C748;
  block[3] = &unk_28C5F0;
  v14 = *(_QWORD *)(a1 + 32);
  v18 = v5;
  v19 = v14;
  v20 = v6;
  v15 = v6;
  v16 = v5;
  dispatch_async(v13, block);

}

void sub_8C748(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  BOOL v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  uint64_t v15;
  _QWORD v16[7];
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t);
  id v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  _QWORD v29[2];
  _QWORD v30[2];
  uint8_t buf[4];
  uint64_t v32;
  __int16 v33;
  void *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;

  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    *(_QWORD *)&v35 = 0;
    *((_QWORD *)&v35 + 1) = &v35;
    v36 = 0x3032000000;
    v37 = sub_8A70C;
    v38 = sub_8A71C;
    v39 = objc_alloc_init((Class)NSMutableSet);
    v23 = 0;
    v24 = &v23;
    v25 = 0x3032000000;
    v26 = sub_8A70C;
    v27 = sub_8A71C;
    v28 = objc_alloc_init((Class)NSMutableSet);
    v17 = 0;
    v18 = &v17;
    v19 = 0x3032000000;
    v20 = sub_8A70C;
    v21 = sub_8A71C;
    v22 = objc_alloc_init((Class)NSMutableSet);
    v2 = *(void **)(a1 + 32);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_8CAD4;
    v16[3] = &unk_28FAF8;
    v16[4] = &v35;
    v16[5] = &v23;
    v16[6] = &v17;
    objc_msgSend(v2, "enumerateKeysAndObjectsUsingBlock:", v16);
    if (objc_msgSend((id)v18[5], "count"))
    {
      v3 = BCSeriesManagerUpdaterLog();
      v4 = objc_claimAutoreleasedReturnValue(v3);
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        v5 = *(_QWORD *)(a1 + 40);
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v18[5], "allObjects"));
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "componentsJoinedByString:", CFSTR(", ")));
        *(_DWORD *)buf = 134218242;
        v32 = v5;
        v33 = 2112;
        v34 = v7;
        _os_log_impl(&dword_0, v4, OS_LOG_TYPE_DEFAULT, "<BKSeriesManagerUpdater: %p> AdamIDs of assets still missing series: [%@].", buf, 0x16u);

      }
    }
    v29[0] = BKSeriesManagerSeriesTypeBookSeries[0];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 40), "allObjects"));
    v30[0] = v8;
    v29[1] = BKSeriesManagerSeriesTypeAudiobookSeries;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v24[5], "allObjects"));
    v30[1] = v9;
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v30, v29, 2));

    objc_msgSend(*(id *)(a1 + 40), "updateSeriesForSeriesAdamIDsWithTypes:forceCheck:", v10, 1);
    _Block_object_dispose(&v17, 8);

    _Block_object_dispose(&v23, 8);
    _Block_object_dispose(&v35, 8);

  }
  else
  {
    v11 = *(_QWORD *)(a1 + 48) == 0;
    v12 = BCSeriesManagerUpdaterLog();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    v14 = v13;
    if (v11)
    {
      if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
      {
        v15 = *(_QWORD *)(a1 + 40);
        LODWORD(v35) = 134217984;
        *(_QWORD *)((char *)&v35 + 4) = v15;
        _os_log_impl(&dword_0, v14, OS_LOG_TYPE_INFO, "<BKSeriesManagerUpdater: %p> No assets received", (uint8_t *)&v35, 0xCu);
      }
    }
    else if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      sub_1B5E0C();
    }

    objc_msgSend(*(id *)(a1 + 40), "finish");
  }
}

void sub_8CA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_8CAD4(_QWORD *a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  v11 = a2;
  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "seriesResource"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "id"));

  if (v7)
  {
    if (objc_msgSend(v5, "isBook"))
      v8 = a1[4];
    else
      v8 = a1[5];
    v9 = *(void **)(*(_QWORD *)(v8 + 8) + 40);
    v10 = v7;
  }
  else
  {
    v9 = *(void **)(*(_QWORD *)(a1[6] + 8) + 40);
    v10 = v11;
  }
  objc_msgSend(v9, "addObject:", v10);

}

void sub_8CD84(uint64_t a1)
{
  void *v2;
  id v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _QWORD v8[5];
  _QWORD v9[5];
  id v10;
  uint8_t buf[4];
  uint64_t v12;
  __int16 v13;
  void *v14;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", BKSeriesManagerAssetTypeUnknown[0]));
  if (objc_msgSend(v2, "count"))
  {
    kdebug_trace(725352856, 0, 0, 0, 0);
    v3 = BCSeriesManagerUpdaterLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 134218242;
      v12 = v5;
      v13 = 2112;
      v14 = v2;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "<BKSeriesManagerUpdater: %p> Fetching mixed cloud assets: adamIDs: %@", buf, 0x16u);
    }

    v6 = *(void **)(a1 + 40);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_8CF2C;
    v9[3] = &unk_28FBE8;
    v9[4] = v6;
    v10 = v2;
    objc_msgSend(v6, "_seriesInfoRequestBatchSizeWithCompletion:", v9);

  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "managedObjectContext"));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_8D298;
    v8[3] = &unk_28B960;
    v8[4] = *(_QWORD *)(a1 + 40);
    objc_msgSend(v7, "performBlockAndWait:", v8);

    objc_msgSend(*(id *)(a1 + 40), "finish");
  }

}

void sub_8CF2C(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  _QWORD v11[5];
  id v12;
  _QWORD v13[3];

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "catalogService"));
  v5 = *(_QWORD *)(a1 + 40);
  v13[0] = BFMCatalogRequestRelationshipAudiobookSeries;
  v13[1] = BFMCatalogRequestRelationshipBookSeries;
  v13[2] = BFMCatalogRequestRelationshipGenres;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v13, 3));
  v7 = objc_alloc((Class)BFMRequestMetadata);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%s"), "BKSeriesManagerUpdater.m"));
  v9 = objc_msgSend(v7, "initWithFileID:line:", v8, 556);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_8D0C0;
  v11[3] = &unk_28FBC0;
  v10 = *(void **)(a1 + 40);
  v11[4] = *(_QWORD *)(a1 + 32);
  v12 = v10;
  objc_msgSend(v4, "fetchResourcesWithAdamIDs:relationships:views:additionalParameters:batchSize:metadata:completionHandler:", v5, v6, 0, &off_2AF9D8, a2, v9, v11);

}

void sub_8D0C0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint8_t buf[4];
  uint64_t v21;
  __int16 v22;
  id v23;

  v5 = a2;
  v6 = a3;
  v7 = BCSeriesManagerUpdaterLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    v9 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134218240;
    v21 = v9;
    v22 = 2048;
    v23 = objc_msgSend(v5, "count");
    _os_log_impl(&dword_0, v8, OS_LOG_TYPE_INFO, "<BKSeriesManagerUpdater: %p> Received %lu mixed assets", buf, 0x16u);
  }

  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "queue"));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_8D228;
  v15[3] = &unk_28FB98;
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(void **)(a1 + 40);
  v16 = v5;
  v17 = v11;
  v18 = v12;
  v19 = v6;
  v13 = v6;
  v14 = v5;
  dispatch_async(v10, v15);

}

id sub_8D228(uint64_t a1)
{
  id v3;
  NSObject *v4;

  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(*(id *)(a1 + 40), "_updateAssetsFromCloudSyncWithAdamIDs:withAssetResources:", *(_QWORD *)(a1 + 48));
    return objc_msgSend(*(id *)(a1 + 40), "finish");
  }
  else
  {
    v3 = BCSeriesManagerUpdaterLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1B5F04();

    return objc_msgSend(*(id *)(a1 + 40), "finish");
  }
}

void sub_8D298(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  id v18;
  _BYTE v19[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem fetchRequest](BKSeriesItem, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllNonSeriesBookItems](BKSeriesItem, "predicateForAllNonSeriesBookItems"));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
  v18 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v18));
  v6 = v18;

  if (objc_msgSend(v5, "count"))
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v7 = v5;
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v15;
      do
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v15 != v10)
            objc_enumerationMutation(v7);
          v12 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)v11);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext", (_QWORD)v14));
          objc_msgSend(v13, "deleteObject:", v12);

          v11 = (char *)v11 + 1;
        }
        while (v9 != v11);
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v19, 16);
      }
      while (v9);
    }

  }
}

void sub_8D4E8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  void *j;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  NSObject *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  _QWORD v48[4];
  id v49;
  id v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  id v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  id v61;
  uint8_t buf[4];
  uint64_t v63;
  __int16 v64;
  void *v65;
  _BYTE v66[128];
  _BYTE v67[128];
  _QWORD v68[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem fetchRequest](BKSeriesItem, "fetchRequest"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllNonSeriesBookItems](BKSeriesItem, "predicateForAllNonSeriesBookItems"));
  v68[0] = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllItemsAndContainerWithAdamIdInList:](BKSeriesItem, "predicateForAllItemsAndContainerWithAdamIdInList:", *(_QWORD *)(a1 + 32)));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate notPredicateWithSubpredicate:](NSCompoundPredicate, "notPredicateWithSubpredicate:", v4));
  v68[1] = v5;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v68, 2));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v6));
  objc_msgSend(v2, "setPredicate:", v7);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "managedObjectContext"));
  v61 = 0;
  v46 = v2;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "executeFetchRequest:error:", v2, &v61));
  v10 = v61;

  if (objc_msgSend(v9, "count"))
  {
    v59 = 0u;
    v60 = 0u;
    v57 = 0u;
    v58 = 0u;
    v11 = v9;
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v57, v67, 16);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)v58;
      do
      {
        for (i = 0; i != v13; i = (char *)i + 1)
        {
          if (*(_QWORD *)v58 != v14)
            objc_enumerationMutation(v11);
          v16 = *(_QWORD *)(*((_QWORD *)&v57 + 1) + 8 * (_QWORD)i);
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "managedObjectContext"));
          objc_msgSend(v17, "deleteObject:", v16);

        }
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v57, v67, 16);
      }
      while (v13);
    }

  }
  v45 = v9;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem fetchRequest](BKSeriesItem, "fetchRequest"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(+[BKSeriesItem predicateForAllItemsAndContainerWithAdamIdInList:](BKSeriesItem, "predicateForAllItemsAndContainerWithAdamIdInList:", *(_QWORD *)(a1 + 32)));
  objc_msgSend(v18, "setPredicate:", v19);

  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "managedObjectContext"));
  v56 = v10;
  v44 = v18;
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "executeFetchRequest:error:", v18, &v56));
  v43 = v56;

  v22 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v21, "count"));
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  v23 = v21;
  v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v52, v66, 16);
  if (v24)
  {
    v25 = v24;
    v26 = *(_QWORD *)v53;
    v47 = v23;
    do
    {
      for (j = 0; j != v25; j = (char *)j + 1)
      {
        if (*(_QWORD *)v53 != v26)
          objc_enumerationMutation(v23);
        v28 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * (_QWORD)j);
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "adamId", v43));
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "objectForKeyedSubscript:", v29));

        if (!v30)
        {
          v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "adamId"));
          objc_msgSend(v22, "setObject:forKeyedSubscript:", v28, v35);
          goto LABEL_25;
        }
        v31 = BCSeriesManagerUpdaterLog();
        v32 = objc_claimAutoreleasedReturnValue(v31);
        if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        {
          v39 = *(_QWORD *)(a1 + 40);
          v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "adamId"));
          *(_DWORD *)buf = 134218242;
          v63 = v39;
          v64 = 2112;
          v65 = v40;
          _os_log_error_impl(&dword_0, v32, OS_LOG_TYPE_ERROR, "<BKSeriesManagerUpdater: %p> _updateAssetsFromCloudSyncWithAdamIDs: Found duplicate series item of adam ID: %@", buf, 0x16u);

          v23 = v47;
        }

        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "position"));
        if (v33)
        {

        }
        else
        {
          v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "position"));

          if (v37)
          {
            v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "adamId"));
            objc_msgSend(v22, "setObject:forKeyedSubscript:", v28, v38);

            v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "managedObjectContext"));
            v35 = v34;
            v36 = v30;
            goto LABEL_24;
          }
        }
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "managedObjectContext"));
        v35 = v34;
        v36 = v28;
LABEL_24:
        objc_msgSend(v34, "deleteObject:", v36);
LABEL_25:

      }
      v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v52, v66, 16);
    }
    while (v25);
  }

  v41 = *(void **)(a1 + 32);
  v48[0] = _NSConcreteStackBlock;
  v48[1] = 3221225472;
  v48[2] = sub_8DA10;
  v48[3] = &unk_28FC10;
  v49 = *(id *)(a1 + 48);
  v50 = v22;
  v51 = *(_QWORD *)(a1 + 40);
  v42 = v22;
  objc_msgSend(v41, "enumerateObjectsUsingBlock:", v48);

}

void sub_8DA10(id *a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v13 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "objectForKeyedSubscript:"));
  v4 = BUProtocolCast(&OBJC_PROTOCOL___BFMAsset, v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);

  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "objectForKeyedSubscript:", v13));
    if (!v6)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "seriesResource"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "id"));

      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[6], "managedObjectContext"));
      if (v8)
        v10 = objc_claimAutoreleasedReturnValue(+[BKSeriesItem insertSeriesItemWithAdamId:seriesAdamId:intoManagedObjectContext:](BKSeriesItem, "insertSeriesItemWithAdamId:seriesAdamId:intoManagedObjectContext:", v13, v8, v9));
      else
        v10 = objc_claimAutoreleasedReturnValue(+[BKSeriesItem insertStoreItemWithAdamId:intoManagedObjectContext:](BKSeriesItem, "insertStoreItemWithAdamId:intoManagedObjectContext:", v13, v9));
      v6 = (void *)v10;

    }
    v11 = (void *)objc_opt_class(a1[6]);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "seriesResource"));
    objc_msgSend(v11, "_populateItem:position:withAssetResource:seriesResource:", v6, 0x7FFFFFFFFFFFFFFFLL, v5, v12);

  }
}

void sub_8DBFC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;

  v6 = a4;
  if (v6)
  {
    v7 = BCSeriesManagerUpdaterLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B5F78();

    v9.n128_u64[0] = 21.0;
    (*(void (**)(_QWORD, __n128))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), v9);
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 32);
    objc_msgSend(a2, "doubleValue");
    (*(void (**)(uint64_t, __n128))(v10 + 16))(v10, v11);
  }

}

void sub_8E794(id a1)
{
  BCAudioMuxingCoordinator *v1;
  void *v2;

  v1 = objc_alloc_init(BCAudioMuxingCoordinator);
  v2 = (void *)qword_30DB68;
  qword_30DB68 = (uint64_t)v1;

}

id sub_8E858(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "addObject:", *(_QWORD *)(a1 + 40));
}

id sub_8E8F0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObject:", *(_QWORD *)(a1 + 40));
}

void sub_8EA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_8EAC8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_8EAD8(uint64_t a1)
{

}

void sub_8EAE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "allObjects"));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_8F16C(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardSetViewController"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "navigationSkrimView"));
  objc_msgSend(v1, "setAlpha:", 0.2);

}

void sub_8F634(uint64_t a1)
{
  void *v1;
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardSetViewController"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "navigationSkrimView"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

id sub_9040C(uint64_t a1)
{
  void *v2;
  __int128 v4;

  objc_msgSend(*(id *)(a1 + 40), "endingRect");
  objc_msgSend(*(id *)(a1 + 32), "setFrame:");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "snapshotContainerView", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96)));
  objc_msgSend(v2, "setTransform:", &v4);

  objc_msgSend(*(id *)(a1 + 40), "gripperEndingAlpha");
  return objc_msgSend(*(id *)(a1 + 48), "setAlpha:");
}

id sub_90480(id *a1, uint64_t a2)
{
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "viewToHide"));
  objc_msgSend(v4, "setAlpha:", 1.0);

  objc_msgSend(a1[5], "insertSubview:belowSubview:", a1[6], a1[7]);
  objc_msgSend(a1[7], "removeFromSuperview");
  v5 = objc_msgSend(a1[8], "transitionWasCancelled");
  v6 = a1[4];
  if (v5)
    objc_msgSend(v6, "startingRect");
  else
    objc_msgSend(v6, "endingRect");
  objc_msgSend(a1[6], "setFrame:");
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[9], "auxiliaryNavigationBarView"));
  objc_msgSend(v7, "setHidden:", 0);

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "cardSetViewController"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "delegate"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "cardSetViewController"));
  objc_msgSend(v9, "cardSetViewControllerNavigiationTransitionCompleted:", v10);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "snapshotContainerView"));
  objc_msgSend(v11, "removeFromSuperview");

  return objc_msgSend(a1[8], "completeTransition:", a2 == 0);
}

uint64_t BKStringFromAssetContentType(unsigned int a1)
{
  if (a1 > 0x13)
    return 0;
  else
    return (uint64_t)*(&off_28FDD8 + (int)a1);
}

uint64_t BKStringFromAssetState(unsigned int a1)
{
  if (a1 > 6)
    return 0;
  else
    return (uint64_t)*(&off_28FE78 + (int)a1);
}

void sub_93D1C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  v6 = a4;
  v7 = v6;
  if (a3 == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(v9, "appendFormat:", CFSTR("\n\t%@ :  NSNotFound"), v6);
  }
  else if (a3 >= 1)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", a3));
    objc_msgSend(v9, "appendFormat:", CFSTR("\n\t%@ :  %@"), v7, v8);

  }
}

void sub_93E70(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "setAnimationCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "animationCount") - 1);
  if (!objc_msgSend(*(id *)(a1 + 32), "animationCount"))
  {
    v2 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "animationDidEnd"));
    if (v2)
    {
      v3 = v2;
      v2[2]();
      v2 = v3;
    }

  }
}

int64_t sub_95048(id a1, id a2, id a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  unsigned int v10;
  int64_t v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v4 = a2;
  v5 = a3;
  v6 = v4;
  v7 = v5;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "annotation"));
  if ((objc_msgSend(v8, "annotationIsUnderline") & 1) == 0)
  {

LABEL_5:
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "annotation"));
    if (objc_msgSend(v12, "annotationIsUnderline"))
    {

    }
    else
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "annotation"));
      v14 = objc_msgSend(v13, "annotationIsUnderline");

      if ((v14 & 1) != 0)
      {
        v11 = -1;
        goto LABEL_10;
      }
    }
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "annotation"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "annotationModificationDate"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "annotation"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "annotationModificationDate"));
    v11 = (int64_t)objc_msgSend(v16, "compare:", v18);

    goto LABEL_10;
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "annotation"));
  v10 = objc_msgSend(v9, "annotationIsUnderline");

  if (v10)
    goto LABEL_5;
  v11 = 1;
LABEL_10:

  return v11;
}

void sub_97824(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_97838(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_97864(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x20u);
}

const __CFString *CFStringCopyLongestWordInString(const __CFString *a1)
{
  const __CFLocale *v2;
  __CFStringTokenizer *v3;
  CFIndex v4;
  const __CFString *v5;
  unsigned int v6;
  const __CFString *v7;
  CFIndex Length;
  CFIndex v9;
  CFRange v12;
  CFRange CurrentTokenRange;

  v2 = CFLocaleCopyCurrent();
  v12.length = CFStringGetLength(a1);
  v12.location = 0;
  v3 = CFStringTokenizerCreate(kCFAllocatorDefault, a1, v12, 4uLL, v2);
  if (CFStringTokenizerAdvanceToNextToken(v3))
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    do
    {
      CurrentTokenRange = CFStringTokenizerGetCurrentTokenRange(v3);
      v7 = CFStringCreateWithSubstring(kCFAllocatorDefault, a1, CurrentTokenRange);
      Length = CFStringGetLength(v7);
      if (Length > v4)
      {
        v9 = Length;
        if (v5)
          CFRelease(v5);
        CFRetain(v7);
        v5 = v7;
        v4 = v9;
      }
      CFRelease(v7);
      if (!CFStringTokenizerAdvanceToNextToken(v3))
        break;
    }
    while (v6++ < 9);
  }
  else
  {
    v5 = 0;
  }
  CFRelease(v3);
  CFRelease(v2);
  return v5;
}

void sub_9989C(id a1)
{
  BCCFI *v1;
  void *v2;

  v1 = objc_alloc_init(BCCFI);
  v2 = (void *)qword_30DB78;
  qword_30DB78 = (uint64_t)v1;

  objc_msgSend((id)qword_30DB78, "setString:", CFSTR("epubcfi_unknownlocation"));
}

void sub_99928(id a1)
{
  BCCFI *v1;
  void *v2;

  v1 = objc_alloc_init(BCCFI);
  v2 = (void *)qword_30DB88;
  qword_30DB88 = (uint64_t)v1;

  objc_msgSend((id)qword_30DB88, "setString:", CFSTR("epubcfi_upselllocation"));
}

void sub_999A8(id a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v3 = 0;
  v1 = objc_claimAutoreleasedReturnValue(+[BCCFI cfiWithString:error:](BCCFI, "cfiWithString:error:", CFSTR("epubcfi(/6/2!/2/1)"), &v3));
  v2 = (void *)qword_30DB98;
  qword_30DB98 = v1;

}

void sub_99A30(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("epubcfi(/6/%ld!/%ld/1)"), 0x7FFFFFFFFFFFFFFELL, 0x7FFFFFFFFFFFFFFELL));
  v4 = 0;
  v2 = objc_claimAutoreleasedReturnValue(+[BCCFI cfiWithString:error:](BCCFI, "cfiWithString:error:", v1, &v4));
  v3 = (void *)qword_30DBA8;
  qword_30DBA8 = v2;

}

void freeCFIStep(uint64_t a1)
{
  void *v2;

  switch(*(_DWORD *)a1)
  {
    case 2:
      CFRelease(*(CFTypeRef *)(a1 + 8));
      v2 = *(void **)(a1 + 16);
      goto LABEL_4;
    case 3:
      CFRelease(*(CFTypeRef *)(a1 + 8));

      v2 = *(void **)(a1 + 24);
LABEL_4:

      break;
    case 6:
      CFRelease(*(CFTypeRef *)(a1 + 8));
      break;
    case 7:
      CFRelease(*(CFTypeRef *)(a1 + 8));
      CFRelease(*(CFTypeRef *)(a1 + 16));
      break;
    default:
      return;
  }
}

uint64_t compareCFIStep(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  void *v17;
  uint64_t v18;
  void *v19;

  v2 = *(unsigned int *)a1;
  v3 = *(unsigned int *)a2;
  if ((_DWORD)v2 == (_DWORD)v3)
  {
    switch((int)v2)
    {
      case 1:
      case 5:
        v6 = a1[1];
        v7 = a2[1];
        if (v6 < v7)
          goto LABEL_29;
        if (v6 <= v7)
          goto LABEL_19;
        goto LABEL_28;
      case 2:
        v9 = (const void *)a1[1];
        v10 = (const void *)a2[1];
        if (v9 != v10 && !CFEqual(v9, v10))
          goto LABEL_28;
        v11 = (const void *)a1[2];
        v12 = (const void *)a2[2];
        goto LABEL_17;
      case 3:
        v13 = (const void *)a1[1];
        v14 = (const void *)a2[1];
        if (v13 != v14 && !CFEqual(v13, v14))
          goto LABEL_28;
        v15 = (const void *)a1[2];
        v16 = (const void *)a2[2];
        if (v15 != v16 && !CFEqual(v15, v16))
          goto LABEL_28;
        v11 = (const void *)a1[3];
        v12 = (const void *)a2[3];
LABEL_17:
        if (v11 == v12 || CFEqual(v11, v12))
          goto LABEL_19;
        goto LABEL_28;
      case 6:
        v17 = (void *)a1[1];
        if (!v17)
          goto LABEL_29;
        v18 = a2[1];
        if (!v18)
          goto LABEL_28;
        goto LABEL_27;
      case 7:
        v19 = (void *)a1[2];
        if (v19)
        {
          if (a2[2])
          {
            result = (uint64_t)objc_msgSend(v19, "compare:");
            if (!result)
            {
              v17 = (void *)a1[1];
              v18 = a2[1];
LABEL_27:
              result = (uint64_t)objc_msgSend(v17, "compare:", v18);
            }
          }
          else
          {
LABEL_28:
            result = 1;
          }
        }
        else
        {
LABEL_29:
          result = -1;
        }
        break;
      default:
LABEL_19:
        result = 0;
        break;
    }
  }
  else if (dword_26A4CC[v2] < dword_26A4CC[v3])
  {
    return -1;
  }
  else
  {
    return 1;
  }
  return result;
}

uint64_t sub_9A5C8(void *a1, void *a2, int a3, int a4, char **a5, unint64_t *a6)
{
  id v9;
  id v10;
  char *v11;
  char *v12;
  id v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  const char *v17;
  const char *v18;
  _QWORD *v19;
  _QWORD *v20;
  int v21;
  char *v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  id v34;
  id v35;

  v9 = a1;
  v10 = a2;
  if (a3)
    v11 = (char *)objc_msgSend(v9, "numberOfStartSteps");
  else
    v11 = (char *)objc_msgSend(v9, "numberOfEndSteps");
  v12 = v11;
  v34 = v9;
  v35 = v10;
  if (a4)
    v13 = objc_msgSend(v10, "numberOfStartSteps");
  else
    v13 = objc_msgSend(v10, "numberOfEndSteps");
  v14 = (unint64_t)v13;
  v15 = 0;
  v16 = 0;
  if (a3)
    v17 = "startStepAtIndex:";
  else
    v17 = "endStepAtIndex:";
  if (a4)
    v18 = "startStepAtIndex:";
  else
    v18 = "endStepAtIndex:";
  while (v15 < v12 && v16 < v14)
  {
    v19 = objc_msgSend(v34, v17, v15);
    v20 = objc_msgSend(v35, v18, v16);
    v21 = *(_DWORD *)v19;
    if ((*(_DWORD *)v19 & 0xFFFFFFFE) == 2)
    {
      v22 = v12;
      if (v15 != v12 - 1)
      {
        v22 = v15 + 1;
        while (1)
        {
          v19 = objc_msgSend(v34, v17, v22);
          v21 = *(_DWORD *)v19;
          if ((*(_DWORD *)v19 & 0xFFFFFFFE) != 2)
            break;
          if (v12 == ++v22)
          {
            v22 = v12;
            break;
          }
        }
      }
    }
    else
    {
      v22 = v15;
    }
    v23 = *(_DWORD *)v20;
    if ((*(_DWORD *)v20 & 0xFFFFFFFE) == 2)
    {
      v24 = v16 + 1;
      if (v16 + 1 >= v14)
      {
LABEL_26:
        if (*(_DWORD *)v19 == 6)
          goto LABEL_36;
        if (*(_DWORD *)v19 != 7)
          goto LABEL_39;
        goto LABEL_34;
      }
      while (1)
      {
        v20 = objc_msgSend(v35, v18, v24);
        v23 = *(_DWORD *)v20;
        if ((*(_DWORD *)v20 & 0xFFFFFFFE) != 2)
          break;
        if (++v24 >= v14)
          goto LABEL_26;
      }
      v21 = *(_DWORD *)v19;
    }
    else
    {
      v24 = v16;
    }
    if ((v23 != 6) == (v21 == 6))
    {
      if (v21 != 6)
      {
        --v22;
        v19 = &unk_3097F8;
        goto LABEL_39;
      }
LABEL_36:
      --v24;
      v20 = &unk_3097F8;
      goto LABEL_39;
    }
    if ((v23 != 7) == (v21 == 7))
    {
      if (v21 != 7)
      {
        --v22;
        v19 = &unk_309818;
        goto LABEL_39;
      }
LABEL_34:
      --v24;
      v20 = &unk_309818;
    }
LABEL_39:
    v25 = compareCFIStep(v19, v20);
    v15 = v22 + 1;
    v16 = v24 + 1;
    if (v25)
    {
      v26 = v25;
      v27 = a6;
      goto LABEL_57;
    }
  }
  if (v15 <= v12)
    v22 = v12;
  else
    v22 = v15;
  while (1)
  {
    v28 = (unint64_t)v15;
    if (v22 == v15)
      break;
    v29 = objc_msgSend(v34, v17, v15++);
    if ((*v29 & 0xFFFFFFFE) != 2)
    {
      v22 = (char *)v28;
      v26 = 1;
      goto LABEL_48;
    }
  }
  v26 = 0;
LABEL_48:
  v27 = a6;
  if (v28 >= (unint64_t)v12)
  {
    if (v16 <= v14)
      v24 = v14;
    else
      v24 = v16;
    while (v24 != v16)
    {
      v30 = objc_msgSend(v35, v18, v16++);
      if ((*v30 & 0xFFFFFFFE) != 2)
      {
        v24 = v16 - 1;
        v26 = -1;
        goto LABEL_57;
      }
    }
    v26 = 0;
  }
  else
  {
    v24 = v16;
  }
LABEL_57:
  if (a5)
    *a5 = v22;
  if (v27)
    *v27 = v24;

  return v26;
}

void sub_9BF90(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  void *v14;

  if (a1)
  {
    v10 = a2 + 8;
    v11 = a3;
    v12 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:arguments:", v11, &a9);

    if (v10 == -1)
      v13 = 0;
    else
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v10));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v12, NSLocalizedDescriptionKey, v13, CFSTR("BKEpubCFIErrorCharacterOffset"), 0));
    *a1 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BKEpubCFIErrorDomain"), 1, v14));

    if (v10 != -1)
  }
}

void sub_9C0A8(void *a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  char *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v5 = a1;
  v6 = (char *)objc_msgSend(v5, "scanLocation") + a2;
  v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "string"));

  v7 = objc_msgSend(v13, "characterAtIndex:", v6);
  sub_9BF90(a3, (uint64_t)v6, CFSTR("Unexpected character '%C' found at position %lu"), v8, v9, v10, v11, v12, v7);

}

void sub_9C1D0(void *a1, unint64_t a2, unint64_t a3)
{
  id v5;
  id v6;

  v5 = a1;
  if (a2 < a3)
  {
    v6 = v5;
    do
    {
      sub_9CDDC(v6, a2);
      v5 = v6;
      a2 += 32;
    }
    while (a2 < a3);
  }

}

void sub_9CDDC(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  const __CFString *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id *v9;
  const __CFString *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *i;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];

  v3 = a1;
  v4 = v3;
  switch(*(_DWORD *)a2)
  {
    case 1:
      objc_msgSend(v3, "appendFormat:", CFSTR("/%lu"), *(_QWORD *)(a2 + 8), v21);
      break;
    case 2:
      if (*(_QWORD *)(a2 + 8))
        v10 = *(const __CFString **)(a2 + 8);
      else
        v10 = &stru_296430;
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI stringByEscapingString:](BCCFI, "stringByEscapingString:", v10));
      v9 = (id *)(a2 + 16);
      goto LABEL_15;
    case 3:
      if (*(_QWORD *)(a2 + 8))
        v5 = *(const __CFString **)(a2 + 8);
      else
        v5 = &stru_296430;
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI stringByEscapingString:](BCCFI, "stringByEscapingString:", v5));
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI stringByEscapingString:](BCCFI, "stringByEscapingString:"));
        v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "stringByAppendingFormat:", CFSTR(",%@"), v7));

        v6 = (void *)v8;
      }
      v9 = (id *)(a2 + 24);
LABEL_15:
      v11 = *v9;
      v22 = v6;
      objc_msgSend(v4, "appendFormat:", CFSTR("[%@"), v6);
      v25 = 0u;
      v26 = 0u;
      v23 = 0u;
      v24 = 0u;
      v12 = v11;
      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
      if (v13)
      {
        v14 = v13;
        v15 = *(_QWORD *)v24;
        do
        {
          for (i = 0; i != v14; i = (char *)i + 1)
          {
            if (*(_QWORD *)v24 != v15)
              objc_enumerationMutation(v12);
            v17 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * (_QWORD)i);
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKey:", v17));
            v19 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI stringByEscapingString:](BCCFI, "stringByEscapingString:", v17));
            v20 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFI stringByEscapingString:](BCCFI, "stringByEscapingString:", v18));
            objc_msgSend(v4, "appendFormat:", CFSTR(";%@=%@"), v19, v20);

          }
          v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
        }
        while (v14);
      }

      objc_msgSend(v4, "appendString:", CFSTR("]"));
      break;
    case 4:
      objc_msgSend(v3, "appendString:", CFSTR("!"));
      break;
    case 5:
      objc_msgSend(v3, "appendFormat:", CFSTR(":%lu"), *(_QWORD *)(a2 + 8), v21);
      break;
    case 6:
      objc_msgSend(v3, "appendFormat:", CFSTR("~%@"), *(_QWORD *)(a2 + 8), v21);
      break;
    case 7:
      objc_msgSend(v3, "appendFormat:", CFSTR("@%@:%@"), *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
      break;
    default:
      break;
  }

}

void sub_9E970(uint64_t a1)
{
  void *v2;
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "animationStarted:", CFSTR("IMTransitionAutomaticTransitions"));
  objc_msgSend(*(id *)(a1 + 32), "performTransition");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "animationsBlock"));

  if (v2)
  {
    v3 = (void (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "animationsBlock"));
    v3[2]();

  }
}

id sub_9E9F0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "started");
  if ((_DWORD)result)
    return _objc_msgSend(*(id *)(a1 + 32), "animationEnded:finished:", CFSTR("IMTransitionAutomaticTransitions"), 1);
  return result;
}

void sub_9FD58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_9FD84(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_cleanupWithCompletion:", v3);

}

void sub_9FEB8(uint64_t a1)
{
  char *v2;
  void *v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  void *v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void (**v18)(void);
  void (**v19)(void);

  v2 = (char *)objc_msgSend(*(id *)(a1 + 32), "maxInstanceCount");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v3, "timeIntervalSinceReferenceDate");
  v5 = v4;

  if (v2 > objc_msgSend(*(id *)(a1 + 32), "minInstanceCount"))
  {
    while (1)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lastUsedTime"));
      v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", v2));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v7));

      if (v8)
      {
        objc_msgSend(v8, "doubleValue");
        if (v9 >= v5 || v5 - v9 <= 20.0)
          break;
      }
      --v2;

      if (v2 <= objc_msgSend(*(id *)(a1 + 32), "minInstanceCount"))
        goto LABEL_10;
    }

  }
LABEL_10:
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contexts"));
  v12 = (char *)objc_msgSend(v11, "count");

  if (v12 > v2)
  {
    while (1)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "availableContextIndexes"));
      v14 = objc_msgSend(v13, "lastIndex");

      if (v14 == (id)0x7FFFFFFFFFFFFFFFLL)
        break;
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "availableContextIndexes"));
      objc_msgSend(v15, "removeIndex:", v14);

      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contexts"));
      objc_msgSend(v16, "removeObjectAtIndex:", v14);

      if (--v12 <= v2)
      {
        v12 = v2;
        break;
      }
    }
  }
  if (v12 > objc_msgSend(*(id *)(a1 + 32), "minInstanceCount"))
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "coalescingCleanup"));
    objc_msgSend(v17, "signalWithCompletion:", &stru_28FFB8);

  }
  v18 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v18)
  {
    v19 = v18;
    v18[2]();
    v18 = v19;
  }

}

void sub_A03B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_A03E4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_A03F4(uint64_t a1)
{

}

void sub_A03FC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contexts"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_A044C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "mergeChangesFromContextDidSaveNotification:", *(_QWORD *)(a1 + 40));
}

void sub_A06C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_A06F8(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contexts"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_A0748(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "mergeChangesFromContextDidSaveNotification:", *(_QWORD *)(a1 + 40));
}

void sub_A07EC(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  uint64_t v17;
  id v18;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingBlocks"));
  v3 = objc_msgSend(v2, "count");

  v4 = *(void **)(a1 + 32);
  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pendingBlocks"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", 0));

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingBlocks"));
    objc_msgSend(v7, "removeObjectAtIndex:", 0);

    v8 = *(void **)(a1 + 40);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_A0948;
    v15[3] = &unk_28EDE8;
    v18 = v6;
    v9 = v8;
    v10 = *(_QWORD *)(a1 + 32);
    v16 = v9;
    v17 = v10;
    v11 = v6;
    objc_msgSend(v8, "performBlock:", v15);

  }
  else
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "contexts"));
    v13 = objc_msgSend(v12, "indexOfObjectIdenticalTo:", *(_QWORD *)(a1 + 40));

    objc_msgSend(*(id *)(a1 + 32), "setInUseCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "inUseCount") - 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "availableContextIndexes"));
    objc_msgSend(v14, "addIndex:", v13);

    objc_msgSend(*(id *)(a1 + 32), "_updateUseCountTime");
  }
}

id sub_A0948(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  return _objc_msgSend(*(id *)(a1 + 40), "_makeAvailable:", *(_QWORD *)(a1 + 32));
}

void sub_A0A14(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t (**v8)(void);
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD v23[4];
  id v24;
  uint64_t v25;
  id v26;
  _QWORD v27[4];
  id v28;
  uint64_t v29;
  id v30;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "availableContextIndexes"));
  v3 = objc_msgSend(v2, "firstIndex");

  if (v3 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(*(id *)(a1 + 32), "setInUseCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "inUseCount") + 1);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "availableContextIndexes"));
    objc_msgSend(v16, "removeIndex:", v3);

    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contexts"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectAtIndexedSubscript:", v3));

    v27[0] = _NSConcreteStackBlock;
    v27[1] = 3221225472;
    v27[2] = sub_A0C54;
    v27[3] = &unk_28EDE8;
    v19 = *(id *)(a1 + 40);
    v20 = *(_QWORD *)(a1 + 32);
    v28 = v18;
    v29 = v20;
    v30 = v19;
    v14 = v18;
    objc_msgSend(v14, "performBlock:", v27);

    v15 = v30;
    goto LABEL_5;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contexts"));
  v5 = objc_msgSend(v4, "count");
  v6 = objc_msgSend(*(id *)(a1 + 32), "maxInstanceCount");

  v7 = *(void **)(a1 + 32);
  if (v5 < v6)
  {
    v8 = (uint64_t (**)(void))objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "providerBlock"));
    v9 = v8[2]();
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "contexts"));
    objc_msgSend(v11, "addObject:", v10);

    objc_msgSend(*(id *)(a1 + 32), "setInUseCount:", (char *)objc_msgSend(*(id *)(a1 + 32), "inUseCount") + 1);
    objc_msgSend(*(id *)(a1 + 32), "_updateUseCountTime");
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_A0C84;
    v23[3] = &unk_28EDE8;
    v12 = *(id *)(a1 + 40);
    v13 = *(_QWORD *)(a1 + 32);
    v24 = v10;
    v25 = v13;
    v26 = v12;
    v14 = v10;
    objc_msgSend(v14, "performBlock:", v23);

    v15 = v26;
LABEL_5:

    return;
  }
  v22 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pendingBlocks"));
  v21 = objc_retainBlock(*(id *)(a1 + 40));
  objc_msgSend(v22, "addObject:", v21);

}

id sub_A0C54(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  return _objc_msgSend(*(id *)(a1 + 40), "_makeAvailable:", *(_QWORD *)(a1 + 32));
}

id sub_A0C84(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  return _objc_msgSend(*(id *)(a1 + 40), "_makeAvailable:", *(_QWORD *)(a1 + 32));
}

void sub_A2114(id a1)
{
  BCCoverEffects *v1;
  BCCoverEffects *v2;
  void *v3;
  id v4;

  v1 = [BCCoverEffects alloc];
  v4 = (id)objc_claimAutoreleasedReturnValue(+[BCLayerRenderer sharedInstance](BCLayerRenderer, "sharedInstance"));
  v2 = -[BCCoverEffects initWithRenderer:](v1, "initWithRenderer:", v4);
  v3 = (void *)qword_30DBB8;
  qword_30DBB8 = (uint64_t)v2;

}

void sub_A23E4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_A2400(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  id v8;
  void *v9;
  id v10;

  v10 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "counter"));
    if ((uint64_t)objc_msgSend(v5, "animationCount") >= 1)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "coverView"));
      if (UIAccessibilityIsReduceMotionEnabled())
        v7 = 0.3;
      else
        v7 = 0.15;
      v8 = objc_msgSend(objc_alloc((Class)UIViewPropertyAnimator), "initWithDuration:curve:animations:", 0, 0, v7);
      objc_msgSend(v6, "setImage:animatedWithAnimator:", v10, v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "counter"));
      objc_msgSend(v9, "animate:", v8);

    }
  }

}

id sub_A320C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", 1);
}

id sub_A3218(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_A3224(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

void sub_A3230(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;

  objc_msgSend(*(id *)(a1 + 40), "finalFrameForViewController:", *(_QWORD *)(a1 + 32));
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v10, "setFrame:", v3, v5, v7, v9);

}

id sub_A3EB8(id *a1)
{
  double v2;
  double v3;

  if (objc_msgSend(a1[4], "expanded"))
  {
    objc_msgSend(a1[5], "setAlpha:", 1.0);
    objc_msgSend(a1[6], "setAlpha:", 1.0);
  }
  objc_msgSend(a1[4], "setNeedsStatusBarAppearanceUpdate");
  objc_msgSend(a1[5], "alpha");
  if (fabs(v2) < 2.22044605e-16)
    objc_msgSend(a1[5], "removeFromSuperview");
  objc_msgSend(a1[6], "alpha");
  if (fabs(v3) < 2.22044605e-16)
    objc_msgSend(a1[6], "removeFromSuperview");
  return objc_msgSend(a1[7], "completeTransition:", 1);
}

void sub_A3F50(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  __int128 v14;
  _OWORD v15[3];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardSlideItems"));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v7, "cardToCenter");
        v9 = v8;
        v11 = v10;
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "card"));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "cardStackTransitioningCardView"));
        objc_msgSend(v13, "setCenter:", v9, v11);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v4);
  }

  if (*(_BYTE *)(a1 + 96))
  {
    v14 = *(_OWORD *)(a1 + 64);
    v15[0] = *(_OWORD *)(a1 + 48);
    v15[1] = v14;
    v15[2] = *(_OWORD *)(a1 + 80);
    objc_msgSend(*(id *)(a1 + 40), "setTransform:", v15);
  }
}

id sub_A40B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_A40BC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_A40C8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_A51C4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", 1);
}

id sub_A51D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_A51DC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_A51E8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 40), "coverToCenter");
  return objc_msgSend(*(id *)(a1 + 32), "setCenter:");
}

id sub_A5210(uint64_t a1)
{
  void *v2;
  void *v3;
  _OWORD v5[3];
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(void **)(a1 + 40);
  if (v2)
  {
    objc_msgSend(v2, "coverToTransform");
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
    v6 = 0u;
  }
  v3 = *(void **)(a1 + 32);
  v5[0] = v6;
  v5[1] = v7;
  v5[2] = v8;
  return objc_msgSend(v3, "setTransform:", v5);
}

void sub_A5270(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _OWORD v6[3];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[3];
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cardStackTransitioningCardView"));
  objc_msgSend(*(id *)(a1 + 40), "cardToCenter");
  objc_msgSend(v2, "setCenter:");
  v3 = *(void **)(a1 + 40);
  if (v3)
  {
    objc_msgSend(v3, "cardToTransform");
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
    v11 = 0u;
  }
  v10[0] = v11;
  v10[1] = v12;
  v10[2] = v13;
  objc_msgSend(v2, "setTransform:", v10);
  v4 = *(void **)(a1 + 40);
  if (v4)
  {
    objc_msgSend(v4, "cardSuperviewToTransform");
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
    v7 = 0u;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "superview"));
  v6[0] = v7;
  v6[1] = v8;
  v6[2] = v9;
  objc_msgSend(v5, "setTransform:", v6);

}

id sub_A5340(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setCardStackTransitioningCardContentAlpha:", 0.0);
}

id sub_A534C(uint64_t a1)
{
  void *v1;
  __int128 v2;
  _OWORD v4[3];

  v1 = *(void **)(a1 + 32);
  v2 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v4[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v4[1] = v2;
  v4[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return objc_msgSend(v1, "setTransform:", v4);
}

id sub_A5388(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

CGAffineTransform *sub_A5758@<X0>(CGAffineTransform *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  double Width;
  CGFloat v18;
  double Height;
  CGFloat v20;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v24.origin.x = a6;
  v24.origin.y = a7;
  v24.size.width = a8;
  v24.size.height = a9;
  Width = CGRectGetWidth(v24);
  v25.origin.x = a2;
  v25.origin.y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  v18 = Width / CGRectGetWidth(v25);
  v26.origin.x = a6;
  v26.origin.y = a7;
  v26.size.width = a8;
  v26.size.height = a9;
  Height = CGRectGetHeight(v26);
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  v20 = Height / CGRectGetHeight(v27);
  return CGAffineTransformMakeScale(a1, v18, v20);
}

id sub_A6CC4(id *a1)
{
  double v2;
  double v3;

  if (objc_msgSend(a1[4], "expanded"))
  {
    objc_msgSend(a1[5], "setAlpha:", 1.0);
    objc_msgSend(a1[6], "setAlpha:", 1.0);
  }
  objc_msgSend(a1[4], "setNeedsStatusBarAppearanceUpdate");
  objc_msgSend(a1[5], "alpha");
  if (fabs(v2) < 2.22044605e-16)
    objc_msgSend(a1[5], "removeFromSuperview");
  objc_msgSend(a1[6], "alpha");
  if (fabs(v3) < 2.22044605e-16)
    objc_msgSend(a1[6], "removeFromSuperview");
  return objc_msgSend(a1[7], "completeTransition:", 1);
}

id sub_A6D5C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_A6D68(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_A6D74(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 40), "coverToCenter");
  return objc_msgSend(*(id *)(a1 + 32), "setCenter:");
}

id sub_A6D9C(uint64_t a1)
{
  void *v2;
  void *v3;
  _OWORD v5[3];
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(void **)(a1 + 40);
  if (v2)
  {
    objc_msgSend(v2, "coverToTransform");
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
    v6 = 0u;
  }
  v3 = *(void **)(a1 + 32);
  v5[0] = v6;
  v5[1] = v7;
  v5[2] = v8;
  return objc_msgSend(v3, "setTransform:", v5);
}

id sub_A6DFC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_A6E08(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 40), "cardToCenter");
  return objc_msgSend(*(id *)(a1 + 32), "setCenter:");
}

id sub_A6E30(uint64_t a1)
{
  void *v2;
  void *v3;
  _OWORD v5[3];
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v2 = *(void **)(a1 + 40);
  if (v2)
  {
    objc_msgSend(v2, "cardToTransform");
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
    v6 = 0u;
  }
  v3 = *(void **)(a1 + 32);
  v5[0] = v6;
  v5[1] = v7;
  v5[2] = v8;
  return objc_msgSend(v3, "setTransform:", v5);
}

id sub_A6E90(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_A6E9C(uint64_t a1)
{
  __int128 v1;
  _OWORD v3[3];

  v1 = *(_OWORD *)(a1 + 56);
  v3[0] = *(_OWORD *)(a1 + 40);
  v3[1] = v1;
  v3[2] = *(_OWORD *)(a1 + 72);
  return objc_msgSend(*(id *)(a1 + 32), "setTransform:", v3);
}

id sub_A6ED4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

void sub_A71BC(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v2, "setAlpha:", 1.0);

}

id sub_A7208(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", 1);
}

void sub_A746C(uint64_t a1)
{
  id v2;

  if (*(_BYTE *)(a1 + 48))
    objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v2, "setAlpha:", 0.0);

}

id sub_A74C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "completeTransition:", 1);
}

void sub_A94B4(id a1)
{
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
}

id sub_A9794(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  id v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "buttonActions"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "buttonActions", 0));
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v14;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(_QWORD *)v14 != v7)
            objc_enumerationMutation(v4);
          v9 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(v9, "style") != (char *)&dword_0 + 2)
          {
            v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "identifier"));
            objc_msgSend(v3, "addObject:", v10);

          }
        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      }
      while (v6);
    }

    v11 = objc_msgSend(v3, "copy");
  }
  else
  {
    v11 = &__NSArray0__struct;
  }

  return v11;
}

id sub_AA20C(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "set");
  UIRectFill(*(CGRect *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "drawInRect:blendMode:alpha:", 22, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), 1.0);
  return objc_msgSend(*(id *)(a1 + 40), "drawInRect:blendMode:alpha:", 1, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), 1.0);
}

void sub_AA610(uint64_t a1)
{
  CGContext *CurrentContext;

  CurrentContext = UIGraphicsGetCurrentContext();
  CGContextScaleCTM(CurrentContext, 1.0, -1.0);
  CGContextTranslateCTM(CurrentContext, 0.0, -*(double *)(a1 + 72));
  CGContextSaveGState(CurrentContext);
  CGContextClipToMask(CurrentContext, *(CGRect *)(a1 + 80), (CGImageRef)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "CGImage"));
  CGContextSetFillColorWithColor(CurrentContext, (CGColorRef)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 40)), "CGColor"));
  CGContextFillRect(CurrentContext, *(CGRect *)(a1 + 80));
  CGContextRestoreGState(CurrentContext);
}

id sub_AA7A0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "drawInRect:blendMode:alpha:", 17, *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
}

void sub_AAA38(id a1)
{
  CGContext *CurrentContext;
  UIImage *ImageFromCurrentImageContext;
  uint64_t v3;
  void *v4;
  CGSize v5;
  CGRect v6;

  v5.width = 1.0;
  v5.height = 1.0;
  UIGraphicsBeginImageContext(v5);
  CurrentContext = UIGraphicsGetCurrentContext();
  v6.origin.x = 0.0;
  v6.origin.y = 0.0;
  v6.size.width = 1.0;
  v6.size.height = 1.0;
  CGContextClearRect(CurrentContext, v6);
  ImageFromCurrentImageContext = UIGraphicsGetImageFromCurrentImageContext();
  v3 = objc_claimAutoreleasedReturnValue(ImageFromCurrentImageContext);
  v4 = (void *)qword_30DBC8;
  qword_30DBC8 = v3;

  UIGraphicsEndImageContext();
}

id sub_AAD74(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setPreferredContentSizeCategory:", *(_QWORD *)(a1 + 32));
}

void sub_AB284(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_AB2A8(uint64_t a1, uint64_t a2, void *a3)
{
  id *v4;
  id v5;
  id WeakRetained;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v4 = (id *)(a1 + 40);
  v5 = a3;
  WeakRetained = objc_loadWeakRetained(v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "workQueue"));
  v10 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v5, v7);

  v8 = objc_retainBlock(*(id *)(a1 + 32));
  v9 = v8;
  if (v8)
    (*((void (**)(id))v8 + 2))(v8);

  objc_msgSend(v10, "workComplete");
}

void sub_AB58C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_AB5B4(uint64_t a1, uint64_t a2, void *a3)
{
  id *v4;
  id v5;
  id WeakRetained;
  void *v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  int v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD v24[4];
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _QWORD v31[4];
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint8_t buf[4];
  uint64_t v38;
  __int16 v39;
  uint64_t v40;

  v4 = (id *)(a1 + 80);
  v5 = a3;
  WeakRetained = objc_loadWeakRetained(v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "workQueue"));
  v8 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v5, v7);

  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationNetworkDownloadQueueEnd[0], *(_QWORD *)(a1 + 32));
  v9 = (char *)objc_msgSend(v5, "priority");

  if (v9 == (_BYTE *)&dword_0 + 1)
  {
    v10 = objc_retainBlock(*(id *)(a1 + 72));
    v11 = v10;
    if (v10)
      (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);

    objc_msgSend(v8, "workComplete");
  }
  else
  {
    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationNetworkDownloadStart[0], *(_QWORD *)(a1 + 32));
    kdebug_trace(725353732, 0, 0, 0, 0);
    v12 = *(unsigned __int8 *)(a1 + 88);
    v13 = BCImageCacheLog();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_INFO);
    if (v12)
    {
      if (v15)
      {
        v16 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138412290;
        v38 = v16;
        _os_log_impl(&dword_0, v14, OS_LOG_TYPE_INFO, "BICURLDataStore: Starting internal URL fetch for: %@", buf, 0xCu);
      }

      v18 = *(_QWORD *)(a1 + 40);
      v17 = *(void **)(a1 + 48);
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 3221225472;
      v31[2] = sub_AB940;
      v31[3] = &unk_2902C8;
      v32 = *(id *)(a1 + 56);
      v33 = *(id *)(a1 + 40);
      v34 = *(id *)(a1 + 32);
      v36 = *(id *)(a1 + 72);
      v35 = v8;
      objc_msgSend(v17, "fetchCoverForURL:completion:", v18, v31);

    }
    else
    {
      if (v15)
      {
        v19 = *(_QWORD *)(a1 + 32);
        v20 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138412546;
        v38 = v19;
        v39 = 2112;
        v40 = v20;
        _os_log_impl(&dword_0, v14, OS_LOG_TYPE_INFO, "BICURLDataStore: Starting URL download for: %@ URL: %@", buf, 0x16u);
      }

      v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL URLWithString:](NSURL, "URLWithString:", *(_QWORD *)(a1 + 40)));
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSURLSession sharedSession](NSURLSession, "sharedSession"));
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472;
      v24[2] = sub_ABAB4;
      v24[3] = &unk_290318;
      v25 = *(id *)(a1 + 56);
      v26 = *(id *)(a1 + 32);
      v27 = *(id *)(a1 + 40);
      v28 = v8;
      v29 = *(id *)(a1 + 64);
      v30 = *(id *)(a1 + 72);
      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "dataTaskWithURL:completionHandler:", v21, v24));

      objc_msgSend(v23, "resume");
    }
  }

}

id sub_AB940(uint64_t a1, CGImageRef image)
{
  size_t Width;
  NSObject *v5;
  id v6;
  id v7;
  void (**v8)(_QWORD, _QWORD);
  void *v9;
  uint64_t v11;

  if (image)
  {
    Width = CGImageGetWidth(image);
    objc_msgSend(*(id *)(a1 + 32), "setImageSize:", (double)Width, (double)CGImageGetHeight(image));
    v5 = objc_claimAutoreleasedReturnValue(+[BICImage imageWithCGImage:](BICImage, "imageWithCGImage:", image));
    objc_msgSend(*(id *)(a1 + 32), "setImage:", v5);
  }
  else
  {
    v6 = BCImageCacheLog();
    v5 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1B66C8();
  }

  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationNetworkDownloadEndFromDataSource[0], *(_QWORD *)(a1 + 48));
  +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", *(_QWORD *)(a1 + 32), CFSTR("URLDataStoreLoadImageFromDataSource"));
  v7 = objc_retainBlock(*(id *)(a1 + 64));
  v8 = (void (**)(_QWORD, _QWORD))v7;
  if (v7)
  {
    if (image)
    {
      v11 = *(_QWORD *)(a1 + 32);
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v11, 1));
      ((void (**)(_QWORD, void *))v8)[2](v8, v9);

    }
    else
    {
      (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);
    }
  }

  return objc_msgSend(*(id *)(a1 + 56), "workComplete");
}

void sub_ABAB4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSDictionary *v10;
  CGImageSource *v11;
  CGImage *ImageAtIndex;
  size_t Width;
  void *v14;
  char v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  _QWORD block[4];
  id v20;
  id v21;
  id v22;
  char v23;
  CFStringRef v24;
  void *v25;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (!v7)
  {
    v16 = BCImageCacheLog();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      sub_1B6730();

    goto LABEL_7;
  }
  +[BICCacheStats addToCounter:amount:](BICCacheStats, "addToCounter:amount:", kBICCacheStatsCounterNetworkBytesDownloaded[0], (unint64_t)objc_msgSend(v7, "length") >> 10);
  v24 = kCGImageSourceShouldCacheImmediately;
  v25 = &__kCFBooleanTrue;
  v10 = +[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v25, &v24, 1);
  v11 = CGImageSourceCreateWithData((CFDataRef)v7, (CFDictionaryRef)v10);
  ImageAtIndex = CGImageSourceCreateImageAtIndex(v11, 0, (CFDictionaryRef)v10);
  CFRelease(v11);
  if (!ImageAtIndex)
  {
LABEL_7:
    v15 = 0;
    goto LABEL_8;
  }
  Width = CGImageGetWidth(ImageAtIndex);
  objc_msgSend(*(id *)(a1 + 32), "setImageSize:", (double)Width, (double)CGImageGetHeight(ImageAtIndex));
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[BICImage imageWithCGImage:](BICImage, "imageWithCGImage:", ImageAtIndex));
  objc_msgSend(*(id *)(a1 + 32), "setImage:", v14);

  CGImageRelease(ImageAtIndex);
  v15 = 1;
LABEL_8:
  objc_msgSend(*(id *)(a1 + 56), "workComplete");
  v18 = *(NSObject **)(a1 + 64);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_ABCE4;
  block[3] = &unk_2902F0;
  v20 = *(id *)(a1 + 40);
  v21 = *(id *)(a1 + 32);
  v22 = *(id *)(a1 + 72);
  v23 = v15;
  dispatch_async(v18, block);

}

uint64_t sub_ABCE4(uint64_t a1)
{
  id v2;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  uint64_t v6;

  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationNetworkDownloadEnd[0], *(_QWORD *)(a1 + 32));
  +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", *(_QWORD *)(a1 + 40), CFSTR("URLDataStoreLoadImageFromNetwork"));
  v2 = objc_retainBlock(*(id *)(a1 + 48));
  v3 = (void (**)(_QWORD, _QWORD))v2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      v6 = *(_QWORD *)(a1 + 40);
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v6, 1));
      ((void (**)(_QWORD, void *))v3)[2](v3, v4);

    }
    else
    {
      (*((void (**)(id, _QWORD))v2 + 2))(v2, 0);
    }
  }

  return kdebug_trace(725353732, 1, 0, 0, 0);
}

void sub_AC12C(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  mach_timebase_info((mach_timebase_info_t)&dword_30DBE0);
  if (os_variant_has_internal_content("com.apple.iBooks.BookCore.BICCacheStats"))
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "stringForKey:", CFSTR("AllowsCoverCacheImagesLoggingUserDefaultsKey")));
    v3 = (void *)qword_30DBE8;
    qword_30DBE8 = v2;

    v4 = (id)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    objc_msgSend(v4, "removeObjectForKey:", CFSTR("AllowsCoverCacheImagesLoggingUserDefaultsKey"));

  }
}

void sub_AC3A8(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "operationsLog"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "operationToLogString:", *(_QWORD *)(a1 + 40)));
  objc_msgSend(v3, "appendString:", v2);

}

void sub_AC9F0(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[64];

  v3[0] = BICCacheStatsOperationVendLayer[0];
  v3[1] = BICCacheStatsOperationAddRequest[0];
  v3[2] = BICCacheStatsOperationExistingRequest[0];
  v3[3] = BICCacheStatsOperationRemoveRequest[0];
  v3[4] = BICCacheStatsOperationSyncFetchExactAttempt[0];
  v3[5] = BICCacheStatsOperationSyncFetchExactSuccess[0];
  v3[6] = BICCacheStatsOperationSyncFetchExactFail[0];
  v3[7] = BICCacheStatsOperationAsyncFetchBestAttempt[0];
  v3[8] = BICCacheStatsOperationSyncFetchBestSuccess[0];
  v3[9] = BICCacheStatsOperationSyncFetchBestFail[0];
  v3[10] = BICCacheStatsOperationAdd[0];
  v3[11] = BICCacheStatsOperationRemove[0];
  v3[12] = BICCacheStatsOperationTransformStart[0];
  v3[13] = BICCacheStatsOperationTransformEnd[0];
  v3[14] = BICCacheStatsOperationStackCreationStart[0];
  v3[15] = BICCacheStatsOperationStackCreationEnd[0];
  v3[16] = BICCacheStatsOperationDiskReadStart[0];
  v3[17] = BICCacheStatsOperationDiskReadEnd[0];
  v3[18] = BICCacheStatsOperationNetworkDownloadStart[0];
  v3[19] = BICCacheStatsOperationNetworkDownloadEnd[0];
  v3[20] = BICCacheStatsOperationProfileDownloadStart[0];
  v3[21] = BICCacheStatsOperationProfileDownloadEnd[0];
  v3[22] = BICCacheStatsOperationImageDelivered[0];
  v3[23] = BICCacheStatsOperationGenericImageDelivered[0];
  v3[24] = BICCacheStatsOperationBestMatchNeedsTransform[0];
  v3[25] = BICCacheStatsOperationBestMatchNeedsFetch[0];
  v3[26] = BICCacheStatsOperationNeedNewVersion[0];
  v3[27] = BICCacheStatsOperationAsyncFetchExactSuccess[0];
  v3[28] = BICCacheStatsOperationAsyncFetchExactFail[0];
  v3[29] = BICCacheStatsOperationAsyncFetchBestSuccess[0];
  v3[30] = BICCacheStatsOperationAsyncFetchBestFail[0];
  v3[31] = BICCacheStatsOperationAsyncLoadBestFail[0];
  v3[32] = BICCacheStatsOperationAsyncFetchExactAttempt[0];
  v3[33] = BICCacheStatsOperationMakingGenericQueueStart[0];
  v3[34] = BICCacheStatsOperationDiskReadQueueStart[0];
  v3[35] = BICCacheStatsOperationDiskWriteQueueStart[0];
  v3[36] = BICCacheStatsOperationDiskWriteStart[0];
  v3[37] = BICCacheStatsOperationDiskWriteEnd[0];
  v3[38] = BICCacheStatsOperationTransformQueueStart[0];
  v3[39] = BICCacheStatsOperationNetworkDownloadQueueStart[0];
  v3[40] = BICCacheStatsOperationProfileDownloadQueueStart[0];
  v3[41] = BICCacheStatsOperationMakingGenericStart[0];
  v3[42] = BICCacheStatsOperationMakingGenericEnd;
  v3[43] = BICCacheStatsOperationStackCreationQueueStart[0];
  v3[44] = BICCacheStatsOperationMakingGenericQueueEnd[0];
  v3[45] = BICCacheStatsOperationProfileDownloadQueueEnd[0];
  v3[46] = BICCacheStatsOperationNetworkDownloadQueueEnd[0];
  v3[47] = BICCacheStatsOperationDiskWriteQueueEnd[0];
  v3[48] = BICCacheStatsOperationDiskReadQueueEnd[0];
  v3[49] = BICCacheStatsOperationStackCreationQueueEnd[0];
  v3[50] = BICCacheStatsOperationTransformQueueEnd[0];
  v3[51] = BICCacheStatsOperationAsyncFetchExactHighQualityAttempt[0];
  v3[52] = BICCacheStatsOperationBeginGenericUpgradeAttempt[0];
  v3[53] = BICCacheStatsOperationBeginGenericUpgradeAttemptForStackBook[0];
  v3[54] = BICCacheStatsOperationBeginGenericStackUpgradeAttempt[0];
  v3[55] = BICCacheStatsOperationIgnoringLowQualityImageEntry[0];
  v3[56] = BICCacheStatsOperationIgnoringLowQualityBestImage[0];
  v3[57] = BICCacheStatsOperationIgnoringLowQualityBestEntry[0];
  v3[58] = BICCacheStatsOperationPushFailed[0];
  v3[59] = BICCacheStatsOperationTransformedFromSmaller[0];
  v3[60] = BICCacheStatsOperationCancelled[0];
  v3[61] = BICCacheStatsOperationInterestCheck[0];
  v3[62] = BICCacheStatsOperationNetworkDownloadEndFromDataSource[0];
  v3[63] = BICCacheStatsOperationNetworkDownloadQueueStartFromDataSource[0];
  v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v3, 64));
  v2 = (void *)qword_30DBF8;
  qword_30DBF8 = v1;

}

id sub_AD208(uint64_t a1)
{
  double v2;
  double v3;
  double v4;

  v2 = *(double *)(a1 + 48);
  if (v2 > 0.0)
  {
    objc_msgSend(*(id *)(a1 + 32), "alpha");
    v4 = v3;
    v2 = *(double *)(a1 + 48);
    if (v4 != v2)
    {
      objc_msgSend(*(id *)(a1 + 40), "_statusBarFrame");
      objc_msgSend(*(id *)(a1 + 32), "setFrame:");
      v2 = *(double *)(a1 + 48);
    }
  }
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", v2);
}

void sub_AD3B8(id a1)
{
  byte_30DC08 = MGGetBoolAnswer(CFSTR("apple-internal-install"));
}

void sub_AD41C(id a1)
{
  const void *v1;
  const void *v2;
  uint64_t v3;
  int v4;

  v1 = (const void *)MGCopyAnswer(CFSTR("DeviceClass"), 0);
  if (v1)
  {
    v2 = v1;
    if (CFEqual(v1, CFSTR("iPhone")))
    {
      v3 = 1;
    }
    else if (CFEqual(v2, CFSTR("iPod")))
    {
      v3 = 2;
    }
    else
    {
      v4 = CFEqual(v2, CFSTR("iPad"));
      v3 = 3;
      if (!v4)
        v3 = 5;
    }
    qword_30DC18 = v3;
    CFRelease(v2);
  }
}

void sub_AD4F8(id a1)
{
  BCReadingStatisticsSyncManager *v1;
  void *v2;

  v1 = objc_alloc_init(BCReadingStatisticsSyncManager);
  v2 = (void *)qword_30DC28;
  qword_30DC28 = (uint64_t)v1;

  objc_msgSend((id)qword_30DC28, "setupWithCompletion:", 0);
}

id sub_ADE40(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "assetID"));
  objc_msgSend(v3, "setObject:forKey:", v2, v4);

  return objc_msgSend(*(id *)(a1 + 40), "addObserver:", *(_QWORD *)(a1 + 32));
}

void sub_ADF1C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "removeObserver:", *(_QWORD *)(a1 + 40));
  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(*(_QWORD *)(a1 + 40) + 24);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "assetID"));
  objc_msgSend(v3, "removeObjectForKey:", v4);

}

void sub_AE090(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  void *v9;
  void *v10;
  BCReadingStatisticsProtoTOCEntry *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  BCMutableReadingStatisticsSync *v16;
  id v17;
  void *v18;
  id v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id obj;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint8_t buf[4];
  uint64_t v31;
  _BYTE v32[128];

  v24 = a2;
  objc_msgSend(*(id *)(a1 + 32), "setAssetID:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_appVersion"));
  objc_msgSend(*(id *)(a1 + 32), "setAppVersion:", v3);

  objc_msgSend(*(id *)(a1 + 32), "setAssetVersion:", *(_QWORD *)(a1 + 56));
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  obj = *(id *)(a1 + 64);
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        v8 = a1;
        if (*(_QWORD *)v27 != v6)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)i);
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("tocEntryHref")));
        v11 = objc_alloc_init(BCReadingStatisticsProtoTOCEntry);
        -[BCReadingStatisticsProtoTOCEntry setHref:](v11, "setHref:", v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("newReadProportion")));
        objc_msgSend(v12, "doubleValue");
        -[BCReadingStatisticsProtoTOCEntry setReadProportion:](v11, "setReadProportion:");

        v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
        objc_msgSend(v13, "timeIntervalSinceReferenceDate");
        -[BCReadingStatisticsProtoTOCEntry setTimestamp:](v11, "setTimestamp:");

        a1 = v8;
        objc_msgSend(*(id *)(v8 + 32), "addTocEntry:", v11);

      }
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v32, 16);
    }
    while (v5);
  }

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v24, "allCFIStrings"));
  v15 = objc_msgSend(v14, "mutableCopy");
  objc_msgSend(*(id *)(a1 + 32), "setReadCFIs:", v15);

  v16 = -[BCMutableReadingStatisticsSync initWithAssetID:]([BCMutableReadingStatisticsSync alloc], "initWithAssetID:", *(_QWORD *)(a1 + 40));
  -[BCMutableReadingStatisticsSync setAssetVersion:](v16, "setAssetVersion:", *(_QWORD *)(a1 + 56));
  v17 = objc_alloc_init((Class)PBDataWriter);
  objc_msgSend(*(id *)(a1 + 32), "writeTo:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "immutableData"));
  -[BCMutableReadingStatisticsSync setReadingStatisticsBook:](v16, "setReadingStatisticsBook:", v18);

  v19 = BCReadingStatisticsLog();
  v20 = objc_claimAutoreleasedReturnValue(v19);
  if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
  {
    v21 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138543362;
    v31 = v21;
    _os_log_impl(&dword_0, v20, OS_LOG_TYPE_DEFAULT, "Collecting updated readingStatistics for %{public}@", buf, 0xCu);
  }

  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "dataManager"));
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("assetID = %@"), *(_QWORD *)(a1 + 40)));
  objc_msgSend(v22, "setCloudData:predicate:completion:", v16, v23, 0);

}

void sub_AE8D4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  BCReadingStatisticsProtoBook *v26;
  id v27;
  void *v28;
  id v29;
  _BOOL4 v30;
  BOOL v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *i;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  void *v41;
  BOOL v42;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  id v51;
  id v52;
  void (**v53)(id, _QWORD, id);
  void (**v54)(id, _QWORD, id);
  id v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  id v60;
  BOOL v61;
  unsigned int v62;
  void *v63;
  BCReadingStatisticsProtoBook *v64;
  void *v65;
  void *v66;
  id v67;
  void *v68;
  void *v69;
  _QWORD block[5];
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  BOOL v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _QWORD v86[4];
  _QWORD v87[4];
  _BYTE v88[128];
  uint8_t v89[128];
  uint8_t buf[4];
  id v91;

  v7 = a3;
  v8 = a4;
  v9 = BCReadingStatisticsLog();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v91 = v7;
    _os_log_impl(&dword_0, v10, OS_LOG_TYPE_DEFAULT, "Resolved data:%@", buf, 0xCu);
  }

  v84 = 0u;
  v85 = 0u;
  v82 = 0u;
  v83 = 0u;
  v11 = v7;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v82, v89, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v83;
    v62 = a2;
    v58 = v8;
    v59 = a1;
    v56 = *(_QWORD *)v83;
    v57 = v11;
    do
    {
      v15 = 0;
      v60 = v13;
      do
      {
        if (*(_QWORD *)v83 != v14)
          objc_enumerationMutation(v11);
        v16 = *(void **)(*((_QWORD *)&v82 + 1) + 8 * (_QWORD)v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "identifier"));
        if (v17)
        {
          v66 = v15;
          v67 = v17;
          v18 = BUProtocolCast(&OBJC_PROTOCOL___BCReadingStatisticsSync, v16);
          v19 = (void *)objc_claimAutoreleasedReturnValue(v18);
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "assetVersion"));
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_appVersion"));
          if ((_DWORD)a2
            && (v65 = v19,
                v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "readingStatisticsBook")),
                v23 = objc_msgSend(v22, "length"),
                v22,
                v19 = v65,
                v23))
          {
            v24 = v11;
            v25 = v8;
            v26 = objc_alloc_init(BCReadingStatisticsProtoBook);
            v27 = objc_alloc((Class)PBDataReader);
            v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v65, "readingStatisticsBook"));
            v29 = objc_msgSend(v27, "initWithData:", v28);

            v30 = BCReadingStatisticsProtoBookReadFrom((char *)v26, (uint64_t)v29);
            v63 = v29;
            v64 = v26;
            if (v30)
            {
              v31 = v30;
              v69 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
              v78 = 0u;
              v79 = 0u;
              v80 = 0u;
              v81 = 0u;
              v32 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatisticsProtoBook tocEntrys](v26, "tocEntrys"));
              v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v78, v88, 16);
              v61 = v31;
              if (v33)
              {
                v34 = v33;
                v35 = *(_QWORD *)v79;
                do
                {
                  for (i = 0; i != v34; i = (char *)i + 1)
                  {
                    if (*(_QWORD *)v79 != v35)
                      objc_enumerationMutation(v32);
                    v37 = *(void **)(*((_QWORD *)&v78 + 1) + 8 * (_QWORD)i);
                    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v37, "href"));
                    objc_msgSend(v37, "readProportion");
                    v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
                    objc_msgSend(v37, "timestamp");
                    v40 = objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:"));
                    v41 = (void *)v40;
                    if (v21)
                    {
                      v42 = !v38 || v40 == 0;
                      if (!v42 && v39 != 0)
                      {
                        v86[0] = CFSTR("assetVersion");
                        v44 = v20;
                        if (!v20)
                        {
                          v68 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
                          v44 = v68;
                        }
                        v87[0] = v44;
                        v87[1] = v21;
                        v86[1] = CFSTR("appVersion");
                        v86[2] = CFSTR("timestamp");
                        v86[3] = CFSTR("readProportion");
                        v87[2] = v41;
                        v87[3] = v39;
                        v45 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v87, v86, 4));
                        if (!v20)

                        objc_msgSend(v69, "setObject:forKeyedSubscript:", v45, v38);
                      }
                    }

                  }
                  v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v78, v88, 16);
                }
                while (v34);
              }

              v46 = (void *)objc_claimAutoreleasedReturnValue(-[BCReadingStatisticsProtoBook readCFIs](v64, "readCFIs"));
              v47 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v46));
              v48 = (void *)objc_claimAutoreleasedReturnValue(+[BCCFISet cfiSetWithCFIStrings:](BCCFISet, "cfiSetWithCFIStrings:", v47));

              a1 = v59;
              v49 = *(_QWORD *)(v59 + 32);
              v50 = *(NSObject **)(v49 + 8);
              block[0] = _NSConcreteStackBlock;
              block[1] = 3221225472;
              block[2] = sub_AEEC4;
              block[3] = &unk_2904D8;
              block[4] = v49;
              v71 = v67;
              v72 = v20;
              v73 = v69;
              v74 = v48;
              v76 = *(id *)(v59 + 40);
              v77 = v61;
              v8 = v58;
              v75 = v58;
              v51 = v48;
              v52 = v69;
              dispatch_async(v50, block);

              a2 = v62;
              v14 = v56;
              v11 = v57;
              v13 = v60;
              v15 = v66;
            }
            else
            {
              v55 = objc_retainBlock(*(id *)(a1 + 40));
              v52 = v55;
              if (v55)
              {
                v8 = v25;
                (*((void (**)(id, _QWORD, id))v55 + 2))(v55, 0, v25);
                v15 = v66;
              }
              else
              {
                v15 = v66;
                v8 = v25;
              }
              v11 = v24;
              a2 = v62;
            }

            v53 = (void (**)(id, _QWORD, id))v64;
            v19 = v65;
          }
          else
          {
            v53 = (void (**)(id, _QWORD, id))objc_retainBlock(*(id *)(a1 + 40));
            if (v53)
            {
              v54 = v53;
              v53[2](v53, a2, v8);
              v53 = v54;
            }
            v15 = v66;
          }

          v17 = v67;
        }

        v15 = (char *)v15 + 1;
      }
      while (v15 != v13);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v82, v89, 16);
    }
    while (v13);
  }

}

void sub_AEEC4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id *v5;
  BCReadingStatisticsController *v6;
  id *v7;
  id *v8;
  id *v9;
  BCReadingStatisticsController *v10;
  _QWORD v11[4];
  BCReadingStatisticsController *v12;
  id v13;
  id v14;
  id v15;
  char v16;
  _QWORD v17[4];
  BCReadingStatisticsController *v18;
  id v19;
  id v20;
  id v21;
  char v22;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "controllers"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));

  if (v3)
  {
    v4 = *(_QWORD *)(a1 + 56);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_AF290;
    v11[3] = &unk_290460;
    v5 = (id *)&v12;
    v6 = v3;
    v12 = v6;
    v7 = &v13;
    v13 = *(id *)(a1 + 64);
    v8 = &v15;
    v15 = *(id *)(a1 + 80);
    v16 = *(_BYTE *)(a1 + 88);
    v9 = &v14;
    v14 = *(id *)(a1 + 72);
    -[BCReadingStatisticsController _bulkUpdateTocEntryReadProportions:completion:](v6, "_bulkUpdateTocEntryReadProportions:completion:", v4, v11);
  }
  else
  {
    v10 = -[BCReadingStatisticsController initWithAssetID:versionString:]([BCReadingStatisticsController alloc], "initWithAssetID:versionString:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_AF074;
    v17[3] = &unk_290488;
    v5 = (id *)&v18;
    v6 = v10;
    v18 = v6;
    v7 = &v19;
    v19 = *(id *)(a1 + 56);
    v8 = &v20;
    v20 = *(id *)(a1 + 64);
    v9 = &v21;
    v21 = *(id *)(a1 + 80);
    v22 = *(_BYTE *)(a1 + 88);
    -[BCReadingStatisticsController setupWithCompletion:](v6, "setupWithCompletion:", v17);
  }

}

void sub_AF074(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;
  char v16;

  v3 = a2;
  if (v3)
  {
    v4 = BCReadingStatisticsLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1B6820((uint64_t)v3, v5);

    v6 = objc_retainBlock(*(id *)(a1 + 56));
    v7 = v6;
    if (v6)
      (*((void (**)(id, _QWORD, id))v6 + 2))(v6, *(unsigned __int8 *)(a1 + 64), v3);
  }
  else
  {
    v8 = *(void **)(a1 + 32);
    v9 = *(_QWORD *)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_AF190;
    v11[3] = &unk_290460;
    v12 = v8;
    v13 = *(id *)(a1 + 48);
    v10 = *(id *)(a1 + 56);
    v16 = *(_BYTE *)(a1 + 64);
    v14 = 0;
    v15 = v10;
    objc_msgSend(v12, "_bulkUpdateTocEntryReadProportions:completion:", v9, v11);

    v7 = v12;
  }

}

void sub_AF190(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD v4[4];
  id v5;
  id v6;
  id v7;
  char v8;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_AF240;
  v4[3] = &unk_290438;
  v5 = v2;
  v7 = *(id *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  v6 = *(id *)(a1 + 48);
  objc_msgSend(v5, "_bulkUpdateWithReadRanges:completion:", v3, v4);

}

void sub_AF240(uint64_t a1)
{
  id v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "teardown");
  v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 40));
    v2 = v3;
  }

}

void sub_AF290(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  _QWORD v4[4];
  id v5;
  id v6;
  char v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_AF32C;
  v4[3] = &unk_2904B0;
  v6 = *(id *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  v5 = *(id *)(a1 + 48);
  objc_msgSend(v2, "_bulkUpdateWithReadRanges:completion:", v3, v4);

}

void sub_AF32C(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 48), *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

void sub_AF454(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);

}

void sub_AF59C(id a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForInfoDictionaryKey:", CFSTR("CFBundleShortVersionString")));
  v2 = objc_msgSend(v1, "copy");
  v3 = (void *)qword_30DC38;
  qword_30DC38 = (uint64_t)v2;

}

id sub_B34C4(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(_BYTE *)(a1 + 40);
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", (double)*(unint64_t *)&a2);
}

void sub_B4724(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  unsigned int v9;
  _QWORD block[4];
  id v11;
  id v12;
  id v13;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5)
  {

    v7 = 0;
  }
  if (objc_msgSend(v7, "code") == &stru_3D8.segname[4]
    && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "domain")),
        v9 = objc_msgSend(v8, "isEqualToString:", AssetEngineErrorDomain),
        v8,
        v9)
    && *(_DWORD *)(a1 + 52) > *(_DWORD *)(a1 + 48) + 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "viewControllerFromPluginIndex:withCompletion:");
  }
  else if (*(_QWORD *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_B4850;
    block[3] = &unk_28EDE8;
    v13 = *(id *)(a1 + 40);
    v11 = v5;
    v12 = v7;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

uint64_t sub_B4850(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_B4864(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 1005, 0));
  (*(void (**)(uint64_t, _QWORD, id))(v1 + 16))(v1, 0, v2);

}

void sub_B4C6C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundContext"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_B4D14;
  v6[3] = &unk_28C080;
  v7 = *(id *)(a1 + 32);
  v8 = v3;
  v5 = v3;
  objc_msgSend(v4, "performBlock:", v6);

}

uint64_t sub_B4D14(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  id v6;
  NSObject *v7;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundContext"));
  v3 = objc_msgSend(v2, "hasChanges");

  if (v3)
  {
    kdebug_trace(725353752, 4, 0, 0, 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundContext"));
    v9 = 0;
    objc_msgSend(v4, "save:", &v9);
    v5 = v9;

    kdebug_trace(725353752, 5, 0, 0, 0);
    if (v5)
    {
      v6 = BCImageCacheLog();
      v7 = objc_claimAutoreleasedReturnValue(v6);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        sub_1B6894();

    }
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void sub_B4E68(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  NSString *const *v5;
  NSBundle *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "url"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPersistentStoreDescription persistentStoreDescriptionWithURL:](NSPersistentStoreDescription, "persistentStoreDescriptionWithURL:", v2));

  objc_msgSend(v3, "setShouldAddStoreAsynchronously:", 0);
  objc_msgSend(v3, "setShouldMigrateStoreAutomatically:", 1);
  objc_msgSend(v3, "setShouldInferMappingModelAutomatically:", 1);
  objc_msgSend(v3, "setReadOnly:", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "url"));
  v5 = &NSSQLiteStoreType;
  if (!v4)
    v5 = &NSInMemoryStoreType;
  objc_msgSend(v3, "setType:", *v5);

  objc_msgSend(v3, "setConfiguration:", CFSTR("Default"));
  objc_msgSend(v3, "setValue:forPragmaNamed:", CFSTR("WAL"), CFSTR("journal_mode"));
  v6 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(*(_QWORD *)(a1 + 32)));
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "URLForResource:withExtension:", CFSTR("BICImageSet"), CFSTR("momd")));
  v9 = objc_msgSend(objc_alloc((Class)NSManagedObjectModel), "initWithContentsOfURL:", v8);
  v10 = objc_msgSend(objc_alloc((Class)NSPersistentContainer), "initWithName:managedObjectModel:", CFSTR("BICImageSet"), v9);
  objc_msgSend(*(id *)(a1 + 32), "setContainer:", v10);

  v17 = v3;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v17, 1));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "container"));
  objc_msgSend(v12, "setPersistentStoreDescriptions:", v11);

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "container"));
  objc_msgSend(v13, "loadPersistentStoresWithCompletionHandler:", &stru_290648);

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "container"));
  v15 = objc_msgSend(v14, "newBackgroundContext");
  objc_msgSend(*(id *)(a1 + 32), "setBackgroundContext:", v15);

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundContext"));
  objc_msgSend(v16, "setName:", CFSTR("BIC background context"));

}

void sub_B50D4(id a1, NSPersistentStoreDescription *a2, NSError *a3)
{
  NSError *v3;
  id v4;
  NSObject *v5;

  v3 = a3;
  if (v3)
  {
    v4 = BCImageCacheLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1B68F4();

  }
}

void sub_B5864(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  id v20;
  _BYTE v21[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BICCoreDataPersistentStoring _imageSetFetchRequest](BICCoreDataPersistentStoring, "_imageSetFetchRequest"));
  objc_msgSend(v2, "setIncludesPendingChanges:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BICCoreDataPersistentStoring _predicateForImageSetsWithIDs:](BICCoreDataPersistentStoring, "_predicateForImageSetsWithIDs:", *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "backgroundContext"));
  v20 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v20));
  v6 = v20;

  if (v6)
  {
    v7 = BCImageCacheLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B6AD4();

  }
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v9 = v5;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v17;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v17 != v12)
          objc_enumerationMutation(v9);
        v14 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v13);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "backgroundContext", (_QWORD)v16));
        objc_msgSend(v15, "deleteObject:", v14);

        v13 = (char *)v13 + 1;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v11);
  }

  objc_msgSend(*(id *)(a1 + 40), "saveIfNeeded");
}

void sub_B5E98(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  dispatch_queue_global_t global_queue;
  NSObject *v17;
  _QWORD block[4];
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  id v24;
  _BYTE v25[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BICCoreDataPersistentStoring _imageSetFetchRequest](BICCoreDataPersistentStoring, "_imageSetFetchRequest"));
  objc_msgSend(v2, "setIncludesPendingChanges:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithValue:](NSPredicate, "predicateWithValue:", 1));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundContext"));
  v24 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v24));
  v6 = v24;

  if (v6)
  {
    v7 = BCImageCacheLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B6C54();

  }
  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v9 = v5;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v21;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v21 != v12)
          objc_enumerationMutation(v9);
        v14 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)v13);
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundContext"));
        objc_msgSend(v15, "deleteObject:", v14);

        v13 = (char *)v13 + 1;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
    }
    while (v11);
  }

  objc_msgSend(*(id *)(a1 + 32), "saveIfNeeded");
  global_queue = dispatch_get_global_queue(2, 0);
  v17 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_B60CC;
  block[3] = &unk_28BF90;
  v19 = *(id *)(a1 + 40);
  dispatch_async(v17, block);

}

void sub_B60CC(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_B692C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int128 buf, int a20,__int16 a21,__int16 a22,int a23)
{
  id v23;
  id v24;
  NSObject *v25;
  id v26;
  NSObject *v27;
  void *v28;

  if (a2 == 1)
  {
    v23 = objc_begin_catch(a1);
    v24 = BCIMLog();
    v25 = objc_claimAutoreleasedReturnValue(v24);
    if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
    {
      LODWORD(buf) = 136315650;
      *(_QWORD *)((char *)&buf + 4) = "-[IMPersistentCache _createStorageForDb:]";
      WORD6(buf) = 2080;
      *(_QWORD *)((char *)&buf + 14) = "/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Cache/BC"
                                       "PersistentCache.m";
      a22 = 1024;
      a23 = 199;
      _os_log_impl(&dword_0, v25, OS_LOG_TYPE_INFO, "%s %s:%d", (uint8_t *)&buf, 0x1Cu);
    }

    v26 = BCIMLog();
    v27 = objc_claimAutoreleasedReturnValue(v26);
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "reason"));
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v28;
      _os_log_impl(&dword_0, v27, OS_LOG_TYPE_INFO, "@\"Could not create initial structure; %@\"",
        (uint8_t *)&buf,
        0xCu);

    }
    objc_end_catch();
    JUMPOUT(0xB68E8);
  }
  _Unwind_Resume(a1);
}

void sub_B720C(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_B7A68(void *a1)
{
  id v1;

  v1 = (id)objc_opt_self();

}

void sub_B8274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13)
{
  id v13;
  id v14;
  NSObject *v15;
  id v16;
  NSObject *v17;
  void *v18;

  if (a2 == 1)
  {
    v13 = objc_begin_catch(exception_object);
    v14 = BCIMLog();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
    {
      LODWORD(a9) = 136315650;
      *(_QWORD *)((char *)&a9 + 4) = "-[IMPersistentCache deleteItemsForMimeType:]";
      WORD6(a9) = 2080;
      *(_QWORD *)((char *)&a9 + 14) = "/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Cache/BCP"
                                      "ersistentCache.m";
      a12 = 1024;
      LODWORD(a13) = 606;
      _os_log_impl(&dword_0, v15, OS_LOG_TYPE_INFO, "%s %s:%d", (uint8_t *)&a9, 0x1Cu);
    }

    v16 = BCIMLog();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "reason"));
      LODWORD(a9) = 138412290;
      *(_QWORD *)((char *)&a9 + 4) = v18;
      _os_log_impl(&dword_0, v17, OS_LOG_TYPE_INFO, "@\"%@\"", (uint8_t *)&a9, 0xCu);

    }
    objc_end_catch();
    JUMPOUT(0xB823CLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_B9078(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_B9278(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_B9FB8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_opt_new(*(_QWORD *)(a1 + 32));
  v2 = (void *)qword_30DC48;
  qword_30DC48 = v1;

}

uint64_t sub_BA128(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_BA138(uint64_t a1)
{

}

id sub_BA140(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  IMPersistentCache *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 8), "objectForKey:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  if (!*(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40))
  {
    v5 = -[IMPersistentCache initWithPath:maxSize:]([IMPersistentCache alloc], "initWithPath:maxSize:", a1[5], a1[7]);
    v6 = *(_QWORD *)(a1[6] + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    v8 = *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40);
    if (v8)
      objc_msgSend(*(id *)(a1[4] + 8), "setObject:forKey:", v8, a1[5]);
  }
  return objc_msgSend(*(id *)(a1[4] + 16), "addObject:", a1[5]);
}

id sub_BA25C(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObject:", *(_QWORD *)(a1 + 40));
  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "countForObject:", *(_QWORD *)(a1 + 40));
  if (!result)
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "removeObjectForKey:", *(_QWORD *)(a1 + 40));
  return result;
}

id sub_BA324(uint64_t a1)
{
  void *v2;
  NSMutableSet *v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  if (!v2)
  {
    v3 = objc_opt_new(NSMutableSet);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = v3;

    v2 = *(void **)(*(_QWORD *)(a1 + 32) + 24);
  }
  return objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));
}

void sub_BA41C(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  unint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *i;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  unint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  id v35;
  _BYTE v36[128];

  v2 = objc_alloc_init((Class)NSFileManager);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "enumeratorAtPath:", *(_QWORD *)(a1 + 32)));
  v27 = v3;
  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v4 = 0;
  v5 = 0;
  do
  {
    v6 = v4;
    v7 = objc_autoreleasePoolPush();
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "nextObject"));

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pathExtension"));
    v9 = objc_msgSend(v8, "isEqualToString:", *(_QWORD *)(a1 + 40));

    if (v9)
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stringByAppendingPathComponent:", v4));
      v35 = 0;
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "attributesOfItemAtPath:error:", v10, &v35));
      v12 = v35;
      if (!v12 && (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 24), "containsObject:", v10) & 1) == 0)
      {
        v13 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithDictionary:", v11);
        objc_msgSend(v13, "setObject:forKey:", v10, CFSTR("path"));
        objc_msgSend(v28, "addObject:", v13);
        v5 += (unint64_t)objc_msgSend(v11, "fileSize");

        v3 = v27;
      }

    }
    objc_autoreleasePoolPop(v7);
  }
  while (v4);
  if (v5 >= 0xC800001)
  {
    v29 = v2;
    v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", NSFileModificationDate, 1));
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObject:](NSArray, "arrayWithObject:"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v28, "sortedArrayUsingDescriptors:", v14));

    v33 = 0u;
    v34 = 0u;
    v31 = 0u;
    v32 = 0u;
    v16 = v15;
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
    if (v17)
    {
      v18 = v17;
      v19 = *(_QWORD *)v32;
      while (2)
      {
        for (i = 0; i != v18; i = (char *)i + 1)
        {
          if (*(_QWORD *)v32 != v19)
            objc_enumerationMutation(v16);
          v21 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * (_QWORD)i);
          v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKey:", CFSTR("path")));
          v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 8), "objectForKey:", v22));

          if (!v23)
          {
            v30 = 0;
            objc_msgSend(v29, "removeItemAtPath:error:", v22, &v30);
            v24 = v30;
            v25 = v24 ? v5 : v5 - (_QWORD)objc_msgSend(v21, "fileSize");

            v5 = v25;
            if (v25 >> 23 <= 0x18)
            {

              goto LABEL_23;
            }
          }

        }
        v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v31, v36, 16);
        if (v18)
          continue;
        break;
      }
    }
LABEL_23:

    v2 = v29;
    v3 = v27;
  }

}

void sub_BB250(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  _QWORD v10[12];

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "preferredContentSizeCategory"));
  v10[0] = UIContentSizeCategoryExtraSmall;
  v10[1] = UIContentSizeCategorySmall;
  v10[2] = UIContentSizeCategoryMedium;
  v10[3] = UIContentSizeCategoryLarge;
  v10[4] = UIContentSizeCategoryExtraLarge;
  v10[5] = UIContentSizeCategoryExtraExtraLarge;
  v10[6] = UIContentSizeCategoryExtraExtraExtraLarge;
  v10[7] = UIContentSizeCategoryAccessibilityMedium;
  v10[8] = UIContentSizeCategoryAccessibilityLarge;
  v10[9] = UIContentSizeCategoryAccessibilityExtraLarge;
  v10[10] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v10[11] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v10, 12));
  v6 = objc_msgSend(v5, "indexOfObject:", v4);
  v7 = objc_msgSend(v5, "indexOfObject:", *(_QWORD *)(a1 + 32));
  if (v6 >= v7)
    v8 = v7;
  else
    v8 = v6;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndexedSubscript:", v8));
  objc_msgSend(v3, "setPreferredContentSizeCategory:", v9);

}

void sub_BB788(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_BB83C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id brc_segmentIDSplit(void *a1)
{
  void *v1;
  id v2;
  id v3;
  _QWORD v5[4];
  id v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "componentsSeparatedByString:", CFSTR(",")));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_BCE94;
  v5[3] = &unk_290730;
  v2 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v1, "count"));
  v6 = v2;
  objc_msgSend(v1, "enumerateObjectsUsingBlock:", v5);
  if (objc_msgSend(v2, "count"))
    v3 = objc_msgSend(v2, "copy");
  else
    v3 = 0;

  return v3;
}

void sub_BBC1C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v3 = a2;
  v4 = objc_alloc((Class)RCConfigurationSettings);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_permanentURLForRecordID:containerIdentifier:", v3, *(_QWORD *)(a1 + 40)));

  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bundleID"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[RCDeviceInfo defaultDeviceInfo](RCDeviceInfo, "defaultDeviceInfo"));
  v10 = objc_msgSend(v4, "initWithRequestKey:responseKey:fallbackURL:userID:storefrontID:bundleID:deviceInfo:debugOverrides:requestMode:", CFSTR("booksConfigRequest"), CFSTR("booksConfigurationWrapper"), v5, v6, v7, v8, v9, *(_QWORD *)(a1 + 64), 1);

  (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
}

void sub_BCE94(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  if (objc_msgSend(v4, "length"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", objc_msgSend(v4, "integerValue")));
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

  }
}

void sub_C0C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_C0C38(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_C0C48(uint64_t a1)
{

}

void sub_C0C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  id v8;
  uint64_t v9;
  void *v10;
  id v11;

  if ((unint64_t)(*(_QWORD *)(a1 + 48) - a3 + *(_QWORD *)(a1 + 56)) <= *(_QWORD *)(a1 + 64))
  {
    *a7 = 1;
    v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", a3, (char *)objc_msgSend(*(id *)(a1 + 32), "length") - a3));
    v8 = objc_msgSend(v11, "copy");
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

  }
}

void sub_C102C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_C1044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a1 + 56) + a3;
  v7 = *(void **)(a1 + 32);
  v8 = objc_msgSend(v7, "length");
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_C10F4;
  v11[3] = &unk_290858;
  v14 = v6;
  v15 = a4;
  v9 = *(id *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v12 = v9;
  v13 = v10;
  objc_msgSend(v7, "enumerateSubstringsInRange:options:usingBlock:", 0, v8, 4, v11);

}

void sub_C10F4(uint64_t a1, void *a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  id v11;
  unint64_t v12;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;

  v11 = a2;
  v12 = *(_QWORD *)(a1 + 48);
  if (v12 >= a3 && v12 - a3 < a4)
  {
    v30 = v11;
    if (v12 <= a3
      || (v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet")), v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "invertedSet")), v16 = objc_msgSend(v30, "rangeOfCharacterFromSet:", v15), v15, v14, v12 = *(_QWORD *)(a1 + 48), v12 <= (unint64_t)v16 + a3))
    {
      v17 = 0;
    }
    else
    {
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "stringByAppendingString:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40)));
      v12 = *(_QWORD *)(a1 + 48);
    }
    if (*(_QWORD *)(a1 + 56) + v12 < a3 + a4)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet whitespaceAndNewlineCharacterSet](NSCharacterSet, "whitespaceAndNewlineCharacterSet"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "invertedSet"));
      v20 = (char *)objc_msgSend(v30, "rangeOfCharacterFromSet:options:", v19, 4);
      v22 = v21;

      v23 = &v20[a3 + v22];
      if (*(_QWORD *)(a1 + 56) + *(_QWORD *)(a1 + 48) < (unint64_t)v23)
      {
        v24 = v17;
        if (!v17)
          v24 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
        v25 = v24;
        if (&v23[-*(_QWORD *)(a1 + 48) - *(_QWORD *)(a1 + 56)] == (_BYTE *)&dword_0 + 1
          && (v26 = objc_msgSend(v30, "characterAtIndex:", v20),
              v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet punctuationCharacterSet](NSCharacterSet, "punctuationCharacterSet")), LODWORD(v26) = objc_msgSend(v27, "characterIsMember:", v26), v27, (_DWORD)v26))
        {
          v28 = objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "substringWithRange:", v20, v22));
          v29 = objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "stringByAppendingString:", v28));

          v17 = (void *)v28;
        }
        else
        {
          v29 = objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "stringByAppendingString:", *(_QWORD *)(a1 + 32)));
        }

        v17 = (void *)v29;
      }
    }
    if (v17)
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v17);
    *a7 = 1;

    v11 = v30;
  }

}

void sub_C1900(id a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = objc_alloc_init((Class)NSMutableCharacterSet);
  v2 = (void *)qword_30DC58;
  qword_30DC58 = (uint64_t)v1;

  v3 = (void *)qword_30DC58;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet controlCharacterSet](NSCharacterSet, "controlCharacterSet"));
  objc_msgSend(v3, "formUnionWithCharacterSet:", v4);

  v5 = (void *)qword_30DC58;
  v6 = (id)objc_claimAutoreleasedReturnValue(+[NSCharacterSet newlineCharacterSet](NSCharacterSet, "newlineCharacterSet"));
  objc_msgSend(v5, "formUnionWithCharacterSet:", v6);

}

id sub_C1DF4(uint64_t a1, void *a2)
{
  return _objc_msgSend(a2, "bc_tabBarControllerWillSelectViewController:", *(_QWORD *)(a1 + 32));
}

void sub_C3170(id a1)
{
  void *v1;

  v1 = (void *)qword_30DC68;
  qword_30DC68 = (uint64_t)&off_2AF930;

}

id sub_C3778(uint64_t a1)
{
  void *v1;
  int v2;
  double v3;
  CMTime v5;

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 8);
  v2 = *(_DWORD *)(a1 + 48);
  CMTimeMakeWithSeconds(&v5, *(Float64 *)(a1 + 40), 1000000000);
  LODWORD(v3) = v2;
  return objc_msgSend(v1, "setRate:withVolumeRampDuration:", &v5, v3);
}

id *sub_C39C8(id *result, int a2)
{
  id *v2;
  id v3;

  if (a2)
  {
    v2 = result;
    v3 = result[5];
    *((_QWORD *)result[4] + 17) = v3;
    *((_QWORD *)result[4] + 16) = v3;
    objc_msgSend(result[4], "play");
    return (id *)objc_msgSend(v2[4], "seekFinished:", *((double *)v2 + 5));
  }
  return result;
}

void sub_C592C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_C5950(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id WeakRetained;
  void *v7;
  id v8;

  v2 = objc_opt_class(NSNumber);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", NSKeyValueChangeNewKey));
  v4 = BUDynamicCast(v2, v3);
  v8 = (id)objc_claimAutoreleasedReturnValue(v4);

  v5 = objc_msgSend(v8, "BOOLValue");
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "player"));
  objc_msgSend(v7, "setAppliesMediaSelectionCriteriaAutomatically:", v5);

}

uint64_t sub_C59F8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_C5A04(uint64_t a1)
{
  void *v1;
  _QWORD v2[5];
  id v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_C5A70;
  v2[3] = &unk_28B808;
  v1 = *(void **)(a1 + 40);
  v2[4] = *(_QWORD *)(a1 + 32);
  v3 = v1;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);

}

id sub_C5A70(uint64_t a1)
{
  id result;
  __int16 v3;

  objc_msgSend(*(id *)(a1 + 32), "updateVolume");
  result = objc_msgSend(*(id *)(a1 + 32), "_updateAudioParameters");
  v3 = *(_WORD *)(*(_QWORD *)(a1 + 32) + 176);
  if ((v3 & 4) != 0)
  {
    result = objc_msgSend(*(id *)(a1 + 40), "playerMediaTypeAvailable:");
    v3 = *(_WORD *)(*(_QWORD *)(a1 + 32) + 176);
  }
  if ((v3 & 8) != 0)
    return _objc_msgSend(*(id *)(a1 + 40), "playerDurationAvailable:");
  return result;
}

id sub_C6020(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "updateSeekTime:", *(double *)(*(_QWORD *)(a1 + 32) + 128));
}

void sub_C616C(uint64_t a1, int a2)
{
  id v4;
  NSObject *v5;
  _DWORD v6[2];

  v4 = BCAVPlayerLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_INFO, "updateSeekTime Finished %d", (uint8_t *)v6, 8u);
  }

  if (a2)
    objc_msgSend(*(id *)(a1 + 32), "seekFinished:", *(double *)(a1 + 40));
}

void sub_C6898(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_C68C0(uint64_t a1, CMTime *a2)
{
  id *WeakRetained;
  id *v4;
  double v5;
  double v6;
  double Seconds;
  id v8;
  void *v9;
  CMTime v10;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "duration");
    v6 = v5;
    v10 = *a2;
    Seconds = CMTimeGetSeconds(&v10);
    v8 = objc_loadWeakRetained(v4 + 24);
    v9 = v8;
    if (v8 && ((_WORD)v4[22] & 0x40) != 0)
      objc_msgSend(v8, "playerPeriodicUpdate:elapsed:duration:isFinished:", v4, 0, Seconds, v6);

  }
}

void sub_C6C88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_C6CC4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "triggerTimeObserverAt:", *(_QWORD *)(a1 + 32));

}

void sub_C6EA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_C6ED8(uint64_t a1)
{
  id WeakRetained;
  id v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = BCAVPlayerLog();
  v4 = objc_claimAutoreleasedReturnValue(v3);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v5;
    _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "End TimeObserver %@", (uint8_t *)&v6, 0xCu);
  }

  objc_msgSend(WeakRetained, "stop");
  objc_msgSend(WeakRetained, "sendItemEndedNotification");

}

id sub_C78D8(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_C83FC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 8u);
}

void sub_CA090(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void **p_vtable;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  double v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  void *i;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *j;
  void *v36;
  void *v37;
  void *v38;
  IMCoalescedAction *v39;
  IMCoalescedAction *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *k;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  IMCoalescedAction *v50;
  id v51;
  IMCoalescedAction *v52;
  id v53;
  id v54;
  uint64_t v55;
  void *m;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  _QWORD *v68;
  id v69;
  void *v70;
  void *v71;
  id v72;
  void *v73;
  id obj;
  id obja;
  id v76;
  id v77;
  id v78;
  id v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _QWORD v84[4];
  id v85;
  id v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _QWORD v91[4];
  id v92;
  id v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _QWORD v106[4];
  id v107;
  _BYTE v108[128];
  _BYTE v109[128];
  _BYTE v110[128];
  _BYTE v111[128];
  _BYTE v112[128];

  v3 = a2;
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "count"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "description"));
    v65 = (void *)objc_claimAutoreleasedReturnValue(+[BCStopWatch stopwatchWithDescription:](BCStopWatch, "stopwatchWithDescription:", v4));

    v5 = objc_claimAutoreleasedReturnValue(+[AEAnnotationSidecarConsumer annotationUuidsFromDictionaryRepresentations:](AEAnnotationSidecarConsumer, "annotationUuidsFromDictionaryRepresentations:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32)));
    v6 = objc_alloc_init((Class)NSMutableSet);
    v69 = objc_alloc_init((Class)NSMutableSet);
    v106[0] = _NSConcreteStackBlock;
    v106[1] = 3221225472;
    v106[2] = sub_CA9DC;
    v106[3] = &unk_2909A8;
    v79 = objc_alloc_init((Class)NSMutableDictionary);
    v107 = v79;
    v68 = objc_retainBlock(v106);
    v7 = objc_autoreleasePoolPush();
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("annotationUuid"), v5));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", CFSTR("annotationModificationDate"), CFSTR("annotationDeleted"), CFSTR("annotationUuid"), 0));
    p_vtable = IMViewControllerTransition.vtable;
    v67 = v3;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotation dictionaryResultsForAssetsWithPredicate:properties:inManagedObjectContext:](AEAnnotation, "dictionaryResultsForAssetsWithPredicate:properties:inManagedObjectContext:", v8, v9, v3));
    v66 = (void *)v5;
    v71 = v6;
    if (objc_msgSend(v11, "count"))
    {
      v62 = v9;
      v63 = v8;
      v64 = v7;
      v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "valueForKey:", CFSTR("annotationUuid")));
      v76 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:](NSDictionary, "dictionaryWithObjects:forKeys:", v11));
      v102 = 0u;
      v103 = 0u;
      v104 = 0u;
      v105 = 0u;
      obj = *(id *)(*(_QWORD *)(a1 + 32) + 32);
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v102, v112, 16);
      v13 = v11;
      if (v12)
      {
        v14 = v12;
        v15 = *(_QWORD *)v103;
        v70 = v13;
        do
        {
          v16 = 0;
          v72 = v14;
          do
          {
            if (*(_QWORD *)v103 != v15)
              objc_enumerationMutation(obj);
            v17 = *(_QWORD *)(*((_QWORD *)&v102 + 1) + 8 * (_QWORD)v16);
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(p_vtable + 237, "annotationUuidFromDictionaryRepresentation:", v17));
            if (v18)
            {
              v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v76, "objectForKey:", v18));
              v20 = v19;
              if (v19)
              {
                v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "objectForKey:", CFSTR("annotationDeleted")));
                if ((objc_msgSend(v21, "BOOLValue") & 1) == 0)
                {
                  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "objectForKey:", CFSTR("annotationModificationDate")));
                  if (v22)
                  {
                    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(p_vtable + 237, "lastModificationFromDictionaryRepresentation:", v17));
                    objc_msgSend(v22, "timeIntervalSince1970");
                    if ((unint64_t)objc_msgSend(v23, "unsignedLongLongValue") > (unint64_t)v24)
                    {
                      objc_msgSend(v69, "addObject:", v18);
                      ((void (*)(_QWORD *, uint64_t))v68[2])(v68, v17);
                    }

                    p_vtable = (void **)(IMViewControllerTransition + 24);
                  }
                  else
                  {
                    objc_msgSend(v69, "addObject:", v18);
                    ((void (*)(_QWORD *, uint64_t))v68[2])(v68, v17);
                  }

                  v13 = v70;
                }

                v14 = v72;
              }
              else
              {
                objc_msgSend(v71, "addObject:", v18);
              }

            }
            v16 = (char *)v16 + 1;
          }
          while (v14 != v16);
          v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v102, v112, 16);
        }
        while (v14);
      }

      v8 = v63;
      v7 = v64;
      v9 = v62;
    }
    else
    {
      objc_msgSend(v6, "addObjectsFromArray:", v5);
      v13 = v11;
    }

    objc_autoreleasePoolPop(v7);
    v100 = 0u;
    v101 = 0u;
    v98 = 0u;
    v99 = 0u;
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v79, "allKeys"));
    v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v98, v111, 16);
    if (v26)
    {
      v27 = v26;
      v28 = *(_QWORD *)v99;
      do
      {
        for (i = 0; i != v27; i = (char *)i + 1)
        {
          if (*(_QWORD *)v99 != v28)
            objc_enumerationMutation(v25);
          v30 = *(_QWORD *)(*((_QWORD *)&v98 + 1) + 8 * (_QWORD)i);
          v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v79, "objectForKey:", v30));
          v94 = 0u;
          v95 = 0u;
          v96 = 0u;
          v97 = 0u;
          v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v94, v110, 16);
          if (v32)
          {
            v33 = v32;
            v34 = *(_QWORD *)v95;
            do
            {
              for (j = 0; j != v33; j = (char *)j + 1)
              {
                if (*(_QWORD *)v95 != v34)
                  objc_enumerationMutation(v31);
                objc_msgSend(*(id *)(a1 + 32), "acknowledgeMergingAnnotationsWithAssetVersionMismatch:assetID:provider:", *(_QWORD *)(*((_QWORD *)&v94 + 1) + 8 * (_QWORD)j), v30, *(_QWORD *)(a1 + 40));
              }
              v33 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v94, v110, 16);
            }
            while (v33);
          }

        }
        v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v98, v111, 16);
      }
      while (v27);
    }

    v36 = v71;
    v37 = v66;
    v3 = v67;
    if (objc_msgSend(v71, "count") || objc_msgSend(v69, "count"))
    {
      v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:](NSDictionary, "dictionaryWithObjects:forKeys:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32), v66));
      if (objc_msgSend(v71, "count"))
      {
        v39 = [IMCoalescedAction alloc];
        v91[0] = _NSConcreteStackBlock;
        v91[1] = 3221225472;
        v91[2] = sub_CAAB0;
        v91[3] = &unk_28B808;
        v92 = *(id *)(a1 + 40);
        v77 = v67;
        v93 = v77;
        v40 = -[IMCoalescedAction initWithAction:](v39, "initWithAction:", v91);
        v87 = 0u;
        v88 = 0u;
        v89 = 0u;
        v90 = 0u;
        v41 = v71;
        v42 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v87, v109, 16);
        if (v42)
        {
          v43 = v42;
          v44 = *(_QWORD *)v88;
          do
          {
            for (k = 0; k != v43; k = (char *)k + 1)
            {
              if (*(_QWORD *)v88 != v44)
                objc_enumerationMutation(v41);
              v46 = *(_QWORD *)(*((_QWORD *)&v87 + 1) + 8 * (_QWORD)k);
              v47 = objc_autoreleasePoolPush();
              v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "objectForKey:", v46));
              if (v48)
              {
                v49 = objc_msgSend(v77, "newByClass:", objc_opt_class(AEAnnotation));
                objc_msgSend(v49, "deserializeFromDictionary:trustedSource:", v48, 1);

              }
              -[IMCoalescedAction increaseCount](v40, "increaseCount");

              objc_autoreleasePoolPop(v47);
            }
            v43 = objc_msgSend(v41, "countByEnumeratingWithState:objects:count:", &v87, v109, 16);
          }
          while (v43);
        }

        if (objc_msgSend(v77, "hasChanges"))
          objc_msgSend(*(id *)(a1 + 40), "saveManagedObjectContext:", v77);
        objc_msgSend(v77, "reset");

        v37 = v66;
        v3 = v67;
        v36 = v71;
      }
      if (objc_msgSend(v69, "count"))
      {
        v50 = [IMCoalescedAction alloc];
        v84[0] = _NSConcreteStackBlock;
        v84[1] = 3221225472;
        v84[2] = sub_CAABC;
        v84[3] = &unk_28B808;
        v85 = *(id *)(a1 + 40);
        v51 = v3;
        v86 = v51;
        v52 = -[IMCoalescedAction initWithAction:](v50, "initWithAction:", v84);
        v73 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("annotationUuid"), v69));
        obja = v51;
        v80 = 0u;
        v81 = 0u;
        v82 = 0u;
        v83 = 0u;
        v78 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotation annotationsForPredicate:inManagedObjectContext:](AEAnnotation, "annotationsForPredicate:inManagedObjectContext:"));
        v53 = objc_msgSend(v78, "countByEnumeratingWithState:objects:count:", &v80, v108, 16);
        if (v53)
        {
          v54 = v53;
          v55 = *(_QWORD *)v81;
          do
          {
            for (m = 0; m != v54; m = (char *)m + 1)
            {
              if (*(_QWORD *)v81 != v55)
                objc_enumerationMutation(v78);
              v57 = *(void **)(*((_QWORD *)&v80 + 1) + 8 * (_QWORD)m);
              v58 = objc_autoreleasePoolPush();
              v59 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v57, "annotationUuid"));
              v60 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "objectForKey:", v59));

              if (v60)
                objc_msgSend(v57, "deserializeFromDictionary:trustedSource:", v60, 1);
              -[IMCoalescedAction increaseCount](v52, "increaseCount");

              objc_autoreleasePoolPop(v58);
            }
            v54 = objc_msgSend(v78, "countByEnumeratingWithState:objects:count:", &v80, v108, 16);
          }
          while (v54);
        }

        if (objc_msgSend(obja, "hasChanges"))
          objc_msgSend(*(id *)(a1 + 40), "saveManagedObjectContext:", obja);
        objc_msgSend(obja, "reset");

        v37 = v66;
        v3 = v67;
        v36 = v71;
      }

    }
    if (objc_msgSend(v3, "hasChanges"))
      objc_msgSend(*(id *)(a1 + 40), "saveManagedObjectContext:", v3);
    objc_msgSend(v3, "reset");
    objc_msgSend(v65, "report");

  }
  objc_msgSend(*(id *)(a1 + 32), "cacheGeneration");

}

void sub_CA9DC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  BOOL v5;
  void *v6;
  id v7;

  v3 = a2;
  v7 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotation annotationAssetIDFromDictionaryRepresentation:](AEAnnotation, "annotationAssetIDFromDictionaryRepresentation:", v3));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("futureProofing3")));

  if (v4)
    v5 = v7 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v7));
    if (!v6)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
      objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v6, v7);
    }
    objc_msgSend(v6, "addObject:", v4);

  }
}

id sub_CAAB0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "saveManagedObjectContext:", *(_QWORD *)(a1 + 40));
}

id sub_CAABC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "saveManagedObjectContext:", *(_QWORD *)(a1 + 40));
}

void sub_CB4B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_CB4D0(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *WeakRetained;
  BOOL v5;
  void *v6;
  _QWORD *v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && WeakRetained[2])
  {
    if (WeakRetained[3])
      v5 = a3 == 0;
    else
      v5 = 1;
    if (!v5)
    {
      v7 = WeakRetained;
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
      objc_msgSend(v6, "emitShareEventWithTracker:propertyProvider:", v7[2], v7[3]);

      WeakRetained = v7;
    }
  }

}

id BCDragRepresentationFactoryFileExtensionForUTI(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v6;
  unsigned __int8 v7;

  if (!a1)
  {
    v2 = 0;
    return v2;
  }
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[UTType typeWithIdentifier:](UTType, "typeWithIdentifier:", a1));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "preferredFilenameExtension"));
  if (!v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[UTType typeWithIdentifier:](UTType, "typeWithIdentifier:", CFSTR("com.apple.ibooks-container")));
    if ((objc_msgSend(v1, "conformsToType:", v3) & 1) == 0)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(+[UTType typeWithIdentifier:](UTType, "typeWithIdentifier:", CFSTR("com.apple.ibooks")));
      if (!objc_msgSend(v1, "conformsToType:", v4))
      {
        v6 = (void *)objc_claimAutoreleasedReturnValue(+[UTType typeWithIdentifier:](UTType, "typeWithIdentifier:", CFSTR("com.apple.ibooks-folder")));
        v7 = objc_msgSend(v1, "conformsToType:", v6);

        if ((v7 & 1) == 0)
        {
          v2 = 0;
          goto LABEL_8;
        }
        goto LABEL_7;
      }

    }
LABEL_7:
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAssetUtilities pathExtensionForContentType:](BKAssetUtilities, "pathExtensionForContentType:", 4));
  }
LABEL_8:

  return v2;
}

id BCDragRepresentationFactoryFileExtensionForURLAndUTI(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "pathExtension"));
  v5 = v4;
  if (!v4 || objc_msgSend(v4, "isEqualToString:", CFSTR("tmp")))
  {
    v6 = BCDragRepresentationFactoryFileExtensionForUTI((uint64_t)v3);
    v7 = objc_claimAutoreleasedReturnValue(v6);

    v5 = (void *)v7;
  }

  return v5;
}

void sub_CBC24(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  void (**v6)(void);
  void (**v7)(void);
  void (*v8)(void);
  id v9;

  v9 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "dataRepresentation"));
  v6 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  v7 = v6;
  if (v5)
  {
    if (v6)
    {
      v8 = v6[2];
LABEL_6:
      v8();
    }
  }
  else if (v6)
  {
    v8 = v6[2];
    goto LABEL_6;
  }

}

id sub_CBF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(a1 + 32), "bkReplaceTemplatePlaceholder:withString:", a2, a3);
}

void sub_CC448(uint64_t a1, void *a2)
{
  void *v2;
  void (**v3)(id, void *, _QWORD);
  id v4;
  void *v5;
  void *v6;
  const __CFString *v7;
  id v8;

  v7 = CFSTR("assetID");
  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = objc_msgSend(v2, "copy");
  v8 = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v8, &v7, 1));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPropertyListSerialization dataWithPropertyList:format:options:error:](NSPropertyListSerialization, "dataWithPropertyList:format:options:error:", v5, 200, 0, 0));
  v3[2](v3, v6, 0);

}

uint64_t sub_CC52C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;

  v3 = a2;
  v4 = *(id *)(a1 + 32);
  if (objc_msgSend(*(id *)(a1 + 40), "contentType") == (char *)&dword_4 + 2)
  {
    v5 = sub_CC674(*(void **)(a1 + 32));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = v6;
    if (v6)
    {
      v8 = v6;

      v4 = v8;
    }

  }
  if ((objc_msgSend(v4, "bc_isUbiquitousPromise") & 1) != 0)
  {
    v9 = objc_msgSend(objc_alloc((Class)NSFileCoordinator), "initWithFilePresenter:", 0);
    v16 = 0;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_CC80C;
    v13[3] = &unk_290A70;
    v14 = 0;
    v15 = v3;
    objc_msgSend(v9, "coordinateReadingItemAtURL:options:error:byAccessor:", v4, 1, &v16, v13);
    v10 = v16;

  }
  else
  {
    v11 = objc_retainBlock(v3);
    v9 = v11;
    if (v11)
      (*((void (**)(id, id, uint64_t, _QWORD))v11 + 2))(v11, v4, 1, 0);
  }

  return 0;
}

id sub_CC674(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:", v1, &__NSArray0__struct, 2, &stru_290B50));

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v5)
  {
    v6 = v5;
    v7 = 0;
    v8 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v4);
        v10 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "pathExtension", (_QWORD)v13));
        if (v11
          && +[BKAssetUtilities isAudiobookTrackContentType:](BKAssetUtilities, "isAudiobookTrackContentType:", +[BKAssetUtilities contentTypeForExtension:](BKAssetUtilities, "contentTypeForExtension:", v11)))
        {
          if (v7)
          {

            goto LABEL_14;
          }
          v7 = v10;
        }

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v6)
        continue;
      break;
    }
  }
  else
  {
LABEL_14:
    v7 = 0;
  }

  return v7;
}

void sub_CC80C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 40));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id, uint64_t, _QWORD))v3 + 2))(v3, v5, 1, *(_QWORD *)(a1 + 32));

}

uint64_t sub_CC924(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unint64_t v5;
  BOOL v6;
  unint64_t v8;
  void (**v9)(id, id, _QWORD);
  _BCDragStoreURLProvider *v10;
  void *v11;
  _BCDragStoreURLProvider *v12;
  id v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeID"));
  v5 = (unint64_t)objc_msgSend(*(id *)(a1 + 32), "contentType");
  if (v4)
    v6 = v5 > 6;
  else
    v6 = 1;
  if (v6 || ((1 << v5) & 0x53) == 0)
  {
    v13 = BCDragAndDropLog();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_1B7024(v14, v15, v16, v17, v18, v19, v20, v21);

    v22 = objc_retainBlock(v3);
    v23 = v22;
    if (v22)
      (*((void (**)(id, _QWORD, _QWORD))v22 + 2))(v22, 0, 0);

  }
  else
  {
    v8 = v5;
    v9 = (void (**)(id, id, _QWORD))objc_retainBlock(v3);
    if (v9)
    {
      v10 = [_BCDragStoreURLProvider alloc];
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storeURL"));
      v12 = -[_BCDragStoreURLProvider initWithStoreID:contentType:storeURL:](v10, "initWithStoreID:contentType:storeURL:", v4, v8, v11);
      v9[2](v9, v12, 0);

    }
  }

  return 0;
}

NSMutableString *sub_CCB18(void *a1)
{
  id v1;
  NSMutableString *v2;
  uint64_t v3;
  void *v4;
  const __CFString *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  v1 = a1;
  v2 = objc_opt_new(NSMutableString);
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "title"));
  v4 = (void *)v3;
  if (v3)
    v5 = (const __CFString *)v3;
  else
    v5 = &stru_296430;
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@%@%@"), &stru_296430, v5, &stru_296430));
  -[NSMutableString appendString:](v2, "appendString:", v6);

  switch((unint64_t)objc_msgSend(v1, "contentType"))
  {
    case 1uLL:
    case 4uLL:
    case 6uLL:
      v7 = objc_alloc_init((Class)NSMutableArray);
      objc_msgSend(v7, "addObject:", CFSTR("\n"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "author"));
      if (objc_msgSend(v8, "length"))
      {
        objc_msgSend(v7, "addObject:", v8);
        objc_msgSend(v7, "addObject:", CFSTR("\n"));
      }
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "storeURL"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "absoluteString"));

      if (objc_msgSend(v10, "length"))
      {
        objc_msgSend(v7, "addObject:", v10);
        objc_msgSend(v7, "addObject:", CFSTR("\n"));
      }

      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", &stru_296430));
      goto LABEL_17;
    case 3uLL:
      v7 = objc_alloc_init((Class)NSMutableArray);
      objc_msgSend(v7, "addObject:", CFSTR("\n"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "author"));
      if (objc_msgSend(v8, "length"))
      {
        objc_msgSend(v7, "addObject:", v8);
        objc_msgSend(v7, "addObject:", CFSTR("\n"));
      }
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypePDF, "preferredFilenameExtension"));
      if (objc_msgSend(v12, "length"))
      {
        objc_msgSend(v7, "addObject:", &stru_296430);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "uppercaseString"));
        objc_msgSend(v7, "addObject:", v13);

        objc_msgSend(v7, "addObject:", &stru_296430);
        objc_msgSend(v7, "addObject:", CFSTR("\n"));
      }
      if ((uint64_t)objc_msgSend(v1, "fileSize") >= 1)
      {
        objc_msgSend(v7, "addObject:", &stru_296430);
        v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSByteCountFormatter stringFromByteCount:countStyle:](NSByteCountFormatter, "stringFromByteCount:countStyle:", objc_msgSend(v1, "fileSize"), 3));
        objc_msgSend(v7, "addObject:", v14);

        objc_msgSend(v7, "addObject:", &stru_296430);
        objc_msgSend(v7, "addObject:", CFSTR("\n"));
      }
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "componentsJoinedByString:", &stru_296430));

LABEL_17:
      if (v11)
      {
        -[NSMutableString appendString:](v2, "appendString:", v11);

      }
      break;
    default:
      break;
  }

  return v2;
}

uint64_t sub_CCE20(uint64_t a1, id a2)
{
  void (**v3)(id, void *, _QWORD);
  void *v4;

  v3 = (void (**)(id, void *, _QWORD))objc_retainBlock(a2);
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataUsingEncoding:", 4));
    v3[2](v3, v4, 0);

  }
  return 0;
}

id sub_CCF40(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "title"));
  if (!objc_msgSend(v2, "length"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "localFileURL"));
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastPathComponent"));

    v2 = (void *)v4;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringByDeletingPathExtension"));

  if (objc_msgSend(v1, "contentType") == (char *)&dword_0 + 3)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypePDF, "preferredFilenameExtension"));
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByAppendingPathExtension:", v6));

    v5 = (void *)v7;
  }

  return v5;
}

void sub_CD39C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_CD3B8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_CD3C8(uint64_t a1)
{

}

void sub_CD3D0(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

BOOL sub_CD424(id a1, NSURL *a2, NSError *a3)
{
  NSURL *v4;
  NSError *v5;
  id v6;
  NSObject *v7;

  v4 = a2;
  v5 = a3;
  v6 = BCDragAndDropLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    sub_1B708C((uint64_t)v4, (uint64_t)v5, v7);

  return 0;
}

id sub_CD734(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

void sub_CF388(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;

  v2 = objc_alloc_init((Class)objc_opt_class(*(_QWORD *)(a1 + 32), a2));
  v3 = (void *)qword_30DC78;
  qword_30DC78 = (uint64_t)v2;

}

void sub_CF664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_CF688(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "_mocDidSave:", v3);

}

void sub_CF9D8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_CFB4C(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v2 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("AEAnnotation"));
  objc_msgSend(v2, "setReturnsObjectsAsFaults:", 0);
  objc_msgSend(v2, "setPredicate:", *(_QWORD *)(a1 + 32));
  v3 = *(void **)(a1 + 40);
  v8 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v2, &v8));
  v5 = v8;
  v6 = objc_retainBlock(*(id *)(a1 + 48));
  v7 = v6;
  if (v6)
    (*((void (**)(id, void *, id))v6 + 2))(v6, v4, v5);

}

void sub_CFCD0(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v2 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("AEAnnotation"));
  objc_msgSend(v2, "setReturnsObjectsAsFaults:", 0);
  objc_msgSend(v2, "setPredicate:", *(_QWORD *)(a1 + 32));
  v3 = *(void **)(a1 + 40);
  v8 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "executeFetchRequest:error:", v2, &v8));
  v5 = v8;
  v6 = objc_retainBlock(*(id *)(a1 + 48));
  v7 = v6;
  if (v6)
    (*((void (**)(id, void *, id))v6 + 2))(v6, v4, v5);

}

void sub_CFE54(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unsigned int v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  _QWORD v24[2];

  v2 = objc_claimAutoreleasedReturnValue(+[AEAnnotation predicateForGlobalAnnotationsWithAssetIDs:](AEAnnotation, "predicateForGlobalAnnotationsWithAssetIDs:", *(_QWORD *)(a1 + 32)));
  v3 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("AEAnnotation"));
  v4 = objc_msgSend(objc_alloc((Class)NSSortDescriptor), "initWithKey:ascending:", CFSTR("annotationAssetID"), 1);
  v20 = objc_msgSend(objc_alloc((Class)NSSortDescriptor), "initWithKey:ascending:", CFSTR("annotationCreationDate"), 1);
  v21 = v4;
  v24[0] = v4;
  v24[1] = v20;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v24, 2));
  objc_msgSend(v3, "setSortDescriptors:", v5);

  objc_msgSend(v3, "setReturnsObjectsAsFaults:", 0);
  v22 = (void *)v2;
  objc_msgSend(v3, "setPredicate:", v2);
  v6 = *(void **)(a1 + 40);
  v23 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "executeFetchRequest:error:", v3, &v23));
  v8 = v23;
  v9 = objc_msgSend(v7, "mutableCopy");

  v10 = (char *)objc_msgSend(v9, "count");
  if ((uint64_t)v10 >= 2)
  {
    v11 = v10 - 1;
    do
    {
      v12 = (uint64_t)(v11 - 1);
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectAtIndexedSubscript:"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "annotationAssetID"));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectAtIndexedSubscript:", v12));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "annotationAssetID"));
      v17 = objc_msgSend(v14, "isEqualToString:", v16);

      if (v17)
        objc_msgSend(v9, "removeObjectAtIndex:", v12);
      v11 = (char *)v12;
    }
    while (v12 > 0);
  }
  v18 = objc_retainBlock(*(id *)(a1 + 48));
  v19 = v18;
  if (v18)
    (*((void (**)(id, id, id))v18 + 2))(v18, v9, v8);

}

void sub_D0178(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *i;
  uint64_t v17;
  void *v18;
  void (**v19)(id, id, id, _QWORD *);
  id v20;
  void *v21;
  void *v22;
  _QWORD v23[4];
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  id v29;
  _BYTE v30[128];

  v2 = objc_claimAutoreleasedReturnValue(+[AEAnnotation predicateForAnnotationsIncludingDeletedWithUUIDInList:](AEAnnotation, "predicateForAnnotationsIncludingDeletedWithUUIDInList:", *(_QWORD *)(a1 + 32)));
  v3 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("AEAnnotation"));
  objc_msgSend(v3, "setReturnsObjectsAsFaults:", 0);
  v22 = (void *)v2;
  objc_msgSend(v3, "setPredicate:", v2);
  v4 = *(void **)(a1 + 40);
  v29 = 0;
  v21 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v3, &v29));
  v20 = v29;
  v6 = objc_msgSend(v5, "mutableCopy");

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithArray:](NSMutableSet, "setWithArray:", *(_QWORD *)(a1 + 32)));
  v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "valueForKey:", CFSTR("annotationUuid")));
  v9 = (void *)v8;
  if (v8)
    v10 = (void *)v8;
  else
    v10 = &__NSArray0__struct;
  v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v10));
  objc_msgSend(v7, "minusSet:", v11);

  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v12 = v7;
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v14; i = (char *)i + 1)
      {
        if (*(_QWORD *)v26 != v15)
          objc_enumerationMutation(v12);
        v17 = *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
        v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("AEAnnotation"), *(_QWORD *)(a1 + 40)));
        objc_msgSend(v18, "setAnnotationUuid:", v17);
        objc_msgSend(v6, "addObject:", v18);

      }
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
    }
    while (v14);
  }

  v19 = (void (**)(id, id, id, _QWORD *))objc_retainBlock(*(id *)(a1 + 48));
  if (v19)
  {
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_D0428;
    v23[3] = &unk_28B960;
    v24 = *(id *)(a1 + 40);
    v19[2](v19, v6, v20, v23);

  }
}

void sub_D0428(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;

  v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_D0484;
  v2[3] = &unk_28B960;
  v3 = v1;
  objc_msgSend(v3, "performBlockAndWait:", v2);

}

void sub_D0484(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  id v6;

  if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
  {
    v2 = *(void **)(a1 + 32);
    v6 = 0;
    objc_msgSend(v2, "save:", &v6);
    v3 = v6;
    if (v3)
    {
      v4 = BKMobileCloudSyncAnnotationsLog();
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1B7120();

    }
  }
}

void sub_D05E8(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *i;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  double v33;
  void (**v34)(id, void *, id, _QWORD *);
  id v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  id obj;
  _QWORD v41[4];
  id v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  id v47;
  _BYTE v48[128];
  _QWORD v49[2];

  v2 = objc_claimAutoreleasedReturnValue(+[AEAnnotation predicateForGlobalAnnotationsWithAssetIDs:](AEAnnotation, "predicateForGlobalAnnotationsWithAssetIDs:", *(_QWORD *)(a1 + 32)));
  v3 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("AEAnnotation"));
  v4 = objc_msgSend(objc_alloc((Class)NSSortDescriptor), "initWithKey:ascending:", CFSTR("annotationAssetID"), 1);
  v36 = objc_msgSend(objc_alloc((Class)NSSortDescriptor), "initWithKey:ascending:", CFSTR("annotationCreationDate"), 1);
  v37 = v4;
  v49[0] = v4;
  v49[1] = v36;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v49, 2));
  objc_msgSend(v3, "setSortDescriptors:", v5);

  objc_msgSend(v3, "setReturnsObjectsAsFaults:", 0);
  v39 = (void *)v2;
  objc_msgSend(v3, "setPredicate:", v2);
  v6 = *(void **)(a1 + 40);
  v47 = 0;
  v38 = v3;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "executeFetchRequest:error:", v3, &v47));
  v35 = v47;
  v8 = objc_msgSend(v7, "mutableCopy");

  v9 = (char *)objc_msgSend(v8, "count");
  if ((uint64_t)v9 >= 2)
  {
    v10 = v9 - 1;
    do
    {
      v11 = (uint64_t)(v10 - 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "annotationAssetID"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectAtIndexedSubscript:", v11));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "annotationAssetID"));
      v16 = objc_msgSend(v13, "isEqualToString:", v15);

      if (v16)
        objc_msgSend(v8, "removeObjectAtIndex:", v11);
      v10 = (char *)v11;
    }
    while (v11 > 0);
  }
  v17 = a1;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableSet setWithArray:](NSMutableSet, "setWithArray:", *(_QWORD *)(a1 + 32)));
  v19 = v8;
  v20 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "valueForKey:", CFSTR("annotationAssetID")));
  v21 = (void *)v20;
  if (v20)
    v22 = (void *)v20;
  else
    v22 = &__NSArray0__struct;
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v22));
  objc_msgSend(v18, "minusSet:", v23);

  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  obj = v18;
  v24 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v48, 16);
  if (v24)
  {
    v25 = v24;
    v26 = *(_QWORD *)v44;
    do
    {
      for (i = 0; i != v25; i = (char *)i + 1)
      {
        if (*(_QWORD *)v44 != v26)
          objc_enumerationMutation(obj);
        v28 = *(_QWORD *)(*((_QWORD *)&v43 + 1) + 8 * (_QWORD)i);
        v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("AEAnnotation"), *(_QWORD *)(v17 + 40)));
        objc_msgSend(v29, "setAnnotationAssetID:", v28);
        v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
        objc_msgSend(v29, "setAnnotationCreationDate:", v30);

        objc_msgSend(v29, "setAnnotationCreatorIdentifier:", CFSTR("com~apple~iBooks"));
        v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
        objc_msgSend(v29, "setAnnotationModificationDate:", v31);

        v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSString UUID](NSString, "UUID"));
        objc_msgSend(v29, "setAnnotationUuid:", v32);

        objc_msgSend(v29, "setAnnotationType:", 3);
        LODWORD(v33) = 0;
        objc_msgSend(v29, "setReadingProgressHighWaterMark:", v33);
        objc_msgSend(v8, "addObject:", v29);

      }
      v25 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v48, 16);
    }
    while (v25);
  }

  v34 = (void (**)(id, void *, id, _QWORD *))objc_retainBlock(*(id *)(v17 + 48));
  if (v34)
  {
    v41[0] = _NSConcreteStackBlock;
    v41[1] = 3221225472;
    v41[2] = sub_D0A4C;
    v41[3] = &unk_28B960;
    v42 = *(id *)(v17 + 40);
    v34[2](v34, v19, v35, v41);

  }
}

void sub_D0A4C(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;

  v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_D0AAC;
  v2[3] = &unk_28B960;
  v3 = v1;
  objc_msgSend(v3, "performBlock:", v2);

}

void sub_D0AAC(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  id v6;

  if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
  {
    v2 = *(void **)(a1 + 32);
    v6 = 0;
    objc_msgSend(v2, "save:", &v6);
    v3 = v6;
    if (v3)
    {
      v4 = BKMobileCloudSyncAnnotationsLog();
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1B7120();

    }
  }
}

void sub_D0BF0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "privateUserEditMOC"));
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "privateUserEditMOC"));
  LODWORD(v3) = objc_msgSend(v4, "hasChanges");

  if ((_DWORD)v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "privateUserEditMOC"));
    v9 = 0;
    objc_msgSend(v5, "save:", &v9);
    v6 = v9;

    if (v6)
    {
      v7 = BKMobileCloudSyncAnnotationsLog();
      v8 = objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1B7120();

    }
  }
}

void sub_D0D84(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  id v9;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "privateUserEditMOC"));
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "privateUserEditMOC"));
  LODWORD(v3) = objc_msgSend(v4, "hasChanges");

  if ((_DWORD)v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "privateUserEditMOC"));
    v9 = 0;
    objc_msgSend(v5, "save:", &v9);
    v6 = v9;

    if (v6)
    {
      v7 = BKMobileCloudSyncAnnotationsLog();
      v8 = objc_claimAutoreleasedReturnValue(v7);
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
        sub_1B7120();

    }
  }
}

void sub_D0F20(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  void (**v10)(id, void *, id, _QWORD *);
  _QWORD v11[4];
  id v12;
  id v13;

  v2 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BCCloudSyncVersions"));
  objc_msgSend(v2, "setReturnsObjectsAsFaults:", 0);
  objc_msgSend(v2, "setFetchLimit:", 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("dataType == %@"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = *(void **)(a1 + 40);
  v13 = 0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "executeFetchRequest:error:", v2, &v13));
  v6 = v13;
  if (v6)
  {
    v7 = BKMobileCloudSyncAnnotationsLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B7180();

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "firstObject"));
  if (!v9)
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("BCCloudSyncVersions"), *(_QWORD *)(a1 + 40)));
    objc_msgSend(v9, "setDataType:", *(_QWORD *)(a1 + 32));
  }
  v10 = (void (**)(id, void *, id, _QWORD *))objc_retainBlock(*(id *)(a1 + 48));
  if (v10)
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_D10C8;
    v11[3] = &unk_28B960;
    v12 = *(id *)(a1 + 40);
    v10[2](v10, v9, v6, v11);

  }
}

void sub_D10C8(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;

  v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_D1128;
  v2[3] = &unk_28B960;
  v3 = v1;
  objc_msgSend(v3, "performBlock:", v2);

}

void sub_D1128(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  id v6;

  if (objc_msgSend(*(id *)(a1 + 32), "hasChanges"))
  {
    v2 = *(void **)(a1 + 32);
    v6 = 0;
    objc_msgSend(v2, "save:", &v6);
    v3 = v6;
    if (v3)
    {
      v4 = BKMobileCloudSyncAnnotationsLog();
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        sub_1B7120();

    }
  }
}

void sub_D12AC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  char *v8;
  id v9;
  NSObject *v10;
  id v11;
  NSObject *v12;
  AEAnnotationManagedObjectContext *v13;
  id v14;
  AEAnnotationManagedObjectContext *v15;
  _QWORD v16[4];
  AEAnnotationManagedObjectContext *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint8_t buf[4];
  const char *v23;
  __int16 v24;
  const char *v25;
  __int16 v26;
  int v27;

  objc_msgSend(*(id *)(a1 + 32), "setPersistentStoreCoordinator:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription entityForName:inManagedObjectContext:](NSEntityDescription, "entityForName:inManagedObjectContext:", CFSTR("AEAnnotation"), *(_QWORD *)(a1 + 32)));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "attributesByName"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "allKeys"));

  v5 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("AEAnnotation"));
  objc_msgSend(v5, "setReturnsObjectsAsFaults:", 0);
  objc_msgSend(v5, "setResultType:", 2);
  objc_msgSend(v5, "setIncludesPropertyValues:", 1);
  objc_msgSend(v5, "setPropertiesToFetch:", v4);
  objc_msgSend(v5, "setPredicate:", *(_QWORD *)(a1 + 48));
  v6 = *(void **)(a1 + 32);
  v21 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "executeFetchRequest:error:", v5, &v21));
  v8 = (char *)v21;
  if (!v5)
  {
    v9 = BCIMLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315650;
      v23 = "-[AEAnnotationProvider migrateFromPersistentStoreCoordinator:toPersistentStoreCoordinator:withPredicate:]_block_invoke";
      v24 = 2080;
      v25 = "/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/AEAnnotation/AEAnnotationProvider.m";
      v26 = 1024;
      v27 = 474;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_INFO, "%s %s:%d", buf, 0x1Cu);
    }

    v11 = BCIMLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      _os_log_impl(&dword_0, v12, OS_LOG_TYPE_INFO, "@\"Could not fetch local objects: %@\"", buf, 0xCu);
    }

  }
  v13 = -[AEAnnotationManagedObjectContext initWithConcurrencyType:]([AEAnnotationManagedObjectContext alloc], "initWithConcurrencyType:", 1);
  -[AEAnnotationManagedObjectContext setSessionContextType:](v13, "setSessionContextType:", 3);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_D1550;
  v16[3] = &unk_28FB98;
  v17 = v13;
  v18 = *(id *)(a1 + 56);
  v19 = v7;
  v20 = *(_QWORD *)(a1 + 64);
  v14 = v7;
  v15 = v13;
  -[AEAnnotationManagedObjectContext performBlockAndWait:](v15, "performBlockAndWait:", v16);

}

id sub_D1550(uint64_t a1)
{
  id v2;
  id v3;
  void *i;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *j;
  uint64_t v12;
  void *v13;
  id obj;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  _BYTE v27[128];

  objc_msgSend(*(id *)(a1 + 32), "setPersistentStoreCoordinator:", *(_QWORD *)(a1 + 40));
  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v17 = a1;
  obj = *(id *)(a1 + 48);
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
  if (v2)
  {
    v3 = v2;
    v16 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v23 != v16)
          objc_enumerationMutation(obj);
        v5 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)i);
        v6 = objc_msgSend(*(id *)(v17 + 32), "newByClass:", objc_opt_class(AEAnnotation));
        v18 = 0u;
        v19 = 0u;
        v20 = 0u;
        v21 = 0u;
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "allKeys"));
        v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
        if (v8)
        {
          v9 = v8;
          v10 = *(_QWORD *)v19;
          do
          {
            for (j = 0; j != v9; j = (char *)j + 1)
            {
              if (*(_QWORD *)v19 != v10)
                objc_enumerationMutation(v7);
              v12 = *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)j);
              v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "valueForKey:", v12));
              objc_msgSend(v6, "setValue:forKey:", v13, v12);

            }
            v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
          }
          while (v9);
        }

      }
      v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
    }
    while (v3);
  }

  return objc_msgSend(*(id *)(v17 + 56), "saveManagedObjectContext:", *(_QWORD *)(v17 + 32));
}

void sub_D18F4(uint64_t a1)
{
  NSFetchRequest *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  _BYTE v26[128];

  v2 = objc_opt_new(NSFetchRequest);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription entityForName:inManagedObjectContext:](NSEntityDescription, "entityForName:inManagedObjectContext:", CFSTR("AEAnnotation"), *(_QWORD *)(a1 + 32)));
  -[NSFetchRequest setEntity:](v2, "setEntity:", v3);

  -[NSFetchRequest setResultType:](v2, "setResultType:", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", CFSTR("annotationModificationDate"), CFSTR("futureProofing6"), 0));
  -[NSFetchRequest setPropertiesToFetch:](v2, "setPropertiesToFetch:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("futureProofing6 == %@"), v5));
  -[NSFetchRequest setPredicate:](v2, "setPredicate:", v6);

  v7 = *(void **)(a1 + 32);
  v25 = 0;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "executeFetchRequest:error:", v2, &v25));
  v9 = v25;
  objc_msgSend(v9, "logRecursively");
  if (!v9)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v20 = v8;
    v10 = v8;
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v22;
      do
      {
        v14 = 0;
        do
        {
          if (*(_QWORD *)v22 != v13)
            objc_enumerationMutation(v10);
          v15 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)v14);
          v16 = objc_autoreleasePoolPush();
          v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "annotationModificationDate"));
          objc_msgSend(v15, "setUserModificationDate:", v17);

          objc_autoreleasePoolPop(v16);
          v14 = (char *)v14 + 1;
        }
        while (v12 != v14);
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v21, v26, 16);
      }
      while (v12);
    }

    v18 = *(void **)(a1 + 40);
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", 0));
    objc_msgSend(v18, "setMetadataObject:forKey:", v19, CFSTR("Annotations-Update-Version"));

    objc_msgSend(*(id *)(a1 + 40), "saveManagedObjectContext:", *(_QWORD *)(a1 + 32));
    v8 = v20;
  }

}

void sub_D1DB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 96));
  _Unwind_Resume(a1);
}

id sub_D1DD8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "mergeChangesFromContextDidSaveNotification:", *(_QWORD *)(a1 + 40));
}

id sub_D1DE4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "mergeChangesFromContextDidSaveNotification:", *(_QWORD *)(a1 + 40));
}

id sub_D1DF0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "mergeChangesFromContextDidSaveNotification:", *(_QWORD *)(a1 + 40));
}

void sub_D20D4(id a1)
{
  IMFileWatcher *v1;
  void *v2;

  v1 = objc_alloc_init(IMFileWatcher);
  v2 = (void *)qword_30DC88;
  qword_30DC88 = (uint64_t)v1;

}

id sub_D2240(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "enumerateKeysAndObjectsUsingBlock:", &stru_290C08);
}

void sub_D2250(id a1, id a2, IMFileWatcherPathGroup *a3, BOOL *a4)
{
  IMFileWatcherPathGroup *v4;

  v4 = a3;
  -[IMFileWatcherPathGroup invalidateEntries](v4, "invalidateEntries");
  -[IMFileWatcherPathGroup teardown](v4, "teardown");

}

uint64_t sub_D23A0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_D23B0(uint64_t a1)
{

}

void sub_D23B8(_QWORD *a1)
{
  IMFileWatcherPathGroup *v2;
  IMFileWatcherEntry *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  IMFileWatcherPathGroup *v8;

  v8 = (IMFileWatcherPathGroup *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 16), "objectForKey:", a1[5]));
  if (!v8)
  {
    v2 = -[IMFileWatcherPathGroup initWithFilePath:targetQueue:]([IMFileWatcherPathGroup alloc], "initWithFilePath:targetQueue:", a1[5], *(_QWORD *)(a1[4] + 8));
    if (!v2)
      goto LABEL_7;
    v8 = v2;
    objc_msgSend(*(id *)(a1[4] + 16), "setObject:forKey:", v2, a1[5]);
  }
  v3 = -[IMFileWatcherEntry initWithQueue:andBlock:]([IMFileWatcherEntry alloc], "initWithQueue:andBlock:", a1[6], a1[7]);
  v4 = *(_QWORD *)(a1[8] + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  if (!-[IMFileWatcherPathGroup addEntry:](v8, "addEntry:", *(_QWORD *)(*(_QWORD *)(a1[8] + 8) + 40)))
  {
    objc_msgSend(*(id *)(a1[4] + 16), "removeObjectForKey:", a1[5]);
    v6 = *(_QWORD *)(a1[8] + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = 0;

  }
  v2 = v8;
LABEL_7:

}

void sub_D2508(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = *(id *)(a1 + 32);
  v3 = *(void **)(*(_QWORD *)(a1 + 40) + 16);
  v8 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "filePath"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", v4));

  if (v5)
  {
    objc_msgSend(v5, "removeEntry:", v8);
    if (!objc_msgSend(v5, "numberOfEntries"))
    {
      objc_msgSend(v5, "teardown");
      v6 = *(void **)(*(_QWORD *)(a1 + 40) + 16);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "filePath"));
      objc_msgSend(v6, "removeObjectForKey:", v7);

    }
  }

}

NSObject *sub_D2ABC(uint64_t a1, id a2)
{
  int v3;
  int v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  _QWORD handler[4];
  int v10;

  v3 = open((const char *)objc_msgSend(objc_retainAutorelease(a2), "fileSystemRepresentation"), 2129920);
  if (v3 == -1)
    return 0;
  v4 = v3;
  v5 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_vnode, v3, 0x67uLL, *(dispatch_queue_t *)(*(_QWORD *)(a1 + 32) + 16));
  v6 = v5;
  if (v5)
  {
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_D2B84;
    handler[3] = &unk_290C50;
    v10 = v4;
    dispatch_source_set_cancel_handler(v5, handler);
    v7 = v6;
  }
  else
  {
    close(v4);
  }

  return v6;
}

uint64_t sub_D2B84(uint64_t a1)
{
  return close(*(_DWORD *)(a1 + 32));
}

uintptr_t sub_D2B8C(uint64_t a1)
{
  uintptr_t result;

  result = dispatch_source_get_data(*(dispatch_source_t *)(a1 + 32));
  if ((result & 0x61) != 0)
    return (uintptr_t)_objc_msgSend(*(id *)(a1 + 40), "handleDeleteOrRename");
  if ((result & 6) != 0)
    return (uintptr_t)_objc_msgSend(*(id *)(a1 + 40), "handleWrite");
  return result;
}

void sub_D2E14(id a1, IMFileWatcherEntry *a2, BOOL *a3)
{
  -[IMFileWatcherEntry invalidate](a2, "invalidate", a3);
}

id sub_D2F94(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return (id)objc_opt_self(*(_QWORD *)(a1 + 32));
}

uint64_t sub_D3400(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_D3410(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_D4238(id a1)
{
  dispatch_sync((dispatch_queue_t)qword_30DC98, &stru_290D48);
}

void sub_D424C(id a1)
{
  byte_30DCA0 = +[BCSyncUserDefaults _q_archivedICloudDriveSyncOptedInBeforeInitialTCCSync](BCSyncUserDefaults, "_q_archivedICloudDriveSyncOptedInBeforeInitialTCCSync");
}

void sub_D42B0(id a1)
{
  id v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (byte_30DCC0 == 1)
  {
    v1 = BCUbiquityEnabledLog();
    v2 = objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      sub_1B7214(v2, v3, v4, v5, v6, v7, v8, v9);

  }
  byte_30DCB0 = +[BCSyncUserDefaults _isICloudDriveSyncOptedIn](BCSyncUserDefaults, "_isICloudDriveSyncOptedIn");
}

void sub_D44FC(id a1)
{
  BCXPCUbiquityDisableServiceProxy *v1;

  v1 = objc_alloc_init(BCXPCUbiquityDisableServiceProxy);
  -[BCXPCUbiquityDisableServiceProxy syncIsLiverpoolAndUbiquityEnabledWithReply:](v1, "syncIsLiverpoolAndUbiquityEnabledWithReply:", &stru_290DE8);

}

void sub_D4534(id a1, BOOL a2, BOOL a3, NSError *a4)
{
  _BOOL4 v4;
  _BOOL8 v5;
  NSError *v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  const __CFString *v10;
  const __CFString *v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  int v15;
  const __CFString *v16;
  __int16 v17;
  const __CFString *v18;

  v4 = a3;
  v5 = a2;
  v6 = a4;
  v7 = BDSCloudKitLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if (v6)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B7248((uint64_t)v6, v9);
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v10 = CFSTR("NO");
      if (v5)
        v11 = CFSTR("YES");
      else
        v11 = CFSTR("NO");
      if (v4)
        v10 = CFSTR("YES");
      v15 = 138543618;
      v16 = v11;
      v17 = 2114;
      v18 = v10;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_INFO, "iCloud switches from XPC: CloudKit=%{public}@ iCloudDrive=%{public}@", (uint8_t *)&v15, 0x16u);
    }

    +[BCSyncUserDefaults _q_archivedICloudDriveSyncOptedInBeforeInitialTCCSync](BCSyncUserDefaults, "_q_archivedICloudDriveSyncOptedInBeforeInitialTCCSync");
    v9 = objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    if (-[NSObject BOOLForKey:](v9, "BOOLForKey:", CFSTR("BCSyncCloudKit")) != v5)
    {
      v12 = BDSCloudKitLog();
      v13 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v15 = 67109120;
        LODWORD(v16) = v5;
        _os_log_impl(&dword_0, v13, OS_LOG_TYPE_DEFAULT, "BCSyncUserDefaults: Setting BCSyncCloudKitUserDefaults to %{BOOL}d", (uint8_t *)&v15, 8u);
      }

      v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
      objc_msgSend(v14, "setBool:forKey:", v5, CFSTR("BCSyncCloudKit"));

    }
    byte_30DCC0 = 1;
  }

}

void sub_D4738(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[3];

  v3[0] = CFSTR("BCSyncCloudKit");
  v3[1] = CFSTR("BKLibrary.ReadingNow");
  v3[2] = CFSTR("BCSyncICloudDrive");
  v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v3, 3));
  v2 = (void *)qword_30DCC8;
  qword_30DCC8 = v1;

}

id sub_D4834(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[8];
  _QWORD v13[8];

  v12[0] = CFSTR("isSignedIntoICloud");
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isSignedIntoICloud")));
  v13[0] = v2;
  v12[1] = CFSTR("isCloudKitSyncOptedIn");
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isCloudKitSyncOptedIn")));
  v13[1] = v3;
  v12[2] = CFSTR("isICloudDriveSyncOptedIn");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isICloudDriveSyncOptedIn")));
  v13[2] = v4;
  v12[3] = CFSTR("collectionSyncEnabled");
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isCollectionSyncOptedIn")));
  v13[3] = v5;
  v12[4] = CFSTR("readingNowSyncEnabled");
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isReadingNowSyncOptedIn")));
  v13[4] = v6;
  v12[5] = CFSTR("annotationSyncEnabled");
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isAnnotationSyncOptedIn")));
  v13[5] = v7;
  v12[6] = CFSTR("isGlobalICloudDriveSyncOptedIn");
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isGlobalICloudDriveSyncOptedIn")));
  v13[6] = v8;
  v12[7] = CFSTR("isICloudDriveEnabledForBooks");
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(*(id *)(a1 + 32), "isICloudDriveEnabledForBooks")));
  v13[7] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v13, v12, 8));

  return v10;
}

void sub_D4BF0(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "layer"));
  objc_msgSend(v2, "addObject:", v3);

}

int64_t sub_D554C(id a1, id a2, id a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  int64_t v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v4 = a2;
  v5 = a3;
  v6 = v4;
  v7 = v5;
  objc_msgSend(v6, "yStart");
  v9 = v8;
  objc_msgSend(v7, "yStart");
  if (v9 >= v10)
  {
    objc_msgSend(v6, "yStart");
    v13 = v12;
    objc_msgSend(v7, "yStart");
    if (v13 <= v14)
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "annotation"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "annotationUuid"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "annotation"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "annotationUuid"));
      v11 = (int64_t)objc_msgSend(v16, "compare:", v18);

    }
    else
    {
      v11 = 1;
    }
  }
  else
  {
    v11 = -1;
  }

  return v11;
}

id _BCLightLevelLog(void)
{
  if (qword_30DCE0 != -1)
    dispatch_once(&qword_30DCE0, &stru_290E90);
  return (id)qword_30DCD8;
}

void sub_D6020(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BCLightLevel");
  v2 = (void *)qword_30DCD8;
  qword_30DCD8 = (uint64_t)v1;

}

void sub_D608C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_D60E0(id a1)
{
  BCLightLevelController *v1;
  void *v2;

  v1 = objc_alloc_init(BCLightLevelController);
  v2 = (void *)qword_30DCE8;
  qword_30DCE8 = (uint64_t)v1;

  dispatch_async((dispatch_queue_t)&_dispatch_main_q, &stru_290EE8);
}

void sub_D6198(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_D61EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)BCLightLevelController;
  -[_Unwind_Exception dealloc](&a9, "dealloc");
  _Unwind_Resume(a1);
}

void sub_D6290(uint64_t a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  byte_30DCF8 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "isAlsSupported");
  if ((byte_30DCF8 & 1) == 0)
  {
    v1 = _BCLightLevelLog();
    v2 = objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_0, v2, OS_LOG_TYPE_ERROR, "Light level monitoring reported unavailable!", v3, 2u);
    }

  }
}

void sub_D634C(id a1)
{
  id v1;
  NSObject *v2;
  uint8_t v3[16];

  byte_30DD08 = MGGetBoolAnswer(CFSTR("ambient-light-sensor"));
  if ((byte_30DD08 & 1) == 0)
  {
    v1 = _BCLightLevelLog();
    v2 = objc_claimAutoreleasedReturnValue(v1);
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_0, v2, OS_LOG_TYPE_ERROR, "No Light level sensor to monitor!", v3, 2u);
    }

  }
}

void sub_D6494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_D6508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_D6848(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_D6A24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_D6B4C(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_D6B68(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  _QWORD block[5];
  id v7;
  char v8;

  v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_D6BF0;
  block[3] = &unk_290F30;
  v8 = *(_BYTE *)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v7 = v4;
  v5 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_D6BF0(id result)
{
  void *v1;

  if (!*((_BYTE *)result + 48))
  {
    v1 = (void *)*((_QWORD *)result + 4);
    objc_msgSend(*((id *)result + 5), "floatValue");
    return objc_msgSend(v1, "_updateCurrentLightLevel:force:", objc_msgSend(v1, "_luxToLightLevel:"), 0);
  }
  return result;
}

void sub_D6D38(id a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationThemeDescriptionsProvider themeDescriptionsDictionary](AEAnnotationThemeDescriptionsProvider, "themeDescriptionsDictionary"));
  v2 = (void *)qword_30DD20;
  qword_30DD20 = v1;

}

void sub_D76D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DD30;
  qword_30DD30 = v1;

}

void sub_D7728(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DD40;
  qword_30DD40 = v1;

}

void sub_D777C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DD50;
  qword_30DD50 = v1;

}

void sub_D77D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DD60;
  qword_30DD60 = v1;

}

void sub_D7824(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DD70;
  qword_30DD70 = v1;

}

void sub_D7878(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DD80;
  qword_30DD80 = v1;

}

void sub_D78CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DD90;
  qword_30DD90 = v1;

}

void sub_D7920(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DDA0;
  qword_30DDA0 = v1;

}

void sub_D7974(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DDB0;
  qword_30DDB0 = v1;

}

void sub_D79C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DDC0;
  qword_30DDC0 = v1;

}

void sub_D7A1C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DDD0;
  qword_30DDD0 = v1;

}

void sub_D7A70(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DDE0;
  qword_30DDE0 = v1;

}

void sub_D7AC4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DDF0;
  qword_30DDF0 = v1;

}

void sub_D7B18(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE00;
  qword_30DE00 = v1;

}

void sub_D7B6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE10;
  qword_30DE10 = v1;

}

void sub_D7BC0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE20;
  qword_30DE20 = v1;

}

void sub_D7C14(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE30;
  qword_30DE30 = v1;

}

void sub_D83AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE40;
  qword_30DE40 = v1;

}

void sub_D8400(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE50;
  qword_30DE50 = v1;

}

void sub_D8454(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE60;
  qword_30DE60 = v1;

}

void sub_D84A8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE70;
  qword_30DE70 = v1;

}

void sub_D84FC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE80;
  qword_30DE80 = v1;

}

void sub_D8550(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DE90;
  qword_30DE90 = v1;

}

void sub_D85A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DEA0;
  qword_30DEA0 = v1;

}

void sub_D85F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DEB0;
  qword_30DEB0 = v1;

}

void sub_D864C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DEC0;
  qword_30DEC0 = v1;

}

void sub_D86A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DED0;
  qword_30DED0 = v1;

}

void sub_D86F4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DEE0;
  qword_30DEE0 = v1;

}

void sub_D8748(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DEF0;
  qword_30DEF0 = v1;

}

void sub_D879C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF00;
  qword_30DF00 = v1;

}

void sub_D87F0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF10;
  qword_30DF10 = v1;

}

void sub_D8844(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF20;
  qword_30DF20 = v1;

}

void sub_D8898(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF30;
  qword_30DF30 = v1;

}

void sub_D88EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF40;
  qword_30DF40 = v1;

}

void sub_D9084(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF50;
  qword_30DF50 = v1;

}

void sub_D90D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF60;
  qword_30DF60 = v1;

}

void sub_D912C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF70;
  qword_30DF70 = v1;

}

void sub_D9180(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF80;
  qword_30DF80 = v1;

}

void sub_D91D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DF90;
  qword_30DF90 = v1;

}

void sub_D9228(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DFA0;
  qword_30DFA0 = v1;

}

void sub_D927C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DFB0;
  qword_30DFB0 = v1;

}

void sub_D92D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DFC0;
  qword_30DFC0 = v1;

}

void sub_D9324(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DFD0;
  qword_30DFD0 = v1;

}

void sub_D9378(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DFE0;
  qword_30DFE0 = v1;

}

void sub_D93CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30DFF0;
  qword_30DFF0 = v1;

}

void sub_D9420(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E000;
  qword_30E000 = v1;

}

void sub_D9474(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E010;
  qword_30E010 = v1;

}

void sub_D94C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E020;
  qword_30E020 = v1;

}

void sub_D951C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E030;
  qword_30E030 = v1;

}

void sub_D9570(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E040;
  qword_30E040 = v1;

}

void sub_D95C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E050;
  qword_30E050 = v1;

}

void sub_D9D5C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E060;
  qword_30E060 = v1;

}

void sub_D9DB0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E070;
  qword_30E070 = v1;

}

void sub_D9E04(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E080;
  qword_30E080 = v1;

}

void sub_D9E58(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E090;
  qword_30E090 = v1;

}

void sub_D9EAC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E0A0;
  qword_30E0A0 = v1;

}

void sub_D9F00(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E0B0;
  qword_30E0B0 = v1;

}

void sub_D9F54(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E0C0;
  qword_30E0C0 = v1;

}

void sub_D9FA8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E0D0;
  qword_30E0D0 = v1;

}

void sub_D9FFC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E0E0;
  qword_30E0E0 = v1;

}

void sub_DA050(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E0F0;
  qword_30E0F0 = v1;

}

void sub_DA0A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E100;
  qword_30E100 = v1;

}

void sub_DA0F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E110;
  qword_30E110 = v1;

}

void sub_DA14C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E120;
  qword_30E120 = v1;

}

void sub_DA1A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E130;
  qword_30E130 = v1;

}

void sub_DA1F4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E140;
  qword_30E140 = v1;

}

void sub_DA248(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E150;
  qword_30E150 = v1;

}

void sub_DA29C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E160;
  qword_30E160 = v1;

}

void sub_DAA34(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E170;
  qword_30E170 = v1;

}

void sub_DAA88(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E180;
  qword_30E180 = v1;

}

void sub_DAADC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E190;
  qword_30E190 = v1;

}

void sub_DAB30(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E1A0;
  qword_30E1A0 = v1;

}

void sub_DAB84(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E1B0;
  qword_30E1B0 = v1;

}

void sub_DABD8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E1C0;
  qword_30E1C0 = v1;

}

void sub_DAC2C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E1D0;
  qword_30E1D0 = v1;

}

void sub_DAC80(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E1E0;
  qword_30E1E0 = v1;

}

void sub_DACD4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E1F0;
  qword_30E1F0 = v1;

}

void sub_DAD28(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E200;
  qword_30E200 = v1;

}

void sub_DAD7C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E210;
  qword_30E210 = v1;

}

void sub_DADD0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E220;
  qword_30E220 = v1;

}

void sub_DAE24(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E230;
  qword_30E230 = v1;

}

void sub_DAE78(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E240;
  qword_30E240 = v1;

}

void sub_DAECC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E250;
  qword_30E250 = v1;

}

void sub_DAF20(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E260;
  qword_30E260 = v1;

}

void sub_DAF74(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E270;
  qword_30E270 = v1;

}

void sub_DB70C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E280;
  qword_30E280 = v1;

}

void sub_DB760(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E290;
  qword_30E290 = v1;

}

void sub_DB7B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E2A0;
  qword_30E2A0 = v1;

}

void sub_DB808(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E2B0;
  qword_30E2B0 = v1;

}

void sub_DB85C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E2C0;
  qword_30E2C0 = v1;

}

void sub_DB8B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E2D0;
  qword_30E2D0 = v1;

}

void sub_DB904(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E2E0;
  qword_30E2E0 = v1;

}

void sub_DB958(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E2F0;
  qword_30E2F0 = v1;

}

void sub_DB9AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E300;
  qword_30E300 = v1;

}

void sub_DBA00(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E310;
  qword_30E310 = v1;

}

void sub_DBA54(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E320;
  qword_30E320 = v1;

}

void sub_DBAA8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E330;
  qword_30E330 = v1;

}

void sub_DBAFC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E340;
  qword_30E340 = v1;

}

void sub_DBB50(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E350;
  qword_30E350 = v1;

}

void sub_DBBA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E360;
  qword_30E360 = v1;

}

void sub_DBBF8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E370;
  qword_30E370 = v1;

}

void sub_DBC4C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E380;
  qword_30E380 = v1;

}

void sub_DC3E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E390;
  qword_30E390 = v1;

}

void sub_DC438(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E3A0;
  qword_30E3A0 = v1;

}

void sub_DC48C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E3B0;
  qword_30E3B0 = v1;

}

void sub_DC4E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E3C0;
  qword_30E3C0 = v1;

}

void sub_DC534(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E3D0;
  qword_30E3D0 = v1;

}

void sub_DC588(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E3E0;
  qword_30E3E0 = v1;

}

void sub_DC5DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E3F0;
  qword_30E3F0 = v1;

}

void sub_DC630(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E400;
  qword_30E400 = v1;

}

void sub_DC684(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E410;
  qword_30E410 = v1;

}

void sub_DC6D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E420;
  qword_30E420 = v1;

}

void sub_DC72C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E430;
  qword_30E430 = v1;

}

void sub_DC780(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E440;
  qword_30E440 = v1;

}

void sub_DC7D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E450;
  qword_30E450 = v1;

}

void sub_DC828(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E460;
  qword_30E460 = v1;

}

void sub_DC87C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E470;
  qword_30E470 = v1;

}

void sub_DC8D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E480;
  qword_30E480 = v1;

}

void sub_DC924(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E490;
  qword_30E490 = v1;

}

void sub_DC9EC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeItemForAnnotationStyle:propertyName:](AEAnnotationTheme, "themeItemForAnnotationStyle:propertyName:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("is_underline")));
  byte_30E4A0 = objc_msgSend(v1, "BOOLValue");

}

void sub_DD194(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E4B0;
  qword_30E4B0 = v1;

}

void sub_DD1E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E4C0;
  qword_30E4C0 = v1;

}

void sub_DD23C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E4D0;
  qword_30E4D0 = v1;

}

void sub_DD290(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E4E0;
  qword_30E4E0 = v1;

}

void sub_DD2E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E4F0;
  qword_30E4F0 = v1;

}

void sub_DD338(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E500;
  qword_30E500 = v1;

}

void sub_DD38C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E510;
  qword_30E510 = v1;

}

void sub_DD3E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E520;
  qword_30E520 = v1;

}

void sub_DD434(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E530;
  qword_30E530 = v1;

}

void sub_DD488(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E540;
  qword_30E540 = v1;

}

void sub_DD4DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E550;
  qword_30E550 = v1;

}

void sub_DD530(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E560;
  qword_30E560 = v1;

}

void sub_DD584(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E570;
  qword_30E570 = v1;

}

void sub_DD5D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E580;
  qword_30E580 = v1;

}

void sub_DD62C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E590;
  qword_30E590 = v1;

}

void sub_DD680(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E5A0;
  qword_30E5A0 = v1;

}

void sub_DD6D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E5B0;
  qword_30E5B0 = v1;

}

void sub_DDE6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E5C0;
  qword_30E5C0 = v1;

}

void sub_DDEC0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E5D0;
  qword_30E5D0 = v1;

}

void sub_DDF14(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E5E0;
  qword_30E5E0 = v1;

}

void sub_DDF68(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E5F0;
  qword_30E5F0 = v1;

}

void sub_DDFBC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E600;
  qword_30E600 = v1;

}

void sub_DE010(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E610;
  qword_30E610 = v1;

}

void sub_DE064(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E620;
  qword_30E620 = v1;

}

void sub_DE0B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E630;
  qword_30E630 = v1;

}

void sub_DE10C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E640;
  qword_30E640 = v1;

}

void sub_DE160(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E650;
  qword_30E650 = v1;

}

void sub_DE1B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E660;
  qword_30E660 = v1;

}

void sub_DE208(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E670;
  qword_30E670 = v1;

}

void sub_DE25C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E680;
  qword_30E680 = v1;

}

void sub_DE2B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E690;
  qword_30E690 = v1;

}

void sub_DE304(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E6A0;
  qword_30E6A0 = v1;

}

void sub_DE358(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E6B0;
  qword_30E6B0 = v1;

}

void sub_DE3AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E6C0;
  qword_30E6C0 = v1;

}

void sub_DEB44(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E6D0;
  qword_30E6D0 = v1;

}

void sub_DEB98(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E6E0;
  qword_30E6E0 = v1;

}

void sub_DEBEC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E6F0;
  qword_30E6F0 = v1;

}

void sub_DEC40(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E700;
  qword_30E700 = v1;

}

void sub_DEC94(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E710;
  qword_30E710 = v1;

}

void sub_DECE8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E720;
  qword_30E720 = v1;

}

void sub_DED3C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E730;
  qword_30E730 = v1;

}

void sub_DED90(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E740;
  qword_30E740 = v1;

}

void sub_DEDE4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E750;
  qword_30E750 = v1;

}

void sub_DEE38(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E760;
  qword_30E760 = v1;

}

void sub_DEE8C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E770;
  qword_30E770 = v1;

}

void sub_DEEE0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E780;
  qword_30E780 = v1;

}

void sub_DEF34(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E790;
  qword_30E790 = v1;

}

void sub_DEF88(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E7A0;
  qword_30E7A0 = v1;

}

void sub_DEFDC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E7B0;
  qword_30E7B0 = v1;

}

void sub_DF030(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E7C0;
  qword_30E7C0 = v1;

}

void sub_DF084(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E7D0;
  qword_30E7D0 = v1;

}

void sub_DF81C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E7E0;
  qword_30E7E0 = v1;

}

void sub_DF870(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E7F0;
  qword_30E7F0 = v1;

}

void sub_DF8C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E800;
  qword_30E800 = v1;

}

void sub_DF918(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E810;
  qword_30E810 = v1;

}

void sub_DF96C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E820;
  qword_30E820 = v1;

}

void sub_DF9C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E830;
  qword_30E830 = v1;

}

void sub_DFA14(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E840;
  qword_30E840 = v1;

}

void sub_DFA68(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E850;
  qword_30E850 = v1;

}

void sub_DFABC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E860;
  qword_30E860 = v1;

}

void sub_DFB10(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E870;
  qword_30E870 = v1;

}

void sub_DFB64(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E880;
  qword_30E880 = v1;

}

void sub_DFBB8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E890;
  qword_30E890 = v1;

}

void sub_DFC0C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E8A0;
  qword_30E8A0 = v1;

}

void sub_DFC60(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E8B0;
  qword_30E8B0 = v1;

}

void sub_DFCB4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E8C0;
  qword_30E8C0 = v1;

}

void sub_DFD08(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E8D0;
  qword_30E8D0 = v1;

}

void sub_DFD5C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E8E0;
  qword_30E8E0 = v1;

}

void sub_E04F4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E8F0;
  qword_30E8F0 = v1;

}

void sub_E0548(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E900;
  qword_30E900 = v1;

}

void sub_E059C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E910;
  qword_30E910 = v1;

}

void sub_E05F0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E920;
  qword_30E920 = v1;

}

void sub_E0644(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E930;
  qword_30E930 = v1;

}

void sub_E0698(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E940;
  qword_30E940 = v1;

}

void sub_E06EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E950;
  qword_30E950 = v1;

}

void sub_E0740(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E960;
  qword_30E960 = v1;

}

void sub_E0794(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E970;
  qword_30E970 = v1;

}

void sub_E07E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E980;
  qword_30E980 = v1;

}

void sub_E083C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E990;
  qword_30E990 = v1;

}

void sub_E0890(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E9A0;
  qword_30E9A0 = v1;

}

void sub_E08E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E9B0;
  qword_30E9B0 = v1;

}

void sub_E0938(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E9C0;
  qword_30E9C0 = v1;

}

void sub_E098C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E9D0;
  qword_30E9D0 = v1;

}

void sub_E09E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E9E0;
  qword_30E9E0 = v1;

}

void sub_E0A34(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30E9F0;
  qword_30E9F0 = v1;

}

void sub_E11CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA00;
  qword_30EA00 = v1;

}

void sub_E1220(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA10;
  qword_30EA10 = v1;

}

void sub_E1274(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA20;
  qword_30EA20 = v1;

}

void sub_E12C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA30;
  qword_30EA30 = v1;

}

void sub_E131C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA40;
  qword_30EA40 = v1;

}

void sub_E1370(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA50;
  qword_30EA50 = v1;

}

void sub_E13C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA60;
  qword_30EA60 = v1;

}

void sub_E1418(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA70;
  qword_30EA70 = v1;

}

void sub_E146C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA80;
  qword_30EA80 = v1;

}

void sub_E14C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EA90;
  qword_30EA90 = v1;

}

void sub_E1514(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EAA0;
  qword_30EAA0 = v1;

}

void sub_E1568(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EAB0;
  qword_30EAB0 = v1;

}

void sub_E15BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EAC0;
  qword_30EAC0 = v1;

}

void sub_E1610(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EAD0;
  qword_30EAD0 = v1;

}

void sub_E1664(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EAE0;
  qword_30EAE0 = v1;

}

void sub_E16B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EAF0;
  qword_30EAF0 = v1;

}

void sub_E170C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB00;
  qword_30EB00 = v1;

}

void sub_E1EA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB10;
  qword_30EB10 = v1;

}

void sub_E1EF8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB20;
  qword_30EB20 = v1;

}

void sub_E1F4C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB30;
  qword_30EB30 = v1;

}

void sub_E1FA0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB40;
  qword_30EB40 = v1;

}

void sub_E1FF4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB50;
  qword_30EB50 = v1;

}

void sub_E2048(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB60;
  qword_30EB60 = v1;

}

void sub_E209C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB70;
  qword_30EB70 = v1;

}

void sub_E20F0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB80;
  qword_30EB80 = v1;

}

void sub_E2144(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EB90;
  qword_30EB90 = v1;

}

void sub_E2198(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EBA0;
  qword_30EBA0 = v1;

}

void sub_E21EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EBB0;
  qword_30EBB0 = v1;

}

void sub_E2240(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EBC0;
  qword_30EBC0 = v1;

}

void sub_E2294(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EBD0;
  qword_30EBD0 = v1;

}

void sub_E22E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EBE0;
  qword_30EBE0 = v1;

}

void sub_E233C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EBF0;
  qword_30EBF0 = v1;

}

void sub_E2390(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC00;
  qword_30EC00 = v1;

}

void sub_E23E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC10;
  qword_30EC10 = v1;

}

void sub_E24AC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeItemForAnnotationStyle:propertyName:](AEAnnotationTheme, "themeItemForAnnotationStyle:propertyName:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("is_underline")));
  byte_30EC20 = objc_msgSend(v1, "BOOLValue");

}

void sub_E2C54(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC30;
  qword_30EC30 = v1;

}

void sub_E2CA8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC40;
  qword_30EC40 = v1;

}

void sub_E2CFC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC50;
  qword_30EC50 = v1;

}

void sub_E2D50(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC60;
  qword_30EC60 = v1;

}

void sub_E2DA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC70;
  qword_30EC70 = v1;

}

void sub_E2DF8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC80;
  qword_30EC80 = v1;

}

void sub_E2E4C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EC90;
  qword_30EC90 = v1;

}

void sub_E2EA0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ECA0;
  qword_30ECA0 = v1;

}

void sub_E2EF4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ECB0;
  qword_30ECB0 = v1;

}

void sub_E2F48(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ECC0;
  qword_30ECC0 = v1;

}

void sub_E2F9C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ECD0;
  qword_30ECD0 = v1;

}

void sub_E2FF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ECE0;
  qword_30ECE0 = v1;

}

void sub_E3044(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ECF0;
  qword_30ECF0 = v1;

}

void sub_E3098(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED00;
  qword_30ED00 = v1;

}

void sub_E30EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED10;
  qword_30ED10 = v1;

}

void sub_E3140(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED20;
  qword_30ED20 = v1;

}

void sub_E3194(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED30;
  qword_30ED30 = v1;

}

void sub_E392C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED40;
  qword_30ED40 = v1;

}

void sub_E3980(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED50;
  qword_30ED50 = v1;

}

void sub_E39D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED60;
  qword_30ED60 = v1;

}

void sub_E3A28(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED70;
  qword_30ED70 = v1;

}

void sub_E3A7C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED80;
  qword_30ED80 = v1;

}

void sub_E3AD0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30ED90;
  qword_30ED90 = v1;

}

void sub_E3B24(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EDA0;
  qword_30EDA0 = v1;

}

void sub_E3B78(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EDB0;
  qword_30EDB0 = v1;

}

void sub_E3BCC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EDC0;
  qword_30EDC0 = v1;

}

void sub_E3C20(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EDD0;
  qword_30EDD0 = v1;

}

void sub_E3C74(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EDE0;
  qword_30EDE0 = v1;

}

void sub_E3CC8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EDF0;
  qword_30EDF0 = v1;

}

void sub_E3D1C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE00;
  qword_30EE00 = v1;

}

void sub_E3D70(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE10;
  qword_30EE10 = v1;

}

void sub_E3DC4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE20;
  qword_30EE20 = v1;

}

void sub_E3E18(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE30;
  qword_30EE30 = v1;

}

void sub_E3E6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE40;
  qword_30EE40 = v1;

}

void sub_E4604(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE50;
  qword_30EE50 = v1;

}

void sub_E4658(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE60;
  qword_30EE60 = v1;

}

void sub_E46AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE70;
  qword_30EE70 = v1;

}

void sub_E4700(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE80;
  qword_30EE80 = v1;

}

void sub_E4754(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EE90;
  qword_30EE90 = v1;

}

void sub_E47A8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EEA0;
  qword_30EEA0 = v1;

}

void sub_E47FC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EEB0;
  qword_30EEB0 = v1;

}

void sub_E4850(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EEC0;
  qword_30EEC0 = v1;

}

void sub_E48A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EED0;
  qword_30EED0 = v1;

}

void sub_E48F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EEE0;
  qword_30EEE0 = v1;

}

void sub_E494C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EEF0;
  qword_30EEF0 = v1;

}

void sub_E49A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF00;
  qword_30EF00 = v1;

}

void sub_E49F4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF10;
  qword_30EF10 = v1;

}

void sub_E4A48(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF20;
  qword_30EF20 = v1;

}

void sub_E4A9C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF30;
  qword_30EF30 = v1;

}

void sub_E4AF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF40;
  qword_30EF40 = v1;

}

void sub_E4B44(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF50;
  qword_30EF50 = v1;

}

void sub_E52DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF60;
  qword_30EF60 = v1;

}

void sub_E5330(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF70;
  qword_30EF70 = v1;

}

void sub_E5384(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF80;
  qword_30EF80 = v1;

}

void sub_E53D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EF90;
  qword_30EF90 = v1;

}

void sub_E542C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EFA0;
  qword_30EFA0 = v1;

}

void sub_E5480(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EFB0;
  qword_30EFB0 = v1;

}

void sub_E54D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EFC0;
  qword_30EFC0 = v1;

}

void sub_E5528(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EFD0;
  qword_30EFD0 = v1;

}

void sub_E557C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EFE0;
  qword_30EFE0 = v1;

}

void sub_E55D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30EFF0;
  qword_30EFF0 = v1;

}

void sub_E5624(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F000;
  qword_30F000 = v1;

}

void sub_E5678(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F010;
  qword_30F010 = v1;

}

void sub_E56CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F020;
  qword_30F020 = v1;

}

void sub_E5720(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F030;
  qword_30F030 = v1;

}

void sub_E5774(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F040;
  qword_30F040 = v1;

}

void sub_E57C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F050;
  qword_30F050 = v1;

}

void sub_E581C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F060;
  qword_30F060 = v1;

}

void sub_E5FB4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F070;
  qword_30F070 = v1;

}

void sub_E6008(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F080;
  qword_30F080 = v1;

}

void sub_E605C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F090;
  qword_30F090 = v1;

}

void sub_E60B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F0A0;
  qword_30F0A0 = v1;

}

void sub_E6104(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F0B0;
  qword_30F0B0 = v1;

}

void sub_E6158(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F0C0;
  qword_30F0C0 = v1;

}

void sub_E61AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F0D0;
  qword_30F0D0 = v1;

}

void sub_E6200(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F0E0;
  qword_30F0E0 = v1;

}

void sub_E6254(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F0F0;
  qword_30F0F0 = v1;

}

void sub_E62A8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F100;
  qword_30F100 = v1;

}

void sub_E62FC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F110;
  qword_30F110 = v1;

}

void sub_E6350(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F120;
  qword_30F120 = v1;

}

void sub_E63A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F130;
  qword_30F130 = v1;

}

void sub_E63F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F140;
  qword_30F140 = v1;

}

void sub_E644C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F150;
  qword_30F150 = v1;

}

void sub_E64A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F160;
  qword_30F160 = v1;

}

void sub_E64F4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F170;
  qword_30F170 = v1;

}

void sub_E6C8C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F180;
  qword_30F180 = v1;

}

void sub_E6CE0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F190;
  qword_30F190 = v1;

}

void sub_E6D34(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F1A0;
  qword_30F1A0 = v1;

}

void sub_E6D88(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F1B0;
  qword_30F1B0 = v1;

}

void sub_E6DDC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F1C0;
  qword_30F1C0 = v1;

}

void sub_E6E30(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F1D0;
  qword_30F1D0 = v1;

}

void sub_E6E84(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F1E0;
  qword_30F1E0 = v1;

}

void sub_E6ED8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F1F0;
  qword_30F1F0 = v1;

}

void sub_E6F2C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F200;
  qword_30F200 = v1;

}

void sub_E6F80(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F210;
  qword_30F210 = v1;

}

void sub_E6FD4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F220;
  qword_30F220 = v1;

}

void sub_E7028(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F230;
  qword_30F230 = v1;

}

void sub_E707C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F240;
  qword_30F240 = v1;

}

void sub_E70D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F250;
  qword_30F250 = v1;

}

void sub_E7124(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F260;
  qword_30F260 = v1;

}

void sub_E7178(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F270;
  qword_30F270 = v1;

}

void sub_E71CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F280;
  qword_30F280 = v1;

}

void sub_E7964(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F290;
  qword_30F290 = v1;

}

void sub_E79B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F2A0;
  qword_30F2A0 = v1;

}

void sub_E7A0C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F2B0;
  qword_30F2B0 = v1;

}

void sub_E7A60(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F2C0;
  qword_30F2C0 = v1;

}

void sub_E7AB4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F2D0;
  qword_30F2D0 = v1;

}

void sub_E7B08(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F2E0;
  qword_30F2E0 = v1;

}

void sub_E7B5C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F2F0;
  qword_30F2F0 = v1;

}

void sub_E7BB0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F300;
  qword_30F300 = v1;

}

void sub_E7C04(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F310;
  qword_30F310 = v1;

}

void sub_E7C58(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F320;
  qword_30F320 = v1;

}

void sub_E7CAC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F330;
  qword_30F330 = v1;

}

void sub_E7D00(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F340;
  qword_30F340 = v1;

}

void sub_E7D54(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F350;
  qword_30F350 = v1;

}

void sub_E7DA8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F360;
  qword_30F360 = v1;

}

void sub_E7DFC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F370;
  qword_30F370 = v1;

}

void sub_E7E50(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F380;
  qword_30F380 = v1;

}

void sub_E7EA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F390;
  qword_30F390 = v1;

}

void sub_E7F6C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeItemForAnnotationStyle:propertyName:](AEAnnotationTheme, "themeItemForAnnotationStyle:propertyName:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("is_underline")));
  byte_30F3A0 = objc_msgSend(v1, "BOOLValue");

}

void sub_E8714(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F3B0;
  qword_30F3B0 = v1;

}

void sub_E8768(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F3C0;
  qword_30F3C0 = v1;

}

void sub_E87BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F3D0;
  qword_30F3D0 = v1;

}

void sub_E8810(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F3E0;
  qword_30F3E0 = v1;

}

void sub_E8864(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F3F0;
  qword_30F3F0 = v1;

}

void sub_E88B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F400;
  qword_30F400 = v1;

}

void sub_E890C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F410;
  qword_30F410 = v1;

}

void sub_E8960(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F420;
  qword_30F420 = v1;

}

void sub_E89B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F430;
  qword_30F430 = v1;

}

void sub_E8A08(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F440;
  qword_30F440 = v1;

}

void sub_E8A5C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F450;
  qword_30F450 = v1;

}

void sub_E8AB0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F460;
  qword_30F460 = v1;

}

void sub_E8B04(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F470;
  qword_30F470 = v1;

}

void sub_E8B58(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F480;
  qword_30F480 = v1;

}

void sub_E8BAC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F490;
  qword_30F490 = v1;

}

void sub_E8C00(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F4A0;
  qword_30F4A0 = v1;

}

void sub_E8C54(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F4B0;
  qword_30F4B0 = v1;

}

void sub_E93EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F4C0;
  qword_30F4C0 = v1;

}

void sub_E9440(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F4D0;
  qword_30F4D0 = v1;

}

void sub_E9494(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F4E0;
  qword_30F4E0 = v1;

}

void sub_E94E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F4F0;
  qword_30F4F0 = v1;

}

void sub_E953C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F500;
  qword_30F500 = v1;

}

void sub_E9590(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F510;
  qword_30F510 = v1;

}

void sub_E95E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F520;
  qword_30F520 = v1;

}

void sub_E9638(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F530;
  qword_30F530 = v1;

}

void sub_E968C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F540;
  qword_30F540 = v1;

}

void sub_E96E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F550;
  qword_30F550 = v1;

}

void sub_E9734(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F560;
  qword_30F560 = v1;

}

void sub_E9788(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F570;
  qword_30F570 = v1;

}

void sub_E97DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F580;
  qword_30F580 = v1;

}

void sub_E9830(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F590;
  qword_30F590 = v1;

}

void sub_E9884(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F5A0;
  qword_30F5A0 = v1;

}

void sub_E98D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F5B0;
  qword_30F5B0 = v1;

}

void sub_E992C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F5C0;
  qword_30F5C0 = v1;

}

void sub_EA0C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F5D0;
  qword_30F5D0 = v1;

}

void sub_EA118(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F5E0;
  qword_30F5E0 = v1;

}

void sub_EA16C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F5F0;
  qword_30F5F0 = v1;

}

void sub_EA1C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F600;
  qword_30F600 = v1;

}

void sub_EA214(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F610;
  qword_30F610 = v1;

}

void sub_EA268(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F620;
  qword_30F620 = v1;

}

void sub_EA2BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F630;
  qword_30F630 = v1;

}

void sub_EA310(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F640;
  qword_30F640 = v1;

}

void sub_EA364(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F650;
  qword_30F650 = v1;

}

void sub_EA3B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F660;
  qword_30F660 = v1;

}

void sub_EA40C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F670;
  qword_30F670 = v1;

}

void sub_EA460(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F680;
  qword_30F680 = v1;

}

void sub_EA4B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F690;
  qword_30F690 = v1;

}

void sub_EA508(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F6A0;
  qword_30F6A0 = v1;

}

void sub_EA55C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F6B0;
  qword_30F6B0 = v1;

}

void sub_EA5B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F6C0;
  qword_30F6C0 = v1;

}

void sub_EA604(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F6D0;
  qword_30F6D0 = v1;

}

void sub_EAD9C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F6E0;
  qword_30F6E0 = v1;

}

void sub_EADF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F6F0;
  qword_30F6F0 = v1;

}

void sub_EAE44(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F700;
  qword_30F700 = v1;

}

void sub_EAE98(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F710;
  qword_30F710 = v1;

}

void sub_EAEEC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F720;
  qword_30F720 = v1;

}

void sub_EAF40(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F730;
  qword_30F730 = v1;

}

void sub_EAF94(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F740;
  qword_30F740 = v1;

}

void sub_EAFE8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F750;
  qword_30F750 = v1;

}

void sub_EB03C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F760;
  qword_30F760 = v1;

}

void sub_EB090(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F770;
  qword_30F770 = v1;

}

void sub_EB0E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F780;
  qword_30F780 = v1;

}

void sub_EB138(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F790;
  qword_30F790 = v1;

}

void sub_EB18C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F7A0;
  qword_30F7A0 = v1;

}

void sub_EB1E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F7B0;
  qword_30F7B0 = v1;

}

void sub_EB234(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F7C0;
  qword_30F7C0 = v1;

}

void sub_EB288(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F7D0;
  qword_30F7D0 = v1;

}

void sub_EB2DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F7E0;
  qword_30F7E0 = v1;

}

void sub_EBA74(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F7F0;
  qword_30F7F0 = v1;

}

void sub_EBAC8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F800;
  qword_30F800 = v1;

}

void sub_EBB1C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F810;
  qword_30F810 = v1;

}

void sub_EBB70(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F820;
  qword_30F820 = v1;

}

void sub_EBBC4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F830;
  qword_30F830 = v1;

}

void sub_EBC18(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F840;
  qword_30F840 = v1;

}

void sub_EBC6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F850;
  qword_30F850 = v1;

}

void sub_EBCC0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F860;
  qword_30F860 = v1;

}

void sub_EBD14(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F870;
  qword_30F870 = v1;

}

void sub_EBD68(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F880;
  qword_30F880 = v1;

}

void sub_EBDBC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F890;
  qword_30F890 = v1;

}

void sub_EBE10(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F8A0;
  qword_30F8A0 = v1;

}

void sub_EBE64(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F8B0;
  qword_30F8B0 = v1;

}

void sub_EBEB8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F8C0;
  qword_30F8C0 = v1;

}

void sub_EBF0C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F8D0;
  qword_30F8D0 = v1;

}

void sub_EBF60(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F8E0;
  qword_30F8E0 = v1;

}

void sub_EBFB4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F8F0;
  qword_30F8F0 = v1;

}

void sub_EC74C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F900;
  qword_30F900 = v1;

}

void sub_EC7A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F910;
  qword_30F910 = v1;

}

void sub_EC7F4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F920;
  qword_30F920 = v1;

}

void sub_EC848(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F930;
  qword_30F930 = v1;

}

void sub_EC89C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F940;
  qword_30F940 = v1;

}

void sub_EC8F0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F950;
  qword_30F950 = v1;

}

void sub_EC944(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F960;
  qword_30F960 = v1;

}

void sub_EC998(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F970;
  qword_30F970 = v1;

}

void sub_EC9EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F980;
  qword_30F980 = v1;

}

void sub_ECA40(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F990;
  qword_30F990 = v1;

}

void sub_ECA94(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F9A0;
  qword_30F9A0 = v1;

}

void sub_ECAE8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F9B0;
  qword_30F9B0 = v1;

}

void sub_ECB3C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F9C0;
  qword_30F9C0 = v1;

}

void sub_ECB90(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F9D0;
  qword_30F9D0 = v1;

}

void sub_ECBE4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F9E0;
  qword_30F9E0 = v1;

}

void sub_ECC38(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30F9F0;
  qword_30F9F0 = v1;

}

void sub_ECC8C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA00;
  qword_30FA00 = v1;

}

void sub_ED424(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA10;
  qword_30FA10 = v1;

}

void sub_ED478(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA20;
  qword_30FA20 = v1;

}

void sub_ED4CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA30;
  qword_30FA30 = v1;

}

void sub_ED520(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA40;
  qword_30FA40 = v1;

}

void sub_ED574(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA50;
  qword_30FA50 = v1;

}

void sub_ED5C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA60;
  qword_30FA60 = v1;

}

void sub_ED61C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA70;
  qword_30FA70 = v1;

}

void sub_ED670(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA80;
  qword_30FA80 = v1;

}

void sub_ED6C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FA90;
  qword_30FA90 = v1;

}

void sub_ED718(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FAA0;
  qword_30FAA0 = v1;

}

void sub_ED76C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FAB0;
  qword_30FAB0 = v1;

}

void sub_ED7C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FAC0;
  qword_30FAC0 = v1;

}

void sub_ED814(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FAD0;
  qword_30FAD0 = v1;

}

void sub_ED868(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FAE0;
  qword_30FAE0 = v1;

}

void sub_ED8BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FAF0;
  qword_30FAF0 = v1;

}

void sub_ED910(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB00;
  qword_30FB00 = v1;

}

void sub_ED964(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB10;
  qword_30FB10 = v1;

}

void sub_EDA2C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeItemForAnnotationStyle:propertyName:](AEAnnotationTheme, "themeItemForAnnotationStyle:propertyName:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("is_underline")));
  byte_30FB20 = objc_msgSend(v1, "BOOLValue");

}

void sub_EE1D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB30;
  qword_30FB30 = v1;

}

void sub_EE228(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB40;
  qword_30FB40 = v1;

}

void sub_EE27C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB50;
  qword_30FB50 = v1;

}

void sub_EE2D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB60;
  qword_30FB60 = v1;

}

void sub_EE324(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB70;
  qword_30FB70 = v1;

}

void sub_EE378(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB80;
  qword_30FB80 = v1;

}

void sub_EE3CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FB90;
  qword_30FB90 = v1;

}

void sub_EE420(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FBA0;
  qword_30FBA0 = v1;

}

void sub_EE474(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FBB0;
  qword_30FBB0 = v1;

}

void sub_EE4C8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FBC0;
  qword_30FBC0 = v1;

}

void sub_EE51C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FBD0;
  qword_30FBD0 = v1;

}

void sub_EE570(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FBE0;
  qword_30FBE0 = v1;

}

void sub_EE5C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FBF0;
  qword_30FBF0 = v1;

}

void sub_EE618(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC00;
  qword_30FC00 = v1;

}

void sub_EE66C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC10;
  qword_30FC10 = v1;

}

void sub_EE6C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC20;
  qword_30FC20 = v1;

}

void sub_EE714(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC30;
  qword_30FC30 = v1;

}

void sub_EEEAC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC40;
  qword_30FC40 = v1;

}

void sub_EEF00(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC50;
  qword_30FC50 = v1;

}

void sub_EEF54(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC60;
  qword_30FC60 = v1;

}

void sub_EEFA8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC70;
  qword_30FC70 = v1;

}

void sub_EEFFC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC80;
  qword_30FC80 = v1;

}

void sub_EF050(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FC90;
  qword_30FC90 = v1;

}

void sub_EF0A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FCA0;
  qword_30FCA0 = v1;

}

void sub_EF0F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FCB0;
  qword_30FCB0 = v1;

}

void sub_EF14C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FCC0;
  qword_30FCC0 = v1;

}

void sub_EF1A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FCD0;
  qword_30FCD0 = v1;

}

void sub_EF1F4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FCE0;
  qword_30FCE0 = v1;

}

void sub_EF248(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FCF0;
  qword_30FCF0 = v1;

}

void sub_EF29C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD00;
  qword_30FD00 = v1;

}

void sub_EF2F0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD10;
  qword_30FD10 = v1;

}

void sub_EF344(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD20;
  qword_30FD20 = v1;

}

void sub_EF398(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD30;
  qword_30FD30 = v1;

}

void sub_EF3EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD40;
  qword_30FD40 = v1;

}

void sub_EFB84(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD50;
  qword_30FD50 = v1;

}

void sub_EFBD8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD60;
  qword_30FD60 = v1;

}

void sub_EFC2C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD70;
  qword_30FD70 = v1;

}

void sub_EFC80(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD80;
  qword_30FD80 = v1;

}

void sub_EFCD4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FD90;
  qword_30FD90 = v1;

}

void sub_EFD28(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FDA0;
  qword_30FDA0 = v1;

}

void sub_EFD7C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FDB0;
  qword_30FDB0 = v1;

}

void sub_EFDD0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FDC0;
  qword_30FDC0 = v1;

}

void sub_EFE24(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FDD0;
  qword_30FDD0 = v1;

}

void sub_EFE78(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FDE0;
  qword_30FDE0 = v1;

}

void sub_EFECC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FDF0;
  qword_30FDF0 = v1;

}

void sub_EFF20(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE00;
  qword_30FE00 = v1;

}

void sub_EFF74(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE10;
  qword_30FE10 = v1;

}

void sub_EFFC8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE20;
  qword_30FE20 = v1;

}

void sub_F001C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE30;
  qword_30FE30 = v1;

}

void sub_F0070(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE40;
  qword_30FE40 = v1;

}

void sub_F00C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE50;
  qword_30FE50 = v1;

}

void sub_F085C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE60;
  qword_30FE60 = v1;

}

void sub_F08B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE70;
  qword_30FE70 = v1;

}

void sub_F0904(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE80;
  qword_30FE80 = v1;

}

void sub_F0958(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FE90;
  qword_30FE90 = v1;

}

void sub_F09AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FEA0;
  qword_30FEA0 = v1;

}

void sub_F0A00(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FEB0;
  qword_30FEB0 = v1;

}

void sub_F0A54(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FEC0;
  qword_30FEC0 = v1;

}

void sub_F0AA8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FED0;
  qword_30FED0 = v1;

}

void sub_F0AFC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FEE0;
  qword_30FEE0 = v1;

}

void sub_F0B50(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FEF0;
  qword_30FEF0 = v1;

}

void sub_F0BA4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF00;
  qword_30FF00 = v1;

}

void sub_F0BF8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF10;
  qword_30FF10 = v1;

}

void sub_F0C4C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF20;
  qword_30FF20 = v1;

}

void sub_F0CA0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF30;
  qword_30FF30 = v1;

}

void sub_F0CF4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF40;
  qword_30FF40 = v1;

}

void sub_F0D48(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF50;
  qword_30FF50 = v1;

}

void sub_F0D9C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF60;
  qword_30FF60 = v1;

}

void sub_F1534(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF70;
  qword_30FF70 = v1;

}

void sub_F1588(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF80;
  qword_30FF80 = v1;

}

void sub_F15DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FF90;
  qword_30FF90 = v1;

}

void sub_F1630(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FFA0;
  qword_30FFA0 = v1;

}

void sub_F1684(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FFB0;
  qword_30FFB0 = v1;

}

void sub_F16D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FFC0;
  qword_30FFC0 = v1;

}

void sub_F172C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FFD0;
  qword_30FFD0 = v1;

}

void sub_F1780(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FFE0;
  qword_30FFE0 = v1;

}

void sub_F17D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_30FFF0;
  qword_30FFF0 = v1;

}

void sub_F1828(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310000;
  qword_310000 = v1;

}

void sub_F187C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310010;
  qword_310010 = v1;

}

void sub_F18D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310020;
  qword_310020 = v1;

}

void sub_F1924(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310030;
  qword_310030 = v1;

}

void sub_F1978(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310040;
  qword_310040 = v1;

}

void sub_F19CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310050;
  qword_310050 = v1;

}

void sub_F1A20(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310060;
  qword_310060 = v1;

}

void sub_F1A74(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310070;
  qword_310070 = v1;

}

void sub_F220C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310080;
  qword_310080 = v1;

}

void sub_F2260(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310090;
  qword_310090 = v1;

}

void sub_F22B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3100A0;
  qword_3100A0 = v1;

}

void sub_F2308(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3100B0;
  qword_3100B0 = v1;

}

void sub_F235C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3100C0;
  qword_3100C0 = v1;

}

void sub_F23B0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3100D0;
  qword_3100D0 = v1;

}

void sub_F2404(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3100E0;
  qword_3100E0 = v1;

}

void sub_F2458(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3100F0;
  qword_3100F0 = v1;

}

void sub_F24AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310100;
  qword_310100 = v1;

}

void sub_F2500(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310110;
  qword_310110 = v1;

}

void sub_F2554(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310120;
  qword_310120 = v1;

}

void sub_F25A8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310130;
  qword_310130 = v1;

}

void sub_F25FC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310140;
  qword_310140 = v1;

}

void sub_F2650(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310150;
  qword_310150 = v1;

}

void sub_F26A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310160;
  qword_310160 = v1;

}

void sub_F26F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310170;
  qword_310170 = v1;

}

void sub_F274C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310180;
  qword_310180 = v1;

}

void sub_F2EE4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310190;
  qword_310190 = v1;

}

void sub_F2F38(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3101A0;
  qword_3101A0 = v1;

}

void sub_F2F8C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3101B0;
  qword_3101B0 = v1;

}

void sub_F2FE0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3101C0;
  qword_3101C0 = v1;

}

void sub_F3034(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3101D0;
  qword_3101D0 = v1;

}

void sub_F3088(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3101E0;
  qword_3101E0 = v1;

}

void sub_F30DC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3101F0;
  qword_3101F0 = v1;

}

void sub_F3130(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310200;
  qword_310200 = v1;

}

void sub_F3184(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310210;
  qword_310210 = v1;

}

void sub_F31D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310220;
  qword_310220 = v1;

}

void sub_F322C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310230;
  qword_310230 = v1;

}

void sub_F3280(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310240;
  qword_310240 = v1;

}

void sub_F32D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310250;
  qword_310250 = v1;

}

void sub_F3328(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310260;
  qword_310260 = v1;

}

void sub_F337C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310270;
  qword_310270 = v1;

}

void sub_F33D0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310280;
  qword_310280 = v1;

}

void sub_F3424(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310290;
  qword_310290 = v1;

}

void sub_F34EC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeItemForAnnotationStyle:propertyName:](AEAnnotationTheme, "themeItemForAnnotationStyle:propertyName:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("is_underline")));
  byte_3102A0 = objc_msgSend(v1, "BOOLValue");

}

void sub_F3C94(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3102B0;
  qword_3102B0 = v1;

}

void sub_F3CE8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3102C0;
  qword_3102C0 = v1;

}

void sub_F3D3C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3102D0;
  qword_3102D0 = v1;

}

void sub_F3D90(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3102E0;
  qword_3102E0 = v1;

}

void sub_F3DE4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3102F0;
  qword_3102F0 = v1;

}

void sub_F3E38(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310300;
  qword_310300 = v1;

}

void sub_F3E8C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310310;
  qword_310310 = v1;

}

void sub_F3EE0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310320;
  qword_310320 = v1;

}

void sub_F3F34(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310330;
  qword_310330 = v1;

}

void sub_F3F88(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310340;
  qword_310340 = v1;

}

void sub_F3FDC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310350;
  qword_310350 = v1;

}

void sub_F4030(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310360;
  qword_310360 = v1;

}

void sub_F4084(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310370;
  qword_310370 = v1;

}

void sub_F40D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310380;
  qword_310380 = v1;

}

void sub_F412C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310390;
  qword_310390 = v1;

}

void sub_F4180(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3103A0;
  qword_3103A0 = v1;

}

void sub_F41D4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3103B0;
  qword_3103B0 = v1;

}

void sub_F496C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3103C0;
  qword_3103C0 = v1;

}

void sub_F49C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3103D0;
  qword_3103D0 = v1;

}

void sub_F4A14(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3103E0;
  qword_3103E0 = v1;

}

void sub_F4A68(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3103F0;
  qword_3103F0 = v1;

}

void sub_F4ABC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310400;
  qword_310400 = v1;

}

void sub_F4B10(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310410;
  qword_310410 = v1;

}

void sub_F4B64(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310420;
  qword_310420 = v1;

}

void sub_F4BB8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310430;
  qword_310430 = v1;

}

void sub_F4C0C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310440;
  qword_310440 = v1;

}

void sub_F4C60(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310450;
  qword_310450 = v1;

}

void sub_F4CB4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310460;
  qword_310460 = v1;

}

void sub_F4D08(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310470;
  qword_310470 = v1;

}

void sub_F4D5C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310480;
  qword_310480 = v1;

}

void sub_F4DB0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310490;
  qword_310490 = v1;

}

void sub_F4E04(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3104A0;
  qword_3104A0 = v1;

}

void sub_F4E58(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3104B0;
  qword_3104B0 = v1;

}

void sub_F4EAC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3104C0;
  qword_3104C0 = v1;

}

void sub_F5644(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3104D0;
  qword_3104D0 = v1;

}

void sub_F5698(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3104E0;
  qword_3104E0 = v1;

}

void sub_F56EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3104F0;
  qword_3104F0 = v1;

}

void sub_F5740(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310500;
  qword_310500 = v1;

}

void sub_F5794(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310510;
  qword_310510 = v1;

}

void sub_F57E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310520;
  qword_310520 = v1;

}

void sub_F583C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310530;
  qword_310530 = v1;

}

void sub_F5890(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310540;
  qword_310540 = v1;

}

void sub_F58E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310550;
  qword_310550 = v1;

}

void sub_F5938(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310560;
  qword_310560 = v1;

}

void sub_F598C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310570;
  qword_310570 = v1;

}

void sub_F59E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310580;
  qword_310580 = v1;

}

void sub_F5A34(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310590;
  qword_310590 = v1;

}

void sub_F5A88(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3105A0;
  qword_3105A0 = v1;

}

void sub_F5ADC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3105B0;
  qword_3105B0 = v1;

}

void sub_F5B30(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3105C0;
  qword_3105C0 = v1;

}

void sub_F5B84(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_text_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3105D0;
  qword_3105D0 = v1;

}

void sub_F631C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3105E0;
  qword_3105E0 = v1;

}

void sub_F6370(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3105F0;
  qword_3105F0 = v1;

}

void sub_F63C4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310600;
  qword_310600 = v1;

}

void sub_F6418(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310610;
  qword_310610 = v1;

}

void sub_F646C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310620;
  qword_310620 = v1;

}

void sub_F64C0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310630;
  qword_310630 = v1;

}

void sub_F6514(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310640;
  qword_310640 = v1;

}

void sub_F6568(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310650;
  qword_310650 = v1;

}

void sub_F65BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310660;
  qword_310660 = v1;

}

void sub_F6610(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310670;
  qword_310670 = v1;

}

void sub_F6664(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310680;
  qword_310680 = v1;

}

void sub_F66B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310690;
  qword_310690 = v1;

}

void sub_F670C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3106A0;
  qword_3106A0 = v1;

}

void sub_F6760(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3106B0;
  qword_3106B0 = v1;

}

void sub_F67B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3106C0;
  qword_3106C0 = v1;

}

void sub_F6808(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3106D0;
  qword_3106D0 = v1;

}

void sub_F685C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("highlight_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3106E0;
  qword_3106E0 = v1;

}

void sub_F6FF4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3106F0;
  qword_3106F0 = v1;

}

void sub_F7048(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310700;
  qword_310700 = v1;

}

void sub_F709C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310710;
  qword_310710 = v1;

}

void sub_F70F0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310720;
  qword_310720 = v1;

}

void sub_F7144(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310730;
  qword_310730 = v1;

}

void sub_F7198(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310740;
  qword_310740 = v1;

}

void sub_F71EC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310750;
  qword_310750 = v1;

}

void sub_F7240(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310760;
  qword_310760 = v1;

}

void sub_F7294(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310770;
  qword_310770 = v1;

}

void sub_F72E8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310780;
  qword_310780 = v1;

}

void sub_F733C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310790;
  qword_310790 = v1;

}

void sub_F7390(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3107A0;
  qword_3107A0 = v1;

}

void sub_F73E4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3107B0;
  qword_3107B0 = v1;

}

void sub_F7438(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3107C0;
  qword_3107C0 = v1;

}

void sub_F748C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3107D0;
  qword_3107D0 = v1;

}

void sub_F74E0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3107E0;
  qword_3107E0 = v1;

}

void sub_F7534(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3107F0;
  qword_3107F0 = v1;

}

void sub_F7CCC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310800;
  qword_310800 = v1;

}

void sub_F7D20(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310810;
  qword_310810 = v1;

}

void sub_F7D74(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310820;
  qword_310820 = v1;

}

void sub_F7DC8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310830;
  qword_310830 = v1;

}

void sub_F7E1C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310840;
  qword_310840 = v1;

}

void sub_F7E70(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310850;
  qword_310850 = v1;

}

void sub_F7EC4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310860;
  qword_310860 = v1;

}

void sub_F7F18(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310870;
  qword_310870 = v1;

}

void sub_F7F6C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310880;
  qword_310880 = v1;

}

void sub_F7FC0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310890;
  qword_310890 = v1;

}

void sub_F8014(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3108A0;
  qword_3108A0 = v1;

}

void sub_F8068(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3108B0;
  qword_3108B0 = v1;

}

void sub_F80BC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3108C0;
  qword_3108C0 = v1;

}

void sub_F8110(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3108D0;
  qword_3108D0 = v1;

}

void sub_F8164(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3108E0;
  qword_3108E0 = v1;

}

void sub_F81B8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3108F0;
  qword_3108F0 = v1;

}

void sub_F820C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310900;
  qword_310900 = v1;

}

void sub_F89A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310910;
  qword_310910 = v1;

}

void sub_F89F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310920;
  qword_310920 = v1;

}

void sub_F8A4C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310930;
  qword_310930 = v1;

}

void sub_F8AA0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310940;
  qword_310940 = v1;

}

void sub_F8AF4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310950;
  qword_310950 = v1;

}

void sub_F8B48(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310960;
  qword_310960 = v1;

}

void sub_F8B9C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310970;
  qword_310970 = v1;

}

void sub_F8BF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310980;
  qword_310980 = v1;

}

void sub_F8C44(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310990;
  qword_310990 = v1;

}

void sub_F8C98(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3109A0;
  qword_3109A0 = v1;

}

void sub_F8CEC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3109B0;
  qword_3109B0 = v1;

}

void sub_F8D40(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3109C0;
  qword_3109C0 = v1;

}

void sub_F8D94(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3109D0;
  qword_3109D0 = v1;

}

void sub_F8DE8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3109E0;
  qword_3109E0 = v1;

}

void sub_F8E3C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_3109F0;
  qword_3109F0 = v1;

}

void sub_F8E90(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310A00;
  qword_310A00 = v1;

}

void sub_F8EE4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme colorForAnnotationStyle:propertyName:pageTheme:](AEAnnotationTheme, "colorForAnnotationStyle:propertyName:pageTheme:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("note_marker_color"), *(_QWORD *)(a1 + 40)));
  v2 = (void *)qword_310A10;
  qword_310A10 = v1;

}

void sub_F8FAC(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeItemForAnnotationStyle:propertyName:](AEAnnotationTheme, "themeItemForAnnotationStyle:propertyName:", objc_msgSend(*(id *)(a1 + 32), "annotationStyle"), CFSTR("is_underline")));
  byte_310A20 = objc_msgSend(v1, "BOOLValue");

}

void sub_F9210(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("note_strikethrough_color")));

  if (v4)
    v2 = objc_claimAutoreleasedReturnValue(+[UIColor bc_colorWithSRGBDescription:](UIColor, "bc_colorWithSRGBDescription:", v4));
  else
    v2 = objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v3 = (void *)qword_310A30;
  qword_310A30 = v2;

}

void sub_F92D8(id a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("note_sidebar_text_color")));

  if (v4)
    v2 = objc_claimAutoreleasedReturnValue(+[UIColor bc_colorWithSRGBDescription:](UIColor, "bc_colorWithSRGBDescription:", v4));
  else
    v2 = objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v3 = (void *)qword_310A40;
  qword_310A40 = v2;

}

id sub_F9A90(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310A50;
  qword_310A50 = (uint64_t)v2;

  return objc_msgSend((id)qword_310A50, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9AD0(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310A60;
  qword_310A60 = (uint64_t)v2;

  return objc_msgSend((id)qword_310A60, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9B10(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310A70;
  qword_310A70 = (uint64_t)v2;

  return objc_msgSend((id)qword_310A70, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9B50(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310A80;
  qword_310A80 = (uint64_t)v2;

  return objc_msgSend((id)qword_310A80, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9B90(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310A90;
  qword_310A90 = (uint64_t)v2;

  return objc_msgSend((id)qword_310A90, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9BD0(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310AA0;
  qword_310AA0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310AA0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9C10(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310AB0;
  qword_310AB0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310AB0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9C50(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310AC0;
  qword_310AC0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310AC0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9C90(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310AD0;
  qword_310AD0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310AD0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9CD0(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310AE0;
  qword_310AE0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310AE0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9D10(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310AF0;
  qword_310AF0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310AF0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9D50(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310B00;
  qword_310B00 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B00, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9D90(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310B10;
  qword_310B10 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B10, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9DD0(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310B20;
  qword_310B20 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B20, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9E10(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310B30;
  qword_310B30 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B30, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9E50(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310B40;
  qword_310B40 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B40, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_F9E90(uint64_t a1)
{
  AEAnnotationThemeGreen *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeGreen);
  v3 = (void *)qword_310B50;
  qword_310B50 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B50, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA600(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310B60;
  qword_310B60 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B60, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA640(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310B70;
  qword_310B70 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B70, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA680(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310B80;
  qword_310B80 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B80, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA6C0(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310B90;
  qword_310B90 = (uint64_t)v2;

  return objc_msgSend((id)qword_310B90, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA700(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310BA0;
  qword_310BA0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310BA0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA740(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310BB0;
  qword_310BB0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310BB0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA780(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310BC0;
  qword_310BC0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310BC0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA7C0(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310BD0;
  qword_310BD0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310BD0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA800(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310BE0;
  qword_310BE0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310BE0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA840(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310BF0;
  qword_310BF0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310BF0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA880(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310C00;
  qword_310C00 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C00, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA8C0(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310C10;
  qword_310C10 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C10, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA900(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310C20;
  qword_310C20 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C20, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA940(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310C30;
  qword_310C30 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C30, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA980(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310C40;
  qword_310C40 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C40, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FA9C0(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310C50;
  qword_310C50 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C50, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FAA00(uint64_t a1)
{
  AEAnnotationThemeBlue *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeBlue);
  v3 = (void *)qword_310C60;
  qword_310C60 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C60, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB170(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310C70;
  qword_310C70 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C70, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB1B0(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310C80;
  qword_310C80 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C80, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB1F0(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310C90;
  qword_310C90 = (uint64_t)v2;

  return objc_msgSend((id)qword_310C90, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB230(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310CA0;
  qword_310CA0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310CA0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB270(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310CB0;
  qword_310CB0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310CB0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB2B0(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310CC0;
  qword_310CC0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310CC0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB2F0(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310CD0;
  qword_310CD0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310CD0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB330(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310CE0;
  qword_310CE0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310CE0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB370(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310CF0;
  qword_310CF0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310CF0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB3B0(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310D00;
  qword_310D00 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D00, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB3F0(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310D10;
  qword_310D10 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D10, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB430(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310D20;
  qword_310D20 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D20, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB470(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310D30;
  qword_310D30 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D30, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB4B0(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310D40;
  qword_310D40 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D40, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB4F0(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310D50;
  qword_310D50 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D50, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB530(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310D60;
  qword_310D60 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D60, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FB570(uint64_t a1)
{
  AEAnnotationThemeYellow *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeYellow);
  v3 = (void *)qword_310D70;
  qword_310D70 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D70, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBCE0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310D80;
  qword_310D80 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D80, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBD20(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310D90;
  qword_310D90 = (uint64_t)v2;

  return objc_msgSend((id)qword_310D90, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBD60(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310DA0;
  qword_310DA0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310DA0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBDA0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310DB0;
  qword_310DB0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310DB0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBDE0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310DC0;
  qword_310DC0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310DC0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBE20(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310DD0;
  qword_310DD0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310DD0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBE60(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310DE0;
  qword_310DE0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310DE0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBEA0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310DF0;
  qword_310DF0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310DF0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBEE0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E00;
  qword_310E00 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E00, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBF20(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E10;
  qword_310E10 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E10, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBF60(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E20;
  qword_310E20 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E20, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBFA0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E30;
  qword_310E30 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E30, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FBFE0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E40;
  qword_310E40 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E40, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC020(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E50;
  qword_310E50 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E50, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC060(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E60;
  qword_310E60 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E60, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC0A0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E70;
  qword_310E70 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E70, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC0E0(uint64_t a1)
{
  AEAnnotationThemePink *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePink);
  v3 = (void *)qword_310E80;
  qword_310E80 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E80, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC850(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310E90;
  qword_310E90 = (uint64_t)v2;

  return objc_msgSend((id)qword_310E90, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC890(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310EA0;
  qword_310EA0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310EA0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC8D0(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310EB0;
  qword_310EB0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310EB0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC910(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310EC0;
  qword_310EC0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310EC0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC950(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310ED0;
  qword_310ED0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310ED0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC990(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310EE0;
  qword_310EE0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310EE0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FC9D0(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310EF0;
  qword_310EF0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310EF0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCA10(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F00;
  qword_310F00 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F00, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCA50(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F10;
  qword_310F10 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F10, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCA90(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F20;
  qword_310F20 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F20, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCAD0(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F30;
  qword_310F30 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F30, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCB10(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F40;
  qword_310F40 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F40, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCB50(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F50;
  qword_310F50 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F50, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCB90(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F60;
  qword_310F60 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F60, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCBD0(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F70;
  qword_310F70 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F70, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCC10(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F80;
  qword_310F80 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F80, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FCC50(uint64_t a1)
{
  AEAnnotationThemePurple *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemePurple);
  v3 = (void *)qword_310F90;
  qword_310F90 = (uint64_t)v2;

  return objc_msgSend((id)qword_310F90, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD3C0(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_310FA0;
  qword_310FA0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310FA0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD400(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_310FB0;
  qword_310FB0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310FB0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD440(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_310FC0;
  qword_310FC0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310FC0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD480(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_310FD0;
  qword_310FD0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310FD0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD4C0(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_310FE0;
  qword_310FE0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310FE0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD500(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_310FF0;
  qword_310FF0 = (uint64_t)v2;

  return objc_msgSend((id)qword_310FF0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD540(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311000;
  qword_311000 = (uint64_t)v2;

  return objc_msgSend((id)qword_311000, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD580(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311010;
  qword_311010 = (uint64_t)v2;

  return objc_msgSend((id)qword_311010, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD5C0(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311020;
  qword_311020 = (uint64_t)v2;

  return objc_msgSend((id)qword_311020, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD600(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311030;
  qword_311030 = (uint64_t)v2;

  return objc_msgSend((id)qword_311030, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD640(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311040;
  qword_311040 = (uint64_t)v2;

  return objc_msgSend((id)qword_311040, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD680(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311050;
  qword_311050 = (uint64_t)v2;

  return objc_msgSend((id)qword_311050, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD6C0(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311060;
  qword_311060 = (uint64_t)v2;

  return objc_msgSend((id)qword_311060, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD700(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311070;
  qword_311070 = (uint64_t)v2;

  return objc_msgSend((id)qword_311070, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD740(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311080;
  qword_311080 = (uint64_t)v2;

  return objc_msgSend((id)qword_311080, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD780(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_311090;
  qword_311090 = (uint64_t)v2;

  return objc_msgSend((id)qword_311090, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

id sub_FD7C0(uint64_t a1)
{
  AEAnnotationThemeUnderline *v2;
  void *v3;

  v2 = objc_alloc_init(AEAnnotationThemeUnderline);
  v3 = (void *)qword_3110A0;
  qword_3110A0 = (uint64_t)v2;

  return objc_msgSend((id)qword_3110A0, "setPageTheme:", *(_QWORD *)(a1 + 32));
}

void sub_FE09C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_3110B0;
  qword_3110B0 = v3;

  if (qword_3110B0)
    v5 = (id)qword_3110B0;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_3110B0;
  qword_3110B0 = (uint64_t)v5;

}

void sub_FE13C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_3110C0;
  qword_3110C0 = v3;

  if (qword_3110C0)
    v5 = (id)qword_3110C0;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_3110C0;
  qword_3110C0 = (uint64_t)v5;

}

void sub_FE1DC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_3110D0;
  qword_3110D0 = v3;

  if (qword_3110D0)
    v5 = (id)qword_3110D0;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_3110D0;
  qword_3110D0 = (uint64_t)v5;

}

void sub_FE27C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_3110E0;
  qword_3110E0 = v3;

  if (qword_3110E0)
    v5 = (id)qword_3110E0;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_3110E0;
  qword_3110E0 = (uint64_t)v5;

}

void sub_FE31C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_3110F0;
  qword_3110F0 = v3;

  if (qword_3110F0)
    v5 = (id)qword_3110F0;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_3110F0;
  qword_3110F0 = (uint64_t)v5;

}

void sub_FE3BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311100;
  qword_311100 = v3;

  if (qword_311100)
    v5 = (id)qword_311100;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311100;
  qword_311100 = (uint64_t)v5;

}

void sub_FE45C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311110;
  qword_311110 = v3;

  if (qword_311110)
    v5 = (id)qword_311110;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311110;
  qword_311110 = (uint64_t)v5;

}

void sub_FE4FC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311120;
  qword_311120 = v3;

  if (qword_311120)
    v5 = (id)qword_311120;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311120;
  qword_311120 = (uint64_t)v5;

}

void sub_FE59C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311130;
  qword_311130 = v3;

  if (qword_311130)
    v5 = (id)qword_311130;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311130;
  qword_311130 = (uint64_t)v5;

}

void sub_FE63C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311140;
  qword_311140 = v3;

  if (qword_311140)
    v5 = (id)qword_311140;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311140;
  qword_311140 = (uint64_t)v5;

}

void sub_FE6DC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311150;
  qword_311150 = v3;

  if (qword_311150)
    v5 = (id)qword_311150;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311150;
  qword_311150 = (uint64_t)v5;

}

void sub_FE77C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311160;
  qword_311160 = v3;

  if (qword_311160)
    v5 = (id)qword_311160;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311160;
  qword_311160 = (uint64_t)v5;

}

void sub_FE81C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311170;
  qword_311170 = v3;

  if (qword_311170)
    v5 = (id)qword_311170;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311170;
  qword_311170 = (uint64_t)v5;

}

void sub_FE8BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311180;
  qword_311180 = v3;

  if (qword_311180)
    v5 = (id)qword_311180;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311180;
  qword_311180 = (uint64_t)v5;

}

void sub_FE95C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_311190;
  qword_311190 = v3;

  if (qword_311190)
    v5 = (id)qword_311190;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_311190;
  qword_311190 = (uint64_t)v5;

}

void sub_FE9FC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_3111A0;
  qword_3111A0 = v3;

  if (qword_3111A0)
    v5 = (id)qword_3111A0;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_3111A0;
  qword_3111A0 = (uint64_t)v5;

}

void sub_FEA9C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", CFSTR("highlight_text_color")));

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "colorForThemeItem:pageTheme:", v7, *(_QWORD *)(a1 + 40)));
  v4 = (void *)qword_3111B0;
  qword_3111B0 = v3;

  if (qword_3111B0)
    v5 = (id)qword_3111B0;
  else
    v5 = (id)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v6 = (void *)qword_3111B0;
  qword_3111B0 = (uint64_t)v5;

}

void sub_FEB94(id a1)
{
  void *v1;
  void *v2;
  float v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("note_shadow")));

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", CFSTR("radius")));
  objc_msgSend(v2, "floatValue");
  *(double *)&qword_3111C0 = v3;

}

void sub_FEC50(id a1)
{
  void *v1;
  void *v2;
  float v3;
  id v4;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("note_shadow")));

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "objectForKey:", CFSTR("opacity")));
  objc_msgSend(v2, "floatValue");
  *(double *)&qword_3111D0 = v3;

}

void sub_FED0C(id a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("note_shadow")));

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", CFSTR("color")));
  if (v2)
    v3 = objc_claimAutoreleasedReturnValue(+[UIColor bc_colorWithSRGBDescription:](UIColor, "bc_colorWithSRGBDescription:", v2));
  else
    v3 = objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  v4 = (void *)qword_3111E0;
  qword_3111E0 = v3;

}

void sub_FEDF4(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  float v4;
  uint64_t v5;
  float v6;
  id v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("note_shadow")));

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", CFSTR("offset_x")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", CFSTR("offset_y")));
  objc_msgSend(v2, "floatValue");
  *(double *)&v5 = v4;
  objc_msgSend(v3, "floatValue");
  qword_3111F0 = v5;
  *(double *)&qword_3111F8 = v6;

}

void sub_FEEEC(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  float v4;
  uint64_t v5;
  void *v6;
  id v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("note_font")));

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", CFSTR("name")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", CFSTR("size")));
  objc_msgSend(v3, "floatValue");
  v5 = objc_claimAutoreleasedReturnValue(+[UIFont fontWithName:size:](UIFont, "fontWithName:size:", v2, v4));
  v6 = (void *)qword_311208;
  qword_311208 = v5;

}

void sub_FEFEC(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  float v4;
  uint64_t v5;
  void *v6;
  id v7;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationTheme themeDescriptions](AEAnnotationTheme, "themeDescriptions"));
  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("note_font_table")));

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", CFSTR("name")));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", CFSTR("size")));
  objc_msgSend(v3, "floatValue");
  v5 = objc_claimAutoreleasedReturnValue(+[UIFont fontWithName:size:](UIFont, "fontWithName:size:", v2, v4));
  v6 = (void *)qword_311218;
  qword_311218 = v5;

}

_QWORD *sub_FF834(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v3 = a3 - *(_QWORD *)(result[4] + 40) + 1;
  if (v3 >= 1)
  {
    v5 = result;
    do
    {
      v6 = v5[4];
      v7 = *(_QWORD *)(v6 + 40);
      v8[0] = a2;
      v8[1] = v7;
      result = objc_msgSend(*(id *)(v6 + 8), "addKey:", v8);
      a2 += 2;
      --v3;
    }
    while (v3);
  }
  return result;
}

void sub_FFA7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_QWORD *sub_FFA94(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  _QWORD v13[2];

  v3 = a3 - *(_QWORD *)(result[4] + 40) + 1;
  if (*(_BYTE *)(*(_QWORD *)(result[5] + 8) + 24))
  {
    v5 = __OFSUB__(v3, 1);
    v4 = a3 - *(_QWORD *)(result[4] + 40) < 0;
  }
  else
  {
    v5 = 0;
    v4 = 1;
  }
  if (v4 == v5)
  {
    v7 = result;
    v8 = 1;
    do
    {
      v9 = v7[4];
      v10 = *(_QWORD *)(v9 + 40);
      v13[0] = a2;
      v13[1] = v10;
      result = objc_msgSend(*(id *)(v9 + 8), "mightContainKey:", v13);
      *(_BYTE *)(*(_QWORD *)(v7[5] + 8) + 24) = (_BYTE)result;
      if (*(_BYTE *)(*(_QWORD *)(v7[5] + 8) + 24))
      {
        v12 = __OFSUB__(v8, v3);
        v11 = v8 - v3 < 0;
      }
      else
      {
        v12 = 0;
        v11 = 0;
      }
      ++v8;
      a2 += 2;
    }
    while (v11 != v12);
  }
  return result;
}

void sub_FFF18(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_FFF3C(uint64_t a1, uint64_t a2, void *a3)
{
  id *v4;
  id v5;
  id WeakRetained;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v4 = (id *)(a1 + 40);
  v5 = a3;
  WeakRetained = objc_loadWeakRetained(v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "workQueue"));
  v10 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v5, v7);

  v8 = objc_retainBlock(*(id *)(a1 + 32));
  v9 = v8;
  if (v8)
    (*((void (**)(id))v8 + 2))(v8);

  objc_msgSend(v10, "workComplete");
}

void sub_100168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10018C(uint64_t a1, uint64_t a2, void *a3)
{
  id *v4;
  id v5;
  id WeakRetained;
  void *v7;
  id v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD v21[4];
  id v22;
  id v23;
  id v24;
  id v25;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  uint64_t v29;

  v4 = (id *)(a1 + 56);
  v5 = a3;
  WeakRetained = objc_loadWeakRetained(v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "workQueue"));
  v8 = +[BCWorkItemCompletionHandler newCompletionHandlerWithWorkItem:onQueue:](BCWorkItemCompletionHandler, "newCompletionHandlerWithWorkItem:onQueue:", v5, v7);

  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationProfileDownloadQueueEnd[0], *(_QWORD *)(a1 + 32));
  v9 = (char *)objc_msgSend(v5, "priority");

  if (v9 == (_BYTE *)&dword_0 + 1)
  {
    v10 = objc_retainBlock(*(id *)(a1 + 48));
    v11 = v10;
    if (v10)
      (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);

    objc_msgSend(v8, "workComplete");
  }
  else
  {
    kdebug_trace(725353736, 0, 0, 0, 0);
    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationProfileDownloadStart[0], *(_QWORD *)(a1 + 32));
    v12 = BCImageCacheLog();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
    {
      v15 = *(_QWORD *)(a1 + 32);
      v14 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v27 = v14;
      v28 = 2112;
      v29 = v15;
      _os_log_impl(&dword_0, v13, OS_LOG_TYPE_INFO, "BICProductProfileDataStore: Starting product profile fetch for: %@, request: %@", buf, 0x16u);
    }

    v16 = objc_loadWeakRetained(v4);
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "delegate"));
    v18 = *(_QWORD *)(a1 + 40);
    v19 = (objc_msgSend(*(id *)(a1 + 32), "requestOptions") >> 9) & 1;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_1003E8;
    v21[3] = &unk_2911F8;
    v22 = v16;
    v23 = *(id *)(a1 + 32);
    v25 = *(id *)(a1 + 48);
    v24 = v8;
    v20 = v16;
    objc_msgSend(v17, "fetchCoverURLsFor:immediately:completion:", v18, v19, v21);

  }
}

void sub_1003E8(id *a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v3 = a2;
  v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "completionQ"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1004D0;
  block[3] = &unk_2911D0;
  v7 = v3;
  v8 = a1[4];
  v9 = a1[5];
  v11 = a1[7];
  v10 = a1[6];
  v5 = v3;
  dispatch_async(v4, block);

}

void sub_1004D0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;
  id v12;
  void *v13;
  id v14;
  NSObject *v15;
  id v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint8_t buf[4];
  id v23;
  _BYTE v24[128];

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = objc_autoreleasePoolPush();
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "describedImagesFromProductProfile:", *(_QWORD *)(a1 + 32)));

    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    v5 = v4;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v24, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v19;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v19 != v8)
            objc_enumerationMutation(v5);
          objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * (_QWORD)v9), "setPriority:", objc_msgSend(*(id *)(a1 + 48), "priority", (_QWORD)v18));
          v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, v24, 16);
      }
      while (v7);
    }

    v10 = BCImageCacheLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_INFO, "BICProductProfileDataStore: Returning product profile results: %@", buf, 0xCu);
    }

    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationProfileDownloadEnd[0], *(_QWORD *)(a1 + 48));
    v12 = objc_retainBlock(*(id *)(a1 + 64));
    v13 = v12;
    if (v12)
      (*((void (**)(id, id))v12 + 2))(v12, v5);

    objc_msgSend(*(id *)(a1 + 56), "workComplete");
    kdebug_trace(725353736, 1, 0, 0, 0);

    objc_autoreleasePoolPop(v2);
  }
  else
  {
    v14 = BCImageCacheLog();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_1B743C(a1, v15);

    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationProfileDownloadEnd[0], *(_QWORD *)(a1 + 48));
    v16 = objc_retainBlock(*(id *)(a1 + 64));
    v17 = v16;
    if (v16)
      (*((void (**)(id, _QWORD))v16 + 2))(v16, 0);

    objc_msgSend(*(id *)(a1 + 56), "workComplete");
    kdebug_trace(725353736, 1, 0, 0, 0);
  }
}

void sub_101868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10188C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10189C(uint64_t a1)
{

}

void sub_1018A4(uint64_t a1)
{
  char *v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  sqlite3_stmt *pStmt;
  char *pzTail;

  v2 = (char *)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "UTF8String");
  pStmt = 0;
  pzTail = v2;
  v3 = sqlite3_prepare_v2((sqlite3 *)objc_msgSend(*(id *)(a1 + 40), "_databaseHandle"), v2, -1, &pStmt, (const char **)&pzTail);
  if (v3)
    goto LABEL_5;
  objc_msgSend(*(id *)(a1 + 40), "_aq_bindArguments:inStatement:", *(_QWORD *)(a1 + 48), pStmt);
  v4 = sqlite3_step(pStmt);
  v5 = v4;
  if ((v4 - 100) >= 2 && v4)
    goto LABEL_6;
  v3 = sqlite3_finalize(pStmt);
  if (v3)
  {
LABEL_5:
    v5 = v3;
  }
  else
  {
    v5 = 0;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
  }
LABEL_6:
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_aq_errorInFunction:result:", "-[IMDatabaseHandle runStatement:arguments:]_block_invoke", v5));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

  }
}

void sub_101C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_101C84(uint64_t a1)
{
  void *v2;
  void *i;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_aq_cursorForQuery:withArguments:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  for (i = 0; ; i = v5)
  {
    v4 = *(_BYTE *)(a1 + 80)
       ? objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "nextRowAsArray"))
       : objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "nextRowAsDictionary"));
    v5 = (void *)v4;

    if (!v5)
      break;
    objc_msgSend(*(id *)(a1 + 56), "addObject:", v5);
  }
  objc_msgSend(v2, "reset");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_aq_errorInFunction:result:", "-[IMDatabaseHandle arrayForQuery:arguments:rawRows:]_block_invoke", 0));
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

  }
}

void sub_101D98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13)
{
  id v13;
  id v14;
  NSObject *v15;
  id v16;
  void *v17;
  void *v18;

  if (a2 == 1)
  {
    v13 = objc_begin_catch(exception_object);
    v14 = BCIMLog();
    v15 = objc_claimAutoreleasedReturnValue(v14);
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "reason"));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "callStackSymbols"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "description"));
      LODWORD(a9) = 136315650;
      *(_QWORD *)((char *)&a9 + 4) = "-[IMDatabaseHandle arrayForQuery:arguments:rawRows:]_block_invoke";
      WORD6(a9) = 2112;
      *(_QWORD *)((char *)&a9 + 14) = v16;
      a12 = 2112;
      a13 = (uint64_t)v18;
      _os_log_error_impl(&dword_0, v15, OS_LOG_TYPE_ERROR, "%s %@\n%@", (uint8_t *)&a9, 0x20u);

    }
    objc_end_catch();
    JUMPOUT(0x101D28);
  }
  _Unwind_Resume(exception_object);
}

void sub_1020A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 160), 8);
  _Block_object_dispose((const void *)(v31 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1020F4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *pzTail;
  sqlite3_stmt *ppStmt;

  ppStmt = 0;
  pzTail = (char *)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 32)), "UTF8String");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = sqlite3_prepare_v2(*(sqlite3 **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8)+ 24), pzTail, -1, &ppStmt, (const char **)&pzTail);
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    v2 = *(_QWORD *)(a1 + 40);
    if (v2)
      objc_msgSend(*(id *)(a1 + 48), "_aq_bindArguments:inStatement:", v2, ppStmt);
    v3 = 0;
    while (1)
    {
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = sqlite3_step(ppStmt);
      v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24);
      if (v4 != 100)
        break;
      if (sqlite3_column_type(ppStmt, 0) == 5)
      {
        v5 = (id)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
      }
      else
      {
        v6 = objc_alloc((Class)NSString);
        v5 = objc_msgSend(v6, "initWithUTF8String:", sqlite3_column_text(ppStmt, 0));
      }
      v7 = v5;

      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), "addObject:", v7);
      v3 = v7;
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) != 100)
        goto LABEL_15;
    }
    if (v4 && v4 != 101)
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 0;
    v7 = v3;
LABEL_15:
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = sqlite3_finalize(ppStmt);

  }
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24)
    || !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
  {
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_aq_errorInFunction:result:", "-[IMDatabaseHandle stringColumnDataForQuery:withArguments:]_block_invoke"));
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

  }
}

void sub_1022F8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 buf, int a12, __int16 a13, __int16 a14, void *a15)
{
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  id v19;
  void *v20;
  void *v21;

  if (a2 == 1)
  {
    v16 = objc_begin_catch(a1);
    v17 = BCIMLog();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      v19 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "reason"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "callStackSymbols"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "description"));
      LODWORD(buf) = 136315650;
      *(_QWORD *)((char *)&buf + 4) = "-[IMDatabaseHandle stringColumnDataForQuery:withArguments:]_block_invoke";
      WORD6(buf) = 2112;
      *(_QWORD *)((char *)&buf + 14) = v19;
      a14 = 2112;
      a15 = v21;
      _os_log_error_impl(&dword_0, v18, OS_LOG_TYPE_ERROR, "%s %@\n%@", (uint8_t *)&buf, 0x20u);

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v15 + 72) + 8) + 24) = 0;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 + 56) + 8) + 24) = 1;

    objc_end_catch();
    JUMPOUT(0x102278);
  }
  _Unwind_Resume(a1);
}

void sub_1028FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_102920(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = sqlite3_exec(*(sqlite3 **)(*(_QWORD *)(a1 + 32) + 8), (const char *)objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 40)), "UTF8String"), (int (__cdecl *)(void *, int, char **, char **))sub_102B00, *(void **)(a1 + 48), 0);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_aq_errorInFunction:result:", "-[IMDatabaseHandle _stringRowsForQuery:]_block_invoke"));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v4 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v2;

  }
}

void sub_1029F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, int a10, __int16 a11, __int16 a12, uint64_t a13)
{
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  id v17;
  void *v18;
  void *v19;

  if (a2 == 1)
  {
    v14 = objc_begin_catch(exception_object);
    v15 = BCIMLog();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    {
      v17 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "reason"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "callStackSymbols"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "description"));
      LODWORD(a9) = 136315650;
      *(_QWORD *)((char *)&a9 + 4) = "-[IMDatabaseHandle _stringRowsForQuery:]_block_invoke";
      WORD6(a9) = 2112;
      *(_QWORD *)((char *)&a9 + 14) = v17;
      a12 = 2112;
      a13 = (uint64_t)v19;
      _os_log_error_impl(&dword_0, v16, OS_LOG_TYPE_ERROR, "%s %@\n%@", (uint8_t *)&a9, 0x20u);

    }
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 56) + 8) + 24) = 1;

    objc_end_catch();
    JUMPOUT(0x102988);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_102B00(void *a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  id v7;
  void *v8;
  id v9;
  id v10;

  v7 = a1;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  if (a2 >= 1)
  {
    do
    {
      if (*a3 && *a4)
      {
        v9 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *a3);
        v10 = objc_msgSend(objc_alloc((Class)NSString), "initWithUTF8String:", *a4);
        objc_msgSend(v8, "setObject:forKey:", v9, v10);

      }
      ++a4;
      ++a3;
      --a2;
    }
    while (a2);
  }
  objc_msgSend(v7, "addObject:", v8);

  return 0;
}

void sub_1038F4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

void sub_1039EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103A64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103B38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103BA8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103CD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_103EC0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_103EE0(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x103E90);
}

void sub_104024(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10403C(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id obj;

  obj = *(id *)(a1 + 32);
  objc_sync_enter(obj);
  v2 = *(id *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringByConvertingNewlineCharacterSetToSpace"));

  v4 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)(v4 + 8) == 1)
  {
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lowercaseString"));

    v4 = *(_QWORD *)(a1 + 32);
    v3 = (void *)v5;
  }
  objc_msgSend(*(id *)(v4 + 16), "addDocument:withIdentifier:", v3, *(_QWORD *)(a1 + 48));

  objc_sync_exit(obj);
}

void sub_1040E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_104158(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1041AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_104204(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10435C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1044E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_104558(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10642C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  if (a2)
  {
    v9 = objc_msgSend(a2, "intValue");
    v10 = *(void **)(a1 + 32);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "string"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "substringWithRange:", a3, a4));
    v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "htmlHighlightForString:style:isUnderline:", v12, v9, *(unsigned __int8 *)(a1 + 56)));

    objc_msgSend(*(id *)(a1 + 48), "replaceCharactersInRange:withString:", a3, a4, v13);
    *a5 = 1;

  }
}

void sub_1066D8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1066F8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD *v5;
  _QWORD block[4];
  _QWORD *v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v3 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_106818;
  v8[3] = &unk_28BD80;
  objc_copyWeak(&v10, (id *)(a1 + 32));
  v4 = v3;
  v9 = v4;
  v5 = objc_retainBlock(v8);
  if (v5)
  {
    if (+[NSThread isMainThread](NSThread, "isMainThread"))
    {
      ((void (*)(_QWORD *))v5[2])(v5);
    }
    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_106894;
      block[3] = &unk_28BF90;
      v7 = v5;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    }
  }

  objc_destroyWeak(&v10);
}

void sub_106804(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_106818(uint64_t a1)
{
  id *WeakRetained;
  id v3;
  void *v4;
  id v5;
  id *v6;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v6 = WeakRetained;
    v3 = objc_retainBlock(WeakRetained[1]);
    v4 = v3;
    if (v3)
      (*((void (**)(id, _QWORD))v3 + 2))(v3, *(_QWORD *)(a1 + 32));
    v5 = v6[1];
    v6[1] = 0;

    WeakRetained = v6;
  }

}

uint64_t sub_106894(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1068A0(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void (**v5)(id, void *);

  v5 = (void (**)(id, void *))objc_retainBlock(*(id *)(*(_QWORD *)(a1 + 32) + 8));
  if (v5)
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BCWindowSceneErrorDomain"), -1000, 0));
    v5[2](v5, v2);

  }
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 8);
  *(_QWORD *)(v3 + 8) = 0;

}

void BKGenericBookCover::BKGenericBookCover(BKGenericBookCover *this, CFTypeRef cf, CFTypeRef a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  uint64_t v11;

  *(_QWORD *)this = off_2913E0;
  *((double *)this + 1) = a9;
  *((double *)this + 2) = a10;
  *((_QWORD *)this + 3) = cf;
  *((_QWORD *)this + 4) = a3;
  *((_DWORD *)this + 10) = a4;
  *((_DWORD *)this + 11) = a5;
  *((_DWORD *)this + 12) = a6;
  *((_QWORD *)this + 7) = a7;
  *((_QWORD *)this + 8) = a8;
  if (a4)
    *((_BYTE *)this + 64) = 1;
  if (cf)
  {
    CFRetain(cf);
    a3 = (CFTypeRef)*((_QWORD *)this + 4);
  }
  if (a3)
    CFRetain(a3);
  *((CGFloat *)this + 1) = BKGenericBookCover::SizeThatFits(this, *(CGSize *)((char *)this + 8));
  *((_QWORD *)this + 2) = v11;
}

BOOL BKGenericBookCover::HasVerticalText(BKGenericBookCover *this)
{
  return *((_DWORD *)this + 10) != 0;
}

CGFloat BKGenericBookCover::SizeThatFits(BKGenericBookCover *this, CGSize a2)
{
  if (*((_DWORD *)this + 11) == 3 || *((_BYTE *)this + 66))
  {
    if (a2.width <= 0.0 && a2.height > 0.0)
      a2.width = a2.height;
  }
  else if (a2.width <= 0.0 || a2.height <= 0.0)
  {
    if (a2.width <= 0.0 && a2.height > 0.0)
      a2.width = round(a2.height * 128.0 / 189.0);
  }
  else if (a2.width > a2.height * 0.677248677)
  {
    a2.width = round(a2.height * 0.677248677);
  }
  return a2.width;
}

void BKGenericBookCover::~BKGenericBookCover(BKGenericBookCover *this)
{
  const void *v2;
  const void *v3;

  *(_QWORD *)this = off_2913E0;
  v2 = (const void *)*((_QWORD *)this + 3);
  if (v2)
    CFRelease(v2);
  v3 = (const void *)*((_QWORD *)this + 4);
  if (v3)
    CFRelease(v3);
}

{
  BKGenericBookCover::~BKGenericBookCover(this);
  operator delete();
}

uint64_t BKGenericBookCover::Draw(BKGenericBookCover *this, CGContext *a2)
{
  (*(void (**)(BKGenericBookCover *))(*(_QWORD *)this + 32))(this);
  (*(void (**)(BKGenericBookCover *, CGContext *))(*(_QWORD *)this + 48))(this, a2);
  (*(void (**)(BKGenericBookCover *, CGContext *))(*(_QWORD *)this + 40))(this, a2);
  (*(void (**)(BKGenericBookCover *, CGContext *))(*(_QWORD *)this + 64))(this, a2);
  return (*(uint64_t (**)(BKGenericBookCover *, CGContext *))(*(_QWORD *)this + 56))(this, a2);
}

uint64_t BKGenericBookCover::CreateImageWithFileNameConsideringEnvironment(BKGenericBookCover *this, const __CFString *a2, double *a3)
{
  __CFString *Mutable;
  __CFString *v7;
  double v8;
  double v9;
  const __CFString *v10;
  BKGenericBookCover *v11;
  uint64_t ImageWithFileName;
  BKGenericBookCover *v13;

  Mutable = CFStringCreateMutable(0, 0);
  v7 = Mutable;
  v8 = *((double *)this + 7);
  v9 = 3.0;
  if (v8 >= 3.0)
  {
    v10 = CFSTR("%@-3x.png");
LABEL_5:
    CFStringReplaceAll(Mutable, &stru_296430);
    CFStringAppendFormat(v7, 0, v10, a2);
    ImageWithFileName = BKGenericBookCover::CreateImageWithFileName(v11, v7);
    *a3 = v9;
    if (ImageWithFileName)
      goto LABEL_7;
    goto LABEL_6;
  }
  v9 = 2.0;
  if (v8 >= 2.0)
  {
    v10 = CFSTR("%@-2x.png");
    goto LABEL_5;
  }
LABEL_6:
  CFStringReplaceAll(v7, &stru_296430);
  CFStringAppendFormat(v7, 0, CFSTR("%@.png"), a2);
  ImageWithFileName = BKGenericBookCover::CreateImageWithFileName(v13, v7);
  *a3 = 1.0;
LABEL_7:
  if (v7)
    CFRelease(v7);
  return ImageWithFileName;
}

uint64_t BKGenericBookCover::CreateImageWithFileName(BKGenericBookCover *this, const __CFString *a2)
{
  __CFBundle *v3;
  CFURLRef v4;
  const __CFDictionary *v5;
  const void *Value;
  CGImage *v7;
  CGImageSource *v8;
  __CFDictionary *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v12 = 0;
  v13 = &v12;
  v14 = 0x2000000000;
  v15 = 0;
  v3 = (__CFBundle *)IMCommonCoreCFBundle();
  v4 = CFBundleCopyResourceURL(v3, a2, 0, 0);
  if (v4)
  {
    os_unfair_lock_lock((os_unfair_lock_t)&unk_311230);
    v5 = sub_107568();
    Value = CFDictionaryGetValue(v5, v4);
    v13[3] = (uint64_t)Value;
    os_unfair_lock_unlock((os_unfair_lock_t)&unk_311230);
    v7 = (CGImage *)v13[3];
    if (v7)
    {
      CGImageRetain(v7);
    }
    else
    {
      v8 = CGImageCreateWithURL(v4);
      v13[3] = (uint64_t)v8;
      os_unfair_lock_lock((os_unfair_lock_t)&unk_311230);
      v9 = sub_107568();
      CFDictionarySetValue(v9, v4, (const void *)v13[3]);
      os_unfair_lock_unlock((os_unfair_lock_t)&unk_311230);
    }
    CFRelease(v4);
  }
  v10 = v13[3];
  _Block_object_dispose(&v12, 8);
  return v10;
}

void sub_106EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void BKGenericBookCover::DrawIcon(BKGenericBookCover *this, CGContext *a2)
{
  int v4;
  CGSize v5;
  double v6;
  uint64_t ImageWithFileName;
  CGImage *v8;
  double v9;
  const __CFString *v10;
  uint64_t v11;
  double Width;
  size_t Height;
  CGSize size;
  double v15;
  CGRect v16;

  if (!*(_WORD *)((char *)this + 65))
  {
    size = CGRectNull.size;
    *(CGPoint *)((char *)this + 72) = CGRectNull.origin;
    *(CGSize *)((char *)this + 88) = size;
    return;
  }
  v4 = *((_DWORD *)this + 10);
  v5 = CGRectNull.size;
  *(CGPoint *)((char *)this + 72) = CGRectNull.origin;
  *(CGSize *)((char *)this + 88) = v5;
  if (!v4)
  {
    v15 = 1.0;
    v6 = *((double *)this + 1) * 0.0078125;
    if (v6 > 3.0)
    {
      if (*((_BYTE *)this + 66))
      {
        ImageWithFileName = BKGenericBookCover::CreateImageWithFileName(this, CFSTR("iB_Generic_AudioBook-Large.png"));
        v15 = 9.42857143;
        if (ImageWithFileName)
        {
          v8 = (CGImage *)ImageWithFileName;
          v9 = 9.42857143;
LABEL_13:
          Width = (double)CGImageGetWidth(v8);
          Height = CGImageGetHeight(v8);
          v16.size.width = v6 * Width / v9;
          v16.size.height = v6 * (double)Height / v9;
          v16.origin.x = (*((double *)this + 1) - v16.size.width) * 0.5;
          v16.origin.y = (*((double *)this + 2) - v16.size.height) * 0.5;
          *(CGRect *)((char *)this + 72) = v16;
          CGContextDrawImage(a2, v16, v8);
          CGImageRelease(v8);
          return;
        }
      }
    }
    if (*((_BYTE *)this + 66))
      v10 = CFSTR("iB_Generic_AudioBook");
    else
      v10 = CFSTR("iB_Generic_Book");
    v11 = BKGenericBookCover::CreateImageWithFileNameConsideringEnvironment(this, v10, &v15);
    if (v11)
    {
      v8 = (CGImage *)v11;
      v9 = v15;
      goto LABEL_13;
    }
  }
}

void BKGenericBookCover::DrawBackground(CGFloat *this, CGContext *a2)
{
  CGImage *BackgroundGradientImage;
  CGImage *v5;
  CGRect v6;

  BackgroundGradientImage = BKGenericBookCover::CreateBackgroundGradientImage((BKGenericBookCover *)this, 1.0, this[2]);
  if (BackgroundGradientImage)
  {
    v5 = BackgroundGradientImage;
    v6.size.width = this[1];
    v6.size.height = this[2];
    v6.origin.x = 0.0;
    v6.origin.y = 0.0;
    CGContextDrawImage(a2, v6, BackgroundGradientImage);
    CGImageRelease(v5);
  }
}

CGImageRef BKGenericBookCover::CreateBackgroundGradientImage(BKGenericBookCover *this, double a2, CGFloat a3)
{
  CGColorSpace *DeviceRGB;
  CGColorSpace *v7;
  CGContext *v8;
  CGContext *v9;
  CGImageRef Image;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (!DeviceRGB)
    return 0;
  v7 = DeviceRGB;
  v8 = CGBitmapContextCreate(0, (unint64_t)a2, (unint64_t)a3, 8uLL, vcvtd_n_u64_f64(a2, 2uLL), DeviceRGB, 0x2006u);
  if (v8)
  {
    v9 = v8;
    BKGenericBookCover::DrawBackgroundGradient(this, v8, a2, a3);
    Image = CGBitmapContextCreateImage(v9);
    CGContextRelease(v9);
  }
  else
  {
    Image = 0;
  }
  CGColorSpaceRelease(v7);
  return Image;
}

void BKGenericBookCover::DrawBackgroundGradient(BKGenericBookCover *this, CGContext *a2, double a3, CGFloat a4)
{
  CGColorSpace *DeviceRGB;
  CGColorRef RGBColor;
  double v10;
  CGFloat v11;
  BKGenericBookCover *v12;
  double v13;
  double v14;
  CGColorRef v15;
  CGColorSpace *v16;
  const __CFArray *v17;
  CGGradient *v18;
  const void *v19[2];
  CGFloat locations[3];
  CGPoint v21;
  CGPoint v22;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (DeviceRGB)
  {
    if (*((_BYTE *)this + 65))
    {
LABEL_3:
      RGBColor = BKGenericBookCover::CreateRGBColor(this, 0.447058824, 0.447058824, 0.447058824, 1.0);
      v10 = 0.17254902;
      v11 = 1.0;
      v12 = this;
      v13 = 0.17254902;
      v14 = 0.17254902;
    }
    else
    {
      switch(*((_DWORD *)this + 12))
      {
        case 0:
          RGBColor = BKGenericBookCover::CreateRGBColor(this, 0.690196078, 0.0156862745, 0.0, 1.0);
          v10 = 0.380392157;
          v13 = 0.0588235294;
          v14 = 0.062745098;
          goto LABEL_10;
        case 1:
        case 2:
          RGBColor = BKGenericBookCover::CreateRGBColor(this, 0.639215686, 0.305882353, 0.0, 1.0);
          v10 = 0.317647059;
          v13 = 0.0117647059;
          v11 = 1.0;
          v12 = this;
          v14 = 0.0117647059;
          break;
        case 3:
          RGBColor = BKGenericBookCover::CreateRGBColor(this, 0.0, 0.545098039, 0.117647059, 1.0);
          v13 = 0.243137255;
          v14 = 0.203921569;
          goto LABEL_9;
        case 4:
        case 5:
        case 6:
          RGBColor = BKGenericBookCover::CreateRGBColor(this, 0.0, 0.325490196, 0.71372549, 1.0);
          v13 = 0.117647059;
          v14 = 0.298039216;
LABEL_9:
          v10 = 0.0;
LABEL_10:
          v11 = 1.0;
          v12 = this;
          break;
        default:
          goto LABEL_3;
      }
    }
    v15 = BKGenericBookCover::CreateRGBColor(v12, v10, v13, v14, v11);
    v16 = CGColorSpaceCreateDeviceRGB();
    *(_OWORD *)locations = xmmword_26A8B0;
    v19[0] = RGBColor;
    v19[1] = v15;
    v17 = CFArrayCreate(0, v19, 2, &kCFTypeArrayCallBacks);
    v18 = CGGradientCreateWithColors(v16, v17, locations);
    v21.x = a3 * 0.5;
    v22.y = 0.0;
    v21.y = a4;
    v22.x = a3 * 0.5;
    CGContextDrawLinearGradient(a2, v18, v21, v22, 3u);
    CFRelease(v17);
    CGColorSpaceRelease(v16);
    CGColorRelease(RGBColor);
    CGColorRelease(v15);
    CGGradientRelease(v18);
  }
  CGColorSpaceRelease(DeviceRGB);
}

CGColorRef BKGenericBookCover::CreateRGBColor(BKGenericBookCover *this, double a2, double a3, double a4, CGFloat a5)
{
  CGColorSpace *DeviceRGB;
  CGColorSpace *v11;
  double v12;
  CGColorRef v13;
  CGFloat components[4];

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (!DeviceRGB)
    return 0;
  v11 = DeviceRGB;
  v12 = 0.92;
  if (!*((_BYTE *)this + 67))
    v12 = 1.0;
  components[0] = v12 * a2;
  components[1] = v12 * a3;
  components[2] = v12 * a4;
  components[3] = a5;
  v13 = CGColorCreate(DeviceRGB, components);
  CGColorSpaceRelease(v11);
  return v13;
}

CGImageRef BKGenericBookCover::CreateBookCoverImage(BKGenericBookCover *this)
{
  CGColorSpace *DeviceRGB;
  CGColorSpace *v3;
  CGContextRef v4;
  CGContext *v5;
  CGImageRef Image;

  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (!DeviceRGB)
    return 0;
  v3 = DeviceRGB;
  v4 = CGBitmapContextCreate(0, (unint64_t)*((double *)this + 1), (unint64_t)*((double *)this + 2), 8uLL, vcvtd_n_u64_f64(*((double *)this + 1), 2uLL), DeviceRGB, 0x2006u);
  if (v4)
  {
    v5 = v4;
    (*(void (**)(BKGenericBookCover *, CGContextRef))(*(_QWORD *)this + 24))(this, v4);
    Image = CGBitmapContextCreateImage(v5);
    CGContextRelease(v5);
  }
  else
  {
    Image = 0;
  }
  CGColorSpaceRelease(v3);
  return Image;
}

CFMutableDictionaryRef sub_107568()
{
  CFMutableDictionaryRef result;
  CFDictionaryValueCallBacks v1;

  result = (CFMutableDictionaryRef)qword_311228;
  if (!qword_311228)
  {
    *(_OWORD *)&v1.version = unk_291438;
    *(_OWORD *)&v1.release = *(_OWORD *)&off_291448;
    v1.equal = (CFDictionaryEqualCallBack)sub_109C20;
    result = CFDictionaryCreateMutable(kCFAllocatorDefault, 0, &kCFTypeDictionaryKeyCallBacks, &v1);
    qword_311228 = (uint64_t)result;
  }
  return result;
}

CGColorRef BKGenericBookCover::CreateTitleColor(BKGenericBookCover *this)
{
  return BKGenericBookCover::CreateRGBColor(this, 1.0, 1.0, 1.0, 1.0);
}

CGColorRef BKGenericBookCover::CreateAuthorColor(BKGenericBookCover *this)
{
  return BKGenericBookCover::CreateRGBColor(this, 1.0, 1.0, 1.0, 0.64);
}

uint64_t BKGenericBookCover::DrawTitle(uint64_t this, CGContext *a2)
{
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  int v7;
  double v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  CGFloat x;
  CGFloat y;
  double width;
  CGFloat height;
  int v19;
  double v20;
  double v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  double v25;
  int v26;
  const __CFString *v27;
  int v28;
  BOOL v29;
  const __CFString *v30;
  double v31;
  double v32;
  BOOL v33;
  double v34;
  CTFontRef v35;
  double v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  double MaxY;
  CGFloat MidY;
  CGFloat MinY;
  CFRange v44;
  CGColor *RGBColor;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  BOOL v53;
  double v54;
  BOOL IsNull;
  char v56;
  double v57;
  double v58;
  double v59;
  CGFloat rect;
  _BYTE v61[32];
  uint64_t v62;
  double v63;
  BOOL v64;
  char v65;
  CFRange v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;

  if (*(_QWORD *)(this + 24))
  {
    v3 = this;
    v4 = *(double *)(this + 56);
    v5 = *(double *)(this + 8) * 0.0078125;
    v6 = floor(v5 * 4.0);
    v7 = *(_DWORD *)(this + 40);
    v8 = BKGenericBookCover::KeylineRect((CGFloat *)this);
    v12 = *(_DWORD *)(v3 + 40);
    if (v12)
      v13 = v10;
    else
      v13 = v11;
    if (v12)
      v10 = v11;
    v14 = v13;
    v67 = CGRectInset(*(CGRect *)&v8, v6 + v4 * 0.5, v6 + v4 * 0.5);
    x = v67.origin.x;
    y = v67.origin.y;
    width = v67.size.width;
    height = v67.size.height;
    v19 = *(_DWORD *)(v3 + 40);
    if (*(_BYTE *)(v3 + 66))
      v20 = 14.0;
    else
      v20 = 17.0;
    rect = v67.size.width;
    if (v19)
    {
      if (*(_BYTE *)(v3 + 66))
        v21 = 17.0;
      else
        v21 = 21.0;
      v22 = CGRectGetWidth(v67);
      v68.size.width = width;
      width = v22;
      v68.origin.x = x;
      v23 = y;
      v68.origin.y = y;
      v24 = height;
      v68.size.height = height;
      v25 = CGRectGetHeight(v68);
      v26 = *(_DWORD *)(v3 + 40);
      v58 = 0.0;
      v59 = 0.0;
      v27 = CFSTR("HiraMinProN-W3");
      if (v26 == 2)
        v28 = 2;
      else
        v28 = *(_DWORD *)(v3 + 40);
      if (v26 == 2)
        v27 = CFSTR("PingFangSC-Light");
      v29 = v26 == 1;
      if (v26 == 1)
        v19 = 2;
      else
        v19 = v28;
      if (v29)
        v30 = CFSTR("PingFangTC-Light");
      else
        v30 = v27;
    }
    else
    {
      v23 = v67.origin.y;
      v24 = v67.size.height;
      if (*(_BYTE *)(v3 + 66))
        v31 = 46.0;
      else
        v31 = 60.0;
      v32 = 40.0;
      if (*(_BYTE *)(v3 + 66))
        v32 = 29.0;
      v58 = v32;
      v59 = v31;
      if (*(_BYTE *)(v3 + 66))
        v21 = 16.0;
      else
        v21 = 20.0;
      v25 = v5 * v31;
      v30 = CFSTR("AvenirNext-Medium");
    }
    v33 = v19 != 0;
    v34 = v5 * v20;
    v35 = CTFontCreateWithName(v30, v34, 0);
    sub_1096DC((uint64_t)v61, *(const __CFString **)(v3 + 24), v35, width, v25);
    v64 = v33;
    v65 = 2 * (v7 == 0);
    if (v35)
      CFRelease(v35);
    v36 = v5 * v21;
    sub_107AB0((uint64_t)v61, v34, v5 * v21, v5 * 5.5);
    v37 = x;
    v38 = v23;
    v39 = rect;
    v40 = v24;
    if (v7)
    {
      MaxY = CGRectGetMaxY(*(CGRect *)&v37);
      v69.origin.x = x;
      v69.origin.y = v23;
      v69.size.width = rect;
      v69.size.height = v24;
      MidY = CGRectGetMidY(v69);
      sub_107DB4((uint64_t)v61, MaxY - MidY, v34, v36, v5 * 5.5);
    }
    else
    {
      MinY = CGRectGetMinY(*(CGRect *)&v37);
      sub_107F0C((uint64_t)v61, -(MinY - v59 * v5), v34, v5 * v21, v5 * 5.5);
    }
    RGBColor = BKGenericBookCover::CreateRGBColor((BKGenericBookCover *)v3, 1.0, 1.0, 1.0, 1.0);
    if (RGBColor)
    {
      CGContextSetFillColorWithColor(a2, RGBColor);
      CFRelease(RGBColor);
    }
    if (v62 >= 1)
    {
      if (v7)
      {
        v70.origin.x = x;
        v70.origin.y = v23;
        v70.size.width = rect;
        v70.size.height = v24;
        v46 = CGRectGetMinY(v70);
        v71.origin.x = x;
        v71.origin.y = v23;
        v71.size.width = rect;
        v71.size.height = v24;
        v47 = CGRectGetMidY(v71);
        v48 = sub_108084((uint64_t)v61);
        v72.origin.x = x;
        v72.origin.y = v23;
        v72.size.width = rect;
        v72.size.height = v24;
        x = CGRectGetMinX(v72);
        v49 = fmax(v47 - v48, v46);
      }
      else
      {
        v44.location = 0;
        sub_109B00((uint64_t)v61, v44);
        v51 = v50;
        v66.location = v62 - 1;
        sub_109B00((uint64_t)v61, v66);
        v53 = v5 * v58 - v51 + v52 <= v5 * v59 || v62 <= 1;
        v54 = v5 * v59 - v52;
        if (v53)
          v49 = v5 * v58 - v51;
        else
          v49 = v54;
        if (*(_BYTE *)(v3 + 66))
        {
          IsNull = CGRectIsNull(*(CGRect *)(v3 + 72));
          v56 = v62 != 1 || IsNull;
          if ((v56 & 1) == 0)
          {
            v73.origin.x = x;
            v73.origin.y = v23;
            v73.size.width = rect;
            v73.size.height = v24;
            v57 = CGRectGetMinY(v73);
            v49 = (v57 + CGRectGetMinY(*(CGRect *)(v3 + 72)) - v63) * 0.5;
          }
        }
        v74.origin.x = x;
        v74.origin.y = v23;
        v74.size.width = rect;
        v74.size.height = v24;
        if (v49 < CGRectGetMinY(v74))
        {
          v75.origin.x = x;
          v75.origin.y = v23;
          v75.size.width = rect;
          v75.size.height = v24;
          v49 = CGRectGetMinY(v75);
        }
      }
      sub_1080A4((uint64_t)v61, a2, x, v49, *(double *)(v3 + 8), *(CGFloat *)(v3 + 16));
    }
    return sub_109B6C((uint64_t)v61);
  }
  return this;
}

void sub_107A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_109B6C((uint64_t)va);
  _Unwind_Resume(a1);
}

double BKGenericBookCover::KeyLineRectForOrienation(CGFloat *this)
{
  return BKGenericBookCover::KeylineRect(this);
}

void sub_107AB0(uint64_t a1, double a2, double a3, double a4)
{
  const __CFString *v5;
  const __CFString *v9;
  double v10;
  int v11;
  double v12;
  double v13;
  double v14;
  double v15;
  const __CTFont *CopyWithAttributes;
  const __CTFont *v17;
  _BOOL4 v18;
  const __CFAttributedString *v19;
  const __CFAttributedString *v20;
  const __CTFramesetter *v21;
  const __CTFramesetter *v22;
  CGSize v23;
  _BOOL4 v24;
  int v25;
  const __CFAttributedString *v26;
  const __CFAttributedString *v27;
  const __CTFramesetter *v28;
  const __CTFramesetter *v29;
  double width;
  BOOL v31;
  CGPath *Mutable;
  const CGPath *v33;
  const void *v34;
  double v35;
  double rect;
  CFRange fitRange;
  CFRange v38;
  CFRange v39;
  CFRange v40;
  CGSize v41;
  CGSize v42;
  CGRect v43;

  v5 = *(const __CFString **)(a1 + 40);
  if (!v5 || !*(_QWORD *)(a1 + 56))
  {
    *(CGSize *)(a1 + 64) = CGSizeZero;
    return;
  }
  rect = *(double *)(a1 + 8);
  v9 = CFStringCopyLongestWordInString(v5);
  v10 = floor(a4);
  if (v10 <= a2)
  {
    LOBYTE(v11) = 0;
    v12 = ceil(a4);
    v13 = -1.0;
    v14 = a2;
    v35 = a2;
    do
    {
      v15 = fmax(v14, a4);
      CopyWithAttributes = CTFontCreateCopyWithAttributes(*(CTFontRef *)(a1 + 56), v15, 0, 0);
      if (CopyWithAttributes)
      {
        v17 = CopyWithAttributes;
        if ((v11 & 1) != 0)
        {
          v18 = v15 > v12;
          LOBYTE(v11) = 1;
        }
        else
        {
          v26 = (const __CFAttributedString *)sub_10974C(a1, v9, CopyWithAttributes, 0, *(_BYTE *)(a1 + 81), v15 * a3 / a2);
          if (v26)
          {
            v27 = v26;
            v28 = CTFramesetterCreateWithAttributedString(v26);
            if (v28)
            {
              v29 = v28;
              fitRange.location = 0;
              fitRange.length = 0;
              v42.width = 1.79769313e308;
              v39.location = 0;
              v39.length = 0;
              v42.height = 1.79769313e308;
              width = CTFramesetterSuggestFrameSizeWithConstraints(v28, v39, 0, v42, &fitRange).width;
              CFRelease(v29);
              v31 = width > rect;
              v13 = -1.0;
              v11 = !v31;
            }
            else
            {
              v11 = 0;
            }
            CFRelease(v27);
          }
          else
          {
            v11 = 0;
          }
          v18 = v15 > v12;
          if (v15 > v12 && !v11)
            goto LABEL_39;
        }
        v19 = (const __CFAttributedString *)sub_10974C(a1, *(const __CFString **)(a1 + 40), v17, 0, *(_BYTE *)(a1 + 81), v15 * a3 / a2);
        if (!v19)
          goto LABEL_39;
        v20 = v19;
        v21 = CTFramesetterCreateWithAttributedString(v19);
        if (!v21)
        {
          CFRelease(v20);
LABEL_39:
          CFRelease(v17);
          goto LABEL_40;
        }
        v22 = v21;
        fitRange.location = 0;
        fitRange.length = 0;
        v38.location = 0;
        v38.length = 0;
        v41.height = 1.79769313e308;
        v41.width = rect;
        v23 = CTFramesetterSuggestFrameSizeWithConstraints(v21, v38, 0, v41, &fitRange);
        v24 = v23.height > *(double *)(a1 + 16);
        if (v23.width > rect)
          v24 = 1;
        v25 = v18 && v24;
        if (!v18 || !v24)
        {
          if (*(_QWORD *)a1)
          {
            CFRelease(*(CFTypeRef *)a1);
            *(_QWORD *)a1 = 0;
          }
          Mutable = CGPathCreateMutable();
          if (Mutable)
          {
            v33 = Mutable;
            v43.origin.x = 0.0;
            v43.origin.y = 0.0;
            v43.size.width = rect;
            v43.size.height = v23.height;
            CGPathAddRect(Mutable, 0, v43);
            v40.location = 0;
            v40.length = 0;
            *(_QWORD *)a1 = CTFramesetterCreateFrame(v22, v40, v33, 0);
            CFRelease(v33);
          }
          sub_109950(a1);
          *(CGSize *)(a1 + 64) = v23;
          v34 = *(const void **)(a1 + 56);
          if (v34)
            CFRelease(v34);
          *(_QWORD *)(a1 + 56) = v17;
          v17 = 0;
        }
        a2 = v35;
        v13 = -1.0;
        CFRelease(v22);
        CFRelease(v20);
        if (v17)
        {
          CFRelease(v17);
          if ((v25 & 1) == 0)
            break;
        }
        else if (!v25)
        {
          break;
        }
      }
LABEL_40:
      v14 = v15 + v13;
    }
    while (v15 + v13 >= v10);
  }
  if (v9)
    CFRelease(v9);
}

void sub_107DB4(uint64_t a1, double a2, double a3, double a4, double a5)
{
  const __CTFont *v6;
  double v11;
  CFRange v12;
  double v13;
  BOOL v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  CGFloat v19;
  CGFloat v20;

  if (*(_QWORD *)(a1 + 40) && (v6 = *(const __CTFont **)(a1 + 56)) != 0)
  {
    v11 = CTFontGetSize(v6) + -1.0;
    v13 = sub_108084(a1) - a2;
    v14 = v13 <= 0.0;
    v15 = floor(a5);
    if (v11 >= v15 && v13 > 0.0)
    {
      do
      {
        v11 = fmax(v11, a5);
        sub_109990(a1, v11, v11 * a4 / a3, *(CGFloat *)(a1 + 8), 1.79769313e308);
        v16 = sub_108084(a1) - a2;
        v14 = v16 <= 0.0;
        if (v16 > 0.0)
          v11 = v11 + -1.0;
      }
      while (v11 >= v15 && v16 > 0.0);
    }
    if (!v14)
    {
      v17 = v11 * a4 / a3;
      do
      {
        v18 = *(_QWORD *)(a1 + 32);
        if (v18 < 2)
          break;
        v19 = *(double *)(a1 + 8);
        v12.location = v18 - 1;
        sub_109B00(a1, v12);
        sub_109990(a1, v11, v17, v19, v20);
        if (v18 <= *(_QWORD *)(a1 + 32))
          break;
      }
      while (sub_108084(a1) - a2 > 0.0);
    }
  }
  else
  {
    *(CGSize *)(a1 + 64) = CGSizeZero;
  }
}

void sub_107F0C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  const __CTFont *v6;
  double v11;
  CFRange v12;
  double v13;
  BOOL v14;
  double v15;
  double v17;
  CFIndex v19;
  CFIndex v20;
  double v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  CFRange v26;
  CFRange v27;

  if (*(_QWORD *)(a1 + 40) && (v6 = *(const __CTFont **)(a1 + 56)) != 0)
  {
    v11 = CTFontGetSize(v6) + -1.0;
    v26.location = *(_QWORD *)(a1 + 32) - 1;
    sub_109B00(a1, v26);
    v14 = v13 < a2;
    v15 = floor(a5);
    if (v11 >= v15 && v13 >= a2)
    {
      do
      {
        v11 = fmax(v11, a5);
        sub_109990(a1, v11, v11 * a4 / a3, *(CGFloat *)(a1 + 8), 1.79769313e308);
        v27.location = *(_QWORD *)(a1 + 32) - 1;
        sub_109B00(a1, v27);
        v14 = v17 < a2;
        if (v17 >= a2)
          v11 = v11 + -1.0;
      }
      while (v11 >= v15 && v17 >= a2);
    }
    if (!v14 && *(uint64_t *)(a1 + 32) >= 2)
    {
      v19 = 1;
      do
      {
        v12.location = v19;
        sub_109B00(a1, v12);
        v20 = *(_QWORD *)(a1 + 32);
        if (v21 >= a2)
          break;
        ++v19;
      }
      while (v19 < v20);
      if (v19 < v20)
      {
        v22 = v11 * a4;
        v23 = *(double *)(a1 + 8);
        v24 = v22 / a3;
        v12.location = v19;
        sub_109B00(a1, v12);
        sub_109990(a1, v11, v24, v23, v25);
      }
    }
  }
  else
  {
    *(CGSize *)(a1 + 64) = CGSizeZero;
  }
}

double sub_108084(uint64_t a1)
{
  CGRect v2;

  v2.origin.x = sub_108884(a1, *(_QWORD *)(a1 + 32) - 1, 8uLL);
  return CGRectGetMidY(v2);
}

void sub_1080A4(uint64_t a1, CGContextRef c, CGFloat a3, CGFloat a4, double a5, CGFloat a6)
{
  CGAffineTransform v12;
  CGAffineTransform v13;
  CGAffineTransform v14;
  CGAffineTransform v15;
  CGAffineTransform v16;

  if (*(_QWORD *)a1)
  {
    CGContextSaveGState(c);
    CGContextTranslateCTM(c, 0.0, a6);
    CGContextScaleCTM(c, 1.0, -1.0);
    if (*(_BYTE *)(a1 + 80))
    {
      memset(&v16, 0, sizeof(v16));
      CGAffineTransformMakeTranslation(&v16, 0.0, 0.0);
      v14 = v16;
      CGAffineTransformRotate(&v15, &v14, 1.57079633);
      v16 = v15;
      v13 = v15;
      CGAffineTransformTranslate(&v15, &v13, 0.0, -a5);
      v16 = v15;
      v12 = v15;
      CGContextConcatCTM(c, &v12);
    }
    CGContextTranslateCTM(c, a3, a4);
    CGContextTranslateCTM(c, 0.0, *(CGFloat *)(a1 + 72));
    CGContextScaleCTM(c, 1.0, -1.0);
    CTFrameDraw(*(CTFrameRef *)a1, c);
    CGContextRestoreGState(c);
  }
}

double BKGenericBookCover::KeylineRect(CGFloat *this)
{
  CGFloat v1;
  double result;
  CGRect v3;

  v3.size.width = this[1];
  v3.size.height = this[2];
  v3.origin.x = CGPointZero.x;
  v3.origin.y = CGPointZero.y;
  v1 = floor(v3.size.width * 14.0 * 0.00390625) + this[7] * 0.5;
  *(_QWORD *)&result = (unint64_t)CGRectInset(v3, v1, v1);
  return result;
}

void BKGenericBookCover::DrawKeyline(BKGenericBookCover *this, CGContextRef c)
{
  CGFloat v4;
  CGRect v5;

  CGContextSaveGState(c);
  CGContextSetShouldAntialias(c, 0);
  v4 = *((double *)this + 7);
  CGContextSetGrayStrokeColor(c, 1.0, 0.64);
  CGContextSetLineWidth(c, v4);
  v5.origin.x = BKGenericBookCover::KeylineRect((CGFloat *)this);
  CGContextStrokeRect(c, v5);
  CGContextRestoreGState(c);
}

uint64_t BKGenericBookCover::DrawAuthor(uint64_t this, CGContext *a2)
{
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  CGFloat x;
  CGFloat y;
  double width;
  CGFloat height;
  int v18;
  int v19;
  double v20;
  double v21;
  double v22;
  double v23;
  const __CFString *v24;
  const __CFString *v25;
  double v26;
  double v27;
  double v28;
  CTFontRef v29;
  char v30;
  double v31;
  CFRange v32;
  CGColor *RGBColor;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  double v37;
  double MaxY;
  double v39;
  CGFloat MinX;
  BOOL IsNull;
  char v42;
  double v43;
  double MinY;
  double v45;
  _BYTE v46[32];
  uint64_t v47;
  double v48;
  BOOL v49;
  char v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  if (*(_QWORD *)(this + 32))
  {
    v3 = this;
    v4 = *(double *)(this + 56);
    v5 = *(double *)(this + 8) * 0.0078125;
    v6 = floor(v5 * 4.0);
    v7 = BKGenericBookCover::KeylineRect((CGFloat *)this);
    v11 = *(_DWORD *)(v3 + 40);
    if (v11)
      v12 = v9;
    else
      v12 = v10;
    if (v11)
      v9 = v10;
    v13 = v12;
    v51 = CGRectInset(*(CGRect *)&v7, v6 + v4 * 0.5, v6 + v4 * 0.5);
    x = v51.origin.x;
    y = v51.origin.y;
    width = v51.size.width;
    height = v51.size.height;
    MinY = CGRectGetMinY(v51);
    v18 = *(_DWORD *)(v3 + 40);
    v19 = *(unsigned __int8 *)(v3 + 66);
    v20 = y;
    v21 = x;
    if (v18)
    {
      v22 = 12.0;
      if (!*(_BYTE *)(v3 + 66))
        v22 = 15.5;
      v23 = 10.0;
      if (!*(_BYTE *)(v3 + 66))
        v23 = 13.5;
      v45 = 0.0;
      v24 = CFSTR("HiraMinProN-W3");
      if (v18 == 2)
        v24 = CFSTR("PingFangSC-Light");
      if (v18 == 1)
        v25 = CFSTR("PingFangTC-Light");
      else
        v25 = v24;
      v26 = v22;
    }
    else
    {
      v22 = dbl_26A890[v19 == 0];
      if (*(_BYTE *)(v3 + 66))
        v26 = 12.0;
      else
        v26 = 16.0;
      v23 = 10.0;
      if (!*(_BYTE *)(v3 + 66))
        v23 = 14.0;
      v25 = CFSTR("AvenirNext-Medium");
      v45 = dbl_26A890[v19 == 0];
    }
    v27 = v5 * v22;
    v28 = v5 * v23;
    v29 = CTFontCreateWithName(v25, v5 * v23, 0);
    sub_1096DC((uint64_t)v46, *(const __CFString **)(v3 + 32), v29, width, v27);
    v49 = v18 != 0;
    if (v18)
      v30 = 1;
    else
      v30 = 2;
    v50 = v30;
    if (v29)
      CFRelease(v29);
    v31 = v5 * v26;
    sub_107AB0((uint64_t)v46, v28, v5 * v26, v5 * 5.5);
    if (v18)
      sub_108608((uint64_t)v46, 1, v28, v31, v5 * 5.5);
    else
      sub_108734((uint64_t)v46, -(MinY - v45 * v5), v28, v31, v5 * 5.5);
    RGBColor = BKGenericBookCover::CreateRGBColor((BKGenericBookCover *)v3, 1.0, 1.0, 1.0, 0.64);
    v34 = v21;
    v35 = v20;
    v36 = height;
    if (RGBColor)
    {
      CGContextSetFillColorWithColor(a2, RGBColor);
      CFRelease(RGBColor);
    }
    if (v47 >= 1)
    {
      v32.location = 0;
      sub_109B00((uint64_t)v46, v32);
      if (v18)
      {
        v52.origin.x = v34;
        v52.origin.y = v35;
        v52.size.width = width;
        v52.size.height = height;
        MaxY = CGRectGetMaxY(v52);
        v53.origin.x = sub_108884((uint64_t)v46, v47 - 1, 8uLL);
        v39 = MaxY - CGRectGetMaxY(v53);
      }
      else
      {
        v39 = *(double *)(v3 + 16) - v45 * v5 - v37;
        if (*(_BYTE *)(v3 + 66))
        {
          IsNull = CGRectIsNull(*(CGRect *)(v3 + 72));
          v42 = v47 != 1 || IsNull;
          if ((v42 & 1) == 0)
          {
            v55.origin.x = v34;
            v55.origin.y = v35;
            v55.size.width = width;
            v55.size.height = v36;
            v43 = CGRectGetMaxY(v55);
            v39 = (v43 + CGRectGetMaxY(*(CGRect *)(v3 + 72)) - v48) * 0.5;
          }
        }
      }
      v54.origin.x = v34;
      v54.origin.y = v35;
      v54.size.width = width;
      v54.size.height = v36;
      MinX = CGRectGetMinX(v54);
      sub_1080A4((uint64_t)v46, a2, MinX, v39, *(double *)(v3 + 8), *(CGFloat *)(v3 + 16));
    }
    return sub_109B6C((uint64_t)v46);
  }
  return this;
}

void sub_1085E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_109B6C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_108608(uint64_t a1, CFIndex a2, double a3, double a4, double a5)
{
  const __CTFont *v6;
  CFRange v11;
  double v12;
  CFIndex v13;
  BOOL v14;
  double v15;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;

  if (*(_QWORD *)(a1 + 40) && (v6 = *(const __CTFont **)(a1 + 56)) != 0)
  {
    v12 = CTFontGetSize(v6) + -1.0;
    v13 = *(_QWORD *)(a1 + 32);
    v14 = v13 <= a2;
    v15 = floor(a5);
    while (v12 >= v15 && v13 > a2)
    {
      v12 = fmax(v12, a5);
      sub_109990(a1, v12, v12 * a4 / a3, *(CGFloat *)(a1 + 8), 1.79769313e308);
      v13 = *(_QWORD *)(a1 + 32);
      v14 = v13 <= a2;
      if (v13 > a2)
        v12 = v12 + -1.0;
    }
    if (!v14 && v13 > a2)
    {
      v18 = v12 * a4;
      v19 = *(double *)(a1 + 8);
      v20 = v18 / a3;
      v11.location = a2;
      sub_109B00(a1, v11);
      sub_109990(a1, v12, v20, v19, v21);
    }
  }
  else
  {
    *(CGSize *)(a1 + 64) = CGSizeZero;
  }
}

void sub_108734(uint64_t a1, double a2, double a3, double a4, double a5)
{
  const __CTFont *v6;
  double v11;
  CFRange v12;
  double v13;
  double v14;
  double v15;
  BOOL v16;
  double v17;
  double v19;
  double v20;
  double v21;
  double v23;
  CGFloat v24;
  double v25;
  double v26;
  CFRange v27;
  CFRange v28;

  if (*(_QWORD *)(a1 + 40) && (v6 = *(const __CTFont **)(a1 + 56)) != 0)
  {
    v11 = CTFontGetSize(v6) + -1.0;
    v27.location = 0;
    sub_109B00(a1, v27);
    v14 = v13 + a2;
    v15 = *(double *)(a1 + 72);
    v16 = v14 >= v15;
    v17 = floor(a5);
    if (v11 >= v17 && v14 < v15)
    {
      do
      {
        v11 = fmax(v11, a5);
        sub_109990(a1, v11, v11 * a4 / a3, *(CGFloat *)(a1 + 8), 1.79769313e308);
        v28.location = 0;
        sub_109B00(a1, v28);
        v20 = v19 + a2;
        v21 = *(double *)(a1 + 72);
        v16 = v20 >= v21;
        if (v20 < v21)
          v11 = v11 + -1.0;
      }
      while (v11 >= v17 && v20 < v21);
    }
    if (!v16 && *(uint64_t *)(a1 + 32) >= 2)
    {
      v23 = v11 * a4;
      v24 = *(double *)(a1 + 8);
      v25 = v23 / a3;
      v12.location = 0;
      sub_109B00(a1, v12);
      sub_109990(a1, v11, v25, v24, v26 + a2);
    }
  }
  else
  {
    *(CGSize *)(a1 + 64) = CGSizeZero;
  }
}

double sub_108884(uint64_t a1, CFIndex idx, CTLineBoundsOptions a3)
{
  double x;
  const __CTLine *ValueAtIndex;
  const __CTLine *v8;
  CGPoint v10;
  CFRange v11;
  CGRect BoundsWithOptions;

  x = CGRectNull.origin.x;
  if ((idx & 0x8000000000000000) == 0 && *(_QWORD *)(a1 + 32) > idx)
  {
    ValueAtIndex = (const __CTLine *)CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 24), idx);
    if (ValueAtIndex)
    {
      v8 = ValueAtIndex;
      v10 = CGPointZero;
      v11.location = idx;
      v11.length = 1;
      CTFrameGetLineOrigins(*(CTFrameRef *)a1, v11, &v10);
      BoundsWithOptions = CTLineGetBoundsWithOptions(v8, a3);
      x = v10.x + BoundsWithOptions.origin.x;
      BoundsWithOptions.origin.y = BoundsWithOptions.origin.y + v10.y;
      BoundsWithOptions.origin.x = v10.x + BoundsWithOptions.origin.x;
      CGRectGetMaxY(BoundsWithOptions);
    }
  }
  return x;
}

void BKGenericBookCoverCreateImageWithStyle()
{
  operator new();
}

void sub_108A30()
{
  operator delete();
}

BOOL containsSubstring(CFStringRef theString, const __CFString *a2)
{
  _BOOL8 result;

  result = 0;
  if (theString)
  {
    if (a2)
      return CFStringFind(theString, a2, 0).location != -1;
  }
  return result;
}

BOOL languageIsTraditionalChinese(CFStringRef theString)
{
  CFMutableStringRef MutableCopy;
  _BOOL8 v2;
  int HasPrefix;

  if (!theString)
    return 0;
  MutableCopy = CFStringCreateMutableCopy(kCFAllocatorDefault, 0, theString);
  CFStringLowercase(MutableCopy, 0);
  if (!MutableCopy)
  {
LABEL_7:
    HasPrefix = CFStringHasPrefix(MutableCopy, CFSTR("yue"));
    v2 = HasPrefix != 0;
    if (HasPrefix || !CFStringHasPrefix(MutableCopy, CFSTR("zh")))
    {
      if (!MutableCopy)
        return v2;
      goto LABEL_13;
    }
    if (MutableCopy)
    {
      v2 = CFStringFind(MutableCopy, CFSTR("tw"), 0).location != -1;
      goto LABEL_13;
    }
    return 0;
  }
  if (CFStringFind(MutableCopy, CFSTR("hant"), 0).location == -1)
  {
    if (CFStringFind(MutableCopy, CFSTR("hans"), 0).location != -1)
    {
      v2 = 0;
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  v2 = 1;
LABEL_13:
  CFRelease(MutableCopy);
  return v2;
}

unint64_t languageIsSimplifiedChinese(CFStringRef theString)
{
  unint64_t v1;
  CFMutableStringRef MutableCopy;

  v1 = (unint64_t)theString;
  if (theString)
  {
    MutableCopy = CFStringCreateMutableCopy(kCFAllocatorDefault, 0, theString);
    CFStringLowercase(MutableCopy, 0);
    if (MutableCopy && CFStringFind(MutableCopy, CFSTR("hans"), 0).location != -1)
    {
      v1 = 1;
      goto LABEL_12;
    }
    if (languageIsTraditionalChinese((CFStringRef)v1) || languageIsHongKongChinese((CFStringRef)v1))
    {
      v1 = 0;
      if (!MutableCopy)
        return v1;
      goto LABEL_12;
    }
    if (!CFStringHasPrefix(MutableCopy, CFSTR("zh")) && !CFStringHasPrefix(MutableCopy, CFSTR("cmn")))
    {
      v1 = CFStringHasPrefix(MutableCopy, CFSTR("yue")) != 0;
      if (!MutableCopy)
        return v1;
      goto LABEL_12;
    }
    v1 = 1;
    if (MutableCopy)
LABEL_12:
      CFRelease(MutableCopy);
  }
  return v1;
}

BOOL languageIsHongKongChinese(CFStringRef theString)
{
  CFMutableStringRef MutableCopy;
  _BOOL8 v2;

  if (theString)
  {
    MutableCopy = CFStringCreateMutableCopy(kCFAllocatorDefault, 0, theString);
    CFStringLowercase(MutableCopy, 0);
    if (!CFStringHasPrefix(MutableCopy, CFSTR("zh")))
    {
      v2 = 0;
      if (!MutableCopy)
        return v2;
      goto LABEL_10;
    }
    if (MutableCopy)
    {
      v2 = CFStringFind(MutableCopy, CFSTR("hk"), 0).location != -1
        || CFStringFind(MutableCopy, CFSTR("mo"), 0).location != -1;
LABEL_10:
      CFRelease(MutableCopy);
      return v2;
    }
  }
  return 0;
}

const __CFString *languageIsJapanese(const __CFString *result)
{
  if (result)
    return (const __CFString *)(CFStringCompare(result, CFSTR("ja"), 1uLL) == kCFCompareEqualTo);
  return result;
}

uint64_t BKGenericBookCoverLayoutFromLanguageAndVerticality(CFStringRef theString1, int a2)
{
  uint64_t result;

  result = 0;
  if (theString1 && a2)
  {
    if (CFStringCompare(theString1, CFSTR("ja"), 1uLL))
    {
      if (languageIsTraditionalChinese(theString1) || languageIsHongKongChinese(theString1))
      {
        return 1;
      }
      else if (languageIsSimplifiedChinese(theString1))
      {
        return 2;
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 3;
    }
  }
  return result;
}

uint64_t BKGenericBookCoverLayoutFromString(const __CFString *a1)
{
  uint64_t v2;

  v2 = 1;
  if (CFStringCompare(a1, CFSTR("verticalTradChinese"), 1uLL))
  {
    if (CFStringCompare(a1, CFSTR("verticalSimpChinese"), 1uLL))
    {
      if (CFStringCompare(a1, CFSTR("verticalJapanese"), 1uLL))
        return 0;
      else
        return 3;
    }
    else
    {
      return 2;
    }
  }
  return v2;
}

uint64_t BKGenericBookCoverStyleFromString(const __CFString *a1)
{
  uint64_t v2;

  if (!a1)
    return 0;
  if (CFStringCompare(a1, CFSTR("gradient"), 1uLL) == kCFCompareEqualTo)
    return 4;
  v2 = 1;
  if (CFStringCompare(a1, CFSTR("leather"), 1uLL))
  {
    if (CFStringCompare(a1, CFSTR("paperboard"), 1uLL))
    {
      if (CFStringCompare(a1, CFSTR("audiobook"), 1uLL))
        return 0;
      else
        return 3;
    }
    else
    {
      return 2;
    }
  }
  return v2;
}

uint64_t BKGenericBookCoverColorFromString(const __CFString *a1)
{
  uint64_t v2;

  if (!a1 || CFStringCompare(a1, CFSTR("red"), 1uLL) == kCFCompareEqualTo)
    return 0;
  v2 = 1;
  if (CFStringCompare(a1, CFSTR("ltbrown"), 1uLL))
  {
    if (CFStringCompare(a1, CFSTR("dkbrown"), 1uLL) && CFStringCompare(a1, CFSTR("brown"), 1uLL))
    {
      if (CFStringCompare(a1, CFSTR("green"), 1uLL))
      {
        if (CFStringCompare(a1, CFSTR("ltblue"), 1uLL))
        {
          if (CFStringCompare(a1, CFSTR("dkblue"), 1uLL) && CFStringCompare(a1, CFSTR("blue"), 1uLL))
          {
            if (CFStringCompare(a1, CFSTR("purple"), 1uLL))
            {
              if (CFStringCompare(a1, CFSTR("gray"), 1uLL))
                return 0;
              else
                return 7;
            }
            else
            {
              return 6;
            }
          }
          else
          {
            return 5;
          }
        }
        else
        {
          return 4;
        }
      }
      else
      {
        return 3;
      }
    }
    else
    {
      return 2;
    }
  }
  return v2;
}

CFStringRef BKGenericBookCoverCreateTemplateWithStyleAndColor(int a1, int a2)
{
  const __CFString *v2;
  const __CFString *v3;
  const __CFArray *v4;
  const __CFArray *v5;
  CFStringRef v6;
  const void *v8[3];

  v2 = CFSTR("default");
  if (a1 == 4)
    v2 = CFSTR("gradient");
  if (a1 == 3)
    v2 = CFSTR("audiobook");
  if ((a2 - 1) > 6)
    v3 = CFSTR("red");
  else
    v3 = *(&off_291460 + a2 - 1);
  v8[1] = v3;
  v8[2] = 0;
  v8[0] = v2;
  v4 = CFArrayCreate(0, v8, 2, 0);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = CFStringCreateByCombiningStrings(0, v4, CFSTR("."));
  CFRelease(v5);
  return v6;
}

const __CFString *BKGenericBookCoverCreateTemplateWithItemID(const __CFString *result, uint64_t a2, int a3)
{
  const __CFString *v4;
  int v5;
  int v6;
  CC_MD5_CTX c;
  CFIndex usedBufLen;
  unsigned __int8 md[16];
  UInt8 buffer[256];
  CFRange v11;

  if (result)
  {
    v4 = result;
    v11.length = CFStringGetLength(result);
    usedBufLen = v11.length;
    v11.location = 0;
    if (CFStringGetBytes(v4, v11, 0x8000100u, 0, 0, buffer, 256, &usedBufLen) < 1)
    {
      return 0;
    }
    else
    {
      CC_MD5_Init(&c);
      CC_MD5_Update(&c, buffer, usedBufLen);
      CC_MD5_Final(md, &c);
      if ((*(_QWORD *)&a3 & 0x10000) != 0)
        v5 = 3;
      else
        v5 = 4;
      if ((a3 & 0x100) != 0)
        v6 = 7;
      else
        v6 = dword_26A820[(md[0] % 0x28u - 5 * ((unsigned __int16)(52 * (md[0] % 0x28u)) >> 8))];
      return BKGenericBookCoverCreateTemplateWithStyleAndColor(v5, v6);
    }
  }
  return result;
}

void BKGenericBookCoverClearCache()
{
  os_unfair_lock_lock((os_unfair_lock_t)&unk_311230);
  sub_109278();
  os_unfair_lock_unlock((os_unfair_lock_t)&unk_311230);
}

void sub_109278()
{
  if (qword_311228)
  {
    CFDictionaryRemoveAllValues((CFMutableDictionaryRef)qword_311228);
    CFRelease((CFTypeRef)qword_311228);
    qword_311228 = 0;
  }
}

const __CFString *BKGenericBookCoverCreateImageWithItemID(int a1, int a2, uint64_t a3, int a4, const __CFString *a5)
{
  return BKGenericBookCoverCreateImageWithItemIDAndLayout(a1, a2, a3, a4, a5, 0);
}

const __CFString *BKGenericBookCoverCreateImageWithItemIDAndLayout(int a1, int a2, uint64_t a3, int a4, const __CFString *a5, int a6)
{
  int v8;
  const __CFString *result;

  v8 = a3;
  result = BKGenericBookCoverCreateTemplateWithItemID(a5, a3, a4);
  if (result)
    BKGenericBookCoverCreateImageWithTemplate(a1, a2, v8, a4, a6, result);
  return result;
}

void BKGenericBookCoverCreateImageWithTemplate(int a1, int a2, int a3, int a4, int a5, CFStringRef theString)
{
  const __CFArray *TemplateComponentArray;
  const __CFArray *v7;
  const __CFString *ValueAtIndex;
  const __CFString *v9;

  TemplateComponentArray = BKGenericBookCoverCreateTemplateComponentArray(theString);
  if (TemplateComponentArray)
  {
    v7 = TemplateComponentArray;
    ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(TemplateComponentArray, 0);
    BKGenericBookCoverStyleFromString(ValueAtIndex);
    v9 = (const __CFString *)CFArrayGetValueAtIndex(v7, 1);
    BKGenericBookCoverColorFromString(v9);
    BKGenericBookCoverCreateImageWithStyle();
  }
  BKGenericBookCoverCreateImageWithStyle();
}

double BKGenericBookCoverSizeThatFits(uint64_t a1, uint64_t a2, double a3, double a4)
{
  double v4;
  double v5;
  void (**v7)(BKGenericBookCover *__hidden);
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = off_2913E0;
  v8 = a3;
  v9 = a4;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 4;
  v14 = a1;
  v15 = a2;
  v4 = BKGenericBookCover::SizeThatFits((BKGenericBookCover *)&v7, *(CGSize *)&a3);
  v8 = v4;
  v9 = v5;
  BKGenericBookCover::~BKGenericBookCover((BKGenericBookCover *)&v7);
  return v4;
}

const __CFArray *BKGenericBookCoverCreateTemplateComponentArray(CFStringRef theString)
{
  const __CFArray *ArrayBySeparatingStrings;
  const __CFArray *v2;

  if (!theString)
    return 0;
  ArrayBySeparatingStrings = CFStringCreateArrayBySeparatingStrings(0, theString, CFSTR("."));
  v2 = ArrayBySeparatingStrings;
  if (ArrayBySeparatingStrings && CFArrayGetCount(ArrayBySeparatingStrings) != 2)
  {
    CFRelease(v2);
    return 0;
  }
  return v2;
}

BOOL BKGenericBookCoverTemplateNameValid(const __CFString *a1)
{
  const __CFArray *TemplateComponentArray;
  const __CFArray *v2;

  TemplateComponentArray = BKGenericBookCoverCreateTemplateComponentArray(a1);
  v2 = TemplateComponentArray;
  if (TemplateComponentArray)
    CFRelease(TemplateComponentArray);
  return v2 != 0;
}

void BKGenericBookCoverCreateImage()
{
  BKGenericBookCoverCreateImageWithStyle();
}

const __CFString *BKGenericBookCoverTemplateNameFromImageSource(CGImageSource *a1, _DWORD *a2)
{
  const __CFDictionary *v4;
  const __CFDictionary *v5;
  const __CFDictionary *Value;
  const __CFString *v7;
  const __CFArray *ArrayBySeparatingStrings;
  const __CFArray *v9;
  const __CFString *ValueAtIndex;
  int v11;
  int v12;
  CFTypeRef v13;

  if (CGImageSourceGetCount(a1))
  {
    v4 = CGImageSourceCopyPropertiesAtIndex(a1, 0, 0);
    if (v4)
    {
      v5 = v4;
      Value = (const __CFDictionary *)CFDictionaryGetValue(v4, kCGImagePropertyIPTCDictionary);
      if (Value)
      {
        v7 = (const __CFString *)CFDictionaryGetValue(Value, kCGImagePropertyIPTCFixtureIdentifier);
        if (!v7)
        {
LABEL_14:
          CFRelease(v5);
          return v7;
        }
        ArrayBySeparatingStrings = CFStringCreateArrayBySeparatingStrings(0, v7, CFSTR("."));
        if (ArrayBySeparatingStrings)
        {
          v9 = ArrayBySeparatingStrings;
          if (CFArrayGetCount(ArrayBySeparatingStrings) >= 2
            && (ValueAtIndex = (const __CFString *)CFArrayGetValueAtIndex(v9, 0),
                (v11 = BKGenericBookCoverStyleFromString(ValueAtIndex)) != 0))
          {
            v12 = v11;
            v13 = CFRetain(v7);
            v7 = (const __CFString *)CFAutorelease(v13);
            if (a2)
              *a2 = v12;
          }
          else
          {
            v7 = 0;
          }
          CFRelease(v9);
          goto LABEL_14;
        }
      }
      v7 = 0;
      goto LABEL_14;
    }
  }
  return 0;
}

BOOL BKGenericBookCoverIsLegacyGenericBookCoverImageSource(CGImageSource *a1)
{
  BOOL v1;
  int v3;

  v3 = 0;
  if (BKGenericBookCoverTemplateNameFromImageSource(a1, &v3))
    v1 = (v3 - 5) >= 0xFFFFFFFE;
  else
    v1 = 1;
  return !v1;
}

BOOL BKGenericBookCoverIsGenericBookCoverImageSource(CGImageSource *a1)
{
  return BKGenericBookCoverTemplateNameFromImageSource(a1, 0) != 0;
}

uint64_t BKGenericBookCoverDefaultSettings()
{
  return 0x3FF0000000000000;
}

uint64_t sub_1096DC(uint64_t a1, const __CFString *a2, CFTypeRef cf, double a4, double a5)
{
  *(_QWORD *)a1 = 0;
  *(double *)(a1 + 8) = a4;
  *(double *)(a1 + 16) = a5;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  *(CGSize *)(a1 + 64) = CGSizeZero;
  *(_BYTE *)(a1 + 80) = 0;
  if (a2)
    *(_QWORD *)(a1 + 40) = CFStringCreateCopy(0, a2);
  if (cf)
    *(_QWORD *)(a1 + 56) = CFRetain(cf);
  return a1;
}

const __CFString *sub_10974C(uint64_t a1, const __CFString *a2, CTFontRef font, char a4, char a5, double a6)
{
  const __CFString *v6;
  double Size;
  CTParagraphStyleRef v10;
  double v11;
  float v12;
  CFNumberRef v13;
  CFNumberRef v14;
  CFBooleanRef v15;
  const __CFDictionary *v16;
  const __CFDictionary *v17;
  float valuePtr;
  double v20;
  char v21;
  char v22;
  void *values[5];
  void *keys[5];
  CTParagraphStyleSetting settings;
  int v26;
  uint64_t v27;
  char *v28;
  int v29;
  uint64_t v30;
  double *v31;
  int v32;
  uint64_t v33;
  double *v34;

  v6 = a2;
  v22 = a4;
  v21 = a5;
  v20 = a6;
  if (a2)
  {
    Size = CTFontGetSize(font);
    settings.spec = kCTParagraphStyleSpecifierLineBreakMode;
    settings.valueSize = 1;
    settings.value = &v22;
    v27 = 1;
    v28 = &v21;
    v26 = 0;
    v29 = 8;
    v30 = 8;
    v31 = &v20;
    v32 = 9;
    v33 = 8;
    v34 = &v20;
    v10 = CTParagraphStyleCreate(&settings, 4uLL);
    v11 = dbl_26A8A0[Size <= 10.0];
    if (*(_BYTE *)(a1 + 80))
      v11 = 0.125;
    v12 = Size * v11;
    valuePtr = v12;
    v13 = CFNumberCreate(kCFAllocatorDefault, kCFNumberFloatType, &valuePtr);
    v14 = v13;
    keys[0] = (void *)kCTFontAttributeName;
    keys[1] = (void *)kCTForegroundColorFromContextAttributeName;
    v15 = kCFBooleanTrue;
    values[0] = font;
    values[1] = kCFBooleanTrue;
    keys[2] = (void *)kCTParagraphStyleAttributeName;
    keys[3] = (void *)kCTVerticalFormsAttributeName;
    if (!*(_BYTE *)(a1 + 80))
      v15 = kCFBooleanFalse;
    values[2] = v10;
    values[3] = v15;
    keys[4] = (void *)kCTKernAttributeName;
    values[4] = v13;
    v16 = CFDictionaryCreate(0, (const void **)keys, (const void **)values, 5, 0, &kCFTypeDictionaryValueCallBacks);
    if (v16)
    {
      v17 = v16;
      v6 = (const __CFString *)CFAttributedStringCreate(0, v6, v16);
      CFRelease(v17);
    }
    else
    {
      v6 = 0;
    }
    CFRelease(v14);
    CFRelease(v10);
  }
  return v6;
}

const __CTFrame *sub_109950(uint64_t a1)
{
  const __CTFrame *result;

  result = *(const __CTFrame **)a1;
  if (result)
  {
    result = CTFrameGetLines(result);
    *(_QWORD *)(a1 + 24) = result;
    if (result)
      result = (const __CTFrame *)CFArrayGetCount(result);
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
  }
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

void sub_109990(uint64_t a1, CGFloat a2, double a3, CGFloat a4, CGFloat a5)
{
  const __CTFont *CopyWithAttributes;
  const __CTFont *v10;
  const __CFAttributedString *v11;
  const __CFAttributedString *v12;
  const __CTFramesetter *v13;
  const __CTFramesetter *v14;
  CGSize v15;
  CGPath *Mutable;
  const CGPath *v17;
  const void *v18;
  CFRange v19;
  CFRange v20;
  CFRange v21;
  CGSize v22;
  CGRect v23;

  CopyWithAttributes = CTFontCreateCopyWithAttributes(*(CTFontRef *)(a1 + 56), a2, 0, 0);
  if (!CopyWithAttributes)
    return;
  v10 = CopyWithAttributes;
  v11 = (const __CFAttributedString *)sub_10974C(a1, *(const __CFString **)(a1 + 40), CopyWithAttributes, 0, *(_BYTE *)(a1 + 81), a3);
  if (!v11)
  {
LABEL_13:
    CFRelease(v10);
    return;
  }
  v12 = v11;
  v13 = CTFramesetterCreateWithAttributedString(v11);
  if (!v13)
  {
    CFRelease(v12);
    goto LABEL_13;
  }
  v14 = v13;
  v19.location = 0;
  v19.length = 0;
  v20.location = 0;
  v20.length = 0;
  v22.width = a4;
  v22.height = a5;
  v15 = CTFramesetterSuggestFrameSizeWithConstraints(v13, v20, 0, v22, &v19);
  if (*(_QWORD *)a1)
  {
    CFRelease(*(CFTypeRef *)a1);
    *(_QWORD *)a1 = 0;
  }
  Mutable = CGPathCreateMutable();
  if (Mutable)
  {
    v17 = Mutable;
    v23.origin.x = 0.0;
    v23.origin.y = 0.0;
    v23.size.width = a4;
    v23.size.height = v15.height;
    CGPathAddRect(Mutable, 0, v23);
    v21.location = 0;
    v21.length = 0;
    *(_QWORD *)a1 = CTFramesetterCreateFrame(v14, v21, v17, 0);
    CFRelease(v17);
  }
  sub_109950(a1);
  *(CGSize *)(a1 + 64) = v15;
  v18 = *(const void **)(a1 + 56);
  if (v18)
    CFRelease(v18);
  *(_QWORD *)(a1 + 56) = v10;
  CFRelease(v14);
  CFRelease(v12);
}

CGFloat sub_109B00(uint64_t a1, CFRange a2)
{
  const __CTFrame *v3;
  CGPoint v5;

  v5 = CGPointZero;
  if ((a2.location & 0x8000000000000000) == 0 && *(_QWORD *)(a1 + 32) > a2.location)
  {
    v3 = *(const __CTFrame **)a1;
    if (*(_QWORD *)a1)
    {
      a2.length = 1;
      CTFrameGetLineOrigins(v3, a2, &v5);
      v5.y = *(double *)(a1 + 72) - v5.y;
    }
  }
  return v5.x;
}

uint64_t sub_109B6C(uint64_t a1)
{
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;

  v2 = *(const void **)a1;
  if (v2)
    CFRelease(v2);
  v3 = *(const void **)(a1 + 40);
  if (v3)
    CFRelease(v3);
  v4 = *(const void **)(a1 + 48);
  if (v4)
    CFRelease(v4);
  v5 = *(const void **)(a1 + 56);
  if (v5)
    CFRelease(v5);
  return a1;
}

CGImageRef sub_109BC0(int a1, CGImageRef image)
{
  CGImageRetain(image);
  return image;
}

void sub_109BE8(int a1, CGImageRef image)
{
  CGImageRelease(image);
}

CFStringRef sub_109BF0(uint64_t a1)
{
  return CFStringCreateWithFormat(0, 0, CFSTR("<CGImageRef> %p"), a1);
}

BOOL sub_109C20(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

CGFloat IMRectFlippedForRTL(int a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  double v17;
  double MaxX;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  if (a1)
  {
    v20.origin.x = a6;
    v20.origin.y = a7;
    v20.size.width = a8;
    v20.size.height = a9;
    MaxX = CGRectGetMaxX(v20);
    v21.origin.x = a2;
    v21.origin.y = a3;
    v21.size.width = a4;
    v21.size.height = a5;
    v17 = MaxX - CGRectGetMaxX(v21);
    v22.origin.x = a6;
    v22.origin.y = a7;
    v22.size.width = a8;
    v22.size.height = a9;
    return CGRectGetMinX(v22) + v17;
  }
  return a2;
}

double IMSizeRound(double a1)
{
  return round(a1);
}

id AESharingLog()
{
  if (qword_311240 != -1)
    dispatch_once(&qword_311240, &stru_291498);
  return (id)qword_311238;
}

void sub_10A200(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AESharing");
  v2 = (void *)qword_311238;
  qword_311238 = (uint64_t)v1;

}

void sub_10A658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10A674(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_10A684(uint64_t a1)
{

}

void sub_10A68C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  v3 = a2;
  v15 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotation maxModificationDateExpressionDescription](AEAnnotation, "maxModificationDateExpressionDescription"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotation userAnnotationTypeValues](AEAnnotation, "userAnnotationTypeValues"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K IN %@"), CFSTR("annotationType"), v4));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObject:](NSArray, "arrayWithObject:", v15));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotation dictionaryResultsForAssetsWithPredicate:properties:inManagedObjectContext:](AEAnnotation, "dictionaryResultsForAssetsWithPredicate:properties:inManagedObjectContext:", v5, v6, v3));

  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "lastObject"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotation maxModificationDateColumnName](AEAnnotation, "maxModificationDateColumnName"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", v9));

  objc_msgSend(v10, "timeIntervalSince1970");
  v12 = objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", (unint64_t)v11));
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v14 = *(void **)(v13 + 40);
  *(_QWORD *)(v13 + 40) = v12;

}

void sub_10A7DC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  _BOOL8 v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;

  v16 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "maxAnnotationVersionInMOC:"));
  v4 = v3;
  if (v3)
    v5 = objc_msgSend(v3, "compare:options:", CFSTR("2"), 64) == (char *)&dword_0 + 1;
  else
    v5 = 0;
  v6 = objc_msgSend(*(id *)(a1 + 32), "newBookmarkDictionarysArray:modern:", v16, v5);
  v7 = objc_alloc((Class)NSMutableDictionary);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(v8 + 16);
  v10 = objc_msgSend((id)objc_opt_class(v8), "defaultBookmarkGenerationKey");
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
  v12 = objc_msgSend(v7, "initWithObjectsAndKeys:", v9, v11, 0);

  v13 = (void *)objc_opt_class(*(_QWORD *)(a1 + 32));
  if (v5)
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "defaultWrapperRevisionKey"));
    objc_msgSend(v12, "setObject:forKey:", v4, v14);

    objc_msgSend(v12, "setObject:forKey:", v6, v4);
  }
  else
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "legacyBookmarkKey"));
    objc_msgSend(v12, "setObject:forKey:", v6, v15);

  }
  objc_msgSend(*(id *)(a1 + 32), "appendData:", v12);

}

id BCAppIntentsAssetViewControllerAddInfoChangeObserver(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v14;
  _QWORD v15[4];
  id v16;

  v3 = a1;
  v4 = a2;
  v8 = v4;
  if (!v3)
  {
    BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/AppIntents/BCAppIntentsAssetViewController.m", 64, (uint64_t)"id<NSObject>  _Nonnull BCAppIntentsAssetViewControllerAddInfoChangeObserver(__strong id<BCAppIntentsAssetViewController> _Nonnull, __strong dispatch_block_t _Nonnull)", (uint64_t)"assetViewController", 0, v5, v6, v7, v14);
    if (v8)
      goto LABEL_3;
LABEL_5:
    BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/AppIntents/BCAppIntentsAssetViewController.m", 65, (uint64_t)"id<NSObject>  _Nonnull BCAppIntentsAssetViewControllerAddInfoChangeObserver(__strong id<BCAppIntentsAssetViewController> _Nonnull, __strong dispatch_block_t _Nonnull)", (uint64_t)"callback", 0, v5, v6, v7, v14);
    goto LABEL_3;
  }
  if (!v4)
    goto LABEL_5;
LABEL_3:
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSOperationQueue mainQueue](NSOperationQueue, "mainQueue"));
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10B850;
  v15[3] = &unk_291518;
  v16 = v8;
  v11 = v8;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "addObserverForName:object:queue:usingBlock:", CFSTR("BCAppIntentsAssetViewControllerInfoDidChangeNotification"), v3, v10, v15));

  return v12;
}

void sub_10B850(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void BCAppIntentsAssetViewControllerRemoveInfoChangeObserver(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "removeObserver:", v1);

}

void BCAppIntentsAssetViewControllerNotifyInfoChanged(void *a1)
{
  id v1;
  id v2;

  if (a1)
  {
    v1 = a1;
    v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
    objc_msgSend(v2, "postNotificationName:object:", CFSTR("BCAppIntentsAssetViewControllerInfoDidChangeNotification"), v1);

  }
}

void sub_10C90C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_imageSetForIdentifier:", *(_QWORD *)(a1 + 40)));
  v4 = v2;
  if (v2)
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "primaryEntry"));
  else
    v3 = 0;
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

}

void sub_10CA78(uint64_t a1, int a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;

  if (a2)
  {
    v3 = BCImageCacheLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "allObjects"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "componentsJoinedByString:", CFSTR(", ")));
      v8 = 138412290;
      v9 = v6;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "BICImageSetPersistence: About to make bulk -_refetchInterestsForNewVersion: calls for image set IDs '%@'", (uint8_t *)&v8, 0xCu);

    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "delegate"));
    objc_msgSend(v7, "imageSetPersisting:newVersionForImageSetIdentifierss:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));

  }
}

void sub_10CC70(id *a1)
{
  char v1;
  void *i;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *j;
  void *v11;
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  void *v16;
  id obj;
  uint64_t v18;
  id v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint8_t buf[4];
  void *v31;
  _BYTE v32[128];
  _BYTE v33[128];

  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  obj = a1[4];
  v20 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v33, 16);
  v1 = 0;
  if (v20)
  {
    v18 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v20; i = (char *)i + 1)
      {
        if (*(_QWORD *)v27 != v18)
          objc_enumerationMutation(obj);
        v3 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)i);
        v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[5], "persistentStore"));
        v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "imageSetForIdentifier:", v3));

        v24 = 0u;
        v25 = 0u;
        v22 = 0u;
        v23 = 0u;
        v21 = v5;
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "imageEntries"));
        v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v22, v32, 16);
        if (v7)
        {
          v8 = v7;
          v9 = *(_QWORD *)v23;
          do
          {
            for (j = 0; j != v8; j = (char *)j + 1)
            {
              if (*(_QWORD *)v23 != v9)
                objc_enumerationMutation(v6);
              v11 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)j);
              if (+[BICImageEntry shouldBeRemovedOnPrimaryChanged:](BICImageEntry, "shouldBeRemovedOnPrimaryChanged:", v11))
              {
                objc_msgSend(v11, "setQuality:", 3);
                v12 = BCImageCacheLog();
                v13 = objc_claimAutoreleasedReturnValue(v12);
                if (os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
                {
                  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "entryLocation"));
                  *(_DWORD *)buf = 138412290;
                  v31 = v14;
                  _os_log_impl(&dword_0, v13, OS_LOG_TYPE_INFO, "BICImageSetPersistence: Marking non primary as old: %@", buf, 0xCu);

                }
                v1 = 1;
              }
            }
            v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v22, v32, 16);
          }
          while (v8);
        }

      }
      v20 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v33, 16);
    }
    while (v20);
  }

  objc_msgSend(a1[5], "_saveIfNeeded");
  v15 = objc_retainBlock(a1[6]);
  v16 = v15;
  if (v15)
    (*((void (**)(id, _QWORD))v15 + 2))(v15, v1 & 1);

}

void sub_10CFD0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "entryLocationForLevelID:", *(__int16 *)(a1 + 56)));
  v3 = *(void **)(a1 + 40);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifier"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_imageSetForIdentifier:", v4));

  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "imageEntries", 0));
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v14;
    while (2)
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v6);
        v10 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "entryLocation"));
        v12 = objc_msgSend(v11, "isEqualToString:", v2);

        if (v12)
        {
          v7 = v10;
          goto LABEL_11;
        }
      }
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      if (v7)
        continue;
      break;
    }
  }
LABEL_11:

  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  objc_msgSend(*(id *)(a1 + 40), "_saveIfNeeded");

}

void sub_10D218(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 48);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "identifier"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "_imageSetForIdentifier:", v4));
  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);

}

void sub_10E2F4(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  NSObject *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  void *j;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint8_t *v26;
  id obj;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint8_t v36[128];
  uint8_t buf[4];
  void *v38;
  _BYTE v39[128];

  kdebug_trace(725353756, 0, objc_msgSend(*(id *)(a1 + 32), "count"), 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "persistentStore"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchImageSetsWithIDs:", *(_QWORD *)(a1 + 48)));

  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  obj = v3;
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v33;
    v25 = 138412290;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(_QWORD *)v33 != v6)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * (_QWORD)i);
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "identifier", v25));
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "objectForKeyedSubscript:", v9));
        if (objc_msgSend(v10, "count"))
        {
          objc_msgSend(*(id *)(a1 + 40), "_addImageEntriesForDescribedImages:inLevelID:toSet:addedEntries:", v10, *(__int16 *)(a1 + 80), v8, *(_QWORD *)(a1 + 64));
        }
        else
        {
          v11 = BCImageCacheLog();
          v12 = objc_claimAutoreleasedReturnValue(v11);
          if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = v25;
            v38 = v9;
            _os_log_debug_impl(&dword_0, v12, OS_LOG_TYPE_DEBUG, "BICImageSetPersistence: In existing results, no images for imageSet identifier %@", buf, 0xCu);
          }

        }
        objc_msgSend(*(id *)(a1 + 56), "setObject:forKeyedSubscript:", 0, v9);

      }
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v39, 16);
    }
    while (v5);
  }

  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "allValues"));
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v28, v36, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v29;
    v26 = &buf[1];
    do
    {
      for (j = 0; j != v15; j = (char *)j + 1)
      {
        if (*(_QWORD *)v29 != v16)
          objc_enumerationMutation(v13);
        v18 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * (_QWORD)j);
        if (objc_msgSend(v18, "count", v26))
        {
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "persistentStore"));
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "objectAtIndexedSubscript:", 0));
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "identifier"));
          v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "addNewImageSetWithIdentifier:", v21));

          v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
          -[NSObject setDateRequested:](v22, "setDateRequested:", v23);

          objc_msgSend(*(id *)(a1 + 40), "_addImageEntriesForDescribedImages:inLevelID:toSet:addedEntries:", v18, *(__int16 *)(a1 + 80), v22, *(_QWORD *)(a1 + 64));
        }
        else
        {
          v24 = BCImageCacheLog();
          v22 = objc_claimAutoreleasedReturnValue(v24);
          if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
            sub_1B7600(buf, v26, v22);
        }

      }
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v28, v36, 16);
    }
    while (v15);
  }

  kdebug_trace(725353756, 1, objc_msgSend(*(id *)(a1 + 32), "count"), 0, 0);
  objc_msgSend(*(id *)(a1 + 40), "_saveIfNeeded");
  (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();

}

void sub_10E770(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  void *v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImagesToDictionaryOfSets:](BICDescribedImage, "describedImagesToDictionaryOfSets:", *(_QWORD *)(a1 + 32)));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "persistentStore"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "fetchImageSetsWithDescribedImages:", *(_QWORD *)(a1 + 32)));

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v6 = v5;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v8; i = (char *)i + 1)
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * (_QWORD)i);
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "identifier", (_QWORD)v14));
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", v12));

        objc_msgSend(*(id *)(a1 + 40), "_removeImageEntriesForDescribedImages:inLevelID:fromSet:removedEntries:", v13, *(__int16 *)(a1 + 56), v11, v2);
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  objc_msgSend(*(id *)(a1 + 40), "_saveIfNeeded");
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

}

void sub_10EA84(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *j;
  void *v23;
  id v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  _BYTE v35[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchImageEntriesMatchingAddedEntries:", *(_QWORD *)(a1 + 40)));

  v4 = *(void **)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "valueForKey:", CFSTR("entryLocation")));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:](NSDictionary, "dictionaryWithObjects:forKeys:", v4, v5));

  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v7 = v3;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v31;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v31 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v12, "setState:", 2);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "entryLocation"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v13));

        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "storedData"));
        objc_msgSend(v12, "setDataStoreInformation:", v15);

        objc_msgSend(v12, "setPermanent:", objc_msgSend(v14, "permanent"));
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
    }
    while (v9);
  }

  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "fetchImageEntriesMatchingAddedEntries:", *(_QWORD *)(a1 + 48)));

  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v18 = v17;
  v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)v27;
    do
    {
      for (j = 0; j != v20; j = (char *)j + 1)
      {
        if (*(_QWORD *)v27 != v21)
          objc_enumerationMutation(v18);
        v23 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * (_QWORD)j);
        if (objc_msgSend(v23, "state", (_QWORD)v26) == 1)
          objc_msgSend(v23, "deleteEntry");
      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
    }
    while (v20);
  }

  objc_msgSend(*(id *)(a1 + 32), "_saveIfNeeded");
  v24 = objc_retainBlock(*(id *)(a1 + 56));
  v25 = v24;
  if (v24)
    (*((void (**)(id))v24 + 2))(v24);

}

void sub_10EDF8(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchImageEntriesMatchingAddedEntries:", *(_QWORD *)(a1 + 40)));

  v22 = 0u;
  v23 = 0u;
  v20 = 0u;
  v21 = 0u;
  v4 = v3;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v21;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v21 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v9, "state", (_QWORD)v20) == 3)
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "imageSet"));
          if (objc_msgSend(v9, "potentialPrimary"))
          {
            v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "primaryEntry"));
            v12 = objc_msgSend(v11, "state");

            v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
            objc_msgSend(v13, "deleteObject:", v9);

            if (v12 == 3)
            {
              v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
              objc_msgSend(v14, "processPendingChanges");

              v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "primaryEntry"));
              if (v15)
              {
                v16 = *(void **)(a1 + 32);
                v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "identifier"));
                objc_msgSend(v16, "incrementVersionForIdentifier:", v17);

              }
LABEL_12:

            }
            continue;
          }
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
          objc_msgSend(v15, "deleteObject:", v9);
          goto LABEL_12;
        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v6);
  }

  objc_msgSend(*(id *)(a1 + 32), "_saveIfNeeded");
  v18 = objc_retainBlock(*(id *)(a1 + 48));
  v19 = v18;
  if (v18)
    (*((void (**)(id))v18 + 2))(v18);

}

void sub_10F0BC(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  dispatch_queue_global_t global_queue;
  NSObject *v24;
  id v25;
  id v26;
  id obj;
  uint64_t v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  _QWORD block[4];
  id v36;
  id v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[128];
  _BYTE v47[128];

  v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "fetchAllImageSets"));

  v44 = 0u;
  v45 = 0u;
  v42 = 0u;
  v43 = 0u;
  obj = v3;
  v29 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v42, v47, 16);
  if (v29)
  {
    v28 = *(_QWORD *)v43;
    do
    {
      v4 = 0;
      do
      {
        if (*(_QWORD *)v43 != v28)
          objc_enumerationMutation(obj);
        v30 = v4;
        v5 = *(void **)(*((_QWORD *)&v42 + 1) + 8 * v4);
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "primaryEntry"));
        v38 = 0u;
        v39 = 0u;
        v40 = 0u;
        v41 = 0u;
        v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "imageEntries"));
        v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v38, v46, 16);
        if (v7)
        {
          v8 = v7;
          v9 = *(_QWORD *)v39;
          v32 = *(_QWORD *)v39;
          do
          {
            v10 = 0;
            v33 = v8;
            do
            {
              if (*(_QWORD *)v39 != v9)
                objc_enumerationMutation(v6);
              v11 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)v10);
              if (*(unsigned __int16 *)(a1 + 48) == (unsigned __int16)objc_msgSend(v11, "level")
                && (objc_msgSend(v11, "permanent") & 1) == 0
                && v11 != v34)
              {
                v12 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageFromImageEntry:](BICDescribedImage, "describedImageFromImageEntry:", v11));
                v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "lastUsed"));
                objc_msgSend(v12, "imageSize");
                v15 = v14;
                v17 = v16;
                v18 = (void *)v13;
                v19 = +[BICPruneableItem pruneScoreFrom:lastUsedDate:oldVersion:expired:processed:](BICPruneableItem, "pruneScoreFrom:lastUsedDate:oldVersion:expired:processed:", v13, objc_msgSend(v12, "isOldVersion"), objc_msgSend(v12, "isExpired"), objc_msgSend(v12, "processingOptions") != 0, v14, v16);
                if ((v19 & 0x8000000000000000) == 0)
                {
                  v20 = v19;
                  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "entryLocationForLevelID:", *(__int16 *)(a1 + 48)));
                  v22 = (void *)objc_claimAutoreleasedReturnValue(+[BICPruneableItem pruneableItemFromEntryLocation:cost:pruneScore:](BICPruneableItem, "pruneableItemFromEntryLocation:cost:pruneScore:", v21, vcvtd_n_s64_f64(v15 * v17, 2uLL), v20));

                  v9 = v32;
                  objc_msgSend(v31, "addObject:", v22);

                }
                v8 = v33;
              }
              v10 = (char *)v10 + 1;
            }
            while (v8 != v10);
            v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v38, v46, 16);
          }
          while (v8);
        }

        v4 = v30 + 1;
      }
      while ((id)(v30 + 1) != v29);
      v29 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v42, v47, 16);
    }
    while (v29);
  }

  global_queue = dispatch_get_global_queue(2, 0);
  v24 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10F444;
  block[3] = &unk_28C388;
  v25 = *(id *)(a1 + 40);
  v36 = v31;
  v37 = v25;
  v26 = v31;
  dispatch_async(v24, block);

}

void sub_10F444(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

void sub_10F554(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void **p_vtable;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  dispatch_queue_global_t global_queue;
  NSObject *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id obj;
  _QWORD block[4];
  id v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];

  v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imageSetForIdentifier:", *(_QWORD *)(a1 + 40)));

  if (v3)
  {
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "primaryEntry"));
    v33 = 0u;
    v34 = 0u;
    v35 = 0u;
    v36 = 0u;
    v25 = v3;
    obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "imageEntries"));
    v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v34;
      p_vtable = IMViewControllerTransition.vtable;
      do
      {
        v8 = 0;
        v27 = v5;
        do
        {
          if (*(_QWORD *)v34 != v6)
            objc_enumerationMutation(obj);
          v9 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)v8);
          if (*(unsigned __int16 *)(a1 + 56) == (unsigned __int16)objc_msgSend(v9, "level")
            && (objc_msgSend(v9, "permanent") & 1) == 0
            && v9 != v28)
          {
            v10 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageFromImageEntry:](BICDescribedImage, "describedImageFromImageEntry:", v9));
            v11 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "lastUsed"));
            objc_msgSend(v10, "imageSize");
            v13 = v12;
            v15 = v14;
            v16 = (void *)v11;
            v17 = (unint64_t)objc_msgSend(p_vtable + 437, "pruneScoreFrom:lastUsedDate:oldVersion:expired:processed:", v11, objc_msgSend(v10, "isOldVersion"), objc_msgSend(v10, "isExpired"), objc_msgSend(v10, "processingOptions") != 0, v12, v14);
            if ((v17 & 0x8000000000000000) == 0)
            {
              v18 = v17;
              v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "entryLocationForLevelID:", *(__int16 *)(a1 + 56)));
              v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(p_vtable + 437, "pruneableItemFromEntryLocation:cost:pruneScore:", v19, vcvtd_n_s64_f64(v13 * v15, 2uLL), v18));

              p_vtable = (void **)(IMViewControllerTransition + 24);
              objc_msgSend(v26, "addObject:", v20);

            }
            v5 = v27;
          }
          v8 = (char *)v8 + 1;
        }
        while (v5 != v8);
        v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v37, 16);
      }
      while (v5);
    }

    v3 = v25;
  }
  global_queue = dispatch_get_global_queue(2, 0);
  v22 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10F858;
  block[3] = &unk_28C388;
  v23 = *(id *)(a1 + 48);
  v31 = v26;
  v32 = v23;
  v24 = v26;
  dispatch_async(v22, block);

}

void sub_10F858(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

void sub_10F980(uint64_t a1)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *i;
  void *v14;
  uint64_t v15;
  void *v16;
  dispatch_queue_global_t global_queue;
  NSObject *v18;
  _BYTE *v19;
  uint64_t v20;
  void *v21;
  _QWORD block[4];
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];

  v19 = objc_msgSend(*(id *)(a1 + 32), "count");
  if (v19)
  {
    v2 = 0;
    v3 = (uint64_t)v19;
    do
    {
      if (v3 >= 32)
        v4 = 32;
      else
        v4 = v3;
      v20 = v4;
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subarrayWithRange:", v2, v19));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "valueForKey:", CFSTR("entryLocation")));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "allObjects"));

      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "persistentStore"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "fetchImageEntriesWithLocations:", v6));

      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v9 = v8;
      v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      if (v10)
      {
        v11 = v10;
        v12 = *(_QWORD *)v25;
        do
        {
          for (i = 0; i != v11; i = (char *)i + 1)
          {
            if (*(_QWORD *)v25 != v12)
              objc_enumerationMutation(v9);
            v14 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * (_QWORD)i);
            v15 = *(_QWORD *)(a1 + 48);
            v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "entryLocation"));
            (*(void (**)(uint64_t, void *))(v15 + 16))(v15, v16);

            objc_msgSend(v14, "deleteEntry");
          }
          v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
        }
        while (v11);
      }
      v2 += v20;
      v3 = v19 - v2;

      objc_msgSend(*(id *)(a1 + 40), "_saveIfNeeded");
    }
    while (v19 != v2);
  }
  global_queue = dispatch_get_global_queue(2, 0);
  v18 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10FBB8;
  block[3] = &unk_28BF90;
  v23 = *(id *)(a1 + 56);
  dispatch_async(v18, block);

}

void sub_10FBB8(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, void *))v1 + 2))(v1, &__NSArray0__struct);
    v1 = v2;
  }

}

void sub_10FCA4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *i;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *j;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  dispatch_queue_global_t global_queue;
  NSObject *v20;
  id v21;
  id v22;
  id obj;
  uint64_t v24;
  id v25;
  void *v26;
  _QWORD block[4];
  id v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  _BYTE v39[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "fetchAllImageSets"));

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  obj = v4;
  v25 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
  if (v25)
  {
    v24 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v25; i = (char *)i + 1)
      {
        if (*(_QWORD *)v35 != v24)
          objc_enumerationMutation(obj);
        v6 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)i);
        v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "identifier"));
        v8 = objc_msgSend(v7, "length");

        if (v8)
        {
          v26 = i;
          v32 = 0u;
          v33 = 0u;
          v30 = 0u;
          v31 = 0u;
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "imageEntries"));
          v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
          if (v10)
          {
            v11 = v10;
            v12 = *(_QWORD *)v31;
            do
            {
              for (j = 0; j != v11; j = (char *)j + 1)
              {
                if (*(_QWORD *)v31 != v12)
                  objc_enumerationMutation(v9);
                v14 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * (_QWORD)j);
                if (*(unsigned __int16 *)(a1 + 48) == (unsigned __int16)objc_msgSend(v14, "level"))
                {
                  v15 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageFromImageEntry:](BICDescribedImage, "describedImageFromImageEntry:", v14));
                  v16 = v15;
                  if (*(_BYTE *)(a1 + 50))
                  {
                    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "identifier"));
                    v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@-Level:%d"), v17, *(__int16 *)(a1 + 48)));
                    objc_msgSend(v16, "setIdentifier:", v18);

                  }
                  objc_msgSend(v2, "addObject:", v16);

                }
              }
              v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v30, v38, 16);
            }
            while (v11);
          }

          i = v26;
        }
      }
      v25 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
    }
    while (v25);
  }

  global_queue = dispatch_get_global_queue(2, 0);
  v20 = objc_claimAutoreleasedReturnValue(global_queue);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10FFA4;
  block[3] = &unk_28C388;
  v21 = *(id *)(a1 + 40);
  v28 = v2;
  v29 = v21;
  v22 = v2;
  dispatch_async(v20, block);

}

void sub_10FFA4(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

void sub_110124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_11013C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_11014C(uint64_t a1)
{

}

void sub_110154(uint64_t a1)
{
  void *v2;
  void *v3;
  float v4;
  float v5;
  float v6;
  float v7;
  double v8;
  void *v9;
  BICImageMetadata *v10;
  uint64_t v11;
  void *v12;
  BICImageMetadata *v13;
  uint64_t v14;
  void *v15;
  id v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imageSetForIdentifier:", *(_QWORD *)(a1 + 40)));

  v3 = v16;
  if (v16)
  {
    objc_msgSend(v16, "widthForAspectRatio");
    if (v4 <= 0.0)
    {
      v9 = 0;
    }
    else
    {
      objc_msgSend(v16, "heightForAspectRatio");
      v6 = v5;
      objc_msgSend(v16, "widthForAspectRatio");
      *(float *)&v8 = v6 / v7;
      v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v8));
    }
    v10 = [BICImageMetadata alloc];
    v11 = *(_QWORD *)(a1 + 40);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "imageColor"));
    v13 = -[BICImageMetadata initWithIdentifier:intrinsicAspectRatio:imageColor:](v10, "initWithIdentifier:intrinsicAspectRatio:imageColor:", v11, v9, v12);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v15 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;

    objc_msgSend(*(id *)(a1 + 32), "_saveIfNeeded");
    v3 = v16;
  }

}

void sub_11031C(uint64_t a1)
{
  void *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  double v7;
  void *v8;
  id v9;
  BICImageMetadata *v10;
  uint64_t v11;
  void *v12;
  BICImageMetadata *v13;
  id v14;
  void *v15;
  id v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imageSetForIdentifier:", *(_QWORD *)(a1 + 40)));

  if (v16)
  {
    objc_msgSend(v16, "widthForAspectRatio");
    if (v3 <= 0.0)
    {
      v8 = 0;
    }
    else
    {
      objc_msgSend(v16, "heightForAspectRatio");
      v5 = v4;
      objc_msgSend(v16, "widthForAspectRatio");
      *(float *)&v7 = v5 / v6;
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v7));
    }
    v10 = [BICImageMetadata alloc];
    v11 = *(_QWORD *)(a1 + 40);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "imageColor"));
    v13 = -[BICImageMetadata initWithIdentifier:intrinsicAspectRatio:imageColor:](v10, "initWithIdentifier:intrinsicAspectRatio:imageColor:", v11, v8, v12);

    objc_msgSend(*(id *)(a1 + 32), "_saveIfNeeded");
    v14 = objc_retainBlock(*(id *)(a1 + 48));
    v15 = v14;
    if (v14)
      (*((void (**)(id, BICImageMetadata *))v14 + 2))(v14, v13);

  }
  else
  {
    v9 = objc_retainBlock(*(id *)(a1 + 48));
    v8 = v9;
    if (v9)
      (*((void (**)(id, _QWORD))v9 + 2))(v9, 0);
  }

}

void sub_110520(uint64_t a1)
{
  void *v2;
  void (**v3)(id, void *);
  void *v4;
  id v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imageSetForIdentifier:", *(_QWORD *)(a1 + 40)));

  v3 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 48));
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "imageColor"));
    v3[2](v3, v4);

  }
}

void sub_110660(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "persistentStore"));
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imageSetForIdentifier:", *(_QWORD *)(a1 + 40)));

  objc_msgSend(v3, "setImageColorARGBHex:", objc_msgSend(*(id *)(a1 + 48), "bc_ARGBHexValue"));
  objc_msgSend(*(id *)(a1 + 32), "_saveIfNeeded");

}

__CFString *BCAssetUTIForContentType(uint64_t a1)
{
  __CFString *v2;
  id *v3;

  v2 = 0;
  switch(a1)
  {
    case 1:
      v3 = (id *)&UTTypeEPUB;
      goto LABEL_5;
    case 2:
      v3 = (id *)&UTTypeText;
      goto LABEL_5;
    case 3:
      v3 = (id *)&UTTypePDF;
LABEL_5:
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(*v3, "identifier"));
      return v2;
    case 4:
      return CFSTR("com.apple.ibooks");
    case 6:
      v2 = CFSTR("com.apple.m4a-audio");
      return v2;
    default:
      return v2;
  }
}

uint64_t BCAssetContentTypeFromAssetTypeString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "caseInsensitiveCompare:", CFSTR("epub"))
    && objc_msgSend(v1, "caseInsensitiveCompare:", CFSTR("ePubPictureBook")))
  {
    if (objc_msgSend(v1, "caseInsensitiveCompare:", CFSTR("ibooks")))
    {
      if (objc_msgSend(v1, "caseInsensitiveCompare:", CFSTR("pdf")))
      {
        if (objc_msgSend(v1, "caseInsensitiveCompare:", CFSTR("audiobook")))
          v2 = 0;
        else
          v2 = 6;
      }
      else
      {
        v2 = 3;
      }
    }
    else
    {
      v2 = 4;
    }
  }
  else
  {
    v2 = 1;
  }

  return v2;
}

void sub_112B80(id a1)
{
  void *v1;

  v1 = (void *)qword_311250;
  qword_311250 = (uint64_t)&off_2AFA28;

}

uint64_t BCAssetContentTypeFromBKAssetContentType(int a1)
{
  uint64_t v1;

  v1 = (a1 - 1);
  if (v1 < 6)
    return v1 + 1;
  else
    return 0;
}

void sub_112E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_112EB8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_112EC8(uint64_t a1)
{

}

intptr_t sub_112ED0(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ba_analyticsTracker"));

    v3 = *(void **)(a1 + 32);
    if (v2)
    {
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v5 = v3;
      v6 = *(void **)(v4 + 40);
      *(_QWORD *)(v4 + 40) = v5;
LABEL_15:

      return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
    }
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "parentViewController"));

    v8 = *(void **)(a1 + 32);
    if (v7)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "parentViewController"));
      v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "_ba_effectiveViewControllerForAnalyticsTrackingIgnoringViewController:", *(_QWORD *)(a1 + 32)));
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v11 = *(void **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v9;

      goto LABEL_15;
    }
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "presentingViewController"));

    if (v12)
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentingViewController"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "bc_deepestVisibleChildViewControllerIncludePresented:", 0));
      v15 = v14;
      if (v14)
        v16 = v14;
      else
        v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentingViewController"));
      v6 = v16;

      v17 = objc_opt_class(BCCardStackViewController);
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "presentedViewController"));
      v19 = BUDynamicCast(v17, v18);
      v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

      if (v20 != *(void **)(a1 + 32))
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "topCardSetViewController"));
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "currentCardViewController"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "topContentViewController"));

        v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "_ba_effectiveViewControllerForAnalyticsTrackingIgnoringViewController:", *(_QWORD *)(a1 + 32)));
        v25 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v26 = *(void **)(v25 + 40);
        *(_QWORD *)(v25 + 40) = v24;

      }
      if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
      {
        v27 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "_ba_effectiveViewControllerForAnalyticsTrackingIgnoringViewController:", *(_QWORD *)(a1 + 32)));
        v28 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v29 = *(void **)(v28 + 40);
        *(_QWORD *)(v28 + 40) = v27;

      }
      goto LABEL_15;
    }
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

uint64_t sub_1130BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id _BCExternalURLOpenPrompterCreateCache()
{
  id v0;

  v0 = objc_alloc_init((Class)NSCache);
  objc_msgSend(v0, "setTotalCostLimit:", 0x100000);
  return v0;
}

void sub_1135A4(id a1)
{
  BCExternalURLOpenPrompterContext *v1;
  void *v2;

  v1 = objc_alloc_init(BCExternalURLOpenPrompterContext);
  v2 = (void *)qword_311268;
  qword_311268 = (uint64_t)v1;

}

void sub_113A0C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_113ADC;
  v11[3] = &unk_291688;
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(id *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(void **)(a1 + 40);
  v12 = v7;
  v13 = v8;
  v14 = v9;
  v15 = *(id *)(a1 + 64);
  v16 = v3;
  v10 = v3;
  objc_msgSend(v4, "_askUserIfShouldOpenURL:promptContext:completion:", v5, v6, v11);

}

void sub_113ADC(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void (**v8)(void);
  void (**v9)(void);

  if ((_DWORD)a2)
  {
    v4 = *(void **)(a1 + 32);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "dummyCacheValue"));
    objc_msgSend(v4, "setObject:forKey:", v5, *(_QWORD *)(a1 + 48));

  }
  v6 = objc_retainBlock(*(id *)(a1 + 56));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t))v6 + 2))(v6, a2);

  v8 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
  if (v8)
  {
    v9 = v8;
    v8[2]();
    v8 = v9;
  }

}

void sub_113F94(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  _QWORD v6[5];
  _QWORD v7[4];
  uint64_t v8;
  _QWORD *v9;
  char v10;
  _QWORD v11[5];
  id v12;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bc_effectiveViewControllerForNavBarVisibility"));
  v5 = objc_msgSend(v4, "bc_navBarVisible");
  if (v5 == objc_msgSend(*(id *)(a1 + 32), "isNavigationBarHidden"))
  {
    if (v3 || *(double *)(a1 + 40) == 0.0)
    {
      objc_msgSend(*(id *)(a1 + 32), "setNavigationBarHidden:", v5 ^ 1);
    }
    else
    {
      v11[0] = 0;
      v11[1] = v11;
      v11[2] = 0x3032000000;
      v11[3] = sub_1140DC;
      v11[4] = sub_1140EC;
      v12 = 0;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_1140F4;
      v7[3] = &unk_2916E0;
      v10 = v5;
      v8 = *(_QWORD *)(a1 + 32);
      v9 = v11;
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_11420C;
      v6[3] = &unk_28D678;
      v6[4] = v8;
      +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v7, v6);
      _Block_object_dispose(v11, 8);

    }
  }

}

void sub_1140C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1140DC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1140EC(uint64_t a1)
{

}

id sub_1140F4(uint64_t a1)
{
  int v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v12;
  double v13;
  void *v14;
  CGRect v15;
  CGRect v16;

  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = *(void **)(a1 + 32);
  if (v2)
    return objc_msgSend(v3, "setNavigationBarHidden:", 0);
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bc_navBarSnapshot"));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "frame");
  x = v15.origin.x;
  y = v15.origin.y;
  width = v15.size.width;
  height = v15.size.height;
  v12 = CGRectGetHeight(v15);
  v16.origin.x = x;
  v16.origin.y = y;
  v16.size.width = width;
  v16.size.height = height;
  v13 = CGRectGetWidth(v16);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v14, "addSubview:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));

  objc_msgSend(*(id *)(a1 + 32), "setNavigationBarHidden:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setFrame:", 0.0, -v12, v13, v12);
  return _objc_msgSend(*(id *)(a1 + 32), "_bc_setActiveNavBarSnapshot:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
}

id sub_11420C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_bc_setActiveNavBarSnapshot:", 0);
}

void sub_1144E8(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_311278;
  qword_311278 = (uint64_t)v1;

}

void sub_114908(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "namespaceIdentifier"));
  objc_msgSend(v3, "refreshNamespace:", v4);

}

void sub_114B04(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  const __CFString *v30;
  uint64_t v31;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_readFromCacheForNamespace:", *(_QWORD *)(a1 + 40)));
  v3 = v2;
  if (v2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "configuration"));
    objc_msgSend(*(id *)(a1 + 48), "setConfiguration:", v4);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "treatmentIDs"));
    objc_msgSend(*(id *)(a1 + 48), "setTreatmentIDs:", v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "segmentIDs"));
    objc_msgSend(*(id *)(a1 + 48), "setSegmentIDs:", v6);

    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "segmentSetIDs"));
    objc_msgSend(*(id *)(a1 + 48), "setSegmentSetIDs:", v7);
  }
  else
  {
    v8 = BRCConfigLog();
    v7 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1B77D4(v7);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithContentsOfURL:](NSData, "dataWithContentsOfURL:", *(_QWORD *)(a1 + 56)));
  v29 = 0;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v9, 0, &v29));
  v11 = v29;
  v13 = *(void **)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v30 = CFSTR("namespace");
  v31 = v12;
  v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1));
  objc_msgSend(v13, "_executeMonitorWithMessage:data:", CFSTR("system defaults loaded"), v14);

  v28 = v10;
  if (!v10 || v11)
  {
    v23 = BRCConfigLog();
    v16 = objc_claimAutoreleasedReturnValue(v23);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      sub_1B7728((id *)(a1 + 56), (uint64_t)v11, v16);
  }
  else
  {
    v27 = *(void **)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 48);
    v16 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "valueForKeyPath:", CFSTR("appConfigurationWrapper.configuration")));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "configuration"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "treatmentIDs"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "segmentIDs"));
    v20 = v9;
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "segmentSetIDs"));
    v22 = 3;
    if (!v3)
      v22 = 1;
    objc_msgSend(v27, "_updateNamespace:systemDefaults:configuration:treatmentIDs:segmentIDs:segmentSetIDs:reason:", v15, v16, v17, v18, v19, v21, v22);

    v9 = v20;
    v11 = 0;

  }
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cacheLoadedCondition"));
  objc_msgSend(v24, "lock");

  if ((objc_msgSend(*(id *)(a1 + 32), "cacheLoaded") & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "setCacheLoaded:", 1);
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cacheLoadedCondition"));
    objc_msgSend(v25, "broadcast");

  }
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cacheLoadedCondition"));
  objc_msgSend(v26, "unlock");

}

void sub_115014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_115028(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  BRCSubscriber *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v3 = a1 + 32;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_namespaceNamed:", *(_QWORD *)(a1 + 32)));
  if (v4)
  {
    v5 = objc_alloc_init(BRCSubscriber);
    -[BRCSubscriber setObject:](v5, "setObject:", *(_QWORD *)(a1 + 40));
    -[BRCSubscriber setCallback:](v5, "setCallback:", *(_QWORD *)(a1 + 56));
    -[BRCSubscriber setKeys:](v5, "setKeys:", *(_QWORD *)(a1 + 48));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "subscribers"));
    objc_msgSend(v6, "addObject:", v5);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "systemDefaults"));
    if (objc_msgSend(v7, "count"))
    {

    }
    else
    {
      v16 = objc_msgSend(WeakRetained, "alwaysNotifyOnSubscribe");

      if ((v16 & 1) == 0)
      {
LABEL_9:

        goto LABEL_10;
      }
    }
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "systemDefaults"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "configuration"));
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "treatmentIDs"));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "segmentIDs"));
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "segmentSetIDs"));
    objc_msgSend(WeakRetained, "_updateNamespace:systemDefaults:configuration:treatmentIDs:segmentIDs:segmentSetIDs:reason:", v4, v17, v18, v19, v20, v21, 0);

    goto LABEL_9;
  }
  v8 = BRCConfigLog();
  v9 = objc_claimAutoreleasedReturnValue(v8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    sub_1B7814(v3, v9, v10, v11, v12, v13, v14, v15);

LABEL_10:
}

void sub_115328(id *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[4];
  id v19;
  id v20;
  id v21;
  id v22;
  uint8_t buf[8];
  id location;

  v3 = a2;
  if (v3)
  {
    objc_initWeak(&location, a1[4]);
    v4 = BRCConfigLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_INFO, "Fetching configuration from RC framework", buf, 2u);
    }

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "remoteConfigurationManager"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "workerQueue"));
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1154CC;
    v18[3] = &unk_291768;
    objc_copyWeak(&v22, &location);
    v19 = a1[5];
    v8 = a1[6];
    v9 = a1[4];
    v20 = v8;
    v21 = v9;
    objc_msgSend(v6, "fetchSingleConfigurationWithSettings:completionQueue:completion:", v3, v7, v18);

    objc_destroyWeak(&v22);
    objc_destroyWeak(&location);
  }
  else
  {
    v10 = BRCConfigLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1B787C((uint64_t)a1, v11, v12, v13, v14, v15, v16, v17);

  }
}

void sub_1154A4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1154CC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id *WeakRetained;
  uint64_t v14;
  void *v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  id v19;
  NSObject *v20;
  id v21;
  NSObject *v22;
  void *v23;
  id v24;
  NSObject *v25;
  void *v26;
  void *v27;
  NSObject *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint8_t buf[4];
  id v39;
  const __CFString *v40;
  uint64_t v41;

  v9 = a2;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v14 = *(_QWORD *)(a1 + 32);
    v40 = CFSTR("namespace");
    v41 = v14;
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v41, &v40, 1));
    objc_msgSend(WeakRetained, "_executeMonitorWithMessage:data:", CFSTR("refresh completed"), v15);

    v16 = BRCConfigLog();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    v18 = v17;
    if (!v9 || v12)
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_1B78E4();
    }
    else
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v39 = v10;
        _os_log_impl(&dword_0, v18, OS_LOG_TYPE_INFO, "RemoteConfigInfo: Server TreatementIDs: %@", buf, 0xCu);
      }

      v19 = BRCConfigLog();
      v20 = objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        v39 = v11;
        _os_log_impl(&dword_0, v20, OS_LOG_TYPE_INFO, "RemoteConfigInfo: Server SegmentIDs: %@", buf, 0xCu);
      }

      v21 = BRCConfigLog();
      v22 = objc_claimAutoreleasedReturnValue(v21);
      if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
      {
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained[4], "stringForKey:", CFSTR("BRCOverrideSegmentIDs")));
        *(_DWORD *)buf = 138412290;
        v39 = v23;
        _os_log_impl(&dword_0, v22, OS_LOG_TYPE_INFO, "RemoteConfigInfo: Local Override SegmentIDs: %@", buf, 0xCu);

      }
      v24 = BRCConfigLog();
      v25 = objc_claimAutoreleasedReturnValue(v24);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
      {
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained[4], "stringForKey:", CFSTR("BRCAdditionalSegmentIDs")));
        *(_DWORD *)buf = 138412290;
        v39 = v26;
        _os_log_impl(&dword_0, v25, OS_LOG_TYPE_INFO, "RemoteConfigInfo: Local Additional SegmentIDs: %@", buf, 0xCu);

      }
      v37 = 0;
      v27 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v9, 0, &v37));
      v18 = v37;
      if (v27)
      {
        v28 = objc_msgSend(*(id *)(a1 + 40), "copy");
        -[NSObject setConfiguration:](v28, "setConfiguration:", v27);
        -[NSObject setSegmentIDs:](v28, "setSegmentIDs:", v11);
        v36 = v11;
        v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "segmentSetIDs"));
        -[NSObject setSegmentSetIDs:](v28, "setSegmentSetIDs:", v29);

        -[NSObject setTreatmentIDs:](v28, "setTreatmentIDs:", v10);
        objc_msgSend(*(id *)(a1 + 48), "_saveToCacheNamespaceData:withNamespace:", v28, *(_QWORD *)(a1 + 32));
        v30 = *(void **)(a1 + 40);
        v31 = v10;
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "systemDefaults"));
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "segmentSetIDs"));
        v34 = v30;
        v11 = v36;
        objc_msgSend(WeakRetained, "_updateNamespace:systemDefaults:configuration:treatmentIDs:segmentIDs:segmentSetIDs:reason:", v34, v32, v27, v31, v36, v33, 2);

        v10 = v31;
      }
      else
      {
        v35 = BRCConfigLog();
        v28 = objc_claimAutoreleasedReturnValue(v35);
        if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
          sub_1B7944();
      }

    }
  }

}

void sub_11594C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_115960(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "jsSubscribers"));
  objc_msgSend(v1, "removeAllObjects");

  objc_msgSend(WeakRetained, "setMonitorCallback:", 0);
}

void sub_115A48(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v10[2];
  _QWORD v11[2];

  v10[0] = CFSTR("treatments");
  v4 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "treatmentsAsStrings"));
  v11[0] = v5;
  v10[1] = CFSTR("segments");
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "segmentsAsStrings"));
  v11[1] = v6;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v11, v10, 2));

  v8 = *(void **)(a1 + 32);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "namespaceIdentifier"));

  objc_msgSend(v8, "setObject:forKey:", v7, v9);
}

void sub_116094(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 32);
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "namespaceIdentifier"));
  objc_msgSend(v3, "refreshNamespace:", v4);

}

void sub_11626C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_116280(uint64_t a1)
{
  uint64_t v1;
  id *WeakRetained;
  unsigned int v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *i;
  id v11;
  void *j;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *k;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  char v34;
  id obj;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id *v43;
  id v44;
  _QWORD block[5];
  id v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _QWORD v59[2];
  _QWORD v60[2];
  _QWORD v61[3];
  _QWORD v62[3];
  _BYTE v63[128];
  _BYTE v64[128];
  _BYTE v65[128];

  v1 = a1;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 88));
  v44 = objc_msgSend(*(id *)(v1 + 32), "copy");
  objc_msgSend(*(id *)(v1 + 32), "setSystemDefaults:", *(_QWORD *)(v1 + 40));
  objc_msgSend(*(id *)(v1 + 32), "setConfiguration:", *(_QWORD *)(v1 + 48));
  objc_msgSend(*(id *)(v1 + 32), "setSegmentIDs:", *(_QWORD *)(v1 + 56));
  objc_msgSend(*(id *)(v1 + 32), "setSegmentSetIDs:", *(_QWORD *)(v1 + 64));
  objc_msgSend(*(id *)(v1 + 32), "setTreatmentIDs:", *(_QWORD *)(v1 + 72));
  v43 = WeakRetained;
  if (WeakRetained)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v1 + 80) + 40))
      *(_BYTE *)(*(_QWORD *)(v1 + 80) + 40) = objc_msgSend(*(id *)(v1 + 48), "count") != 0;
    v3 = objc_msgSend(v44, "isEqual:", *(_QWORD *)(v1 + 32));
    v4 = *(_QWORD *)(v1 + 96);
    if (((v4 == 2) & ~v3) != 0 || v4 == 3)
    {
      os_unfair_lock_lock((os_unfair_lock_t)(*(_QWORD *)(v1 + 80) + 8));
      v5 = objc_msgSend(WeakRetained[2], "copy");
      os_unfair_lock_unlock((os_unfair_lock_t)(*(_QWORD *)(v1 + 80) + 8));
      v57 = 0u;
      v58 = 0u;
      v55 = 0u;
      v56 = 0u;
      v6 = v5;
      v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v55, v65, 16);
      if (v7)
      {
        v8 = v7;
        v9 = *(_QWORD *)v56;
        do
        {
          for (i = 0; i != v8; i = (char *)i + 1)
          {
            if (*(_QWORD *)v56 != v9)
              objc_enumerationMutation(v6);
            objc_msgSend(*(id *)(*((_QWORD *)&v55 + 1) + 8 * (_QWORD)i), "configurationManager:namespaceDataDidUpdateFrom:to:", WeakRetained, v44, *(_QWORD *)(v1 + 32));
          }
          v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v55, v65, 16);
        }
        while (v8);
      }

    }
  }
  v11 = objc_alloc_init((Class)NSMutableDictionary);
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "subscribers"));
  v39 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v64, 16);
  if (v39)
  {
    v34 = 0;
    v37 = *(_QWORD *)v52;
    v36 = v11;
    do
    {
      for (j = 0; j != v39; j = (char *)j + 1)
      {
        if (*(_QWORD *)v52 != v37)
          objc_enumerationMutation(obj);
        v13 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * (_QWORD)j);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "object"));

        if (v14)
        {
          v40 = j;
          v15 = objc_alloc_init((Class)NSMutableDictionary);
          v41 = objc_alloc_init((Class)NSMutableDictionary);
          v16 = objc_alloc_init((Class)NSMutableDictionary);
          v47 = 0u;
          v48 = 0u;
          v49 = 0u;
          v50 = 0u;
          v38 = v13;
          v42 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "keys"));
          v17 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v47, v63, 16);
          if (v17)
          {
            v18 = v17;
            v19 = *(_QWORD *)v48;
            do
            {
              for (k = 0; k != v18; k = (char *)k + 1)
              {
                if (*(_QWORD *)v48 != v19)
                  objc_enumerationMutation(v42);
                v21 = *(_QWORD *)(*((_QWORD *)&v47 + 1) + 8 * (_QWORD)k);
                v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "_valueForKey:fromNamespaceData:source:", v21, v44, 0));
                v23 = v1;
                v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v43, "_valueForKey:fromNamespaceData:source:", v21, *(_QWORD *)(v1 + 32), 0));
                v25 = v24;
                if (v24 && (objc_msgSend(v24, "isEqual:", v22) & 1) == 0)
                  objc_msgSend(v41, "setObject:forKey:", v25, v21);
                objc_msgSend(v15, "setObject:forKey:", v22, v21);
                objc_msgSend(v16, "setObject:forKey:", v25, v21);

                v1 = v23;
              }
              v18 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v47, v63, 16);
            }
            while (v18);
          }

          v61[0] = CFSTR("BRCDictionaryTypePrevious");
          v61[1] = CFSTR("BRCDictionaryTypeChanged");
          v62[0] = v15;
          v62[1] = v41;
          v61[2] = CFSTR("BRCDictionaryTypeCurrent");
          v62[2] = v16;
          v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v62, v61, 3));
          v11 = v36;
          objc_msgSend(v36, "addEntriesFromDictionary:", v41);
          v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "allKeys"));
          v28 = objc_msgSend(v27, "count");

          if (v28)
          {
            block[0] = _NSConcreteStackBlock;
            block[1] = 3221225472;
            block[2] = sub_11683C;
            block[3] = &unk_28B808;
            block[4] = v38;
            v46 = v26;
            dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

          }
          j = v40;
        }
        else
        {
          v34 = 1;
        }
      }
      v39 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v64, 16);
    }
    while (v39);
  }
  else
  {
    v34 = 0;
  }

  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "allKeys"));
  v30 = objc_msgSend(v29, "count");

  if (v30)
  {
    v31 = *(void **)(v1 + 80);
    v59[0] = CFSTR("namespace");
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 32), "namespaceIdentifier"));
    v59[1] = CFSTR("changed");
    v60[0] = v32;
    v60[1] = v11;
    v33 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v60, v59, 2));
    objc_msgSend(v31, "_executeMonitorWithMessage:data:", CFSTR("data change detected"), v33);

  }
  if ((v34 & 1) != 0)
    objc_msgSend(*(id *)(v1 + 32), "cleanupSubscribers");

}

void sub_11683C(uint64_t a1)
{
  void *v2;
  void (**v3)(id, id, _QWORD);
  void *v4;
  id v5;
  void (**v6)(id, id, _QWORD);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "object"));

  if (v2)
  {
    v3 = (void (**)(id, id, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "callback"));
    if (v3)
    {
      v6 = v3;
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "keys"));
      v5 = objc_msgSend(v4, "copy");
      v6[2](v6, v5, *(_QWORD *)(a1 + 40));

      v3 = v6;
    }

  }
}

void sub_116BD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_116BE4(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "data"));
  objc_msgSend(v1, "enumerateKeysAndObjectsUsingBlock:", &stru_2917F8);

}

void sub_116C30(id a1, NSString *a2, BRCNamespaceData *a3, BOOL *a4)
{
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(-[BRCNamespaceData subscribers](a3, "subscribers"));
  objc_msgSend(v4, "removeAllObjects");

}

void sub_117020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  id *v8;
  uint64_t v9;
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v8);
  objc_destroyWeak((id *)(v9 - 104));
  _Unwind_Resume(a1);
}

void sub_117050(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "jsSubscribers"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 32));

}

uint64_t sub_11709C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1170AC(uint64_t a1)
{

}

void sub_1170B4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  void *i;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _QWORD v26[3];
  _BYTE v27[128];

  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKey:", CFSTR("BRCDictionaryTypeCurrent")));
  v7 = objc_msgSend(v6, "mutableCopy");

  v24 = 0u;
  v25 = 0u;
  v22 = 0u;
  v23 = 0u;
  v8 = v5;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v10; i = (char *)i + 1)
      {
        if (*(_QWORD *)v23 != v11)
          objc_enumerationMutation(v8);
        v13 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * (_QWORD)i);
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKey:", v13, (_QWORD)v22));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "object"));

        if (v15)
          v16 = objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "object"));
        else
          v16 = objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
        v17 = (void *)v16;
        objc_msgSend(v7, "setObject:forKey:", v16, v13);

      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
    }
    while (v10);
  }

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "jsBridge"));
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v26[0] = v19;
  v26[1] = v8;
  v26[2] = v7;
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v26, 3));
  objc_msgSend(v18, "enqueueValueCall:arguments:file:line:", v20, v21, CFSTR("/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/RemoteConfig/BRCConfigurationManager.m"), 589);

}

void sub_117374(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_117388(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "jsSubscribers"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 32));

}

void sub_1175BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1175D0(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "data"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 32)));

  if (v3)
  {
    v4 = objc_alloc_init((Class)NSDictionary);
    objc_msgSend(v3, "setConfiguration:", v4);

  }
}

id IMCommonCoreBundle()
{
  if (qword_311288 != -1)
    dispatch_once(&qword_311288, &stru_291870);
  return (id)qword_311280;
}

void sub_117EFC(id a1)
{
  NSBundle *v1;
  uint64_t v2;
  void *v3;

  v1 = +[NSBundle bundleForClass:](NSBundle, "bundleForClass:", objc_opt_class(IMCommonCoreBundleLookupClass));
  v2 = objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)qword_311280;
  qword_311280 = v2;

}

uint64_t IMCommonCoreCFBundle()
{
  if (qword_311298 != -1)
    dispatch_once(&qword_311298, &stru_291890);
  return qword_311290;
}

void sub_117F84(id a1)
{
  id v1;
  void *v2;
  const __CFURL *v3;
  id v4;

  v1 = IMCommonCoreBundle();
  v4 = (id)objc_claimAutoreleasedReturnValue(v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bundleURL"));

  if (v2)
  {
    v3 = (const __CFURL *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bundleURL"));
    qword_311290 = (uint64_t)CFBundleCreate(0, v3);

  }
}

void sub_1188C0(id a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithContentsOfFile:](NSDictionary, "dictionaryWithContentsOfFile:", CFSTR("/System/Library/CoreServices/SystemVersion.plist")));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "objectForKey:", CFSTR("ProductVersion")));

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "componentsSeparatedByString:", CFSTR(".")));
  if (objc_msgSend(v2, "count"))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", 0));
    dword_30A138 = objc_msgSend(v3, "intValue");

  }
  if ((unint64_t)objc_msgSend(v2, "count") >= 2)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", 1));
    dword_30A13C = objc_msgSend(v4, "intValue");

  }
  if ((unint64_t)objc_msgSend(v2, "count") >= 3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectAtIndexedSubscript:", 2));
    dword_3112A0 = objc_msgSend(v5, "intValue");

  }
}

void sub_118A3C(uint64_t a1)
{
  id v1;
  id v2;
  int v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v9 = 0;
  v8 = 0;
  objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32)), "_getSystemVersionMajor:minor:bugfix:", (char *)&v9 + 4, &v9, &v8);
  if (v8)
  {
    v1 = objc_alloc((Class)NSString);
    v2 = objc_msgSend(v1, "initWithFormat:", CFSTR("%d.%d.%d"), HIDWORD(v9), v9, v8);
  }
  else
  {
    v3 = v9;
    v4 = objc_alloc((Class)NSString);
    if (v3)
      v2 = objc_msgSend(v4, "initWithFormat:", CFSTR("%d.%d"), HIDWORD(v9), v9, v7);
    else
      v2 = objc_msgSend(v4, "initWithFormat:", CFSTR("%d"), HIDWORD(v9), v6, v7);
  }
  v5 = (void *)qword_3112B0;
  qword_3112B0 = (uint64_t)v2;

}

void sub_118B38(id a1)
{
  NSArray *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;

  v1 = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 8uLL, 0);
  v12 = (id)objc_claimAutoreleasedReturnValue(v1);
  if (objc_msgSend(v12, "count"))
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectAtIndex:", 0));
  else
    v2 = 0;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "stringByAppendingPathComponent:", CFSTR("Frameworks")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "stringByAppendingPathComponent:", CFSTR("WebKit.framework")));

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle bundleWithPath:](NSBundle, "bundleWithPath:", v4));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForInfoDictionaryKey:", kCFBundleVersionKey));

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSCharacterSet decimalDigitCharacterSet](NSCharacterSet, "decimalDigitCharacterSet"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "invertedSet"));
  v9 = objc_msgSend(v6, "rangeOfCharacterFromSet:", v8);

  if ((unint64_t)v9 < 4 || v9 == (id)0x7FFFFFFFFFFFFFFFLL && (unint64_t)objc_msgSend(v6, "length") < 4)
    v10 = v6;
  else
    v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "substringFromIndex:", 1));
  v11 = (void *)qword_3112C0;
  qword_3112C0 = (uint64_t)v10;

}

void sub_118CDC(id a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithContentsOfFile:](NSDictionary, "dictionaryWithContentsOfFile:", CFSTR("/System/Library/CoreServices/SystemVersion.plist")));
  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("ProductBuildVersion")));
  v2 = (void *)qword_3112D0;
  qword_3112D0 = v1;

}

void sub_119D7C(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_3112E8;
  qword_3112E8 = (uint64_t)v1;

}

void sub_11A010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_11A038(uint64_t a1)
{
  void *v2;
  _BCTransactionCommitRollbackPair *v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 88) & 3) == 0;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    v3 = objc_opt_new(_BCTransactionCommitRollbackPair);
    -[_BCTransactionCommitRollbackPair setCommit:](v3, "setCommit:", *(_QWORD *)(a1 + 40));
    -[_BCTransactionCommitRollbackPair setRollback:](v3, "setRollback:", *(_QWORD *)(a1 + 48));
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pending"));
    objc_msgSend(v2, "addObject:", v3);

  }
}

void sub_11A230(uint64_t a1)
{
  void *v2;
  NSMutableArray *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 72);
  if (!v2)
  {
    v3 = objc_opt_new(NSMutableArray);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 72);
    *(_QWORD *)(v4 + 72) = v3;

    v2 = *(void **)(*(_QWORD *)(a1 + 32) + 72);
  }
  v7 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v6 = objc_retainBlock(v7);
  objc_msgSend(v2, "addObject:", v6);

}

void sub_11A3F8(uint64_t a1)
{
  void *v2;
  NSMutableArray *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void **v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  void *v12;
  uint64_t v13;
  id v14;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 80);
  if (!v2)
  {
    v3 = objc_opt_new(NSMutableArray);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 80);
    *(_QWORD *)(v4 + 80) = v3;

    v2 = *(void **)(*(_QWORD *)(a1 + 32) + 80);
  }
  v9 = _NSConcreteStackBlock;
  v10 = 3221225472;
  v11 = sub_11A4C0;
  v12 = &unk_28C388;
  v6 = *(id *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = v6;
  v7 = objc_msgSend(&v9, "copy");
  v8 = objc_retainBlock(v7);
  objc_msgSend(v2, "addObject:", v8, v9, v10, v11, v12);

}

uint64_t sub_11A4C0(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 88) >> 1) & 1);
}

void sub_11A62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_11A654(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 32);
  v2 = *(_QWORD *)(v1 + 88);
  if ((v2 & 1) == 0)
  {
    *(_QWORD *)(v1 + 88) = v2 | 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = 1;
  }
  return result;
}

void sub_11ABE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_11AC10(uint64_t a1)
{
  _BYTE *v2;
  id v3;

  v2 = *(_BYTE **)(a1 + 32);
  if ((v2[88] & 1) != 0)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "pending"));
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v3, "count") == 0;

  }
}

void sub_11AE7C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(*(id *)(a1 + 32), "setTargetSceneController:");
  v3 = objc_retainBlock(*(id *)(a1 + 40));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

void sub_11B678(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingTransactions"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_11B734(uint64_t a1)
{
  NSMutableArray *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  void *i;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  NSObject *v22;
  void *v23;
  void *v24;
  id v25;
  NSObject *v26;
  void *v27;
  void *v28;
  NSMutableArray *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *j;
  void *v34;
  void *v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[128];
  uint8_t v47[128];
  uint8_t buf[4];
  void *v49;
  __int16 v50;
  id v51;

  if ((*(_BYTE *)(*(_QWORD *)(a1 + 32) + 8) & 1) == 0)
    return;
  v2 = objc_opt_new(NSMutableArray);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeTransaction"));
  if (v3 == *(void **)(a1 + 40))
    goto LABEL_8;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeTransaction"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "context"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));

  if (v5 == v6)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeTransaction"));
    objc_msgSend(*(id *)(a1 + 32), "setActiveTransaction:", 0);
    if (v3)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sq_rollbacksToProcess"));
      v8 = BCTransactionLog();
      v9 = objc_claimAutoreleasedReturnValue(v8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "debugDescription"));
        *(_DWORD *)buf = 138543618;
        v49 = v10;
        v50 = 2048;
        v51 = objc_msgSend(v7, "count");
        _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "Preparing to cancel activeTransaction: %{public}@, processing (%ld) rollbacks", buf, 0x16u);

      }
      -[NSMutableArray addObject:](v2, "addObject:", v3);
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blocksToProcess"));
      objc_msgSend(v11, "addObjectsFromArray:", v7);

    }
LABEL_8:

  }
  v44 = 0u;
  v45 = 0u;
  v42 = 0u;
  v43 = 0u;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingTransactions"));
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v42, v47, 16);
  if (v13)
  {
    v15 = v13;
    v16 = *(_QWORD *)v43;
    *(_QWORD *)&v14 = 138543362;
    v37 = v14;
    do
    {
      for (i = 0; i != v15; i = (char *)i + 1)
      {
        if (*(_QWORD *)v43 != v16)
          objc_enumerationMutation(v12);
        v18 = *(void **)(*((_QWORD *)&v42 + 1) + 8 * (_QWORD)i);
        if (v18 != *(void **)(a1 + 40))
        {
          v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v42 + 1) + 8 * (_QWORD)i), "context"));
          v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "context"));

          if (v19 == v20)
          {
            v21 = BCTransactionLog();
            v22 = objc_claimAutoreleasedReturnValue(v21);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
            {
              v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "debugDescription"));
              *(_DWORD *)buf = v37;
              v49 = v23;
              _os_log_impl(&dword_0, v22, OS_LOG_TYPE_DEFAULT, "Preparing to cancel pending transaction: %{public}@", buf, 0xCu);

            }
            -[NSMutableArray addObject:](v2, "addObject:", v18);
          }
        }
      }
      v15 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v42, v47, 16);
    }
    while (v15);
  }

  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pendingTransactions"));
  objc_msgSend(v24, "removeObjectsInArray:", v2);

  if (-[NSMutableArray count](v2, "count"))
  {
    v25 = BCTransactionLog();
    v26 = objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      v27 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableArray componentsJoinedByString:](v2, "componentsJoinedByString:", CFSTR(", ")));
      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "debugDescription"));
      *(_DWORD *)buf = 138543618;
      v49 = v27;
      v50 = 2114;
      v51 = v28;
      _os_log_impl(&dword_0, v26, OS_LOG_TYPE_DEFAULT, "Cancelling transactions [%{public}@] due to conflict with transaction: %{public}@", buf, 0x16u);

    }
  }
  v40 = 0u;
  v41 = 0u;
  v38 = 0u;
  v39 = 0u;
  v29 = v2;
  v30 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v29, "countByEnumeratingWithState:objects:count:", &v38, v46, 16);
  if (v30)
  {
    v31 = v30;
    v32 = *(_QWORD *)v39;
    do
    {
      for (j = 0; j != v31; j = (char *)j + 1)
      {
        if (*(_QWORD *)v39 != v32)
          objc_enumerationMutation(v29);
        v34 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * (_QWORD)j);
        objc_msgSend(v34, "sq_cancel", v37, (_QWORD)v38);
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blocksToProcess"));
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "sq_whenCancelledBlocks"));
        objc_msgSend(v35, "addObjectsFromArray:", v36);

      }
      v31 = -[NSMutableArray countByEnumeratingWithState:objects:count:](v29, "countByEnumeratingWithState:objects:count:", &v38, v46, 16);
    }
    while (v31);
  }

}

void sub_11BC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_11BC98(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;

  v2 = BCTransactionLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "debugDescription"));
    v10 = 138543362;
    v11 = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "_processTransaction transaction: %{public}@", (uint8_t *)&v10, 0xCu);

  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "activeTransaction"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v5 == *(void **)(a1 + 32);

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sq_whenCancelledBlocks"));
    if (objc_msgSend(v6, "count"))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "blocksToProcess"));
      objc_msgSend(v7, "addObjectsFromArray:", v6);

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sq_whenCompletedBlocks"));
    if (objc_msgSend(v8, "count"))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "blocksToProcess"));
      objc_msgSend(v9, "addObjectsFromArray:", v8);

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
    }

  }
}

void sub_11C060(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _QWORD block[6];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void (*v18)(uint64_t);
  id v19;
  _BYTE v20[128];

  do
  {
    v14 = 0;
    v15 = &v14;
    v16 = 0x3032000000;
    v17 = sub_11C234;
    v18 = sub_11C244;
    v19 = 0;
    v2 = *(_QWORD *)(a1 + 32);
    v3 = *(NSObject **)(v2 + 24);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_11C24C;
    block[3] = &unk_28E468;
    block[4] = v2;
    block[5] = &v14;
    dispatch_sync(v3, block);
    v4 = objc_msgSend((id)v15[5], "count");
    v11 = 0u;
    v12 = 0u;
    v9 = 0u;
    v10 = 0u;
    v5 = (id)v15[5];
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v9, v20, 16);
    if (v6)
    {
      v7 = *(_QWORD *)v10;
      do
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v10 != v7)
            objc_enumerationMutation(v5);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)v8) + 16))();
          v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v9, v20, 16);
      }
      while (v6);
    }

    _Block_object_dispose(&v14, 8);
  }
  while (v4);
}

void sub_11C208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_11C234(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_11C244(uint64_t a1)
{

}

void sub_11C24C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;

  objc_msgSend(*(id *)(a1 + 32), "sq_removeFinishedTransactions");
  objc_msgSend(*(id *)(a1 + 32), "sq_activateTransactions");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blocksToProcess"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "activeTransaction"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "sq_commitsToProcess"));
  objc_msgSend(v2, "addObjectsFromArray:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blocksToProcess"));
  v6 = objc_msgSend(v5, "copy");
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "blocksToProcess"));
  objc_msgSend(v9, "removeAllObjects");

}

uint64_t BCReadingStatisticsProtoTOCEntryReadFrom(uint64_t a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  int v12;
  unint64_t v14;
  uint64_t String;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  while (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    while (1)
    {
      v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
      v8 = v7 + 1;
      if (v7 == -1 || v8 > *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        break;
      v9 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0)
        goto LABEL_11;
      v4 += 7;
      if (v5++ >= 9)
      {
        v6 = 0;
        v11 = OBJC_IVAR___PBDataReader__error;
        v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    v11 = OBJC_IVAR___PBDataReader__error;
    v12 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      v6 = 0;
LABEL_13:
    if (v12 || (v6 & 7) == 4)
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    v14 = v6 >> 3;
    if ((v6 >> 3) == 3)
    {
      v20 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        v19 = *(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
        *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 8;
      }
      else
      {
        *(_BYTE *)(a2 + v11) = 1;
        v19 = 0;
      }
      v22 = 16;
    }
    else
    {
      if ((_DWORD)v14 != 2)
      {
        if ((_DWORD)v14 == 1)
        {
          String = PBReaderReadString(a2);
          v16 = objc_claimAutoreleasedReturnValue(String);
          v17 = *(void **)(a1 + 24);
          *(_QWORD *)(a1 + 24) = v16;

        }
        else
        {
          result = PBReaderSkipValueWithTag(a2);
          if (!(_DWORD)result)
            return result;
        }
        continue;
      }
      v18 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v18 <= 0xFFFFFFFFFFFFFFF7 && v18 + 8 <= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
      {
        v19 = *(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
        *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 8;
      }
      else
      {
        *(_BYTE *)(a2 + v11) = 1;
        v19 = 0;
      }
      v22 = 8;
    }
    *(_QWORD *)(a1 + v22) = v19;
  }
  return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_11D06C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  __int128 v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  __int128 v18;
  uint8_t buf[4];
  id v20;
  __int16 v21;
  void *v22;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "taskIDs"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "identifiersByTaskID"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectEnumerator"));
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "nextObject"));
  if (v5)
  {
    v7 = (void *)v5;
    *(_QWORD *)&v6 = 134218242;
    v18 = v6;
    do
    {
      v8 = objc_msgSend(v7, "unsignedIntegerValue", v18);
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", v7));
      v10 = BCIMLog();
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = v18;
        v20 = v8;
        v21 = 2112;
        v22 = v9;
        _os_log_error_impl(&dword_0, v11, OS_LOG_TYPE_ERROR, "We should have released the background task assertion %lu for identifier %@.", buf, 0x16u);
      }

      v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIApplication jsa_sharedApplicationIfNotExtension](UIApplication, "jsa_sharedApplicationIfNotExtension"));
      objc_msgSend(v12, "endBackgroundTask:", v8);

      v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "nextObject"));
      v7 = (void *)v13;
    }
    while (v13);
  }
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(void **)(v14 + 16);
  *(_QWORD *)(v14 + 16) = 0;

  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(void **)(v16 + 24);
  *(_QWORD *)(v16 + 24) = 0;

}

void sub_11D258(id a1)
{
  id v1;
  void *v2;

  v1 = -[BCBackgroundTaskAssertion _init]([BCBackgroundTaskAssertion alloc], "_init");
  v2 = (void *)qword_3112F0;
  qword_3112F0 = (uint64_t)v1;

}

void sub_11D3E8(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(WeakRetained, "dq_claimAssertionForIdentifier:description:signalBlock:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_11D554(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "dq_releaseAssertionForIdentifier:signalBlock:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void sub_11D644(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "dq_releaseAssertionForTaskID:", *(_QWORD *)(a1 + 40));

}

void sub_11D8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_11D900(uint64_t a1)
{
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = BCIMLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_1B7F18(a1, v3, v4, v5, v6, v7, v8, v9);

  return objc_msgSend(*(id *)(a1 + 40), "_releaseAssertionForTaskID:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
}

void sub_11E150(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0;

}

void sub_11E1D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = 0;

}

void sub_11E75C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "highlight"));
  objc_msgSend(v1, "setAlpha:", 0.0);

}

id sub_11F198(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "updateScrollViewContent");
  return _objc_msgSend(*(id *)(a1 + 32), "p_revealTextViewCursorAnimated:", 1);
}

id sub_120A08(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_revealTextViewCursorAnimated:", 1);
}

void sub_120CAC(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v2 = *(double *)(a1 + 40);
  v3 = *(double *)(a1 + 48);
  v4 = *(double *)(a1 + 56);
  v5 = *(double *)(a1 + 64);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
  objc_msgSend(v6, "setContentInset:", v2, v3, v4, v5);

  v7 = *(double *)(a1 + 40);
  v8 = *(double *)(a1 + 48);
  v9 = *(double *)(a1 + 56);
  v10 = *(double *)(a1 + 64);
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
  objc_msgSend(v11, "setScrollIndicatorInsets:", v7, v8, v9, v10);

}

id sub_120D40(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_revealTextViewCursorAnimated:", 1);
}

void sub_120E9C(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;

  v2 = *(double *)(a1 + 40);
  v3 = *(double *)(a1 + 48);
  v4 = *(double *)(a1 + 56);
  v5 = *(double *)(a1 + 64);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
  objc_msgSend(v6, "setContentInset:", v2, v3, v4, v5);

  v7 = *(double *)(a1 + 40);
  v8 = *(double *)(a1 + 48);
  v9 = *(double *)(a1 + 56);
  v10 = *(double *)(a1 + 64);
  v11 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
  objc_msgSend(v11, "setScrollIndicatorInsets:", v7, v8, v9, v10);

}

id sub_120F30(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "p_revealTextViewCursorAnimated:", 1);
}

uint64_t IMAccessibilityShouldPerformValidationChecks()
{
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  return byte_311300;
}

uint64_t __IMAccessibilityHandleValidationErrorWithDescription(int a1, int a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v11;
  id v12;
  int v13;
  uint64_t v14;

  v11 = a3;
  v12 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:arguments:", v11, &a9);

  NSLog(CFSTR("*** IMAccessibility validation error: %@"), v12);
  v13 = a1 ^ 1;
  if (!v12)
    v13 = 1;
  v14 = v13 ^ 1u;
  if ((v13 & 1) == 0 && a2)
  {
    if (qword_311330 != -1)
      dispatch_once(&qword_311330, &stru_291A68);
    v14 = 0;
  }

  return v14;
}

uint64_t IMAccessibilityShouldCrashOnValidationErrorAfterLaunch()
{
  if (qword_311328 != -1)
    dispatch_once(&qword_311328, &stru_291A48);
  return byte_311320;
}

#error "121EF8: call analysis failed (funcsize=60)"

uint64_t __IMAccessibilityPerformSafeBlock(void *a1)
{
  void (**v1)(void);

  v1 = a1;
  v1[2]();

  return 0;
}

id __IMAccessibilityCastAsSafeCategory(void *a1, void *a2, int a3, _BYTE *a4)
{
  id v7;
  NSString *v8;
  NSString *v9;
  int v10;
  int v11;
  NSString *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Class v19;
  int v20;
  int v21;
  NSString *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isKindOfClass;
  int v29;
  id v30;
  Class v31;
  int v32;
  objc_class *v33;
  NSString *v34;
  void *v35;
  NSString *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v43;
  void *v44;

  v7 = a2;
  if (v7)
  {
    v8 = (NSString *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "imaxTargetClassName"));
    v9 = v8;
    if (!a3)
    {
      if (!v8 || (v31 = NSClassFromString(v8)) == 0 || (objc_opt_isKindOfClass(v7, v31) & 1) == 0)
      {
LABEL_41:
        v30 = 0;
        goto LABEL_42;
      }
LABEL_33:
      v30 = v7;
LABEL_42:

      goto LABEL_43;
    }
    if (qword_311308 != -1)
      dispatch_once(&qword_311308, &stru_291A08);
    LOBYTE(v10) = 0;
    if (!byte_311300 || v9)
      goto LABEL_21;
    if (qword_311328 != -1)
      dispatch_once(&qword_311328, &stru_291A48);
    v11 = byte_311320;
    v12 = NSStringFromClass((Class)a1);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);
    v10 = __IMAccessibilityHandleValidationErrorWithDescription(v11, 0, CFSTR("Couldn't find target class name for safe category class %@"), v14, v15, v16, v17, v18, (uint64_t)v13);

    if (a4 || !v10)
    {
LABEL_21:
      if (a4)
        *a4 = v10;
      if (!v9)
        goto LABEL_41;
      v19 = NSClassFromString(v9);
      if (qword_311308 != -1)
        dispatch_once(&qword_311308, &stru_291A08);
      LOBYTE(v20) = 0;
      if (!byte_311300 || v19)
        goto LABEL_22;
      if (qword_311328 != -1)
        dispatch_once(&qword_311328, &stru_291A48);
      v21 = byte_311320;
      v22 = NSStringFromClass((Class)a1);
      v43 = (void *)objc_claimAutoreleasedReturnValue(v22);
      v20 = __IMAccessibilityHandleValidationErrorWithDescription(v21, 0, CFSTR("Couldn't find target class named %@ for safe category class %@"), v23, v24, v25, v26, v27, (uint64_t)v9);

      if (a4 || !v20)
      {
LABEL_22:
        if (a4)
          *a4 = v20;
        if (!v19)
          goto LABEL_41;
        isKindOfClass = objc_opt_isKindOfClass(v7, v19);
        if (qword_311308 != -1)
          dispatch_once(&qword_311308, &stru_291A08);
        if ((byte_311300 == 0) | isKindOfClass & 1)
        {
          LOBYTE(v29) = 0;
          goto LABEL_38;
        }
        if (qword_311328 != -1)
          dispatch_once(&qword_311328, &stru_291A48);
        v32 = byte_311320;
        v33 = (objc_class *)objc_opt_class(v7);
        v34 = NSStringFromClass(v33);
        v35 = (void *)objc_claimAutoreleasedReturnValue(v34);
        v36 = NSStringFromClass((Class)a1);
        v44 = (void *)objc_claimAutoreleasedReturnValue(v36);
        v29 = __IMAccessibilityHandleValidationErrorWithDescription(v32, 0, CFSTR("Failed to cast object <%@: %p> as safe category %@"), v37, v38, v39, v40, v41, (uint64_t)v35);

        if (a4 || !v29)
        {
LABEL_38:
          if (a4)
            *a4 = v29;
          if ((isKindOfClass & 1) == 0)
            goto LABEL_41;
          goto LABEL_33;
        }
      }
    }
    abort();
  }
  v30 = 0;
LABEL_43:

  return v30;
}

id __IMAccessibilityCastAsClass(objc_class *a1, void *a2, int a3, _BYTE *a4)
{
  id v7;
  void *v8;
  char isKindOfClass;
  int v10;
  int v11;
  objc_class *v12;
  NSString *v13;
  void *v14;
  NSString *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v23;

  v7 = a2;
  v8 = v7;
  if (!v7)
    goto LABEL_15;
  isKindOfClass = objc_opt_isKindOfClass(v7, a1);
  if (a3)
  {
    if (qword_311308 != -1)
      dispatch_once(&qword_311308, &stru_291A08);
    if ((byte_311300 == 0) | isKindOfClass & 1)
    {
      LOBYTE(v10) = 0;
    }
    else
    {
      if (qword_311328 != -1)
        dispatch_once(&qword_311328, &stru_291A48);
      v11 = byte_311320;
      v12 = (objc_class *)objc_opt_class(v8);
      v13 = NSStringFromClass(v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
      v15 = NSStringFromClass(a1);
      v23 = (void *)objc_claimAutoreleasedReturnValue(v15);
      v10 = __IMAccessibilityHandleValidationErrorWithDescription(v11, 0, CFSTR("Failed to cast object <%@: %p> as class %@"), v16, v17, v18, v19, v20, (uint64_t)v14);

      if (!a4 && v10)
        abort();
    }
    if (a4)
      *a4 = v10;
  }
  if ((isKindOfClass & 1) != 0)
    v21 = v8;
  else
LABEL_15:
    v21 = 0;

  return v21;
}

id __IMAccessibilityCastAsProtocol(void *a1, void *a2, int a3, _BYTE *a4)
{
  Protocol *v7;
  id v8;
  void *v9;
  unsigned int v10;
  char v11;
  int v12;
  int v13;
  objc_class *v14;
  NSString *v15;
  void *v16;
  NSString *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v25;

  v7 = a1;
  v8 = a2;
  v9 = v8;
  if (!v8)
    goto LABEL_18;
  v10 = objc_msgSend(v8, "conformsToProtocol:", v7);
  if (a3)
  {
    if (qword_311308 != -1)
      dispatch_once(&qword_311308, &stru_291A08);
    if (byte_311300)
      v11 = v10;
    else
      v11 = 1;
    if ((v11 & 1) != 0)
    {
      LOBYTE(v12) = 0;
    }
    else
    {
      if (qword_311328 != -1)
        dispatch_once(&qword_311328, &stru_291A48);
      v13 = byte_311320;
      v14 = (objc_class *)objc_opt_class(v9);
      v15 = NSStringFromClass(v14);
      v16 = (void *)objc_claimAutoreleasedReturnValue(v15);
      v17 = NSStringFromProtocol(v7);
      v25 = (void *)objc_claimAutoreleasedReturnValue(v17);
      v12 = __IMAccessibilityHandleValidationErrorWithDescription(v13, 0, CFSTR("Failed to cast object <%@: %p> as protocol %@"), v18, v19, v20, v21, v22, (uint64_t)v16);

      if (!a4 && v12)
        abort();
    }
    if (a4)
      *a4 = v12;
  }
  if (v10)
    v23 = v9;
  else
LABEL_18:
    v23 = 0;

  return v23;
}

void IMAccessibilityInstallSafeCategory(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Class v6;
  BOOL v7;
  NSString *v8;

  v8 = a1;
  v6 = NSClassFromString(v8);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300)
    v7 = v6 == 0;
  else
    v7 = 0;
  if (v7)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Failed installing safe category: %@ does not exist in runtime."), v1, v2, v3, v4, v5, (uint64_t)v8))abort();
  }
  else if (v6)
  {
    -[objc_class performSelector:](v6, "performSelector:", "_imaxInitializeSafeCategory");
  }

}

uint64_t IMAccessibilityShouldCrashOnValidationError()
{
  if (qword_311318 != -1)
    dispatch_once(&qword_311318, &stru_291A28);
  return byte_311310;
}

void IMAccessibilityInstallSafeCategories(void *a1)
{
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  size_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  NSString *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Class v17;
  uint64_t v18;
  uint64_t *v19;
  NSString *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Class v26;
  id v27;
  size_t v28;
  id *v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  NSMutableArray *v36;
  NSMutableSet *v37;
  NSMutableSet *v38;
  NSMutableArray *v39;
  NSMutableSet *v40;
  NSMutableSet *v41;
  char *v42;
  id v43;
  char *__base;
  id v45;
  _QWORD __compar[4];
  NSMutableArray *v47;
  NSMutableSet *v48;
  NSMutableSet *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _BYTE v54[128];

  v1 = a1;
  v2 = objc_msgSend(v1, "count");
  if (v2)
  {
    __base = (char *)malloc_type_malloc(40 * (_QWORD)v2, 0x800402FCC0CB6uLL);
    if (__base)
    {
      v52 = 0u;
      v53 = 0u;
      v50 = 0u;
      v51 = 0u;
      v43 = v1;
      v3 = v1;
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v50, v54, 16);
      if (v4)
      {
        v5 = v4;
        v6 = 0;
        v7 = &qword_311000;
        v8 = &qword_311000;
        v9 = *(_QWORD *)v51;
        do
        {
          v10 = 0;
          v45 = v5;
          do
          {
            if (*(_QWORD *)v51 != v9)
              objc_enumerationMutation(v3);
            v11 = *(NSString **)(*((_QWORD *)&v50 + 1) + 8 * (_QWORD)v10);
            v17 = NSClassFromString(v11);
            if (v7[97] != -1)
              dispatch_once(&qword_311308, &stru_291A08);
            if (!*((_BYTE *)v8 + 768) || v17)
            {
              if (v17)
              {
                v18 = v9;
                v19 = v8;
                v20 = (NSString *)objc_claimAutoreleasedReturnValue(-[objc_class imaxTargetClassName](v17, "imaxTargetClassName"));
                v26 = NSClassFromString(v20);
                if (v7[97] != -1)
                  dispatch_once(&qword_311308, &stru_291A08);
                if (!*((_BYTE *)v19 + 768) || v26)
                {
                  if (v26)
                  {
                    v27 = v3;
                    v28 = v6;
                    v29 = (id *)&__base[40 * v6];
                    *v29 = v17;
                    objc_storeStrong(v29 + 1, v11);
                    v30 = sub_123118(v17, v11);
                    v31 = objc_claimAutoreleasedReturnValue(v30);
                    v32 = v29[2];
                    v29[2] = (id)v31;

                    v29[3] = v26;
                    v33 = sub_123118(v26, v20);
                    v34 = objc_claimAutoreleasedReturnValue(v33);
                    v35 = v29[4];
                    v29[4] = (id)v34;

                    v6 = v28 + 1;
                    v3 = v27;
                    v7 = &qword_311000;
                  }
                }
                else
                {
                  if (qword_311318 != -1)
                    dispatch_once(&qword_311318, &stru_291A28);
                  if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Failed installing %@ on %@. %@ does not exist in runtime."), v21, v22, v23, v24, v25, (uint64_t)v11))LABEL_37:abort();
                }

                v8 = v19;
                v9 = v18;
                v5 = v45;
              }
            }
            else
            {
              if (qword_311318 != -1)
                dispatch_once(&qword_311318, &stru_291A28);
              if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Failed installing safe category: %@ does not exist in runtime."), v12, v13, v14, v15, v16, (uint64_t)v11))goto LABEL_37;
            }
            v10 = (char *)v10 + 1;
          }
          while (v5 != v10);
          v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v50, v54, 16);
        }
        while (v5);
      }
      else
      {
        v6 = 0;
      }

      v36 = objc_opt_new(NSMutableArray);
      v37 = objc_opt_new(NSMutableSet);
      v38 = objc_opt_new(NSMutableSet);
      __compar[0] = _NSConcreteStackBlock;
      __compar[1] = 3221225472;
      __compar[2] = sub_1231C8;
      __compar[3] = &unk_2919E8;
      v39 = v36;
      v47 = v39;
      v40 = v37;
      v48 = v40;
      v41 = v38;
      v49 = v41;
      qsort_b(__base, v6, 0x28uLL, __compar);
      if (v6)
      {
        v42 = __base;
        do
        {
          objc_msgSend(*(id *)v42, "_imaxInstallSafeCategoryOnClass:", *((_QWORD *)v42 + 3));
          v42 += 40;
          --v6;
        }
        while (v6);
      }
      free(__base);

      v1 = v43;
    }
  }

}

id sub_123118(void *a1, void *a2)
{
  id v3;
  id v4;
  objc_class *v5;
  objc_class *v6;
  NSString *v7;
  void *v8;

  v3 = a2;
  v4 = objc_msgSend(objc_alloc((Class)NSMutableString), "initWithString:", v3);
  v5 = (objc_class *)objc_msgSend(a1, "superclass");
  if (v5)
  {
    v6 = v5;
    do
    {
      objc_msgSend(v4, "insertString:atIndex:", CFSTR(","), 0);
      v7 = NSStringFromClass(v6);
      v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
      objc_msgSend(v4, "insertString:atIndex:", v8, 0);

      v6 = (objc_class *)-[objc_class superclass](v6, "superclass");
    }
    while (v6);
  }

  return v4;
}

uint64_t sub_1231C8(void **a1, void **a2, uint64_t a3)
{
  uint64_t result;

  result = (uint64_t)objc_msgSend(a2[4], "compare:", *(_QWORD *)(a3 + 32));
  if (!result)
  {
    if ((sub_123250(a2, a3, a1[4], a1[5], a1[6]) & 1) != 0)
    {
      return 1;
    }
    else if ((sub_123250((void **)a3, (uint64_t)a2, a1[4], a1[5], a1[6]) & 1) != 0)
    {
      return -1;
    }
    else
    {
      return (uint64_t)objc_msgSend(a2[2], "compare:", *(_QWORD *)(a3 + 16));
    }
  }
  return result;
}

uint64_t sub_123250(void **a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  char v12;
  NSString *v13;
  Class v14;

  v9 = a3;
  v10 = a4;
  v11 = a5;
  sub_1257E8(*a1, v9, v10, v11);
  v12 = 0;
  while (objc_msgSend(v9, "count"))
  {
    v13 = (NSString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectAtIndex:", 0));
    objc_msgSend(v9, "removeObjectAtIndex:", 0);
    objc_msgSend(v11, "addObject:", v13);
    if (-[NSString isEqualToString:](v13, "isEqualToString:", *(_QWORD *)(a2 + 8)))
    {
      objc_msgSend(v9, "removeAllObjects");
      v12 = 1;
    }
    else
    {
      v14 = NSClassFromString(v13);
      sub_1257E8(v14, v9, v10, v11);
    }

  }
  objc_msgSend(v11, "removeAllObjects");

  return v12 & 1;
}

void sub_123910(id a1)
{
  id v1;
  __CFString *v2;

  if (!byte_311300)
  {
    v1 = sub_1239A0();
    v2 = (__CFString *)objc_claimAutoreleasedReturnValue(v1);
    byte_311300 = CFPreferencesGetAppBooleanValue(CFSTR("ReportValidationErrors"), v2, 0) != 0;

    if (!byte_311300)
    {
      if (qword_311318 != -1)
        dispatch_once(&qword_311318, &stru_291A28);
      byte_311300 = byte_311310;
    }
  }
}

id sub_1239A0()
{
  void *v0;
  void *v1;

  v0 = (void *)objc_claimAutoreleasedReturnValue(+[IMCommonCoreAccessibility sharedInstance](IMCommonCoreAccessibility, "sharedInstance"));
  if (objc_msgSend(v0, "_imaxRespondsToSelector:fromExtrasProtocol:skipAssertions:", "preferencesDomain", &OBJC_PROTOCOL___IMCommonCoreAccessibilityExtras, 1))v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v0, "preferencesDomain"));
  else
    v1 = 0;

  return v1;
}

void sub_123A08(id a1)
{
  id v1;
  __CFString *v2;

  if (!byte_311310)
  {
    v1 = sub_1239A0();
    v2 = (__CFString *)objc_claimAutoreleasedReturnValue(v1);
    byte_311310 = CFPreferencesGetAppBooleanValue(CFSTR("CrashOnValidationErrors"), v2, 0) != 0;

  }
}

void sub_123A74(id a1)
{
  if (qword_311318 != -1)
    dispatch_once(&qword_311318, &stru_291A28);
  byte_311320 = byte_311310;
}

void sub_123ABC(id a1)
{
  IMAccessibilityPerformBlockOnMainThreadAfterDelay(&stru_291A88, 0.1);
}

void sub_123AD0(id a1)
{
  NSLog(CFSTR("*** IMAccessibility validation error: see log output above."));
  abort();
}

void __IMAccessibilityValidateMethodSignature(void *a1, uint64_t a2, void *a3, objc_method *a4, const char *a5, const char **a6)
{
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int NumberOfArguments;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  const char **v27;
  const char *v28;
  char *v29;
  unsigned int v30;
  unsigned int v31;
  const char **v32;

  v10 = a1;
  v11 = a3;
  v32 = a6;
  if (a4)
  {
    v12 = method_copyReturnType(a4);
    if (qword_311308 != -1)
      dispatch_once(&qword_311308, &stru_291A08);
    if (byte_311300 && !sub_123D98(a5, v12))
    {
      if (qword_311318 != -1)
        dispatch_once(&qword_311318, &stru_291A28);
      if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Return type is different for method: -[%@ %@]. Actual: %s, Stated: %s"), v13, v14, v15, v16, v17, (uint64_t)v10))goto LABEL_35;
    }
    if (v12)
      free(v12);
    NumberOfArguments = method_getNumberOfArguments(a4);
    v24 = NumberOfArguments - 2;
    if (NumberOfArguments == 2)
    {
      v30 = 0;
    }
    else
    {
      v25 = NumberOfArguments;
      v31 = NumberOfArguments - 2;
      v26 = 2;
      while (1)
      {
        v27 = v32++;
        v28 = *v27;
        if (!*v27)
          break;
        v29 = method_copyArgumentType(a4, v26);
        if (qword_311308 != -1)
          dispatch_once(&qword_311308, &stru_291A08);
        if (byte_311300 && !sub_123D98(v28, v29))
        {
          if (qword_311318 != -1)
            dispatch_once(&qword_311318, &stru_291A28);
          if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Argument type is different for method: -[%@ %@]. Actual: %s, Stated: %s"), v19, v20, v21, v22, v23, (uint64_t)v10))goto LABEL_35;
        }
        if (v29)
          free(v29);
        if (v25 == ++v26)
        {
          v24 = v31;
          v30 = v31;
          goto LABEL_27;
        }
      }
      v30 = v26 - 2;
      v24 = v31;
    }
LABEL_27:
    if (qword_311308 != -1)
      dispatch_once(&qword_311308, &stru_291A08);
    if (v24 != v30 && byte_311300)
    {
      if (qword_311318 != -1)
        dispatch_once(&qword_311318, &stru_291A28);
      if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Argument count is different for method: -[%@ %@]. Actual: %u, Stated: %u"), v19, v20, v21, v22, v23, (uint64_t)v10))LABEL_35:abort();
    }
  }

}

BOOL sub_123D98(const char *a1, char *__s2)
{
  _BOOL8 v2;
  id v5;
  void *v6;

  v2 = 0;
  if (a1 && __s2)
  {
    if (!strcmp(a1, __s2))
    {
      return 1;
    }
    else
    {
      v5 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("@\"%s\""), a1);
      v6 = v5;
      if (v5)
        v2 = strcmp((const char *)objc_msgSend(objc_retainAutorelease(v5), "UTF8String"), __s2) == 0;
      else
        v2 = 0;

    }
  }
  return v2;
}

void __IMAccessibilityValidateSymbol(char *__symbol)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  if (!dlsym(&dword_8, __symbol))
  {
    v7 = dlsym((void *)0xFFFFFFFFFFFFFFFELL, __symbol);
    if (qword_311308 != -1)
      dispatch_once(&qword_311308, &stru_291A08);
    if (byte_311300 && !v7)
    {
      if (qword_311318 != -1)
        dispatch_once(&qword_311318, &stru_291A28);
      if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Symbol not present: %s"), v2, v3, v4, v5, v6, (uint64_t)__symbol))abort();
    }
  }
}

void __IMAccessibilityValidateClassMethod(void *a1, void *a2)
{
  NSString *v3;
  objc_class *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Method ClassMethod;
  NSString *aClassName;

  aClassName = a1;
  v3 = a2;
  v4 = NSClassFromString(aClassName);
  v5 = NSSelectorFromString(v3);
  ClassMethod = class_getClassMethod(v4, v5);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !ClassMethod)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("%@ Class method not present: %@"), v6, v7, v8, v9, v10, (uint64_t)aClassName))abort();
  }

}

void __IMAccessibilityValidateClassMethodComplete(void *a1, void *a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9)
{
  NSString *v11;
  NSString *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_method *ClassMethod;

  v11 = a1;
  v12 = a2;
  v18 = NSClassFromString(v11);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !v18)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Class missing: %@"), v13, v14, v15, v16, v17, (uint64_t)v11))goto LABEL_16;
  }
  v19 = NSSelectorFromString(v12);
  ClassMethod = class_getClassMethod(v18, v19);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !ClassMethod)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Class method missing: -[%@ %@]"), v21, v22, v23, v24, v25, (uint64_t)v11))LABEL_16:abort();
  }
  __IMAccessibilityValidateMethodSignature(v11, v20, v12, ClassMethod, a3, &a9);

}

void __IMAccessibilityValidateIsKindOfClass(void *a1, void *a2)
{
  NSString *v3;
  objc_class *v4;
  Class v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  objc_class *v12;
  Class Superclass;
  char v14;
  NSString *aClassName;

  aClassName = a1;
  v3 = a2;
  v4 = NSClassFromString(aClassName);
  v5 = NSClassFromString(v3);
  v11 = 0;
  if (v4)
  {
    v12 = v5;
    if (v5)
    {
      do
      {
        Superclass = class_getSuperclass(v4);
        v11 = Superclass == v12;
        if (!Superclass)
          break;
        v4 = Superclass;
      }
      while (Superclass != v12);
    }
  }
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300)
    v14 = v11;
  else
    v14 = 1;
  if ((v14 & 1) == 0)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("%@ is not a kind of %@"), v6, v7, v8, v9, v10, (uint64_t)aClassName))abort();
  }

}

void __IMAccessibilityValidateIvarType(void *a1, const char *a2, const char *a3)
{
  objc_class *v5;
  objc_ivar *InstanceVariable;
  char *TypeEncoding;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString *v13;

  v13 = a1;
  v5 = NSClassFromString(v13);
  InstanceVariable = class_getInstanceVariable(v5, a2);
  TypeEncoding = (char *)ivar_getTypeEncoding(InstanceVariable);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !sub_123D98(a3, TypeEncoding))
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("%@ : Ivar is not the right type: %s [Should be: %s was: %s]"), v8, v9, v10, v11, v12, (uint64_t)v13))abort();
  }

}

void __IMAccessibilityValidateInstanceMethod(void *a1, void *a2)
{
  NSString *v3;
  NSString *v4;
  objc_class *v5;
  const char *v6;
  Method InstanceMethod;
  Method *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  objc_method *v15;
  BOOL v16;
  char v17;
  unsigned int outCount;

  v3 = a1;
  v4 = a2;
  v5 = NSClassFromString(v3);
  v6 = NSSelectorFromString(v4);
  InstanceMethod = class_getInstanceMethod(v5, v6);
  outCount = 0;
  v8 = class_copyMethodList(v5, &outCount);
  if (v8)
  {
    if (outCount)
    {
      v14 = 0;
      do
      {
        v15 = v8[v14];
        v16 = v15 == InstanceMethod;
        ++v14;
      }
      while (v14 < outCount && v15 != InstanceMethod);
    }
    else
    {
      v16 = 0;
    }
    free(v8);
  }
  else
  {
    v16 = 0;
  }
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300)
    v17 = v16;
  else
    v17 = 1;
  if ((v17 & 1) == 0)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("%@ Instance method not present: %@"), v9, v10, v11, v12, v13, (uint64_t)v3))abort();
  }

}

void __IMAccessibilityValidateInstanceMethodComplete(void *a1, void *a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const char *a9)
{
  NSString *v11;
  NSString *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  objc_class *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_method *InstanceMethod;

  v11 = a1;
  v12 = a2;
  v18 = NSClassFromString(v11);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !v18)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Class missing: %@"), v13, v14, v15, v16, v17, (uint64_t)v11))goto LABEL_16;
  }
  v19 = NSSelectorFromString(v12);
  InstanceMethod = class_getInstanceMethod(v18, v19);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !InstanceMethod)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Instance method missing: -[%@ %@]"), v21, v22, v23, v24, v25, (uint64_t)v11))LABEL_16:abort();
  }
  __IMAccessibilityValidateMethodSignature(v11, v20, v12, InstanceMethod, a3, &a9);

}

void __IMAccessibilityValidateProperty(void *a1, const char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_class *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_property_t Property;
  NSString *v16;

  v16 = a1;
  v8 = NSClassFromString(v16);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300)
    v9 = v8 == 0;
  else
    v9 = 0;
  if (v9)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Class missing: %@"), v3, v4, v5, v6, v7, (uint64_t)v16))goto LABEL_19;
  }
  Property = class_getProperty(v8, a2);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !Property)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Property missing: %@.%s"), v10, v11, v12, v13, v14, (uint64_t)v16))LABEL_19:abort();
  }

}

void __IMAccessibilityValidateClass(void *a1)
{
  objc_class *v1;
  const char *Name;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSString *v8;

  v8 = a1;
  v1 = NSClassFromString(v8);
  Name = class_getName(v1);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !strcmp(Name, "nil"))
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("Class not present: %@"), v3, v4, v5, v6, v7, (uint64_t)v8))abort();
  }

}

void __IMAccessibilityValidateIvar(void *a1, const char *a2)
{
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Ivar InstanceVariable;
  NSString *v10;

  v10 = a1;
  v3 = NSClassFromString(v10);
  InstanceVariable = class_getInstanceVariable(v3, a2);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !InstanceVariable)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("%@ : Ivar not present: %s"), v4, v5, v6, v7, v8, (uint64_t)v10))abort();
  }

}

void __IMAccessibilityValidateProtocolProperty(void *a1, const char *a2)
{
  Protocol *v3;
  Protocol *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_property_t Property;
  NSString *v11;

  v11 = a1;
  v3 = NSProtocolFromString(v11);
  v4 = (Protocol *)objc_claimAutoreleasedReturnValue(v3);
  Property = protocol_getProperty(v4, a2, 0, 1);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !Property)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("%@ Protocol property not present: %s"), v5, v6, v7, v8, v9, (uint64_t)v11))abort();
  }

}

void __IMAccessibilityValidateProtocolMethod(void *a1, void *a2, BOOL a3, BOOL a4)
{
  NSString *v7;
  Protocol *v8;
  Protocol *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  SEL name;
  NSString *namestr;

  namestr = a1;
  v7 = a2;
  v8 = NSProtocolFromString(namestr);
  v9 = (Protocol *)objc_claimAutoreleasedReturnValue(v8);
  v10 = NSSelectorFromString(v7);
  name = protocol_getMethodDescription(v9, v10, a3, a4).name;
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && !name)
  {
    if (qword_311318 != -1)
      dispatch_once(&qword_311318, &stru_291A28);
    if (__IMAccessibilityHandleValidationErrorWithDescription(byte_311310, 1, CFSTR("%@ Protocol %@ %@ method not present: %@"), v11, v12, v13, v14, v15, (uint64_t)namestr))abort();
  }

}

uint64_t __IMAccessibilityValidateBlockSignature(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  __CFString *v24;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  const char *v33;
  NSMutableArray *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *i;
  objc_class *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void **v52;
  uint64_t v53;
  NSMutableArray *v54;
  NSMutableArray *obj;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  void **v60;
  id v61;
  _BYTE v62[128];

  v12 = a1;
  v18 = a2;
  v61 = v18;
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && (v18 = v61) == 0)
  {
    if (qword_311328 != -1)
      dispatch_once(&qword_311328, &stru_291A48);
    v19 = __IMAccessibilityHandleValidationErrorWithDescription(byte_311320, 0, CFSTR("Reference block is NULL."), v13, v14, v15, v16, v17, v53);
    v18 = 0;
    if (!v12)
      goto LABEL_28;
  }
  else
  {
    v19 = 0;
    if (!v12)
      goto LABEL_28;
  }
  if (!v61)
  {
    v18 = 0;
    goto LABEL_28;
  }
  v18 = v61;
  v20 = v12[2];
  v21 = *((_DWORD *)v61 + 2);
  if (qword_311308 != -1)
    dispatch_once(&qword_311308, &stru_291A08);
  if (byte_311300 && (v20 & 0x40000000) == 0)
  {
    if (qword_311328 != -1)
      dispatch_once(&qword_311328, &stru_291A48);
    if ((__IMAccessibilityHandleValidationErrorWithDescription(byte_311320, 0, CFSTR("block has no signature."), v13, v14, v15, v16, v17, v53) & 1) != 0)goto LABEL_18;
    if (qword_311308 != -1)
      dispatch_once(&qword_311308, &stru_291A08);
  }
  v22 = v21 & 0x40000000;
  if (byte_311300 && !v22)
  {
    if (qword_311328 != -1)
      dispatch_once(&qword_311328, &stru_291A48);
    v23 = byte_311320;
    v24 = CFSTR("reference block has no signature.");
LABEL_27:
    v19 = __IMAccessibilityHandleValidationErrorWithDescription(v23, 0, v24, v13, v14, v15, v16, v17, v53);
    goto LABEL_28;
  }
  v19 = 0;
  if ((v20 & 0x40000000) != 0 && v22)
  {
    v26 = v12[2];
    v27 = *((_DWORD *)v61 + 2);
    v28 = *((_QWORD *)v12 + 3);
    v29 = *((_QWORD *)v61 + 3);
    if (byte_311300 && !v28)
    {
      if (qword_311328 != -1)
        dispatch_once(&qword_311328, &stru_291A48);
      if ((__IMAccessibilityHandleValidationErrorWithDescription(byte_311320, 0, CFSTR("block literal has no descriptor."), v13, v14, v15, v16, v17, v53) & 1) != 0)
      {
LABEL_18:
        v19 = 1;
        goto LABEL_28;
      }
      if (qword_311308 != -1)
        dispatch_once(&qword_311308, &stru_291A08);
    }
    if (byte_311300 && !v29)
    {
      if (qword_311328 != -1)
        dispatch_once(&qword_311328, &stru_291A48);
      v23 = byte_311320;
      v24 = CFSTR("reference block literal has no descriptor.");
      goto LABEL_27;
    }
    v19 = 0;
    if (v28 && v29)
    {
      v30 = 32;
      if ((v26 & 0x2000000) != 0)
        v31 = 32;
      else
        v31 = 16;
      v32 = *(const char **)(v28 + v31);
      if ((v27 & 0x2000000) == 0)
        v30 = 16;
      v33 = *(const char **)(v29 + v30);
      if ((objc_msgSend(a3, "isEqual:", objc_opt_class(__IMAccessibilityValidateBlockSignatureSentinel)) & 1) != 0)
      {
        v34 = 0;
      }
      else
      {
        v34 = objc_opt_new(NSMutableArray);
        if (objc_msgSend(a3, "isSubclassOfClass:", objc_opt_class(IMAccessibilitySafeCategory)))-[NSMutableArray addObject:](v34, "addObject:", a3);
        v60 = (void **)&a10;
        while ((objc_msgSend(a9, "isEqual:", objc_opt_class(__IMAccessibilityValidateBlockSignatureSentinel)) & 1) == 0)
        {
          if ((objc_msgSend(a9, "isSubclassOfClass:", objc_opt_class(IMAccessibilitySafeCategory)) & 1) != 0)-[NSMutableArray addObject:](v34, "addObject:", a9);
          v52 = v60++;
          a9 = *v52;
        }
      }
      if (-[NSMutableArray count](v34, "count"))
      {
        v35 = objc_msgSend(objc_alloc((Class)NSMutableString), "initWithUTF8String:", v33);
        v56 = 0u;
        v57 = 0u;
        v58 = 0u;
        v59 = 0u;
        v54 = v34;
        obj = v34;
        v36 = -[NSMutableArray countByEnumeratingWithState:objects:count:](obj, "countByEnumeratingWithState:objects:count:", &v56, v62, 16);
        if (v36)
        {
          v37 = v36;
          v38 = *(_QWORD *)v57;
          do
          {
            for (i = 0; i != v37; i = (char *)i + 1)
            {
              if (*(_QWORD *)v57 != v38)
                objc_enumerationMutation(obj);
              v40 = *(objc_class **)(*((_QWORD *)&v56 + 1) + 8 * (_QWORD)i);
              v41 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("@\"%s\""), class_getName(v40));
              v42 = objc_alloc((Class)NSString);
              v43 = (void *)objc_claimAutoreleasedReturnValue(-[objc_class imaxTargetClassName](v40, "imaxTargetClassName"));
              v44 = objc_msgSend(v42, "initWithFormat:", CFSTR("@\"%@\""), v43);

              objc_msgSend(v35, "replaceOccurrencesOfString:withString:options:range:", v41, v44, 0, 0, objc_msgSend(v35, "length"));
            }
            v37 = -[NSMutableArray countByEnumeratingWithState:objects:count:](obj, "countByEnumeratingWithState:objects:count:", &v56, v62, 16);
          }
          while (v37);
        }

        v45 = objc_retainAutorelease(v35);
        v33 = (const char *)objc_msgSend(v45, "UTF8String");

        v34 = v54;
      }
      if (qword_311308 != -1)
        dispatch_once(&qword_311308, &stru_291A08);
      if (!byte_311300 || !strcmp(v32, v33))
      {
        v19 = 0;
      }
      else
      {
        if (qword_311328 != -1)
          dispatch_once(&qword_311328, &stru_291A48);
        v19 = __IMAccessibilityHandleValidationErrorWithDescription(byte_311320, 0, CFSTR("Signature mismatch for block: '%s'; reference signature: '%s'"),
                v46,
                v47,
                v48,
                v49,
                v50,
                (uint64_t)v32);
      }

      v18 = v61;
    }
  }
LABEL_28:

  return v19;
}

objc_ivar *__imax_verbose_encode_with_type_encoding_group_class(objc_class *a1, const char *a2)
{
  objc_ivar *result;

  result = class_getInstanceVariable(a1, a2);
  if (result)
    return (objc_ivar *)ivar_getTypeEncoding(result);
  return result;
}

void __IMAccessibilitySetAssociatedObject(void *a1, const void *a2, void *a3)
{
  objc_setAssociatedObject(a1, a2, a3, (char *)&dword_0 + 1);
}

void __IMAccessibilitySetAssociatedNonRetainedObject(void *a1, const void *a2, void *a3)
{
  objc_setAssociatedObject(a1, a2, a3, 0);
}

void __IMAccessibilitySetAssociatedCopiedObject(void *a1, const void *a2, void *a3)
{
  objc_setAssociatedObject(a1, a2, a3, (char *)&dword_0 + 3);
}

id __IMAccessibilityGetAssociatedBool(void *a1, const void *a2)
{
  id AssociatedObject;
  void *v3;
  id v4;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  v4 = objc_msgSend(v3, "BOOLValue");

  return v4;
}

void __IMAccessibilitySetAssociatedBool(void *a1, const void *a2, int a3)
{
  void *v5;
  id object;

  object = a1;
  if (a3)
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", 1));
  else
    v5 = 0;
  objc_setAssociatedObject(object, a2, v5, (char *)&dword_0 + 1);

}

id __IMAccessibilityGetAssociatedInteger(void *a1, const void *a2)
{
  id AssociatedObject;
  void *v3;
  id v4;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  v4 = objc_msgSend(v3, "integerValue");

  return v4;
}

void __IMAccessibilitySetAssociatedInteger(void *a1, const void *a2, void *a3)
{
  id object;

  object = a1;
  if (a3)
    a3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a3));
  objc_setAssociatedObject(object, a2, a3, (char *)&dword_0 + 1);

}

id __IMAccessibilityGetAssociatedUnsignedInteger(void *a1, const void *a2)
{
  id AssociatedObject;
  void *v3;
  id v4;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  v4 = objc_msgSend(v3, "unsignedIntegerValue");

  return v4;
}

void __IMAccessibilitySetAssociatedUnsignedInteger(void *a1, const void *a2, void *a3)
{
  id object;

  object = a1;
  if (a3)
    a3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a3));
  objc_setAssociatedObject(object, a2, a3, (char *)&dword_0 + 1);

}

id __IMAccessibilityGetAssociatedRange(void *a1, const void *a2)
{
  id AssociatedObject;
  void *v3;
  void *v4;
  id v5;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  v4 = v3;
  if (v3)
    v5 = objc_msgSend(v3, "rangeValue");
  else
    v5 = 0;

  return v5;
}

void __IMAccessibilitySetAssociatedRange(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id object;

  object = a1;
  if (a3 | a4)
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithRange:](NSValue, "valueWithRange:", a3, a4));
  else
    v7 = 0;
  objc_setAssociatedObject(object, a2, v7, (char *)&dword_0 + 1);

}

double __IMAccessibilityGetAssociatedTimeInterval(void *a1, const void *a2)
{
  id AssociatedObject;
  void *v3;
  double v4;
  double v5;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  objc_msgSend(v3, "doubleValue");
  v5 = v4;

  return v5;
}

void __IMAccessibilitySetAssociatedTimeInterval(void *a1, const void *a2, double a3)
{
  id v5;
  id object;

  object = a1;
  if (a3 == 0.0)
    v5 = 0;
  else
    v5 = objc_msgSend(objc_alloc((Class)NSNumber), "initWithDouble:", a3);
  objc_setAssociatedObject(object, a2, v5, (char *)&dword_0 + 1);

}

double __IMAccessibilityGetAssociatedCGFloat(void *a1, const void *a2)
{
  id AssociatedObject;
  void *v3;
  double v4;
  double v5;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  objc_msgSend(v3, "doubleValue");
  v5 = v4;

  return v5;
}

void __IMAccessibilitySetAssociatedCGFloat(void *a1, const void *a2, double a3)
{
  void *v5;
  id object;

  object = a1;
  if (a3 == 0.0)
    v5 = 0;
  else
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", a3));
  objc_setAssociatedObject(object, a2, v5, (char *)&dword_0 + 1);

}

double __IMAccessibilityGetAssociatedCGPoint(void *a1, const void *a2)
{
  id AssociatedObject;
  void *v3;
  void *v4;
  double v5;
  double x;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "CGPointValue");
    x = v5;
  }
  else
  {
    x = CGPointZero.x;
  }

  return x;
}

void __IMAccessibilitySetAssociatedCGPoint(void *a1, const void *a2, double a3, double a4)
{
  void *v8;
  id object;

  object = a1;
  if (a3 == CGPointZero.x && a4 == CGPointZero.y)
    v8 = 0;
  else
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGPoint:](NSValue, "valueWithCGPoint:", a3, a4));
  objc_setAssociatedObject(object, a2, v8, (char *)&dword_0 + 1);

}

double __IMAccessibilityGetAssociatedCGRect(void *a1, const void *a2)
{
  id AssociatedObject;
  void *v3;
  void *v4;
  double v5;
  double x;

  AssociatedObject = objc_getAssociatedObject(a1, a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(AssociatedObject);
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "CGRectValue");
    x = v5;
  }
  else
  {
    x = CGRectZero.origin.x;
  }

  return x;
}

void __IMAccessibilitySetAssociatedCGRect(void *a1, const void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  void *v11;
  id object;
  CGRect v13;
  CGRect v14;

  object = a1;
  v14.origin.x = CGRectZero.origin.x;
  v14.origin.y = CGRectZero.origin.y;
  v14.size.width = CGRectZero.size.width;
  v14.size.height = CGRectZero.size.height;
  v13.origin.x = a3;
  v13.origin.y = a4;
  v13.size.width = a5;
  v13.size.height = a6;
  if (CGRectEqualToRect(v13, v14))
    v11 = 0;
  else
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:", a3, a4, a5, a6));
  objc_setAssociatedObject(object, a2, v11, (char *)&dword_0 + 1);

}

void sub_1257E8(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *i;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v7 = a2;
  v8 = a3;
  v9 = a4;
  objc_msgSend(a1, "imaxAddSafeCategoryDependenciesToCollection:", v8);
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v10 = v8;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(_QWORD *)v17 != v13)
          objc_enumerationMutation(v10);
        v15 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(v9, "containsObject:", v15, (_QWORD)v16) & 1) == 0
          && (objc_msgSend(v7, "containsObject:", v15) & 1) == 0)
        {
          objc_msgSend(v7, "addObject:", v15);
        }
      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v12);
  }

  objc_msgSend(v10, "removeAllObjects");
}

void sub_125F74(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Block_object_dispose((const void *)(v2 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_125FB8(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesProcessing"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v2, "containsObject:", *(_QWORD *)(a1 + 40));

}

void sub_126004(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesProcessing"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

void sub_126044(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;

  v5 = a2;
  v6 = a3;
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationTransformQueueEnd[0], *(_QWORD *)(a1 + 32));
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationTransformStart[0], *(_QWORD *)(a1 + 32));
  kdebug_trace(725353740, 0, 0, 0, 0);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "transformer"));
  v9 = *(void **)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1261C8;
  v11[3] = &unk_291AB0;
  v12 = v9;
  objc_copyWeak(&v15, (id *)(a1 + 64));
  v13 = *(id *)(a1 + 32);
  v14 = *(id *)(a1 + 56);
  objc_msgSend(v8, "transformSource:to:completion:", v12, v10, v11);

  objc_destroyWeak(&v15);
}

void sub_1261B4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1261C8(uint64_t a1, void *a2)
{
  id v3;
  os_unfair_lock_s *WeakRetained;
  os_unfair_lock_s *v5;
  _QWORD v6[4];
  os_unfair_lock_s *v7;
  id v8;

  v3 = a2;
  +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", *(_QWORD *)(a1 + 32), CFSTR("CacheTransformBefore"));
  +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", v3, CFSTR("CacheTransformAfter"));
  WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 56));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    -[os_unfair_lock_s _transformCompleteSource:to:forRequest:](WeakRetained, "_transformCompleteSource:to:forRequest:", *(_QWORD *)(a1 + 32), v3, *(_QWORD *)(a1 + 40));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1262DC;
    v6[3] = &unk_28B808;
    v7 = v5;
    v8 = *(id *)(a1 + 48);
    os_unfair_lock_lock(v5 + 2);
    sub_1262DC((uint64_t)v6);
    os_unfair_lock_unlock(v5 + 2);

  }
  kdebug_trace(725353740, 1, 0, 0, 0);

}

void sub_1262DC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imagesProcessing"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

}

void BCMergeProtoAnnotationIntoAEAnnotation(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  void *v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  unsigned int v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  unsigned int v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  float v37;
  float v38;
  float v39;
  float v40;
  double v41;
  unsigned int v42;
  float v43;
  float v44;
  float v45;
  float v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  id v57;

  v57 = a1;
  v5 = a2;
  v6 = a3;
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v57, "annotationAssetID"));
  if (!v7)
    goto LABEL_3;
  v8 = (void *)v7;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v57, "annotationModificationDate"));
  objc_msgSend(v9, "timeIntervalSinceReferenceDate");
  v11 = v10;
  objc_msgSend(v5, "modificationDate");
  v13 = v12;

  if (v11 < v13)
  {
LABEL_3:
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "creatorIdentifier"));
    objc_msgSend(v57, "setDifferentString:forKey:", v14, CFSTR("annotationCreatorIdentifier"));

    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "uuid"));
    objc_msgSend(v57, "setDifferentString:forKey:", v15, CFSTR("annotationUuid"));

    if (objc_msgSend(v5, "deleted"))
    {
      objc_msgSend(v57, "setDifferentString:forKey:", &stru_296430, CFSTR("annotationAssetID"));
      objc_msgSend(v57, "setDifferentDate:forKey:", 0, CFSTR("annotationCreationDate"));
      if ((objc_msgSend(v57, "isAnnotationDeleted") & 1) == 0)
        objc_msgSend(v57, "setAnnotationDeleted:", 1);
      if (objc_msgSend(v57, "annotationIsUnderline"))
        objc_msgSend(v57, "setAnnotationIsUnderline:", 0);
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("annotationLocation"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("annotationNote"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("annotationRepresentativeText"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("annotationSelectedText"));
      if (objc_msgSend(v57, "annotationStyle"))
        objc_msgSend(v57, "setAnnotationStyle:", 0);
      if (objc_msgSend(v57, "annotationType"))
        objc_msgSend(v57, "setAnnotationType:", 0);
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("physicalPageNumber"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("annotationVersion"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("assetVersion"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("attachments"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("chapterTitle"));
      objc_msgSend(v57, "setAnnotationSelectedTextRange:", 0x7FFFFFFFFFFFFFFFLL, 0);
      objc_msgSend(v57, "readingProgressHighWaterMark");
      if (*(float *)&v16 != 0.0)
      {
        LODWORD(v16) = 0;
        objc_msgSend(v57, "setReadingProgressHighWaterMark:", v16);
      }
      if (objc_msgSend(v57, "spineIndexUpdated"))
        objc_msgSend(v57, "setSpineIndexUpdated:", 0);
      objc_msgSend(v57, "readingProgress");
      if (*(float *)&v17 != 0.0)
      {
        LODWORD(v17) = 0;
        objc_msgSend(v57, "setReadingProgress:", v17);
      }
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("futureProofing11"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("futureProofing12"));
      objc_msgSend(v57, "setDifferentNumber:forKey:", 0, CFSTR("plAbsolutePhysicalLocation"));
      objc_msgSend(v57, "setDifferentNumber:forKey:", 0, CFSTR("plLocationRangeEnd"));
      objc_msgSend(v57, "setDifferentNumber:forKey:", 0, CFSTR("plLocationRangeStart"));
      objc_msgSend(v57, "setDifferentString:forKey:", 0, CFSTR("plStorageUUID"));
      objc_msgSend(v57, "setDifferentObject:forKey:", 0, CFSTR("plUserData"));
      objc_msgSend(v57, "setDifferentDate:forKey:", 0, CFSTR("annotationModificationDate"));
      objc_msgSend(v57, "setDifferentDate:forKey:", 0, CFSTR("userModificationDate"));
      objc_msgSend(v57, "setDifferentDate:forKey:", 0, CFSTR("locationModificationDate"));
    }
    else
    {
      objc_msgSend(v57, "setDifferentString:forKey:", v6, CFSTR("annotationAssetID"));
      objc_msgSend(v5, "creationDate");
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:"));
      objc_msgSend(v57, "setDifferentDate:forKey:", v18, CFSTR("annotationCreationDate"));

      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "creatorIdentifier"));
      objc_msgSend(v57, "setDifferentString:forKey:", v19, CFSTR("annotationCreatorIdentifier"));

      LODWORD(v19) = objc_msgSend(v57, "isAnnotationDeleted");
      if ((_DWORD)v19 != objc_msgSend(v5, "deleted"))
        objc_msgSend(v57, "setAnnotationDeleted:", objc_msgSend(v5, "deleted"));
      v20 = objc_msgSend(v57, "annotationIsUnderline");
      if (v20 != objc_msgSend(v5, "isUnderline"))
        objc_msgSend(v57, "setAnnotationIsUnderline:", objc_msgSend(v5, "isUnderline"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "locationCFIString"));
      objc_msgSend(v57, "setDifferentString:forKey:", v21, CFSTR("annotationLocation"));

      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "note"));
      objc_msgSend(v57, "setDifferentString:forKey:", v22, CFSTR("annotationNote"));

      v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "representativeText"));
      objc_msgSend(v57, "setDifferentString:forKey:", v23, CFSTR("annotationRepresentativeText"));

      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "selectedText"));
      objc_msgSend(v57, "setDifferentString:forKey:", v24, CFSTR("annotationSelectedText"));

      LODWORD(v24) = objc_msgSend(v57, "annotationStyle");
      if ((_DWORD)v24 != objc_msgSend(v5, "style"))
        objc_msgSend(v57, "setAnnotationStyle:", objc_msgSend(v5, "style"));
      v25 = objc_msgSend(v57, "annotationType");
      if (v25 != objc_msgSend(v5, "type"))
        objc_msgSend(v57, "setAnnotationType:", objc_msgSend(v5, "type"));
      v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "uuid"));
      objc_msgSend(v57, "setDifferentString:forKey:", v26, CFSTR("annotationUuid"));

      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "physicalPageNumber"));
      objc_msgSend(v57, "setDifferentString:forKey:", v27, CFSTR("physicalPageNumber"));

      v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "annotationVersion"));
      objc_msgSend(v57, "setDifferentString:forKey:", v28, CFSTR("annotationVersion"));

      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "assetVersion"));
      objc_msgSend(v57, "setDifferentString:forKey:", v29, CFSTR("assetVersion"));

      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "attachments"));
      objc_msgSend(v57, "setDifferentString:forKey:", v30, CFSTR("attachments"));

      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "chapterTitle"));
      objc_msgSend(v57, "setDifferentString:forKey:", v31, CFSTR("chapterTitle"));

      if (objc_msgSend(v5, "hasSelectedTextRange"))
      {
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "selectedTextRange"));
        v33 = (uint64_t)objc_msgSend(v32, "location");
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "selectedTextRange"));
        v35 = objc_msgSend(v34, "length");

      }
      else
      {
        v35 = 0;
        v33 = 0x7FFFFFFFFFFFFFFFLL;
      }
      if (objc_msgSend(v57, "annotationSelectedTextRange") != (id)v33 || v36 != v35)
        objc_msgSend(v57, "setAnnotationSelectedTextRange:", v33, v35);
      objc_msgSend(v57, "readingProgressHighWaterMark");
      v38 = v37;
      objc_msgSend(v5, "readingProgressHighWaterMark");
      if (v38 != v39 && vabdd_f64(v38, v39) >= fabs(v39 * 0.000000999999997))
      {
        objc_msgSend(v5, "readingProgressHighWaterMark");
        *(float *)&v41 = BCFloatClampedToUnitIntervalOrNegativeOne(v40);
        objc_msgSend(v57, "setReadingProgressHighWaterMark:", v41);
      }
      v42 = objc_msgSend(v57, "spineIndexUpdated");
      if (v42 != objc_msgSend(v5, "spineIndexUpdated"))
        objc_msgSend(v57, "setSpineIndexUpdated:", objc_msgSend(v5, "spineIndexUpdated"));
      objc_msgSend(v57, "readingProgress");
      v44 = v43;
      objc_msgSend(v5, "readingProgress");
      if (v44 != v45 && vabdd_f64(v44, v45) >= fabs(v45 * 0.000000999999997))
      {
        objc_msgSend(v5, "readingProgress");
        BCFloatAssertUnitIntervalClamp(v46);
        objc_msgSend(v57, "setReadingProgress:");
      }
      v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "futureProofing11"));
      objc_msgSend(v57, "setDifferentString:forKey:", v47, CFSTR("futureProofing11"));

      v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "futureProofing12"));
      objc_msgSend(v57, "setDifferentString:forKey:", v48, CFSTR("futureProofing12"));

      v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", objc_msgSend(v5, "plAbsolutePhysicalLocation")));
      objc_msgSend(v57, "setDifferentNumber:forKey:", v49, CFSTR("plAbsolutePhysicalLocation"));

      v50 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", objc_msgSend(v5, "plLocationRangeEnd")));
      objc_msgSend(v57, "setDifferentNumber:forKey:", v50, CFSTR("plLocationRangeEnd"));

      v51 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", objc_msgSend(v5, "plLocationRangeStart")));
      objc_msgSend(v57, "setDifferentNumber:forKey:", v51, CFSTR("plLocationRangeStart"));

      v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "plLocationStorageUUID"));
      objc_msgSend(v57, "setDifferentString:forKey:", v52, CFSTR("plStorageUUID"));

      v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "plUserData"));
      objc_msgSend(v57, "setDifferentObject:forKey:", v53, CFSTR("plUserData"));

    }
    objc_msgSend(v5, "modificationDate");
    v54 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:"));
    objc_msgSend(v57, "setDifferentDate:forKey:", v54, CFSTR("annotationModificationDate"));

    if (objc_msgSend(v5, "hasUserModificationDate"))
    {
      objc_msgSend(v5, "userModificationDate");
      v55 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:"));
      objc_msgSend(v57, "setDifferentDate:forKey:", v55, CFSTR("userModificationDate"));

    }
    if (objc_msgSend(v5, "hasLocationModificationDate"))
    {
      objc_msgSend(v5, "locationModificationDate");
      v56 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:"));
      objc_msgSend(v57, "setDifferentDate:forKey:", v56, CFSTR("locationModificationDate"));

    }
  }

}

void sub_12740C(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotationProvider sharedInstance](AEAnnotationProvider, "sharedInstance"));
  v2 = objc_msgSend(objc_alloc((Class)objc_opt_class(*(_QWORD *)(a1 + 32))), "initWithAnnotationProvider:", v4);
  v3 = (void *)qword_311340;
  qword_311340 = (uint64_t)v2;

}

void sub_127948(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  id v34;
  void *v35;
  unsigned int v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  NSMutableDictionary *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  NSMutableDictionary *v48;
  uint64_t v49;
  id v50;
  NSMutableDictionary *v51;
  void *v52;
  NSMutableDictionary *v53;
  uint64_t v54;
  id obj;
  _QWORD v56[4];
  id v57;
  id v58;
  NSMutableDictionary *v59;
  uint64_t v60;
  id v61;
  char v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint8_t buf[4];
  void *v76;
  __int16 v77;
  unsigned int v78;
  _BYTE v79[128];
  _BYTE v80[128];
  uint8_t v81[4];
  uint64_t v82;
  _BYTE v83[128];

  v47 = a2;
  v45 = a4;
  v53 = objc_opt_new(NSMutableDictionary);
  v48 = objc_opt_new(NSMutableDictionary);
  v71 = 0u;
  v72 = 0u;
  v73 = 0u;
  v74 = 0u;
  v46 = a1;
  obj = *(id *)(a1 + 32);
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v71, v83, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v72;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v72 != v8)
          objc_enumerationMutation(obj);
        v10 = *(void **)(*((_QWORD *)&v71 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_opt_new(BCAnnotationsProtoBook);
        v12 = objc_alloc((Class)PBDataReader);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "bookAnnotations"));
        v14 = objc_msgSend(v12, "initWithData:", v13);

        if (BCAnnotationsProtoBookReadFrom(v11, v14))
        {
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
          -[NSMutableDictionary setObject:forKeyedSubscript:](v53, "setObject:forKeyedSubscript:", v11, v15);

          v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
          v17 = objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v48, "objectForKeyedSubscript:", v16));

          if (!v17)
          {
            v17 = objc_claimAutoreleasedReturnValue(+[NSMutableSet set](NSMutableSet, "set"));
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "assetID"));
            -[NSMutableDictionary setObject:forKeyedSubscript:](v48, "setObject:forKeyedSubscript:", v17, v18);

          }
          -[NSObject addObject:](v17, "addObject:", v10);
        }
        else
        {
          v19 = BCCloudKitLog();
          v17 = objc_claimAutoreleasedReturnValue(v19);
          if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
            sub_1B7FEC(v81, v10, &v82, v17);
        }

      }
      v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v71, v83, 16);
    }
    while (v7);
  }

  objc_msgSend(v47, "setCloudVersion:", objc_msgSend(*(id *)(v46 + 40), "cloudVersion"));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v46 + 40), "historyToken"));
  objc_msgSend(v47, "setHistoryToken:", v20);

  objc_msgSend(v47, "setHistoryTokenOffset:", objc_msgSend(*(id *)(v46 + 40), "historyTokenOffset"));
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v67 = 0u;
  v68 = 0u;
  v69 = 0u;
  v70 = 0u;
  v51 = v53;
  v50 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v51, "countByEnumeratingWithState:objects:count:", &v67, v80, 16);
  if (v50)
  {
    v49 = *(_QWORD *)v68;
    do
    {
      v23 = 0;
      do
      {
        if (*(_QWORD *)v68 != v49)
          objc_enumerationMutation(v51);
        v54 = v23;
        v24 = *(_QWORD *)(*((_QWORD *)&v67 + 1) + 8 * v23);
        v25 = (void *)objc_claimAutoreleasedReturnValue(-[NSMutableDictionary objectForKeyedSubscript:](v51, "objectForKeyedSubscript:", v24));
        v63 = 0u;
        v64 = 0u;
        v65 = 0u;
        v66 = 0u;
        v52 = v25;
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "annotations"));
        v27 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v63, v79, 16);
        if (v27)
        {
          v28 = v27;
          v29 = *(_QWORD *)v64;
          do
          {
            v30 = 0;
            do
            {
              if (*(_QWORD *)v64 != v29)
                objc_enumerationMutation(v26);
              v31 = *(void **)(*((_QWORD *)&v63 + 1) + 8 * (_QWORD)v30);
              if ((objc_msgSend(v31, "hasLocationCFIString") & 1) != 0
                || (objc_msgSend(v31, "hasPlUserData") & 1) != 0
                || objc_msgSend(v31, "deleted"))
              {
                v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "uuid"));
                objc_msgSend(v21, "setObject:forKeyedSubscript:", v31, v32);

                v33 = objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "uuid"));
                objc_msgSend(v22, "setObject:forKeyedSubscript:", v24, v33);
              }
              else
              {
                v34 = BCCloudKitLog();
                v33 = objc_claimAutoreleasedReturnValue(v34);
                if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
                {
                  v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "uuid"));
                  v36 = objc_msgSend(v31, "type");
                  *(_DWORD *)buf = 138412546;
                  v76 = v35;
                  v77 = 1024;
                  v78 = v36;
                  _os_log_error_impl(&dword_0, v33, OS_LOG_TYPE_ERROR, "Not merging protoAnnotation %@ of type %d with no CFI location, no user data, and not deleted.", buf, 0x12u);

                }
              }

              v30 = (char *)v30 + 1;
            }
            while (v28 != v30);
            v37 = objc_msgSend(v26, "countByEnumeratingWithState:objects:count:", &v63, v79, 16);
            v28 = v37;
          }
          while (v37);
        }

        v23 = v54 + 1;
      }
      while ((id)(v54 + 1) != v50);
      v50 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v51, "countByEnumeratingWithState:objects:count:", &v67, v80, 16);
    }
    while (v50);
  }

  v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v46 + 48), "annotationProvider"));
  v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "allKeys"));
  v56[0] = _NSConcreteStackBlock;
  v56[1] = 3221225472;
  v56[2] = sub_127F44;
  v56[3] = &unk_291B00;
  v57 = v21;
  v58 = v22;
  v40 = *(_QWORD *)(v46 + 48);
  v59 = v48;
  v60 = v40;
  v61 = v45;
  v62 = *(_BYTE *)(v46 + 56);
  v41 = v45;
  v42 = v48;
  v43 = v22;
  v44 = v21;
  objc_msgSend(v38, "modifyAnnotationsWithUUIDs:type:performBlock:", v39, 2, v56);

}

void sub_127F44(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *j;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  _QWORD block[5];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[128];
  _BYTE v38[128];

  v6 = a2;
  v7 = a4;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v34;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v34 != v10)
          objc_enumerationMutation(v6);
        v12 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * (_QWORD)i);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "annotationUuid"));
        v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v13));
        v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", v13));
        BCMergeProtoAnnotationIntoAEAnnotation(v12, v14, v15);

      }
      v9 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v33, v38, 16);
    }
    while (v9);
  }
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v16 = *(id *)(a1 + 48);
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v30;
    do
    {
      for (j = 0; j != v18; j = (char *)j + 1)
      {
        if (*(_QWORD *)v30 != v19)
          objc_enumerationMutation(v16);
        v21 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * (_QWORD)j);
        v22 = *(void **)(a1 + 56);
        v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", v21));
        objc_msgSend(v22, "_acknowledgeMergingCloudAnnotations:forAssetID:", v23, v21);

      }
      v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v29, v37, 16);
    }
    while (v18);
  }

  v24 = objc_retainBlock(v7);
  v25 = v24;
  if (v24)
    (*((void (**)(id))v24 + 2))(v24);

  v26 = objc_retainBlock(*(id *)(a1 + 64));
  v27 = v26;
  if (v26)
    (*((void (**)(id))v26 + 2))(v26);

  if (*(_BYTE *)(a1 + 72))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1281E0;
    block[3] = &unk_28B960;
    block[4] = *(_QWORD *)(a1 + 56);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }

}

id sub_1281E0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_BCCloudAssetAnnotationManagerChanged:", 0);
}

void sub_128594(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  NSPredicate *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSPredicate *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  void *i;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  id v24;
  BCAnnotationSyncManagerGlobalAnnotationUpdate *v25;
  void *v26;
  unsigned int v27;
  id v28;
  NSObject *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  float v36;
  float v37;
  double v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _QWORD v56[5];
  id v57;
  id v58;
  uint64_t v59;
  uint8_t buf[4];
  void *v61;
  __int16 v62;
  void *v63;
  _BYTE v64[128];

  v3 = a2;
  v51 = v3;
  if (v3)
    v4 = v3;
  else
    v4 = (id)objc_claimAutoreleasedReturnValue(+[NSSet set](NSSet, "set"));
  v5 = v4;
  v6 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  v7 = +[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("self isKindOfClass: %@ AND annotationType != %d"), objc_opt_class(AEAnnotation), 3);
  v8 = (void *)objc_claimAutoreleasedReturnValue(v7);
  objc_msgSend(v6, "filterUsingPredicate:", v8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "valueForKey:", CFSTR("annotationAssetID")));
  if (objc_msgSend(v9, "count"))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "annotationProvider"));
    v56[0] = _NSConcreteStackBlock;
    v56[1] = 3221225472;
    v56[2] = sub_128B70;
    v56[3] = &unk_291B50;
    v11 = *(_QWORD *)(a1 + 40);
    v59 = *(_QWORD *)(a1 + 48);
    v56[4] = v11;
    v57 = v9;
    v58 = v5;
    objc_msgSend(v10, "performBlockOnUserSideQueue:", v56);

  }
  v50 = a1;
  v12 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  v13 = +[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("self isKindOfClass: %@ AND annotationType == %d AND annotationDeleted == 0"), objc_opt_class(AEAnnotation), 3);
  v14 = (void *)objc_claimAutoreleasedReturnValue(v13);
  objc_msgSend(v12, "filterUsingPredicate:", v14);

  v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  v16 = v12;
  v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v52, v64, 16);
  if (v17)
  {
    v18 = v17;
    v19 = *(_QWORD *)v53;
    do
    {
      for (i = 0; i != v18; i = (char *)i + 1)
      {
        if (*(_QWORD *)v53 != v19)
          objc_enumerationMutation(v16);
        v21 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * (_QWORD)i);
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "annotationAssetID"));
        if ((objc_msgSend(v5, "containsObject:", v22) & 1) != 0)
        {

LABEL_14:
          v24 = BCCloudKitLog();
          v25 = (BCAnnotationSyncManagerGlobalAnnotationUpdate *)objc_claimAutoreleasedReturnValue(v24);
          if (os_log_type_enabled(&v25->super, OS_LOG_TYPE_INFO))
          {
            v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "annotationAssetID"));
            v27 = objc_msgSend(v21, "avoidSync");
            *(_DWORD *)buf = 138412546;
            v61 = v26;
            v62 = 1024;
            LODWORD(v63) = v27;
            _os_log_impl(&dword_0, &v25->super, OS_LOG_TYPE_INFO, "Skipping synchronizaiton of #globalAnnotation %@: avoidSync:%d", buf, 0x12u);

          }
          goto LABEL_19;
        }
        v23 = objc_msgSend(v21, "avoidSync");

        if ((v23 & 1) != 0)
          goto LABEL_14;
        v28 = BCCloudKitLog();
        v29 = objc_claimAutoreleasedReturnValue(v28);
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "annotationLocation"));
          v31 = v16;
          v32 = v15;
          v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "annotationAssetID"));
          *(_DWORD *)buf = 138412546;
          v61 = v30;
          v62 = 2112;
          v63 = v33;
          _os_log_impl(&dword_0, v29, OS_LOG_TYPE_DEFAULT, "Synchronizing #globalAnnotation location:%@ for assetID: %@", buf, 0x16u);

          v15 = v32;
          v16 = v31;

        }
        v25 = objc_opt_new(BCAnnotationSyncManagerGlobalAnnotationUpdate);
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "annotationAssetID"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setAssetID:](v25, "setAssetID:", v34);

        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "annotationLocation"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionCFIString:](v25, "setReadingPositionCFIString:", v35);

        objc_msgSend(v21, "readingProgress");
        BCFloatAssertUnitIntervalClamp(v36);
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingProgress:](v25, "setReadingProgress:");
        objc_msgSend(v21, "readingProgressHighWaterMark");
        *(float *)&v38 = BCFloatClampedToUnitIntervalOrNegativeOne(v37);
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingProgressHighWaterMark:](v25, "setReadingProgressHighWaterMark:", v38);
        v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "annotationLocation"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionCFIString:](v25, "setReadingPositionCFIString:", v39);

        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "physicalPageNumber"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionPhysicalPageNumber:](v25, "setReadingPositionPhysicalPageNumber:", v40);

        v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "annotationVersion"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionAnnotationVersion:](v25, "setReadingPositionAnnotationVersion:", v41);

        v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "assetVersion"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionAssetVersion:](v25, "setReadingPositionAssetVersion:", v42);

        v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "plUserData"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionUserData:](v25, "setReadingPositionUserData:", v43);

        v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "plLocationRangeStart"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionLocationRangeStart:](v25, "setReadingPositionLocationRangeStart:", objc_msgSend(v44, "intValue"));

        v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "plLocationRangeEnd"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionLocationRangeEnd:](v25, "setReadingPositionLocationRangeEnd:", objc_msgSend(v45, "intValue"));

        v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "plAbsolutePhysicalLocation"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionAbsolutePhysicalLocation:](v25, "setReadingPositionAbsolutePhysicalLocation:", objc_msgSend(v46, "intValue"));

        v47 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "plStorageUUID"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionStorageUUID:](v25, "setReadingPositionStorageUUID:", v47);

        v48 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "locationModificationDate"));
        -[BCAnnotationSyncManagerGlobalAnnotationUpdate setReadingPositionUserUpdatedDate:](v25, "setReadingPositionUserUpdatedDate:", v48);

        objc_msgSend(v15, "addObject:", v25);
LABEL_19:

      }
      v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v52, v64, 16);
    }
    while (v18);
  }

  if (objc_msgSend(v15, "count"))
  {
    v49 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v50 + 40), "delegate"));
    objc_msgSend(v49, "updateAssetDetailsWithGlobalAnnotations:completion:", v15, 0);

  }
}

void sub_128B70(id *a1, uint64_t a2)
{
  void *v3;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1[7], "_cloudSyncVersionsForDataType:inContext:", CFSTR("BCAssetAnnotations"), a2));
  objc_msgSend(v3, "setLocalVersion:", (char *)objc_msgSend(v3, "localVersion") + 1);
  v4 = objc_msgSend(v3, "localVersion");
  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(a1[4], "assetIDsOfAssetsToSyncQueue"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_128C54;
  v8[3] = &unk_28F918;
  v9 = a1[5];
  v6 = a1[6];
  v7 = a1[4];
  v10 = v6;
  v11 = v7;
  v12 = v4;
  dispatch_async(v5, v8);

}

void sub_128C54(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  objc_msgSend(v3, "minusSet:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "assetIDsOfAssetsToSync"));
  objc_msgSend(v2, "unionSet:", v3);

  objc_msgSend(*(id *)(a1 + 48), "_syncAssetsWithCompletionSyncVersion:", *(_QWORD *)(a1 + 56));
}

void sub_128CB4(uint64_t a1, void *a2)
{
  id v3;
  NSMutableSet *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *i;
  uint64_t v10;
  void *v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];

  v3 = a2;
  v4 = objc_opt_new(NSMutableSet);
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v5);
        v10 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * (_QWORD)i);
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", v10, (_QWORD)v13));
        v12 = objc_msgSend(v11, "BOOLValue");

        if (v12)
          -[NSMutableSet addObject:](v4, "addObject:", v10);
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v7);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_128E88(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[5];

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_cloudSyncVersionsForDataType:inContext:", CFSTR("BCAssetAnnotations"), a2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BCCloudAssetManager sharedManager](BCCloudAssetManager, "sharedManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "assetAnnotationManager"));

  v6 = objc_msgSend(v3, "mutableCopy");
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_128F50;
  v7[3] = &unk_291BC8;
  v7[4] = *(_QWORD *)(a1 + 32);
  objc_msgSend(v5, "getAnnotationChangesSince:completion:", v6, v7);

}

id sub_128F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _objc_msgSend(*(id *)(a1 + 32), "assetAnnotationsUpdatedWithCurrentCloudSyncVersions:updated:removed:fetchAgain:", a4, a2, a3);
}

void sub_1292F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_129338(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD v13[5];
  id v14[3];

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[BCCloudAssetManager sharedManager](BCCloudAssetManager, "sharedManager"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "assetAnnotationManager"));

    v10 = *(_QWORD *)(a1 + 32);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_129454;
    v13[3] = &unk_291C60;
    objc_copyWeak(v14, (id *)(a1 + 40));
    v11 = *(void **)(a1 + 48);
    v12 = *(void **)(a1 + 56);
    v13[4] = *(_QWORD *)(a1 + 32);
    v14[1] = v11;
    v14[2] = v12;
    objc_msgSend(v9, "assetWithID:updatedAnnotations:completion:", v10, v5, v13);
    objc_destroyWeak(v14);

  }
}

void sub_129440(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_129454(uint64_t a1, int a2)
{
  id WeakRetained;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[8];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained && a2)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "assetIDsOfAssetsToSyncQueue"));
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1294F4;
    v9[3] = &unk_291C38;
    v7 = *(_QWORD *)(a1 + 32);
    v9[4] = v5;
    v9[5] = v7;
    v8 = *(_QWORD *)(a1 + 56);
    v9[6] = *(_QWORD *)(a1 + 48);
    v9[7] = v8;
    dispatch_async(v6, v9);

  }
}

void sub_1294F4(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD v5[6];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetIDsOfAssetsToSync"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 40));

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationProvider"));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_129584;
  v5[3] = &unk_291C10;
  v4 = *(_QWORD *)(a1 + 56);
  v5[4] = *(_QWORD *)(a1 + 48);
  v5[5] = v4;
  objc_msgSend(v3, "performBlockOnUserSideQueue:", v5);

}

void sub_129584(uint64_t a1, uint64_t a2)
{
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_cloudSyncVersionsForDataType:inContext:", CFSTR("BCAssetDetail"), a2));
  objc_msgSend(v3, "setSyncVersion:", *(_QWORD *)(a1 + 40));

}

void sub_129D54(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;
  void *v6;
  dispatch_time_t v7;
  NSObject *v8;
  id v9;
  id v10;
  void *i;
  void *v12;
  void *v13;
  void *v14;
  unsigned __int16 v15;
  void *v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  id *v26;
  id v27;
  uint64_t v28;
  _QWORD v29[4];
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  _QWORD *v37;
  unsigned __int16 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _QWORD block[4];
  id v44;
  _QWORD *v45;
  _QWORD *v46;
  id v47;
  id location;
  _QWORD v49[3];
  char v50;
  _QWORD v51[3];
  char v52;
  uint8_t buf[4];
  void *v54;
  __int16 v55;
  uint64_t v56;
  _BYTE v57[128];

  v27 = a2;
  if ((unint64_t)objc_msgSend(v27, "count") > 1)
  {
    v51[0] = 0;
    v51[1] = v51;
    v51[2] = 0x2020000000;
    v52 = 0;
    v49[0] = 0;
    v49[1] = v49;
    v49[2] = 0x2020000000;
    v50 = 0;
    objc_initWeak(&location, *(id *)(a1 + 32));
    v7 = dispatch_time(0, 20000000000);
    v8 = *(NSObject **)(a1 + 40);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_12A20C;
    block[3] = &unk_291CB0;
    v45 = v51;
    v46 = v49;
    v26 = &v47;
    objc_copyWeak(&v47, &location);
    v44 = *(id *)(a1 + 72);
    dispatch_after(v7, v8, block);
    v41 = 0u;
    v42 = 0u;
    v39 = 0u;
    v40 = 0u;
    v9 = v27;
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v39, v57, 16);
    if (v10)
    {
      v28 = *(_QWORD *)v40;
      do
      {
        for (i = 0; i != v10; i = (char *)i + 1)
        {
          if (*(_QWORD *)v40 != v28)
            objc_enumerationMutation(v9);
          v12 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * (_QWORD)i);
          v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("assetID"), v26));
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", CFSTR("options")));
          v15 = (unsigned __int16)objc_msgSend(v14, "integerValue");

          objc_msgSend(*(id *)(a1 + 48), "imageSize");
          v16 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageWithIdentifier:size:processingOptions:](BICDescribedImage, "describedImageWithIdentifier:size:processingOptions:", v13, v15 & 0x400));
          objc_msgSend(v16, "setPriority:", objc_msgSend(*(id *)(a1 + 48), "priority"));
          v17 = BCImageCacheLog();
          v18 = objc_claimAutoreleasedReturnValue(v17);
          if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
          {
            v19 = *(_QWORD *)(a1 + 32);
            *(_DWORD *)buf = 138412546;
            v54 = v16;
            v55 = 2112;
            v56 = v19;
            _os_log_impl(&dword_0, v18, OS_LOG_TYPE_INFO, "BCStackRenderer: Fetching: %@ to build stack %@", buf, 0x16u);
          }

          v20 = objc_msgSend(*(id *)(a1 + 32), "copy");
          objc_msgSend(v20, "setRequestOptions:", objc_msgSend(v20, "requestOptions") | 2);
          objc_msgSend(v20, "setPriority:", 5);
          objc_msgSend(v20, "setStackRequest:", *(_QWORD *)(a1 + 32));
          v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "imageRepository"));
          v29[0] = _NSConcreteStackBlock;
          v29[1] = 3221225472;
          v29[2] = sub_12A2A8;
          v29[3] = &unk_291D00;
          v22 = *(id *)(a1 + 32);
          v23 = *(_QWORD *)(a1 + 56);
          v24 = *(void **)(a1 + 64);
          v30 = v22;
          v31 = v23;
          v38 = v15;
          v32 = v24;
          v25 = v9;
          v33 = v25;
          v37 = v51;
          v34 = *(id *)(a1 + 40);
          v35 = *(id *)(a1 + 48);
          v36 = *(id *)(a1 + 72);
          objc_msgSend(v21, "fetchCGImageFor:forRequest:completion:", v16, v20, v29);

        }
        v10 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v39, v57, 16);
      }
      while (v10);
    }

    objc_destroyWeak(v26);
    objc_destroyWeak(&location);
    _Block_object_dispose(v49, 8);
    _Block_object_dispose(v51, 8);
  }
  else
  {
    v3 = BCImageCacheLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1B80D4(v27, a1, v4);

    v5 = objc_retainBlock(*(id *)(a1 + 72));
    v6 = v5;
    if (v5)
      (*((void (**)(id, _QWORD))v5 + 2))(v5, 0);

  }
}

void sub_12A1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a46);
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a51, 8);
  _Unwind_Resume(a1);
}

void sub_12A20C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  void *v5;

  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24)
    && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
  {
    v2 = BCImageCacheLog();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_1B8168(a1, v3);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
    v4 = objc_retainBlock(*(id *)(a1 + 32));
    v5 = v4;
    if (v4)
      (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);

  }
}

void sub_12A2A8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  id v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  _QWORD v15[5];
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD v22[2];
  void (*v23)(uint64_t);
  void *v24;
  id v25;
  id v26;
  id v27;
  _BYTE *v28;
  __int16 v29;
  uint8_t v30[4];
  uint64_t v31;
  _BYTE buf[24];
  char v33;

  v3 = a2;
  v4 = BCImageCacheLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    *(_QWORD *)&buf[4] = v3;
    *(_WORD *)&buf[12] = 2112;
    *(_QWORD *)&buf[14] = v6;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_INFO, "BCStackRenderer: Fetched: %@ to build stack %@", buf, 0x16u);
  }

  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x2020000000;
  v33 = 0;
  v7 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 40) + 8);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v23 = sub_12A5B0;
  v24 = &unk_291CD8;
  v8 = v3;
  v25 = v8;
  v29 = *(_WORD *)(a1 + 96);
  v26 = *(id *)(a1 + 48);
  v28 = buf;
  v27 = *(id *)(a1 + 56);
  v9 = v22;
  os_unfair_lock_lock(v7);
  v23((uint64_t)v9);
  os_unfair_lock_unlock(v7);

  if (*(_BYTE *)(*(_QWORD *)&buf[8] + 24))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    if (!*(_BYTE *)(v10 + 24))
    {
      *(_BYTE *)(v10 + 24) = 1;
      v11 = BCImageCacheLog();
      v12 = objc_claimAutoreleasedReturnValue(v11);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
      {
        v13 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)v30 = 138412290;
        v31 = v13;
        _os_log_impl(&dword_0, v12, OS_LOG_TYPE_INFO, "BCStackRenderer: Building stack: %@", v30, 0xCu);
      }

      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_12A620;
      v15[3] = &unk_28C7D0;
      v15[4] = *(_QWORD *)(a1 + 40);
      v14 = *(NSObject **)(a1 + 64);
      v16 = *(id *)(a1 + 56);
      v17 = *(id *)(a1 + 48);
      v18 = *(id *)(a1 + 72);
      v19 = *(id *)(a1 + 32);
      v20 = *(id *)(a1 + 64);
      v21 = *(id *)(a1 + 80);
      dispatch_async(v14, v15);

    }
  }

  _Block_object_dispose(buf, 8);
}

void sub_12A58C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_12A5B0(uint64_t a1)
{
  id v2;
  id v3;

  v3 = objc_msgSend(*(id *)(a1 + 32), "copy");
  objc_msgSend(v3, "setProcessingOptions:", *(unsigned __int16 *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);
  v2 = objc_msgSend(*(id *)(a1 + 40), "count");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v2 == objc_msgSend(*(id *)(a1 + 48), "count");

}

void sub_12A620(uint64_t a1)
{
  void *v2;
  void *v3;
  os_unfair_lock_s *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v3 = *(void **)(a1 + 40);
  v4 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 32) + 8);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_12A6FC;
  v6[3] = &unk_28C5F0;
  v7 = v3;
  v8 = *(id *)(a1 + 48);
  v9 = v2;
  v5 = v2;
  os_unfair_lock_lock(v4);
  sub_12A6FC((id *)v6);
  os_unfair_lock_unlock(v4);
  objc_msgSend(*(id *)(a1 + 32), "_renderStackFromSource:images:forRequest:onQueue:withCompletion:", *(_QWORD *)(a1 + 56), v5, *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80));

}

void sub_12A6FC(id *a1)
{
  void *i;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *j;
  void *v9;
  void *v10;
  unsigned int v11;
  id obj;
  uint64_t v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  _BYTE v24[128];

  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  obj = a1[4];
  v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
  if (v14)
  {
    v13 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v14; i = (char *)i + 1)
      {
        if (*(_QWORD *)v20 != v13)
          objc_enumerationMutation(obj);
        v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)i), "objectForKeyedSubscript:", CFSTR("assetID")));
        v15 = 0u;
        v16 = 0u;
        v17 = 0u;
        v18 = 0u;
        v4 = a1[5];
        v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
        if (v5)
        {
          v6 = v5;
          v7 = *(_QWORD *)v16;
          while (2)
          {
            for (j = 0; j != v6; j = (char *)j + 1)
            {
              if (*(_QWORD *)v16 != v7)
                objc_enumerationMutation(v4);
              v9 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)j);
              v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "identifier"));
              v11 = objc_msgSend(v10, "isEqualToString:", v3);

              if (v11)
              {
                +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", v9, CFSTR("StackRendererCover"));
                objc_msgSend(a1[6], "addObject:", v9);
                goto LABEL_16;
              }
            }
            v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
            if (v6)
              continue;
            break;
          }
        }
LABEL_16:

      }
      v14 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
    }
    while (v14);
  }

}

void sub_12ACD4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  id v8;
  id v9;
  _QWORD block[4];
  id v11;
  id v12;
  id v13;
  id v14;
  int v15;

  v5 = a2;
  v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_12ADA8;
  block[3] = &unk_291D50;
  v7 = *(NSObject **)(a1 + 32);
  v11 = *(id *)(a1 + 40);
  v12 = v5;
  v13 = v6;
  v15 = *(_DWORD *)(a1 + 56);
  v14 = *(id *)(a1 + 48);
  v8 = v6;
  v9 = v5;
  dispatch_async(v7, block);

}

void sub_12ADA8(uint64_t a1)
{
  id v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;

  v14 = objc_msgSend(*(id *)(a1 + 32), "copy");
  v2 = objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 40)), "CGImage");
  objc_msgSend(*(id *)(a1 + 48), "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  if (v2)
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[BICImage imageWithCGImage:](BICImage, "imageWithCGImage:", v2));
    objc_msgSend(v14, "setImage:", v11);

  }
  else
  {
    objc_msgSend(v14, "setImage:", 0);
  }
  objc_msgSend(v14, "setNonShadowArea:", v4, v6, v8, v10);
  objc_msgSend(v14, "setStackOutline:", objc_msgSend(objc_retainAutorelease(*(id *)(a1 + 48)), "CGPath"));
  objc_msgSend(v14, "setProcessingOptions:", *(unsigned __int16 *)(a1 + 64) | objc_msgSend(*(id *)(a1 + 32), "processingOptions"));
  objc_msgSend(v14, "setQuality:", +[BICDescribedImage transformedQualityFrom:](BICDescribedImage, "transformedQualityFrom:", *(unsigned __int16 *)(a1 + 66)));
  +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", v14, CFSTR("StackRendererCoverStack"));
  v12 = objc_retainBlock(*(id *)(a1 + 56));
  v13 = v12;
  if (v12)
    (*((void (**)(id, id))v12 + 2))(v12, v14);

}

id sub_12B10C(uint64_t a1, id a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addObject:", objc_msgSend(objc_retainAutorelease(a2), "CGImage"));
}

void sub_12B13C(uint64_t a1, void *a2, void *a3, void *a4, double a5, double a6, double a7, double a8)
{
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  os_unfair_lock_s *v24;
  os_unfair_lock_s *v25;
  id v26;
  _QWORD v27[5];
  id v28;

  v15 = a2;
  v16 = a3;
  v17 = v16;
  if (v16)
  {
    v18 = objc_msgSend(v16, "CGImage");
    objc_msgSend(v17, "contentsScale");
    v19 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithCGImage:scale:orientation:](UIImage, "imageWithCGImage:scale:orientation:", v18, 0));
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "imageWithAlignmentRectInsets:", a5, a6, a7, a8));

    if (a4)
      a4 = (void *)objc_claimAutoreleasedReturnValue(+[UIBezierPath bezierPathWithCGPath:](UIBezierPath, "bezierPathWithCGPath:", a4));
    v21 = objc_retainBlock(*(id *)(a1 + 40));
    v22 = v21;
    if (v21)
      (*((void (**)(id, void *, void *))v21 + 2))(v21, v20, a4);

  }
  else
  {
    v23 = objc_retainBlock(*(id *)(a1 + 40));
    v20 = v23;
    if (v23)
      (*((void (**)(id, _QWORD, _QWORD))v23 + 2))(v23, 0, 0);
  }

  v24 = *(os_unfair_lock_s **)(a1 + 32);
  v25 = v24 + 2;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_12B2E0;
  v27[3] = &unk_28B808;
  v27[4] = v24;
  v28 = v15;
  v26 = v15;
  os_unfair_lock_lock(v25);
  sub_12B2E0((uint64_t)v27);
  os_unfair_lock_unlock(v25);

}

void sub_12B2E0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderOperations"));
  objc_msgSend(v2, "removeObjectIdenticalTo:", *(_QWORD *)(a1 + 40));

}

void sub_12B320(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "renderOperations"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));

}

BOOL BCReadingStatisticsProtoBookReadFrom(char *a1, uint64_t a2)
{
  char v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  int v10;
  uint64_t String;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BCReadingStatisticsProtoTOCEntry *v17;
  uint64_t v18;
  _QWORD v20[2];

  if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
    return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  while (2)
  {
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    v4 = 0;
    v5 = 0;
    v6 = 0;
    while (1)
    {
      v7 = *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
        break;
      v8 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0)
        goto LABEL_11;
      v4 += 7;
      if (v5++ >= 9)
      {
        v6 = 0;
        v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error))
      v6 = 0;
LABEL_13:
    if (v10 || (v6 & 7) == 4)
      return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    switch((v6 >> 3))
    {
      case 1u:
        String = PBReaderReadString(a2);
        v13 = objc_claimAutoreleasedReturnValue(String);
        v14 = 16;
        goto LABEL_23;
      case 2u:
        v15 = PBReaderReadString(a2);
        v13 = objc_claimAutoreleasedReturnValue(v15);
        v14 = 8;
        goto LABEL_23;
      case 3u:
        v16 = PBReaderReadString(a2);
        v13 = objc_claimAutoreleasedReturnValue(v16);
        v14 = 24;
LABEL_23:
        v17 = *(BCReadingStatisticsProtoTOCEntry **)&a1[v14];
        *(_QWORD *)&a1[v14] = v13;
        goto LABEL_29;
      case 4u:
        v17 = objc_alloc_init(BCReadingStatisticsProtoTOCEntry);
        objc_msgSend(a1, "addTocEntry:", v17);
        v20[0] = 0;
        v20[1] = 0;
        if (PBReaderPlaceMark(a2, v20)
          && (BCReadingStatisticsProtoTOCEntryReadFrom((uint64_t)v17, a2) & 1) != 0)
        {
          PBReaderRecallMark(a2, v20);
LABEL_29:

LABEL_30:
          if (*(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(_QWORD *)(a2 + OBJC_IVAR___PBDataReader__length))
            return *(_BYTE *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          continue;
        }

        return 0;
      case 5u:
        v18 = PBReaderReadString(a2);
        v17 = (BCReadingStatisticsProtoTOCEntry *)objc_claimAutoreleasedReturnValue(v18);
        if (v17)
          objc_msgSend(a1, "addReadCFI:", v17);
        goto LABEL_29;
      default:
        if ((PBReaderSkipValueWithTag(a2) & 1) == 0)
          return 0;
        goto LABEL_30;
    }
  }
}

void sub_12F50C(BKScrubberControl *self, SEL a2, int64_t a3)
{
  self->_hoverState = a3;
}

void sub_12F850(uint64_t a1)
{
  double v1;
  id v2;

  if (*(_BYTE *)(a1 + 40))
    v1 = 1.0;
  else
    v1 = 0.01;
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "track"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_12F8A4(uint64_t a1)
{
  double v1;
  id v2;

  if (*(_BYTE *)(a1 + 40))
    v1 = 1.0;
  else
    v1 = 0.01;
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "thumb"));
  objc_msgSend(v2, "setAlpha:", v1);

}

void sub_12FB9C(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "sendActionsForControlEvents:", 64);

}

CGFloat BKScrubberFrame(void *a1, uint64_t a2, double a3, double a4, double a5, CGFloat MinX, double a7, double a8)
{
  id v11;
  CGFloat x;
  CGFloat width;
  CGFloat v14;
  CGFloat y;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat height;
  double MaxX;
  double v22;
  double v23;
  CGFloat rect;
  double v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v11 = a1;
  objc_msgSend(v11, "scrubberSafeAreaInsets");
  if (a2 == 2)
  {
    objc_msgSend(v11, "scrubberContainerBounds");
    x = v27.origin.x;
    width = v27.size.width;
    v28.origin.y = CGRectGetHeight(v27) * 0.5;
    v28.size.height = 1.0;
    v28.origin.x = x;
    v28.size.width = width;
    v29 = CGRectIntegral(v28);
    v14 = v29.origin.x;
    y = v29.origin.y;
    v16 = v29.size.width;
    rect = v29.size.height;
    objc_msgSend(v11, "scrubberInscribedRect:");
    v17 = v30.origin.x;
    v18 = v30.origin.y;
    v19 = v30.size.width;
    v26 = a8;
    height = v30.size.height;
    MinX = CGRectGetMinX(v30);
    v31.origin.x = v14;
    v31.origin.y = y;
    v31.size.width = v16;
    v31.size.height = rect;
    MaxX = CGRectGetMaxX(v31);
    v32.origin.x = v17;
    v32.origin.y = v18;
    v32.size.width = v19;
    v32.size.height = height;
    v22 = CGRectGetMaxX(v32);
    if (objc_msgSend(v11, "scrubberLayoutDirection") != (char *)&dword_0 + 1)
    {
      objc_msgSend(v11, "scrubberContainerSize");
      MinX = v23 - v26 - (MaxX - v22);
    }
  }
  objc_msgSend(v11, "scrubberContainerSize");
  if (objc_msgSend(v11, "isScrubberDisabled"))
    MinX = CGRectZero.origin.x;

  return MinX;
}

void sub_1303F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_130410(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_130420(uint64_t a1)
{

}

void sub_130428(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v3 = a2;
  v4 = _CFURLPromiseCopyPhysicalURL();
  v5 = (void *)v4;
  if (v4)
    v6 = (void *)v4;
  else
    v6 = v3;
  v10 = v6;

  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_ubiquityMetadataForURL:options:", v10, *(_QWORD *)(a1 + 48)));
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v9 = *(void **)(v8 + 40);
  *(_QWORD *)(v8 + 40) = v7;

}

void sub_130C24(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  id v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  id v20;

  v5 = a2;
  v6 = a3;
  v7 = v6;
  if (v5 && !v6)
  {
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "UIImage"));
    v9 = BCUbiquityMetadataHelperLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v11 = *(_QWORD *)(a1 + 32);
      v13 = 141558786;
      v14 = 1752392040;
      v15 = 2112;
      v16 = v11;
      v17 = 2160;
      v18 = 1752392040;
      v19 = 2112;
      v20 = v5;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_INFO, "[iCloudSync] url: %{mask.hash}@ generateThumbnail thumbnail: %{mask.hash}@", (uint8_t *)&v13, 0x2Au);
    }

    objc_msgSend(*(id *)(a1 + 40), "setObject:forKey:", v8, *(_QWORD *)(a1 + 48));
LABEL_9:

    goto LABEL_10;
  }
  if (v6)
  {
    v12 = BCUbiquityMetadataHelperLog();
    v8 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B8320((uint64_t)v7, v8);
    goto LABEL_9;
  }
LABEL_10:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));

}

void sub_130E5C(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSDateFormatter);
  v2 = (void *)qword_311348;
  qword_311348 = (uint64_t)v1;

  objc_msgSend((id)qword_311348, "setDateStyle:", 4);
  objc_msgSend((id)qword_311348, "setTimeStyle:", 0);
  objc_msgSend((id)qword_311348, "setDoesRelativeDateFormatting:", 1);
}

void sub_1311E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_131224(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;

  v3 = a2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 0;
  v4 = *(_QWORD *)(a1 + 48);
  if (v4)
    (*(void (**)(uint64_t, id, uint64_t))(v4 + 16))(v4, v3, *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) && objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_131334;
    v8[3] = &unk_291EA8;
    v10 = *(_QWORD *)(a1 + 72);
    v5 = *(void **)(a1 + 32);
    v9 = *(id *)(a1 + 40);
    objc_msgSend(v5, "enumerateKeysAndObjectsUsingBlock:", v8);

  }
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
  {
    v6 = BCUbiquityMetadataHelperLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_1B8420();

  }
}

id sub_131334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(a1 + 40), "setExtendedAttributeNamed:toValue:forUrl:", a2, a3, *(_QWORD *)(a1 + 32));
}

void sub_131DF8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  id v6;
  void *v7;

  v4 = objc_autoreleasePoolPush();
  v5 = a3;
  v6 = (id)objc_claimAutoreleasedReturnValue(+[BKReachability sharedReachabilityForInternetConnection](BKReachability, "sharedReachabilityForInternetConnection"));

  if (v6 == v5)
    +[BKReachability _updateIsOffline](BKReachability, "_updateIsOffline");
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v7, "postNotificationName:object:", CFSTR("kNetworkReachabilityChangedNotification"), v5);

  objc_autoreleasePoolPop(v4);
}

id sub_132234(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id result;

  v1 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "reachabilityForInternetConnection"));
  v2 = (void *)qword_311358;
  qword_311358 = v1;

  result = objc_msgSend((id)qword_311358, "currentReachabilityStatus");
  byte_30A690 = (_DWORD)result == 0;
  return result;
}

UIColor *__cdecl sub_1337AC(id a1, UITraitCollection *a2)
{
  void *v2;

  if ((char *)-[UITraitCollection userInterfaceStyle](a2, "userInterfaceStyle") == (char *)&dword_0 + 2)
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor whiteColor](UIColor, "whiteColor"));
  else
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
  return (UIColor *)v2;
}

id sub_133A28(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setUserInterfaceStyle:", *(_QWORD *)(a1 + 32));
}

void sub_134038(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  void **v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  void *v18;
  uint64_t v19;
  id v20;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageView"));
  v15 = _NSConcreteStackBlock;
  v16 = 3221225472;
  v17 = sub_134140;
  v18 = &unk_28B808;
  v3 = *(void **)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 32);
  v20 = v3;
  +[UIView transitionWithView:duration:options:animations:completion:](UIView, "transitionWithView:duration:options:animations:completion:", v2, 5242880, &v15, 0, 0.0);

  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  objc_msgSend(v4, "bounds", v15, v16, v17, v18, v19);
  objc_msgSend(v4, "_frameForImage:forDisplayingInContainerBounds:", v5);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageView"));
  objc_msgSend(v14, "setFrame:", v7, v9, v11, v13);

}

void sub_134140(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageView"));
  objc_msgSend(v2, "setImage:", v1);

}

double convertOffsetFromLayerToLayer(void *a1, uint64_t a2, double a3)
{
  double v3;

  objc_msgSend(a1, "convertPoint:toLayer:", a2, 0.0, a3);
  return v3;
}

void sub_13421C(id a1)
{
  BCCardSetExpandedState *v1;
  void *v2;

  v1 = objc_alloc_init(BCCardSetExpandedState);
  v2 = (void *)qword_311368;
  qword_311368 = (uint64_t)v1;

}

void sub_134284(id a1)
{
  BCCardSetContractedState *v1;
  void *v2;

  v1 = objc_alloc_init(BCCardSetContractedState);
  v2 = (void *)qword_311378;
  qword_311378 = (uint64_t)v1;

}

void sub_1342EC(id a1)
{
  BCCardSetExpandingState *v1;
  void *v2;

  v1 = objc_alloc_init(BCCardSetExpandingState);
  v2 = (void *)qword_311388;
  qword_311388 = (uint64_t)v1;

}

void sub_134354(id a1)
{
  BCCardSetContractingState *v1;
  void *v2;

  v1 = objc_alloc_init(BCCardSetContractingState);
  v2 = (void *)qword_311398;
  qword_311398 = (uint64_t)v1;

}

void sub_1343BC(id a1)
{
  BCCardSetDismissingState *v1;
  void *v2;

  v1 = objc_alloc_init(BCCardSetDismissingState);
  v2 = (void *)qword_3113A8;
  qword_3113A8 = (uint64_t)v1;

}

void sub_134424(id a1)
{
  BCCardSetPushedState *v1;
  void *v2;

  v1 = objc_alloc_init(BCCardSetPushedState);
  v2 = (void *)qword_3113B8;
  qword_3113B8 = (uint64_t)v1;

}

void sub_13448C(id a1)
{
  BCCardSetPushedContractedState *v1;
  void *v2;

  v1 = objc_alloc_init(BCCardSetPushedContractedState);
  v2 = (void *)qword_3113C8;
  qword_3113C8 = (uint64_t)v1;

}

id sub_1352C8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setContentOffset:animated:", 0, *(double *)(a1 + 40), *(double *)(a1 + 48));
}

id sub_136538(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setContentOffset:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

void sub_136BD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_136C0C(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "scrollView"));
  objc_msgSend(v2, "setContentOffset:animated:", *(unsigned __int8 *)(a1 + 40), CGPointZero.x, CGPointZero.y);

}

void sub_136C64(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "scrollView"));
  objc_msgSend(v1, "setScrollEnabled:", 1);

}

void sub_137FA4(uint64_t a1, int a2)
{
  uint64_t v3;
  id v4;

  if (a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "setAnimator:", 0);
    if ((objc_msgSend(*(id *)(a1 + 40), "itemPushedOnCard") & 1) != 0)
      v3 = objc_claimAutoreleasedReturnValue(+[BCCardSetState pushedContractedState](BCCardSetState, "pushedContractedState"));
    else
      v3 = objc_claimAutoreleasedReturnValue(+[BCCardSetState contractedState](BCCardSetState, "contractedState"));
    v4 = (id)v3;
    objc_msgSend(*(id *)(a1 + 32), "setCurrentState:", v3);

  }
}

void sub_138D58(id a1)
{
  AEPluginRegistry *v1;
  void *v2;

  v1 = objc_alloc_init(AEPluginRegistry);
  v2 = (void *)qword_3113D8;
  qword_3113D8 = (uint64_t)v1;

}

void sub_139414(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;

  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "description"));
    v3 = 138543362;
    v4 = v2;
    _os_log_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "End AEBookPlugin prewarm for %{public}@", (uint8_t *)&v3, 0xCu);

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1394CC(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_139B1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id WeakRetained;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  uint64_t v13;
  id v14;
  _BOOL4 v15;
  uint64_t v16;
  const char *v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ubiquityIdentityToken"));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 48);
  *(_QWORD *)(v3 + 48) = v2;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 24));
  v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "containerURL"));
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(v7 + 56);
  *(_QWORD *)(v7 + 56) = v6;

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48);
  v10 = BKLibraryDataSourceUbiquityLog();
  v11 = objc_claimAutoreleasedReturnValue(v10);
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (!v9)
  {
    if (v12)
    {
      LOWORD(v18) = 0;
      v17 = "No ubiquity identity";
LABEL_12:
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, v17, (uint8_t *)&v18, 2u);
    }
LABEL_13:

    return;
  }
  if (v12)
  {
    LOWORD(v18) = 0;
    _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "Have ubiquity identity", (uint8_t *)&v18, 2u);
  }

  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56);
  v14 = BKLibraryDataSourceUbiquityLog();
  v11 = objc_claimAutoreleasedReturnValue(v14);
  v15 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);
  if (!v13)
  {
    if (v15)
    {
      LOWORD(v18) = 0;
      v17 = "No ubiquity URL";
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  if (v15)
  {
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56);
    v18 = 141558274;
    v19 = 1752392040;
    v20 = 2112;
    v21 = v16;
    _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "Have ubiquity URL: %{mask.hash}@", (uint8_t *)&v18, 0x16u);
  }

  objc_msgSend(*(id *)(a1 + 32), "q_createSubpathDirectories");
  objc_msgSend(*(id *)(a1 + 32), "restartQuery");
}

id sub_139DEC(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  id v4;
  NSObject *v5;
  void *v6;
  _DWORD v8[2];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ubiquityStatusMonitor"));
  v3 = objc_msgSend(v2, "isICloudDriveEnabled");

  v4 = BKLibraryDataSourceUbiquityLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v8[0] = 67109120;
    v8[1] = v3;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "iCloud identity changed. {iCloudEnabled: %d}", (uint8_t *)v8, 8u);
  }

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 48), *(id *)(a1 + 40));
  v6 = *(void **)(a1 + 32);
  if (v3)
    return objc_msgSend(v6, "restartQuery");
  else
    return objc_msgSend(v6, "tearDownQuery");
}

void sub_139F7C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  void *v11;
  id v12;
  _QWORD block[5];
  id v14;
  NSString *v15;

  v3 = a2;
  if (v3)
  {
    v4 = objc_alloc_init((Class)NSMetadataQuery);
    v5 = objc_alloc_init((Class)NSOperationQueue);
    objc_msgSend(v4, "setOperationQueue:", v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "operationQueue"));
    objc_msgSend(v6, "setMaxConcurrentOperationCount:", 1);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "path"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K BEGINSWITH %@"), NSMetadataItemPathKey, v7));
    objc_msgSend(v4, "setPredicate:", v8);

    v9 = BKLibraryDataSourceUbiquityLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      sub_1B854C((uint64_t)v3, v10);

    v15 = NSMetadataQueryUbiquitousDocumentsScope;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v15, 1));
    objc_msgSend(v4, "setSearchScopes:", v11);

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_13A14C;
    block[3] = &unk_28B808;
    block[4] = *(_QWORD *)(a1 + 32);
    v14 = v4;
    v12 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

id sub_13A14C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "mq_setupQuery:", *(_QWORD *)(a1 + 40));
}

id sub_13A1B0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "mq_tearDownQuery");
}

void sub_13A29C(uint64_t a1)
{
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(a1 + 40);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_documentsURL"));
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

void sub_13A7A8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_replacementObjectForResultObject:", a2));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_13AEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_13AF0C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  id v10;
  NSObject *v11;
  id v12;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v5 = *(void **)(a1 + 32);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "path"));
    LOBYTE(v5) = objc_msgSend(v5, "fileExistsAtPath:", v6);

    if ((v5 & 1) == 0)
    {
      v7 = *(void **)(a1 + 32);
      v12 = 0;
      v8 = objc_msgSend(v7, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:", v4, 1, 0, &v12);
      v9 = v12;
      if ((v8 & 1) == 0)
      {
        v10 = BKLibraryDataSourceUbiquityLog();
        v11 = objc_claimAutoreleasedReturnValue(v10);
        if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          sub_1B86E8();

        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
      }

    }
  }

}

void sub_13B090(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_replacementObjectForResultObject:", a2));
  objc_msgSend(v2, "addObject:", v3);

}

void sub_13B65C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

void sub_13BE38(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "im_effectiveViewControllerForTabBarVisibility"));
  v3 = objc_msgSend(v2, "im_tabBarVisible");

  v4 = *(void **)(a1 + 32);
  if (v3)
  {
    objc_msgSend(v4, "showBarWithTransition:", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tabBar"));
    v7 = v5;
    v6 = 0;
  }
  else
  {
    objc_msgSend(v4, "hideBarWithTransition:", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tabBar"));
    v7 = v5;
    v6 = 1;
  }
  objc_msgSend(v5, "setHidden:", v6);

}

void sub_13C710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  _Block_object_dispose(&a48, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_13C768(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_13C778(uint64_t a1)
{

}

uint64_t sub_13C780(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
  return 0;
}

uint64_t sub_13C7A8(uint64_t a1, int a2, id obj)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), obj);
  return 0;
}

__CFString *NSStringFromBookReadingSessionEvent(unint64_t a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_2924F8[a1];
}

void sub_13CB1C(id a1)
{
  BCBookReadingTimeTracker *v1;
  void *v2;

  v1 = -[BCBookReadingTimeTracker initWithPersistenStoreDirectory:]([BCBookReadingTimeTracker alloc], "initWithPersistenStoreDirectory:", 0);
  v2 = (void *)qword_3113E8;
  qword_3113E8 = (uint64_t)v1;

}

void sub_13D2D0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  unsigned __int8 v14;
  id v15;
  id v16;
  id v17;
  uint8_t buf[4];
  uint64_t v19;

  v2 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BCAssetToPurge"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K in %@"), CFSTR("assetID"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v2, "setPredicate:", v3);

  v4 = objc_msgSend(objc_alloc((Class)NSBatchDeleteRequest), "initWithFetchRequest:", v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "psc"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
  v17 = 0;
  v7 = objc_msgSend(v5, "executeRequest:withContext:error:", v4, v6, &v17);
  v8 = v17;

  v9 = BCBookPromotionLog();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  v11 = v10;
  if (v8)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1B89C0();
LABEL_9:

    goto LABEL_10;
  }
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v12 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v19 = v12;
    _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "Purge Tracking: stopped tracking assets to purge %@", buf, 0xCu);
  }

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
  v16 = 0;
  v14 = objc_msgSend(v13, "save:", &v16);
  v8 = v16;

  if ((v14 & 1) == 0)
  {
    v15 = BCBookPromotionLog();
    v11 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_1B8960();
    goto LABEL_9;
  }
LABEL_10:

}

void sub_13D780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_13D7B0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_13D7C0(uint64_t a1)
{

}

void sub_13D7C8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = BCBookPromotionLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B8A80();

  }
  else if (objc_msgSend(v5, "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "_cleanupBooksMarkedAsFinished:", v5);
  }

}

void sub_13D854(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  __int128 v10;
  uint8_t buf[4];
  id v12;
  __int16 v13;
  id v14;

  v3 = a2;
  v4 = BCBookPromotionLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218242;
    v12 = objc_msgSend(v3, "count");
    v13 = 2112;
    v14 = v3;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "Purge Tracking: %lu expired books: %@", buf, 0x16u);
  }

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_13D984;
  v8[3] = &unk_28C430;
  v9 = v3;
  v10 = *(_OWORD *)(a1 + 32);
  v7 = v3;
  objc_msgSend(v6, "performBlock:", v8);

}

void sub_13D984(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[5];
  id v19;
  id v20;
  id v21;
  id v22;
  uint8_t buf[4];
  id v24;

  v2 = BCBookPromotionLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "count");
    *(_DWORD *)buf = 134217984;
    v24 = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "Purge Tracking: update launch tracking for %lu assets", buf, 0xCu);
  }

  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  v22 = 0;
  objc_msgSend(v5, "_mocq_updateLaunchTrackingForAssets:error:", v6, &v22);
  v7 = v22;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[BCJSConfiguration sharedInstance](BCJSConfiguration, "sharedInstance"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "launchesRequiredToPurge"));
  v10 = objc_msgSend(v9, "unsignedIntegerValue");

  v11 = *(void **)(a1 + 40);
  v20 = v7;
  v21 = 0;
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "_getAssetsToPurge:request:error:", v10, &v21, &v20));
  v13 = v21;
  v14 = v20;

  if (!v14 && objc_msgSend(v12, "count"))
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "libraryDelegate"));
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_13DB80;
    v18[3] = &unk_28C1B8;
    v18[4] = *(_QWORD *)(a1 + 40);
    v19 = v12;
    objc_msgSend(v15, "purgeRecentBooks:completion:", v19, v18);

  }
  v16 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate now](NSDate, "now"));
  objc_msgSend(v16, "setObject:forKey:", v17, CFSTR("BCLastScrubRecentsDate"));

}

id *sub_13DB80(id *result, uint64_t a2)
{
  if (!a2)
    return (id *)objc_msgSend(result[4], "_stopTrackingAssetsToPurge:", result[5]);
  return result;
}

void sub_13E01C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_13E048(uint64_t a1, void *a2, char a3, char a4, char a5, void *a6)
{
  id v11;
  id v12;
  id WeakRetained;
  void *v14;
  id v15;
  NSObject *v16;
  void (**v17)(void);
  void (**v18)(void);
  void (*v19)(void);
  void *v20;
  id v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  void (**v25)(void);
  _QWORD v26[4];
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;

  v11 = a2;
  v12 = a6;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v14 = WeakRetained;
  if (v12)
  {
    v15 = BCBookPromotionLog();
    v16 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      sub_1B8B6C(a1);

    v17 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
    v18 = v17;
    if (!v17)
      goto LABEL_7;
    v19 = v17[2];
    goto LABEL_6;
  }
  if (WeakRetained)
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "moc"));
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_13E270;
    v26[3] = &unk_2922A0;
    objc_copyWeak(&v32, (id *)(a1 + 64));
    v27 = *(id *)(a1 + 32);
    v33 = *(_OWORD *)(a1 + 72);
    v28 = v11;
    v21 = *(id *)(a1 + 40);
    v35 = a3;
    v36 = a4;
    v37 = a5;
    v22 = *(_QWORD *)(a1 + 88);
    v29 = v21;
    v34 = v22;
    v30 = *(id *)(a1 + 56);
    v31 = *(id *)(a1 + 48);
    objc_msgSend(v20, "performBlock:", v26);

    objc_destroyWeak(&v32);
    goto LABEL_10;
  }
  v23 = BCBookPromotionLog();
  v24 = objc_claimAutoreleasedReturnValue(v23);
  if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    sub_1B8B40();

  v25 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
  v18 = v25;
  if (v25)
  {
    v19 = v25[2];
LABEL_6:
    v19();
  }
LABEL_7:

LABEL_10:
}

void sub_13E25C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_13E270(uint64_t a1)
{
  uint64_t v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  LOWORD(v2) = *(_WORD *)(a1 + 105);
  objc_msgSend(WeakRetained, "_mocqSessionID:sessionEvent:trackerEventType:asset:assetID:isTrackedAsRecent:canBePromoted:isSample:readingFeatureFlags:successCompletion:failureCompletion:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 104), v2, *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));

}

void sub_13E92C(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  _QWORD v5[5];
  id v6;
  id v7;
  __int128 v8;
  char v9;

  v2 = BCBookPromotionLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    sub_1B8C54();

  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_13E9F4;
  v5[3] = &unk_28FB20;
  v4 = *(void **)(a1 + 48);
  v5[4] = *(_QWORD *)(a1 + 40);
  v6 = v4;
  v7 = *(id *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 72);
  v8 = *(_OWORD *)(a1 + 56);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

}

id sub_13E9F4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_mq_startBookPromotionTimerForSession:assetID:isSample:trackerEventType:readingFeatureFlags:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 72), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64));
}

id sub_13EA0C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_mq_clearBookPromotionTimer");
}

void sub_13EAFC(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;

  v3 = objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    v4 = v3;
    (*((void (**)(id, uint64_t, uint64_t, _QWORD))v3 + 2))(v3, 1, a2, 0);
    v3 = v4;
  }

}

void sub_13EB48(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = objc_retainBlock(*(id *)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(id, _QWORD, uint64_t, id))v5 + 2))(v5, 0, a2, v7);

}

void sub_13ECF0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  id v12;
  NSObject *v13;
  double v14;
  void *v15;
  double v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  void *i;
  id v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint8_t buf[4];
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  _BYTE v42[128];

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_mocq_readingSessionWithAssetID:sessionID:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  v7 = v6;
  if (v6 && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "timeOpened")), v8, v8))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "timeClosed"));
    v10 = v9;
    if (v9)
      v11 = v9;
    else
      v11 = objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    v13 = v11;

    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "timeOpened"));
    -[NSObject timeIntervalSinceDate:](v13, "timeIntervalSinceDate:", v15);
    v14 = v16;

    v17 = BCBookPromotionLog();
    v18 = objc_claimAutoreleasedReturnValue(v17);
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
      sub_1B8D20();

  }
  else
  {
    v12 = BCBookPromotionLog();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    v14 = 0.0;
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1B8CB8();
  }

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sessionObservers", 0));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "allObjects"));

  v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
  if (v21)
  {
    v22 = v21;
    v23 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v22; i = (char *)i + 1)
      {
        if (*(_QWORD *)v35 != v23)
          objc_enumerationMutation(v20);
        objc_msgSend(*(id *)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)i), "timeTracker:didEndTrackingSession:duration:trackerEventType:asset:readingFeatureFlags:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 64), v5, *(_QWORD *)(a1 + 72), v14);
      }
      v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
    }
    while (v22);
  }

  if ((_DWORD)a2)
  {
    v25 = BCBookPromotionLog();
    v26 = objc_claimAutoreleasedReturnValue(v25);
    if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
    {
      v27 = *(_QWORD *)(a1 + 40);
      v28 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412546;
      v39 = v27;
      v40 = 2112;
      v41 = v28;
      _os_log_impl(&dword_0, v26, OS_LOG_TYPE_INFO, "Deleting session: asset %@, session %@", buf, 0x16u);
    }

    v29 = *(void **)(a1 + 32);
    v30 = *(_QWORD *)(a1 + 40);
    v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "timeOpened"));
    objc_msgSend(v29, "_mocq_deleteSessionsForAsset:beforeTime:", v30, v31);

  }
  v32 = objc_retainBlock(*(id *)(a1 + 56));
  v33 = v32;
  if (v32)
    (*((void (**)(id, uint64_t, uint64_t, _QWORD))v32 + 2))(v32, 1, a2, 0);

}

void sub_13EFE8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  NSObject *v6;
  id v7;
  void *v8;

  v4 = a3;
  if (v4)
  {
    v5 = BCBookPromotionLog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_1B8D98(a1);

  }
  v7 = objc_retainBlock(*(id *)(a1 + 40));
  v8 = v7;
  if (v7)
    (*((void (**)(id, _QWORD, _QWORD, id))v7 + 2))(v7, 0, 0, v4);

}

void sub_13F1C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  _QWORD v13[5];
  id v14;
  id v15;
  char v16;

  v8 = a6;
  if (a3)
  {
    v9 = objc_retainBlock(*(id *)(a1 + 48));
    v10 = v9;
    if (v9)
      (*((void (**)(id, uint64_t, id, double))v9 + 2))(v9, 1, v8, 0.0);
  }
  else
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchRequestForReadingSession:", *(_QWORD *)(a1 + 40)));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_13F2BC;
    v13[3] = &unk_2902F0;
    v13[4] = *(_QWORD *)(a1 + 32);
    v14 = v11;
    v15 = *(id *)(a1 + 48);
    v16 = 0;
    v10 = v11;
    objc_msgSend(v12, "performBlock:", v13);

  }
}

void sub_13F2BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  BOOL v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  double v13;
  void *i;
  void *v15;
  void *v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  NSObject *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  double v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  id v45;
  uint8_t buf[4];
  void *v47;
  __int16 v48;
  void *v49;
  __int16 v50;
  void *v51;
  _BYTE v52[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
  v3 = *(_QWORD *)(a1 + 40);
  v45 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "executeFetchRequest:error:", v3, &v45));
  v5 = v45;

  if (v4)
    v6 = 1;
  else
    v6 = v5 == 0;
  if (!v6)
  {
    v7 = BCBookPromotionLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B8E04();

  }
  if (!objc_msgSend(v4, "count"))
  {
    v13 = 0.0;
    goto LABEL_31;
  }
  v39 = v5;
  v40 = v4;
  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  v42 = 0u;
  v9 = v4;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v41, v52, 16);
  if (!v10)
  {
    v13 = 0.0;
    goto LABEL_30;
  }
  v11 = v10;
  v12 = *(_QWORD *)v42;
  v13 = 0.0;
  do
  {
    for (i = 0; i != v11; i = (char *)i + 1)
    {
      if (*(_QWORD *)v42 != v12)
        objc_enumerationMutation(v9);
      v15 = *(void **)(*((_QWORD *)&v41 + 1) + 8 * (_QWORD)i);
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeClosed", v39, v40));
      objc_msgSend(v16, "timeIntervalSinceNow");
      v18 = -v17;

      v19 = (void *)objc_claimAutoreleasedReturnValue(+[BCJSConfiguration sharedInstance](BCJSConfiguration, "sharedInstance"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "validCollectionPeriod"));
      objc_msgSend(v20, "doubleValue");
      v22 = v21;

      if (v22 < v18)
      {
        v23 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
        -[NSObject deleteObject:](v23, "deleteObject:", v15);
        goto LABEL_25;
      }
      v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeOpened"));
      if (v24)
      {
        v25 = (void *)v24;
        v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeClosed"));

        if (v26)
        {
          v27 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeClosed"));
LABEL_22:
          v23 = v27;
          v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeOpened"));
          -[NSObject timeIntervalSinceDate:](v23, "timeIntervalSinceDate:", v31);
          v13 = v13 + v32;

          goto LABEL_25;
        }
      }
      v28 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeOpened"));
      if (v28)
      {
        v29 = (void *)v28;
        v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeUpdated"));

        if (v30)
        {
          v27 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeUpdated"));
          goto LABEL_22;
        }
      }
      v33 = BCBookPromotionLog();
      v23 = objc_claimAutoreleasedReturnValue(v33);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
      {
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "sessionID"));
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "timeOpened"));
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "assetID"));
        *(_DWORD *)buf = 138543874;
        v47 = v34;
        v48 = 2112;
        v49 = v35;
        v50 = 2112;
        v51 = v36;
        _os_log_debug_impl(&dword_0, v23, OS_LOG_TYPE_DEBUG, "Ignoring session %{public}@ from %@ for asset %@ due to incomplete information.", buf, 0x20u);

      }
LABEL_25:

    }
    v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v41, v52, 16);
  }
  while (v11);
LABEL_30:

  v5 = v39;
  v4 = v40;
LABEL_31:
  v37 = objc_retainBlock(*(id *)(a1 + 48));
  v38 = v37;
  if (v37)
    (*((void (**)(id, _QWORD, id, double))v37 + 2))(v37, *(unsigned __int8 *)(a1 + 56), v5, v13);

}

id sub_13F6C0(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  void *v6;
  uint8_t v8[16];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  v3 = objc_msgSend(v2, "BOOLForKey:", CFSTR("BCPurgeRecentsOnNextStart"));

  if ((_DWORD)v3)
  {
    v4 = BCBookPromotionLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_DEFAULT, "Purging all recent books.", v8, 2u);
    }

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    objc_msgSend(v6, "setBool:forKey:", 0, CFSTR("BCPurgeRecentsOnNextStart"));

  }
  return objc_msgSend(*(id *)(a1 + 32), "_purgeRecentBooksList:completion:", v3, &stru_2923A8);
}

void sub_13F794(id a1, BOOL a2, NSError *a3)
{
  NSError *v3;
  id v4;
  NSObject *v5;

  v3 = a3;
  if (v3)
  {
    v4 = BCBookPromotionLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_1B8E64();

  }
}

void sub_13F888(uint64_t a1)
{
  int v2;
  int v3;
  id v4;
  NSObject *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  id v14;
  NSObject *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  void *v28;
  void *v29;
  id v30;
  NSObject *v31;
  id v32;
  NSObject *v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  NSObject *v39;
  void *v40;
  id v41;
  id v42;
  NSObject *v43;
  void *v44;
  id v45;
  NSObject *v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint8_t buf[16];

  v2 = *(unsigned __int8 *)(a1 + 48);
  v3 = BUIsRunningTests();
  if (v2)
  {
    if (v3)
    {
      v4 = BCBookPromotionLog();
      v5 = objc_claimAutoreleasedReturnValue(v4);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_0, v5, OS_LOG_TYPE_INFO, "Purginging ALL recent books.", buf, 2u);
      }

      v6 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BCTrackedAsset"));
      v7 = objc_msgSend(objc_alloc((Class)NSBatchDeleteRequest), "initWithFetchRequest:", v6);
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "psc"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
      v54 = 0;
      v10 = objc_msgSend(v8, "executeRequest:withContext:error:", v7, v9, &v54);
      v11 = v54;

      if (v11)
      {
        v12 = BCBookPromotionLog();
        v13 = objc_claimAutoreleasedReturnValue(v12);
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          sub_1B9044();

      }
    }
    v14 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BCAssetReadingSession"));
    v15 = objc_msgSend(objc_alloc((Class)NSBatchDeleteRequest), "initWithFetchRequest:", v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "psc"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
    v53 = 0;
    v18 = objc_msgSend(v16, "executeRequest:withContext:error:", v15, v17, &v53);
    v19 = v53;

    if (v19)
    {
      v20 = BCBookPromotionLog();
      v21 = objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        sub_1B8FE4();

    }
    v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
    v52 = 0;
    v23 = (uint64_t)objc_msgSend(v22, "save:", &v52);
    v24 = v52;

    v25 = 0;
    if ((v23 & 1) == 0)
    {
      v26 = BCBookPromotionLog();
      v27 = objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        sub_1B8F84();

      v25 = v24;
    }
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryDelegate"));
    v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
    objc_msgSend(v28, "purgeRecentsListFromAllBooksOlderThanDate:", v29);

    if (!v25)
      goto LABEL_39;
    v30 = BCBookPromotionLog();
    v31 = objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
      sub_1B8E64();
LABEL_38:

LABEL_39:
LABEL_40:

    goto LABEL_41;
  }
  if (v3)
  {
    v32 = BCBookPromotionLog();
    v33 = objc_claimAutoreleasedReturnValue(v32);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v33, OS_LOG_TYPE_INFO, "Purging recent books.", buf, 2u);
    }

    v34 = (void *)objc_claimAutoreleasedReturnValue(+[BCJSConfiguration sharedInstance](BCJSConfiguration, "sharedInstance"));
    v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "oldestDateToAvoidPurgeOfBooks"));

    if (!v14)
    {
      v49 = BCBookPromotionLog();
      v15 = objc_claimAutoreleasedReturnValue(v49);
      v23 = 1;
      if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_0, v15, OS_LOG_TYPE_INFO, "No date to purge for testing, skipping.", buf, 2u);
      }
      v25 = 0;
      goto LABEL_40;
    }
    v15 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BCTrackedAsset"));
    v19 = (id)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("lastOpenedDate < %@"), v14));
    -[NSObject setPredicate:](v15, "setPredicate:", v19);
    v24 = objc_msgSend(objc_alloc((Class)NSBatchDeleteRequest), "initWithFetchRequest:", v15);
    v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "psc"));
    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
    v51 = 0;
    v37 = objc_msgSend(v35, "executeRequest:withContext:error:", v24, v36, &v51);
    v31 = v51;

    if (v31)
    {
      v38 = BCBookPromotionLog();
      v39 = objc_claimAutoreleasedReturnValue(v38);
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
        sub_1B8F24();

    }
    v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
    v50 = 0;
    v23 = (uint64_t)objc_msgSend(v40, "save:", &v50);
    v41 = v50;

    v25 = 0;
    if ((v23 & 1) == 0)
    {
      v42 = BCBookPromotionLog();
      v43 = objc_claimAutoreleasedReturnValue(v42);
      if (os_log_type_enabled(v43, OS_LOG_TYPE_ERROR))
        sub_1B8EC4();

      v25 = v41;
    }
    v44 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "libraryDelegate"));
    objc_msgSend(v44, "purgeRecentsListFromAllBooksOlderThanDate:", v14);

    if (v25)
    {
      v45 = BCBookPromotionLog();
      v46 = objc_claimAutoreleasedReturnValue(v45);
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
        sub_1B8E64();

    }
    goto LABEL_38;
  }
  v25 = 0;
  v23 = 1;
LABEL_41:
  v47 = objc_retainBlock(*(id *)(a1 + 40));
  v48 = v47;
  if (v47)
    (*((void (**)(id, uint64_t, id))v47 + 2))(v47, v23, v25);

}

id sub_13FEB0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setGlobalMetadataFetched:", 1);
  return _objc_msgSend(*(id *)(a1 + 32), "_seedRecentBooksList");
}

id sub_13FF54(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setReadyToSeedRecentBooksList:", 1);
  objc_msgSend(*(id *)(a1 + 32), "setLimit:", *(_QWORD *)(a1 + 40));
  return _objc_msgSend(*(id *)(a1 + 32), "_seedRecentBooksList");
}

void sub_140078(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  unsigned int v10;
  void *v11;
  unsigned int v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint8_t v21[16];
  uint8_t v22[16];
  uint8_t buf[16];

  v5 = a2;
  v6 = a3;
  if (!v5)
  {
    v7 = BCBookPromotionLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "Global metadata returned a nil value for the key deviceWasSeededWithRecents", buf, 2u);
    }

  }
  if (!objc_msgSend(v5, "isEqualToString:", CFSTR("YES"))
    || (v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults")),
        v10 = objc_msgSend(v9, "BOOLForKey:", CFSTR("BCForceRecentBooksUpgradeExperience")),
        v9,
        v10))
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    v12 = objc_msgSend(v11, "BOOLForKey:", CFSTR("BCForceRecentBooksUpgradeExperience"));

    v13 = BCBookPromotionLog();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);
    if (v12)
    {
      if (v15)
      {
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "Forcefully seeding recents list.", v22, 2u);
      }

      v14 = objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
      -[NSObject removeObjectForKey:](v14, "removeObjectForKey:", CFSTR("BCForceRecentBooksUpgradeExperience"));
    }
    else if (v15)
    {
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_0, v14, OS_LOG_TYPE_DEFAULT, "Doing initial seeding of the recents books list.", v21, 2u);
    }

    v16 = (void *)objc_claimAutoreleasedReturnValue(+[BCJSConfiguration sharedInstance](BCJSConfiguration, "sharedInstance"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "oldestDateForUpgrade"));

    objc_msgSend(*(id *)(a1 + 32), "setMetadataValue:forKey:completion:", CFSTR("YES"), CFSTR("BCDeviceWasSeededWithARecentsList"), &stru_292410);
    v18 = *(void **)(a1 + 40);
    v19 = objc_msgSend(*(id *)(a1 + 48), "limit");
    if (v19)
      v20 = (uint64_t)v19;
    else
      v20 = 10;
    objc_msgSend(v18, "seedRecentsListWithRecentlyOpenedBooksNoOlderThanDate:limit:", v17, v20);

  }
}

void sub_140274(id a1, NSError *a2)
{
  NSError *v2;
  id v3;
  NSObject *v4;

  v2 = a2;
  if (v2)
  {
    v3 = BCBookPromotionLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_1B8E04();

  }
}

void sub_140380(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "promotionObservers"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 32));

}

void sub_140484(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "promotionObservers"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 32));

}

void sub_140588(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sessionObservers"));
  objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 32));

}

void sub_14068C(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "sessionObservers"));
  objc_msgSend(v2, "removeObject:", *(_QWORD *)(a1 + 32));

}

void sub_1409A4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = BCBookPromotionLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_1B8A80();

  }
  else if (objc_msgSend(v5, "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "_cleanupBooksMarkedAsFinished:", v5);
  }

}

void sub_140AC8(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  void *v23;
  unsigned int v24;
  void *v25;
  unsigned __int8 v26;
  id v27;
  id v28;
  NSObject *v29;
  id v30;
  id v31;
  id v32;
  uint8_t buf[4];
  uint64_t v34;

  if (BUIsRunningTests())
  {
    v2 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BCTrackedAsset"));
    objc_msgSend(v2, "setReturnsObjectsAsFaults:", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K in %@"), CFSTR("assetID"), *(_QWORD *)(a1 + 32)));
    objc_msgSend(v2, "setPredicate:", v3);

    v4 = objc_msgSend(objc_alloc((Class)NSBatchDeleteRequest), "initWithFetchRequest:", v2);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "psc"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
    v32 = 0;
    v7 = objc_msgSend(v5, "executeRequest:withContext:error:", v4, v6, &v32);
    v8 = v32;

    if (v8)
    {
      v9 = BCBookPromotionLog();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1B9190();

    }
  }
  v11 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BCAssetReadingSession"));
  objc_msgSend(v11, "setReturnsObjectsAsFaults:", 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("%K in %@"), CFSTR("assetID"), *(_QWORD *)(a1 + 32)));
  objc_msgSend(v11, "setPredicate:", v12);

  v13 = objc_msgSend(objc_alloc((Class)NSBatchDeleteRequest), "initWithFetchRequest:", v11);
  v14 = BCBookPromotionLog();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    v16 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v34 = v16;
    _os_log_impl(&dword_0, v15, OS_LOG_TYPE_INFO, "Deleting reading sessions for assetIDs: %@", buf, 0xCu);
  }

  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "psc"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
  v31 = 0;
  v19 = objc_msgSend(v17, "executeRequest:withContext:error:", v13, v18, &v31);
  v20 = v31;

  if (v20)
  {
    v21 = BCBookPromotionLog();
    v22 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      sub_1B9130();

  }
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
  v24 = objc_msgSend(v23, "hasChanges");

  if (v24)
  {
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
    v30 = 0;
    v26 = objc_msgSend(v25, "save:", &v30);
    v27 = v30;

    if ((v26 & 1) == 0)
    {
      v28 = BCBookPromotionLog();
      v29 = objc_claimAutoreleasedReturnValue(v28);
      if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        sub_1B8F84();

    }
  }
}

void sub_140EC0(uint64_t a1, uint64_t a2)
{
  id v4;
  NSObject *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  int8x16_t v24;
  void **v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  void *v28;
  int8x16_t v29;
  _QWORD v30[4];
  int8x16_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  uint64_t v40;
  _BYTE v41[128];

  v4 = BCBookPromotionLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    v6 = *(void **)(a1 + 32);
    v7 = *(unsigned __int8 *)(a1 + 48);
    *(_DWORD *)buf = 138412546;
    v38 = v6;
    v39 = 1024;
    LODWORD(v40) = v7;
    _os_log_impl(&dword_0, v5, OS_LOG_TYPE_INFO, " promoteTrackedAsset:%@ ifNotTracked:%{BOOL}d", buf, 0x12u);
  }

  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "promotionObservers"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "allObjects"));

  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v32, v41, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v33;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v33 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * (_QWORD)v13);
        v15 = BCBookPromotionLog();
        v16 = objc_claimAutoreleasedReturnValue(v15);
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
        {
          v17 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138412546;
          v38 = v14;
          v39 = 2112;
          v40 = v17;
          _os_log_debug_impl(&dword_0, v16, OS_LOG_TYPE_DEBUG, " notify observer:%@ of assetID:%@", buf, 0x16u);
        }

        objc_msgSend(v14, "timeTracker:didPromoteAsset:deletedFromWantToRead:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), a2);
        v13 = (char *)v13 + 1;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v32, v41, 16);
    }
    while (v11);
  }

  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3221225472;
  v30[2] = sub_1411C8;
  v30[3] = &unk_28B808;
  v24 = *(int8x16_t *)(a1 + 32);
  v19 = (id)v24.i64[0];
  v31 = vextq_s8(v24, v24, 8uLL);
  objc_msgSend(v18, "performBlock:", v30);

  if (BUIsRunningTests())
  {
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
    v25 = _NSConcreteStackBlock;
    v26 = 3221225472;
    v27 = sub_1411D4;
    v28 = &unk_28B808;
    v24 = *(int8x16_t *)(a1 + 32);
    v21 = (id)v24.i64[0];
    v29 = vextq_s8(v24, v24, 8uLL);
    objc_msgSend(v20, "performBlock:", &v25);

  }
  v22 = *(void **)(a1 + 40);
  v36 = *(_QWORD *)(a1 + 32);
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v36, 1, *(_OWORD *)&v24, v25, v26, v27, v28));
  objc_msgSend(v22, "_stopTrackingAssetsToPurge:", v23);

}

id sub_1411C8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_mocq_deleteAssetToPurgeForAssetID:", *(_QWORD *)(a1 + 40));
}

void sub_1411D4(uint64_t a1)
{
  uint64_t *v2;
  void *v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  id v12;
  NSObject *v13;
  id v14;
  uint8_t buf[4];
  uint64_t v16;

  v2 = (uint64_t *)(a1 + 40);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mq_trackedAssetForAssetID:", *(_QWORD *)(a1 + 40)));
  if (!v3)
  {
    v4 = BCBookPromotionLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v6 = *v2;
      *(_DWORD *)buf = 138412290;
      v16 = v6;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_INFO, "Inserting new local copy of tracked asset for %@", buf, 0xCu);
    }

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("BCTrackedAsset"), v7));

    objc_msgSend(v3, "setAssetID:", *(_QWORD *)(a1 + 40));
  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDate date](NSDate, "date"));
  objc_msgSend(v3, "setLastOpenedDate:", v8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
  v14 = 0;
  v10 = objc_msgSend(v9, "save:", &v14);
  v11 = v14;

  if ((v10 & 1) == 0)
  {
    v12 = BCBookPromotionLog();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_1B91F0();

  }
}

void sub_141734(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  void (**v15)(void);
  id v16;
  NSObject *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  double v24;
  void *v25;
  void *v26;
  void *v27;
  double v28;
  double v29;
  void *v30;
  void *v31;
  double v32;
  double v33;
  NSObject *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  double v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  NSObject *v49;
  void (**v50)(void);
  void (*v51)(void);
  void (**v52)(void);
  id v53;
  NSObject *v54;
  void *v55;
  void *v56;
  unsigned int v57;
  void *v58;
  unsigned __int8 v59;
  void (**v60)(void);
  id v61;
  NSObject *v62;
  id v63;
  void *v64;
  void (**v65)(void);
  void **v66;
  void (**v67)(void);
  void *v68;
  void *v69;
  void (**v70)(void);
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  id v75;
  uint8_t buf[4];
  void *v77;
  __int16 v78;
  void *v79;
  __int16 v80;
  void *v81;
  _BYTE v82[128];

  v2 = BCBookPromotionLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = *(void **)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v77 = v4;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "runBookPromotionAlgorithmForAssetID %@", buf, 0xCu);
  }

  v5 = *(unsigned __int8 *)(a1 + 72);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BCJSConfiguration sharedInstance](BCJSConfiguration, "sharedInstance"));
  v7 = v6;
  if (v5)
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "timeThresholdForSamplePromotion"));
  else
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "timeThresholdForPromotion"));
  v9 = v8;
  objc_msgSend(v8, "doubleValue");
  v11 = v10;

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_fetchRequestForReadingSession:", *(_QWORD *)(a1 + 32)));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
  v75 = 0;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "executeFetchRequest:error:", v12, &v75));
  v15 = (void (**)(void))v75;

  if (!v14 && v15)
  {
    v16 = BCBookPromotionLog();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      sub_1B8E04();

LABEL_11:
    v18 = objc_retainBlock(*(id *)(a1 + 56));
    v19 = v18;
    if (v18)
      (*((void (**)(id, _QWORD, void (**)(void)))v18 + 2))(v18, 0, v15);

    goto LABEL_60;
  }
  if (!objc_msgSend(v14, "count"))
  {
    v48 = BCBookPromotionLog();
    v49 = objc_claimAutoreleasedReturnValue(v48);
    if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
      sub_1B92B8();

    if (v15)
      goto LABEL_11;
    v50 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    v15 = v50;
    if (!v50)
      goto LABEL_60;
    v51 = v50[2];
LABEL_59:
    v51();
    goto LABEL_60;
  }
  v66 = (void **)(a1 + 32);
  v67 = v15;
  v68 = v14;
  v69 = v12;
  v73 = 0u;
  v74 = 0u;
  v71 = 0u;
  v72 = 0u;
  v20 = v14;
  v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v71, v82, 16);
  if (!v21)
  {
    v24 = 0.0;
    goto LABEL_42;
  }
  v22 = v21;
  v23 = *(_QWORD *)v72;
  v24 = 0.0;
  do
  {
    v25 = 0;
    do
    {
      if (*(_QWORD *)v72 != v23)
        objc_enumerationMutation(v20);
      v26 = *(void **)(*((_QWORD *)&v71 + 1) + 8 * (_QWORD)v25);
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeClosed", v66));
      objc_msgSend(v27, "timeIntervalSinceNow");
      v29 = -v28;

      v30 = (void *)objc_claimAutoreleasedReturnValue(+[BCJSConfiguration sharedInstance](BCJSConfiguration, "sharedInstance"));
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "validCollectionPeriod"));
      objc_msgSend(v31, "doubleValue");
      v33 = v32;

      if (v33 < v29)
      {
        v34 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
        -[NSObject deleteObject:](v34, "deleteObject:", v26);
        goto LABEL_31;
      }
      v35 = objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeOpened"));
      if (v35)
      {
        v36 = (void *)v35;
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeClosed"));

        if (v37)
        {
          v38 = objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeClosed"));
          goto LABEL_28;
        }
      }
      v39 = objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeOpened"));
      if (v39)
      {
        v40 = (void *)v39;
        v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeUpdated"));

        if (v41)
        {
          v38 = objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeUpdated"));
LABEL_28:
          v34 = v38;
          v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeOpened"));
          -[NSObject timeIntervalSinceDate:](v34, "timeIntervalSinceDate:", v42);
          v24 = v24 + v43;
LABEL_29:

          goto LABEL_31;
        }
      }
      v44 = BCBookPromotionLog();
      v34 = objc_claimAutoreleasedReturnValue(v44);
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
      {
        v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "sessionID"));
        v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "timeOpened"));
        v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "assetID"));
        *(_DWORD *)buf = 138543874;
        v77 = v42;
        v78 = 2112;
        v79 = v45;
        v80 = 2112;
        v81 = v46;
        _os_log_debug_impl(&dword_0, v34, OS_LOG_TYPE_DEBUG, "Run promotion algorithm: Ignoring session %{public}@ from %@ for asset %@ due to incomplete information.", buf, 0x20u);

        goto LABEL_29;
      }
LABEL_31:

      v25 = (char *)v25 + 1;
    }
    while (v22 != v25);
    v47 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v71, v82, 16);
    v22 = v47;
  }
  while (v47);
LABEL_42:

  if (v24 < v11)
  {
    v53 = BCBookPromotionLog();
    v54 = objc_claimAutoreleasedReturnValue(v53);
    v14 = v68;
    v12 = v69;
    v52 = v67;
    if (os_log_type_enabled(v54, OS_LOG_TYPE_INFO))
    {
      v55 = *v66;
      *(_DWORD *)buf = 138412290;
      v77 = v55;
      _os_log_impl(&dword_0, v54, OS_LOG_TYPE_INFO, "Book %@ has not yet crossed threshold for promotion.", buf, 0xCu);
    }

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "_mocq_promoteAssetID:", *(_QWORD *)(a1 + 32));
    v14 = v68;
    v12 = v69;
    v52 = v67;
  }
  v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc", v66));
  v57 = objc_msgSend(v56, "hasChanges");

  if (!v57)
  {
    v60 = v52;
    if (v52)
      goto LABEL_53;
    goto LABEL_57;
  }
  v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "moc"));
  v70 = v52;
  v59 = objc_msgSend(v58, "save:", &v70);
  v60 = v70;

  if ((v59 & 1) == 0)
  {
    v61 = BCBookPromotionLog();
    v62 = objc_claimAutoreleasedReturnValue(v61);
    if (os_log_type_enabled(v62, OS_LOG_TYPE_ERROR))
      sub_1B9318();

  }
  if (!v60)
  {
LABEL_57:
    v65 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    v15 = v65;
    if (!v65)
      goto LABEL_60;
    v51 = v65[2];
    goto LABEL_59;
  }
LABEL_53:
  v63 = objc_retainBlock(*(id *)(a1 + 56));
  v64 = v63;
  if (v63)
    (*((void (**)(id, BOOL, void (**)(void)))v63 + 2))(v63, v24 >= v11, v60);

  v15 = v60;
LABEL_60:

}

void sub_142338(uint64_t a1, int a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD block[4];
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  __int128 v20;

  if (a2)
    BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/BookPromotionEngine/BCBookReadingTimeTracker.m", 1264, (uint64_t)"-[BCBookReadingTimeTracker _mq_startBookPromotionTimerForSession:assetID:isSample:trackerEventType:readingFeatureFlags:]_block_invoke", (uint64_t)"!isTrackedAsRecent", CFSTR("Expecting the book not tracked as recent."), a7, a8, a9, v13);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_142414;
  block[3] = &unk_2924B0;
  v18 = *(_QWORD *)(a1 + 56);
  v19 = a3;
  v15 = *(id *)(a1 + 32);
  v11 = *(id *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v16 = v11;
  v17 = v12;
  v20 = *(_OWORD *)(a1 + 64);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_142414(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[3];
  _QWORD v7[3];

  if (*(double *)(a1 + 64) >= (double)*(uint64_t *)(a1 + 56))
  {
    objc_msgSend(*(id *)(a1 + 48), "_handleReadingWithAssetID:sessionID:sessionEvent:trackerEventType:readingFeatureFlags:successCompletion:failureCompletion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 2, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 72), 0, 0);
  }
  else
  {
    v6[0] = CFSTR("SessionID");
    v6[1] = CFSTR("AssetID");
    v2 = *(_QWORD *)(a1 + 40);
    v7[0] = *(_QWORD *)(a1 + 32);
    v7[1] = v2;
    v6[2] = CFSTR("ReadingFeatureFlagsKey");
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(a1 + 72)));
    v7[2] = v3;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v7, v6, 3));

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSTimer scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:](NSTimer, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", *(_QWORD *)(a1 + 48), "_handledUpdateReadingSessionTimer:", v4, 0, (double)*(uint64_t *)(a1 + 56) - *(double *)(a1 + 64) + 2.0));
    objc_msgSend(*(id *)(a1 + 48), "setBookPromotionTimer:", v5);

  }
}

void sub_142F1C(uint64_t a1)
{
  void *v2;
  void (**v3)(id, uint64_t, id, double);
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  double v16;
  void *i;
  void *v18;
  uint64_t v19;
  double v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  double v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void (**v29)(id, _QWORD, id, double);
  id v30;
  id v31;
  void *v32;
  void (**v33)(id, uint64_t, id, double);
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id v38;
  _BYTE v39[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "mq_trackedAssetForAssetID:", *(_QWORD *)(a1 + 40)));
  if (v2)
  {
    v3 = (void (**)(id, uint64_t, id, double))objc_retainBlock(*(id *)(a1 + 48));
    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "lastOpenedDate"));
      v5 = objc_msgSend(v4, "copy");
      v3[2](v3, 1, v5, 9.22337204e18);

    }
  }
  else
  {
    v3 = (void (**)(id, uint64_t, id, double))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_fetchRequestForReadingSession:", *(_QWORD *)(a1 + 40)));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
    v38 = 0;
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "executeFetchRequest:error:", v3, &v38));
    v8 = v38;

    if (!v7)
    {
      v9 = BCBookPromotionLog();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        sub_1B8E04();

    }
    if (objc_msgSend(v7, "count"))
    {
      v31 = v8;
      v32 = v7;
      v33 = v3;
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      v11 = v7;
      v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
      if (v12)
      {
        v13 = v12;
        v14 = 0;
        v15 = *(_QWORD *)v35;
        v16 = 0.0;
        do
        {
          for (i = 0; i != v13; i = (char *)i + 1)
          {
            if (*(_QWORD *)v35 != v15)
              objc_enumerationMutation(v11);
            v18 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * (_QWORD)i);
            v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "timeOpened"));
            v20 = 0.0;
            if (v19)
            {
              v21 = (void *)v19;
              v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "timeClosed"));

              if (v22)
              {
                v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "timeClosed"));
                v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "timeOpened"));
                objc_msgSend(v23, "timeIntervalSinceDate:", v24);
                v20 = v25;

                v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "timeClosed"));
                v27 = v26;
                if (v14)
                {
                  v28 = objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "laterDate:", v14));

                  v14 = (void *)v28;
                }
                else
                {
                  v14 = v26;
                }
              }
            }
            v16 = v16 + v20;
          }
          v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v34, v39, 16);
        }
        while (v13);
      }
      else
      {
        v14 = 0;
        v16 = 0.0;
      }

      v7 = v32;
      v3 = v33;
      v8 = v31;
    }
    else
    {
      v14 = 0;
      v16 = 0.0;
    }
    v29 = (void (**)(id, _QWORD, id, double))objc_retainBlock(*(id *)(a1 + 48));
    if (v29)
    {
      v30 = objc_msgSend(v14, "copy");
      v29[2](v29, 0, v30, v16);

    }
  }

}

void sub_1432C8(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  id v23;
  _BYTE v24[128];
  void *v25;

  v2 = objc_msgSend(objc_alloc((Class)NSFetchRequest), "initWithEntityName:", CFSTR("BCTrackedAsset"));
  objc_msgSend(v2, "setReturnsObjectsAsFaults:", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSSortDescriptor sortDescriptorWithKey:ascending:](NSSortDescriptor, "sortDescriptorWithKey:ascending:", CFSTR("lastOpenedDate"), 0));
  v25 = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v25, 1));
  objc_msgSend(v2, "setSortDescriptors:", v4);

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "moc"));
  v23 = 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "executeFetchRequest:error:", v2, &v23));
  v7 = v23;

  v8 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v6, "count"));
  if (!v6)
  {
    v9 = BCBookPromotionLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_1B8E04();

  }
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v11 = v6;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v20;
    do
    {
      v15 = 0;
      do
      {
        if (*(_QWORD *)v20 != v14)
          objc_enumerationMutation(v11);
        v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v19 + 1) + 8 * (_QWORD)v15), "assetID", (_QWORD)v19));
        objc_msgSend(v8, "addObject:", v16);

        v15 = (char *)v15 + 1;
      }
      while (v13 != v15);
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v19, v24, 16);
    }
    while (v13);
  }

  v17 = objc_retainBlock(*(id *)(a1 + 40));
  v18 = v17;
  if (v17)
    (*((void (**)(id, id, id))v17 + 2))(v17, v8, v7);

}

void sub_1435FC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_mocq_readingSessionWithAssetID:sessionID:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48)));
  (*(void (**)(_QWORD, BOOL))(*(_QWORD *)(a1 + 56) + 16))(*(_QWORD *)(a1 + 56), v2 != 0);

}

void sub_143808(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_144200(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = objc_retainBlock(*(id *)(*(_QWORD *)(a1 + 32) + 16));
  v6 = v5;
  if (v5)
    (*((void (**)(id, id, uint64_t))v5 + 2))(v5, v9, a3);

  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)(v7 + 16);
  *(_QWORD *)(v7 + 16) = 0;

}

double CGSizeScaleToScreen(double a1)
{
  return a1 * mainScreenScaleFactor();
}

void sub_144CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v8 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_144D08(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_144D18(uint64_t a1)
{

}

void sub_144D20(uint64_t a1)
{
  dispatch_queue_t v2;
  uint64_t v3;
  void *v4;

  v2 = dispatch_queue_create("BCLazyValue", 0);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 16);
  *(_QWORD *)(v3 + 16) = v2;

}

id sub_144D58(uint64_t a1, uint64_t a2)
{
  id result;

  result = objc_retainBlock(*(id *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_144D80(uint64_t a1)
{

}

void sub_144D88(_QWORD *a1)
{
  uint64_t v2;
  dispatch_group_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD v18[11];

  v2 = a1[4];
  if (!*(_QWORD *)(v2 + 56))
  {
    v13 = *(_QWORD *)(v2 + 48);
    if (!v13)
      return;
    if ((*(_BYTE *)(v2 + 40) & 1) == 0)
    {
      v14 = (*(uint64_t (**)(void))(v13 + 16))();
      v15 = objc_claimAutoreleasedReturnValue(v14);
      v16 = *(_QWORD *)(a1[5] + 8);
      v17 = *(void **)(v16 + 40);
      *(_QWORD *)(v16 + 40) = v15;

      objc_storeStrong((id *)(a1[4] + 32), *(id *)(*(_QWORD *)(a1[5] + 8) + 40));
      *(_QWORD *)(a1[4] + 40) |= 1uLL;
      return;
    }
    goto LABEL_11;
  }
  if (!*(_QWORD *)(v2 + 24))
  {
    v3 = dispatch_group_create();
    v4 = a1[4];
    v5 = *(void **)(v4 + 24);
    *(_QWORD *)(v4 + 24) = v3;

    v2 = a1[4];
  }
  v6 = *(_QWORD *)(v2 + 40);
  if ((v6 & 1) != 0)
  {
LABEL_11:
    objc_storeStrong((id *)(*(_QWORD *)(a1[5] + 8) + 40), *(id *)(v2 + 32));
    return;
  }
  if ((v6 & 2) == 0)
  {
    *(_QWORD *)(v2 + 40) = v6 | 2;
    dispatch_group_enter(*(dispatch_group_t *)(a1[4] + 24));
    v7 = a1[4];
    v8 = *(_QWORD *)(v7 + 56);
    v18[6] = _NSConcreteStackBlock;
    v18[7] = 3221225472;
    v18[8] = sub_144EFC;
    v18[9] = &unk_292540;
    v18[10] = v7;
    (*(void (**)(void))(v8 + 16))();
    v2 = a1[4];
  }
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_144FCC;
  v18[3] = &unk_28E468;
  v9 = a1[5];
  v18[4] = v2;
  v18[5] = v9;
  v10 = objc_retainBlock(v18);
  v11 = *(_QWORD *)(a1[6] + 8);
  v12 = *(void **)(v11 + 40);
  *(_QWORD *)(v11 + 40) = v10;

}

void sub_144EFC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  id v6;
  _QWORD v7[5];
  id v8;

  v3 = a2;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(NSObject **)(v4 + 16);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_144F7C;
  v7[3] = &unk_28B808;
  v7[4] = v4;
  v8 = v3;
  v6 = v3;
  dispatch_async(v5, v7);

}

void sub_144F7C(uint64_t a1)
{
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40) &= ~2uLL;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40) |= 1uLL;
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 32), *(id *)(a1 + 40));
  dispatch_group_leave(*(dispatch_group_t *)(*(_QWORD *)(a1 + 32) + 24));
}

void sub_144FCC(uint64_t a1)
{
  dispatch_semaphore_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  _QWORD block[5];
  dispatch_semaphore_t v9;
  uint64_t v10;

  v2 = dispatch_semaphore_create(0);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(NSObject **)(v3 + 16);
  v5 = *(NSObject **)(v3 + 24);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_14506C;
  block[3] = &unk_28B7E0;
  v9 = v2;
  v10 = v4;
  block[4] = v3;
  v7 = v2;
  dispatch_group_notify(v5, v6, block);
  dispatch_semaphore_wait(v7, 0xFFFFFFFFFFFFFFFFLL);

}

intptr_t sub_14506C(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 32));
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

_DWORD *sub_145210(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;
  _DWORD *v4;
  id v5;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "reportState"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSPropertyListSerialization dataWithPropertyList:format:options:error:](NSPropertyListSerialization, "dataWithPropertyList:format:options:error:", v1, 200, 0, 0));
  v3 = objc_msgSend(v2, "length");
  v4 = malloc_type_calloc(1uLL, (size_t)v3 + 200, 0xA7F3D328uLL);
  *v4 = 1;
  v4[1] = (_DWORD)v3;
  __strlcpy_chk(v4 + 34, "BCFutureValue threading state", 64, 64);
  v5 = objc_retainAutorelease(v2);
  memcpy(v4 + 50, objc_msgSend(v5, "bytes"), (size_t)v3);

  return v4;
}

void sub_1454A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1454CC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend((id)qword_311408, "allObjects"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_14559C(uint64_t a1)
{
  void *v2;
  id v3;
  NSMutableArray *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waitingBlocks"));
  v3 = objc_msgSend(v2, "count");

  if (v3)
  {
    v4 = objc_opt_new(NSMutableArray);
    v12 = 0u;
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waitingBlocks", 0));
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v13;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v13 != v8)
            objc_enumerationMutation(v5);
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithPointer:](NSValue, "valueWithPointer:", objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)v9), "caller")));
          -[NSMutableArray addObject:](v4, "addObject:", v10);

          v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      }
      while (v7);
    }

    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithPointer:](NSValue, "valueWithPointer:", *(_QWORD *)(a1 + 32)));
    objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v4, v11);

  }
}

id sub_1457F0(uint64_t a1)
{
  return objc_msgSend((id)qword_311408, "addObject:", *(_QWORD *)(a1 + 32));
}

id sub_145980(uint64_t a1)
{
  return objc_msgSend((id)qword_311408, "removeObject:", *(_QWORD *)(a1 + 32));
}

void sub_145A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_145A9C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  if ((objc_msgSend(*(id *)(a1 + 32), "hasValue") & 1) == 0
    && (objc_msgSend(*(id *)(a1 + 32), "cancelled") & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "setCancelled:", 1);
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waitingBlocks"));
    v3 = objc_msgSend(v2, "copy");
    v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v5 = *(void **)(v4 + 40);
    *(_QWORD *)(v4 + 40) = v3;

    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waitingBlocks"));
    objc_msgSend(v6, "removeAllObjects");

  }
}

void sub_145CDC(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_145D9C(uint64_t a1)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(id *)(*(_QWORD *)(a1 + 32) + 24));
  if (*(_QWORD *)(a1 + 48))
    **(_QWORD **)(a1 + 48) = objc_retainAutorelease(*(id *)(*(_QWORD *)(a1 + 32) + 32));
}

void sub_145F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_145F2C(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;

  v3 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

}

void sub_14625C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_14628C(_QWORD *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id obj;

  v2 = (void *)a1[4];
  v3 = a1[5];
  v4 = *(_QWORD *)(a1[7] + 8);
  v5 = *(void **)(v4 + 40);
  v6 = a1[9];
  v7 = *(_QWORD *)(a1[8] + 8);
  v9 = *(id *)(v7 + 40);
  obj = v5;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "sq_get:caller:value:error:", v3, v6, &obj, &v9));
  objc_storeStrong((id *)(v4 + 40), obj);
  objc_storeStrong((id *)(v7 + 40), v9);
  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = v8 == 0;

}

void sub_1464BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  uint64_t v14;
  va_list va;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a12);
  va_start(va, a12);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v12 - 120), 8);
  _Unwind_Resume(a1);
}

void sub_1464F4(uint64_t a1)
{
  unsigned int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  dispatch_time_t v14;
  uint64_t v15;
  NSObject *v16;
  _QWORD v17[5];
  id v18;

  v2 = objc_msgSend(*(id *)(a1 + 32), "hasValue");
  v3 = *(void **)(a1 + 32);
  if (v2)
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "value"));
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "error"));
LABEL_6:
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v7;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
    return;
  }
  if (objc_msgSend(v3, "cancelled") || *(_QWORD *)(a1 + 72) < dispatch_time(0, 0))
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = 0;

    v7 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BCFutureErrorDomain"), 0, 0));
    goto LABEL_6;
  }
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "sq_get:caller:value:error:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 80), 0, 0));
  v13 = v12;
  if (v12)
  {
    v14 = *(_QWORD *)(a1 + 72);
    v15 = *(_QWORD *)(a1 + 32);
    v16 = *(NSObject **)(v15 + 16);
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_14665C;
    v17[3] = &unk_28B808;
    v17[4] = v15;
    v18 = v12;
    dispatch_after(v14, v16, v17);

  }
}

void sub_14665C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  dispatch_queue_global_t global_queue;
  NSObject *v6;
  _QWORD block[4];
  id v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waitingBlocks"));
  v3 = objc_msgSend(v2, "indexOfObjectIdenticalTo:", *(_QWORD *)(a1 + 40));

  if (v3 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waitingBlocks"));
    objc_msgSend(v4, "removeObject:", *(_QWORD *)(a1 + 40));

    global_queue = dispatch_get_global_queue(0, 0);
    v6 = objc_claimAutoreleasedReturnValue(global_queue);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_146734;
    block[3] = &unk_28B960;
    v8 = *(id *)(a1 + 40);
    dispatch_async(v6, block);

  }
}

void sub_146734(uint64_t a1)
{
  void *v1;
  void (**v2)(id, _QWORD, void *);

  v2 = (void (**)(id, _QWORD, void *))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "block"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BCFutureErrorDomain"), 0, 0));
  v2[2](v2, 0, v1);

}

void sub_146AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_146AC4(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  if ((objc_msgSend(*(id *)(a1 + 32), "hasValue") & 1) == 0
    && (objc_msgSend(*(id *)(a1 + 32), "cancelled") & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "setValue:", *(_QWORD *)(a1 + 40));
    objc_msgSend(*(id *)(a1 + 32), "setError:", *(_QWORD *)(a1 + 48));
    objc_msgSend(*(id *)(a1 + 32), "setHasValue:", 1);
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waitingBlocks"));
    v3 = objc_msgSend(v2, "copy");
    v4 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v5 = *(void **)(v4 + 40);
    *(_QWORD *)(v4 + 40) = v3;

    v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "waitingBlocks"));
    objc_msgSend(v6, "removeAllObjects");

  }
}

void sub_147630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_147654(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1476CC;
  block[3] = &unk_28CC18;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_1476CC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "resetButtonState");

}

void sub_1477A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1477CC(uint64_t a1)
{
  dispatch_time_t v2;
  _QWORD block[4];
  id v4;

  v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_147868;
  block[3] = &unk_28CC18;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_147868(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "resetButtonState");

}

void sub_14967C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id WeakRetained;

  v2 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 48) = 0;
  v3 = *(_QWORD **)(a1 + 32);
  v4 = v3[5];
  if (v2 == v4)
  {
    v3[5] = 0;
    WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 64));
    objc_msgSend(WeakRetained, "hoverInteractionDidSettle:", *(_QWORD *)(a1 + 32));

  }
  else if (v4)
  {
    _objc_msgSend(v3, "_checkIfSettledWithTime:");
  }
}

void sub_149850(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  __int128 v10;

  v5 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1498F0;
  v7[3] = &unk_292640;
  v10 = *(_OWORD *)(a1 + 40);
  v8 = *(id *)(a1 + 32);
  v9 = v5;
  v6 = v5;
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v7);

}

id sub_1498F0(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id result;
  CGRect v7;

  objc_msgSend(a2, "CGRectValue");
  result = (id)CGRectContainsPoint(v7, *(CGPoint *)(a1 + 48));
  if ((_DWORD)result)
  {
    result = objc_msgSend(*(id *)(a1 + 32), "addObject:", *(_QWORD *)(a1 + 40));
    *a4 = 1;
  }
  return result;
}

uint64_t ClampImageSize(uint64_t result, int a2, _QWORD *a3)
{
  int8x16_t *v4;
  float64x2_t v5;
  double v6;
  BOOL v8;
  void *v10;
  void *v11;
  void *v12;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  _QWORD v20[2];
  _QWORD v21[2];

  if (result)
  {
    v4 = (int8x16_t *)result;
    v5 = *(float64x2_t *)result;
    v6 = *(double *)(result + 8);
    if (a2 && v5.f64[0] == 0.0 && v6 == 0.0)
      return 0;
    _NF = v5.f64[0] > 4096.0 || v5.f64[0] < 16.0;
    v8 = _NF || v6 < 16.0;
    if (!v8 && v6 <= 4096.0)
    {
      return 0;
    }
    else
    {
      if (a3)
      {
        v20[0] = CFSTR("BICDescribedImageWidth");
        v19 = v5;
        v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:"));
        v20[1] = CFSTR("BICDescribedImageHeight");
        v21[0] = v10;
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v6));
        v21[1] = v11;
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v21, v20, 2));
        *a3 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("BICDescribedImageErrorDomain"), 0, v12));

        v5 = v19;
      }
      __asm { FMOV            V1.2D, #16.0 }
      v17 = vmaxnmq_f64(v5, _Q1);
      v18 = (float64x2_t)vdupq_n_s64(0x40B0000000000000uLL);
      *v4 = vbslq_s8((int8x16_t)vcgtq_f64(v17, v18), (int8x16_t)v18, (int8x16_t)v17);
      return 1;
    }
  }
  return result;
}

void BCReportAssertionFailureWithMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v13;
  __CFString *v14;
  void *v15;
  __CFString *v16;
  void *v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  __CFString *v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  __CFString *v27;

  v13 = a5;
  if (objc_msgSend(v13, "length"))
  {
    v14 = (__CFString *)objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:arguments:", v13, &a9);
    if (!a1)
      goto LABEL_6;
LABEL_5:
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithCString:encoding:](NSString, "stringWithCString:encoding:", a1, 1));
    v16 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "lastPathComponent"));

    if (v16)
      goto LABEL_7;
    goto LABEL_6;
  }
  v14 = &stru_296430;
  if (a1)
    goto LABEL_5;
LABEL_6:
  v16 = &stru_296430;
LABEL_7:
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR))
  {
    v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a2));
    *(_DWORD *)buf = 136316162;
    v19 = a4;
    v20 = 2080;
    v21 = a3;
    v22 = 2112;
    v23 = v16;
    v24 = 2112;
    v25 = v17;
    v26 = 2112;
    v27 = v14;
    _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "*** Assertion failure: %s in %s - %@:%@ %@", buf, 0x34u);

  }
}

id sub_14E504(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKey:", a2));
  v3 = objc_opt_class(NSAttributeDescription);
  if ((objc_opt_isKindOfClass(v2, v3) & 1) != 0)
    v4 = objc_msgSend(v2, "attributeType");
  else
    v4 = 0;

  return v4;
}

void sub_1506C8(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;

  v2 = objc_alloc_init((Class)objc_opt_class(*(_QWORD *)(a1 + 32), a2));
  v3 = (void *)qword_311418;
  qword_311418 = (uint64_t)v2;

}

void sub_150DD4(uint64_t a1)
{
  NSObject *v2;
  id v3;
  dispatch_queue_attr_t v4;
  NSObject *v5;
  dispatch_queue_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  id v19;
  id v20;
  dispatch_queue_t queue;
  _QWORD block[4];
  id v23;
  id v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD v27[4];
  id v28;
  id v29;
  NSObject *v30;
  _QWORD *v31;
  _QWORD v32[4];
  dispatch_queue_t v33;
  id v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD v37[5];
  id v38;
  _QWORD v39[5];
  id v40;

  v2 = dispatch_group_create();
  v3 = objc_alloc_init((Class)NSMutableArray);
  v39[0] = 0;
  v39[1] = v39;
  v39[2] = 0x3032000000;
  v39[3] = sub_1510E8;
  v39[4] = sub_1510F8;
  v40 = 0;
  v37[0] = 0;
  v37[1] = v37;
  v37[2] = 0x3032000000;
  v37[3] = sub_1510E8;
  v37[4] = sub_1510F8;
  v38 = 0;
  v4 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = dispatch_queue_create("com.apple.iBooks.AEUserPublishing", v5);

  v32[0] = _NSConcreteStackBlock;
  v32[1] = 3221225472;
  v32[2] = sub_151100;
  v32[3] = &unk_292760;
  queue = v6;
  v33 = queue;
  v35 = v39;
  v36 = v37;
  v20 = v3;
  v34 = v20;
  v7 = objc_retainBlock(v32);
  v8 = (char *)objc_msgSend(*(id *)(a1 + 32), "count");
  if (v8)
  {
    v9 = 0;
    v10 = 0;
    v11 = AMSLookupMaximumBatchSize;
    v12 = AMSLookupMaximumBatchSize;
    do
    {
      if ((unint64_t)v8 >= v12)
        v13 = (char *)v12;
      else
        v13 = v8;
      dispatch_group_enter(v2);
      v14 = objc_alloc(*(Class *)(a1 + 56));
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "subarrayWithRange:", v10, &v13[v9]));
      v16 = objc_msgSend(v14, "initWithAdamIDs:keyProfile:", v15, *(_QWORD *)(a1 + 40));

      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472;
      v27[2] = sub_15127C;
      v27[3] = &unk_292788;
      v31 = v7;
      v17 = v16;
      v28 = v17;
      v29 = *(id *)(a1 + 32);
      v18 = v2;
      v30 = v18;
      objc_msgSend(v17, "startWithLookupBlock:", v27);
      v10 += v11;
      dispatch_group_wait(v18, 0xFFFFFFFFFFFFFFFFLL);

      v12 += v11;
      v9 -= v11;
    }
    while (v10 < (unint64_t)v8);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_151490;
  block[3] = &unk_2927B0;
  v23 = v20;
  v24 = *(id *)(a1 + 48);
  v25 = v37;
  v26 = v39;
  v19 = v20;
  dispatch_async(queue, block);

  _Block_object_dispose(v37, 8);
  _Block_object_dispose(v39, 8);

}

void sub_1510C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 200), 8);
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1510E8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_1510F8(uint64_t a1)
{

}

void sub_151100(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  __int128 v16;
  _QWORD block[4];
  id v18;
  id v19;
  id v20;
  __int128 v21;
  uint64_t v22;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1511FC;
  block[3] = &unk_292738;
  v11 = *(_QWORD *)(a1 + 56);
  v18 = v9;
  v19 = v8;
  v16 = *(_OWORD *)(a1 + 40);
  v22 = v11;
  v20 = v7;
  v12 = (id)v16;
  v21 = v16;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  dispatch_async(v10, block);

}

void sub_1511FC(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id *v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v4 = *(_QWORD *)(v2 + 40);
  v3 = (id *)(v2 + 40);
  if (!v4)
    objc_storeStrong(v3, *(id *)(a1 + 32));
  v5 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "compare:", *(_QWORD *)(a1 + 40));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v7 = (id *)(v6 + 40);
  if (v5 != (id)-1)
    v6 = a1;
  objc_storeStrong(v7, *(id *)(v6 + 40));
  if (*(_QWORD *)(a1 + 48))
    objc_msgSend(*(id *)(a1 + 56), "addObject:");
}

void sub_15127C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *i;
  uint64_t v14;
  void *v15;
  AEUserPublishingProductProfile *v16;
  id v17;
  void *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];

  v5 = a2;
  if (a3)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }
  else
  {
    v6 = objc_msgSend((id)objc_opt_class(*(_QWORD *)(a1 + 32)), "resultsDictionaryFromLookupResult:", v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "expirationDate"));
    v8 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v7, "count"));
    v20 = 0u;
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v19 = a1;
    v9 = *(id *)(a1 + 40);
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v21;
      do
      {
        for (i = 0; i != v11; i = (char *)i + 1)
        {
          if (*(_QWORD *)v21 != v12)
            objc_enumerationMutation(v9);
          v14 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)i);
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", v14));
          if (v15)
          {
            v16 = -[AEUserPublishingProductProfile initWithProfileDictionary:]([AEUserPublishingProductProfile alloc], "initWithProfileDictionary:", v15);
            if (v16)
              objc_msgSend(v8, "setObject:forKeyedSubscript:", v16, v14);

          }
        }
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      }
      while (v11);
    }

    a1 = v19;
    (*(void (**)(void))(*(_QWORD *)(v19 + 56) + 16))();

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
  v17 = (id)objc_opt_self(*(_QWORD *)(a1 + 32));

}

void sub_151490(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *i;
  uint64_t v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  if ((unint64_t)objc_msgSend(*(id *)(a1 + 32), "count") > 1)
  {
    v12 = 0u;
    v13 = 0u;
    v10 = 0u;
    v11 = 0u;
    v3 = *(id *)(a1 + 32);
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v4)
    {
      v5 = v4;
      v2 = 0;
      v6 = *(_QWORD *)v11;
      do
      {
        for (i = 0; i != v5; i = (char *)i + 1)
        {
          if (*(_QWORD *)v11 != v6)
            objc_enumerationMutation(v3);
          v8 = *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i);
          if (v2)
          {
            objc_msgSend(v2, "addEntriesFromDictionary:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i));
          }
          else
          {
            v9 = objc_alloc((Class)NSMutableDictionary);
            v2 = objc_msgSend(v9, "initWithDictionary:", v8, (_QWORD)v10);
          }
        }
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      }
      while (v5);
    }
    else
    {
      v2 = 0;
    }

  }
  else
  {
    v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstObject"));
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_1519A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1519E0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v7 = a2;
  v8 = a4;
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v10 = *(void **)(v9 + 40);
  *(_QWORD *)(v9 + 40) = v7;
  v21 = v7;
  v11 = a3;

  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v8;
  v14 = v8;

  v16 = objc_opt_class(NSHTTPURLResponse, v15);
  v17 = BUDynamicCast(v16, v11);
  v18 = objc_claimAutoreleasedReturnValue(v17);

  v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v20 = *(void **)(v19 + 40);
  *(_QWORD *)(v19 + 40) = v18;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t AEAnnotationEditorTagEqualToAEAnnotationStyle(uint64_t a1, int a2)
{
  BOOL v2;
  uint64_t result;

  switch(a1)
  {
    case 1:
      v2 = a2 == 3;
      goto LABEL_9;
    case 2:
      v2 = a2 == 1;
      goto LABEL_9;
    case 3:
      v2 = a2 == 2;
      goto LABEL_9;
    case 4:
      v2 = a2 == 4;
      goto LABEL_9;
    case 5:
      v2 = a2 == 5;
      goto LABEL_9;
    case 6:
      v2 = a2 == 6;
LABEL_9:
      result = v2;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

void sub_154548(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "annotation"));
  objc_msgSend(v1, "p_removeAnnotation:", v2);

}

void sub_154A08(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "set");
  v2 = (id)objc_claimAutoreleasedReturnValue(+[UIBezierPath bezierPathWithOvalInRect:](UIBezierPath, "bezierPathWithOvalInRect:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)));
  objc_msgSend(v2, "fill");

}

void sub_154C54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  _QWORD v53[5];

  v53[0] = _NSConcreteStackBlock;
  v53[1] = 3221225472;
  v53[2] = sub_154F18;
  v53[3] = &unk_292878;
  v53[4] = *(_QWORD *)(a1 + 32);
  v1 = objc_retainBlock(v53);
  v2 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 4);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)qword_311428;
  qword_311428 = v3;

  v5 = ((uint64_t (*)(_QWORD *, _QWORD))v1[2])(v1, 0);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = (void *)qword_311430;
  qword_311430 = v6;

  v8 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 1);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = (void *)qword_311438;
  qword_311438 = v9;

  v11 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 2);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  v13 = (void *)qword_311440;
  qword_311440 = v12;

  v14 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 3);
  v15 = objc_claimAutoreleasedReturnValue(v14);
  v16 = (void *)qword_311448;
  qword_311448 = v15;

  v17 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 5);
  v18 = objc_claimAutoreleasedReturnValue(v17);
  v19 = (void *)qword_311450;
  qword_311450 = v18;

  v20 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 11);
  v21 = objc_claimAutoreleasedReturnValue(v20);
  v22 = (void *)qword_311458;
  qword_311458 = v21;

  v23 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 6);
  v24 = objc_claimAutoreleasedReturnValue(v23);
  v25 = (void *)qword_311460;
  qword_311460 = v24;

  v26 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 12);
  v27 = objc_claimAutoreleasedReturnValue(v26);
  v28 = (void *)qword_311468;
  qword_311468 = v27;

  v29 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 7);
  v30 = objc_claimAutoreleasedReturnValue(v29);
  v31 = (void *)qword_311470;
  qword_311470 = v30;

  v32 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 13);
  v33 = objc_claimAutoreleasedReturnValue(v32);
  v34 = (void *)qword_311478;
  qword_311478 = v33;

  v35 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 8);
  v36 = objc_claimAutoreleasedReturnValue(v35);
  v37 = (void *)qword_311480;
  qword_311480 = v36;

  v38 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 14);
  v39 = objc_claimAutoreleasedReturnValue(v38);
  v40 = (void *)qword_311488;
  qword_311488 = v39;

  v41 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 9);
  v42 = objc_claimAutoreleasedReturnValue(v41);
  v43 = (void *)qword_311490;
  qword_311490 = v42;

  v44 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 15);
  v45 = objc_claimAutoreleasedReturnValue(v44);
  v46 = (void *)qword_311498;
  qword_311498 = v45;

  v47 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 10);
  v48 = objc_claimAutoreleasedReturnValue(v47);
  v49 = (void *)qword_3114A0;
  qword_3114A0 = v48;

  v50 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 16);
  v51 = objc_claimAutoreleasedReturnValue(v50);
  v52 = (void *)qword_3114A8;
  qword_3114A8 = v51;

}

id sub_154F18(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[6];
  _QWORD v19[6];

  v18[0] = &off_2AA598;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_themeForStyle:pageTheme:", 1, a2));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "highlightColor"));
  v19[0] = v16;
  v18[1] = &off_2AA5B0;
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_themeForStyle:pageTheme:", 2, a2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "highlightColor"));
  v19[1] = v4;
  v18[2] = &off_2AA5C8;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_themeForStyle:pageTheme:", 3, a2));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "highlightColor"));
  v19[2] = v6;
  v18[3] = &off_2AA5E0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_themeForStyle:pageTheme:", 4, a2));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "highlightColor"));
  v19[3] = v8;
  v18[4] = &off_2AA5F8;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_themeForStyle:pageTheme:", 5, a2));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "highlightColor"));
  v19[4] = v10;
  v18[5] = &off_2AA610;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_themeForStyle:pageTheme:", 6, a2));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "noteFillColor"));
  v19[5] = v12;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v19, v18, 6));

  return v13;
}

void sub_1555F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[5];

  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_155704;
  v17[3] = &unk_292878;
  v17[4] = *(_QWORD *)(a1 + 32);
  v1 = objc_retainBlock(v17);
  v2 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 4);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)qword_3114B8;
  qword_3114B8 = v3;

  v5 = ((uint64_t (*)(_QWORD *, _QWORD))v1[2])(v1, 0);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = (void *)qword_3114C0;
  qword_3114C0 = v6;

  v8 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 1);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = (void *)qword_3114C8;
  qword_3114C8 = v9;

  v11 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 2);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  v13 = (void *)qword_3114D0;
  qword_3114D0 = v12;

  v14 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 3);
  v15 = objc_claimAutoreleasedReturnValue(v14);
  v16 = (void *)qword_3114D8;
  qword_3114D8 = v15;

}

id sub_155704(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v20;
  void *v21;
  _QWORD v22[6];
  _QWORD v23[6];

  v22[0] = &off_2AA598;
  v4 = *(void **)(a1 + 32);
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "p_colorForTag:pageTheme:", 1, a2));
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "p_colorControlImageForColor:", v21));
  v23[0] = v20;
  v22[1] = &off_2AA5B0;
  v5 = *(void **)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "p_colorForTag:pageTheme:", 2, a2));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "p_colorControlImageForColor:", v6));
  v23[1] = v7;
  v22[2] = &off_2AA5C8;
  v8 = *(void **)(a1 + 32);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "p_colorForTag:pageTheme:", 3, a2));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "p_colorControlImageForColor:", v9));
  v23[2] = v10;
  v22[3] = &off_2AA5E0;
  v11 = *(void **)(a1 + 32);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "p_colorForTag:pageTheme:", 4, a2));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "p_colorControlImageForColor:", v12));
  v23[3] = v13;
  v22[4] = &off_2AA5F8;
  v14 = *(void **)(a1 + 32);
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "p_colorForTag:pageTheme:", 5, a2));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "p_colorControlImageForColor:", v15));
  v23[4] = v16;
  v22[5] = &off_2AA610;
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_colorControlUnderlineImageForPageTheme:", a2));
  v23[5] = v17;
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v23, v22, 6));

  return v18;
}

void sub_155EE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[5];

  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_155FFC;
  v17[3] = &unk_292878;
  v17[4] = *(_QWORD *)(a1 + 32);
  v1 = objc_retainBlock(v17);
  v2 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 4);
  v3 = objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)qword_3114E8;
  qword_3114E8 = v3;

  v5 = ((uint64_t (*)(_QWORD *, _QWORD))v1[2])(v1, 0);
  v6 = objc_claimAutoreleasedReturnValue(v5);
  v7 = (void *)qword_3114F0;
  qword_3114F0 = v6;

  v8 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 1);
  v9 = objc_claimAutoreleasedReturnValue(v8);
  v10 = (void *)qword_3114F8;
  qword_3114F8 = v9;

  v11 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 2);
  v12 = objc_claimAutoreleasedReturnValue(v11);
  v13 = (void *)qword_311500;
  qword_311500 = v12;

  v14 = ((uint64_t (*)(_QWORD *, uint64_t))v1[2])(v1, 3);
  v15 = objc_claimAutoreleasedReturnValue(v14);
  v16 = (void *)qword_311508;
  qword_311508 = v15;

}

id sub_155FFC(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v12[6];
  _QWORD v13[6];

  v12[0] = &off_2AA598;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_buildPaletteImageForFrontTag:middleTag:backTag:pageTheme:", 1, 2, 3, a2));
  v13[0] = v4;
  v12[1] = &off_2AA5B0;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_buildPaletteImageForFrontTag:middleTag:backTag:pageTheme:", 2, 3, 5, a2));
  v13[1] = v5;
  v12[2] = &off_2AA5C8;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_buildPaletteImageForFrontTag:middleTag:backTag:pageTheme:", 3, 4, 5, a2));
  v13[2] = v6;
  v12[3] = &off_2AA5E0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_buildPaletteImageForFrontTag:middleTag:backTag:pageTheme:", 4, 5, 2, a2));
  v13[3] = v7;
  v12[4] = &off_2AA5F8;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_buildPaletteImageForFrontTag:middleTag:backTag:pageTheme:", 5, 1, 2, a2));
  v13[4] = v8;
  v12[5] = &off_2AA610;
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "p_buildPaletteImageForFrontTag:middleTag:backTag:pageTheme:", 6, 2, 3, a2));
  v13[5] = v9;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v13, v12, 6));

  return v10;
}

void sub_1563FC(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v22[5];
  id v23;

  v2 = IMCommonCoreBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageNamed:inBundle:](UIImage, "imageNamed:inBundle:", CFSTR("ib_text_pop_icon_note"), v3));

  NSLog(CFSTR("stencil = %@"), v4);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_156574;
  v22[3] = &unk_2928A0;
  v22[4] = *(_QWORD *)(a1 + 32);
  v23 = v4;
  v5 = v4;
  v6 = objc_retainBlock(v22);
  v7 = ((uint64_t (*)(_QWORD *, uint64_t))v6[2])(v6, 4);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = (void *)qword_311518;
  qword_311518 = v8;

  v10 = ((uint64_t (*)(_QWORD *, _QWORD))v6[2])(v6, 0);
  v11 = objc_claimAutoreleasedReturnValue(v10);
  v12 = (void *)qword_311520;
  qword_311520 = v11;

  v13 = ((uint64_t (*)(_QWORD *, uint64_t))v6[2])(v6, 1);
  v14 = objc_claimAutoreleasedReturnValue(v13);
  v15 = (void *)qword_311528;
  qword_311528 = v14;

  v16 = ((uint64_t (*)(_QWORD *, uint64_t))v6[2])(v6, 2);
  v17 = objc_claimAutoreleasedReturnValue(v16);
  v18 = (void *)qword_311530;
  qword_311530 = v17;

  v19 = ((uint64_t (*)(_QWORD *, uint64_t))v6[2])(v6, 3);
  v20 = objc_claimAutoreleasedReturnValue(v19);
  v21 = (void *)qword_311538;
  qword_311538 = v20;

}

id sub_156574(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD v30[6];
  _QWORD v31[6];

  v30[0] = &off_2AA598;
  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "p_colorForTag:pageTheme:", 1, a2));
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "p_monochromaticImageFromImage:withColor:", v5, v29));
  v31[0] = v28;
  v30[1] = &off_2AA5B0;
  v6 = *(void **)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "p_colorForTag:pageTheme:", 2, a2));
  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "p_monochromaticImageFromImage:withColor:", v7, v27));
  v31[1] = v26;
  v30[2] = &off_2AA5C8;
  v8 = *(void **)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "p_colorForTag:pageTheme:", 3, a2));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "p_monochromaticImageFromImage:withColor:", v9, v10));
  v31[2] = v11;
  v30[3] = &off_2AA5E0;
  v12 = *(void **)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "p_colorForTag:pageTheme:", 4, a2));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "p_monochromaticImageFromImage:withColor:", v13, v14));
  v31[3] = v15;
  v30[4] = &off_2AA5F8;
  v16 = *(void **)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "p_colorForTag:pageTheme:", 5, a2));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "p_monochromaticImageFromImage:withColor:", v17, v18));
  v31[4] = v19;
  v30[5] = &off_2AA610;
  v20 = *(void **)(a1 + 32);
  v21 = *(_QWORD *)(a1 + 40);
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "p_colorForTag:pageTheme:", 6, a2));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "p_monochromaticImageFromImage:withColor:", v21, v22));
  v31[5] = v23;
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v31, v30, 6));

  return v24;
}

void sub_156D7C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
  objc_msgSend(v2, "messageViewController:didFailWithError:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

uint64_t sub_156DBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_157198(void *a1, CGColorSpace *a2, const CGFloat *a3)
{
  id v5;
  CGColor *v6;

  v5 = a1;
  v6 = CGColorCreate(a2, a3);
  objc_msgSend(v5, "setBorderColor:", v6);

  CGColorRelease(v6);
}

void sub_1573D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1573EC(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_setDescribedImage:", *(_QWORD *)(a1 + 32));

}

void BCNormalizedInsetsForRects(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  id v16;
  NSObject *v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  if (CGRectIsEmpty(*(CGRect *)&a1))
  {
    v16 = BCCoverAnimationLog();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      sub_1B9800(v17, a1, a2, a3, a4);

  }
  else
  {
    v18.origin.x = a5;
    v18.origin.y = a6;
    v18.size.width = a7;
    v18.size.height = a8;
    CGRectGetMinX(v18);
    v19.origin.x = a1;
    v19.origin.y = a2;
    v19.size.width = a3;
    v19.size.height = a4;
    CGRectGetMinX(v19);
    v20.origin.x = a5;
    v20.origin.y = a6;
    v20.size.width = a7;
    v20.size.height = a8;
    CGRectGetMinY(v20);
    v21.origin.x = a1;
    v21.origin.y = a2;
    v21.size.width = a3;
    v21.size.height = a4;
    CGRectGetMinY(v21);
    v22.origin.x = a1;
    v22.origin.y = a2;
    v22.size.width = a3;
    v22.size.height = a4;
    CGRectGetMaxX(v22);
    v23.origin.x = a5;
    v23.origin.y = a6;
    v23.size.width = a7;
    v23.size.height = a8;
    CGRectGetMaxX(v23);
    v24.origin.x = a1;
    v24.origin.y = a2;
    v24.size.width = a3;
    v24.size.height = a4;
    CGRectGetMaxY(v24);
    v25.origin.x = a5;
    v25.origin.y = a6;
    v25.size.width = a7;
    v25.size.height = a8;
    CGRectGetMaxY(v25);
  }
}

double BCRectByApplyingNormalizedInsets(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a3 * a6;
}

double BCRectByUnapplyingNormalizedInsets(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  double v18;
  uint64_t v21;
  double v22;

  v18 = a6 + a8;
  if (a6 + a8 >= 1.0 || a5 + a7 >= 1.0)
  {
    v22 = a1;
    BCReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/Alder/frameworks/BookCore/BookCore/Utilities/BCNormalizedInsetsUtilities.m", 51, (uint64_t)"CGRect BCRectByUnapplyingNormalizedInsets(CGRect, UIEdgeInsets)", (uint64_t)"xInsets < 1.0 && yInsets < 1.0", CFSTR("Bad insets"), a14, a15, a16, v21);
    a1 = v22;
  }
  return a1 - a6 * (a3 / (1.0 - v18));
}

id sub_159624(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", &__kCFBooleanTrue, CFSTR("bc_isPresentingCardStack"));
  return objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 48));
}

void sub_15974C(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, 0);
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

id IMBloomFilterCharacterHashProvider()
{
  if (qword_311570 != -1)
    dispatch_once(&qword_311570, &stru_292908);
  return objc_retainBlock((id)qword_311568);
}

void sub_159C20(uint64_t a1, void *a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;

  v3 = a2;
  (*(void (**)(void))(v3[1] + 16))();
  v4 = v3[4];
  if (v4 >= 1)
  {
    v5 = 8 * v3[6];
    v6 = (unint64_t *)(a1 + 8);
    v7 = (unint64_t *)&v9;
    do
    {
      v8 = *v7++;
      *v6 = (v8 % v5) >> 3;
      *((_BYTE *)v6 - 8) = (v8 % v5) & 7;
      v6 += 2;
      --v4;
    }
    while (v4);
  }

}

void IMWithAccessToCharacters(void *a1, void *a2)
{
  void (**v3)(id, _BYTE *, id);
  id v4;
  id v5;
  _BYTE *v6;
  id v7;
  NSZone *v8;
  id v9;
  NSZone *v10;
  _BYTE v11[256];

  v3 = a2;
  v4 = a1;
  v5 = objc_msgSend(v4, "length");
  v6 = v11;
  if ((unint64_t)v5 >= 0x81)
  {
    v7 = v5;
    v8 = NSDefaultMallocZone();
    v6 = NSZoneMalloc(v8, 2 * (_QWORD)v7);
  }
  objc_msgSend(v4, "getCharacters:", v6);
  v9 = objc_msgSend(v4, "length");

  v3[2](v3, v6, v9);
  if (v6 != v11)
  {
    v10 = NSDefaultMallocZone();
    NSZoneFree(v10, v6);
  }
}

id IMBloomFilterStringHashProvider()
{
  if (qword_311550 != -1)
    dispatch_once(&qword_311550, &stru_2928C8);
  return objc_retainBlock((id)qword_311548);
}

void sub_159F60(id a1)
{
  id v1;
  id v2;
  id v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  v1 = IMBloomFilterCharacterHashProvider();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_15A07C;
  v5[3] = &unk_292980;
  v6 = (id)objc_claimAutoreleasedReturnValue(v1);
  v2 = v6;
  v3 = objc_msgSend(v5, "copy");

  v4 = (void *)qword_311548;
  qword_311548 = (uint64_t)v3;

}

id IMBloomFilterInt64HashProvider()
{
  if (qword_311560 != -1)
    dispatch_once(&qword_311560, &stru_2928E8);
  return objc_retainBlock((id)qword_311558);
}

void sub_15A02C(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(&stru_2929C0, "copy");
  v2 = (void *)qword_311558;
  qword_311558 = (uint64_t)v1;

}

void sub_15A054(id a1)
{
  id v1;
  void *v2;

  v1 = objc_msgSend(&stru_2929E0, "copy");
  v2 = (void *)qword_311568;
  qword_311568 = (uint64_t)v1;

}

void sub_15A07C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[8];

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_15A124;
  v11[3] = &unk_292958;
  v10 = a2;
  v7 = *(void **)(a1 + 32);
  v11[4] = v10;
  v11[5] = v7;
  v11[6] = a3;
  v11[7] = a4;
  v8 = v7;
  sub_15A124((uint64_t)v11);
  v9 = (id)objc_opt_self(v10);

}

void sub_15A124(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];
  id v8;
  uint64_t v9;
  uint64_t v10;

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_15A1A4;
  v7[3] = &unk_292930;
  v2 = *(void **)(a1 + 32);
  v3 = *(id *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v6 = v2;
  IMWithAccessToCharacters(v6, v7);

}

uint64_t sub_15A1A4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  return (*(uint64_t (**)(_QWORD, _QWORD *, _QWORD, _QWORD))(a1[4] + 16))(a1[4], v4, a1[5], a1[6]);
}

void sub_15A1D8(id a1, const void *a2, unint64_t *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  if (a4)
  {
    v4 = 33 * *(_QWORD *)a2;
    v5 = &qword_26AE20;
    do
    {
      v6 = *v5++;
      *a3++ = v6 + v4;
      --a4;
    }
    while (a4);
  }
}

void sub_15A204(id a1, const void *a2, unint64_t *a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  BOOL v10;

  if (a4)
  {
    v4 = 0;
    v5 = *((_QWORD *)a2 + 1);
    v6 = *(_QWORD *)a2 + 2 * v5;
    do
    {
      v7 = qword_26AE20[v4];
      a3[v4] = v7;
      if (v5 >= 1)
      {
        for (i = 0; i != v5; ++i)
        {
          v9 = i + v4;
          do
          {
            v10 = v9 < v5;
            v9 -= v5;
          }
          while (!v10);
          v7 = 33 * v7 + *(unsigned __int16 *)(v6 + 2 * v9);
        }
        a3[v4] = v7;
      }
      ++v4;
    }
    while (v4 != a4);
  }
}

void sub_15A790(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id WeakRetained;
  BCManagedObjectIDChanges *v11;
  id v12;
  uint64_t v13;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSFetchRequest fetchRequestWithEntityName:](NSFetchRequest, "fetchRequestWithEntityName:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 24)));
  objc_msgSend(v2, "setPredicate:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32));
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
    v3 = 2;
  else
    v3 = 1;
  objc_msgSend(v2, "setResultType:", v3);
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40);
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v13, 1));
    objc_msgSend(v2, "setPropertiesToFetch:", v4);

  }
  else
  {
    objc_msgSend(v2, "setPropertiesToFetch:", 0);
  }
  v5 = *(void **)(a1 + 40);
  v12 = 0;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "executeFetchRequest:error:", v2, &v12));
  v7 = v12;
  if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40))
    v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "valueForKey:"));
  else
    v8 = v6;
  v9 = v8;
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 64));
  if ((objc_opt_respondsToSelector(WeakRetained, "managedObjectBackgroundMonitor:fetchNotify:") & 1) != 0)
  {
    v11 = -[BCManagedObjectIDChanges initWithAdded:updated:deleted:context:]([BCManagedObjectIDChanges alloc], "initWithAdded:updated:deleted:context:", v9, 0, 0, *(_QWORD *)(a1 + 40));
    objc_msgSend(WeakRetained, "managedObjectBackgroundMonitor:fetchNotify:", *(_QWORD *)(a1 + 32), v11);

  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "addObjectsFromArray:", v9);
  dispatch_resume(*(dispatch_object_t *)(*(_QWORD *)(a1 + 32) + 56));

}

void sub_15B078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  _Block_object_dispose(&a52, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_15B0E4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_15B0F4(uint64_t a1)
{

}

void sub_15B0FC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_15B134(_QWORD *a1)
{
  return objc_msgSend(*(id *)(a1[4] + 72), "setObject:forKey:", a1[5], a1[6]);
}

void sub_15B300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_15B318(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 72), "objectForKey:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  objc_msgSend(*(id *)(a1[4] + 72), "removeObjectForKey:", a1[5]);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "deletedObjects"));
  v6 = objc_msgSend(v5, "count");

  if (v6)
  {
    v7 = *(void **)(a1[4] + 80);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "deletedObjects"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSSet setWithArray:](NSSet, "setWithArray:", v8));
    objc_msgSend(v7, "minusSet:", v9);

  }
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "addedObjects"));
  v11 = objc_msgSend(v10, "count");

  if (v11)
  {
    v12 = *(void **)(a1[4] + 80);
    v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "addedObjects"));
    objc_msgSend(v12, "addObjectsFromArray:", v13);

  }
}

void sub_15B50C(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 80), "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void BCSetUnsafeAppDelegateReference(id obj)
{
  objc_storeStrong((id *)&qword_311578, obj);
}

id BCGetUnsafeAppDelegateReference()
{
  id v0;
  NSObject *v1;

  if (!+[NSThread isMainThread](NSThread, "isMainThread"))
  {
    v0 = BCIMLog();
    v1 = objc_claimAutoreleasedReturnValue(v0);
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
      sub_1B9894(v1);

  }
  return (id)qword_311578;
}

id sub_15E69C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
  objc_msgSend(v2, "reset");

  return objc_msgSend(*(id *)(a1 + 32), "performFetch:", 0);
}

void sub_15EC1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_15EC48(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned int v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  kdebug_trace(725353728, 8, 0, 0, 0);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "storedData"));
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cachePath"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringByAppendingPathComponent:", v3));

    if (v5)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
      v7 = objc_msgSend(v6, "fileExistsAtPath:", v5);

      if (v7)
      {
        objc_msgSend(WeakRetained, "_removeFileAtPath:", v5);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByAppendingPathComponent:", CFSTR("path")));
        objc_msgSend(WeakRetained, "_removeFileAtPath:", v8);

      }
    }
  }
  else
  {
    v5 = 0;
  }
  v9 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 32);
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v11, 1));
  (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

  kdebug_trace(725353728, 9, 0, 0, 0);
}

void sub_15EE90(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_15F19C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_15F1C8(uint64_t a1, uint64_t a2, void *a3)
{
  __CFString *v4;
  uint64_t v5;
  id v6;
  char *v7;
  void *v8;
  id WeakRetained;
  id v10;
  void *v11;
  NSObject *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;

  v4 = BICCacheStatsOperationDiskReadQueueEnd[0];
  v5 = *(_QWORD *)(a1 + 32);
  v6 = a3;
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", v4, v5);
  v7 = (char *)objc_msgSend(v6, "priority");

  if (v7 == (_BYTE *)&dword_0 + 1)
  {
    v8 = 0;
  }
  else
  {
    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationDiskReadStart[0], *(_QWORD *)(a1 + 32));
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    v10 = objc_msgSend(WeakRetained, "_readCachedImageFromPath:", *(_QWORD *)(a1 + 40));
    if (v10)
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(+[BICImage imageWithCGImage:](BICImage, "imageWithCGImage:", v10));
      objc_msgSend(*(id *)(a1 + 48), "setImage:", v11);

      v24 = *(_QWORD *)(a1 + 48);
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v24, 1));
      v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "stringByAppendingPathExtension:", CFSTR("path")));
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSData dataWithContentsOfFile:](NSData, "dataWithContentsOfFile:", v12));
      if (v13)
      {
        v23 = 0;
        v14 = +[NSKeyedUnarchiver unarchivedObjectOfClass:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClass:fromData:error:", objc_opt_class(UIBezierPath), v13, &v23);
        v15 = (void *)objc_claimAutoreleasedReturnValue(v14);
        v16 = v23;
        v17 = objc_retainAutorelease(v15);
        objc_msgSend(*(id *)(a1 + 48), "setStackOutline:", objc_msgSend(v17, "CGPath"));
        if (v16)
        {
          v18 = BCImageCacheLog();
          v19 = objc_claimAutoreleasedReturnValue(v18);
          if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            sub_1B999C();

        }
      }

    }
    else
    {
      v20 = BCImageCacheLog();
      v12 = objc_claimAutoreleasedReturnValue(v20);
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        sub_1B9934();
      v8 = 0;
    }

    +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationDiskReadEnd[0], *(_QWORD *)(a1 + 32));
    +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", *(_QWORD *)(a1 + 48), CFSTR("DiskDataStoreLoadImage"));

  }
  v21 = objc_retainBlock(*(id *)(a1 + 56));
  v22 = v21;
  if (v21)
    (*((void (**)(id, void *))v21 + 2))(v21, v8);

}

void sub_15FA60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location)
{
  id *v34;

  objc_destroyWeak(v34);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_15FA8C(uint64_t a1)
{
  id *v2;
  void *v3;
  unsigned int v4;
  id WeakRetained;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  id v12;
  id v13;
  NSObject *v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;
  void *v18;
  void *v19;
  unsigned int v20;
  const __CFString *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  _BOOL4 v34;
  double v35;
  unsigned int v36;
  void *v37;
  void *v38;
  void *v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  NSObject *v46;
  id v47;
  NSObject *v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  NSObject *v61;
  void *v62;
  void *v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;

  v2 = (id *)(a1 + 32);
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationDiskWriteQueueEnd[0], *(_QWORD *)(a1 + 32));
  if (objc_msgSend(*v2, "priority") == (char *)&dword_0 + 1)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "writeWorkQueue"));
    if ((objc_msgSend(v3, "hasLargeBacklog") & 1) != 0)
    {
      if (!objc_msgSend(*(id *)(a1 + 48), "processingOptions"))
      {

LABEL_35:
        v47 = BCImageCacheLog();
        v48 = objc_claimAutoreleasedReturnValue(v47);
        if (os_log_type_enabled(v48, OS_LOG_TYPE_DEBUG))
          sub_1B9A5C();

        objc_msgSend(*(id *)(a1 + 64), "addObject:", *(_QWORD *)(a1 + 56));
        dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));
        return;
      }
      v4 = objc_msgSend(*(id *)(a1 + 48), "isGeneric");

      if (v4)
        goto LABEL_35;
    }
    else
    {

    }
  }
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationDiskWriteStart[0], *(_QWORD *)(a1 + 32));
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cachePath"));
  v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "identifier"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "stringByAppendingPathComponent:", v7));

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  LOBYTE(v7) = objc_msgSend(v9, "fileExistsAtPath:", v8);

  if ((v7 & 1) == 0)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v68 = 0;
    v11 = objc_msgSend(v10, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v8, 1, 0, &v68);
    v12 = v68;

    if ((v11 & 1) == 0)
    {
      v13 = BCImageCacheLog();
      v14 = objc_claimAutoreleasedReturnValue(v13);
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        sub_1B9BF4();

    }
  }
  if ((objc_msgSend(*v2, "requestOptions") & 0x100) != 0)
  {
    v16 = 1;
  }
  else
  {
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "writeWorkQueue"));
    v16 = objc_msgSend(v15, "hasLargeBacklog");

  }
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "entryLocation"));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "image"));
  CGImageGetWidth((CGImageRef)objc_msgSend(v18, "CGImage"));

  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "image"));
  CGImageGetHeight((CGImageRef)objc_msgSend(v19, "CGImage"));

  v20 = objc_msgSend(*(id *)(a1 + 48), "processingOptions");
  v21 = CFSTR("jpg");
  if ((v16 & 1) == 0 && objc_msgSend(*(id *)(a1 + 40), "deviceSupportsHEIC"))
    v21 = CFSTR("heic");
  if (v20)
  {
    if (objc_msgSend(WeakRetained, "deviceSupportsASTC"))
      v21 = CFSTR("astc");
    else
      v21 = CFSTR("png");
  }
  v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "stringByAppendingPathExtension:", v21));
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "identifier"));
  v24 = objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "stringByAppendingPathComponent:", v22));

  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "image"));
  v26 = *(void **)(a1 + 48);
  v64 = (void *)v24;
  if (v25)
  {
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "image"));
    v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_writeCachedImage:unprocessed:toRelativePath:", objc_msgSend(v27, "CGImage"), v20 == 0, v24));
    objc_msgSend(*(id *)(a1 + 56), "setStoredData:", v28);

    objc_msgSend(*(id *)(a1 + 48), "imageSize");
    v30 = v29;
    v32 = v31;
    objc_msgSend(*(id *)(a1 + 32), "imageSize");
    v34 = 0;
    if (v30 == v35 && v32 == v33)
    {
      v36 = objc_msgSend(*(id *)(a1 + 48), "processingOptions");
      v34 = v36 == objc_msgSend(*(id *)(a1 + 32), "processingOptions");
    }
    objc_msgSend(*(id *)(a1 + 56), "setPermanent:", objc_msgSend(*(id *)(a1 + 32), "persistanceOptions") & v34);
    goto LABEL_44;
  }
  v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "filePath"));

  if (v37)
  {
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "stringByAppendingPathComponent:", v22));
    v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "filePath"));
    v40 = objc_msgSend(v39, "isEqualToString:", v38);

    if ((v40 & 1) != 0)
    {
LABEL_43:
      objc_msgSend(*(id *)(a1 + 56), "setStoredData:", v64);

      goto LABEL_44;
    }
    v62 = v8;
    objc_msgSend(WeakRetained, "_removeFileAtPath:", v38);
    v41 = objc_msgSend(*(id *)(a1 + 48), "persistanceOptions");
    v42 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "filePath"));
    if ((v41 & 1) != 0)
    {
      v66 = 0;
      objc_msgSend(v42, "createSymbolicLinkAtPath:withDestinationPath:error:", v38, v43, &v66);
      v44 = v66;

      if (v44)
      {
        v49 = BCImageCacheLog();
        v46 = objc_claimAutoreleasedReturnValue(v49);
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
          sub_1B9B94();
        goto LABEL_41;
      }
    }
    else
    {
      v67 = 0;
      objc_msgSend(v42, "copyItemAtPath:toPath:error:", v43, v38, &v67);
      v44 = v67;

      if (v44)
      {
        v45 = BCImageCacheLog();
        v46 = objc_claimAutoreleasedReturnValue(v45);
        if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
          sub_1B9B34();
LABEL_41:

      }
    }
    v8 = v62;

    goto LABEL_43;
  }
LABEL_44:
  v50 = objc_msgSend(*(id *)(a1 + 48), "stackOutline");
  if (v50)
  {
    v63 = v22;
    v51 = v17;
    v52 = v8;
    v53 = (void *)objc_claimAutoreleasedReturnValue(+[UIBezierPath bezierPathWithCGPath:](UIBezierPath, "bezierPathWithCGPath:", v50));
    v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "storedData"));
    v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v54, "stringByAppendingPathExtension:", CFSTR("path")));

    v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "cachePath"));
    v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v56, "stringByAppendingPathComponent:", v55));

    v65 = 0;
    v58 = (void *)objc_claimAutoreleasedReturnValue(+[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:](NSKeyedArchiver, "archivedDataWithRootObject:requiringSecureCoding:error:", v53, 0, &v65));
    v59 = v65;
    objc_msgSend(v58, "writeToFile:atomically:", v57, 1);
    if (v59)
    {
      v60 = BCImageCacheLog();
      v61 = objc_claimAutoreleasedReturnValue(v60);
      if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
        sub_1B9AD4();

    }
    v8 = v52;
    v17 = v51;
    v22 = v63;
  }
  +[BICCacheStats logOperation:forRequest:](BICCacheStats, "logOperation:forRequest:", BICCacheStatsOperationDiskWriteEnd[0], *(_QWORD *)(a1 + 32));
  +[BICCacheStats logDescribedImage:withComment:](BICCacheStats, "logDescribedImage:withComment:", *(_QWORD *)(a1 + 48), CFSTR("DiskDataStoreSaveImage"));
  objc_msgSend(*(id *)(a1 + 80), "addObject:", *(_QWORD *)(a1 + 56));
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 72));

}

void sub_16011C(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    v2 = v3;
  }

}

void sub_160250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_160268(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cachePath"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "stringByAppendingPathComponent:", v3));

  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "attributesOfItemAtPath:error:", v6, 0));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectForKey:", NSFileSize));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) += (int)objc_msgSend(v7, "intValue");

}

void sub_160568(id a1)
{
  CFStringRef v1;
  void *v2;

  v1 = kCGImageSourceShouldCacheImmediately;
  v2 = &__kCFBooleanTrue;
  qword_3115A8 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v2, &v1, 1));
}

void sub_16087C(id a1)
{
  CFStringRef v1;
  _UNKNOWN **v2;
  CFStringRef v3;
  _UNKNOWN **v4;
  _QWORD v5[4];
  _QWORD v6[4];

  qword_3115B8 = (uint64_t)CFSTR("org.khronos.ktx");
  v5[0] = kCGImagePropertyEncoder;
  v5[1] = kCGImagePropertyASTCBlockSize;
  v6[0] = kCGImagePropertyASTCEncoder;
  v6[1] = &off_2AA628;
  v5[2] = kCGImagePropertyASTCUseLZFSE;
  v5[3] = kCGImagePropertyASTCPreTwiddle;
  v6[2] = &__kCFBooleanFalse;
  v6[3] = &__kCFBooleanTrue;
  qword_3115D0 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v6, v5, 4));
  qword_3115C0 = (uint64_t)AVFileTypeHEIC;
  v3 = kCGImageDestinationLossyCompressionQuality;
  v4 = &off_2B3070;
  qword_3115D8 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v4, &v3, 1));
  qword_3115C8 = (uint64_t)AVFileTypeJPEG;
  v1 = kCGImageDestinationLossyCompressionQuality;
  v2 = &off_2B3080;
  qword_3115E0 = objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v2, &v1, 1));
}

BOOL CGImageIsWideGamut(CGImage *a1)
{
  CGColorSpace *ColorSpace;

  return a1 && (ColorSpace = CGImageGetColorSpace(a1)) != 0 && CGColorSpaceIsWideGamutRGB(ColorSpace);
}

uint64_t CGImageIsDeepColor()
{
  return 0;
}

CGImageSource *CGImageCreateWithURL(const __CFURL *a1)
{
  CGImageSource *result;
  CGImageSource *v2;
  CGImageRef ImageAtIndex;

  result = CGImageSourceCreateWithURL(a1, 0);
  if (result)
  {
    v2 = result;
    ImageAtIndex = CGImageSourceCreateImageAtIndex(result, 0, 0);
    CFRelease(v2);
    return ImageAtIndex;
  }
  return result;
}

CFTypeRef BCCreateHairlineImageAsDataForColor(CGColor *a1, int a2, double a3)
{
  size_t v4;
  size_t v5;
  double v6;
  CGColorRef CopyWithAlpha;
  CGColor *v8;
  CGColorSpace *DeviceRGB;
  CGColorSpace *v10;
  CGContext *v11;
  CGContext *v12;
  CGImageRef Image;
  CGImage *v14;
  CFMutableDataRef Mutable;
  __CFData *v16;
  __CFString *v17;
  CGImageDestination *v18;
  CFTypeRef v19;
  CGRect v21;

  if (a2)
    v4 = 1;
  else
    v4 = (unint64_t)a3;
  if (a2)
    v5 = (unint64_t)a3;
  else
    v5 = 1;
  v6 = CGColorGetAlpha(a1) * a3;
  if (v6 > 1.0)
    v6 = 1.0;
  CopyWithAlpha = CGColorCreateCopyWithAlpha(a1, v6);
  if (!CopyWithAlpha)
    return 0;
  v8 = CopyWithAlpha;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (DeviceRGB)
  {
    v10 = DeviceRGB;
    v11 = CGBitmapContextCreate(0, v4, v5, 8uLL, 0, DeviceRGB, 2u);
    if (v11)
    {
      v12 = v11;
      CGContextSetFillColorWithColor(v11, v8);
      v21.origin.x = 0.0;
      v21.origin.y = 0.0;
      v21.size.width = 1.0;
      v21.size.height = 1.0;
      CGContextFillRect(v12, v21);
      Image = CGBitmapContextCreateImage(v12);
      if (Image)
      {
        v14 = Image;
        Mutable = CFDataCreateMutable(kCFAllocatorDefault, 0);
        if (Mutable)
        {
          v16 = Mutable;
          v17 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypePNG, "identifier"));
          v18 = CGImageDestinationCreateWithData(v16, v17, 1uLL, 0);

          if (v18)
          {
            CGImageDestinationAddImage(v18, v14, 0);
            CGImageDestinationFinalize(v18);
            v19 = CFRetain(v16);
            CFRelease(v18);
          }
          else
          {
            v19 = 0;
          }
          CFRelease(v16);
        }
        else
        {
          v19 = 0;
        }
        CGImageRelease(v14);
      }
      else
      {
        v19 = 0;
      }
      CGContextRelease(v12);
    }
    else
    {
      v19 = 0;
    }
    CGColorSpaceRelease(v10);
  }
  else
  {
    v19 = 0;
  }
  CGColorRelease(v8);
  return v19;
}

void sub_1622C4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v13[5];
  id v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];

  v3 = a2;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "imageEntries"));
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v17;
    while (2)
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v4);
        if (objc_msgSend(*(id *)(*((_QWORD *)&v16 + 1) + 8 * (_QWORD)v8), "state") == 1)
        {

          v12 = *(void **)(a1 + 32);
          v11 = *(void **)(a1 + 40);
          v13[0] = _NSConcreteStackBlock;
          v13[1] = 3221225472;
          v13[2] = sub_162464;
          v13[3] = &unk_28B750;
          v13[4] = v12;
          v14 = v11;
          v15 = *(id *)(a1 + 48);
          objc_msgSend(v12, "_afterAllStoreOperationsCompletedForDescribedImage:performBlock:", v14, v13);

          goto LABEL_13;
        }
        v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      if (v6)
        continue;
      break;
    }
  }

  v9 = objc_retainBlock(*(id *)(a1 + 48));
  v10 = v9;
  if (v9)
    (*((void (**)(id, id))v9 + 2))(v9, v3);

LABEL_13:
}

void sub_162464(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetPersistence"));
  objc_msgSend(v2, "withExistingImageSetForDescribedImage:performBlock:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));

}

void sub_162564(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *i;
  void *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];

  v18 = a1;
  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v19 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "imageEntries"));
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v21;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(_QWORD *)v21 != v7)
          objc_enumerationMutation(v4);
        v9 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v9, "state", v18) == 2 && (objc_msgSend(v9, "isExpired") & 1) == 0)
        {
          v10 = (void *)objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageFromImageEntry:](BICDescribedImage, "describedImageFromImageEntry:", v9));
          v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "dataStoreInformation"));
          v12 = objc_msgSend(v11, "hasPrefix:", CFSTR("http"));

          if ((v12 & 1) != 0)
          {
            v13 = 4;
            goto LABEL_14;
          }
          if (objc_msgSend(v9, "level") == 1)
          {
            v13 = 2;
            goto LABEL_14;
          }
          if (objc_msgSend(v9, "level") == 2)
          {
            v13 = 3;
LABEL_14:
            objc_msgSend(v10, "setLocation:", v13);
          }
          objc_msgSend(v3, "addObject:", v10);

          continue;
        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v6);
  }

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v18 + 32), "comparator"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "sortedBestMatchOf:toCandidateImages:", *(_QWORD *)(v18 + 40), v3));

  v16 = objc_retainBlock(*(id *)(v18 + 48));
  v17 = v16;
  if (v16)
    (*((void (**)(id, void *))v16 + 2))(v16, v15);

}

void sub_162AD8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

void sub_162BD8(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v8;
  id v9;
  void *v10;
  int v11;
  void *v12;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "primaryEntry"));
  if (objc_msgSend(v3, "state") == 2
    && (v4 = objc_claimAutoreleasedReturnValue(+[BICDescribedImage describedImageFromImageEntry:](BICDescribedImage, "describedImageFromImageEntry:", v3))) != 0)
  {
    v5 = (void *)v4;
    v6 = BCImageCacheLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      v11 = 138412290;
      v12 = v5;
      _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "BICImageSetStorePersistance: Primary entry found: %@", (uint8_t *)&v11, 0xCu);
    }
  }
  else
  {
    v8 = BCImageCacheLog();
    v7 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      LOWORD(v11) = 0;
      _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "BICImageSetStorePersistance: Primary entry NOT found", (uint8_t *)&v11, 2u);
    }
    v5 = 0;
  }

  v9 = objc_retainBlock(*(id *)(a1 + 32));
  v10 = v9;
  if (v9)
    (*((void (**)(id, void *))v9 + 2))(v9, v5);

}

void sub_162F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_162F9C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  uint64_t v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "dataStore"));
  v6 = *(_QWORD *)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_163090;
  v7[3] = &unk_292B60;
  objc_copyWeak(&v9, (id *)(a1 + 48));
  v8 = *(id *)(a1 + 40);
  objc_msgSend(v5, "storeAddedEntries:forRequest:storingCompletedHandler:", v3, v6, v7);

  objc_destroyWeak(&v9);
}

void sub_16307C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_163090(uint64_t a1, void *a2, void *a3)
{
  id *v5;
  id v6;
  id v7;
  id WeakRetained;
  void *v9;
  _QWORD v10[4];
  id v11;

  v5 = (id *)(a1 + 40);
  v6 = a3;
  v7 = a2;
  WeakRetained = objc_loadWeakRetained(v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "imageSetPersistence"));
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_163158;
  v10[3] = &unk_28BF90;
  v11 = *(id *)(a1 + 32);
  objc_msgSend(v9, "markEntriesAsStored:notStored:completion:", v7, v6, v10);

}

void sub_163158(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_163420(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  _QWORD v7[5];
  id v8;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataStore"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1634C4;
  v7[3] = &unk_28C058;
  v6 = *(void **)(a1 + 40);
  v7[4] = *(_QWORD *)(a1 + 32);
  v8 = v6;
  objc_msgSend(v5, "deleteRemovedEntries:deletingCompletedHandler:", v4, v7);

}

void sub_1634C4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imageSetPersistence"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_163574;
  v6[3] = &unk_28C080;
  v7 = v3;
  v8 = *(id *)(a1 + 40);
  v5 = v3;
  objc_msgSend(v4, "deleteEntriesMarkedToBeDeleted:completion:", v5, v6);

}

void sub_163574(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("imageDescription")));
  v2 = objc_retainBlock(*(id *)(a1 + 40));
  v3 = v2;
  if (v2)
    (*((void (**)(id, id))v2 + 2))(v2, v4);

}

void sub_163850(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "dataStore"));
  objc_msgSend(v4, "deleteImageForEntryLocation:", v3);

}

void sub_163AB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id orPredicates(uint64_t a1)
{
  return +[IMCompoundConfigurationPredicate orPredicateWithSubpredicates:](IMCompoundConfigurationPredicate, "orPredicateWithSubpredicates:", a1);
}

id andPredicates(uint64_t a1)
{
  return +[IMCompoundConfigurationPredicate andPredicateWithSubpredicates:](IMCompoundConfigurationPredicate, "andPredicateWithSubpredicates:", a1);
}

uint64_t sub_165528(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_165538(uint64_t a1)
{

}

void sub_165540(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "allKeys"));
  v2 = objc_msgSend(v5, "copy");
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_165668(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 48), "objectForKey:", a1[5]));
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_165778(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 48), "objectForKey:", a1[5]));
  if (v2)
  {
    v3 = *(void **)(a1[4] + 56);
    v9 = v2;
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", objc_msgSend(v2, "timeStamp")));
    v5 = objc_msgSend(v3, "bu_indexOfObjectWithValue:forKeyPath:", v4, CFSTR("timeStamp"));

    if (v5 == (id)0x7FFFFFFFFFFFFFFFLL
      && (NSLog(CFSTR("%s Initial Object mismatch"), "-[IMMemoryCache objectForKey:]_block_invoke"),
          v5 = objc_msgSend(*(id *)(a1[4] + 56), "indexOfObjectIdenticalTo:", v9),
          v5 == (id)0x7FFFFFFFFFFFFFFFLL))
    {
      NSLog(CFSTR("%s Complete Object mismatch"), "-[IMMemoryCache objectForKey:]_block_invoke");
      objc_msgSend(*(id *)(a1[4] + 48), "removeObjectForKey:", a1[5]);
    }
    else
    {
      objc_msgSend(*(id *)(a1[4] + 56), "removeObjectAtIndex:", v5);
      objc_msgSend(*(id *)(a1[4] + 56), "addObject:", v9);
      objc_msgSend(v9, "setTimeStamp:", mach_absolute_time());
      v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "item"));
      v7 = *(_QWORD *)(a1[6] + 8);
      v8 = *(void **)(v7 + 40);
      *(_QWORD *)(v7 + 40) = v6;

    }
    v2 = v9;
  }

}

id sub_165A28(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_removeObjectForKey:", *(_QWORD *)(a1 + 40));
}

id sub_165A8C(uint64_t a1)
{
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88) = 0;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96) = 0;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "removeAllObjects");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "removeAllObjects");
}

void sub_165B84(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "allKeys"));
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v7, "hasPrefix:", *(_QWORD *)(a1 + 40))
          && objc_msgSend(v7, "hasSuffix:", *(_QWORD *)(a1 + 48)))
        {
          objc_msgSend(*(id *)(a1 + 32), "_removeObjectForKey:", v7);
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

void sub_165D28(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "allKeys"));
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v7, "hasPrefix:", *(_QWORD *)(a1 + 40)))
          objc_msgSend(*(id *)(a1 + 32), "_removeObjectForKey:", v7);
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

id sub_165FE4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_checkLimitsAndEvictObjects");
}

void sub_1662D8(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 48), "objectForKey:", a1[5]));
  v3 = v2;
  if (v2)
  {
    v5 = v2;
    v4 = (uint64_t)objc_msgSend(v2, "cost");
    v3 = v5;
  }
  else
  {
    v4 = 0x7FFFFFFFFFFFFFFFLL;
  }
  *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 24) = v4;

}

id sub_1663C8(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "count");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1664B0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(objc_alloc((Class)NSString), "initWithFormat:", CFSTR("<%@: %p>; Item Dictionary Count: %d; Item Array Count: %d; Internal Count: %d; Count Limit: %d; Current Cost: %d; Cost Limit: %d; Items: %@"),
         objc_opt_class(*(_QWORD *)(a1 + 32)),
         *(_QWORD *)(a1 + 32),
         objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "count"),
         objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "count"),
         *(_QWORD *)(*(_QWORD *)(a1 + 32) + 88),
         *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40),
         *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96),
         *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32),
         *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

id sub_16660C(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "objectForKey:", *(_QWORD *)(a1 + 40)));

  if (v2)
    objc_msgSend(*(id *)(a1 + 32), "_removeObjectForKey:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 48), "setTimeStamp:", mach_absolute_time());
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 48), "setObject:forKey:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 56), "addObject:", *(_QWORD *)(a1 + 48));
  ++*(_QWORD *)(*(_QWORD *)(a1 + 32) + 88);
  if (objc_msgSend(*(id *)(a1 + 48), "cost"))
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 96) += objc_msgSend(*(id *)(a1 + 48), "cost");
  return _objc_msgSend(*(id *)(a1 + 32), "_checkLimits");
}

float BCFloatClamp(float result, float a2, float a3)
{
  if (a3 < result)
    result = a3;
  if (result <= a2)
    return a2;
  return result;
}

void BCFloatAssertClamp(float a1, float a2, float a3)
{
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 < a2 || a1 > a3)
  {
    v4 = os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_FAULT);
    if (v4)
      sub_1B9EF8(v4, v5, v6, v7, v8, v9, v10, v11);
  }
}

float BCFloatClampedToIntervalOrSubstitute(float result, float a2, float a3, float a4)
{
  if (result > a3 || result < a2)
    return a4;
  return result;
}

void BCFloatAssertUnitIntervalClamp(float a1)
{
  BCFloatAssertClamp(a1, 0.0, 1.0);
}

float BCFloatClampedToUnitIntervalOrNegativeOne(float result)
{
  if (result > 1.0 || result < 0.0)
    return -1.0;
  return result;
}

void sub_1670FC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0x20u);
}

void sub_167980(id a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)NSMutableDictionary);
  v2 = (void *)qword_3115F8;
  qword_3115F8 = (uint64_t)v1;

}

void sub_169A2C(id a1)
{
  BKSeriesManager *v1;
  void *v2;

  v1 = objc_alloc_init(BKSeriesManager);
  v2 = (void *)qword_311608;
  qword_311608 = (uint64_t)v1;

}

void sub_16ABF0(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;
  id v9;

  v9 = a3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32)));
  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = (void (**)(_QWORD, _QWORD, _QWORD))v6;
  if (v5)
  {
    if (v6)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "buyParams"));
      ((void (**)(_QWORD, void *, id))v7)[2](v7, v8, v9);

    }
  }
  else if (v6)
  {
    (*((void (**)(id, _QWORD, id))v6 + 2))(v6, 0, v9);
  }

}

void sub_16AE10(uint64_t a1)
{
  dispatch_semaphore_t v2;
  BKSeriesManagerUpdater *v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  BKSeriesManagerUpdater *v8;
  double v9;
  dispatch_time_t v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  _QWORD v22[4];
  NSObject *v23;

  v2 = dispatch_semaphore_create(0);
  v3 = [BKSeriesManagerUpdater alloc];
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "database"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "catalogService"));
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_16AF80;
  v22[3] = &unk_28B960;
  v7 = v2;
  v23 = v7;
  v8 = -[BKSeriesManagerUpdater initWithManager:database:catalogService:onFinished:](v3, "initWithManager:database:catalogService:onFinished:", v4, v5, v6, v22);

  -[BKSeriesManagerUpdater updateSeriesForSeriesAdamIDsWithTypes:forceCheck:](v8, "updateSeriesForSeriesAdamIDsWithTypes:forceCheck:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56));
  objc_msgSend(*(id *)(a1 + 32), "timeOut");
  v10 = dispatch_time(0, (uint64_t)(v9 * 1000000000.0));
  if (dispatch_semaphore_wait(v7, v10))
  {
    v11 = BCSeriesManagerLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1BA0BC(v12, v13, v14, v15, v16, v17, v18, v19);

    -[BKSeriesManagerUpdater cancel](v8, "cancel");
  }
  v20 = objc_retainBlock(*(id *)(a1 + 48));
  v21 = v20;
  if (v20)
    (*((void (**)(id))v20 + 2))(v20);

}

intptr_t sub_16AF80(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_16B10C(uint64_t a1)
{
  dispatch_semaphore_t v2;
  BKSeriesManagerUpdater *v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  BKSeriesManagerUpdater *v8;
  double v9;
  dispatch_time_t v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  _QWORD v22[4];
  NSObject *v23;

  v2 = dispatch_semaphore_create(0);
  v3 = [BKSeriesManagerUpdater alloc];
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "database"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "catalogService"));
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_16B27C;
  v22[3] = &unk_28B960;
  v7 = v2;
  v23 = v7;
  v8 = -[BKSeriesManagerUpdater initWithManager:database:catalogService:onFinished:](v3, "initWithManager:database:catalogService:onFinished:", v4, v5, v6, v22);

  -[BKSeriesManagerUpdater updateSeriesForAssetAdamIDsWithTypes:forceCheck:](v8, "updateSeriesForAssetAdamIDsWithTypes:forceCheck:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56));
  objc_msgSend(*(id *)(a1 + 32), "timeOut");
  v10 = dispatch_time(0, (uint64_t)(v9 * 1000000000.0));
  if (dispatch_semaphore_wait(v7, v10))
  {
    v11 = BCSeriesManagerLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1BA0EC(v12, v13, v14, v15, v16, v17, v18, v19);

    -[BKSeriesManagerUpdater cancel](v8, "cancel");
  }
  v20 = objc_retainBlock(*(id *)(a1 + 48));
  v21 = v20;
  if (v20)
    (*((void (**)(id))v20 + 2))(v20);

}

intptr_t sub_16B27C(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_16B324(uint64_t a1)
{
  BKSeriesManagerUpdater *v2;
  void *v3;
  void *v4;
  void *v5;
  BKSeriesManagerUpdater *v6;

  v2 = [BKSeriesManagerUpdater alloc];
  v3 = *(void **)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "database"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "catalogService"));
  v6 = -[BKSeriesManagerUpdater initWithManager:database:catalogService:onFinished:](v2, "initWithManager:database:catalogService:onFinished:", v3, v4, v5, 0);

  -[BKSeriesManagerUpdater updateExpiredSeriesForAssetAdamIDsWithTypes:](v6, "updateExpiredSeriesForAssetAdamIDsWithTypes:", *(_QWORD *)(a1 + 40));
}

void sub_16B5E0(uint64_t a1)
{
  dispatch_semaphore_t v2;
  BKSeriesManagerUpdater *v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  BKSeriesManagerUpdater *v8;
  double v9;
  dispatch_time_t v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  _QWORD v22[4];
  NSObject *v23;

  v2 = dispatch_semaphore_create(0);
  v3 = [BKSeriesManagerUpdater alloc];
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "database"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "catalogService"));
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_16B74C;
  v22[3] = &unk_28B960;
  v7 = v2;
  v23 = v7;
  v8 = -[BKSeriesManagerUpdater initWithManager:database:catalogService:onFinished:](v3, "initWithManager:database:catalogService:onFinished:", v4, v5, v6, v22);

  -[BKSeriesManagerUpdater updateAssetsFromCloudSyncForAssetAdamIDsWithTypes:](v8, "updateAssetsFromCloudSyncForAssetAdamIDsWithTypes:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "timeOut");
  v10 = dispatch_time(0, (uint64_t)(v9 * 1000000000.0));
  if (dispatch_semaphore_wait(v7, v10))
  {
    v11 = BCSeriesManagerLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      sub_1BA11C(v12, v13, v14, v15, v16, v17, v18, v19);

    -[BKSeriesManagerUpdater cancel](v8, "cancel");
  }
  v20 = objc_retainBlock(*(id *)(a1 + 48));
  v21 = v20;
  if (v20)
    (*((void (**)(id))v20 + 2))(v20);

}

intptr_t sub_16B74C(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t BRCConfigurationManager.value<A>(for:namespace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  NSString v10;
  id v11;
  id v12;
  uint64_t v13;
  int v14;
  _OWORD v16[2];

  v4 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v4, "valueForKey:fromNamespace:", v9, v10);

  if (v11)
  {
    v12 = objc_msgSend(v11, "object");
    _bridgeAnyObjectToAny(_:)(v16);
    swift_unknownObjectRelease(v12);

  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  v13 = sub_16B968(&qword_30ABB0);
  v14 = swift_dynamicCast(a3, v16, v13, a2, 6);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v14 ^ 1u, 1, a2);
}

uint64_t sub_16B968(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_16C330(a1, &qword_30AF18, (uint64_t)&unk_293068);
}

_QWORD *sub_16B9BC(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_16B9CC(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t sub_16BA10(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for UIAccessibility(uint64_t a1)
{
  sub_16C330(a1, &qword_30AF20, (uint64_t)&unk_2930E0);
}

uint64_t initializeBufferWithCopyOfBuffer for BooksFinished.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 sub_16BA90(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_16BA9C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_16BABC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_16C330(a1, &qword_30AF28, (uint64_t)&unk_293160);
}

void type metadata accessor for AEAnnotationTheme_PageTheme(uint64_t a1)
{
  sub_16C330(a1, &qword_30AF30, (uint64_t)&unk_293188);
}

void type metadata accessor for BooksDefaultsKey(uint64_t a1)
{
  sub_16C330(a1, &qword_30AF38, (uint64_t)&unk_2931A8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_16C330(a1, &qword_30AF40, (uint64_t)&unk_2931D0);
}

uint64_t sub_16BB38(uint64_t a1, uint64_t a2)
{
  return sub_16C0E4(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_16BB54(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_16BBC8(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_16BC44@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  NSString v4;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a1 = v4;
  return result;
}

BOOL sub_16BC84(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_16BC98@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

_QWORD *sub_16BCC0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_16BCD0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_16BCDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_16BDB8(&qword_30AF60, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsKey, (uint64_t)&unk_26B0F4);
  v3 = sub_16BDB8(&qword_30AF68, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsKey, (uint64_t)&unk_26B094);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_16BD60()
{
  return sub_16BDB8(&qword_30AF48, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsKey, (uint64_t)&unk_26B058);
}

uint64_t sub_16BD8C()
{
  return sub_16BDB8(&qword_30AF50, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsKey, (uint64_t)&unk_26B02C);
}

uint64_t sub_16BDB8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_16BDF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_16BDB8(&qword_30B180, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_26B828);
  v3 = sub_16BDB8(&qword_30B188, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_26B7C8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_16BE7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_16BDB8(&qword_30B160, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPersonalizationLocalSignalPurgeKey, (uint64_t)&unk_26BAD8);
  v3 = sub_16BDB8(&qword_30B168, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPersonalizationLocalSignalPurgeKey, (uint64_t)&unk_26BA78);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_16BF00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_16BDB8(&qword_30B170, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPriceTrackingUpdateScheduleStepsKey, (uint64_t)&unk_26B980);
  v3 = sub_16BDB8(&qword_30B178, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPriceTrackingUpdateScheduleStepsKey, (uint64_t)&unk_26B920);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_16BF84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_16BDB8(&qword_30B190, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_26B6C4);
  v3 = sub_16BDB8(&qword_30B198, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_26B664);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_16C008@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_16C04C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_16BDB8(&qword_30B1A0, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_26B56C);
  v3 = sub_16BDB8(&qword_30B1A8, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_26B50C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_16C0D8(uint64_t a1, uint64_t a2)
{
  return sub_16C0E4(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_16C0E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_16C120(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_16C160(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_16C1D4()
{
  return sub_16BDB8(&qword_30AF58, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsKey, (uint64_t)&unk_26B0C8);
}

void type metadata accessor for BooksDefaultsPersonalizationLocalSignalPurgeKey(uint64_t a1)
{
  sub_16C330(a1, &qword_30B090, (uint64_t)&unk_2931F8);
}

void type metadata accessor for BooksDefaultsPriceTrackingUpdateScheduleStepsKey(uint64_t a1)
{
  sub_16C330(a1, &qword_30B098, (uint64_t)&unk_293220);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0A0, (uint64_t)&unk_293248);
}

void type metadata accessor for __BFMResourceType(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0A8, (uint64_t)&unk_293270);
}

void type metadata accessor for MCatalogRequestRelationship(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0B0, (uint64_t)&unk_293290);
}

void type metadata accessor for MCatalogRequestView(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0B8, (uint64_t)&unk_2932B8);
}

void type metadata accessor for AEAnnotationStyle(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0C0, (uint64_t)&unk_2932E0);
}

__n128 initializeWithTake for BooksFinished.YearEntry(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_16C298(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_16C2B8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0C8, (uint64_t)&unk_293358);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0D0, (uint64_t)&unk_2933D8);
}

void type metadata accessor for State(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0D8, (uint64_t)&unk_293400);
}

void type metadata accessor for ActivationState(uint64_t a1)
{
  sub_16C330(a1, &qword_30B0E0, (uint64_t)&unk_293420);
}

void sub_16C330(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_16C374()
{
  return sub_16BDB8(&qword_30B0E8, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_26B4D0);
}

uint64_t sub_16C3A0()
{
  return sub_16BDB8(&qword_30B0F0, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_26B4A4);
}

uint64_t sub_16C3CC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_16C454()
{
  return sub_16BDB8(&qword_30B0F8, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestView, (uint64_t)&unk_26B540);
}

uint64_t sub_16C480()
{
  return sub_16BDB8(&qword_30B100, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_26B628);
}

uint64_t sub_16C4AC()
{
  return sub_16BDB8(&qword_30B108, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_26B5FC);
}

uint64_t sub_16C4D8()
{
  return sub_16BDB8(&qword_30B110, (uint64_t (*)(uint64_t))type metadata accessor for MCatalogRequestRelationship, (uint64_t)&unk_26B698);
}

uint64_t sub_16C504()
{
  return sub_16BDB8(&qword_30B118, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_26B78C);
}

uint64_t sub_16C530()
{
  return sub_16BDB8(&qword_30B120, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_26B760);
}

uint64_t sub_16C55C()
{
  return sub_16BDB8(&qword_30B128, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_26B7FC);
}

uint64_t sub_16C588()
{
  return sub_16BDB8(&qword_30B130, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPriceTrackingUpdateScheduleStepsKey, (uint64_t)&unk_26B8E4);
}

uint64_t sub_16C5B4()
{
  return sub_16BDB8(&qword_30B138, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPriceTrackingUpdateScheduleStepsKey, (uint64_t)&unk_26B8B8);
}

uint64_t sub_16C5E0()
{
  return sub_16BDB8(&qword_30B140, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPriceTrackingUpdateScheduleStepsKey, (uint64_t)&unk_26B954);
}

uint64_t sub_16C60C()
{
  return sub_16BDB8(&qword_30B148, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPersonalizationLocalSignalPurgeKey, (uint64_t)&unk_26BA3C);
}

uint64_t sub_16C638()
{
  return sub_16BDB8(&qword_30B150, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPersonalizationLocalSignalPurgeKey, (uint64_t)&unk_26BA10);
}

uint64_t sub_16C664()
{
  return sub_16BDB8(&qword_30B158, (uint64_t (*)(uint64_t))type metadata accessor for BooksDefaultsPersonalizationLocalSignalPurgeKey, (uint64_t)&unk_26BAAC);
}

uint64_t static BCCloudGlobalMetadataManaging<>.default.getter()
{
  uint64_t v0;

  return swift_initStaticObject(v0, &unk_30ABA0);
}

uint64_t BCDefaultCloudGlobalMetadataManager.fetchBool(forKey:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_30B278 + dword_30B278);
  v5 = (_QWORD *)swift_task_alloc(unk_30B27C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_16C724;
  return v7(a1, a2);
}

uint64_t sub_16C724(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *v2;
  v6 = swift_task_dealloc(v4);
  if (!v1)
    v6 = a1;
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

uint64_t sub_16C778(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  _BYTE *v11;

  v4 = *(_QWORD *)(a1 + 32);
  if (a4)
  {
    v6 = sub_16B968(&qword_30B398);
    v7 = swift_allocError(v6, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = a4;
    v9 = a4;
    return swift_continuation_throwingResumeWithError(v4, v7);
  }
  else
  {
    v11 = *(_BYTE **)(*(_QWORD *)(v4 + 64) + 40);
    *v11 = a2;
    v11[1] = a3;
    return swift_continuation_throwingResume(v4);
  }
}

uint64_t BCDefaultCloudGlobalMetadataManager.fetchString(forKey:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_30B288 + dword_30B288);
  v5 = (_QWORD *)swift_task_alloc(unk_30B28C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_16C868;
  return v7(a1, a2);
}

uint64_t sub_16C868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *v3;
  v8 = swift_task_dealloc(v6);
  if (!v2)
  {
    v8 = a1;
    v9 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
}

uint64_t sub_16C8CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_16B968(&qword_30B398);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v11 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v11 = v10;
    v11[1] = v12;
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t BCDefaultCloudGlobalMetadataManager.update(_:forKey:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(char, uint64_t, uint64_t);

  v9 = (uint64_t (*)(char, uint64_t, uint64_t))((char *)&dword_30B298 + dword_30B298);
  v7 = (_QWORD *)swift_task_alloc(unk_30B29C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_16D788;
  return v9(a1, a2, a3);
}

uint64_t sub_16C9CC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;

  v2 = *(_QWORD *)(a1 + 32);
  if (!a2)
    return swift_continuation_throwingResume(*(_QWORD *)(a1 + 32));
  v4 = sub_16B968(&qword_30B398);
  v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0, 0);
  *v6 = a2;
  v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

uint64_t BCDefaultCloudGlobalMetadataManager.update(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_30B2A8 + dword_30B2A8);
  v9 = (_QWORD *)swift_task_alloc(unk_30B2AC);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_16CAC4;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_16CAC4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t BCDefaultCloudGlobalMetadataManager.changeSignals.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
  v1 = NSNotificationCenter.notifications(named:object:)(CFSTR("BDSCloudGlobalMetadataManagerChanged"), 0);

  v5 = v1;
  v2 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v3 = sub_16D420();
  return AsyncMapSequence.init(_:transform:)(&v5, &unk_30B2B0, 0, v2, (char *)&type metadata for () + 8, v3);
}

uint64_t AppAnalyticsExtensionManager.resetSession(for:)()
{
  uint64_t v0;

  return sub_16D780(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t BCDefaultCloudGlobalMetadataManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BCDefaultCloudGlobalMetadataManager.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t sub_16CBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_30B278 + dword_30B278);
  v5 = (_QWORD *)swift_task_alloc(unk_30B27C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_16D78C;
  return v7(a1, a2);
}

uint64_t sub_16CC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_30B288 + dword_30B288);
  v5 = (_QWORD *)swift_task_alloc(unk_30B28C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_16D790;
  return v7(a1, a2);
}

uint64_t sub_16CCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_30B2A8 + dword_30B2A8);
  v9 = (_QWORD *)swift_task_alloc(unk_30B2AC);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_16D788;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_16CD38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch(sub_16CD50, 0, 0);
}

uint64_t sub_16CD50()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v3 = String._bridgeToObjectiveC()();
  v0[17] = v3;
  v0[7] = v0 + 19;
  v0[2] = v0;
  v0[3] = sub_16CE1C;
  v4 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_16C778;
  v5[3] = &unk_293558;
  v5[4] = v4;
  objc_msgSend(v2, "fetchMetadataBoolForKey:completion:", v3, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_16CE1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 144) = v1;
  if (v1)
    v2 = sub_16CEC4;
  else
    v2 = sub_16CE7C;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_16CE7C()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(v0 + 152);
  v2 = *(unsigned __int8 *)(v0 + 153);

  if (v2)
    v3 = v1;
  else
    v3 = 2;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_16CEC4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_16CF04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = a2;
  return swift_task_switch(sub_16CF1C, 0, 0);
}

uint64_t sub_16CF1C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v3 = String._bridgeToObjectiveC()();
  v0[19] = v3;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_16CFE8;
  v4 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_16C8CC;
  v5[3] = &unk_293540;
  v5[4] = v4;
  objc_msgSend(v2, "fetchMetadataStringForKey:completion:", v3, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_16CFE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 160) = v1;
  if (v1)
    v2 = sub_16D088;
  else
    v2 = sub_16D048;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_16D048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_16D088()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_16D0C8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 120) = a2;
  *(_QWORD *)(v3 + 128) = a3;
  *(_BYTE *)(v3 + 152) = a1;
  return swift_task_switch(sub_16D0E4, 0, 0);
}

uint64_t sub_16D0E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  NSString v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 16;
  v2 = *(unsigned __int8 *)(v0 + 152);
  v3 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v4 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v0 + 136) = v4;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_16D1B0;
  v5 = swift_continuation_init(v0 + 16, 1);
  *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
  v6 = (_QWORD *)(v0 + 80);
  v6[1] = 0x40000000;
  v6[2] = sub_16C9CC;
  v6[3] = &unk_293528;
  v6[4] = v5;
  objc_msgSend(v3, "updateMetadataBool:forKey:completion:", v2, v4, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_16D1B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 144) = v1;
  if (v1)
    v2 = sub_16CEC4;
  else
    v2 = sub_16D210;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_16D210()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_16D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  return swift_task_switch(sub_16D260, 0, 0);
}

uint64_t sub_16D260()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  NSString v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0 + 2;
  v2 = (void *)objc_opt_self(BCCloudGlobalMetadataManager);
  v3 = String._bridgeToObjectiveC()();
  v0[19] = v3;
  v4 = String._bridgeToObjectiveC()();
  v0[20] = v4;
  v0[2] = v0;
  v0[3] = sub_16D340;
  v5 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_16C9CC;
  v6[3] = &unk_293510;
  v6[4] = v5;
  objc_msgSend(v2, "updateMetadataString:forKey:completion:", v3, v4, v6);
  return swift_continuation_await(v1);
}

uint64_t sub_16D340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 168) = v1;
  if (v1)
    v2 = sub_16D3D8;
  else
    v2 = sub_16D3A0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_16D3A0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_16D3D8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 160);
  v2 = *(void **)(v0 + 152);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_16D420()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30B2B8;
  if (!qword_30B2B8)
  {
    v1 = type metadata accessor for NSNotificationCenter.Notifications(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSNotificationCenter.Notifications, v1);
    atomic_store(result, (unint64_t *)&qword_30B2B8);
  }
  return result;
}

uint64_t dispatch thunk of BCCloudGlobalMetadataManaging.fetchBool(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 8);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_16D4EC;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_16D4EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of BCCloudGlobalMetadataManaging.fetchString(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(int **)(a4 + 16);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v9 + *v9);
  v10 = (_QWORD *)swift_task_alloc(v9[1]);
  *(_QWORD *)(v4 + 16) = v10;
  *v10 = v4;
  v10[1] = sub_16D5C0;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_16D5C0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t dispatch thunk of BCCloudGlobalMetadataManaging.update(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = *(int **)(a5 + 24);
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v11 + *v11);
  v12 = (_QWORD *)swift_task_alloc(v11[1]);
  *(_QWORD *)(v5 + 16) = v12;
  *v12 = v5;
  v12[1] = sub_16D788;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of BCCloudGlobalMetadataManaging.update(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int *v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = *(int **)(a6 + 32);
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v13 + *v13);
  v14 = (_QWORD *)swift_task_alloc(v13[1]);
  *(_QWORD *)(v6 + 16) = v14;
  *v14 = v6;
  v14[1] = sub_16CAC4;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of BCCloudGlobalMetadataManaging.changeSignals.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t type metadata accessor for BCDefaultCloudGlobalMetadataManager()
{
  return objc_opt_self(_TtC8BookCore35BCDefaultCloudGlobalMetadataManager);
}

uint64_t method lookup function for BCDefaultCloudGlobalMetadataManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BCDefaultCloudGlobalMetadataManager);
}

uint64_t sub_16D780(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t NSObject.hasAXFocus.getter()
{
  uint64_t v0;
  id v1;
  id v2;
  unint64_t v3;
  void *v4;
  char v5;
  void *v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v1 = UIAccessibilityFocusedElement(0);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v8);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_16D864((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {
    sub_16D8AC((uint64_t)v9);
    goto LABEL_8;
  }
  v3 = sub_16D8EC();
  if ((swift_dynamicCast(&v7, v9, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
  {
LABEL_8:
    v5 = 0;
    return v5 & 1;
  }
  v4 = v7;
  v5 = static NSObject.== infix(_:_:)(v0, v7);

  return v5 & 1;
}

uint64_t sub_16D864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_16B968(&qword_30ABB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_16D8AC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_16B968(&qword_30ABB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_16D8EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30B3A0;
  if (!qword_30B3A0)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_30B3A0);
  }
  return result;
}

uint64_t ReadingHistoryAppFileSyncManager.observable.getter()
{
  return CRDTModelLocalFileManager.observable.getter();
}

uint64_t ReadingHistoryAppFileSyncManager.model.getter()
{
  return CRDTModelLocalFileManager.model.getter();
}

uint64_t ReadingHistoryAppFileSyncManager.enableCloudSync.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ReadingHistoryAppFileSyncManager.enableCloudSync.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 16, v4, 1, 0);
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

void *ReadingHistoryAppFileSyncManager.enableCloudSync.modify(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 16, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t ReadingHistoryAppFileSyncManager.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, 96, 7);
  ReadingHistoryAppFileSyncManager.init()();
  return v1;
}

_QWORD *ReadingHistoryAppFileSyncManager.init()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (_QWORD *)v0;
  *(_BYTE *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 56) = &_swiftEmptyDictionarySingleton;
  v2 = sub_16B968(&qword_30B3A8);
  v3 = swift_allocObject(v2, 20, 7);
  *(_DWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v0 + 64) = v3;
  *(_QWORD *)(v0 + 72) = 0xD00000000000003ELL;
  *(_QWORD *)(v0 + 80) = 0x8000000000214EA0;
  *(_QWORD *)(v0 + 88) = 0;
  *(_QWORD *)(v0 + 48) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ReadingHistoryServiceClient()), "init");
  sub_16B968(&qword_30B3B0);
  v4 = CRDTModelLocalFileManager.__allocating_init(clientName:delegate:)(0x736B6F6F42, 0xE500000000000000, 0, 0);
  *(_QWORD *)(v0 + 24) = v4;
  sub_16B968(&qword_30B3B8);
  v5 = CRDTModelFileSyncManager.__allocating_init(clientName:groupContext:transactionProvider:delegate:)(0x736B6F6F42, 0xE500000000000000, 0, objc_msgSend(objc_allocWithZone((Class)BDSOSTransactionProvider), "init"), 0, 0);
  v1[4] = v5;
  v6 = sub_16B968(&qword_30B3C0);
  v7 = swift_allocObject(v6, 32, 7);
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(v7 + 24) = v5;
  v1[5] = v7;
  v8 = (void *)objc_opt_self(NSUserDefaults);
  swift_retain(v4);
  swift_retain(v5);
  v9 = objc_msgSend(v8, "standardUserDefaults");
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "integerForKey:", v10);

  v1[11] = v11;
  v12 = v1[4];
  swift_retain(v12);
  CRDTModelFileSyncManager.disableReadingInBackground.setter(1);
  swift_release(v12);
  v13 = v1[4];
  v15 = sub_16F67C(&qword_30B3C8, v14, (uint64_t (*)(uint64_t))type metadata accessor for ReadingHistoryAppFileSyncManager, (uint64_t)&protocol conformance descriptor for ReadingHistoryAppFileSyncManager);
  swift_retain(v13);
  v16 = swift_retain(v1);
  CRDTModelFileSyncManager.delegate.setter(v16, v15);
  swift_release(v13);
  sub_16DC80();
  return v1;
}

uint64_t type metadata accessor for ReadingHistoryAppFileSyncManager()
{
  return objc_opt_self(_TtC8BookCore32ReadingHistoryAppFileSyncManager);
}

void sub_16DC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;

  v1 = v0;
  sub_16F6BC(0, &qword_30B588, UIApplication_ptr);
  v2 = static UIApplication.sharedIfNotExtension.getter();
  if (v2)
  {
    v3 = (void *)v2;
    v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v5, "addObserver:selector:name:object:", v1, "applicationWillEnterForeground:", UIApplicationWillEnterForegroundNotification, v3);
    objc_msgSend(v5, "addObserver:selector:name:object:", v1, "applicationDidBecomeActive:", UIApplicationDidBecomeActiveNotification, v3);

  }
  else
  {
    v4 = static os_log_type_t.default.getter();
    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
    v5 = (id)static OS_os_log.readingActivity.getter();
    os_log(_:dso:log:_:_:)(v4, &dword_0);
  }

}

Swift::Void __swiftcall ReadingHistoryAppFileSyncManager.startObserving()()
{
  sub_16DDCC();
}

uint64_t sub_16DDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  v2 = CRDTModelLocalFileManager.observable.getter();
  v3 = swift_allocObject(&unk_293698, 24, 7);
  swift_weakInit(v3 + 16, v1);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(v1, sub_16F63C, v3);
  swift_release(v2);
  v4 = swift_release(v3);
  v5 = CRDTModelFileSyncManager.observable.getter(v4);
  v6 = swift_allocObject(&unk_293698, 24, 7);
  swift_weakInit(v6 + 16, v1);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(v1, sub_16F65C, v6);
  swift_release(v5);
  return swift_release(v6);
}

uint64_t ReadingHistoryAppFileSyncManager.sync(_:)(uint64_t a1)
{
  return CRDTModelLocalFileManager.sync(_:isRemote:)(a1, 0);
}

uint64_t ReadingHistoryAppFileSyncManager.sync(_:isRemote:)(uint64_t a1, uint64_t a2)
{
  return CRDTModelLocalFileManager.sync(_:isRemote:)(a1, a2);
}

uint64_t ReadingHistoryAppFileSyncManager.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  return v0;
}

uint64_t ReadingHistoryAppFileSyncManager.__deallocating_deinit()
{
  uint64_t v0;

  ReadingHistoryAppFileSyncManager.deinit();
  return swift_deallocClassInstance(v0, 96, 7);
}

uint64_t sub_16DFEC()
{
  return CRDTModelLocalFileManager.model.getter();
}

uint64_t sub_16E010()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = *v0;
  swift_beginAccess(*v0 + 16, v3, 0, 0);
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_16E04C(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *v1;
  result = swift_beginAccess(v3 + 16, v5, 1, 0);
  *(_BYTE *)(v3 + 16) = a1;
  return result;
}

void *sub_16E08C(uint64_t a1)
{
  _QWORD *v1;

  swift_beginAccess(*v1 + 16, a1, 33, 0);
  return &j_j__swift_endAccess;
}

uint64_t sub_16E0CC()
{
  return CRDTModelLocalFileManager.observable.getter();
}

uint64_t sub_16E0F0(uint64_t a1)
{
  return CRDTModelLocalFileManager.sync(_:isRemote:)(a1, 0);
}

void ReadingHistoryAppFileSyncManager.readingTimeDidIncrement(date:day:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 64) + 16);
  os_unfair_lock_lock(v5);
  sub_16E170(v2, a1, a2);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_16E170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v6 = sub_16B968(&qword_30B558);
  __chkstk_darwin(v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for Date(0);
  __chkstk_darwin(v9);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t))(v12 + 16))(v11, a2);
  v13 = type metadata accessor for ReadingHistoryDay(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v8, a3, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess(a1 + 56, v17, 33, 0);
  sub_186B48((uint64_t)v8, (uint64_t)v11);
  return swift_endAccess(v17);
}

uint64_t ReadingHistoryAppFileSyncManager._consumeChangedDays()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 64) + 16);
  os_unfair_lock_lock(v1);
  sub_16F2A0(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1);
  return v2;
}

void sub_16E2EC(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v6;
  NSString v7;

  v3 = *(_QWORD *)(a1 + 88);
  v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a1 + 88) = v4;
    v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setInteger:forKey:", v4, v7);

    *a2 = *(_QWORD *)(a1 + 88);
  }
}

uint64_t ReadingHistoryAppFileSyncManager.modelDidSave(syncVersion:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v20 = a1;
  v3 = type metadata accessor for CRDTModelSyncVersion(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_16B968(&qword_30C8A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 64) + 16);
  os_unfair_lock_lock(v9);
  sub_16F2A0(&v21);
  v10 = v21;
  os_unfair_lock_unlock(v9);
  v11 = CRDTModelFileSyncManager.crdtContext.getter();
  v12 = static os_log_type_t.default.getter(v11);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v13 = (void *)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v12, &dword_0);

  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v3);
  v15 = *(unsigned __int8 *)(v4 + 80);
  v16 = (v15 + 56) & ~v15;
  v17 = (char *)swift_allocObject(&unk_293580, v16 + v5, v15 | 7);
  *((_QWORD *)v17 + 2) = 0;
  *((_QWORD *)v17 + 3) = 0;
  *((_QWORD *)v17 + 4) = v2;
  *((_QWORD *)v17 + 5) = v10;
  *((_QWORD *)v17 + 6) = v11;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v17[v16], (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain(v2);
  v18 = sub_16E978((uint64_t)v8, (uint64_t)&unk_30B3D8, (uint64_t)v17);
  return swift_release(v18);
}

uint64_t sub_16E570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[6] = a6;
  v7[7] = a7;
  v7[4] = a4;
  v7[5] = a5;
  return swift_task_switch(sub_16E5D8, 0, 0);
}

uint64_t sub_16E5D8()
{
  _QWORD *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = v0[4];
  v2 = *(os_unfair_lock_s **)(v1 + 64);
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = sub_16F600;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = v2 + 4;
  os_unfair_lock_lock(v2 + 4);
  (*(void (**)(uint64_t *__return_ptr))(v3 + 16))(&v12);
  v5 = v0[5];
  v6 = v12;
  os_unfair_lock_unlock(v4);
  swift_task_dealloc(v3);
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = v0[5];
    v8 = (void *)v0[6];
    type metadata accessor for ReadingHistoryUpdate(0);
    swift_bridgeObjectRetain(v7);
    v9 = ReadingHistoryUpdate.__allocating_init(days:crdtContext:editGeneration:)(v7, v8, v6);
  }
  else
  {
    v9 = 0;
  }
  v0[8] = v9;
  v10 = (_QWORD *)swift_task_alloc(dword_30B98C);
  v0[9] = v10;
  *v10 = v0;
  v10[1] = sub_16E748;
  return sub_178FC4(v0[7], v9);
}

uint64_t sub_16E748()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 72));
  return swift_task_switch(sub_16E7C8, 0, 0);
}

uint64_t sub_16E7C8(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  NSObject *v3;
  _BOOL4 v4;
  void *v5;
  id v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = static os_log_type_t.default.getter(a1);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v3 = static OS_os_log.readingActivity.getter();
  v4 = os_log_type_enabled(v3, v2);
  v5 = *(void **)(v1 + 64);
  if (v4)
  {
    v6 = v5;
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 138412290;
    if (v5)
    {
      *(_QWORD *)(v1 + 24) = v6;
      v9 = v6;
      v10 = v1 + 24;
      v11 = v1 + 32;
    }
    else
    {
      v10 = v1 + 16;
      *(_QWORD *)(v1 + 16) = 0;
      v11 = v1 + 24;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v10, v11, v7 + 4, v7 + 12);
    *v8 = *(_QWORD *)(v1 + 64);

    _os_log_impl(&dword_0, v3, v2, "ReadingHistoryAppFileSyncManager: DONE handleSyncFileChange task - update: %@", v7, 0xCu);
    v12 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v8, 1, v12);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

    v6 = v5;
  }

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_16E978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_16F52C(a1);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_293670, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_30B548, v16);
}

void sub_16EAC0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)v0 + 64) + 16);
  os_unfair_lock_lock(v1);
  sub_16F50C();
  os_unfair_lock_unlock(v1);
}

unint64_t static ReadingHistoryModel.modelName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_16EB44()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = type metadata accessor for ReadingHistoryModel(0);
  v23 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_16B968(&qword_30B560);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v22 - v8;
  v10 = sub_16B968(&qword_30B568);
  v24 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_16B968(&qword_30B570);
  ObservableContainer.Event.currentValue.getter(v13);
  ModelState.loaded.getter(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for ModelState.LoadedState.ready<A>(_:), v3);
  v14 = sub_16F67C(&qword_30B578, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v15 = sub_16F67C(&qword_30B580, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v16 = static ModelState.LoadedState.== infix(_:_:)(v9, v7, v0, v14, v15);
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v7, v3);
  v18 = ((uint64_t (*)(char *, uint64_t))v17)(v9, v3);
  v19 = static os_log_type_t.default.getter(v18);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v20 = (void *)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v19, &dword_0);

  if ((v16 & 1) != 0)
  {
    ModelState.model.getter(v10);
    CRDTModelFileSyncManager.syncAfterLoaded(_:isRemote:completion:)(v2, 0, sub_16F134, 0);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v2, v0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, v10);
}

uint64_t sub_16EE00(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    a3(a1);
    return swift_release(v7);
  }
  return result;
}

uint64_t sub_16EE6C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = type metadata accessor for ReadingHistoryModel(0);
  v23 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_16B968(&qword_30B560);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v22 - v8;
  v10 = sub_16B968(&qword_30B568);
  v24 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_16B968(&qword_30B570);
  ObservableContainer.Event.currentValue.getter(v13);
  ModelState.loaded.getter(v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, enum case for ModelState.LoadedState.ready<A>(_:), v3);
  v14 = sub_16F67C(&qword_30B578, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v15 = sub_16F67C(&qword_30B580, 255, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v16 = static ModelState.LoadedState.== infix(_:_:)(v9, v7, v0, v14, v15);
  v17 = *(void (**)(char *, uint64_t))(v4 + 8);
  v17(v7, v3);
  v18 = ((uint64_t (*)(char *, uint64_t))v17)(v9, v3);
  v19 = static os_log_type_t.default.getter(v18);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v20 = (void *)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v19, &dword_0);

  if ((v16 & 1) != 0)
  {
    ModelState.model.getter(v10);
    CRDTModelLocalFileManager.syncAfterLoaded(_:isRemote:completion:)(v2, 1, sub_16F128, 0);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v2, v0);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, v10);
}

void sub_16F128()
{
  sub_16F140();
}

void sub_16F134()
{
  sub_16F140();
}

void sub_16F140()
{
  uint64_t v0;
  id v1;

  v0 = static os_log_type_t.default.getter();
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v1 = (id)static OS_os_log.readingActivity.getter();
  os_log(_:dso:log:_:_:)(v0, &dword_0);

}

uint64_t sub_16F1C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_16F1F0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_16F254;
  return v6(a1);
}

uint64_t sub_16F254()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_16F2A0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];

  result = swift_beginAccess(v1 + 56, v5, 1, 0);
  v4 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = &_swiftEmptyDictionarySingleton;
  *a1 = v4;
  return result;
}

uint64_t sub_16F2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for CRDTModelSyncVersion(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_16F378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for CRDTModelSyncVersion(0) - 8) + 80);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = v0 + ((v2 + 56) & ~v2);
  v5 = swift_task_alloc(dword_30B3D4);
  v6 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_16CAC4;
  *(_QWORD *)(v5 + 48) = v3;
  *(_QWORD *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  return swift_task_switch(sub_16E5D8, 0, 0);
}

uint64_t sub_16F404@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1;
  result = swift_beginAccess(*a1 + 16, v5, 0, 0);
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_16F448(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess(*a2 + 16, v5, 1, 0);
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t method lookup function for ReadingHistoryAppFileSyncManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingHistoryAppFileSyncManager);
}

uint64_t dispatch thunk of ReadingHistoryAppFileSyncManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_16F4A0(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 112);
}

uint64_t type metadata accessor for CRDTModelRemoteSyncController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for CRDTModelRemoteSyncController);
}

uint64_t sub_16F4F0()
{
  uint64_t *v0;

  return sub_16E170(v0[2], v0[3], v0[4]);
}

uint64_t sub_16F50C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_16F52C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_16B968(&qword_30C8A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_16F56C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_16F590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_30B544);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_16CAC4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_30B540 + dword_30B540))(a1, v4);
}

void sub_16F600(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_16E2EC(v1, a1);
}

uint64_t sub_16F618()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_16F63C(uint64_t a1)
{
  uint64_t v1;

  return sub_16EE00(a1, v1, (void (*)(uint64_t))sub_16EB44);
}

uint64_t sub_16F65C(uint64_t a1)
{
  uint64_t v1;

  return sub_16EE00(a1, v1, (void (*)(uint64_t))sub_16EE6C);
}

uint64_t sub_16F67C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_16F6BC(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t static ReadingGoalsData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  void (*v89)(char *, uint64_t, uint64_t);
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  void (*v93)(char *, uint64_t);
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _BOOL4 v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  double v124;
  uint64_t v125;
  double v126;
  char *v127;
  char *v128;
  uint64_t v129;
  double v130;
  uint64_t v131;
  double v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  int v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  int v142;
  char *v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  void (*v160)(char *, uint64_t);
  uint64_t v161;
  double v162;
  uint64_t v163;
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;

  v198 = type metadata accessor for DefaultReadingGoal(0);
  v177 = *(_QWORD *)(v198 - 8);
  v4 = __chkstk_darwin(v198);
  v182 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v183 = (char *)&v166 - v7;
  v8 = __chkstk_darwin(v6);
  v175 = (char *)&v166 - v9;
  __chkstk_darwin(v8);
  v171 = (char *)&v166 - v10;
  v200 = type metadata accessor for DailyReadingGoalStatus(0);
  v176 = *(_QWORD *)(v200 - 8);
  v11 = __chkstk_darwin(v200);
  v170 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v169 = (char *)&v166 - v14;
  v15 = __chkstk_darwin(v13);
  v174 = (char *)&v166 - v16;
  __chkstk_darwin(v15);
  v173 = (char *)&v166 - v17;
  v18 = type metadata accessor for ReadingGoalsData(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v193 = (char *)&v166 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v192 = (char *)&v166 - v23;
  v24 = __chkstk_darwin(v22);
  v190 = (char *)&v166 - v25;
  v26 = __chkstk_darwin(v24);
  v191 = (char *)&v166 - v27;
  v28 = __chkstk_darwin(v26);
  v194 = (char *)&v166 - v29;
  v30 = __chkstk_darwin(v28);
  v189 = (char *)&v166 - v31;
  v32 = __chkstk_darwin(v30);
  v184 = (char *)&v166 - v33;
  v34 = __chkstk_darwin(v32);
  v188 = (char *)&v166 - v35;
  v36 = __chkstk_darwin(v34);
  v186 = (char *)&v166 - v37;
  v38 = __chkstk_darwin(v36);
  v187 = (char *)&v166 - v39;
  v40 = __chkstk_darwin(v38);
  v180 = (char *)&v166 - v41;
  v42 = __chkstk_darwin(v40);
  v181 = (char *)&v166 - v43;
  v44 = __chkstk_darwin(v42);
  v199 = (char *)&v166 - v45;
  v46 = __chkstk_darwin(v44);
  v197 = (char *)&v166 - v47;
  v48 = __chkstk_darwin(v46);
  v179 = (char *)&v166 - v49;
  v50 = __chkstk_darwin(v48);
  v185 = (char *)&v166 - v51;
  v52 = __chkstk_darwin(v50);
  v195 = (char *)&v166 - v53;
  v54 = __chkstk_darwin(v52);
  v196 = (char *)&v166 - v55;
  v56 = __chkstk_darwin(v54);
  v58 = (char *)&v166 - v57;
  v59 = __chkstk_darwin(v56);
  v61 = (char *)&v166 - v60;
  v62 = ReadingGoalsData.dailyReadingGoalDuration.getter(v59);
  v63 = a2;
  v64 = ReadingGoalsData.dailyReadingGoalDuration.getter(v62);
  v65 = v19;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v67 = a1;
  v66(v61, a1, v18);
  v68 = v63;
  v69 = ((uint64_t (*)(char *, uint64_t, uint64_t))v66)(v58, v63, v18);
  v70 = v62 == v64;
  v71 = v200;
  v178 = v63;
  if (!v70)
  {
    v80 = *(void (**)(char *, uint64_t))(v65 + 8);
    v80(v58, v18);
    v80(v61, v18);
    v81 = v196;
    v82 = v67;
    v66(v196, v67, v18);
    v83 = v195;
    v66(v195, v68, v18);
    v84 = v68;
    v85 = v197;
    v86 = v179;
    v87 = v81;
    v88 = v83;
    v89 = v66;
LABEL_12:
    v80(v88, v18);
    v80(v87, v18);
    v104 = v185;
    v89(v185, v82, v18);
    v89(v86, v84, v18);
    v105 = v82;
LABEL_13:
    v107 = 0;
    goto LABEL_14;
  }
  v168 = v65;
  v172 = v67;
  v72 = v173;
  v73 = ReadingGoalsData.dailyReadingGoalStatus.getter(v69);
  v74 = v174;
  v167 = v58;
  ReadingGoalsData.dailyReadingGoalStatus.getter(v73);
  v75 = sub_16BDB8(&qword_30B598, (uint64_t (*)(uint64_t))&type metadata accessor for DailyReadingGoalStatus, (uint64_t)&protocol conformance descriptor for DailyReadingGoalStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v203, v71, v75);
  dispatch thunk of RawRepresentable.rawValue.getter(&v201, v71, v75);
  v76 = v204;
  v77 = v202;
  v78 = v61;
  if (v203 == v201 && v204 == v202)
  {
    v79 = 1;
    v77 = v204;
  }
  else
  {
    v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v203, v204, v201, v202, 0);
  }
  v89 = v66;
  swift_bridgeObjectRelease(v76);
  swift_bridgeObjectRelease(v77);
  v90 = *(void (**)(char *, uint64_t))(v176 + 8);
  v91 = v200;
  v90(v74, v200);
  v90(v72, v91);
  v92 = *(void (**)(char *, uint64_t))(v168 + 8);
  v92(v167, v18);
  v93 = v92;
  v92(v78, v18);
  v87 = v196;
  v66(v196, v172, v18);
  v94 = v195;
  v84 = v178;
  v95 = ((uint64_t (*)(char *, uint64_t, uint64_t))v66)(v195, v178, v18);
  if ((v79 & 1) == 0)
  {
    v82 = v172;
    v85 = v197;
    v86 = v179;
    v88 = v94;
    v80 = v93;
    goto LABEL_12;
  }
  v96 = v171;
  v97 = ReadingGoalsData.defaultReadingGoal.getter(v95);
  ReadingGoalsData.defaultReadingGoal.getter(v97);
  v98 = sub_16BDB8(&qword_30B5A0, (uint64_t (*)(uint64_t))&type metadata accessor for DefaultReadingGoal, (uint64_t)&protocol conformance descriptor for DefaultReadingGoal);
  v99 = v198;
  dispatch thunk of RawRepresentable.rawValue.getter(&v203, v198, v98);
  dispatch thunk of RawRepresentable.rawValue.getter(&v201, v99, v98);
  v100 = v204;
  v101 = v202;
  if (v203 == v201 && v204 == v202)
  {
    swift_bridgeObjectRelease_n(v204, 2);
    v102 = *(void (**)(char *, uint64_t))(v177 + 8);
    v103 = v198;
    v102(v175, v198);
    v102(v96, v103);
    v80 = v93;
    v93(v195, v18);
    v93(v196, v18);
    v104 = v185;
    v105 = v172;
    v89(v185, v172, v18);
    v86 = v179;
    v106 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v179, v84, v18);
    v85 = v197;
  }
  else
  {
    LODWORD(v174) = _stringCompareWithSmolCheck(_:_:expecting:)(v203, v204, v201, v202, 0);
    swift_bridgeObjectRelease(v100);
    swift_bridgeObjectRelease(v101);
    v160 = *(void (**)(char *, uint64_t))(v177 + 8);
    v161 = v198;
    v160(v175, v198);
    v160(v96, v161);
    v80 = v93;
    v93(v195, v18);
    v93(v196, v18);
    v104 = v185;
    v105 = v172;
    v89(v185, v172, v18);
    v86 = v179;
    v106 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v179, v84, v18);
    v85 = v197;
    if ((v174 & 1) == 0)
      goto LABEL_13;
  }
  v162 = ReadingGoalsData.defaultReadingGoalChangeDate.getter(v106);
  v107 = v162 == ReadingGoalsData.defaultReadingGoalChangeDate.getter(v163);
LABEL_14:
  v80(v86, v18);
  v80(v104, v18);
  v89(v85, v105, v18);
  v108 = v199;
  v109 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v199, v84, v18);
  if (!v107)
  {
    v80(v108, v18);
    v80(v85, v18);
    v117 = v181;
    v89(v181, v105, v18);
    v118 = v180;
    v89(v180, v84, v18);
    v120 = v184;
    goto LABEL_30;
  }
  v110 = ReadingGoalsData.defaultYearlyReadingGoal.getter(v109);
  ReadingGoalsData.defaultYearlyReadingGoal.getter(v110);
  v111 = sub_16BDB8(&qword_30B5A0, (uint64_t (*)(uint64_t))&type metadata accessor for DefaultReadingGoal, (uint64_t)&protocol conformance descriptor for DefaultReadingGoal);
  v112 = v198;
  dispatch thunk of RawRepresentable.rawValue.getter(&v203, v198, v111);
  dispatch thunk of RawRepresentable.rawValue.getter(&v201, v112, v111);
  v113 = v204;
  v114 = v202;
  if (v203 == v201 && v204 == v202)
  {
    swift_bridgeObjectRelease_n(v204, 2);
    v115 = *(void (**)(char *, uint64_t))(v177 + 8);
    v116 = v198;
    v115(v182, v198);
    v115(v183, v116);
    v80(v199, v18);
    v80(v197, v18);
    v117 = v181;
    v89(v181, v105, v18);
    v118 = v180;
    v84 = v178;
    v119 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v180, v178, v18);
    v120 = v184;
    goto LABEL_20;
  }
  v121 = _stringCompareWithSmolCheck(_:_:expecting:)(v203, v204, v201, v202, 0);
  swift_bridgeObjectRelease(v113);
  swift_bridgeObjectRelease(v114);
  v122 = *(void (**)(char *, uint64_t))(v177 + 8);
  v123 = v198;
  v122(v182, v198);
  v122(v183, v123);
  v80(v199, v18);
  v80(v197, v18);
  v117 = v181;
  v89(v181, v105, v18);
  v118 = v180;
  v84 = v178;
  v119 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v180, v178, v18);
  v120 = v184;
  if ((v121 & 1) == 0)
  {
LABEL_30:
    v80(v118, v18);
    v80(v117, v18);
    v127 = v187;
    v89(v187, v105, v18);
    v128 = v186;
    v89(v186, v84, v18);
    goto LABEL_31;
  }
LABEL_20:
  v124 = ReadingGoalsData.defaultYearlyReadingGoalChangeDate.getter(v119);
  v126 = ReadingGoalsData.defaultYearlyReadingGoalChangeDate.getter(v125);
  v80(v118, v18);
  v80(v117, v18);
  v127 = v187;
  v89(v187, v105, v18);
  v128 = v186;
  v129 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v186, v84, v18);
  if (v124 != v126)
  {
LABEL_31:
    v80(v128, v18);
    v80(v127, v18);
    v133 = v188;
    v89(v188, v105, v18);
    v89(v120, v84, v18);
    v135 = v191;
    goto LABEL_32;
  }
  v130 = ReadingGoalsData.lastLongestGoalReachedDate.getter(v129);
  v132 = ReadingGoalsData.lastLongestGoalReachedDate.getter(v131);
  v80(v128, v18);
  v80(v127, v18);
  v133 = v188;
  v89(v188, v105, v18);
  v134 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v120, v84, v18);
  v135 = v191;
  if (v130 != v132)
  {
LABEL_32:
    v80(v120, v18);
    v80(v133, v18);
    v138 = v189;
    v89(v189, v105, v18);
    v140 = v194;
    v89(v194, v84, v18);
LABEL_33:
    v80(v140, v18);
    v80(v138, v18);
    v89(v135, v105, v18);
    v143 = v190;
    v89(v190, v84, v18);
    v145 = v192;
LABEL_34:
    v80(v143, v18);
    v80(v135, v18);
    v89(v145, v105, v18);
    v149 = v193;
    v89(v193, v84, v18);
    goto LABEL_35;
  }
  v136 = ReadingGoalsData.longestGoalReachedDays.getter(v134);
  LODWORD(v199) = v136;
  v137 = ReadingGoalsData.longestGoalReachedDays.getter(v136);
  v80(v120, v18);
  v80(v133, v18);
  v138 = v189;
  v89(v189, v105, v18);
  v139 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v194, v84, v18);
  v70 = (_DWORD)v199 == v137;
  v140 = v194;
  if (!v70)
    goto LABEL_33;
  v141 = ReadingGoalsData.weeklyGoalsStatus.getter(v139);
  v142 = v141;
  LODWORD(v199) = ReadingGoalsData.weeklyGoalsStatus.getter(v141);
  v80(v140, v18);
  v80(v138, v18);
  v89(v135, v105, v18);
  v143 = v190;
  v144 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v190, v84, v18);
  v70 = v142 == (_DWORD)v199;
  v145 = v192;
  if (!v70)
    goto LABEL_34;
  v146 = v143;
  v147 = ReadingGoalsData.yearlyReadingGoalCount.getter(v144);
  v148 = ReadingGoalsData.yearlyReadingGoalCount.getter(v147);
  v80(v146, v18);
  v80(v135, v18);
  v89(v145, v105, v18);
  v149 = v193;
  v150 = ((uint64_t (*)(char *, uint64_t, uint64_t))v89)(v193, v84, v18);
  if (v147 != v148)
  {
LABEL_35:
    v158 = 0;
    goto LABEL_36;
  }
  v151 = v169;
  v152 = ReadingGoalsData.yearlyReadingGoalStatus.getter(v150);
  v153 = v170;
  ReadingGoalsData.yearlyReadingGoalStatus.getter(v152);
  v154 = sub_16BDB8(&qword_30B598, (uint64_t (*)(uint64_t))&type metadata accessor for DailyReadingGoalStatus, (uint64_t)&protocol conformance descriptor for DailyReadingGoalStatus);
  v155 = v200;
  dispatch thunk of RawRepresentable.rawValue.getter(&v203, v200, v154);
  dispatch thunk of RawRepresentable.rawValue.getter(&v201, v155, v154);
  v156 = v204;
  v157 = v202;
  if (v203 == v201 && v204 == v202)
  {
    v158 = 1;
    v157 = v204;
  }
  else
  {
    v158 = _stringCompareWithSmolCheck(_:_:expecting:)(v203, v204, v201, v202, 0);
  }
  swift_bridgeObjectRelease(v156);
  swift_bridgeObjectRelease(v157);
  v164 = *(void (**)(char *, uint64_t))(v176 + 8);
  v165 = v200;
  v164(v153, v200);
  v164(v151, v165);
  v149 = v193;
LABEL_36:
  v80(v149, v18);
  v80(v145, v18);
  return v158 & 1;
}

BOOL static BooksGoalsData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  double v35;
  char *v36;
  char *v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;

  v4 = type metadata accessor for BooksGoalsData(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  v47 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v46 = (char *)&v42 - v9;
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v42 - v11;
  v13 = __chkstk_darwin(v10);
  v43 = (char *)&v42 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v42 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v42 - v19;
  v21 = BooksGoalsData.audioBooksCompletedCnt.getter(v18);
  v22 = v21;
  v23 = BooksGoalsData.audioBooksCompletedCnt.getter(v21);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v44 = a1;
  v24(v20, a1, v4);
  v45 = a2;
  v25 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v17, a2, v4);
  if (v22 == v23)
  {
    v26 = BooksGoalsData.booksCompletedCnt.getter(v25);
    v27 = (_DWORD)v26 == BooksGoalsData.booksCompletedCnt.getter(v26);
  }
  else
  {
    v27 = 0;
  }
  v28 = *(void (**)(char *, uint64_t))(v5 + 8);
  v28(v17, v4);
  v28(v20, v4);
  v30 = v43;
  v29 = v44;
  v24(v43, v44, v4);
  v31 = v45;
  v32 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v12, v45, v4);
  if (v27)
  {
    v33 = BooksGoalsData.lastAudioBookCompletedDate.getter(v32);
    v35 = BooksGoalsData.lastAudioBookCompletedDate.getter(v34);
    v28(v12, v4);
    v28(v30, v4);
    v36 = v46;
    v24(v46, v29, v4);
    v37 = v47;
    v38 = ((uint64_t (*)(char *, uint64_t, uint64_t))v24)(v47, v31, v4);
    if (v33 == v35)
    {
      v39 = BooksGoalsData.lastBookCompletedDate.getter(v38);
      v27 = v39 == BooksGoalsData.lastBookCompletedDate.getter(v40);
    }
    else
    {
      v27 = 0;
    }
  }
  else
  {
    v28(v12, v4);
    v28(v30, v4);
    v36 = v46;
    v24(v46, v29, v4);
    v37 = v47;
    v24(v47, v31, v4);
  }
  v28(v37, v4);
  v28(v36, v4);
  return v27;
}

uint64_t sub_17092C()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for ReadingGoalsAnalytics(0);
  swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  result = sub_1718D0();
  qword_30B590 = result;
  return result;
}

uint64_t static ReadingGoalsAnalytics.shared.getter()
{
  if (qword_30AAD0 != -1)
    swift_once(&qword_30AAD0, sub_17092C);
  return swift_retain(qword_30B590);
}

uint64_t sub_1709A8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_1709F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_170A48(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_170AB8;
}

void sub_170AB8(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_170B24(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics__goalsState);
  swift_retain(v1);
  v2 = sub_16B968((uint64_t *)&unk_30B5B0);
  OS_dispatch_queue.sync<A>(execute:)(sub_175BCC, v1, v2);
  return swift_release(v1);
}

uint64_t sub_170BA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_16B968((uint64_t *)&unk_30B5B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1765E0(a1, (uint64_t)v4, (uint64_t *)&unk_30B5B0);
  return sub_170C9C((uint64_t)v4);
}

uint64_t sub_170C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics__goalsState);
  swift_retain(v1);
  v2 = sub_16B968((uint64_t *)&unk_30B5B0);
  OS_dispatch_queue.sync<A>(execute:)(sub_175BCC, v1, v2);
  return swift_release(v1);
}

uint64_t sub_170C9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[3];
  _QWORD aBlock[5];
  uint64_t v12;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics__goalsState);
  v10[2] = a1;
  v4 = *(NSObject **)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 96));
  v5 = (_QWORD *)swift_allocObject(&unk_293738, 40, 7);
  v5[2] = sub_175BE8;
  v5[3] = v10;
  v5[4] = v3;
  v6 = swift_allocObject(&unk_293760, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_175C14;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_175C28;
  v12 = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_175BAC;
  aBlock[3] = &unk_293778;
  v7 = _Block_copy(aBlock);
  v8 = v12;
  swift_retain_n(v3, 2);
  swift_retain(v6);
  swift_release(v8);
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v6, "", 95, 24, 20, 1);
  swift_release(v3);
  swift_release(v5);
  result = swift_release(v6);
  if ((v7 & 1) == 0)
    return sub_1766A8(a1, (uint64_t *)&unk_30B5B0);
  __break(1u);
  return result;
}

uint64_t sub_170E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  void *v48;
  double v49;
  NSString v50;
  char v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  double v59;
  NSString v60;
  id v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v68 = a3;
  v71 = a2;
  v4 = sub_16B968((uint64_t *)&unk_30B5B0);
  v5 = __chkstk_darwin(v4);
  v69 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v62 - v7;
  v9 = type metadata accessor for ReadingGoals.State(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v62 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v62 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v62 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v62 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)&v62 - v26;
  sub_1765E0(a1, (uint64_t)v8, (uint64_t *)&unk_30B5B0);
  v70 = v10;
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v28((uint64_t)v8, 1, v9) == 1)
  {
    sub_1766A8(a1, (uint64_t *)&unk_30B5B0);
    sub_1766A8((uint64_t)v8, (uint64_t *)&unk_30B5B0);
    v29 = a1;
    v30 = v71;
  }
  else
  {
    v63 = v19;
    v64 = v22;
    v65 = v13;
    v66 = v16;
    v67 = v25;
    v31 = v70;
    v32 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
    v32(v27, v8, v9);
    v30 = v71;
    v33 = v69;
    sub_1765E0(v71, v69, (uint64_t *)&unk_30B5B0);
    v34 = v9;
    if (v28(v33, 1, v9) == 1)
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v9);
      return sub_1766A8(v33, (uint64_t *)&unk_30B5B0);
    }
    v62 = a1;
    sub_1766A8(a1, (uint64_t *)&unk_30B5B0);
    v36 = (uint64_t)v67;
    v37 = ((uint64_t (*)(char *, uint64_t, uint64_t))v32)(v67, v33, v9);
    v38 = ReadingGoals.State.isDefaultDailyReadingGoal.getter(v37);
    v39 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v40 = v64;
    v39(v64, v27, v9);
    v41 = v63;
    v42 = v36;
    v39(v63, (char *)v36, v34);
    v43 = (uint64_t)v27;
    if ((v38 & 1) != 0)
    {
      v44 = sub_16BDB8(&qword_30B868, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingGoals.State, (uint64_t)&protocol conformance descriptor for ReadingGoals.State);
      v45 = dispatch thunk of static Equatable.== infix(_:_:)(v40, v41, v34, v44);
      v46 = *(void (**)(char *, uint64_t))(v70 + 8);
      v46(v41, v34);
      v47 = ((uint64_t (*)(char *, uint64_t))v46)(v40, v34);
      if ((v45 & 1) == 0)
      {
        v48 = *(void **)(v68 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_userDefaults);
        v49 = static Date.timeIntervalSinceReferenceDate.getter(v47);
        v50 = String._bridgeToObjectiveC()();
        objc_msgSend(v48, "setDouble:forKey:", v50, v49);

      }
    }
    else
    {
      v46 = *(void (**)(char *, uint64_t))(v70 + 8);
      v46(v41, v34);
      v47 = ((uint64_t (*)(char *, uint64_t))v46)(v40, v34);
    }
    v51 = ReadingGoals.State.isDefaultYearlyReadingGoal.getter(v47);
    v52 = v66;
    v39(v66, (char *)v43, v34);
    v53 = v65;
    v39(v65, (char *)v42, v34);
    if ((v51 & 1) != 0)
    {
      v54 = sub_16BDB8(&qword_30B868, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingGoals.State, (uint64_t)&protocol conformance descriptor for ReadingGoals.State);
      v55 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v53, v34, v54);
      v46(v53, v34);
      v56 = ((uint64_t (*)(char *, uint64_t))v46)(v52, v34);
      v57 = v68;
      v29 = v62;
      if ((v55 & 1) == 0)
      {
        v58 = *(void **)(v68 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_userDefaults);
        v59 = static Date.timeIntervalSinceReferenceDate.getter(v56);
        v60 = String._bridgeToObjectiveC()();
        objc_msgSend(v58, "setDouble:forKey:", v60, v59);

      }
    }
    else
    {
      v46(v53, v34);
      v46(v52, v34);
      v57 = v68;
      v29 = v62;
    }
    v61 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    objc_msgSend(v61, "postNotificationName:object:userInfo:", CFSTR("BCCustomizingReadingGoals"), v57, 0);

    sub_171EF4(v43, v42, 0);
    v46((char *)v42, v34);
    v46((char *)v43, v34);
  }
  return sub_1765E0(v30, v29, (uint64_t *)&unk_30B5B0);
}

void (*sub_171334(_QWORD *a1))(void ****a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x80uLL);
  *a1 = v3;
  v3[12] = v1;
  v4 = sub_16B968((uint64_t *)&unk_30B5B0);
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[13] = malloc(v5);
  v6 = malloc(v5);
  v7 = OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics__goalsState;
  v3[14] = v6;
  v3[15] = v7;
  v8 = *(_QWORD *)(v1 + v7);
  swift_retain(v8);
  OS_dispatch_queue.sync<A>(execute:)(sub_175BCC, v8, v4);
  swift_release(v8);
  return sub_171400;
}

void sub_171400(void ****a1, char a2)
{
  void ***v2;
  void **v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void **v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  NSObject *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  void **v22;
  _BYTE v23[16];
  uint64_t v24;
  void **v25;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[15];
    v5 = v2[12];
    v4 = (uint64_t)v2[13];
    v6 = sub_1765E0((uint64_t)v2[14], v4, (uint64_t *)&unk_30B5B0);
    v7 = *(uint64_t *)((char *)v3 + (_QWORD)v5);
    __chkstk_darwin(v6);
    v24 = v4;
    v25 = v5;
    v8 = *(NSObject **)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 96));
    v9 = (_QWORD *)swift_allocObject(&unk_2937B0, 40, 7);
    v9[2] = sub_17679C;
    v9[3] = v23;
    v9[4] = v7;
    v10 = swift_allocObject(&unk_2937D8, 32, 7);
    *(_QWORD *)(v10 + 16) = sub_175C14;
    *(_QWORD *)(v10 + 24) = v9;
    v2[4] = (void **)sub_176768;
    v2[5] = (void **)v10;
    *v2 = _NSConcreteStackBlock;
    v2[1] = (void **)1107296256;
    v2[2] = (void **)sub_175BAC;
    v2[3] = (void **)&unk_2937F0;
    v11 = _Block_copy(v2);
    v12 = v2[5];
    swift_retain_n(v7, 2);
    swift_retain(v10);
    swift_release(v12);
    dispatch_sync(v8, v11);
    _Block_release(v11);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation(v10, "", 95, 24, 20, 1);
    swift_release(v10);
    swift_release(v9);
    swift_release(v7);
    if ((v8 & 1) == 0)
    {
      v14 = v2[13];
      v13 = v2[14];
      sub_1766A8((uint64_t)v14, (uint64_t *)&unk_30B5B0);
LABEL_6:
      sub_1766A8((uint64_t)v13, (uint64_t *)&unk_30B5B0);
      free(v13);
      free(v14);
      free(v2);
      return;
    }
    __break(1u);
  }
  else
  {
    v15 = *(uint64_t *)((char *)v2[15] + (_QWORD)v2[12]);
    __chkstk_darwin(a1);
    v24 = v16;
    v25 = v17;
    v18 = *(NSObject **)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 96));
    v19 = (_QWORD *)swift_allocObject(&unk_293828, 40, 7);
    v19[2] = sub_17679C;
    v19[3] = v23;
    v19[4] = v15;
    v20 = swift_allocObject(&unk_293850, 32, 7);
    *(_QWORD *)(v20 + 16) = sub_175C14;
    *(_QWORD *)(v20 + 24) = v19;
    v2[6] = _NSConcreteStackBlock;
    v2[10] = (void **)sub_176768;
    v2[11] = (void **)v20;
    v2[7] = (void **)1107296256;
    v2[8] = (void **)sub_175BAC;
    v2[9] = (void **)&unk_293868;
    v21 = _Block_copy(v2 + 6);
    v22 = v2[11];
    swift_retain_n(v15, 2);
    swift_retain(v20);
    swift_release(v22);
    dispatch_sync(v18, v21);
    _Block_release(v21);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation(v20, "", 95, 24, 20, 1);
    swift_release(v20);
    swift_release(v19);
    swift_release(v15);
    if ((v18 & 1) == 0)
    {
      v14 = v2[13];
      v13 = v2[14];
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_171724()
{
  return sub_1717F0(&OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState);
}

uint64_t sub_171730(uint64_t a1)
{
  return sub_171840(a1, &OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState);
}

uint64_t (*sub_17173C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_171780(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = *a1;
  v6 = (uint64_t *)(*a2 + *a5);
  swift_beginAccess(v6, v9, 1, 0);
  v7 = *v6;
  *v6 = v5;
  swift_retain(v5);
  return swift_release(v7);
}

uint64_t sub_1717E4()
{
  return sub_1717F0(&OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState);
}

uint64_t sub_1717F0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _BYTE v4[24];

  v2 = (_QWORD *)(v1 + *a1);
  swift_beginAccess(v2, v4, 0, 0);
  return swift_retain(*v2);
}

uint64_t sub_171834(uint64_t a1)
{
  return sub_171840(a1, &OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState);
}

uint64_t sub_171840(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(v2 + *a2);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = a1;
  return swift_release(v5);
}

uint64_t (*sub_17188C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1718D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSString v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = sub_16B968(&qword_30B7F8);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_16B968((uint64_t *)&unk_30B5B0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0x54746E65746E6F63;
  *(_QWORD *)(v1 + 24) = 0xEB00000000657079;
  strcpy((char *)(v1 + 32), "dateFinished");
  *(_BYTE *)(v1 + 45) = 0;
  *(_WORD *)(v1 + 46) = -5120;
  v8 = v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastReadingGoalsData;
  v9 = type metadata accessor for ReadingGoalsData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastBooksGoalsData;
  v11 = type metadata accessor for BooksGoalsData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_userDefaults;
  *(_QWORD *)(v1 + v12) = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  swift_unknownObjectWeakInit(v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting, 0);
  v13 = type metadata accessor for ReadingGoals.State(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  v14 = sub_16B968(&qword_30B870);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics__goalsState) = sub_17593C((uint64_t)v7, (uint64_t *)&unk_30B5B0);
  v21 = xmmword_26BDC0;
  v23 = 0;
  v24 = 0;
  v22 = 0;
  v15 = sub_16B968(&qword_30B878);
  swift_allocObject(v15, 64, 7);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState) = sub_175764((uint64_t)&v21);
  v16 = type metadata accessor for ReadingHistory.State(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
  v17 = sub_16B968(&qword_30B880);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState) = sub_17593C((uint64_t)v4, &qword_30B7F8);
  v18 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  swift_retain(v1);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "addObserver:selector:name:object:", v1, "sessionActivityStateDidChange:", v19, 0);

  swift_release(v1);
  return v1;
}

void sub_171BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  __int128 *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  _QWORD v21[5];
  __int128 v22;
  __int128 v23;

  v0 = sub_16B968(&qword_30B7D8);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v20[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v1);
  v6 = (char *)&v20[-1] - v5;
  Notification.object.getter(v21, v4);
  if (!v21[3])
  {
    v13 = &qword_30ABB0;
    v14 = (__int128 *)v21;
    goto LABEL_8;
  }
  v7 = type metadata accessor for BATracker(0);
  if ((swift_dynamicCast(&v22, v21, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    return;
  v8 = (void *)v22;
  v9 = Notification.userInfo.getter();
  if (v9)
  {
    v10 = v9;
    strcpy((char *)v20, "sessionChange");
    HIWORD(v20[1]) = -4864;
    AnyHashable.init<A>(_:)(v21, v20, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v10 + 16) && (v11 = sub_188098((uint64_t)v21), (v12 & 1) != 0))
    {
      sub_17666C(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v22);
    }
    else
    {
      v22 = 0u;
      v23 = 0u;
    }
    swift_bridgeObjectRelease(v10);
    sub_176638((uint64_t)v21);
    if (*((_QWORD *)&v23 + 1))
    {
      if ((swift_dynamicCast(v20, &v22, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) == 0)
        goto LABEL_14;
      v15 = SessionChange.init(rawValue:)(v20[0]);
      if ((v16 & 1) != 0 || v15 != 1)
        goto LABEL_14;
      v17 = (uint64_t)&v6[*(int *)(v0 + 48)];
      sub_173390((uint64_t)v6, v17);
      v18 = (uint64_t)&v3[*(int *)(v0 + 48)];
      sub_1765E0((uint64_t)v6, (uint64_t)v3, &qword_30B5E0);
      sub_1765E0(v17, v18, &qword_30B5F0);
      sub_175400((uint64_t)v3, v18, (uint64_t)v8);

      sub_1766A8((uint64_t)v6, &qword_30B7D8);
      sub_1766A8(v18, &qword_30B5F0);
      v14 = (__int128 *)v3;
      v13 = &qword_30B5E0;
    }
    else
    {

      v13 = &qword_30ABB0;
      v14 = &v22;
    }
LABEL_8:
    sub_1766A8((uint64_t)v14, v13);
    return;
  }
LABEL_14:

}

uint64_t sub_171EF4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void *v36;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[5];
  uint64_t v47;

  v4 = v3;
  v39 = a3;
  v42 = type metadata accessor for DispatchWorkItemFlags(0);
  v45 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ReadingGoals.State(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v15 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v38 - v16;
  sub_175D4C();
  v40 = static OS_dispatch_queue.main.getter();
  v18 = swift_allocObject(&unk_2938A0, 24, 7);
  swift_weakInit(v18 + 16, v4);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v19(v17, a2, v11);
  v19(v15, a1, v11);
  v20 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = (v13 + v20 + v21) & ~v20;
  v23 = swift_allocObject(&unk_2938C8, v22 + v13, v20 | 7);
  v24 = v39;
  *(_QWORD *)(v23 + 16) = v18;
  *(_QWORD *)(v23 + 24) = v24;
  v25 = v23 + v21;
  v26 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v26(v25, v17, v11);
  v26(v23 + v22, v15, v11);
  aBlock[4] = sub_175E48;
  v47 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_2938E0;
  v27 = _Block_copy(aBlock);
  v28 = v47;
  v29 = v24;
  v30 = swift_release(v28);
  static DispatchQoS.unspecified.getter(v30);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v31 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v32 = sub_16B968((uint64_t *)&unk_30C330);
  v33 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
  v35 = v41;
  v34 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v42, v31);
  v36 = (void *)v40;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v35, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v10, v44);
}

void sub_1721E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  id v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  _QWORD v28[2];
  _BYTE v29[24];
  _BYTE v30[24];

  v28[1] = a4;
  v6 = type metadata accessor for ReadingGoalYearlyData(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ReadingGoalsDurationData(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v30, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v15 = Strong;
    if (a2)
    {
      v16 = a2;
      goto LABEL_4;
    }
    v24 = Strong + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting;
    swift_beginAccess(Strong + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting, v29, 0, 0);
    v25 = (void *)swift_unknownObjectWeakLoadStrong(v24);
    if (v25)
    {
      v26 = v25;
      v28[0] = v6;
      v27 = objc_msgSend(v25, "keyWindowAnalyticsTracker");
      swift_unknownObjectRelease(v26);
      if (v27)
      {
        v16 = v27;
        v6 = v28[0];
LABEL_4:
        v18 = ReadingGoals.State.streakDayGoal.getter(a2);
        if ((~*(_QWORD *)&v18 & 0x7FF0000000000000) != 0)
        {
          if (v18 > -9.22337204e18)
          {
            if (v18 < 9.22337204e18)
            {
              v19 = ReadingGoals.State.streakDayGoal.getter(v17);
              if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) != 0)
              {
                if (v19 > -9.22337204e18)
                {
                  if (v19 < 9.22337204e18)
                  {
                    v20 = ReadingGoalsDurationData.init(currentGoalDuration:prevGoalDuration:)((uint64_t)v18, (uint64_t)v19);
                    v21 = ReadingGoals.State.booksFinishedGoal.getter(v20);
                    v22 = ReadingGoals.State.booksFinishedGoal.getter(v21);
                    ReadingGoalYearlyData.init(currentYearlyGoal:prevYearlyGoal:)(v21, v22);
                    type metadata accessor for EventReporter(0);
                    v23 = (void *)static EventReporter.shared.getter();
                    EventReporter.emitReadingGoalChangedEvent(using:durationData:yearlyData:)(v16, v13, v9);

                    swift_release(v15);
                    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
                    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
                    return;
                  }
                  goto LABEL_21;
                }
LABEL_20:
                __break(1u);
LABEL_21:
                __break(1u);
                return;
              }
LABEL_19:
              __break(1u);
              goto LABEL_20;
            }
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_18;
      }
    }
    swift_release(v15);
  }
}

uint64_t sub_172474(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_1724A0(void *a1)
{
  return sub_172970(a1, (uint64_t)&unk_293918, (uint64_t)sub_175ED4, (uint64_t)&unk_293930);
}

void sub_1724BC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  void *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  void *v63;
  char *v64;
  uint64_t v65;
  char v66[32];
  char v67[32];

  v63 = a2;
  v3 = type metadata accessor for YearlyGoalsReachedData(0);
  v61 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v60 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DailyGoalsReachedData(0);
  v58 = *(_QWORD *)(v5 - 8);
  v59 = v5;
  __chkstk_darwin(v5);
  v57 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DefaultReadingGoal(0);
  v65 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v62 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v52 - v11;
  __chkstk_darwin(v10);
  v64 = (char *)&v52 - v13;
  v14 = sub_16B968((uint64_t *)&unk_30B5B0);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ReadingGoals.State(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v67, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v22 = Strong;
    v56 = v3;
    v23 = *(_QWORD *)(Strong + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics__goalsState);
    swift_retain(v23);
    OS_dispatch_queue.sync<A>(execute:)(sub_175BCC, v23, v14);
    swift_release(v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    {
      swift_release(v22);
      sub_1766A8((uint64_t)v16, (uint64_t *)&unk_30B5B0);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v24 = v63;
    if (v63)
    {
      v53 = v18;
      v54 = v17;
      v55 = v12;
      v52 = v63;
      goto LABEL_6;
    }
    v48 = v22 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting;
    swift_beginAccess(v22 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting, v66, 0, 0);
    v49 = (void *)swift_unknownObjectWeakLoadStrong(v48);
    if (v49)
    {
      v50 = v49;
      v51 = objc_msgSend(v49, "keyWindowAnalyticsTracker");
      swift_unknownObjectRelease(v50);
      if (v51)
      {
        v53 = v18;
        v54 = v17;
        v55 = v12;
        v52 = v51;
LABEL_6:
        v25 = ReadingGoals.State.isDefaultDailyReadingGoal.getter(v24);
        v26 = v64;
        v27 = v65;
        v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 104);
        v29 = enum case for DefaultReadingGoal.Y(_:);
        v30 = enum case for DefaultReadingGoal.N(_:);
        if ((v25 & 1) != 0)
          v31 = enum case for DefaultReadingGoal.Y(_:);
        else
          v31 = enum case for DefaultReadingGoal.N(_:);
        v32 = v28(v64, v31, v7);
        if ((ReadingGoals.State.isDefaultYearlyReadingGoal.getter(v32) & 1) != 0)
          v33 = v29;
        else
          v33 = v30;
        v28(v55, v33, v7);
        v34 = *(uint64_t (**)(char *, char *, uint64_t))(v27 + 16);
        v35 = v62;
        v36 = v34(v62, v26, v7);
        v37 = ReadingGoals.State.streakDayGoal.getter(v36);
        if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) != 0)
        {
          v38 = v54;
          if (v37 > -9.22337204e18)
          {
            if (v37 < 9.22337204e18)
            {
              v39 = v57;
              DailyGoalsReachedData.init(defaultReadingGoal:dailyReadingGoalDuration:)(v35, (uint64_t)v37);
              v40 = v55;
              v41 = v34(v35, v55, v7);
              v42 = ReadingGoals.State.booksFinishedGoal.getter(v41);
              v43 = BARoundIntegerToSignificantFigures(v42, 1);
              v44 = v60;
              YearlyGoalsReachedData.init(defaultYearlyReadingGoal:yearlyReadingGoalCount:)(v35, v43);
              type metadata accessor for EventReporter(0);
              v45 = (void *)static EventReporter.shared.getter();
              v46 = v52;
              EventReporter.emitReadingGoalReachedEvent(using:dailyGoalsReachedData:yearlyGoalsReachedData:)(v52, v39, v44);

              swift_release(v22);
              (*(void (**)(char *, uint64_t))(v61 + 8))(v44, v56);
              (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
              v47 = *(void (**)(char *, uint64_t))(v65 + 8);
              v47(v40, v7);
              v47(v64, v7);
              (*(void (**)(char *, uint64_t))(v53 + 8))(v20, v38);
              return;
            }
            goto LABEL_23;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_23:
        __break(1u);
        return;
      }
    }
    swift_release(v22);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t sub_172954(void *a1)
{
  return sub_172970(a1, (uint64_t)&unk_293968, (uint64_t)sub_175F0C, (uint64_t)&unk_293980);
}

uint64_t sub_172970(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v27 = a4;
  v7 = v4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_175D4C();
  v15 = (void *)static OS_dispatch_queue.main.getter();
  v16 = swift_allocObject(&unk_2938A0, 24, 7);
  swift_weakInit(v16 + 16, v7);
  v17 = swift_allocObject(a2, 32, 7);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = a1;
  aBlock[4] = a3;
  v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = v27;
  v18 = _Block_copy(aBlock);
  v19 = v31;
  v20 = a1;
  v21 = swift_release(v19);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = &_swiftEmptyArrayStorage;
  v22 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_16B968((uint64_t *)&unk_30C330);
  v24 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v9, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v28);
}

void sub_172B8C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  uint64_t *v40;
  char v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  void *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  id v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83[24];
  char v84[24];
  char v85[24];
  char v86[32];

  v4 = type metadata accessor for BooksGoalsData(0);
  v74 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v70 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_16B968(&qword_30B848);
  __chkstk_darwin(v73);
  v79 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_16B968(&qword_30B5F0);
  v8 = __chkstk_darwin(v7);
  v78 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v77 = (char *)&v68 - v10;
  v11 = type metadata accessor for ReadingGoalsData(0);
  v80 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v72 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_16B968(&qword_30B850);
  __chkstk_darwin(v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_16B968(&qword_30B5E0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v68 - v20;
  v82 = sub_16B968(&qword_30B7D8);
  v22 = __chkstk_darwin(v82);
  v76 = (uint64_t)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v81 = (uint64_t)&v68 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)&v68 - v26;
  swift_beginAccess(a1 + 16, v86, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (Strong)
  {
    v29 = Strong;
    v71 = v4;
    if (a2)
    {
      v69 = a2;
    }
    else
    {
      v42 = Strong + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting;
      swift_beginAccess(Strong + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting, v83, 0, 0);
      v43 = (void *)swift_unknownObjectWeakLoadStrong(v42);
      if (!v43
        || (v44 = v43,
            v45 = objc_msgSend(v43, "keyWindowAnalyticsTracker"),
            swift_unknownObjectRelease(v44),
            !v45))
      {
        swift_release(v29);
        return;
      }
      v69 = v45;
    }
    v30 = (uint64_t)v27;
    v31 = (uint64_t)&v27[*(int *)(v82 + 48)];
    v32 = a2;
    v75 = v31;
    sub_173390(v30, v31);
    v33 = v29 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastReadingGoalsData;
    swift_beginAccess(v29 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastReadingGoalsData, v85, 0, 0);
    sub_1765E0(v33, (uint64_t)v21, &qword_30B5E0);
    v34 = *(int *)(v13 + 48);
    v35 = v30;
    v36 = (uint64_t)&v15[v34];
    sub_1765E0(v30, (uint64_t)v15, &qword_30B5E0);
    sub_1765E0((uint64_t)v21, v36, &qword_30B5E0);
    v37 = v80;
    v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    if (v38((uint64_t)v15, 1, v11) == 1)
    {
      sub_1766A8((uint64_t)v21, &qword_30B5E0);
      v39 = v38(v36, 1, v11);
      if (v39 == 1)
        v40 = &qword_30B5E0;
      else
        v40 = &qword_30B850;
      if (v39 == 1)
        v41 = -1;
      else
        v41 = 0;
    }
    else
    {
      sub_1765E0((uint64_t)v15, (uint64_t)v19, &qword_30B5E0);
      if (v38(v36, 1, v11) == 1)
      {
        sub_1766A8((uint64_t)v21, &qword_30B5E0);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v11);
        v41 = 0;
        v40 = &qword_30B850;
      }
      else
      {
        v46 = v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v72, v36, v11);
        v47 = sub_16BDB8(&qword_30B860, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingGoalsData, (uint64_t)&protocol conformance descriptor for ReadingGoalsData);
        v41 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v46, v11, v47);
        v48 = *(void (**)(char *, uint64_t))(v37 + 8);
        v48(v46, v11);
        v40 = &qword_30B5E0;
        sub_1766A8((uint64_t)v21, &qword_30B5E0);
        v48(v19, v11);
      }
    }
    v49 = v71;
    v51 = (uint64_t)v78;
    v50 = (uint64_t)v79;
    v52 = (uint64_t)v77;
    v53 = v81;
    sub_1766A8((uint64_t)v15, v40);
    v54 = v53 + *(int *)(v82 + 48);
    sub_1765E0(v35, v53, &qword_30B5E0);
    sub_1765E0(v75, v54, &qword_30B5F0);
    if ((v41 & 1) != 0)
    {
      v55 = v29 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastBooksGoalsData;
      swift_beginAccess(v29 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastBooksGoalsData, v84, 0, 0);
      sub_1765E0(v55, v52, &qword_30B5F0);
      v56 = v50 + *(int *)(v73 + 48);
      sub_1765E0(v54, v50, &qword_30B5F0);
      sub_1765E0(v52, v56, &qword_30B5F0);
      v57 = v74;
      v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
      if (v58(v50, 1, v49) == 1)
      {
        sub_1766A8(v52, &qword_30B5F0);
        sub_1766A8(v53, &qword_30B7D8);
        if (v58(v56, 1, v49) == 1)
        {
          sub_1766A8(v50, &qword_30B5F0);
          v59 = v69;
LABEL_30:
          sub_1766A8(v35, &qword_30B7D8);
          swift_release(v29);

          return;
        }
      }
      else
      {
        sub_1765E0(v50, v51, &qword_30B5F0);
        if (v58(v56, 1, v49) != 1)
        {
          v64 = v70;
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v70, v56, v49);
          v65 = sub_16BDB8(&qword_30B858, (uint64_t (*)(uint64_t))&type metadata accessor for BooksGoalsData, (uint64_t)&protocol conformance descriptor for BooksGoalsData);
          v66 = dispatch thunk of static Equatable.== infix(_:_:)(v51, v64, v49, v65);
          v67 = *(void (**)(char *, uint64_t))(v57 + 8);
          v67(v64, v49);
          sub_1766A8(v52, &qword_30B5F0);
          sub_1766A8(v81, &qword_30B7D8);
          v67((char *)v51, v49);
          sub_1766A8(v50, &qword_30B5F0);
          v59 = v69;
          if ((v66 & 1) != 0)
            goto LABEL_30;
          goto LABEL_27;
        }
        sub_1766A8(v52, &qword_30B5F0);
        sub_1766A8(v53, &qword_30B7D8);
        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v51, v49);
      }
      v60 = &qword_30B848;
      v61 = v50;
    }
    else
    {
      v60 = &qword_30B7D8;
      v61 = v53;
    }
    sub_1766A8(v61, v60);
    v59 = v69;
LABEL_27:
    v62 = v76;
    v63 = v76 + *(int *)(v82 + 48);
    sub_1765E0(v35, v76, &qword_30B5E0);
    sub_1765E0(v75, v63, &qword_30B5F0);
    sub_175400(v62, v63, (uint64_t)v59);

    swift_release(v29);
    sub_1766A8(v35, &qword_30B7D8);
    sub_1766A8(v63, &qword_30B5F0);
    sub_1766A8(v62, &qword_30B5E0);
  }
}

void sub_173390(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v70;
  int v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  BOOL v96;
  int v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  unint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char v115;
  void (*v116)(char *, uint64_t);
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  __int128 v126;
  char *v127;
  _QWORD *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  void (*v139)(char *, _QWORD, uint64_t);
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char v146;
  uint64_t (*v147)(char *, uint64_t);
  uint64_t v148;
  double v149;
  double v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  void (*v160)(char *, uint64_t);
  char v161;
  uint64_t v162;
  _QWORD *v163;
  char *v164;
  char *v165;
  void *v166;
  NSString v167;
  double v168;
  double v169;
  uint64_t v170;
  double v171;
  double v172;
  uint64_t v173;
  void (*v174)(char *, uint64_t);
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  __int128 v179;
  void (*v180)(char *, uint64_t);
  uint64_t v181;
  uint64_t v182;
  char v183;
  void *v184;
  NSString v185;
  double v186;
  double v187;
  uint64_t v188;
  double v189;
  double v190;
  uint64_t v191;
  uint64_t (*v192)(char *, _QWORD, uint64_t);
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  double v198;
  BOOL v199;
  uint64_t v200;
  uint64_t v201;
  unsigned int *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  unint64_t v208;
  char *v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  void (*v216)(char *, char *, uint64_t);
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  unint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  unsigned int *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void (*v249)(uint64_t, unint64_t, uint64_t);
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _QWORD *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t (*v270)(uint64_t, uint64_t, uint64_t);
  int v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  double v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t (*v281)(char *, char *, uint64_t);
  uint64_t v282;
  double v283;
  void (*v284)(char *, char *, uint64_t);
  double v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  double v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  void (*v297)(char *, uint64_t);
  void (*v298)(char *, uint64_t);
  uint64_t v299;
  uint64_t v300;
  uint64_t (*v301)(char *, _QWORD, uint64_t);
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  void (*v309)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v310;
  char *v311;
  char *v312;
  char *v313;
  char *v314;
  char *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  void (*v321)(char *, uint64_t);
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  char *v326;
  char *v327;
  char *v328;
  char *v329;
  uint64_t v330;
  void (*v331)(char *, uint64_t);
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  char *v342;
  char *v343;
  char *v344;
  char *v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  char *v354;
  char *v355;
  _QWORD *v356;
  uint64_t v357;
  void (*v358)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  unint64_t v364;
  char v365[8];
  char v366[8];
  unsigned __int16 v367;
  __int128 v368;
  __int128 v369;
  char *v370;
  __int128 v371;

  v3 = v2;
  v348 = a2;
  v347 = a1;
  v4 = sub_16B968(&qword_30B5F0);
  __chkstk_darwin(v4);
  v339 = (char *)&v300 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v6);
  v344 = (char *)&v300 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_16B968(&qword_30B7E8);
  v9 = __chkstk_darwin(v8);
  v328 = (char *)&v300 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v320 = (char *)&v300 - v11;
  v359 = sub_16B968(&qword_30B7F0);
  v353 = *(_QWORD *)(v359 - 8);
  v12 = __chkstk_darwin(v359);
  v358 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v300 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __chkstk_darwin(v12);
  v357 = (uint64_t)&v300 - v15;
  v16 = __chkstk_darwin(v14);
  v356 = (uint64_t *)((char *)&v300 - v17);
  __chkstk_darwin(v16);
  v364 = (unint64_t)&v300 - v18;
  v319 = type metadata accessor for Calendar(0);
  v318 = *(_QWORD *)(v319 - 8);
  __chkstk_darwin(v319);
  v315 = (char *)&v300 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v317 = type metadata accessor for DateComponents(0);
  v316 = *(_QWORD *)(v317 - 8);
  __chkstk_darwin(v317);
  v314 = (char *)&v300 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v361 = type metadata accessor for ReadingHistory.DayEntry(0);
  v362 = *(_QWORD *)(v361 - 8);
  v21 = __chkstk_darwin(v361);
  v354 = (char *)&v300 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v349 = (char *)&v300 - v23;
  v363 = type metadata accessor for ReadingHistory.Day(0);
  v321 = *(void (**)(char *, uint64_t))(v363 - 8);
  v24 = __chkstk_darwin(v363);
  v355 = (char *)&v300 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v352 = (char *)&v300 - v26;
  v337 = type metadata accessor for DailyReadingGoalStatus(0);
  v341 = *(_QWORD *)(v337 - 8);
  v27 = __chkstk_darwin(v337);
  v313 = (char *)&v300 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v326 = (char *)&v300 - v30;
  v31 = __chkstk_darwin(v29);
  v332 = (char *)&v300 - v32;
  __chkstk_darwin(v31);
  v336 = (char *)&v300 - v33;
  v351 = type metadata accessor for Date(0);
  v350 = *(_QWORD *)(v351 - 8);
  v34 = __chkstk_darwin(v351);
  v340 = (char *)&v300 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v34);
  v38 = (char *)&v300 - v37;
  v39 = __chkstk_darwin(v36);
  v41 = (char *)&v300 - v40;
  __chkstk_darwin(v39);
  v342 = (char *)&v300 - v42;
  v338 = type metadata accessor for DefaultReadingGoal(0);
  v330 = *(_QWORD *)(v338 - 8);
  v43 = __chkstk_darwin(v338);
  v312 = (char *)&v300 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __chkstk_darwin(v43);
  v327 = (char *)&v300 - v46;
  v47 = __chkstk_darwin(v45);
  v323 = (char *)&v300 - v48;
  v49 = __chkstk_darwin(v47);
  v329 = (char *)&v300 - v50;
  v51 = __chkstk_darwin(v49);
  v322 = (char *)&v300 - v52;
  __chkstk_darwin(v51);
  v333 = (char *)&v300 - v53;
  v331 = (void (*)(char *, uint64_t))sub_16B968(&qword_30B7F8);
  __chkstk_darwin(v331);
  v360 = (char *)&v300 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v335 = type metadata accessor for ReadingHistory.State(0);
  v334 = *(_QWORD *)(v335 - 8);
  __chkstk_darwin(v335);
  v343 = (char *)&v300 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_16B968((uint64_t *)&unk_30B5B0);
  __chkstk_darwin(v56);
  v58 = (char *)&v300 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for ReadingGoals.State(0);
  v60 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v62 = (char *)&v300 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_16B968(&qword_30B5E0);
  v64 = __chkstk_darwin(v63);
  v311 = (char *)&v300 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64);
  v67 = (char *)&v300 - v66;
  v68 = type metadata accessor for ReadingGoalsData(0);
  v69 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56);
  v345 = v67;
  v310 = v68;
  v309 = v69;
  ((void (*)(char *, uint64_t, uint64_t))v69)(v67, 1, 1);
  v70 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics__goalsState);
  swift_retain(v70);
  OS_dispatch_queue.sync<A>(execute:)(sub_175BCC, v70, v56);
  swift_release(v70);
  v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59);
  v72 = &unk_313000;
  v346 = v41;
  if (v71 == 1)
  {
    sub_1766A8((uint64_t)v58, (uint64_t *)&unk_30B5B0);
    v73 = v3;
LABEL_5:
    v77 = v347;
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v62, v58, v59);
  v74 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState);
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState, v366, 0, 0);
  v75 = *v74;
  swift_retain(*v74);
  v76 = sub_16B968(&qword_30B800);
  OS_dispatch_queue.sync<A>(execute:)(sub_1762F4, v75, v76);
  swift_release(v75);
  v73 = v3;
  if (*((_QWORD *)&v368 + 1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
    v72 = &unk_313000;
    goto LABEL_5;
  }
  v324 = v38;
  v307 = *((_QWORD *)&v368 + 1);
  v325 = v62;
  v305 = v60;
  v306 = v59;
  v125 = v368;
  v126 = v369;
  v127 = v370;
  v128 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState);
  swift_beginAccess((char *)v3 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState, v365, 0, 0);
  v129 = *v128;
  swift_retain(*v128);
  v130 = v360;
  OS_dispatch_queue.sync<A>(execute:)(sub_17635C, v129, v331);
  v131 = v129;
  v132 = (uint64_t)v130;
  swift_release(v131);
  v133 = v334;
  v134 = v335;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v334 + 48))(v132, 1, v335) == 1)
  {
    (*(void (**)(char *, uint64_t))(v305 + 8))(v325, v306);
    sub_17630C(v125, v307);
    sub_1766A8(v132, &qword_30B7F8);
    v72 = (_QWORD *)&unk_313000;
    v77 = v347;
    v38 = v324;
    goto LABEL_6;
  }
  v303 = v125;
  v304 = v127;
  v331 = (void (*)(char *, uint64_t))*((_QWORD *)&v126 + 1);
  v300 = v126;
  v136 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v133 + 32))(v343, v132, v134);
  v137 = ReadingGoals.State.isDefaultDailyReadingGoal.getter(v136);
  v138 = v330;
  v139 = *(void (**)(char *, _QWORD, uint64_t))(v330 + 104);
  v308 = v73;
  v302 = 0;
  if ((v137 & 1) != 0)
  {
    v140 = v338;
    v139(v333, enum case for DefaultReadingGoal.Y(_:), v338);
    v141 = enum case for DefaultReadingGoal.N(_:);
  }
  else
  {
    v141 = enum case for DefaultReadingGoal.N(_:);
    v140 = v338;
    v139(v333, enum case for DefaultReadingGoal.N(_:), v338);
  }
  v155 = v349;
  v156 = v322;
  LODWORD(v360) = v141;
  v139(v322, v141, v140);
  v157 = sub_16BDB8(&qword_30B5A0, (uint64_t (*)(uint64_t))&type metadata accessor for DefaultReadingGoal, (uint64_t)&protocol conformance descriptor for DefaultReadingGoal);
  dispatch thunk of RawRepresentable.rawValue.getter(&v368, v140, v157);
  dispatch thunk of RawRepresentable.rawValue.getter(&v371, v140, v157);
  v158 = *((_QWORD *)&v368 + 1);
  v159 = v371;
  if (v368 == v371)
  {
    swift_bridgeObjectRelease_n(*((_QWORD *)&v368 + 1), 2);
    v160 = *(void (**)(char *, uint64_t))(v138 + 8);
    v160(v156, v140);
  }
  else
  {
    v161 = _stringCompareWithSmolCheck(_:_:expecting:)(v368, *((_QWORD *)&v368 + 1), v371, *((_QWORD *)&v371 + 1), 0);
    swift_bridgeObjectRelease(v158);
    swift_bridgeObjectRelease(*((_QWORD *)&v159 + 1));
    v160 = *(void (**)(char *, uint64_t))(v138 + 8);
    v162 = ((uint64_t (*)(char *, uint64_t))v160)(v156, v140);
    if ((v161 & 1) == 0)
    {
      v174 = v160;
      v322 = 0;
      v163 = v308;
      v164 = v342;
      v173 = v338;
      v165 = v323;
      goto LABEL_76;
    }
  }
  v163 = v308;
  v164 = v342;
  v165 = v323;
  v166 = *(void **)((char *)v308 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_userDefaults);
  v167 = String._bridgeToObjectiveC()();
  objc_msgSend(v166, "doubleForKey:", v167);
  v169 = v168;

  v170 = Date.init(timeIntervalSinceReferenceDate:)(v169);
  v171 = Date.timeIntervalSince1970.getter(v170);
  v162 = (*(uint64_t (**)(char *, uint64_t))(v350 + 8))(v164, v351);
  v172 = v171 * 1000.0;
  if ((~COERCE__INT64(v171 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_159:
    __break(1u);
    goto LABEL_160;
  }
  if (v172 <= -9.22337204e18)
  {
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  v173 = v338;
  if (v172 >= 9.22337204e18)
  {
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
  v174 = v160;
  v322 = (char *)(uint64_t)v172;
LABEL_76:
  v175 = ReadingGoals.State.isDefaultYearlyReadingGoal.getter(v162);
  v176 = v360;
  if ((v175 & 1) != 0)
    v177 = enum case for DefaultReadingGoal.Y(_:);
  else
    v177 = v360;
  v139(v329, v177, v173);
  v139(v165, v176, v173);
  dispatch thunk of RawRepresentable.rawValue.getter(&v368, v173, v157);
  dispatch thunk of RawRepresentable.rawValue.getter(&v371, v173, v157);
  v178 = *((_QWORD *)&v368 + 1);
  v179 = v371;
  if (v368 == v371)
  {
    swift_bridgeObjectRelease_n(*((_QWORD *)&v368 + 1), 2);
    v180 = v174;
    v174(v165, v173);
    v181 = v337;
  }
  else
  {
    v182 = v173;
    v183 = _stringCompareWithSmolCheck(_:_:expecting:)(v368, *((_QWORD *)&v368 + 1), v371, *((_QWORD *)&v371 + 1), 0);
    swift_bridgeObjectRelease(v178);
    swift_bridgeObjectRelease(*((_QWORD *)&v179 + 1));
    v180 = v174;
    v174(v165, v182);
    v181 = v337;
    if ((v183 & 1) == 0)
    {
      v323 = 0;
LABEL_87:
      v191 = enum case for DailyReadingGoalStatus.notStarted(_:);
      v192 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v341 + 104);
      v193 = v192(v336, enum case for DailyReadingGoalStatus.notStarted(_:), v181);
      v194 = v352;
      v195 = ReadingHistory.State.today.getter(v193);
      v196 = ReadingHistory.Day.readingTime.getter(v195);
      v360 = (char *)*((_QWORD *)v321 + 1);
      v197 = ((uint64_t (*)(char *, uint64_t))v360)(v194, v363);
      v198 = ReadingGoals.State.streakDayGoal.getter(v197);
      if ((~*(_QWORD *)&v198 & 0x7FF0000000000000) == 0)
      {
LABEL_150:
        __break(1u);
        goto LABEL_151;
      }
      if (v198 <= -9.22337204e18)
      {
LABEL_151:
        __break(1u);
        goto LABEL_152;
      }
      if (v198 >= 9.22337204e18)
      {
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
        goto LABEL_154;
      }
      v321 = (void (*)(char *, uint64_t))v180;
      if (v196 >= (uint64_t)v198)
      {
        v202 = (unsigned int *)&enum case for DailyReadingGoalStatus.reached(_:);
        v200 = v361;
        v201 = v362;
      }
      else
      {
        v199 = v196 < 1;
        v200 = v361;
        v201 = v362;
        if (v199)
          goto LABEL_95;
        v202 = (unsigned int *)&enum case for DailyReadingGoalStatus.inProgress(_:);
      }
      v203 = v336;
      (*(void (**)(char *, uint64_t))(v341 + 8))(v336, v181);
      v192(v203, *v202, v181);
LABEL_95:
      v301 = v192;
      v204 = v192(v332, v191, v181);
      v205 = ReadingHistory.State.readingHistory.getter(v204);
      v206 = &_swiftEmptyArrayStorage;
      *(_QWORD *)&v368 = &_swiftEmptyArrayStorage;
      v207 = *(_QWORD *)(v205 + 16);
      if (v207)
      {
        v208 = 0;
        v209 = v352;
        while (v208 < *(_QWORD *)(v205 + 16))
        {
          v210 = (*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80);
          v211 = *(_QWORD *)(v201 + 72);
          v212 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v201 + 16))(v155, v205 + v210 + v211 * v208, v200);
          v213 = ReadingHistory.DayEntry.day.getter(v212);
          v214 = ReadingHistory.Day.readingTime.getter(v213);
          ((void (*)(char *, uint64_t))v360)(v209, v363);
          if (v214 < 1)
          {
            (*(void (**)(char *, uint64_t))(v201 + 8))(v155, v200);
          }
          else
          {
            v215 = v155;
            v216 = *(void (**)(char *, char *, uint64_t))(v201 + 32);
            v216(v354, v215, v200);
            v217 = v368;
            if ((swift_isUniquelyReferenced_nonNull_native(v368) & 1) == 0)
            {
              sub_185F10(0, *(_QWORD *)(v217 + 16) + 1, 1);
              v217 = v368;
            }
            v219 = *(_QWORD *)(v217 + 16);
            v218 = *(_QWORD *)(v217 + 24);
            if (v219 >= v218 >> 1)
            {
              sub_185F10(v218 > 1, v219 + 1, 1);
              v217 = v368;
            }
            *(_QWORD *)(v217 + 16) = v219 + 1;
            v220 = v217 + v210 + v219 * v211;
            v200 = v361;
            v216((char *)v220, v354, v361);
            *(_QWORD *)&v368 = v217;
            v201 = v362;
            v155 = v349;
          }
          if (v207 == ++v208)
          {
            v221 = (_QWORD *)v368;
            v206 = &_swiftEmptyArrayStorage;
            goto LABEL_108;
          }
        }
        __break(1u);
LABEL_145:
        __break(1u);
        goto LABEL_146;
      }
      v221 = &_swiftEmptyArrayStorage;
LABEL_108:
      swift_bridgeObjectRelease(v205);
      v222 = v303;
      if (v307)
      {
        v223 = *(_QWORD *)(v307 + 16);
        v222 = sub_17630C(v303, v307);
      }
      else
      {
        v223 = 0;
      }
      v224 = v337;
      if (v223 >= ReadingGoals.State.booksFinishedGoal.getter(v222))
      {
        v227 = v332;
        (*(void (**)(char *, uint64_t))(v341 + 8))(v332, v224);
        swift_release(v221);
        v228 = (unsigned int *)&enum case for DailyReadingGoalStatus.reached(_:);
      }
      else
      {
        v225 = v221[2];
        v226 = swift_release(v221);
        if (!(v225 | v223))
        {
LABEL_116:
          v229 = v315;
          static Calendar.current.getter(v226);
          v230 = sub_16B968(&qword_30B820);
          v231 = type metadata accessor for Calendar.Component(0);
          v232 = *(_QWORD *)(v231 - 8);
          v233 = *(unsigned __int8 *)(v232 + 80);
          v234 = (v233 + 32) & ~v233;
          v235 = swift_allocObject(v230, v234 + *(_QWORD *)(v232 + 72), v233 | 7);
          *(_OWORD *)(v235 + 16) = xmmword_26BDD0;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v232 + 104))(v235 + v234, enum case for Calendar.Component.weekday(_:), v231);
          v236 = sub_176378(v235);
          swift_setDeallocating(v235);
          swift_arrayDestroy(v235 + v234, 1, v231);
          v237 = swift_deallocClassInstance(v235, 32, 7);
          v238 = v342;
          Date.init()(v237);
          v239 = v314;
          Calendar.dateComponents(_:from:)(v236, v238);
          swift_bridgeObjectRelease(v236);
          v331 = *(void (**)(char *, uint64_t))(v350 + 8);
          v331(v238, v351);
          v240 = (*(uint64_t (**)(char *, uint64_t))(v318 + 8))(v229, v319);
          v241 = DateComponents.weekday.getter(v240);
          LOBYTE(v231) = v242;
          v243 = (*(uint64_t (**)(char *, uint64_t))(v316 + 8))(v239, v317);
          if ((v231 & 1) != 0)
            v244 = 0;
          else
            v244 = (char *)v241;
          v354 = v244;
          v245 = ReadingHistory.State.readingHistory.getter(v243);
          v349 = (char *)&v300;
          *(_QWORD *)&v368 = &_swiftEmptyArrayStorage;
          v246 = *(_QWORD *)(v245 + 16);
          v352 = (char *)v245;
          if (v246)
          {
            v247 = 0;
            v248 = *(_QWORD *)(v362 + 72);
            v249 = *(void (**)(uint64_t, unint64_t, uint64_t))(v362 + 16);
            v250 = v245
                 + ((*(unsigned __int8 *)(v362 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v362 + 80))
                 + v248 * (v246 - 1);
            v251 = -v248;
            v252 = v361;
            do
            {
              v253 = v359;
              v254 = v357 + *(int *)(v359 + 48);
              v249(v254, v250, v252);
              v255 = v356;
              v256 = (char *)v356 + *(int *)(v253 + 48);
              *v356 = v247;
              (*(void (**)(char *, uint64_t, uint64_t))(v362 + 32))(v256, v254, v252);
              v257 = v364;
              v258 = sub_176724((uint64_t)v255, v364, &qword_30B7F0);
              v259 = *(_QWORD *)v257;
              v260 = v355;
              v261 = ReadingHistory.DayEntry.day.getter(v258);
              LOBYTE(v257) = ReadingHistory.Day.isStreakDay.getter(v261);
              ((void (*)(char *, uint64_t))v360)(v260, v363);
              if ((v257 & 1) != 0 && v259 < (uint64_t)v354)
              {
                sub_176724(v364, (uint64_t)v358, &qword_30B7F0);
                v262 = v368;
                if ((swift_isUniquelyReferenced_nonNull_native(v368) & 1) == 0)
                {
                  sub_185EF4(0, *(_QWORD *)(v262 + 16) + 1, 1);
                  v262 = v368;
                }
                v264 = *(_QWORD *)(v262 + 16);
                v263 = *(_QWORD *)(v262 + 24);
                if (v264 >= v263 >> 1)
                {
                  sub_185EF4(v263 > 1, v264 + 1, 1);
                  v262 = v368;
                }
                *(_QWORD *)(v262 + 16) = v264 + 1;
                sub_176724((uint64_t)v358, v262+ ((*(unsigned __int8 *)(v353 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v353 + 80))+ *(_QWORD *)(v353 + 72) * v264, &qword_30B7F0);
              }
              else
              {
                sub_1766A8(v364, &qword_30B7F0);
              }
              ++v247;
              v250 += v251;
            }
            while (v246 != v247);
            v206 = (_QWORD *)v368;
          }
          swift_bridgeObjectRelease(v352);
          v265 = v206[2];
          v266 = swift_release(v206);
          v267 = (uint64_t)v320;
          ReadingHistory.State.longestStreak.getter(v266);
          v268 = type metadata accessor for ReadingHistory.Streak(0);
          v269 = *(_QWORD *)(v268 - 8);
          v270 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v269 + 48);
          v271 = v270(v267, 1, v268);
          v73 = v308;
          v38 = v324;
          if (v271 == 1)
          {
            v272 = sub_1766A8(v267, &qword_30B7E8);
            v273 = 0;
          }
          else
          {
            v274 = ReadingHistory.Streak.length.getter();
            v275 = v267;
            v273 = v274;
            v272 = (*(uint64_t (**)(uint64_t, uint64_t))(v269 + 8))(v275, v268);
          }
          ReadingHistory.State.longestStreak.getter(v272);
          v276 = (uint64_t)v328;
          if (v270((uint64_t)v328, 1, v268) == 1)
          {
            sub_1766A8(v276, &qword_30B7E8);
            v277 = 0.0;
          }
          else
          {
            v278 = v342;
            ReadingHistory.Streak.endDate.getter();
            v279 = (*(uint64_t (**)(uint64_t, uint64_t))(v269 + 8))(v276, v268);
            v277 = Date.timeIntervalSince1970.getter(v279);
            v331(v278, v351);
          }
          v280 = v337;
          v281 = *(uint64_t (**)(char *, char *, uint64_t))(v330 + 16);
          v282 = v281(v327, v333, v338);
          v283 = ReadingGoals.State.streakDayGoal.getter(v282);
          if ((~*(_QWORD *)&v283 & 0x7FF0000000000000) == 0)
            goto LABEL_153;
          if (v283 <= -9.22337204e18)
          {
LABEL_154:
            __break(1u);
            goto LABEL_155;
          }
          if (v283 >= 9.22337204e18)
          {
LABEL_155:
            __break(1u);
            goto LABEL_156;
          }
          v284 = *(void (**)(char *, char *, uint64_t))(v341 + 16);
          v284(v326, v336, v280);
          if (v265 >> 31)
          {
LABEL_156:
            __break(1u);
            goto LABEL_157;
          }
          if (v273 < (uint64_t)0xFFFFFFFF80000000)
          {
LABEL_157:
            __break(1u);
            goto LABEL_158;
          }
          v364 = v265;
          v363 = v273;
          if (v273 > 0x7FFFFFFF)
          {
LABEL_158:
            __break(1u);
            goto LABEL_159;
          }
          v285 = (double)(uint64_t)v322;
          v362 = (uint64_t)v283;
          v286 = v312;
          v287 = v329;
          v288 = v338;
          v289 = v281(v312, v329, v338);
          v290 = (double)(uint64_t)v323;
          v291 = ReadingGoals.State.booksFinishedGoal.getter(v289);
          v292 = BARoundIntegerToSignificantFigures(v291, 1);
          v293 = v313;
          v294 = v332;
          v295 = v337;
          v284(v313, v332, v337);
          v296 = (uint64_t)v311;
          ReadingGoalsData.init(defaultReadingGoal:defaultReadingGoalChangeDate:dailyReadingGoalDuration:dailyReadingGoalStatus:weeklyGoalsStatus:longestGoalReachedDays:lastLongestGoalReachedDate:defaultYearlyReadingGoal:defaultYearlyReadingGoalChangeDate:yearlyReadingGoalCount:yearlyReadingGoalStatus:)(v327, v362, v326, v364, v363, v286, v292, v293, v285, v277, v290);
          v297 = *(void (**)(char *, uint64_t))(v341 + 8);
          v297(v294, v295);
          v297(v336, v295);
          v298 = v321;
          v321(v287, v288);
          v298(v333, v288);
          (*(void (**)(char *, uint64_t))(v334 + 8))(v343, v335);
          (*(void (**)(char *, uint64_t))(v305 + 8))(v325, v306);
          v299 = (uint64_t)v345;
          sub_1766A8((uint64_t)v345, &qword_30B5E0);
          v309(v296, 0, 1, v310);
          sub_176724(v296, v299, &qword_30B5E0);
          v77 = v347;
          v41 = v346;
          v72 = (_QWORD *)&unk_313000;
LABEL_6:
          v78 = type metadata accessor for BooksGoalsData(0);
          v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56);
          v79(v348, 1, 1, v78);
          v80 = (_QWORD *)((char *)v73 + v72[262]);
          swift_beginAccess(v80, &v371, 0, 0);
          v81 = *v80;
          swift_retain(*v80);
          v82 = sub_16B968(&qword_30B800);
          OS_dispatch_queue.sync<A>(execute:)(sub_1762F4, v81, v82);
          v83 = swift_release(v81);
          v84 = *((_QWORD *)&v368 + 1);
          if (*((_QWORD *)&v368 + 1) == 1)
          {
LABEL_66:
            sub_176724((uint64_t)v345, v77, &qword_30B5E0);
            return;
          }
          v85 = (_QWORD *)v368;
          v361 = *((_QWORD *)&v369 + 1);
          v362 = v369;
          v360 = v370;
          v86 = static Date.distantPast.getter(v83);
          v87 = static Date.distantPast.getter(v86);
          if (v84)
          {
            v356 = v85;
            v358 = v79;
            v359 = v78;
            v324 = v38;
            v88 = *(_QWORD *)(v84 + 16);
            v357 = v84;
            v89 = 0;
            if (v88)
            {
              v364 = 0;
              v91 = v73[2];
              v90 = v73[3];
              v92 = (_QWORD *)(v84 + 32);
              v308 = v73;
              while (1)
              {
                v93 = *v92;
                if (!*(_QWORD *)(*v92 + 16))
                {
                  v370 = 0;
                  v368 = 0u;
                  v369 = 0u;
LABEL_11:
                  sub_1766A8((uint64_t)&v368, &qword_30B810);
                  goto LABEL_12;
                }
                swift_bridgeObjectRetain(*v92);
                swift_bridgeObjectRetain(v90);
                v94 = sub_187F9C(v91, v90);
                if ((v95 & 1) != 0)
                {
                  sub_176320(*(_QWORD *)(v93 + 56) + 40 * v94, (uint64_t)&v368);
                }
                else
                {
                  v370 = 0;
                  v368 = 0u;
                  v369 = 0u;
                }
                swift_bridgeObjectRelease(v90);
                if (!*((_QWORD *)&v369 + 1))
                {
                  swift_bridgeObjectRelease(v93);
                  goto LABEL_11;
                }
                if ((swift_dynamicCast(&v367, &v368, &type metadata for AnyHashable, &type metadata for Int16, 6) & 1) == 0
                  || v367 > 0xFu)
                {
LABEL_30:
                  swift_bridgeObjectRelease(v93);
                  goto LABEL_12;
                }
                if (((1 << v367) & 0xB8C0) != 0)
                {
                  v96 = __OFADD__(v89++, 1);
                  if (v96)
                    goto LABEL_145;
                  v97 = 0;
                  LODWORD(v363) = 1;
                  if (*(_QWORD *)(v93 + 16))
                    goto LABEL_23;
                }
                else
                {
                  if (((1 << v367) & 0x1A) == 0)
                    goto LABEL_30;
                  v96 = __OFADD__(v364++, 1);
                  if (v96)
                    goto LABEL_149;
                  LODWORD(v363) = 0;
                  v97 = 1;
                  if (*(_QWORD *)(v93 + 16))
                  {
LABEL_23:
                    v98 = v73;
                    v101 = v73 + 4;
                    v99 = v73[4];
                    v100 = v101[1];
                    swift_bridgeObjectRetain(v100);
                    v102 = sub_187F9C(v99, v100);
                    if ((v103 & 1) != 0)
                    {
                      sub_176320(*(_QWORD *)(v93 + 56) + 40 * v102, (uint64_t)&v368);
                    }
                    else
                    {
                      v370 = 0;
                      v368 = 0u;
                      v369 = 0u;
                    }
                    swift_bridgeObjectRelease(v100);
                    v73 = v98;
                    goto LABEL_33;
                  }
                }
                v370 = 0;
                v368 = 0u;
                v369 = 0u;
LABEL_33:
                swift_bridgeObjectRelease(v93);
                if (*((_QWORD *)&v369 + 1))
                {
                  v104 = (uint64_t)v344;
                  v105 = v351;
                  v106 = swift_dynamicCast(v344, &v368, &type metadata for AnyHashable, v351, 6);
                  v107 = v350;
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v350 + 56))(v104, v106 ^ 1u, 1, v105);
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v104, 1, v105) != 1)
                  {
                    v108 = v350;
                    v109 = *(void (**)(char *, uint64_t, uint64_t))(v350 + 32);
                    v110 = v340;
                    v111 = v104;
                    v112 = v351;
                    v109(v340, v111, v351);
                    if (v97)
                    {
                      v113 = sub_16BDB8(&qword_30B818, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
                      v114 = v346;
                      v115 = dispatch thunk of static Comparable.< infix(_:_:)(v110, v346, v112, v113);
                      v116 = *(void (**)(char *, uint64_t))(v108 + 8);
                      if ((v115 & 1) != 0)
                      {
                        v117 = v110;
                        goto LABEL_43;
                      }
                      v116(v114, v112);
                      v123 = v114;
                      v124 = v110;
LABEL_48:
                      v109(v123, (uint64_t)v124, v112);
                    }
                    else
                    {
                      if ((_DWORD)v363)
                      {
                        v118 = sub_16BDB8(&qword_30B818, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
                        v119 = v340;
                        v120 = v324;
                        v112 = v351;
                        v121 = dispatch thunk of static Comparable.< infix(_:_:)(v340, v324, v351, v118);
                        v116 = *(void (**)(char *, uint64_t))(v350 + 8);
                        if ((v121 & 1) == 0)
                        {
                          v116(v120, v112);
                          v123 = v120;
                          v124 = v119;
                          goto LABEL_48;
                        }
                        v117 = v119;
LABEL_43:
                        v122 = v112;
                      }
                      else
                      {
                        v116 = *(void (**)(char *, uint64_t))(v350 + 8);
                        v117 = v340;
                        v122 = v351;
                      }
                      v116(v117, v122);
                    }
                    v73 = v308;
                    goto LABEL_12;
                  }
                }
                else
                {
                  sub_1766A8((uint64_t)&v368, &qword_30B810);
                  v104 = (uint64_t)v344;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v350 + 56))(v344, 1, 1, v351);
                }
                sub_1766A8(v104, &qword_30B7E0);
LABEL_12:
                ++v92;
                if (!--v88)
                  goto LABEL_56;
              }
            }
            v364 = 0;
LABEL_56:
            v87 = sub_17630C((uint64_t)v356, v357);
            v38 = v324;
            v41 = v346;
            v78 = v359;
            v79 = v358;
            v135 = v364;
          }
          else
          {
            v89 = 0;
            v135 = 0;
          }
          v142 = v342;
          static Date.distantPast.getter(v87);
          v143 = sub_16BDB8(&qword_30B808, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
          v144 = v41;
          v145 = v351;
          v146 = dispatch thunk of static Equatable.== infix(_:_:)(v144, v142, v351, v143);
          v147 = *(uint64_t (**)(char *, uint64_t))(v350 + 8);
          v148 = v147(v142, v145);
          v149 = 0.0;
          v150 = 0.0;
          if ((v146 & 1) == 0)
            v150 = Date.timeIntervalSince1970.getter(v148) * 1000.0;
          static Date.distantPast.getter(v148);
          v151 = dispatch thunk of static Equatable.== infix(_:_:)(v38, v142, v145, v143);
          v152 = v147(v142, v145);
          if ((v151 & 1) == 0)
            v149 = Date.timeIntervalSince1970.getter(v152) * 1000.0;
          if (v135 <= 0x7FFFFFFF)
          {
            if (v89 >= (uint64_t)0xFFFFFFFF80000000 && v135 >= (uint64_t)0xFFFFFFFF80000000)
            {
              if (v89 <= 0x7FFFFFFF)
              {
                v153 = (uint64_t)v339;
                BooksGoalsData.init(booksCompletedCnt:lastBookCompletedDate:audioBooksCompletedCnt:lastAudioBookCompletedDate:)(v135, v89, v150, v149);
                v147(v38, v145);
                v147(v346, v145);
                v154 = v348;
                sub_1766A8(v348, &qword_30B5F0);
                v79(v153, 0, 1, v78);
                sub_176724(v153, v154, &qword_30B5F0);
                v77 = v347;
                goto LABEL_66;
              }
              goto LABEL_148;
            }
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
            goto LABEL_150;
          }
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        v227 = v332;
        (*(void (**)(char *, uint64_t))(v341 + 8))(v332, v224);
        v228 = (unsigned int *)&enum case for DailyReadingGoalStatus.inProgress(_:);
      }
      v226 = v301(v227, *v228, v224);
      goto LABEL_116;
    }
  }
  v184 = *(void **)((char *)v163 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_userDefaults);
  v185 = String._bridgeToObjectiveC()();
  objc_msgSend(v184, "doubleForKey:", v185);
  v187 = v186;

  v188 = Date.init(timeIntervalSinceReferenceDate:)(v187);
  v189 = Date.timeIntervalSince1970.getter(v188);
  (*(void (**)(char *, uint64_t))(v350 + 8))(v164, v351);
  v190 = v189 * 1000.0;
  if ((~COERCE__INT64(v189 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_162:
    __break(1u);
    goto LABEL_163;
  }
  if (v190 <= -9.22337204e18)
  {
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  if (v190 < 9.22337204e18)
  {
    v323 = (char *)(uint64_t)v190;
    goto LABEL_87;
  }
LABEL_164:
  __break(1u);
}

uint64_t sub_175400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v29 = a3;
  v5 = sub_16B968(&qword_30B5F0);
  __chkstk_darwin(v5);
  v27 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_16B968(&qword_30B5E0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_16B968(&qword_30B7D8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v27 - v15;
  v17 = (char *)&v27 + *(int *)(v14 + 48) - v15;
  sub_1765E0(a1, (uint64_t)&v27 - v15, &qword_30B5E0);
  sub_1765E0(a2, (uint64_t)v17, &qword_30B5F0);
  v18 = (uint64_t)&v13[*(int *)(v10 + 48)];
  sub_1765E0((uint64_t)v16, (uint64_t)v13, &qword_30B5E0);
  sub_1765E0((uint64_t)v17, v18, &qword_30B5F0);
  v19 = v28;
  v20 = v28 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastReadingGoalsData;
  swift_beginAccess(v28 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastReadingGoalsData, v30, 33, 0);
  sub_1762B0((uint64_t)v13, v20, &qword_30B5E0);
  swift_endAccess(v30);
  sub_1766A8(v18, &qword_30B5F0);
  v21 = (uint64_t)&v13[*(int *)(v10 + 48)];
  sub_1765E0((uint64_t)v16, (uint64_t)v13, &qword_30B5E0);
  sub_1765E0((uint64_t)v17, v21, &qword_30B5F0);
  v22 = v19 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastBooksGoalsData;
  swift_beginAccess(v19 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastBooksGoalsData, v30, 33, 0);
  sub_1762B0(v21, v22, &qword_30B5F0);
  swift_endAccess(v30);
  sub_1766A8((uint64_t)v13, &qword_30B5E0);
  type metadata accessor for EventReporter(0);
  v23 = (void *)static EventReporter.shared.getter();
  sub_1765E0(v20, (uint64_t)v9, &qword_30B5E0);
  v24 = v22;
  v25 = v27;
  sub_1765E0(v24, v27, &qword_30B5F0);
  EventReporter.emitGoalStateEvent(using:readingGoalsData:booksGoalsData:)(v29, v9, v25);

  sub_1766A8(v25, &qword_30B5F0);
  sub_1766A8((uint64_t)v9, &qword_30B5E0);
  return sub_1766A8((uint64_t)v16, &qword_30B7D8);
}

uint64_t ReadingGoalsAnalytics.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  sub_1766A8(v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastReadingGoalsData, &qword_30B5E0);
  sub_1766A8(v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_lastBooksGoalsData, &qword_30B5F0);

  sub_175F14(v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics__goalsState));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState));
  return v0;
}

uint64_t ReadingGoalsAnalytics.__deallocating_deinit()
{
  uint64_t v0;

  ReadingGoalsAnalytics.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_175764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  void *v19;

  v2 = v1;
  v18 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = sub_175D4C();
  static DispatchQoS.unspecified.getter();
  v19 = &_swiftEmptyArrayStorage;
  v13 = sub_16BDB8((unint64_t *)&qword_30B888, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_16B968(&qword_30B890);
  v15 = sub_1766E4((unint64_t *)&qword_30B898, &qword_30B890);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v14, v15, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  *(_QWORD *)(v2 + 56) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001DLL, 0x8000000000215380, v12, v9, v6, 0);
  sub_176724(v18, v2 + 16, &qword_30B800);
  return v2;
}

uint64_t sub_17593C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void *v23;

  v21 = a1;
  v22 = a2;
  v3 = v2;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(*(_QWORD *)v3 + 96);
  v19[1] = sub_175D4C();
  static DispatchQoS.unspecified.getter();
  v23 = &_swiftEmptyArrayStorage;
  v14 = sub_16BDB8((unint64_t *)&qword_30B888, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v15 = sub_16B968(&qword_30B890);
  v16 = sub_1766E4((unint64_t *)&qword_30B898, &qword_30B890);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v15, v16, v8, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  v17 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001DLL, 0x8000000000215380, v13, v10, v7, 0);
  *(_QWORD *)(v3 + v20) = v17;
  sub_176724(v21, v3 + *(_QWORD *)(*(_QWORD *)v3 + 88), v22);
  return v3;
}

uint64_t sub_175B24@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10[24];

  swift_beginAccess(a1 + 2, v10, 0, 0);
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  return sub_176624(v4, v5);
}

uint64_t sub_175B8C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_175BAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_175BCC@<X0>(uint64_t a1@<X8>)
{
  return sub_175C60((uint64_t *)&unk_30B5B0, a1);
}

uint64_t sub_175BE8(uint64_t a1)
{
  uint64_t v1;

  return sub_170E10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_175BF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_175C18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_175C28()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_175C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_175C58(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_175C60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 88);
  swift_beginAccess(v5, v7, 0, 0);
  return sub_1765E0(v5, a2, a1);
}

uint64_t sub_175CC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_175CD8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  _BYTE v4[24];

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32) + *(_QWORD *)(**(_QWORD **)(v0 + 32) + 88);
  swift_beginAccess(v2, v4, 33, 0);
  v1(v2);
  return swift_endAccess(v4);
}

uint64_t sub_175D3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_175D4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30C2F0;
  if (!qword_30C2F0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_30C2F0);
  }
  return result;
}

uint64_t sub_175D88()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_175DAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = type metadata accessor for ReadingGoals.State(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v3 + v4) & ~v3;
  v8 = v7 + v5;
  swift_release(*(_QWORD *)(v0 + 16));

  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v9(v0 + v4, v1);
  v9(v0 + v7, v1);
  return swift_deallocObject(v0, v8, v6);
}

void sub_175E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ReadingGoals.State(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  sub_1721E0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + ((v2 + 32) & ~v2), v0 + ((*(_QWORD *)(v1 + 64) + v2 + ((v2 + 32) & ~v2)) & ~v2));
}

uint64_t sub_175E8C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_175ED4()
{
  uint64_t v0;

  sub_1724BC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_175EE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_175F0C()
{
  uint64_t v0;

  sub_172B8C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_175F14(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_175F38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_175F8C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_analyticsSessionHosting;
  swift_beginAccess(v3, v5, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2);
}

uint64_t sub_175FE8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_17601C(a1, &OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState, a2);
}

uint64_t sub_175FF4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_171780(a1, a2, a3, a4, &OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_booksState);
}

uint64_t sub_176010@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_17601C(a1, &OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState, a2);
}

uint64_t sub_17601C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(*a1 + *a2);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  *a3 = *v4;
  return swift_retain(v5);
}

uint64_t sub_17606C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_171780(a1, a2, a3, a4, &OBJC_IVAR____TtC8BookCore21ReadingGoalsAnalytics_historyState);
}

uint64_t sub_176088()
{
  return type metadata accessor for ReadingGoalsAnalytics(0);
}

uint64_t type metadata accessor for ReadingGoalsAnalytics(uint64_t a1)
{
  uint64_t result;

  result = qword_30B628;
  if (!qword_30B628)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReadingGoalsAnalytics);
  return result;
}

void sub_1760CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_26BE28;
  v6[1] = &unk_26BE28;
  sub_176264(319, &qword_30B638, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingGoalsData);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    sub_176264(319, (unint64_t *)&unk_30B640, (uint64_t (*)(uint64_t))&type metadata accessor for BooksGoalsData);
    if (v5 <= 0x3F)
    {
      v6[3] = *(_QWORD *)(v4 - 8) + 64;
      v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[5] = &unk_26BE40;
      v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[8] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for ReadingGoalsAnalytics(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingGoalsAnalytics);
}

uint64_t dispatch thunk of ReadingHistoryController.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.analyticsSessionHosting.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.analyticsSessionHosting.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.goalsState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.goalsState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.goalsState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.booksState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.booksState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.booksState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.historyState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.historyState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.historyState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.reportGoalChanged(previousState:newState:tracker:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ReadingHistoryController.readingTimeTodayProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of ReadingGoalsAnalytics.reportGoalStateIfNeeded(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

void sub_176264(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1762B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_16B968(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1762F4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;

  return sub_175B24(v1, a1);
}

uint64_t sub_17630C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_176320(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

uint64_t sub_17635C@<X0>(uint64_t a1@<X8>)
{
  return sub_175C60(&qword_30B7F8, a1);
}

void *sub_176378(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  void *result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v2 = type metadata accessor for Calendar.Component(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v30 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    sub_16B968(&qword_30B828);
    v10 = static _SetStorage.allocate(capacity:)(v9);
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v31 = v9;
    v32 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v35 = v10 + 56;
    while (1)
    {
      v33 = v11;
      v34(v8, v32 + v13 * v11, v2);
      v14 = *(_QWORD *)(v10 + 40);
      v15 = sub_16BDB8(&qword_30B830, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v2, v15);
      v17 = ~(-1 << *(_BYTE *)(v10 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v35 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v34(v6, *(_QWORD *)(v10 + 48) + v18 * v13, v2);
          v22 = sub_16BDB8((unint64_t *)&unk_30B838, (uint64_t (*)(uint64_t))&type metadata accessor for Calendar.Component, (uint64_t)&protocol conformance descriptor for Calendar.Component);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v8, v2, v22);
          v24 = v3;
          v25 = *(void (**)(char *, uint64_t))(v3 + 8);
          v25(v6, v2);
          if ((v23 & 1) != 0)
          {
            v25(v8, v2);
            v3 = v24;
            v9 = v31;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v35 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v24;
        }
        while ((v20 & (1 << v18)) != 0);
        v9 = v31;
      }
      *(_QWORD *)(v35 + 8 * v19) = v21 | v20;
      result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v18 * v13, v8, v2);
      v27 = *(_QWORD *)(v10 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        break;
      *(_QWORD *)(v10 + 16) = v29;
LABEL_4:
      v11 = v33 + 1;
      if (v33 + 1 == v9)
        return (void *)v10;
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_1765E0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_16B968(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_176624(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_176638(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_17666C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1766A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_16B968(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1766E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_175E8C(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_176724(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_16B968(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1767A0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_178954(v0, qword_30B8A0);
  sub_178770(v0, (uint64_t)qword_30B8A0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x8000000000215490, 0xD000000000000016, 0x800000000026BE60);
}

id FrontmostWindowTracker.window.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BCFrontmostWindowTracker_window);
}

uint64_t sub_17683C(uint64_t result, __int16 a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v3 = (*(_QWORD *)&v2[OBJC_IVAR___BCFrontmostWindowTracker_state] == 0) & (v2[OBJC_IVAR___BCFrontmostWindowTracker_state
                                                                                                + 8] & v2[OBJC_IVAR___BCFrontmostWindowTracker_state + 9]);
  if (result || (a2 & 1) == 0)
  {
    if (((*(_QWORD *)&v2[OBJC_IVAR___BCFrontmostWindowTracker_state] == 0) & (v2[OBJC_IVAR___BCFrontmostWindowTracker_state + 8] & v2[OBJC_IVAR___BCFrontmostWindowTracker_state + 9])) == 0)
      return result;
  }
  else if ((_DWORD)v3 == (unsigned __int16)(a2 & 0x100) >> 8)
  {
    return result;
  }
  if (qword_30AAD8 != -1)
    swift_once(&qword_30AAD8, sub_1767A0);
  v4 = type metadata accessor for Logger(0);
  sub_178770(v4, (uint64_t)qword_30B8A0);
  v5 = v2;
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(18, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412546;
    v15 = v5;
    v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v8 + 4, v8 + 12);
    *v9 = v5;

    *(_WORD *)(v8 + 12) = 1024;
    LODWORD(v15) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, (char *)&v15 + 4, v8 + 14, v8 + 18);
    _os_log_impl(&dword_0, v6, v7, "%@: is frontmost => %{BOOL}d", (uint8_t *)v8, 0x12u);
    v11 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v12 = &v5[OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged];
  result = swift_beginAccess(&v5[OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged], &v15, 0, 0);
  v13 = *(void (**)(uint64_t))v12;
  if (*(_QWORD *)v12)
  {
    v14 = *((_QWORD *)v12 + 1);
    swift_retain(v14);
    v13(v3);
    return sub_178760((uint64_t)v13, v14);
  }
  return result;
}

uint64_t FrontmostWindowTracker.isFrontmost.getter()
{
  uint64_t v0;

  return (*(_QWORD *)(v0 + OBJC_IVAR___BCFrontmostWindowTracker_state) == 0) & (*(_BYTE *)(v0 + OBJC_IVAR___BCFrontmostWindowTracker_state + 8) & *(_BYTE *)(v0 + OBJC_IVAR___BCFrontmostWindowTracker_state + 9));
}

uint64_t FrontmostWindowTracker.onFrontmostChanged.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged);
  swift_beginAccess(v0 + OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged, v4, 0, 0);
  v2 = *v1;
  sub_178750(*v1, v1[1]);
  return v2;
}

uint64_t FrontmostWindowTracker.onFrontmostChanged.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(v2 + OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return sub_178760(v6, v7);
}

uint64_t sub_176CCC@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)(unsigned __int8 *a1)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(unsigned __int8 *);
  _BYTE v9[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged);
  swift_beginAccess(v3, v9, 0, 0);
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject(&unk_293B38, 32, 7);
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_17894C;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(unsigned __int8 *))v6;
  return sub_178750(v4, v5);
}

uint64_t sub_176D60(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char);
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject(&unk_293B10, 32, 7);
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_178944;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged);
  swift_beginAccess(v7, v11, 1, 0);
  v8 = *v7;
  v9 = v7[1];
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_178750(v3, v4);
  return sub_178760(v8, v9);
}

uint64_t (*FrontmostWindowTracker.onFrontmostChanged.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged, a1, 33, 0);
  return j__swift_endAccess;
}

NSObject *FrontmostWindowTracker.__allocating_init(window:uiApplication:appKitBundle:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return FrontmostWindowTracker.init(window:uiApplication:appKitBundle:)(a1, a2, a3);
}

NSObject *FrontmostWindowTracker.init(window:uiApplication:appKitBundle:)(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  __objc2_meth_list **p_opt_class_meths;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  char *v15;
  void *v16;
  NSObject *v17;
  id v18;
  uint64_t v19;
  id v20;
  char *v21;
  NSObject *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  NSObject **v26;
  NSObject *v27;
  NSObject **v28;
  NSObject *v29;
  uint64_t v30;
  void *ObjCClassFromMetadata;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  NSObject *v43;
  NSObject *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  NSObject **v48;
  NSObject *v49;
  NSObject *v50;
  NSObject *v51;
  uint64_t v52;
  NSObject *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  NSObject **v57;
  NSObject *v58;
  NSObject *v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t type[8];
  id v67;
  NSObject *v68;
  NSObject *v69;
  NSObject *v70;
  _BYTE v71[16];
  objc_super v72;

  ObjectType = (objc_class *)swift_getObjectType(v3);
  p_opt_class_meths = &OBJC_PROTOCOL___BFMSeries.opt_class_meths;
  v9 = &v3[OBJC_IVAR___BCFrontmostWindowTracker_state];
  *(_QWORD *)v9 = -1;
  *((_WORD *)v9 + 4) = 0;
  v10 = &v3[OBJC_IVAR___BCFrontmostWindowTracker_onFrontmostChanged];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v3[OBJC_IVAR___BCFrontmostWindowTracker_appKitBundle] = a3;
  objc_allocWithZone((Class)type metadata accessor for FrontmostApplicationTracker());
  v11 = v3;
  v68 = a2;
  *(_QWORD *)&v11[OBJC_IVAR___BCFrontmostWindowTracker_frontmostTracker] = FrontmostApplicationTracker.init(uiApplication:appKitBundle:)(v68, a3);
  *(_QWORD *)&v11[OBJC_IVAR___BCFrontmostWindowTracker_window] = a1;
  v12 = a1;

  v72.receiver = v11;
  v72.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v72, "init");
  v14 = objc_msgSend(v12, "windowScene");
  v15 = "IMessageViewController>\"16@\"AMSDialogResult\"24";
  if (v14)
  {
    v16 = v14;
    v17 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    -[NSObject addObserver:selector:name:object:](v17, "addObserver:selector:name:object:", v13, "handleSceneStateNotification:", UISceneDidActivateNotification, v16);
    -[NSObject addObserver:selector:name:object:](v17, "addObserver:selector:name:object:", v13, "handleSceneStateNotification:", UISceneDidEnterBackgroundNotification, v16);
    v18 = objc_msgSend(v16, "activationState");

  }
  else
  {
    if (qword_30AAD8 != -1)
      swift_once(&qword_30AAD8, sub_1767A0);
    v19 = type metadata accessor for Logger(0);
    sub_178770(v19, (uint64_t)qword_30B8A0);
    v67 = v12;
    v20 = v12;
    v21 = v13;
    v22 = v20;
    v23 = v21;
    v17 = Logger.logObject.getter();
    v24 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v17, v24))
    {
      v25 = swift_slowAlloc(22, -1);
      v26 = (NSObject **)swift_slowAlloc(16, -1);
      *(_DWORD *)v25 = 138412546;
      v70 = v23;
      v27 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, v25 + 4, v25 + 12);
      *v26 = v23;
      v28 = v26;

      *(_WORD *)(v25 + 12) = 2112;
      v70 = v22;
      v29 = v22;
      v15 = "B32@0:8@\"UIViewController<AMSUIMessageViewController>\"16@\"AMSDialogResult\"24" + 30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, v71, v25 + 14, v25 + 22);
      v28[1] = v22;

      p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___BFMSeries + 48);
      _os_log_impl(&dword_0, v17, v24, "%@: Window %@ has no window scene!", (uint8_t *)v25, 0x16u);
      v30 = sub_16B968(&qword_30B550);
      swift_arrayDestroy(v28, 2, v30);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v25, -1, -1);
      v18 = 0;
    }
    else
    {

      v18 = 0;
      v17 = v23;
    }
    v12 = v67;
  }

  *(__objc2_meth_list *)((char *)p_opt_class_meths[280] + (_QWORD)v13) = (__objc2_meth_list)v18;
  if (a3)
  {
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(a3);
    objc_msgSend(ObjCClassFromMetadata, "addMainObserver:didBecomeSelector:didResignSelector:window:", v13, "handleMainWindowNotification:", "handleMainWindowNotification:", v12);
    *((_BYTE *)&p_opt_class_meths[280][1].entrysize + (_QWORD)v13) = objc_msgSend(ObjCClassFromMetadata, "isMainWindow:", v12);
  }
  else
  {
    *((_BYTE *)&p_opt_class_meths[280][1].entrysize + (_QWORD)v13) = 1;
  }
  v32 = OBJC_IVAR___BCFrontmostWindowTracker_frontmostTracker;
  v33 = *(_QWORD *)&v13[OBJC_IVAR___BCFrontmostWindowTracker_frontmostTracker];
  v34 = swift_allocObject(&unk_2939F8, 24, 7);
  swift_unknownObjectUnownedInit(v34 + 16, v13);
  v35 = (uint64_t *)(v33 + OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged);
  swift_beginAccess(v35, &v70, 1, 0);
  v36 = *v35;
  v37 = v35[1];
  *v35 = (uint64_t)sub_1787AC;
  v35[1] = v34;
  sub_178760(v36, v37);
  v38 = 0;
  v39 = *(_QWORD *)&v13[v32] + OBJC_IVAR___BCFrontmostApplicationTracker_state;
  if (!*(_QWORD *)v39 && *(_BYTE *)(v39 + 8) && (*(_BYTE *)(v39 + 9) & 1) == 0)
    v38 = (*(_BYTE *)(v39 + 10) | *(_BYTE *)(v39 + 11)) ^ 1;
  *(_QWORD *)type = (char *)p_opt_class_meths[280] + (_QWORD)v13;
  *(_BYTE *)(*(_QWORD *)type + 9) = v38 & 1;
  if (qword_30AAD8 != -1)
    swift_once(&qword_30AAD8, sub_1767A0);
  v40 = type metadata accessor for Logger(0);
  sub_178770(v40, (uint64_t)qword_30B8A0);
  v41 = v12;
  v42 = v13;
  v43 = v41;
  v44 = v42;
  v45 = Logger.logObject.getter();
  v46 = static os_log_type_t.default.getter(v45);
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc(22, -1);
    v48 = (NSObject **)swift_slowAlloc(16, -1);
    *(_DWORD *)v47 = *((_QWORD *)v15 + 421);
    v69 = v44;
    v49 = v43;
    v50 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v47 + 4, v47 + 12);
    *v48 = v44;

    *(_WORD *)(v47 + 12) = 2112;
    v69 = v49;
    v51 = v49;
    v43 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v47 + 14, v47 + 22);
    v48[1] = v49;

    _os_log_impl(&dword_0, v45, v46, "%@: window: %@", (uint8_t *)v47, 0x16u);
    v52 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v48, 2, v52);
    swift_slowDealloc(v48, -1, -1);
    swift_slowDealloc(v47, -1, -1);
  }
  else
  {

    v45 = v44;
  }

  v53 = v44;
  v54 = Logger.logObject.getter();
  v55 = static os_log_type_t.default.getter(v54);
  if (os_log_type_enabled(v54, v55))
  {
    v56 = swift_slowAlloc(18, -1);
    v57 = (NSObject **)swift_slowAlloc(8, -1);
    *(_DWORD *)v56 = 138412546;
    v58 = v43;
    v69 = v53;
    v59 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v56 + 4, v56 + 12);
    *v57 = v53;

    *(_WORD *)(v56 + 12) = 1024;
    v60 = **(_QWORD **)type;
    v61 = *(unsigned __int8 *)(*(_QWORD *)type + 8);
    v62 = *(unsigned __int8 *)(*(_QWORD *)type + 9);

    LODWORD(v69) = (v60 == 0) & v61 & v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, (char *)&v69 + 4, v56 + 14, v56 + 18);

    _os_log_impl(&dword_0, v54, v55, "%@: initial is frontmost: %{BOOL}d", (uint8_t *)v56, 0x12u);
    v63 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v57, 1, v63);
    swift_slowDealloc(v57, -1, -1);
    swift_slowDealloc(v56, -1, -1);
    v64 = v68;
  }
  else
  {

    v58 = v53;
    v64 = v53;
  }

  return v53;
}

uint64_t sub_17766C()
{
  char *v0;
  char v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  char **v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int16 v14;
  int v15;
  __int16 v16;
  int v18;
  char *v19;
  uint64_t v20;

  v1 = 0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR___BCFrontmostWindowTracker_frontmostTracker]
     + OBJC_IVAR___BCFrontmostApplicationTracker_state;
  if (*(_QWORD *)v2)
    v3 = 1;
  else
    v3 = *(_BYTE *)(v2 + 8) == 0;
  if (!v3 && (*(_BYTE *)(v2 + 9) & 1) == 0)
    v1 = (*(_BYTE *)(v2 + 10) | *(_BYTE *)(v2 + 11)) ^ 1;
  if (qword_30AAD8 != -1)
    swift_once(&qword_30AAD8, sub_1767A0);
  v4 = type metadata accessor for Logger(0);
  sub_178770(v4, (uint64_t)qword_30B8A0);
  v5 = v0;
  v6 = Logger.logObject.getter();
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(18, -1);
    v9 = (char **)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412546;
    v19 = v5;
    v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v8 + 4, v8 + 12);
    *v9 = v5;

    *(_WORD *)(v8 + 12) = 1024;
    v18 = v1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v8 + 14, v8 + 18);
    _os_log_impl(&dword_0, v6, v7, "%@: Application frontmost changed to %{BOOL}d", (uint8_t *)v8, 0x12u);
    v11 = sub_16B968(&qword_30B550);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v12 = &v5[OBJC_IVAR___BCFrontmostWindowTracker_state];
  v13 = *(_QWORD *)&v5[OBJC_IVAR___BCFrontmostWindowTracker_state];
  v14 = v5[OBJC_IVAR___BCFrontmostWindowTracker_state + 8];
  v15 = v5[OBJC_IVAR___BCFrontmostWindowTracker_state + 9];
  v12[8] = v14;
  v12[9] = v1 & 1;
  if (v15)
    v16 = 256;
  else
    v16 = 0;
  return sub_17683C(v13, v16 | v14);
}

id FrontmostWindowTracker.__deallocating_deinit()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  objc_super v8;
  char v9[24];

  ObjectType = (objc_class *)swift_getObjectType(v0);
  v2 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR___BCFrontmostWindowTracker_frontmostTracker]
                 + OBJC_IVAR___BCFrontmostApplicationTracker_onFrontmostChanged);
  swift_beginAccess(v2, v9, 1, 0);
  v3 = *v2;
  v4 = v2[1];
  *v2 = 0;
  v2[1] = 0;
  sub_178760(v3, v4);
  v5 = *(_QWORD *)&v0[OBJC_IVAR___BCFrontmostWindowTracker_appKitBundle];
  if (v5)
    objc_msgSend((id)swift_getObjCClassFromMetadata(v5), "removeMainObserver:window:", v0, *(_QWORD *)&v0[OBJC_IVAR___BCFrontmostWindowTracker_window]);
  v6 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v6, "removeObserver:", v0);

  v8.receiver = v0;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, "dealloc");
}

id PPTConfig.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void FrontmostWindowTracker.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("BookCore.FrontmostWindowTracker", 31, "init()", 6, 0);
  __break(1u);
}

void sub_177A78(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  unint64_t v9;
  NSObject *v10;
  char **v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  NSObject **v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  NSObject **v30;
  NSObject *v31;
  NSObject *v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  _QWORD *v38;
  NSObject *v39;
  NSObject *v40;
  NSObject *v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  _QWORD *v46;
  NSObject *v47;
  NSObject *v48;
  NSObject **v49;
  NSObject *v50;
  NSObject *v51;
  NSObject *v52;
  uint64_t v53;
  NSObject **v54;
  NSObject **v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  NSObject **v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  unint64_t v72;
  unint64_t v73;
  NSObject *v74;
  os_log_t v75;
  uint64_t v76;
  _QWORD *v77;
  NSObject *v78;
  char *v79;
  __int16 v80;
  int v81;
  uint64_t v82;
  __int16 v83;
  uint64_t v84;
  NSObject *v85;
  NSObject *v86;
  NSObject *v87;
  uint64_t v88;
  NSObject **v89;
  NSObject **v90;
  os_log_t v91;
  NSObject *v92;
  uint64_t v93;
  NSObject *v94;
  NSObject *v95;
  NSObject *v96;
  _QWORD v97[3];

  v2 = v1;
  v4 = (_QWORD *)type metadata accessor for Notification(0);
  v5 = *(v4 - 1);
  v6 = __chkstk_darwin(v4);
  v8 = ((char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  Notification.object.getter(&v96, v6);
  if (!v97[2])
  {
    sub_16D8AC((uint64_t)&v96);
    return;
  }
  v9 = sub_16D8EC();
  if ((swift_dynamicCast(&v95, &v96, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
    return;
  v94 = v95;
  v10 = *(NSObject **)&v1[OBJC_IVAR___BCFrontmostWindowTracker_window];
  v11 = &selRef_updatedHighlight_forceRerender_;
  v12 = -[NSObject windowScene](v10, "windowScene");
  if (v12)
  {
    v13 = v12;
    if (v12 != v94)
    {
      v88 = a1;
      v91 = v8;
      v92 = v10;
      if (qword_30AAD8 != -1)
        swift_once(&qword_30AAD8, sub_1767A0);
      v14 = type metadata accessor for Logger(0);
      sub_178770(v14, (uint64_t)qword_30B8A0);
      v15 = v1;
      v16 = v13;
      v17 = v94;
      v18 = v15;
      v89 = v16;
      v19 = v17;
      v20 = Logger.logObject.getter();
      v21 = static os_log_type_t.fault.getter();
      v22 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        v23 = swift_slowAlloc(42, -1);
        v90 = v2;
        v24 = v23;
        v25 = (NSObject **)swift_slowAlloc(32, -1);
        *(_DWORD *)v24 = 138413058;
        LODWORD(v86) = v22;
        v93 = v5;
        v96 = v18;
        v87 = v20;
        v26 = v18;
        v85 = v19;
        v27 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v24 + 4, v24 + 12);
        *v25 = v18;

        *(_WORD *)(v24 + 12) = 2112;
        v28 = v92;
        v96 = v92;
        v29 = v92;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v24 + 14, v24 + 22);
        v25[1] = v28;

        *(_WORD *)(v24 + 22) = 2112;
        v96 = v89;
        v30 = v89;
        v89 = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v24 + 24, v24 + 32);
        v25[2] = v13;

        *(_WORD *)(v24 + 32) = 2112;
        v5 = v93;
        v31 = v85;
        v96 = v85;
        v32 = v85;
        v33 = v87;
        v10 = v28;
        v11 = &selRef_updatedHighlight_forceRerender_;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v24 + 34, v24 + 42);
        v25[3] = v31;

        _os_log_impl(&dword_0, v33, (os_log_type_t)v86, "%@: window %@ changed to scene %@ (was %@)", (uint8_t *)v24, 0x2Au);
        v34 = sub_16B968(&qword_30B550);
        swift_arrayDestroy(v25, 4, v34);
        swift_slowDealloc(v25, -1, -1);
        v35 = v24;
        v2 = v90;
        swift_slowDealloc(v35, -1, -1);

        v8 = v91;
      }
      else
      {

        v55 = v89;
        v33 = v18;
        v8 = v91;
        v10 = v92;
      }
      a1 = v88;
LABEL_19:

      goto LABEL_20;
    }

  }
  v36 = -[NSObject windowScene](v10, "windowScene");

  if (!v36)
  {
    v92 = v10;
    if (qword_30AAD8 != -1)
      swift_once(&qword_30AAD8, sub_1767A0);
    v37 = type metadata accessor for Logger(0);
    sub_178770(v37, (uint64_t)qword_30B8A0);
    v90 = v2;
    v38 = v2;
    v39 = v94;
    v40 = v38;
    v41 = v39;
    v42 = Logger.logObject.getter();
    v43 = static os_log_type_t.fault.getter();
    v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = swift_slowAlloc(32, -1);
      v89 = (NSObject **)swift_slowAlloc(24, -1);
      *(_DWORD *)v45 = 138412802;
      v87 = v42;
      v93 = v5;
      v46 = v4;
      v96 = v40;
      v91 = v8;
      v47 = v40;
      v86 = v41;
      v48 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v45 + 4, v45 + 12);
      v49 = v89;
      *v89 = v40;

      *(_WORD *)(v45 + 12) = 2112;
      LODWORD(v88) = v44;
      v10 = v92;
      v96 = v92;
      v50 = v92;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v45 + 14, v45 + 22);
      v49[1] = v10;

      *(_WORD *)(v45 + 22) = 2112;
      v11 = &selRef_updatedHighlight_forceRerender_;
      v4 = v46;
      v5 = v93;
      v85 = (v45 + 32);
      v51 = v86;
      v96 = v86;
      v52 = v86;
      v8 = v91;
      v33 = v87;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, v97, v45 + 24, v85);
      v89[2] = v51;

      _os_log_impl(&dword_0, v33, (os_log_type_t)v88, "%@: window %@ no longer has a scene (was %@)", (uint8_t *)v45, 0x20u);
      v53 = sub_16B968(&qword_30B550);
      v54 = v89;
      swift_arrayDestroy(v89, 3, v53);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v45, -1, -1);
      v2 = v90;
    }
    else
    {

      v33 = v40;
      v2 = v90;
      v10 = v92;
    }
    goto LABEL_19;
  }
LABEL_20:
  v56 = objc_msgSend(v10, v11[136]);
  if (v56)
  {
    v57 = v56;
    v58 = (uint64_t)objc_msgSend(v56, "activationState");

  }
  else
  {
    v58 = -1;
  }
  if (qword_30AAD8 != -1)
    swift_once(&qword_30AAD8, sub_1767A0);
  v59 = type metadata accessor for Logger(0);
  sub_178770(v59, (uint64_t)qword_30B8A0);
  (*(void (**)(NSObject *, uint64_t, _QWORD *))(v5 + 16))(v8, a1, v4);
  v60 = v2;
  v61 = Logger.logObject.getter();
  v62 = static os_log_type_t.default.getter(v61);
  if (os_log_type_enabled(v61, v62))
  {
    v63 = swift_slowAlloc(32, -1);
    v64 = (NSObject **)swift_slowAlloc(8, -1);
    v90 = v64;
    v92 = swift_slowAlloc(32, -1);
    v95 = v60;
    v96 = v92;
    *(_DWORD *)v63 = 138412802;
    v91 = v61;
    v89 = (NSObject **)v4;
    v65 = v60;
    v93 = v5;
    v66 = v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96, v63 + 4, v63 + 12);
    *v64 = v60;

    *(_WORD *)(v63 + 12) = 2048;
    v95 = v58;
    v67 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96, v63 + 14, v63 + 22);
    *(_WORD *)(v63 + 22) = 2080;
    v68 = (void *)Notification.name.getter(v67);
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
    v70 = v58;
    v71 = v8;
    v73 = v72;

    v95 = sub_1995C0(v69, v73, (uint64_t *)&v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, &v96, v63 + 24, v63 + 32);
    swift_bridgeObjectRelease(v73);
    v74 = v71;
    v58 = v70;
    (*(void (**)(NSObject *, NSObject **))(v93 + 8))(v74, v89);
    v75 = v91;
    _os_log_impl(&dword_0, v91, v62, "%@: window scene state => %ld (%s)", (uint8_t *)v63, 0x20u);
    v76 = sub_16B968(&qword_30B550);
    v77 = v90;
    swift_arrayDestroy((NSObject **)v90, 1, v76);
    swift_slowDealloc(v77, -1, -1);
    v78 = v92;
    swift_arrayDestroy(v92, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v78, -1, -1);
    swift_slowDealloc(v63, -1, -1);

  }
  else
  {

    (*(void (**)(NSObject *, _QWORD *))(v5 + 8))(v8, v4);
  }
  v79 = (char *)v60 + OBJC_IVAR___BCFrontmostWindowTracker_state;
  v80 = *((unsigned __int8 *)&v60[1].isa + OBJC_IVAR___BCFrontmostWindowTracker_state);
  v81 = *((unsigned __int8 *)&v60[1].isa + OBJC_IVAR___BCFrontmostWindowTracker_state + 1);
  v82 = *(uint64_t *)((char *)&v60->isa + OBJC_IVAR___BCFrontmostWindowTracker_state);
  *(_QWORD *)v79 = v58;
  v79[8] = v80;
  v79[9] = v81;
  if (v81)
    v83 = 256;
  else
    v83 = 0;
  sub_17683C(v82, v83 | v80);

}

uint64_t sub_178368(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  char **v15;
  char *v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  __int16 v27;
  __int16 v28;
  uint64_t v29;
  os_log_t v30;
  char **v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  v3 = type metadata accessor for Notification(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)&v1[OBJC_IVAR___BCFrontmostWindowTracker_appKitBundle];
  if (result)
  {
    LODWORD(v8) = objc_msgSend((id)swift_getObjCClassFromMetadata(result), "isMainWindow:", *(_QWORD *)&v1[OBJC_IVAR___BCFrontmostWindowTracker_window]);
    if (qword_30AAD8 != -1)
      swift_once(&qword_30AAD8, sub_1767A0);
    v9 = type metadata accessor for Logger(0);
    sub_178770(v9, (uint64_t)qword_30B8A0);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v10 = v1;
    v11 = Logger.logObject.getter();
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(28, -1);
      v32 = v3;
      v14 = v13;
      v15 = (char **)swift_slowAlloc(8, -1);
      v31 = v15;
      v33 = swift_slowAlloc(32, -1);
      v35 = (uint64_t)v10;
      v36 = v33;
      *(_DWORD *)v14 = 138412802;
      v34 = v8;
      v30 = v11;
      v16 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v14 + 4, v14 + 12);
      *v15 = v10;

      *(_WORD *)(v14 + 12) = 1024;
      LODWORD(v35) = v34;
      v17 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, (char *)&v35 + 4, v14 + 14, v14 + 18);
      *(_WORD *)(v14 + 18) = 2080;
      v18 = (void *)Notification.name.getter(v17);
      v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v20 = v19;

      v35 = sub_1995C0(v8, v20, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v14 + 20, v14 + 28);
      LOBYTE(v8) = v34;
      swift_bridgeObjectRelease(v20);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v32);
      v11 = v30;
      _os_log_impl(&dword_0, v30, v12, "%@: window is-main => %{BOOL}d (%s)", (uint8_t *)v14, 0x1Cu);
      v21 = sub_16B968(&qword_30B550);
      v22 = v31;
      swift_arrayDestroy(v31, 1, v21);
      swift_slowDealloc(v22, -1, -1);
      v23 = v33;
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }

    v24 = &v10[OBJC_IVAR___BCFrontmostWindowTracker_state];
    v25 = *(_QWORD *)&v10[OBJC_IVAR___BCFrontmostWindowTracker_state];
    v26 = v10[OBJC_IVAR___BCFrontmostWindowTracker_state + 9];
    v27 = v10[OBJC_IVAR___BCFrontmostWindowTracker_state + 8];
    v24[8] = v8;
    v24[9] = v26;
    if (v26)
      v28 = 256;
    else
      v28 = 0;
    return sub_17683C(v25, v28 | v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1786B0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v13;

  v7 = type metadata accessor for Notification(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v11 = a1;
  a4(v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_178750(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_retain(a2);
  return result;
}

uint64_t sub_178760(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

uint64_t sub_178770(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_178788()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1787AC()
{
  uint64_t v0;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + 16);
  sub_17766C();

}

uint64_t type metadata accessor for FrontmostWindowTracker()
{
  return objc_opt_self(BCFrontmostWindowTracker);
}

uint64_t method lookup function for FrontmostWindowTracker(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for FrontmostWindowTracker);
}

uint64_t dispatch thunk of FrontmostWindowTracker.__allocating_init(window:uiApplication:appKitBundle:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t initializeBufferWithCopyOfBuffer for FrontmostWindowTracker.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FrontmostWindowTracker.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FrontmostWindowTracker.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FrontmostWindowTracker.State()
{
  return &type metadata for FrontmostWindowTracker.State;
}

uint64_t sub_1788DC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_178900(char a1)
{
  uint64_t v1;

  return sub_1A9758(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_178908(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_178918(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_178920()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_178944(char a1)
{
  uint64_t v1;

  return sub_1A9790(a1, *(uint64_t (**)(char *))(v1 + 16));
}

uint64_t sub_17894C(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1A976C(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t *sub_178954(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t Atomic.value.getter()
{
  uint64_t v0;

  return OS_dispatch_queue.sync<A>(execute:)(sub_178D24, v0, *(_QWORD *)(*(_QWORD *)v0 + 80));
}

uint64_t Atomic.mutate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[5];
  uint64_t v13;

  v3 = v2;
  v6 = *(NSObject **)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 96));
  v7 = (_QWORD *)swift_allocObject(&unk_293B60, 40, 7);
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v3;
  v8 = swift_allocObject(&unk_293B88, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_175CD8;
  *(_QWORD *)(v8 + 24) = v7;
  v12[4] = sub_178DC4;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_175BAC;
  v12[3] = &unk_293BA0;
  v9 = _Block_copy(v12);
  v10 = v13;
  swift_retain(v3);
  swift_retain(v8);
  swift_release(v10);
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation(v8, "", 95, 24, 20, 1);
  swift_release(v7);
  result = swift_release(v8);
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t Atomic.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  Atomic.init(_:)(a1);
  return v3;
}

char *Atomic.init(_:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;

  v2 = v1;
  v21 = *(_QWORD *)v1;
  v3 = v21;
  v22 = a1;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(v3 + 96);
  v14 = sub_175D4C();
  static DispatchQoS.unspecified.getter(v14);
  v23 = &_swiftEmptyArrayStorage;
  v15 = sub_178DE4();
  v16 = sub_16B968(&qword_30B890);
  v17 = sub_178E2C();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v16, v17, v8, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  v18 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001DLL, 0x8000000000215380, v13, v10, v7, 0);
  *(_QWORD *)&v2[v20] = v18;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v21 + 80) - 8) + 32))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 88)], v22);
  return v2;
}

uint64_t sub_178D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 88);
  swift_beginAccess(v4, v6, 0, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_178D90()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_178DB4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_178DC4()
{
  uint64_t v0;

  return sub_175B8C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_178DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_178DDC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

unint64_t sub_178DE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30B888;
  if (!qword_30B888)
  {
    v1 = type metadata accessor for OS_dispatch_queue.Attributes(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue.Attributes, v1);
    atomic_store(result, (unint64_t *)&qword_30B888);
  }
  return result;
}

unint64_t sub_178E2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30B898;
  if (!qword_30B898)
  {
    v1 = sub_175E8C(&qword_30B890);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_30B898);
  }
  return result;
}

uint64_t Atomic.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));

  return v0;
}

uint64_t Atomic.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_178EFC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 80));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_initClassMetadata2(a1, 0, 2, v4, a1 + 88);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Atomic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_178F98(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Atomic);
}

uint64_t method lookup function for Atomic(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Atomic);
}

uint64_t dispatch thunk of Atomic.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_178F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_178FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch(sub_178FE0, 0, 0);
}

uint64_t sub_178FE0()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  id v4;
  Class isa;
  id v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = CRDTModelSyncVersion.serializedData()();
  v3 = v2;
  v4 = objc_allocWithZone((Class)BDSCRDTModelSyncVersionInfo);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v4, "initWithData:", isa);
  sub_17933C(v1, v3);
  v0[18] = v6;
  v7 = v0[16];

  if (v7)
    v8 = objc_msgSend(objc_allocWithZone((Class)BDSReadingHistoryUpdateInfo), "initWithUpdate:", v0[16]);
  else
    v8 = 0;
  v9 = v0 + 2;
  v0[19] = v8;
  v10 = (void *)v0[17];
  v0[7] = v0 + 20;
  v0[2] = v0;
  v0[3] = sub_179180;
  v11 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v12 = v0 + 10;
  v12[1] = 0x40000000;
  v12[2] = sub_179328;
  v12[3] = &unk_293CA8;
  v12[4] = v11;
  objc_msgSend(v10, "handleSyncFileChangeWithSyncVersionInfo:updateInfo:completion:", v6, v8, v12);
  return swift_continuation_await(v9);
}

uint64_t sub_179180()
{
  return swift_task_switch(sub_1791CC, 0, 0);
}

uint64_t sub_1791CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 152);

  v2 = *(unsigned __int8 *)(v0 + 160);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

id CRDTModelSyncVersion.toInfo()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  id v3;
  Class isa;
  id v5;

  v0 = CRDTModelSyncVersion.serializedData()();
  v2 = v1;
  v3 = objc_allocWithZone((Class)BDSCRDTModelSyncVersionInfo);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithData:", isa);
  sub_17933C(v0, v2);

  return v5;
}

unint64_t sub_1792EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30CD90;
  if (!qword_30CD90)
  {
    v1 = objc_opt_self(OS_os_log);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_30CD90);
  }
  return result;
}

uint64_t sub_179328(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_17933C(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

id ReadingHistoryServiceClient.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadingHistoryServiceClient();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for ReadingHistoryServiceClient()
{
  return objc_opt_self(_TtC8BookCore27ReadingHistoryServiceClient);
}

id ReadingHistoryServiceClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadingHistoryServiceClient();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t method lookup function for ReadingHistoryServiceClient(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingHistoryServiceClient);
}

uint64_t dispatch thunk of ReadingHistoryServiceClient.handleSyncFileChange(syncVersion:update:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((char *)&stru_20.filesize + (swift_isaMask & *v2));
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1794C8;
  return v9(a1, a2);
}

uint64_t sub_1794C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 16));
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t UIViewController.firstVisibleChildViewController<A>(of:includePresented:)(uint64_t a1, char a2, uint64_t a3)
{
  void *v3;
  id v5;
  id v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v5 = objc_msgSend(v3, "bc_firstVisibleChildViewControllerOfClass:includePresented:", swift_getObjCClassFromMetadata(a1), a2 & 1);
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v9);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_16D864((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    if (swift_dynamicCast(&v8, v10, (char *)&type metadata for Any + 8, a3, 6))
      return v8;
    else
      return 0;
  }
  else
  {
    sub_16D8AC((uint64_t)v10);
    return 0;
  }
}

id UIViewController.isWelcomeExperiencePresenting.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  __objc2_prot *v4;

  result = objc_msgSend(v0, "presentedViewController");
  if (result)
  {
    v2 = result;
    while (1)
    {
      v4 = &OBJC_PROTOCOL___BCWelcomeExperienceControlling;
      if (swift_dynamicCastObjCProtocolConditional(v2, 1, &v4))
        break;
      v3 = objc_msgSend(v2, "presentedViewController");

      v2 = v3;
      if (!v3)
        return 0;
    }

    return &dword_0 + 1;
  }
  return result;
}

Swift::Void __swiftcall UIViewController.dismissIfSafe(animated:)(Swift::Bool animated)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  __objc2_prot *v9;

  v2 = v1;
  v4 = objc_msgSend(v1, "presentedViewController");
  if (v4)
  {
    v5 = v4;
    do
    {
      v9 = &OBJC_PROTOCOL___BCWelcomeExperienceControlling;
      if (swift_dynamicCastObjCProtocolConditional(v5, 1, &v9))
        goto LABEL_8;
      v6 = objc_msgSend(v5, "presentedViewController");

      v5 = v6;
    }
    while (v6);
  }
  v7 = objc_msgSend(v2, "presentedViewController");
  if (v7)
  {
    v8 = v7;
    v5 = objc_msgSend(v7, "presentingViewController");

    if (v5)
    {
      objc_msgSend(v5, "dismissViewControllerAnimated:completion:", animated, 0);
LABEL_8:

    }
  }
}

uint64_t _AnyDefaultsValue.init(_:)@<X0>(uint64_t a1@<X0>, Class *a2@<X8>)
{
  return sub_1797E0(a1, a2);
}

{
  return sub_1797E0(a1, a2);
}

uint64_t _AnyDefaultsValue.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1797E0@<X0>(uint64_t a1@<X0>, Class *a2@<X8>)
{
  Class isa;
  uint64_t result;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  result = swift_bridgeObjectRelease(a1);
  *a2 = isa;
  return result;
}

uint64_t _AnyDefaultsValue.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  void **v3;
  void *v6;
  uint64_t v7;
  NSString v8;
  id v9;
  uint64_t v10;
  int v11;
  _OWORD v13[2];
  _OWORD v14[2];

  v6 = *v3;
  dispatch thunk of RawRepresentable.rawValue.getter(v14, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v7 = *((_QWORD *)&v14[0] + 1);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v7);
  v9 = objc_msgSend(v6, "valueForKeyPath:", v8);

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)(v13);
    swift_unknownObjectRelease(v9);
    sub_17992C(v13, v14);
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  v10 = sub_16B968(&qword_30ABB0);
  v11 = swift_dynamicCast(a3, v14, v10, a2, 6);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v11 ^ 1u, 1, a2);
}

_OWORD *sub_17992C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_17993C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t type metadata accessor for _AnyDefaultsValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_178F98(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AnyDefaultsValue);
}

uint64_t sub_179950()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  _BYTE v27[24];

  v1 = sub_16B968(&qword_30BD20);
  v2 = __chkstk_darwin(v1);
  v4 = &v27[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  v6 = &v27[-v5 - 8];
  v7 = v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v27, 32, 0);
  v8 = type metadata accessor for ReadingAchievementsController.State(0);
  v9 = *(_QWORD *)(v7 + *(int *)(v8 + 20));
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1880C8(1u), (v11 & 1) != 0))
  {
    v12 = v10;
    v13 = *(_QWORD *)(v9 + 56);
    v14 = type metadata accessor for Achievement(0);
    v15 = *(_QWORD *)(v14 - 8);
    sub_1854C0(v13 + *(_QWORD *)(v15 + 72) * v12, (uint64_t)v6, type metadata accessor for Achievement);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v6, 0, 1, v14);
  }
  else
  {
    v14 = type metadata accessor for Achievement(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  }
  swift_endAccess(v27);
  type metadata accessor for Achievement(0);
  v16 = *(_QWORD *)(v14 - 8);
  v17 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v6, 1, v14);
  v19 = sub_1766A8((uint64_t)v6, &qword_30BD20);
  if (v18 == 1)
  {
    v20 = 0;
  }
  else
  {
    swift_beginAccess(v7, v27, 32, 0);
    v21 = *(_QWORD *)(v7 + *(int *)(v8 + 20));
    if (*(_QWORD *)(v21 + 16) && (v22 = sub_1880C8(0), (v23 & 1) != 0))
    {
      sub_1854C0(*(_QWORD *)(v21 + 56) + *(_QWORD *)(v16 + 72) * v22, (uint64_t)v4, type metadata accessor for Achievement);
      v24 = 0;
    }
    else
    {
      v24 = 1;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v4, v24, 1, v14);
    swift_endAccess(v27);
    v20 = v17(v4, 1, v14) != 1;
    v19 = sub_1766A8((uint64_t)v4, &qword_30BD20);
  }
  __chkstk_darwin(v19);
  *((_BYTE *)&v26 - 16) = v20;
  return MutableObservableContainer.mutate(_:)(sub_185548);
}

uint64_t sub_179BC0()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_isDataLoadedObservable));
}

uint64_t ReadingAchievementsController.__allocating_init(dataSource:goalsStateProvider:booksStateProvider:notifier:pendingReadingTimeProvider:currentTimeProvider:)(_QWORD *a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), void (*a9)(uint64_t))
{
  uint64_t v9;
  uint64_t v18;

  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v18 = sub_183F20(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  swift_release(a5);
  swift_release(a7);
  swift_release(a9);
  return v18;
}

uint64_t ReadingAchievementsController.init(dataSource:goalsStateProvider:booksStateProvider:notifier:pendingReadingTimeProvider:currentTimeProvider:)(_QWORD *a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), void (*a9)(uint64_t))
{
  uint64_t v11;

  v11 = sub_183F20(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  swift_release(a5);
  swift_release(a7);
  swift_release(a9);
  return v11;
}

uint64_t sub_179CEC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD aBlock[5];
  uint64_t v43;
  char v44[24];
  char v45[32];

  v36 = a5;
  v37 = a6;
  v34 = a1;
  v35 = a4;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v40 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_16B968(a3);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  __chkstk_darwin(v14);
  v17 = a2 + 16;
  swift_beginAccess(a2 + 16, v45, 0, 0);
  result = swift_weakLoadStrong(a2 + 16);
  if (result)
  {
    v19 = result;
    v33 = *(id *)(result + 16);
    swift_release(v19);
    v20 = swift_allocObject(&unk_293DD0, 24, 7);
    v21 = v8;
    swift_beginAccess(v17, v44, 0, 0);
    Strong = swift_weakLoadStrong(v17);
    swift_weakInit(v20 + 16, Strong);
    swift_release(Strong);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v14);
    v23 = *(unsigned __int8 *)(v15 + 80);
    v24 = (v23 + 24) & ~v23;
    v25 = swift_allocObject(v35, v24 + v16, v23 | 7);
    *(_QWORD *)(v25 + 16) = v20;
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v25 + v24, (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
    aBlock[4] = v36;
    v43 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_172474;
    aBlock[3] = v37;
    v26 = _Block_copy(aBlock);
    v27 = swift_retain(v20);
    static DispatchQoS.unspecified.getter(v27);
    v41 = &_swiftEmptyArrayStorage;
    v28 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v29 = sub_16B968((uint64_t *)&unk_30C330);
    v30 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v29, v30, v21, v28);
    v31 = v33;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v21);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v39);
    v32 = v43;
    swift_release(v20);
    return swift_release(v32);
  }
  return result;
}

uint64_t sub_179FDC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  result = swift_weakLoadStrong(v5);
  if (result)
  {
    v7 = result;
    a3(a2);
    return swift_release(v7);
  }
  return result;
}

uint64_t sub_17A048(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD aBlock[5];
  uint64_t v28;
  char v29[24];
  char v30[24];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1 + 16;
  swift_beginAccess(v10, v30, 0, 0);
  result = swift_weakLoadStrong(v10);
  if (result)
  {
    v12 = result;
    v13 = *(id *)(result + 16);
    v25 = v3;
    v14 = v13;
    swift_release(v12);
    v15 = swift_allocObject(&unk_293DD0, 24, 7);
    v24 = v6;
    swift_beginAccess(v10, v29, 0, 0);
    Strong = swift_weakLoadStrong(v10);
    swift_weakInit(v15 + 16, Strong);
    swift_release(Strong);
    aBlock[4] = sub_185AAC;
    v28 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_172474;
    aBlock[3] = &unk_2940B0;
    v17 = _Block_copy(aBlock);
    v18 = swift_retain(v15);
    static DispatchQoS.unspecified.getter(v18);
    v26 = &_swiftEmptyArrayStorage;
    v19 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = sub_16B968((uint64_t *)&unk_30C330);
    v21 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v2, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
    v22 = v28;
    swift_release(v15);
    return swift_release(v22);
  }
  return result;
}

uint64_t sub_17A2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  void (*v29)(_BYTE *, uint64_t);
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  _BYTE v36[4];
  int v37;
  uint64_t v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a2;
  v43 = type metadata accessor for Calendar(0);
  v40 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for Date(0);
  v41 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v42 = &v36[-v13];
  v14 = sub_16B968(&qword_30BD30);
  __chkstk_darwin(v14);
  v16 = &v36[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for ReadingHistory.Day(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = &v36[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1765E0(a1, (uint64_t)v16, &qword_30BD30);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1766A8((uint64_t)v16, &qword_30BD30);
    *a3 = 0.0;
    *((_BYTE *)a3 + 8) = 1;
  }
  else
  {
    v39 = a3;
    v21 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v20, v16, v17);
    v22 = ReadingHistory.Day.readingTime.getter(v21);
    v23 = (double)v22 + a4;
    v37 = ReadingHistory.Day.isStreakDay.getter(v22);
    ((void (*)(void))static Calendar.gregorian.getter)();
    v38 = v9;
    v24 = v44;
    Calendar.startOfDay(for:)(v44);
    v25 = *(uint64_t (**)(_BYTE *, uint64_t))(v40 + 8);
    v26 = v43;
    v27 = v25(v8, v43);
    static Calendar.gregorian.getter(v27);
    v28 = v42;
    Date.nextDay(calendar:)(v8);
    v25(v8, v26);
    v29 = *(void (**)(_BYTE *, uint64_t))(v41 + 8);
    v30 = v38;
    v29(v12, v38);
    v31 = Date.timeIntervalSince(_:)(v24);
    v32 = ReadingHistory.Day.goal.getter();
    v29(v28, v30);
    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
    v33 = (double)v32 - v23;
    if (v33 <= v31)
    {
      a3 = v39;
      if (v37 & 1 | (v23 >= (double)v32))
        *v39 = 0.0;
      else
        *v39 = v33;
      *((_BYTE *)a3 + 8) = 0;
    }
    else
    {
      a3 = v39;
      *v39 = 0.0;
      *((_BYTE *)a3 + 8) = 1;
    }
  }
  v34 = type metadata accessor for Achievement(0);
  return swift_storeEnumTagMultiPayload(a3, v34, 0);
}

uint64_t sub_17A5A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v26 = a2;
  v3 = type metadata accessor for Date(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReadingHistoryModel.DayKey(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_16B968(&qword_30B7E8);
  __chkstk_darwin(v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ReadingHistory.Streak(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1765E0(a1, (uint64_t)v12, &qword_30B7E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1766A8((uint64_t)v12, &qword_30B7E8);
    v17 = type metadata accessor for Achievement(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v26, 1, 1, v17);
  }
  else
  {
    v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    ReadingHistory.Streak.endDate.getter(v19);
    ReadingHistoryModel.DayKey.init(_:)(v5);
    v20 = sub_16B968(&qword_30BCE8);
    v21 = v26;
    v22 = (char *)v26 + *(int *)(v20 + 48);
    v23 = ReadingHistory.Streak.length.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    *v21 = v23;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v22, v9, v6);
    v24 = type metadata accessor for Achievement(0);
    swift_storeEnumTagMultiPayload(v21, v24, 2);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 0, 1, v24);
  }
}

uint64_t sub_17A7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  void *v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v17 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = *(_QWORD *)(v0 + 16);
  v8 = swift_allocObject(&unk_293DD0, 24, 7);
  swift_weakInit(v8 + 16, v0);
  aBlock[4] = sub_1858E0;
  v20 = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_293FC0;
  v9 = _Block_copy(aBlock);
  v10 = swift_retain(v8);
  static DispatchQoS.unspecified.getter(v10);
  v18 = &_swiftEmptyArrayStorage;
  v11 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v12 = sub_16B968((uint64_t *)&unk_30C330);
  v13 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = v20;
  swift_release(v8);
  return swift_release(v14);
}

uint64_t sub_17A9DC(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    a2();
    return swift_release(v5);
  }
  return result;
}

uint64_t sub_17AAD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  double v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  double *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  _QWORD aBlock[5];
  uint64_t v92;
  char v93[24];
  char v94[8];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v87 = *(_QWORD *)(v1 - 8);
  v88 = v1;
  __chkstk_darwin(v1);
  v86 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v84 = *(_QWORD *)(v3 - 8);
  v85 = v3;
  __chkstk_darwin(v3);
  v83 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_16B968(&qword_30BD30);
  __chkstk_darwin(v5);
  v71 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_16B968(&qword_30BD20);
  __chkstk_darwin(v7);
  v72 = (double *)((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ReadingHistory.Day(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ReadingAchievementsController.State(0);
  v17 = *(_QWORD *)(v16 - 8);
  v69 = v16;
  v74 = v17;
  v18 = __chkstk_darwin(v16);
  v70 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v68 - v20;
  v22 = v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  v73 = v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  swift_beginAccess(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v94, 0, 0);
  sub_1854C0(v22, (uint64_t)v21, type metadata accessor for ReadingAchievementsController.State);
  v76 = swift_allocBox(v16);
  v24 = v23;
  v77 = v21;
  sub_1854C0((uint64_t)v21, v23, type metadata accessor for ReadingAchievementsController.State);
  v25 = v0;
  v27 = *(void (**)(uint64_t))(v0
                                       + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_currentTimeProvider);
  v26 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_currentTimeProvider + 8);
  v28 = swift_retain(v26);
  v27(v28);
  swift_release(v26);
  v29 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_dataSource + 24);
  v30 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_dataSource + 32);
  sub_185554((_QWORD *)(v25 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_dataSource), v29);
  dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryDay(for:)(v15, v29, *(_QWORD *)(v30 + 24));
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 24))(v24, v12, v9);
  v31 = v69;
  v32 = v24 + *(int *)(v69 + 24);
  v79 = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 24))(v32, v15, v89);
  type metadata accessor for ReadingAchievementsController(0);
  v33 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v34 = (uint64_t)v71;
  v80 = v12;
  v33(v71, v12, v9);
  v81 = v10;
  v35 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56);
  v36 = (uint64_t)v70;
  v82 = v9;
  v35(v34, 0, 1, v9);
  v37 = (*(double (**)(char *))(v25
                                         + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_pendingReadingTimeProvider))(v15);
  v38 = v72;
  v78 = v15;
  sub_17A2B0(v34, (uint64_t)v15, v72, v37);
  sub_1766A8(v34, &qword_30BD30);
  v39 = type metadata accessor for Achievement(0);
  (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 0, 1, v39);
  v40 = sub_186CD4((uint64_t)v38, 0);
  v41 = static os_log_type_t.debug.getter(v40);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v42 = (void *)static OS_os_log.readingActivity.getter();
  v43 = sub_16B968(&qword_30CFD0);
  v44 = swift_allocObject(v43, 72, 7);
  *(_OWORD *)(v44 + 16) = xmmword_26BDD0;
  sub_1854C0(v24, v36, type metadata accessor for ReadingAchievementsController.State);
  v45 = String.init<A>(reflecting:)(v36, v31);
  v47 = v46;
  *(_QWORD *)(v44 + 56) = &type metadata for String;
  *(_QWORD *)(v44 + 64) = sub_1852AC();
  *(_QWORD *)(v44 + 32) = v45;
  *(_QWORD *)(v44 + 40) = v47;
  os_log(_:dso:log:_:_:)(v41, &dword_0);

  swift_bridgeObjectRelease(v44);
  sub_1854C0(v24, v36, type metadata accessor for ReadingAchievementsController.State);
  v48 = v73;
  swift_beginAccess(v73, aBlock, 33, 0);
  sub_185504(v36, v48);
  swift_endAccess(aBlock);
  sub_179950();
  sub_185270(v36, type metadata accessor for ReadingAchievementsController.State);
  v49 = v25 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions;
  swift_beginAccess(v25 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions, v93, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v49 + 16))
    sub_17D204(0.0);
  v50 = swift_allocObject(&unk_293DD0, 24, 7);
  swift_weakInit(v50 + 16, v25);
  v51 = (uint64_t)v77;
  sub_1854C0((uint64_t)v77, v36, type metadata accessor for ReadingAchievementsController.State);
  v52 = *(unsigned __int8 *)(v74 + 80);
  v53 = (v52 + 24) & ~v52;
  v54 = (v75 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject(&unk_293F80, v54 + 8, v52 | 7);
  *(_QWORD *)(v55 + 16) = v50;
  sub_1856D4(v36, v55 + v53, type metadata accessor for ReadingAchievementsController.State);
  v56 = v76;
  *(_QWORD *)(v55 + v54) = v76;
  aBlock[4] = sub_1857C8;
  v92 = v55;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_293F98;
  v57 = _Block_copy(aBlock);
  swift_retain(v50);
  v58 = swift_retain(v56);
  v59 = v83;
  static DispatchQoS.unspecified.getter(v58);
  v90 = &_swiftEmptyArrayStorage;
  v60 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v61 = sub_16B968((uint64_t *)&unk_30C330);
  v62 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
  v63 = v86;
  v64 = v61;
  v65 = v88;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v90, v64, v62, v88, v60);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v63, v57);
  _Block_release(v57);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v63, v65);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v59, v85);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v89);
  sub_185270(v51, type metadata accessor for ReadingAchievementsController.State);
  v66 = v92;
  swift_release(v56);
  swift_release(v50);
  return swift_release(v66);
}

uint64_t sub_17B250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[24];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = v0;
  v2 = sub_16B968(&qword_30BD20);
  __chkstk_darwin(v2);
  v4 = (_QWORD *)((char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ReadingAchievementsController.State(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v34 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)v34 - v12;
  v14 = sub_16B968(&qword_30BD58);
  result = ObservableContainer.Event.currentValue.getter(v14);
  v16 = v39;
  if (v39 != 1)
  {
    v17 = v38;
    v34[0] = v41;
    v34[1] = v40;
    v36 = v1;
    v18 = v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
    swift_beginAccess(v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, &v38, 0, 0);
    v35 = v18;
    sub_1854C0(v18, (uint64_t)v13, type metadata accessor for ReadingAchievementsController.State);
    result = sub_1854C0((uint64_t)v13, (uint64_t)v11, type metadata accessor for ReadingAchievementsController.State);
    if (v16)
    {
      v19 = *(_QWORD *)(v16 + 16);
      result = sub_17630C(v17, v16);
    }
    else
    {
      v19 = 0;
    }
    v20 = &v11[*(int *)(v5 + 32)];
    *(_QWORD *)v20 = v19;
    v20[8] = 0;
    v21 = *(_QWORD *)&v13[*(int *)(v5 + 28)];
    v22 = __OFSUB__(v21, v19);
    v23 = v21 - v19;
    if (v22)
    {
      __break(1u);
    }
    else
    {
      *v4 = v23 & ~(v23 >> 63);
      v24 = type metadata accessor for Achievement(0);
      swift_storeEnumTagMultiPayload(v4, v24, 1);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v4, 0, 1, v24);
      v25 = sub_186CD4((uint64_t)v4, 1);
      v26 = static os_log_type_t.debug.getter(v25);
      sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
      v27 = (void *)static OS_os_log.readingActivity.getter();
      v28 = sub_16B968(&qword_30CFD0);
      v29 = swift_allocObject(v28, 72, 7);
      *(_OWORD *)(v29 + 16) = xmmword_26BDD0;
      sub_1854C0((uint64_t)v11, (uint64_t)v8, type metadata accessor for ReadingAchievementsController.State);
      v30 = String.init<A>(reflecting:)(v8, v5);
      v32 = v31;
      *(_QWORD *)(v29 + 56) = &type metadata for String;
      *(_QWORD *)(v29 + 64) = sub_1852AC();
      *(_QWORD *)(v29 + 32) = v30;
      *(_QWORD *)(v29 + 40) = v32;
      os_log(_:dso:log:_:_:)(v26, &dword_0);

      swift_bridgeObjectRelease(v29);
      sub_1854C0((uint64_t)v11, (uint64_t)v8, type metadata accessor for ReadingAchievementsController.State);
      v33 = v35;
      swift_beginAccess(v35, v37, 33, 0);
      sub_185504((uint64_t)v8, v33);
      swift_endAccess(v37);
      sub_179950();
      sub_185270((uint64_t)v8, type metadata accessor for ReadingAchievementsController.State);
      sub_185270((uint64_t)v11, type metadata accessor for ReadingAchievementsController.State);
      return sub_185270((uint64_t)v13, type metadata accessor for ReadingAchievementsController.State);
    }
  }
  return result;
}

uint64_t sub_17B590(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  void *v87;
  _QWORD aBlock[5];
  uint64_t v89;
  char v90[32];

  v86 = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v2;
  __chkstk_darwin(v2);
  v76 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for DispatchQoS(0);
  v74 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v73 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_16B968(&qword_30BD48);
  v80 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v79 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_16B968(&qword_30BD20);
  __chkstk_darwin(v7);
  v69 = (uint64_t *)((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for ReadingGoals.State(0);
  v84 = *(_QWORD *)(v9 - 8);
  v85 = (char *)v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ReadingGoals.StateChange(0);
  v83 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ReadingAchievementsController.State(0);
  v71 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v68 - v19;
  v81 = v1;
  v21 = v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v90, 0, 0);
  sub_1854C0(v21, (uint64_t)v20, type metadata accessor for ReadingAchievementsController.State);
  v82 = swift_allocBox(v15);
  v23 = v22;
  sub_1854C0((uint64_t)v20, v22, type metadata accessor for ReadingAchievementsController.State);
  v24 = ObservableContainer.Event.currentValue.getter(v5);
  ReadingGoals.StateChange.state.getter(v24);
  v25 = *(void (**)(char *, uint64_t))(v83 + 8);
  v83 = v12;
  v70 = v25;
  v26 = ((uint64_t (*)(char *, uint64_t))v25)(v14, v12);
  v27 = ReadingGoals.State.booksFinishedGoal.getter(v26);
  result = (*(uint64_t (**)(char *, char *))(v84 + 8))(v11, v85);
  *(_QWORD *)(v23 + *(int *)(v15 + 28)) = v27;
  v29 = *(int *)(v15 + 32);
  v85 = v20;
  v30 = &v20[v29];
  if ((v30[8] & 1) == 0)
  {
    v31 = *(_QWORD *)v30;
    v32 = __OFSUB__(v27, v31);
    v33 = v27 - v31;
    if (v32)
    {
      __break(1u);
      return result;
    }
    v34 = (uint64_t)v69;
    *v69 = v33 & ~(v33 >> 63);
    v35 = type metadata accessor for Achievement(0);
    swift_storeEnumTagMultiPayload(v34, v35, 1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 0, 1, v35);
    result = sub_186CD4(v34, 1);
  }
  v36 = static os_log_type_t.default.getter(result);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v37 = (void *)static OS_os_log.readingActivity.getter();
  v38 = sub_16B968(&qword_30CFD0);
  v39 = swift_allocObject(v38, 72, 7);
  *(_OWORD *)(v39 + 16) = xmmword_26BDD0;
  sub_1854C0(v23, (uint64_t)v18, type metadata accessor for ReadingAchievementsController.State);
  v40 = String.init<A>(reflecting:)(v18, v15);
  v41 = v23;
  v43 = v42;
  *(_QWORD *)(v39 + 56) = &type metadata for String;
  *(_QWORD *)(v39 + 64) = sub_1852AC();
  *(_QWORD *)(v39 + 32) = v40;
  *(_QWORD *)(v39 + 40) = v43;
  os_log(_:dso:log:_:_:)(v36, &dword_0);

  swift_bridgeObjectRelease(v39);
  sub_1854C0(v41, (uint64_t)v18, type metadata accessor for ReadingAchievementsController.State);
  swift_beginAccess(v21, aBlock, 33, 0);
  sub_185504((uint64_t)v18, v21);
  swift_endAccess(aBlock);
  v44 = v81;
  sub_179950();
  sub_185270((uint64_t)v18, type metadata accessor for ReadingAchievementsController.State);
  v45 = v79;
  v46 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v86, v5);
  if ((*(unsigned int (**)(char *, uint64_t))(v46 + 88))(v45, v5) == enum case for ObservableContainer.Event.change<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v46 + 96))(v45, v5);
    v47 = sub_16B968(&qword_30BD50);
    v48 = v83;
    v49 = v70;
    v70(&v45[*(int *)(v47 + 48)], v83);
    v49(v45, v48);
    v50 = swift_allocObject(&unk_293DD0, 24, 7);
    swift_weakInit(v50 + 16, v44);
    v51 = (uint64_t)v85;
    sub_1854C0((uint64_t)v85, (uint64_t)v18, type metadata accessor for ReadingAchievementsController.State);
    v52 = *(unsigned __int8 *)(v71 + 80);
    v53 = (v52 + 24) & ~v52;
    v54 = (v72 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
    v55 = swift_allocObject(&unk_293F30, v54 + 8, v52 | 7);
    *(_QWORD *)(v55 + 16) = v50;
    sub_1856D4((uint64_t)v18, v55 + v53, type metadata accessor for ReadingAchievementsController.State);
    v56 = v82;
    *(_QWORD *)(v55 + v54) = v82;
    aBlock[4] = sub_1857C8;
    v89 = v55;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_172474;
    aBlock[3] = &unk_293F48;
    v57 = _Block_copy(aBlock);
    swift_retain(v50);
    v58 = swift_retain(v56);
    v59 = v73;
    static DispatchQoS.unspecified.getter(v58);
    v87 = &_swiftEmptyArrayStorage;
    v60 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v61 = sub_16B968((uint64_t *)&unk_30C330);
    v62 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
    v63 = v76;
    v64 = v61;
    v65 = v78;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v87, v64, v62, v78, v60);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v63, v57);
    _Block_release(v57);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v63, v65);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v59, v75);
    sub_185270(v51, type metadata accessor for ReadingAchievementsController.State);
    v66 = v89;
    swift_release(v56);
    swift_release(v50);
    v67 = v66;
  }
  else
  {
    sub_185270((uint64_t)v85, type metadata accessor for ReadingAchievementsController.State);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v5);
    v67 = v82;
  }
  return swift_release(v67);
}

uint64_t sub_17BCB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  void *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  double *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  _QWORD aBlock[5];
  uint64_t v196;
  char v197[8];
  char v198[8];

  v1 = v0;
  v166 = type metadata accessor for DispatchWorkItemFlags(0);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v164 = (char *)&v156 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = type metadata accessor for DispatchQoS(0);
  v162 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v161 = (char *)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_16B968(&qword_30BD28);
  __chkstk_darwin(v175);
  v174 = (char *)&v156 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_16B968(&qword_30BD20);
  v6 = __chkstk_darwin(v5);
  v167 = (uint64_t)&v156 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v169 = (uint64_t)&v156 - v9;
  __chkstk_darwin(v8);
  v173 = (double *)((char *)&v156 - v10);
  v190 = type metadata accessor for ReadingAchievementsController.State(0);
  v159 = *(_QWORD *)(v190 - 8);
  v11 = __chkstk_darwin(v190);
  v176 = (char *)&v156 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v186 = (uint64_t)&v156 - v14;
  v160 = v15;
  __chkstk_darwin(v13);
  v189 = (uint64_t)&v156 - v16;
  v17 = sub_16B968(&qword_30B7E8);
  __chkstk_darwin(v17);
  v191 = (uint64_t)&v156 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_16B968(&qword_30BD30);
  v20 = __chkstk_darwin(v19);
  v172 = (char *)&v156 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v181 = (uint64_t)&v156 - v22;
  v184 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  v171 = *(_QWORD *)(v184 - 8);
  v23 = __chkstk_darwin(v184);
  v168 = (char *)&v156 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v170 = (char *)&v156 - v25;
  v183 = type metadata accessor for ReadingHistory.Day(0);
  v182 = *(_QWORD *)(v183 - 8);
  __chkstk_darwin(v183);
  v179 = (char *)&v156 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_16B968(&qword_30B560);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v156 - v32;
  v34 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  v187 = *(_QWORD *)(v34 - 8);
  v188 = v34;
  v35 = __chkstk_darwin(v34);
  v158 = (char *)&v156 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = v36;
  __chkstk_darwin(v35);
  v38 = (char *)&v156 - v37;
  v39 = type metadata accessor for Date(0);
  v192 = *(_QWORD *)(v39 - 8);
  v193 = v39;
  v40 = __chkstk_darwin(v39);
  v177 = (char *)&v156 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __chkstk_darwin(v40);
  v180 = (char *)&v156 - v43;
  v156 = v44;
  __chkstk_darwin(v42);
  v46 = (char *)&v156 - v45;
  v48 = *(void (**)(uint64_t))(v0
                                       + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_currentTimeProvider);
  v47 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_currentTimeProvider + 8);
  v49 = swift_retain(v47);
  v48(v49);
  swift_release(v47);
  v185 = v1;
  v50 = (_QWORD *)(v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_dataSource);
  v51 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_dataSource + 24);
  v52 = v50[4];
  sub_185554(v50, v51);
  v53 = dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryModelSnapshot(currentTime:)(v46, v51, *(_QWORD *)(v52 + 24));
  ReadingHistory.ModelSnapshot.loaded.getter(v53);
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v31, enum case for ModelState.LoadedState.ready<A>(_:), v27);
  v54 = type metadata accessor for ReadingHistoryModel(0);
  v55 = sub_16BDB8(&qword_30B578, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v56 = sub_16BDB8(&qword_30B580, (uint64_t (*)(uint64_t))&type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  LOBYTE(v54) = static ModelState.LoadedState.== infix(_:_:)(v33, v31, v54, v55, v56);
  v57 = *(void (**)(char *, uint64_t))(v28 + 8);
  v57(v31, v27);
  v58 = ((uint64_t (*)(char *, uint64_t))v57)(v33, v27);
  if ((v54 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v187 + 8))(v38, v188);
    return (*(uint64_t (**)(char *, uint64_t))(v192 + 8))(v46, v193);
  }
  v59 = v170;
  v60 = ReadingHistory.ModelSnapshot.modelValues.getter(v58);
  v61 = v181;
  ReadingHistory.ModelSnapshot.ModelValues.readingDay.getter(v60);
  v62 = *(void (**)(char *, uint64_t))(v171 + 8);
  v62(v59, v184);
  v63 = v192;
  v64 = v193;
  v65 = *(void (**)(char *, char *, uint64_t))(v192 + 16);
  v65(v180, v46, v193);
  v66 = v182;
  v67 = v183;
  v68 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v182 + 48))(v61, 1, v183);
  v178 = v46;
  v170 = (char *)v65;
  if (v68 == 1)
  {
    v69 = v66;
    v70 = v50[3];
    v71 = v50[4];
    sub_185554(v50, v70);
    v72 = *(_QWORD *)(v71 + 24);
    v66 = v69;
    v73 = v179;
    v74 = v180;
    v75 = v70;
    v76 = v192;
    v64 = v193;
    dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryDay(for:)(v180, v75, v72);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v64);
    v77 = sub_1766A8(v181, &qword_30BD30);
  }
  else
  {
    v76 = v63;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v180, v64);
    v73 = v179;
    v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 32))(v179, v181, v67);
  }
  v79 = v168;
  v80 = ReadingHistory.ModelSnapshot.modelValues.getter(v77);
  ReadingHistory.ModelSnapshot.ModelValues.longestStreak.getter(v80);
  v62(v79, v184);
  v81 = v185;
  v184 = (uint64_t)v38;
  v82 = v185 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  v181 = v185 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  swift_beginAccess(v185 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v198, 0, 0);
  v83 = v82;
  v84 = v189;
  sub_1854C0(v83, v189, type metadata accessor for ReadingAchievementsController.State);
  v85 = v190;
  v180 = (char *)swift_allocBox(v190);
  v87 = v86;
  sub_1854C0(v84, v86, type metadata accessor for ReadingAchievementsController.State);
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 24))(v87, v73, v67);
  v88 = (uint64_t)v178;
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 24))(v87 + *(int *)(v85 + 24), v178, v64);
  type metadata accessor for ReadingAchievementsController(0);
  v89 = (uint64_t)v172;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v172, v73, v67);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v89, 0, 1, v67);
  v90 = (*(double (**)(uint64_t))(v81
                                          + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_pendingReadingTimeProvider))(v88);
  v91 = (uint64_t *)v173;
  sub_17A2B0(v89, v88, v173, v90);
  sub_1766A8(v89, &qword_30BD30);
  v92 = type metadata accessor for Achievement(0);
  v168 = *(char **)(v92 - 8);
  v93 = (char *)*((_QWORD *)v168 + 7);
  v171 = v92;
  v172 = v93;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v93)(v91, 0, 1);
  sub_186CD4((uint64_t)v91, 0);
  sub_17A5A4(v191, v91);
  v94 = sub_186CD4((uint64_t)v91, 2);
  v95 = static os_log_type_t.default.getter(v94);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v96 = (void *)static OS_os_log.readingActivity.getter();
  v97 = sub_16B968(&qword_30CFD0);
  v98 = swift_allocObject(v97, 112, 7);
  *(_OWORD *)(v98 + 16) = xmmword_26BF80;
  v99 = v186;
  sub_1854C0(v87, v186, type metadata accessor for ReadingAchievementsController.State);
  v100 = String.init<A>(reflecting:)(v99, v85);
  v102 = v101;
  *(_QWORD *)(v98 + 56) = &type metadata for String;
  v103 = sub_1852AC();
  *(_QWORD *)(v98 + 64) = v103;
  *(_QWORD *)(v98 + 32) = v100;
  *(_QWORD *)(v98 + 40) = v102;
  v104 = (uint64_t)v174;
  ReadingHistory.ModelSnapshot.lastSource.getter();
  v105 = ModelState.Source.description.getter(v175);
  v107 = v106;
  sub_1766A8(v104, &qword_30BD28);
  *(_QWORD *)(v98 + 96) = &type metadata for String;
  *(_QWORD *)(v98 + 104) = v103;
  v108 = v185;
  *(_QWORD *)(v98 + 72) = v105;
  *(_QWORD *)(v98 + 80) = v107;
  os_log(_:dso:log:_:_:)(v95, &dword_0);

  swift_bridgeObjectRelease(v98);
  sub_1854C0(v87, v99, type metadata accessor for ReadingAchievementsController.State);
  v109 = v181;
  swift_beginAccess(v181, aBlock, 33, 0);
  sub_185504(v99, v109);
  swift_endAccess(aBlock);
  sub_179950();
  sub_185270(v99, type metadata accessor for ReadingAchievementsController.State);
  v110 = v108 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions;
  swift_beginAccess(v108 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions, v197, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v110 + 16))
    sub_17D204(0.0);
  v111 = v189;
  v112 = *(_QWORD *)(v189 + *(int *)(v190 + 20));
  v114 = v187;
  v113 = v188;
  v115 = (uint64_t)v176;
  if (*(_QWORD *)(v112 + 16) && (v116 = sub_1880C8(0), (v117 & 1) != 0))
  {
    v118 = *(_QWORD *)(v112 + 56) + *((_QWORD *)v168 + 9) * v116;
    v119 = v169;
    sub_1854C0(v118, v169, type metadata accessor for Achievement);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v172)(v119, 0, 1, v171);
    sub_1766A8(v119, &qword_30BD20);
    sub_1854C0(v111, v115, type metadata accessor for ReadingAchievementsController.State);
  }
  else
  {
    v120 = v169;
    v121 = v171;
    v122 = v172;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v172)(v169, 1, 1, v171);
    sub_1766A8(v120, &qword_30BD20);
    sub_1854C0(v111, v115, type metadata accessor for ReadingAchievementsController.State);
    v123 = *(_QWORD *)(v115 + *(int *)(v190 + 20));
    if (!*(_QWORD *)(v123 + 16) || (v124 = sub_1880C8(2u), (v125 & 1) == 0))
    {
      v155 = v167;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v122)(v167, 1, 1, v121);
      sub_1766A8(v155, &qword_30BD20);
      sub_185270(v115, type metadata accessor for ReadingAchievementsController.State);
      sub_185270(v111, type metadata accessor for ReadingAchievementsController.State);
      sub_1766A8(v191, &qword_30B7E8);
      (*(void (**)(char *, uint64_t))(v182 + 8))(v179, v183);
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v184, v113);
      (*(void (**)(char *, uint64_t))(v192 + 8))(v178, v193);
      v154 = v180;
      return swift_release(v154);
    }
    v126 = *(_QWORD *)(v123 + 56) + *((_QWORD *)v168 + 9) * v124;
    v127 = v167;
    sub_1854C0(v126, v167, type metadata accessor for Achievement);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v122)(v127, 0, 1, v121);
    sub_1766A8(v127, &qword_30BD20);
  }
  v128 = v193;
  sub_185270(v115, type metadata accessor for ReadingAchievementsController.State);
  v190 = *(_QWORD *)(v108 + 24);
  v181 = swift_allocObject(&unk_293DD0, 24, 7);
  swift_weakInit(v181 + 16, v108);
  v129 = v158;
  (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v158, v184, v113);
  sub_1854C0(v111, v186, type metadata accessor for ReadingAchievementsController.State);
  ((void (*)(char *, char *, uint64_t))v170)(v177, v178, v128);
  v130 = *(unsigned __int8 *)(v114 + 80);
  v131 = v114;
  v132 = v113;
  v133 = (v130 + 16) & ~v130;
  v134 = (v157 + v133 + 7) & 0xFFFFFFFFFFFFFFF8;
  v135 = *(unsigned __int8 *)(v159 + 80);
  v136 = (v135 + v134 + 8) & ~v135;
  v137 = (v160 + v136 + 7) & 0xFFFFFFFFFFFFFFF8;
  v138 = v192;
  v139 = *(unsigned __int8 *)(v192 + 80);
  v140 = (v139 + v137 + 8) & ~v139;
  v141 = swift_allocObject(&unk_293EE0, v140 + v156, v130 | v135 | v139 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v131 + 32))(v141 + v133, v129, v132);
  v142 = v181;
  *(_QWORD *)(v141 + v134) = v181;
  sub_1856D4(v186, v141 + v136, type metadata accessor for ReadingAchievementsController.State);
  v143 = v180;
  *(_QWORD *)(v141 + v137) = v180;
  (*(void (**)(uint64_t, char *, uint64_t))(v138 + 32))(v141 + v140, v177, v193);
  aBlock[4] = sub_185718;
  v196 = v141;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_293EF8;
  v144 = _Block_copy(aBlock);
  swift_retain(v142);
  v145 = swift_retain(v143);
  v146 = v161;
  static DispatchQoS.unspecified.getter(v145);
  v194 = &_swiftEmptyArrayStorage;
  v147 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v148 = sub_16B968((uint64_t *)&unk_30C330);
  v149 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
  v150 = v164;
  v151 = v148;
  v152 = v166;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v194, v151, v149, v166, v147);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v146, v150, v144);
  _Block_release(v144);
  (*(void (**)(char *, uint64_t))(v165 + 8))(v150, v152);
  (*(void (**)(char *, uint64_t))(v162 + 8))(v146, v163);
  sub_185270(v189, type metadata accessor for ReadingAchievementsController.State);
  sub_1766A8(v191, &qword_30B7E8);
  (*(void (**)(char *, uint64_t))(v182 + 8))(v179, v183);
  (*(void (**)(uint64_t, uint64_t))(v187 + 8))(v184, v188);
  (*(void (**)(char *, uint64_t))(v138 + 8))(v178, v193);
  v153 = (char *)v196;
  swift_release(v143);
  swift_release(v142);
  v154 = v153;
  return swift_release(v154);
}

uint64_t sub_17CCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t Strong;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[24];
  _BYTE v67[24];
  void *v68;

  v62 = a5;
  v64 = a3;
  v7 = sub_16B968(&qword_30B7E8);
  __chkstk_darwin(v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_16B968(&qword_30BD20);
  v11 = __chkstk_darwin(v10);
  v13 = (uint64_t *)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v15 = (double *)((char *)&v57 - v14);
  v16 = sub_16B968(&qword_30BD38);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v57 - v20;
  v22 = sub_16B968(&qword_30BD30);
  __chkstk_darwin(v22);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for ReadingAchievementsController.State(0);
  __chkstk_darwin(v25);
  v63 = (uint64_t)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_16B968(&qword_30BD28);
  __chkstk_darwin(v27);
  v29 = (char *)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = a2 + 16;
  v30 = swift_projectBox(a4);
  ReadingHistory.ModelSnapshot.lastSource.getter();
  v31 = sub_16B968(&qword_30BD40);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v29, 2, v31);
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      v33 = v65;
      swift_beginAccess(v65, v67, 0, 0);
      result = swift_weakLoadStrong(v33);
      if (result)
      {
        v34 = result;
        swift_beginAccess(v30, v66, 0, 0);
        v35 = v63;
        sub_1854C0(v30, v63, type metadata accessor for ReadingAchievementsController.State);
        sub_17FAF0(v64, v35, 0);
        swift_release(v34);
        return sub_185270(v35, type metadata accessor for ReadingAchievementsController.State);
      }
    }
  }
  else
  {
    v58 = v30;
    v59 = v13;
    v61 = v24;
    ((void (*)(void))ReadingHistory.ModelSnapshot.remoteModelValues.getter)();
    v36 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    v39 = v38(v21, 1, v36);
    v60 = v38;
    if (v39 == 1)
    {
      sub_1766A8((uint64_t)v21, &qword_30BD38);
      v40 = type metadata accessor for ReadingHistory.Day(0);
      v41 = (uint64_t)v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v61, 1, 1, v40);
    }
    else
    {
      v42 = v37;
      v43 = (uint64_t)v61;
      ReadingHistory.ModelSnapshot.ModelValues.readingDay.getter();
      v41 = v43;
      v37 = v42;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v36);
    }
    v44 = v62;
    v68 = &_swiftEmptyDictionarySingleton;
    type metadata accessor for ReadingAchievementsController(0);
    sub_17A2B0(v41, v44, v15, 0.0);
    v45 = type metadata accessor for Achievement(0);
    (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v15, 0, 1, v45);
    v46 = sub_186CD4((uint64_t)v15, 0);
    ReadingHistory.ModelSnapshot.remoteModelValues.getter(v46);
    if (v60(v19, 1, v36) == 1)
    {
      sub_1766A8((uint64_t)v19, &qword_30BD38);
      v47 = type metadata accessor for ReadingHistory.Streak(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v9, 1, 1, v47);
    }
    else
    {
      ReadingHistory.ModelSnapshot.ModelValues.longestStreak.getter();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v36);
    }
    v49 = v58;
    v48 = v59;
    v50 = v65;
    sub_17A5A4((uint64_t)v9, v59);
    sub_1766A8((uint64_t)v9, &qword_30B7E8);
    sub_186CD4((uint64_t)v48, 2);
    swift_beginAccess(v50, v67, 0, 0);
    Strong = swift_weakLoadStrong(v50);
    if (Strong)
    {
      v52 = Strong;
      swift_beginAccess(v49, v66, 0, 0);
      v53 = v49;
      v54 = v63;
      sub_1854C0(v53, v63, type metadata accessor for ReadingAchievementsController.State);
      v55 = v68;
      sub_17FAF0(v64, v54, (uint64_t)v68);
      swift_release(v52);
      swift_bridgeObjectRelease(v55);
      sub_185270(v54, type metadata accessor for ReadingAchievementsController.State);
    }
    else
    {
      swift_bridgeObjectRelease(v68);
    }
    sub_1766A8((uint64_t)v61, &qword_30BD30);
    v56 = type metadata accessor for ReadingHistoryModel(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v29, v56);
  }
  return result;
}

uint64_t sub_17D204(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  double *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t result;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t i;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  double v37;
  uint64_t EnumCaseMultiPayload;
  double v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  id v57;
  id v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  NSRunLoopMode v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  Swift::Int v85;
  _QWORD aBlock[5];
  uint64_t v87;
  char v88[24];
  char v89[32];

  v84 = type metadata accessor for Achievement(0);
  v3 = *(_QWORD *)(v84 - 8);
  v4 = __chkstk_darwin(v84);
  v81 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v70 - v7);
  v9 = __chkstk_darwin(v6);
  v11 = (double *)((char *)&v70 - v10);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v70 - v13;
  v73 = v15;
  __chkstk_darwin(v12);
  v17 = (char *)&v70 - v16;
  v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_timers);
  v19 = swift_beginAccess(v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_timers, v89, 0, 0);
  v72 = v18;
  v20 = *v18;
  if ((v20 & 0xC000000000000001) != 0)
  {
    if (v20 < 0)
      v21 = v20;
    else
      v21 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v20);
    v22 = __CocoaSet.count.getter(v21);
    v19 = swift_bridgeObjectRelease(v20);
    if (v22)
      goto LABEL_6;
  }
  else if (*(_QWORD *)(v20 + 16))
  {
LABEL_6:
    sub_17E43C(v19);
  }
  v74 = v1;
  v23 = v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  swift_beginAccess(v1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v88, 0, 0);
  v24 = *(_QWORD *)(v23 + *(int *)(type metadata accessor for ReadingAchievementsController.State(0) + 20));
  v25 = v24 + 64;
  v26 = 1 << *(_BYTE *)(v24 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & *(_QWORD *)(v24 + 64);
  v83 = (unint64_t)(v26 + 63) >> 6;
  v71 = NSRunLoopCommonModes;
  result = swift_bridgeObjectRetain(v24);
  v30 = 0;
  v70 = xmmword_26BF80;
  v75 = xmmword_26BDD0;
  v82 = v3;
  v80 = v8;
  v79 = v17;
  v78 = v24;
  v77 = v24 + 64;
  if (v28)
    goto LABEL_13;
LABEL_14:
  v34 = v30 + 1;
  if (!__OFADD__(v30, 1))
  {
    if (v34 < v83)
    {
      v35 = *(_QWORD *)(v25 + 8 * v34);
      ++v30;
      if (v35)
        goto LABEL_29;
      v30 = v34 + 1;
      if (v34 + 1 >= v83)
        return swift_release(v24);
      v35 = *(_QWORD *)(v25 + 8 * v30);
      if (v35)
        goto LABEL_29;
      v30 = v34 + 2;
      if (v34 + 2 >= v83)
        return swift_release(v24);
      v35 = *(_QWORD *)(v25 + 8 * v30);
      if (v35)
        goto LABEL_29;
      v30 = v34 + 3;
      if (v34 + 3 >= v83)
        return swift_release(v24);
      v35 = *(_QWORD *)(v25 + 8 * v30);
      if (v35)
      {
LABEL_29:
        v28 = (v35 - 1) & v35;
        for (i = __clz(__rbit64(v35)) + (v30 << 6); ; i = v32 | (v30 << 6))
        {
          sub_1854C0(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v3 + 72) * i, (uint64_t)v17, type metadata accessor for Achievement);
          sub_1856D4((uint64_t)v17, (uint64_t)v14, type metadata accessor for Achievement);
          sub_1854C0((uint64_t)v14, (uint64_t)v11, type metadata accessor for Achievement);
          if (swift_getEnumCaseMultiPayload(v11, v84))
          {
            sub_185270((uint64_t)v14, type metadata accessor for Achievement);
            v31 = (uint64_t)v11;
            goto LABEL_12;
          }
          if (((_BYTE)v11[1] & 1) != 0)
          {
            v31 = (uint64_t)v14;
LABEL_12:
            result = sub_185270(v31, type metadata accessor for Achievement);
            if (!v28)
              goto LABEL_14;
            goto LABEL_13;
          }
          v37 = *v11;
          sub_1854C0((uint64_t)v14, (uint64_t)v8, type metadata accessor for Achievement);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v84);
          if ((_DWORD)EnumCaseMultiPayload)
          {
            if ((_DWORD)EnumCaseMultiPayload != 1)
            {
              v60 = (char *)v8 + *(int *)(sub_16B968(&qword_30BCE8) + 48);
              v61 = type metadata accessor for ReadingHistoryModel.DayKey(0);
              EnumCaseMultiPayload = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
LABEL_44:
              v62 = static os_log_type_t.debug.getter(EnumCaseMultiPayload);
              sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
              v63 = (void *)static OS_os_log.readingActivity.getter();
              v64 = sub_16B968(&qword_30CFD0);
              v65 = swift_allocObject(v64, 72, 7);
              *(_OWORD *)(v65 + 16) = v75;
              v66 = v81;
              sub_1854C0((uint64_t)v14, v81, type metadata accessor for Achievement);
              v67 = String.init<A>(reflecting:)(v66, v84);
              v69 = v68;
              *(_QWORD *)(v65 + 56) = &type metadata for String;
              *(_QWORD *)(v65 + 64) = sub_1852AC();
              *(_QWORD *)(v65 + 32) = v67;
              *(_QWORD *)(v65 + 40) = v69;
              v8 = v80;
              os_log(_:dso:log:_:_:)(v62, &dword_0);

              swift_bridgeObjectRelease(v65);
              result = sub_185270((uint64_t)v14, type metadata accessor for Achievement);
              v3 = v82;
              goto LABEL_45;
            }
            if (*v8 < 1)
              goto LABEL_44;
          }
          else if ((v8[1] & 1) == 0 && *(double *)v8 <= 0.0)
          {
            goto LABEL_44;
          }
          if (v37 + a1 <= 0.0)
            v39 = 0.001;
          else
            v39 = v37 + a1;
          v76 = static os_log_type_t.debug.getter(EnumCaseMultiPayload);
          sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
          v40 = (void *)static OS_os_log.readingActivity.getter();
          v41 = sub_16B968(&qword_30CFD0);
          v42 = swift_allocObject(v41, 112, 7);
          *(_OWORD *)(v42 + 16) = v70;
          *(_QWORD *)(v42 + 56) = &type metadata for Double;
          *(_QWORD *)(v42 + 64) = &protocol witness table for Double;
          *(double *)(v42 + 32) = v39;
          v43 = v81;
          sub_1854C0((uint64_t)v14, v81, type metadata accessor for Achievement);
          v44 = String.init<A>(reflecting:)(v43, v84);
          v46 = v45;
          *(_QWORD *)(v42 + 96) = &type metadata for String;
          *(_QWORD *)(v42 + 104) = sub_1852AC();
          *(_QWORD *)(v42 + 72) = v44;
          *(_QWORD *)(v42 + 80) = v46;
          os_log(_:dso:log:_:_:)(v76, &dword_0);

          swift_bridgeObjectRelease(v42);
          v47 = swift_allocObject(&unk_293DD0, 24, 7);
          swift_weakInit(v47 + 16, v74);
          sub_1854C0((uint64_t)v14, v43, type metadata accessor for Achievement);
          v48 = v82;
          v49 = *(unsigned __int8 *)(v82 + 80);
          v50 = (v49 + 24) & ~v49;
          v51 = swift_allocObject(&unk_293E18, v50 + v73, v49 | 7);
          *(_QWORD *)(v51 + 16) = v47;
          sub_1856D4(v43, v51 + v50, type metadata accessor for Achievement);
          aBlock[4] = sub_185438;
          v87 = v51;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1871D8;
          aBlock[3] = &unk_293E30;
          v52 = _Block_copy(aBlock);
          v53 = objc_opt_self(NSTimer);
          swift_retain(v47);
          v54 = (void *)v53;
          v3 = v48;
          v8 = v80;
          v55 = objc_msgSend(v54, "timerWithTimeInterval:repeats:block:", 0, v52, v39);
          _Block_release(v52);
          v56 = v87;
          swift_release(v47);
          swift_release(v56);
          v57 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
          objc_msgSend(v57, "addTimer:forMode:", v55, v71);

          swift_beginAccess(v72, aBlock, 33, 0);
          v58 = v55;
          sub_1811DC(&v85, v58);
          v59 = (void *)v85;
          swift_endAccess(aBlock);

          result = sub_185270((uint64_t)v14, type metadata accessor for Achievement);
LABEL_45:
          v17 = v79;
          v24 = v78;
          v25 = v77;
          if (!v28)
            goto LABEL_14;
LABEL_13:
          v32 = __clz(__rbit64(v28));
          v28 &= v28 - 1;
        }
      }
      v36 = v34 + 4;
      if (v36 < v83)
      {
        v35 = *(_QWORD *)(v25 + 8 * v36);
        if (v35)
        {
          v30 = v36;
          goto LABEL_29;
        }
        while (1)
        {
          v30 = v36 + 1;
          if (__OFADD__(v36, 1))
            goto LABEL_51;
          if (v30 >= v83)
            return swift_release(v24);
          v35 = *(_QWORD *)(v25 + 8 * v30);
          ++v36;
          if (v35)
            goto LABEL_29;
        }
      }
    }
    return swift_release(v24);
  }
  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_17D9F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  int EnumCaseMultiPayload;
  unsigned __int8 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  NSObject *v55;
  _QWORD *v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *);
  void *v71;
  uint64_t v72;
  _QWORD aBlock[5];
  uint64_t v74;
  char v75[24];
  char v76[24];

  v71 = a1;
  v5 = type metadata accessor for Achievement(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v71 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v71 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v71 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v71 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v71 - v22;
  a2 += 16;
  swift_beginAccess(a2, v76, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v25 = result;
    sub_1854C0(a3, (uint64_t)v21, type metadata accessor for Achievement);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v5);
    v72 = a3;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v27 = 1;
      }
      else
      {
        v28 = &v21[*(int *)(sub_16B968(&qword_30BCE8) + 48)];
        v29 = type metadata accessor for ReadingHistoryModel.DayKey(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
        v27 = 2;
      }
    }
    else
    {
      v27 = 0;
    }
    v30 = v25 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
    swift_beginAccess(v25 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v75, 0, 0);
    v31 = *(_QWORD *)(v30 + *(int *)(type metadata accessor for ReadingAchievementsController.State(0) + 20));
    if (!*(_QWORD *)(v31 + 16) || (v32 = sub_1880C8(v27), (v33 & 1) == 0))
    {
      v38 = ((uint64_t (*)(void))static os_log_type_t.error.getter)();
      sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
      v39 = (void *)static OS_os_log.readingActivity.getter();
      v40 = sub_16B968(&qword_30CFD0);
      v41 = swift_allocObject(v40, 72, 7);
      *(_OWORD *)(v41 + 16) = xmmword_26BDD0;
      sub_1854C0(v72, (uint64_t)v9, type metadata accessor for Achievement);
      v42 = String.init<A>(reflecting:)(v9, v5);
      v44 = v43;
      *(_QWORD *)(v41 + 56) = &type metadata for String;
      *(_QWORD *)(v41 + 64) = sub_1852AC();
      *(_QWORD *)(v41 + 32) = v42;
      *(_QWORD *)(v41 + 40) = v44;
      os_log(_:dso:log:_:_:)(v38, &dword_0);
      swift_release(v25);

      return swift_bridgeObjectRelease(v41);
    }
    sub_1854C0(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v6 + 72) * v32, (uint64_t)v18, type metadata accessor for Achievement);
    v34 = (uint64_t)v23;
    sub_1856D4((uint64_t)v18, (uint64_t)v23, type metadata accessor for Achievement);
    sub_1854C0((uint64_t)v23, (uint64_t)v15, type metadata accessor for Achievement);
    sub_1854C0((uint64_t)v15, (uint64_t)v12, type metadata accessor for Achievement);
    v35 = swift_getEnumCaseMultiPayload(v12, v5);
    if (v35)
    {
      if (v35 == 1)
      {
        v36 = *(_QWORD *)v12;
        v37 = sub_185270((uint64_t)v15, type metadata accessor for Achievement);
        if (v36 < 1)
          goto LABEL_18;
        goto LABEL_20;
      }
      v45 = &v12[*(int *)(sub_16B968(&qword_30BCE8) + 48)];
      v46 = type metadata accessor for ReadingHistoryModel.DayKey(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
      v37 = sub_185270((uint64_t)v15, type metadata accessor for Achievement);
LABEL_18:
      v47 = static os_log_type_t.error.getter(v37);
      sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
      v48 = (void *)static OS_os_log.readingActivity.getter();
      v49 = sub_16B968(&qword_30CFD0);
      v50 = swift_allocObject(v49, 72, 7);
      *(_OWORD *)(v50 + 16) = xmmword_26BDD0;
      sub_1854C0(v72, (uint64_t)v9, type metadata accessor for Achievement);
      v51 = String.init<A>(reflecting:)(v9, v5);
      v53 = v52;
      *(_QWORD *)(v50 + 56) = &type metadata for String;
      *(_QWORD *)(v50 + 64) = sub_1852AC();
      *(_QWORD *)(v50 + 32) = v51;
      *(_QWORD *)(v50 + 40) = v53;
      os_log(_:dso:log:_:_:)(v47, &dword_0);

      swift_bridgeObjectRelease(v50);
      swift_release(v25);
      return sub_185270((uint64_t)v23, type metadata accessor for Achievement);
    }
    if ((v12[8] & 1) != 0)
    {
      sub_185270((uint64_t)v15, type metadata accessor for Achievement);
    }
    else
    {
      v54 = *(double *)v12;
      v37 = sub_185270((uint64_t)v15, type metadata accessor for Achievement);
      if (v54 <= 0.0)
        goto LABEL_18;
    }
LABEL_20:
    v55 = *(NSObject **)(v25 + 16);
    v56 = (_QWORD *)swift_allocObject(&unk_293E68, 40, 7);
    v57 = v71;
    v56[2] = v25;
    v56[3] = v57;
    v56[4] = v34;
    v58 = swift_allocObject(&unk_293E90, 32, 7);
    *(_QWORD *)(v58 + 16) = sub_1854A4;
    *(_QWORD *)(v58 + 24) = v56;
    aBlock[4] = sub_185BBC;
    v74 = v58;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_175BAC;
    aBlock[3] = &unk_293EA8;
    v59 = _Block_copy(aBlock);
    v60 = v74;
    swift_retain(v25);
    v61 = v57;
    swift_retain(v58);
    swift_release(v60);
    dispatch_sync(v55, v59);
    _Block_release(v59);
    LOBYTE(v55) = swift_isEscapingClosureAtFileLocation(v58, "", 122, 325, 39, 1);
    result = swift_release(v58);
    if ((v55 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v62 = static os_log_type_t.debug.getter(result);
      sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
      v63 = (void *)static OS_os_log.readingActivity.getter();
      v64 = sub_16B968(&qword_30CFD0);
      v65 = swift_allocObject(v64, 72, 7);
      *(_OWORD *)(v65 + 16) = xmmword_26BDD0;
      sub_1854C0(v34, (uint64_t)v9, type metadata accessor for Achievement);
      v66 = String.init<A>(reflecting:)(v9, v5);
      v68 = v67;
      *(_QWORD *)(v65 + 56) = &type metadata for String;
      *(_QWORD *)(v65 + 64) = sub_1852AC();
      *(_QWORD *)(v65 + 32) = v66;
      *(_QWORD *)(v65 + 40) = v68;
      os_log(_:dso:log:_:_:)(v62, &dword_0);

      swift_bridgeObjectRelease(v65);
      v69 = v34;
      v70 = *(void (**)(char *))(v25 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_notifier);
      sub_1854C0(v69, (uint64_t)v9, type metadata accessor for Achievement);
      v70(v9);
      sub_185270((uint64_t)v9, type metadata accessor for Achievement);
      swift_release(v25);
      sub_185270(v69, type metadata accessor for Achievement);
      return swift_release(v56);
    }
  }
  return result;
}

uint64_t sub_17E0BC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];

  v6 = type metadata accessor for Date(0);
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  __chkstk_darwin(v6);
  v36 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_16B968(&qword_30BD20);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Achievement(0);
  v34 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v34 - v15;
  v35 = type metadata accessor for ReadingAchievementsController.State(0);
  v17 = __chkstk_darwin(v35);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v34 - v20;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_timers, v41, 33, 0);
  v22 = (void *)sub_18355C(a2);
  swift_endAccess(v41);

  sub_185270(a3, type metadata accessor for Achievement);
  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 0;
  swift_storeEnumTagMultiPayload(a3, v11, 0);
  v39 = a1;
  v23 = a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v41, 0, 0);
  sub_1854C0(v23, (uint64_t)v21, type metadata accessor for ReadingAchievementsController.State);
  sub_1854C0(a3, (uint64_t)v16, type metadata accessor for Achievement);
  sub_1854C0((uint64_t)v16, (uint64_t)v14, type metadata accessor for Achievement);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v11);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v25 = 1;
    }
    else
    {
      v26 = &v14[*(int *)(sub_16B968(&qword_30BCE8) + 48)];
      v27 = type metadata accessor for ReadingHistoryModel.DayKey(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
      v25 = 2;
    }
  }
  else
  {
    v25 = 0;
  }
  sub_185270((uint64_t)v16, type metadata accessor for Achievement);
  sub_1854C0(a3, (uint64_t)v10, type metadata accessor for Achievement);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v11);
  v28 = v35;
  sub_186CD4((uint64_t)v10, v25);
  v29 = *(void (**)(uint64_t))(v39
                                       + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_currentTimeProvider);
  v30 = *(_QWORD *)(v39 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_currentTimeProvider + 8);
  v31 = swift_retain(v30);
  v32 = v36;
  v29(v31);
  swift_release(v30);
  (*(void (**)(char *, char *, uint64_t))(v37 + 40))(&v21[*(int *)(v28 + 24)], v32, v38);
  sub_1854C0((uint64_t)v21, (uint64_t)v19, type metadata accessor for ReadingAchievementsController.State);
  swift_beginAccess(v23, v40, 33, 0);
  sub_185504((uint64_t)v19, v23);
  swift_endAccess(v40);
  sub_179950();
  sub_185270((uint64_t)v19, type metadata accessor for ReadingAchievementsController.State);
  return sub_185270((uint64_t)v21, type metadata accessor for ReadingAchievementsController.State);
}

uint64_t sub_17E43C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];

  v2 = v1;
  v3 = static os_log_type_t.debug.getter(a1);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v4 = (void *)static OS_os_log.readingActivity.getter();
  v5 = sub_16B968(&qword_30CFD0);
  v6 = swift_allocObject(v5, 72, 7);
  *(_OWORD *)(v6 + 16) = xmmword_26BDD0;
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_timers);
  swift_beginAccess(v7, v15, 1, 0);
  v8 = *v7;
  if ((*v7 & 0xC000000000000001) != 0)
  {
    if (v8 < 0)
      v9 = *v7;
    else
      v9 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v7);
    v10 = __CocoaSet.count.getter(v9);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v10 = *(_QWORD *)(v8 + 16);
  }
  *(_QWORD *)(v6 + 56) = &type metadata for Int;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v6 + 32) = v10;
  os_log(_:dso:log:_:_:)(v3, &dword_0);

  swift_bridgeObjectRelease(v6);
  v11 = *v7;
  v12 = swift_bridgeObjectRetain(*v7);
  sub_17E59C(v12);
  swift_bridgeObjectRelease(v11);
  v13 = *v7;
  *v7 = (uint64_t)&_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease(v13);
}

void sub_17E59C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[5];
  void *v28;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = sub_16F6BC(0, &qword_30BD08, NSTimer_ptr);
    v5 = sub_185334();
    v6 = Set.Iterator.init(_cocoa:)(v27, v3, v4, v5);
    v1 = v27[0];
    v25 = v27[1];
    v7 = v27[2];
    v8 = v27[3];
    v9 = v27[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    v6 = (_QWORD *)swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v24 = v7;
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_32;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v21 >= v13)
      goto LABEL_35;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_35;
      v22 = *(_QWORD *)(v25 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_35;
        v22 = *(_QWORD *)(v25 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_35;
          v22 = *(_QWORD *)(v25 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_35;
            v22 = *(_QWORD *)(v25 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v25 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_18538C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    if (!v20)
      goto LABEL_35;
    while (1)
    {
      objc_msgSend(v20, "invalidate", v24);

      v8 = v16;
      v9 = v14;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v17 = __CocoaSet.Iterator.next()(v6);
      if (v17)
      {
        v18 = v17;
        v26 = v17;
        v19 = sub_16F6BC(0, &qword_30BD08, NSTimer_ptr);
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v28, &v26, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
        v20 = v28;
        swift_unknownObjectRelease(v18);
        v16 = v8;
        v14 = v9;
        if (v20)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_17E84C(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD aBlock[5];
  uint64_t v20;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(NSObject **)(v2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject(&unk_293CE0, v13 + 8, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14 + v11, v8, v5);
  *(_QWORD *)(v14 + v12) = v2;
  *(double *)(v14 + v13) = a2;
  v15 = swift_allocObject(&unk_293D08, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_18470C;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_178DC4;
  v20 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_175BAC;
  aBlock[3] = &unk_293D20;
  v16 = _Block_copy(aBlock);
  v17 = v20;
  swift_retain(v2);
  swift_retain(v15);
  swift_release(v17);
  dispatch_sync(v9, v16);
  _Block_release(v16);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation(v15, "", 122, 355, 20, 1);
  swift_release(v14);
  result = swift_release(v15);
  if ((v9 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_17EA14(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];

  v6 = type metadata accessor for UUID(0);
  v32 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v29 - v11;
  v30 = static os_log_type_t.default.getter(v10);
  sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
  v13 = (void *)static OS_os_log.readingActivity.getter();
  v14 = sub_16B968(&qword_30CFD0);
  v15 = swift_allocObject(v14, 112, 7);
  *(_OWORD *)(v15 + 16) = xmmword_26BF80;
  v31 = a1;
  v16 = UUID.uuidString.getter();
  v18 = v17;
  *(_QWORD *)(v15 + 56) = &type metadata for String;
  v19 = sub_1852AC();
  *(_QWORD *)(v15 + 64) = v19;
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v18;
  v29 = a2;
  v20 = (uint64_t *)(a2 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions);
  swift_beginAccess(a2 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions, v34, 0, 0);
  v21 = *v20;
  v22 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v23 = swift_bridgeObjectRetain(v21);
  v24 = Set.description.getter(v23, v6, v22);
  v26 = v25;
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(v15 + 96) = &type metadata for String;
  *(_QWORD *)(v15 + 104) = v19;
  *(_QWORD *)(v15 + 72) = v24;
  *(_QWORD *)(v15 + 80) = v26;
  os_log(_:dso:log:_:_:)(v30, &dword_0);

  swift_bridgeObjectRelease(v15);
  if (!*(_QWORD *)(*v20 + 16))
    sub_17D204(-a3);
  v27 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v9, v31, v6);
  swift_beginAccess(v20, v33, 33, 0);
  sub_181594((uint64_t)v12, v9);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v6);
  return swift_endAccess(v33);
}

uint64_t sub_17EC5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[5];
  uint64_t v16;

  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = *(NSObject **)(v1 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 24) & ~v7;
  v9 = swift_allocObject(&unk_293D58, v8 + v5, v7 | 7);
  *(_QWORD *)(v9 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v10 = swift_allocObject(&unk_293D80, 32, 7);
  *(_QWORD *)(v10 + 16) = sub_18478C;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_185BBC;
  v16 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_175BAC;
  aBlock[3] = &unk_293D98;
  v11 = _Block_copy(aBlock);
  v12 = v16;
  swift_retain(v1);
  swift_retain(v10);
  swift_release(v12);
  dispatch_sync(v6, v11);
  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v10, "", 122, 369, 20, 1);
  swift_release(v9);
  result = swift_release(v10);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_17EDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  _BYTE v35[24];
  _BYTE v36[24];

  v4 = sub_16B968(&qword_30BD60);
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions);
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions, v36, 0, 0);
  v8 = *v7;
  swift_bridgeObjectRetain(*v7);
  v9 = sub_17F0D8(a2, v8);
  v10 = swift_bridgeObjectRelease(v8);
  if ((v9 & 1) != 0)
  {
    v33 = a1;
    v34 = static os_log_type_t.default.getter(v10);
    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
    v11 = (void *)static OS_os_log.readingActivity.getter();
    v12 = sub_16B968(&qword_30CFD0);
    v13 = swift_allocObject(v12, 112, 7);
    *(_OWORD *)(v13 + 16) = xmmword_26BF80;
    v14 = UUID.uuidString.getter();
    v16 = v15;
    *(_QWORD *)(v13 + 56) = &type metadata for String;
    v17 = sub_1852AC();
    *(_QWORD *)(v13 + 64) = v17;
    *(_QWORD *)(v13 + 32) = v14;
    *(_QWORD *)(v13 + 40) = v16;
    v18 = *v7;
    v19 = type metadata accessor for UUID(0);
    v20 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v21 = swift_bridgeObjectRetain(v18);
    v22 = Set.description.getter(v21, v19, v20);
    v24 = v23;
    swift_bridgeObjectRelease(v18);
    *(_QWORD *)(v13 + 96) = &type metadata for String;
    *(_QWORD *)(v13 + 104) = v17;
    *(_QWORD *)(v13 + 72) = v22;
    *(_QWORD *)(v13 + 80) = v24;
    os_log(_:dso:log:_:_:)(v34, &dword_0);

    swift_bridgeObjectRelease(v13);
    swift_beginAccess(v7, v35, 33, 0);
    sub_183730(a2, (uint64_t)v6);
    sub_1766A8((uint64_t)v6, &qword_30BD60);
    result = swift_endAccess(v35);
    if (!*(_QWORD *)(*v7 + 16))
      return sub_17E43C(result);
  }
  else
  {
    v26 = static os_log_type_t.error.getter(v10);
    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
    v27 = (void *)static OS_os_log.readingActivity.getter();
    v28 = sub_16B968(&qword_30CFD0);
    v29 = swift_allocObject(v28, 72, 7);
    *(_OWORD *)(v29 + 16) = xmmword_26BDD0;
    v30 = UUID.uuidString.getter();
    v32 = v31;
    *(_QWORD *)(v29 + 56) = &type metadata for String;
    *(_QWORD *)(v29 + 64) = sub_1852AC();
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = v32;
    os_log(_:dso:log:_:_:)(v26, &dword_0);

    return swift_bridgeObjectRelease(v29);
  }
  return result;
}

uint64_t sub_17F0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (v7 = *(_QWORD *)(a2 + 40),
        v8 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID), v9 = dispatch thunk of Hashable._rawHashValue(seed:)(v7, v4, v8), v10 = -1 << *(_BYTE *)(a2 + 32), v11 = v9 & ~v10, ((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0))
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v19 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v14(v6, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
      v15 = sub_16BDB8(&qword_30BD70, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v16 = dispatch thunk of static Equatable.== infix(_:_:)(v6, a1, v4, v15);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
      if ((v16 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_17F25C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1847B0(a3, a4);
}

unint64_t sub_17F268(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t);
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t result;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  _QWORD aBlock[5];
  uint64_t v98;
  char v99[24];

  v95 = a2;
  v85 = type metadata accessor for DispatchWorkItemFlags(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v83 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for DispatchQoS(0);
  v81 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v80 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_16B968(&qword_30BD20);
  __chkstk_darwin(v5);
  v74 = (uint64_t *)((char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ReadingAchievementsController.State(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = v7;
  v92 = v7;
  v75 = v8;
  v10 = __chkstk_darwin(v7);
  v77 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v11;
  __chkstk_darwin(v10);
  v79 = (uint64_t)&v73 - v12;
  v13 = type metadata accessor for Achievement(0);
  v88 = *(_QWORD *)(v13 - 8);
  v89 = v13;
  v14 = __chkstk_darwin(v13);
  v87 = (uint64_t *)((char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __chkstk_darwin(v14);
  v86 = (uint64_t)&v73 - v17;
  __chkstk_darwin(v16);
  v90 = (uint64_t)&v73 - v18;
  v19 = type metadata accessor for Calendar(0);
  v93 = *(_QWORD *)(v19 - 8);
  v94 = v19;
  __chkstk_darwin(v19);
  v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Date(0);
  v23 = *(_QWORD *)(v22 - 8);
  v91 = v22;
  __chkstk_darwin(v22);
  v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = a1;
  v26 = a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v99, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, v26 + *(int *)(v9 + 24), v22);
  v27 = sub_16B968(&qword_30B820);
  v28 = type metadata accessor for Calendar.Component(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(_QWORD *)(v29 + 72);
  v31 = *(unsigned __int8 *)(v29 + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = swift_allocObject(v27, v32 + 3 * v30, v31 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_26BF90;
  v34 = v33 + v32;
  v35 = *(void (**)(uint64_t, _QWORD, uint64_t))(v29 + 104);
  v35(v34, enum case for Calendar.Component.year(_:), v28);
  v35(v34 + v30, enum case for Calendar.Component.month(_:), v28);
  v35(v34 + 2 * v30, enum case for Calendar.Component.day(_:), v28);
  v36 = sub_176378(v33);
  swift_setDeallocating(v33);
  swift_arrayDestroy(v34, 3, v28);
  v37 = swift_deallocClassInstance(v33, 32, 7);
  static Calendar.gregorian.getter(v37);
  LOBYTE(v28) = Date.isEqual(to:components:calendar:)(v95, v36, v21);
  v38 = v36;
  v39 = v26;
  swift_bridgeObjectRelease(v38);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v21, v94);
  v40 = v92;
  result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v91);
  if ((v28 & 1) != 0)
  {
    v42 = *(_QWORD *)(v39 + *(int *)(v40 + 20));
    if (*(_QWORD *)(v42 + 16))
    {
      result = sub_1880C8(1u);
      if ((v43 & 1) != 0)
      {
        v44 = v88;
        v45 = v86;
        sub_1854C0(*(_QWORD *)(v42 + 56) + *(_QWORD *)(v88 + 72) * result, v86, type metadata accessor for Achievement);
        v46 = v90;
        sub_1856D4(v45, v90, type metadata accessor for Achievement);
        v47 = v87;
        sub_1854C0(v46, (uint64_t)v87, type metadata accessor for Achievement);
        v48 = v89;
        if (swift_getEnumCaseMultiPayload(v47, v89) == 1)
        {
          if (*v47 == 1)
          {
            v49 = v79;
            sub_1854C0(v39, v79, type metadata accessor for ReadingAchievementsController.State);
            v50 = swift_allocBox(v40);
            v52 = v51;
            sub_1854C0(v49, v51, type metadata accessor for ReadingAchievementsController.State);
            v53 = (uint64_t)v74;
            *v74 = 0;
            swift_storeEnumTagMultiPayload(v53, v48, 1);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v53, 0, 1, v48);
            sub_186CD4(v53, 1);
            v54 = v77;
            sub_1854C0(v52, v77, type metadata accessor for ReadingAchievementsController.State);
            swift_beginAccess(v39, aBlock, 33, 0);
            sub_185504(v54, v39);
            swift_endAccess(aBlock);
            v55 = v78;
            sub_179950();
            sub_185270(v54, type metadata accessor for ReadingAchievementsController.State);
            v95 = *(_QWORD *)(v55 + 24);
            v56 = swift_allocObject(&unk_293DD0, 24, 7);
            swift_weakInit(v56 + 16, v55);
            sub_1854C0(v49, v54, type metadata accessor for ReadingAchievementsController.State);
            v57 = *(unsigned __int8 *)(v75 + 80);
            v58 = (v57 + 24) & ~v57;
            v59 = (v76 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
            v60 = swift_allocObject(&unk_294070, v59 + 8, v57 | 7);
            *(_QWORD *)(v60 + 16) = v56;
            sub_1856D4(v54, v60 + v58, type metadata accessor for ReadingAchievementsController.State);
            v61 = v50;
            *(_QWORD *)(v60 + v59) = v50;
            aBlock[4] = sub_1857C8;
            v98 = v60;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_172474;
            aBlock[3] = &unk_294088;
            v62 = _Block_copy(aBlock);
            swift_retain(v56);
            v63 = swift_retain(v50);
            v64 = v80;
            static DispatchQoS.unspecified.getter(v63);
            v96 = &_swiftEmptyArrayStorage;
            v65 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
            v66 = sub_16B968((uint64_t *)&unk_30C330);
            v67 = sub_1766E4((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330);
            v68 = v83;
            v69 = v66;
            v70 = v85;
            dispatch thunk of SetAlgebra.init<A>(_:)(&v96, v69, v67, v85, v65);
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v64, v68, v62);
            _Block_release(v62);
            (*(void (**)(char *, uint64_t))(v84 + 8))(v68, v70);
            (*(void (**)(char *, uint64_t))(v81 + 8))(v64, v82);
            sub_185270(v49, type metadata accessor for ReadingAchievementsController.State);
            sub_185270(v90, type metadata accessor for Achievement);
            v71 = v98;
            swift_release(v61);
            swift_release(v56);
            return swift_release(v71);
          }
          v72 = v46;
        }
        else
        {
          sub_185270(v46, type metadata accessor for Achievement);
          v72 = (uint64_t)v47;
        }
        return sub_185270(v72, type metadata accessor for Achievement);
      }
    }
  }
  return result;
}

uint64_t sub_17F9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _BYTE v12[24];
  _BYTE v13[24];

  v6 = type metadata accessor for ReadingAchievementsController.State(0);
  __chkstk_darwin(v6);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  v9 = swift_projectBox(a3);
  swift_beginAccess(a1, v13, 0, 0);
  result = swift_weakLoadStrong(a1);
  if (result)
  {
    v11 = result;
    swift_beginAccess(v9, v12, 0, 0);
    sub_1854C0(v9, (uint64_t)v8, type metadata accessor for ReadingAchievementsController.State);
    sub_17FAF0(a2, (uint64_t)v8, 0);
    swift_release(v11);
    return sub_185270((uint64_t)v8, type metadata accessor for ReadingAchievementsController.State);
  }
  return result;
}

uint64_t sub_17FAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  int64_t v75;
  unint64_t v76;
  int64_t v77;
  uint64_t v78;
  int v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int EnumCaseMultiPayload;
  _BOOL4 v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  int v104;
  uint64_t (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  unint64_t v114;
  _BOOL4 v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(char *, char *, uint64_t);
  char v126;
  uint64_t v127;
  uint64_t *v128;
  char *v129;
  char v130;
  void (*v131)(char *, uint64_t);
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  _BOOL4 v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _BOOL4 v159;
  uint64_t v160;
  uint64_t v161;
  BOOL v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  double *v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char v175;
  char v176;
  void *v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  double *v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  __int128 v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  __int128 v202;
  void (**v203)(char *);
  uint64_t v204;
  uint64_t (*v205)(char *, char *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  char *v212;
  uint64_t *v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int64_t v222;
  uint64_t v223;
  uint64_t v224;
  char v225;

  v210 = a3;
  v5 = type metadata accessor for ReadingHistoryModel.DayKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v185 = (char *)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v186 = (char *)&v184 - v10;
  __chkstk_darwin(v9);
  v212 = (char *)&v184 - v11;
  v223 = type metadata accessor for Achievement(0);
  v221 = *(_QWORD *)(v223 - 8);
  v12 = __chkstk_darwin(v223);
  v188 = (uint64_t *)((char *)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __chkstk_darwin(v12);
  v187 = (uint64_t)&v184 - v15;
  v16 = __chkstk_darwin(v14);
  v199 = (char *)&v184 - v17;
  v18 = __chkstk_darwin(v16);
  v190 = (uint64_t *)((char *)&v184 - v19);
  v20 = __chkstk_darwin(v18);
  v189 = (uint64_t)&v184 - v21;
  v22 = __chkstk_darwin(v20);
  v191 = (uint64_t)&v184 - v23;
  v24 = __chkstk_darwin(v22);
  v214 = (uint64_t *)((char *)&v184 - v25);
  v26 = __chkstk_darwin(v24);
  v217 = (uint64_t)&v184 - v27;
  v28 = __chkstk_darwin(v26);
  v196 = (uint64_t)&v184 - v29;
  v30 = __chkstk_darwin(v28);
  v204 = (uint64_t)&v184 - v31;
  v32 = __chkstk_darwin(v30);
  v213 = (uint64_t *)((char *)&v184 - v33);
  v34 = __chkstk_darwin(v32);
  v209 = (uint64_t)&v184 - v35;
  v36 = __chkstk_darwin(v34);
  v192 = (double *)((char *)&v184 - v37);
  v38 = __chkstk_darwin(v36);
  v195 = (uint64_t)&v184 - v39;
  v40 = __chkstk_darwin(v38);
  v208 = (char *)&v184 - v41;
  v42 = __chkstk_darwin(v40);
  v201 = (uint64_t)&v184 - v43;
  v44 = __chkstk_darwin(v42);
  v200 = (uint64_t)&v184 - v45;
  v46 = __chkstk_darwin(v44);
  v48 = (char *)&v184 - v47;
  v49 = __chkstk_darwin(v46);
  v220 = (uint64_t)&v184 - v50;
  __chkstk_darwin(v49);
  v52 = (char *)&v184 - v51;
  v53 = type metadata accessor for ReadingAchievementsController.State(0);
  v54 = *(int *)(v53 + 24);
  v55 = a2 + v54;
  v56 = a1 + v54;
  v57 = type metadata accessor for Date(0);
  v58 = sub_16BDB8(&qword_30B818, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  result = dispatch thunk of static Comparable.< infix(_:_:)(v55, v56, v57, v58);
  if ((result & 1) != 0)
    return result;
  v60 = *(int *)(v53 + 20);
  v61 = *(_QWORD *)(a2 + v60);
  v216 = swift_bridgeObjectRetain(*(_QWORD *)(a1 + v60));
  v62 = sub_180C0C(v216);
  v63 = swift_bridgeObjectRetain(v61);
  result = sub_180D80(v63, v62);
  v64 = result;
  v65 = 0;
  v66 = *(_QWORD *)(result + 56);
  v224 = result + 56;
  v67 = 1 << *(_BYTE *)(result + 32);
  v68 = -1;
  if (v67 < 64)
    v68 = ~(-1 << v67);
  v69 = v68 & v66;
  v203 = (void (**)(char *))(v222 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_notifier);
  v215 = v5;
  v70 = (unint64_t)(v67 + 63) >> 6;
  v198 = xmmword_26BFA0;
  v202 = xmmword_26BDD0;
  v218 = v6;
  v219 = result;
  v211 = (uint64_t *)v48;
  v197 = v52;
  v222 = v70;
  while (1)
  {
    while (v69)
    {
      v73 = __clz(__rbit64(v69));
      v69 &= v69 - 1;
      v74 = v73 | (v65 << 6);
      if (*(_QWORD *)(v61 + 16))
      {
LABEL_25:
        v78 = *(_QWORD *)(v64 + 48);
        v79 = *(unsigned __int8 *)(v78 + v74);
        result = sub_1880C8(*(_BYTE *)(v78 + v74));
        if ((v80 & 1) != 0)
        {
          v81 = v220;
          v82 = *(_QWORD *)(v221 + 72);
          sub_1854C0(*(_QWORD *)(v61 + 56) + v82 * result, v220, type metadata accessor for Achievement);
          sub_1856D4(v81, (uint64_t)v52, type metadata accessor for Achievement);
          if (v79)
          {
            if (v79 == 1)
            {
              v71 = v213;
              sub_1854C0((uint64_t)v52, (uint64_t)v213, type metadata accessor for Achievement);
              if (swift_getEnumCaseMultiPayload(v71, v223) != 1)
                goto LABEL_6;
              v83 = v216;
              if (*(_QWORD *)(v216 + 16) && (v84 = sub_1880C8(1u), (v85 & 1) != 0))
              {
                v86 = v204;
                sub_1854C0(*(_QWORD *)(v83 + 56) + v84 * v82, v204, type metadata accessor for Achievement);
                v87 = v86;
                v88 = v196;
                sub_1854C0(v87, v196, type metadata accessor for Achievement);
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v88, v223);
                if (EnumCaseMultiPayload)
                {
                  if (EnumCaseMultiPayload == 1)
                  {
                    v90 = *(_QWORD *)v88 < 1;
                  }
                  else
                  {
                    v134 = sub_16B968(&qword_30BCE8);
                    (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v88 + *(int *)(v134 + 48), v215);
                    v90 = 1;
                  }
                }
                else
                {
                  v90 = (*(_BYTE *)(v88 + 8) & 1) == 0 && *(double *)v88 <= 0.0;
                }
                v70 = v222;
                sub_185270(v204, type metadata accessor for Achievement);
              }
              else
              {
                v90 = 0;
                v70 = v222;
              }
              v136 = v217;
              sub_1854C0((uint64_t)v52, v217, type metadata accessor for Achievement);
              v137 = swift_getEnumCaseMultiPayload(v136, v223);
              if (v137)
              {
                if (v137 != 1)
                {
                  v139 = sub_16B968(&qword_30BCE8);
                  (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v217 + *(int *)(v139 + 48), v215);
                  v72 = (uint64_t)v52;
                  if (v90)
                    goto LABEL_7;
                  goto LABEL_73;
                }
                v138 = *(_QWORD *)v217 < 1;
              }
              else
              {
                v72 = (uint64_t)v52;
                if ((*(_BYTE *)(v217 + 8) & 1) != 0)
                  goto LABEL_7;
                v138 = *(double *)v217 <= 0.0;
              }
              v72 = (uint64_t)v52;
              if (v90 || !v138)
                goto LABEL_7;
LABEL_73:
              v140 = static os_log_type_t.debug.getter(v72);
              sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
              v141 = (void *)static OS_os_log.readingActivity.getter();
              v142 = sub_16B968(&qword_30CFD0);
              v143 = swift_allocObject(v142, 72, 7);
              *(_OWORD *)(v143 + 16) = v202;
              v144 = v209;
              sub_1854C0((uint64_t)v52, v209, type metadata accessor for Achievement);
              v145 = String.init<A>(reflecting:)(v144, v223);
              v147 = v146;
              *(_QWORD *)(v143 + 56) = &type metadata for String;
              *(_QWORD *)(v143 + 64) = sub_1852AC();
              *(_QWORD *)(v143 + 32) = v145;
              *(_QWORD *)(v143 + 40) = v147;
              v70 = v222;
              v148 = v140;
LABEL_105:
              os_log(_:dso:log:_:_:)(v148, &dword_0);

              swift_bridgeObjectRelease(v143);
              (*v203)(v52);
              v72 = (uint64_t)v52;
              goto LABEL_7;
            }
            v71 = v214;
            sub_1854C0((uint64_t)v52, (uint64_t)v214, type metadata accessor for Achievement);
            if (swift_getEnumCaseMultiPayload(v71, v223) != 2)
            {
LABEL_6:
              sub_185270((uint64_t)v52, type metadata accessor for Achievement);
              v72 = (uint64_t)v71;
              v70 = v222;
              goto LABEL_7;
            }
            v91 = v218;
            v92 = *v71;
            v207 = sub_16B968(&qword_30BCE8);
            v93 = (char *)v71 + *(int *)(v207 + 48);
            v94 = v215;
            v95 = v212;
            v96 = *(uint64_t (**)(char *, char *, uint64_t))(v91 + 32);
            v97 = v96(v212, v93, v215);
            v206 = v92;
            if (v92 < 2)
            {
              (*(void (**)(char *, uint64_t))(v91 + 8))(v95, v94);
              goto LABEL_78;
            }
            v98 = v216;
            if (*(_QWORD *)(v216 + 16) && (v97 = sub_1880C8(2u), (v99 & 1) != 0))
            {
              v100 = v189;
              sub_1854C0(*(_QWORD *)(v98 + 56) + v97 * v82, v189, type metadata accessor for Achievement);
              v101 = v100;
              v102 = v191;
              sub_1856D4(v101, v191, type metadata accessor for Achievement);
              v103 = v190;
              sub_1854C0(v102, (uint64_t)v190, type metadata accessor for Achievement);
              v104 = swift_getEnumCaseMultiPayload(v103, v223);
              v105 = v96;
              if (v104 == 2)
              {
                v106 = *v103;
                v107 = v207;
                v108 = (char *)v103 + *(int *)(v207 + 48);
                v109 = v186;
                v110 = v215;
                v205 = v105;
                v105(v186, v108, v215);
                LODWORD(v194) = ReadingHistoryModel.DayKey.isTheDayBefore(_:)(v212);
                v111 = v109;
                v112 = v110;
                v113 = *(void (**)(char *, uint64_t))(v218 + 8);
                v113(v111, v112);
                v97 = sub_185270(v191, type metadata accessor for Achievement);
                if ((v194 & 1) != 0)
                {
                  v113(v212, v112);
LABEL_78:
                  v72 = (uint64_t)v52;
                  v70 = v222;
                  goto LABEL_7;
                }
                v123 = v210;
                v124 = (uint64_t)v199;
                v125 = v205;
              }
              else
              {
                v125 = v96;
                sub_185270(v102, type metadata accessor for Achievement);
                v97 = sub_185270((uint64_t)v103, type metadata accessor for Achievement);
                v106 = 0;
                v123 = v210;
                v107 = v207;
                v124 = (uint64_t)v199;
              }
            }
            else
            {
              v106 = 0;
              v123 = v210;
              v124 = (uint64_t)v199;
              v125 = v96;
              v107 = v207;
            }
            if (v123)
            {
              if (*(_QWORD *)(v123 + 16))
              {
                v97 = sub_1880C8(2u);
                if ((v126 & 1) != 0)
                {
                  v205 = v125;
                  v127 = v187;
                  sub_1854C0(*(_QWORD *)(v210 + 56) + v97 * v82, v187, type metadata accessor for Achievement);
                  sub_1856D4(v127, v124, type metadata accessor for Achievement);
                  v128 = v188;
                  sub_1854C0(v124, (uint64_t)v188, type metadata accessor for Achievement);
                  if (swift_getEnumCaseMultiPayload(v128, v223) == 2)
                  {
                    v207 = *v128;
                    v129 = v185;
                    v205(v185, (char *)v128 + *(int *)(v107 + 48), v215);
                    v130 = ReadingHistoryModel.DayKey.isTheDayBefore(_:)(v212);
                    v131 = *(void (**)(char *, uint64_t))(v218 + 8);
                    v132 = v129;
                    v133 = v215;
                    v131(v132, v215);
                    v97 = sub_185270(v124, type metadata accessor for Achievement);
                    if ((v130 & 1) != 0)
                    {
                      v131(v212, v133);
                      goto LABEL_78;
                    }
                    if (v106 >= v206 || v207 >= v206)
                    {
LABEL_77:
                      (*(void (**)(char *, uint64_t))(v218 + 8))(v212, v133);
                      goto LABEL_78;
                    }
LABEL_76:
                    v149 = static os_log_type_t.default.getter(v97);
                    sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
                    v150 = (void *)static OS_os_log.readingActivity.getter();
                    v151 = sub_16B968(&qword_30CFD0);
                    v152 = swift_allocObject(v151, 72, 7);
                    *(_OWORD *)(v152 + 16) = v202;
                    v153 = v133;
                    v154 = v209;
                    sub_1854C0((uint64_t)v52, v209, type metadata accessor for Achievement);
                    v155 = String.init<A>(reflecting:)(v154, v223);
                    v157 = v156;
                    *(_QWORD *)(v152 + 56) = &type metadata for String;
                    *(_QWORD *)(v152 + 64) = sub_1852AC();
                    *(_QWORD *)(v152 + 32) = v155;
                    *(_QWORD *)(v152 + 40) = v157;
                    v133 = v153;
                    os_log(_:dso:log:_:_:)(v149, &dword_0);

                    swift_bridgeObjectRelease(v152);
                    (*v203)(v52);
                    goto LABEL_77;
                  }
                  sub_185270(v124, type metadata accessor for Achievement);
                  v97 = sub_185270((uint64_t)v128, type metadata accessor for Achievement);
                }
              }
            }
            v133 = v215;
            if (v106 >= v206)
              goto LABEL_77;
            goto LABEL_76;
          }
          v71 = v211;
          sub_1854C0((uint64_t)v52, (uint64_t)v211, type metadata accessor for Achievement);
          if (swift_getEnumCaseMultiPayload(v71, v223))
            goto LABEL_6;
          if (*(_QWORD *)(v216 + 16))
          {
            v114 = sub_1880C8(0);
            v115 = 0;
            v116 = (uint64_t)v208;
            v117 = v218;
            if ((v118 & 1) != 0)
            {
              v119 = v200;
              sub_1854C0(*(_QWORD *)(v216 + 56) + v114 * v82, v200, type metadata accessor for Achievement);
              v120 = v119;
              v121 = v201;
              sub_1854C0(v120, v201, type metadata accessor for Achievement);
              v122 = swift_getEnumCaseMultiPayload(v121, v223);
              if (v122)
              {
                if (v122 == 1)
                {
                  v115 = *(_QWORD *)v201 < 1;
                }
                else
                {
                  v135 = sub_16B968(&qword_30BCE8);
                  (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v201 + *(int *)(v135 + 48), v215);
                  v115 = 1;
                }
              }
              else
              {
                v115 = (*(_BYTE *)(v201 + 8) & 1) == 0 && *(double *)v201 <= 0.0;
              }
              sub_185270(v200, type metadata accessor for Achievement);
            }
          }
          else
          {
            v115 = 0;
            v116 = (uint64_t)v208;
            v117 = v218;
          }
          sub_1854C0((uint64_t)v52, v116, type metadata accessor for Achievement);
          v158 = swift_getEnumCaseMultiPayload(v116, v223);
          LODWORD(v207) = v115;
          if ((_DWORD)v158)
          {
            if ((_DWORD)v158 == 1)
            {
              v159 = *(_QWORD *)v116 < 1;
            }
            else
            {
              v161 = sub_16B968(&qword_30BCE8);
              v158 = (*(uint64_t (**)(uint64_t, uint64_t))(v117 + 8))(v116 + *(int *)(v161 + 48), v215);
              v159 = 1;
            }
            LODWORD(v205) = v159;
            v160 = v210;
            if (!v210)
            {
LABEL_96:
              v162 = 0;
              goto LABEL_102;
            }
          }
          else
          {
            v160 = v210;
            if ((*(_BYTE *)(v116 + 8) & 1) != 0)
            {
              LODWORD(v205) = 0;
              if (!v210)
                goto LABEL_96;
            }
            else
            {
              LODWORD(v205) = *(double *)v116 <= 0.0;
              if (!v210)
                goto LABEL_96;
            }
          }
          if (!*(_QWORD *)(v160 + 16))
            goto LABEL_96;
          v158 = sub_1880C8(0);
          v162 = 0;
          if ((v163 & 1) != 0)
          {
            v164 = v195;
            sub_1854C0(*(_QWORD *)(v210 + 56) + v158 * v82, v195, type metadata accessor for Achievement);
            v165 = v164;
            v166 = v192;
            sub_1854C0(v165, (uint64_t)v192, type metadata accessor for Achievement);
            v167 = swift_getEnumCaseMultiPayload(v166, v223);
            if (v167)
            {
              v168 = v215;
              v169 = v218;
              if (v167 == 1)
              {
                v162 = *(_QWORD *)v192 < 1;
              }
              else
              {
                v170 = sub_16B968(&qword_30BCE8);
                (*(void (**)(uint64_t, uint64_t))(v169 + 8))((uint64_t)v192 + *(int *)(v170 + 48), v168);
                v162 = 1;
              }
            }
            else
            {
              v162 = ((_BYTE)v166[1] & 1) == 0 && *v166 <= 0.0;
            }
            v158 = sub_185270(v195, type metadata accessor for Achievement);
          }
LABEL_102:
          LODWORD(v206) = static os_log_type_t.info.getter(v158);
          v194 = sub_16B968(&qword_30CFD0);
          v171 = swift_allocObject(v194, 192, 7);
          *(_OWORD *)(v171 + 16) = v198;
          v225 = 0;
          v172 = String.init<A>(reflecting:)(&v225, &type metadata for Achievement.Key);
          v174 = v173;
          *(_QWORD *)(v171 + 56) = &type metadata for String;
          v193 = sub_1852AC();
          *(_QWORD *)(v171 + 64) = v193;
          *(_QWORD *)(v171 + 32) = v172;
          *(_QWORD *)(v171 + 40) = v174;
          *(_QWORD *)(v171 + 96) = &type metadata for Bool;
          *(_QWORD *)(v171 + 104) = &protocol witness table for Bool;
          v175 = v207;
          *(_BYTE *)(v171 + 72) = v207;
          *(_QWORD *)(v171 + 136) = &type metadata for Bool;
          *(_QWORD *)(v171 + 144) = &protocol witness table for Bool;
          v176 = (char)v205;
          *(_BYTE *)(v171 + 112) = (_BYTE)v205;
          *(_QWORD *)(v171 + 176) = &type metadata for Bool;
          *(_QWORD *)(v171 + 184) = &protocol witness table for Bool;
          *(_BYTE *)(v171 + 152) = v162;
          sub_16F6BC(0, (unint64_t *)&qword_30CD90, OS_os_log_ptr);
          v177 = (void *)static OS_os_log.default.getter();
          os_log(_:dso:log:_:_:)(v206, &dword_0);
          swift_bridgeObjectRelease(v171);

          v178 = v175 | v176 ^ 1;
          v52 = v197;
          v72 = (uint64_t)v197;
          v70 = v222;
          if ((v178 & 1) == 0)
          {
            v72 = (uint64_t)v197;
            if (!v162)
            {
              v179 = static os_log_type_t.debug.getter(v197);
              v141 = (void *)static OS_os_log.readingActivity.getter();
              v143 = swift_allocObject(v194, 72, 7);
              *(_OWORD *)(v143 + 16) = v202;
              v180 = v209;
              sub_1854C0((uint64_t)v52, v209, type metadata accessor for Achievement);
              v181 = String.init<A>(reflecting:)(v180, v223);
              v182 = v193;
              *(_QWORD *)(v143 + 56) = &type metadata for String;
              *(_QWORD *)(v143 + 64) = v182;
              *(_QWORD *)(v143 + 32) = v181;
              *(_QWORD *)(v143 + 40) = v183;
              v148 = v179;
              v70 = v222;
              goto LABEL_105;
            }
          }
LABEL_7:
          result = sub_185270(v72, type metadata accessor for Achievement);
          v64 = v219;
        }
      }
    }
    v75 = v65 + 1;
    if (__OFADD__(v65, 1))
    {
      __break(1u);
      goto LABEL_112;
    }
    if (v75 >= v70)
      return swift_release(v64);
    v76 = *(_QWORD *)(v224 + 8 * v75);
    ++v65;
    if (!v76)
    {
      v65 = v75 + 1;
      if (v75 + 1 >= v70)
        return swift_release(v64);
      v76 = *(_QWORD *)(v224 + 8 * v65);
      if (!v76)
      {
        v65 = v75 + 2;
        if (v75 + 2 >= v70)
          return swift_release(v64);
        v76 = *(_QWORD *)(v224 + 8 * v65);
        if (!v76)
          break;
      }
    }
LABEL_24:
    v69 = (v76 - 1) & v76;
    v74 = __clz(__rbit64(v76)) + (v65 << 6);
    if (*(_QWORD *)(v61 + 16))
      goto LABEL_25;
  }
  v77 = v75 + 3;
  if (v77 >= v70)
    return swift_release(v64);
  v76 = *(_QWORD *)(v224 + 8 * v77);
  if (v76)
  {
    v65 = v77;
    goto LABEL_24;
  }
  while (1)
  {
    v65 = v77 + 1;
    if (__OFADD__(v77, 1))
      break;
    if (v65 >= v70)
      return swift_release(v64);
    v76 = *(_QWORD *)(v224 + 8 * v65);
    ++v77;
    if (v76)
      goto LABEL_24;
  }
LABEL_112:
  __break(1u);
  return result;
}

uint64_t sub_180C0C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  char v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = sub_1852F0();
  result = Set.init(minimumCapacity:)(v2, &type metadata for Achievement.Key, v3);
  v5 = 0;
  v17 = result;
  v6 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        goto LABEL_23;
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_23;
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
        {
          v5 = v13 + 3;
          if (v13 + 3 >= v10)
            goto LABEL_23;
          v14 = *(_QWORD *)(v6 + 8 * v5);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    result = sub_181478(&v16, *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v12));
  }
  v15 = v13 + 4;
  if (v15 >= v10)
  {
LABEL_23:
    swift_release(a1);
    return v17;
  }
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      goto LABEL_23;
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_180D80(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_181478(&v14, *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release(v2);
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t ReadingAchievementsController.deinit()
{
  uint64_t v0;

  sub_185270(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, type metadata accessor for ReadingAchievementsController.State);
  sub_184A38((_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_dataSource));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_notifier + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_pendingReadingTimeProvider + 8));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_currentTimeProvider + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_timers));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_isDataLoadedObservable));
  return v0;
}

uint64_t ReadingAchievementsController.__deallocating_deinit()
{
  uint64_t v0;

  ReadingAchievementsController.deinit();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_180FB4(uint64_t a1, double a2)
{
  return sub_17E84C(a1, a2);
}

uint64_t sub_180FD4(uint64_t a1)
{
  return sub_17EC5C(a1);
}

uint64_t sub_180FF4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_1847B0(a3, a4);
}

uint64_t ReadingAchievementsController.currentAchievements()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v1 = sub_16B968(&qword_30BA80);
  OS_dispatch_queue.sync<A>(execute:)(sub_184A58, v0, v1);
  return v3;
}

uint64_t sub_181078@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  swift_beginAccess(a1 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state, v6, 0, 0);
  v4 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for ReadingAchievementsController.State(0) + 20));
  *a2 = v4;
  return swift_bridgeObjectRetain(v4);
}

Swift::Void __swiftcall ReadingAchievementsController.handleSignificantDateChange()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject(&unk_293DD0, 24, 7);
  swift_weakInit(v0 + 16);
  v1 = sub_16B968(&qword_30BA88);
  OS_dispatch_queue.sync<A>(execute:)(sub_184A94, v0, v1);
  swift_release(v0);
}

uint64_t sub_181168@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  result = swift_weakLoadStrong(v3);
  v5 = result;
  if (result)
  {
    sub_17AAD0();
    result = swift_release(v5);
  }
  *a2 = v5 == 0;
  return result;
}

uint64_t sub_1811DC(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = sub_16F6BC(0, &qword_30BD08, NSTimer_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_1817F0(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_1819E4(v29);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_182294((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      sub_16F6BC(0, &qword_30BD08, NSTimer_ptr);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_182314((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_181478(_BYTE *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD v14[9];

  v5 = *v2;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v2 + 40));
  Hasher._combine(_:)(a2);
  v6 = Hasher._finalize()();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v14[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_182498(a2, v8, isUniquelyReferenced_nonNull_native);
    v13 = *v2;
    *v2 = v14[0];
    swift_bridgeObjectRelease(v13);
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  result = 0;
  LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_181594(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  char *v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_16BDB8(&qword_30BD68, v12, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v10);
  v35 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a1;
    v33 = ~v15;
    v34 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_16BDB8(&qword_30BD70, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v35, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v34 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v33;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v31;
        a1 = v32;
        v26 = v34;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v21);
    v25(v35, v6);
    v22(v32, *(_QWORD *)(*v31 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v35;
    v20(v9, v35, v6);
    v36 = *v3;
    *v3 = 0x8000000000000000;
    sub_1825E4((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v36;
    swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a1, v28, v6);
    return 1;
  }
}

Swift::Int sub_1817F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_16B968(&qword_30BD18);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()(v5);
    if (v6)
    {
      v7 = v6;
      v8 = sub_16F6BC(0, &qword_30BD08, NSTimer_ptr);
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_1819E4(v16 + 1);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()(result);
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_1819E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_16B968(&qword_30BD18);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain(v3);
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_36;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_36;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_36;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v14 >= v11)
                    goto LABEL_36;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_26:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v17);
      result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

Swift::Int sub_181C80(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v3;
  uint64_t v4;
  Swift::Int result;
  Swift::Int v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  Swift::Int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int *v29;
  uint64_t v30[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_16B968(&qword_30BCF8);
  result = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = result;
  if (*(_QWORD *)(v3 + 16))
  {
    v29 = v2;
    v7 = 0;
    v8 = (_QWORD *)(v3 + 56);
    v9 = 1 << *(_BYTE *)(v3 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v3 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_36;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_36;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_36;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_36:
                v28 = 1 << *(_BYTE *)(v3 + 32);
                if (v28 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v28;
                v2 = v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v7 >= v12)
                    goto LABEL_36;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_26:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
      Hasher.init(_seed:)(v30, *(_QWORD *)(v6 + 40));
      Hasher._combine(_:)(v20);
      result = Hasher._finalize()();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

uint64_t sub_181F28(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v40 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_16B968(&qword_30BD78);
  v8 = static _SetStorage.resize(original:capacity:move:)(v7, a1, 1);
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_39;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 56);
  v39 = (_QWORD *)(v7 + 56);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v37 = v2;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 56;
  result = swift_retain(v7);
  v16 = 0;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v19 = v18 | (v16 << 6);
      goto LABEL_26;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return result;
    }
    if (v20 >= v38)
      goto LABEL_35;
    v21 = v39[v20];
    ++v16;
    if (!v21)
    {
      v16 = v20 + 1;
      if (v20 + 1 >= v38)
        goto LABEL_35;
      v21 = v39[v16];
      if (!v21)
      {
        v16 = v20 + 2;
        if (v20 + 2 >= v38)
          goto LABEL_35;
        v21 = v39[v16];
        if (!v21)
          break;
      }
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_26:
    v23 = v7;
    v24 = *(_QWORD *)(v7 + 48);
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
    v26(v6, v24 + v25 * v19, v4);
    v27 = *(_QWORD *)(v9 + 40);
    v28 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v27, v4, v28);
    v29 = -1 << *(_BYTE *)(v9 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v14 + 8 * v31);
      }
      while (v35 == -1);
      v17 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v9 + 48) + v17 * v25, v6, v4);
    ++*(_QWORD *)(v9 + 16);
    v7 = v23;
  }
  v22 = v20 + 3;
  if (v22 < v38)
  {
    v21 = v39[v22];
    if (!v21)
    {
      while (1)
      {
        v16 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_41;
        if (v16 >= v38)
          goto LABEL_35;
        v21 = v39[v16];
        ++v22;
        if (v21)
          goto LABEL_25;
      }
    }
    v16 = v22;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v7);
  v2 = v37;
  v36 = 1 << *(_BYTE *)(v7 + 32);
  if (v36 > 63)
    bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v39 = -1 << v36;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_39:
  result = swift_release(v7);
  *v2 = v9;
  return result;
}

unint64_t sub_182294(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_182314(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1819E4(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_1827E8();
      goto LABEL_14;
    }
    sub_182D44(v9);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = sub_16F6BC(0, &qword_30BD08, NSTimer_ptr);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

uint64_t sub_182498(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  Swift::UInt v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  _QWORD v17[9];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_181C80(v8);
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_182990();
      goto LABEL_14;
    }
    sub_182FBC(v8);
  }
  v9 = *v3;
  Hasher.init(_seed:)(v17, *(_QWORD *)(*v3 + 40));
  Hasher._combine(_:)(v5);
  result = Hasher._finalize()();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(v9 + 48);
    if (*(unsigned __int8 *)(v11 + a2) == (_DWORD)v5)
    {
LABEL_13:
      result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Achievement.Key);
      __break(1u);
    }
    else
    {
      v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(unsigned __int8 *)(v11 + a2) == (_DWORD)v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v13 + 48) + a2) = v5;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
  return result;
}

uint64_t sub_1825E4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_181F28(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_182B20();
      goto LABEL_12;
    }
    sub_183234(v12);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_16BDB8(&qword_30BD70, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

id sub_1827E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_16B968(&qword_30BD18);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_182990()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_16B968(&qword_30BCF8);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_182B20()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_16B968(&qword_30BD78);
  v6 = *v0;
  v7 = static _SetStorage.copy(original:)(*v0);
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release(v6);
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release(v6);
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

Swift::Int sub_182D44(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::Int v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_16B968(&qword_30BD18);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v30 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain(v3);
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_27;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v11)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_36;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_36;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_27:
    v21 = *(_QWORD *)(v6 + 40);
    v22 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v17);
    result = NSObject._rawHashValue(seed:)(v21);
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_36:
    result = swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

Swift::Int sub_182FBC(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int *v2;
  Swift::Int v3;
  uint64_t v4;
  Swift::Int result;
  Swift::Int v6;
  int64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  Swift::Int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::UInt v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  Swift::Int *v28;
  uint64_t v29[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_16B968(&qword_30BCF8);
  result = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = result;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v28 = v2;
  v7 = 0;
  v8 = v3 + 56;
  v9 = 1 << *(_BYTE *)(v3 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_27;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_27:
    v20 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v16);
    Hasher.init(_seed:)(v29, *(_QWORD *)(v6 + 40));
    Hasher._combine(_:)(v20);
    result = Hasher._finalize()();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_BYTE *)(*(_QWORD *)(v6 + 48) + v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_36:
    result = swift_release(v3);
    v2 = v28;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_183234(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_16B968(&qword_30BD78);
  v9 = static _SetStorage.resize(original:capacity:move:)(v8, a1, 0);
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release(v8);
LABEL_37:
    *v2 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 56);
  v35 = v2;
  v36 = v8 + 56;
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 56;
  result = swift_retain(v8);
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_26;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v37)
      goto LABEL_35;
    v22 = *(_QWORD *)(v36 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v37)
        goto LABEL_35;
      v22 = *(_QWORD *)(v36 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v37)
          goto LABEL_35;
        v22 = *(_QWORD *)(v36 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_26:
    v24 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v24 * v20, v4);
    v25 = *(_QWORD *)(v10 + 40);
    v26 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v25, v4, v26);
    v27 = -1 << *(_BYTE *)(v10 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v15 + 8 * v29);
      }
      while (v33 == -1);
      v18 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v18 * v24, v7, v4);
    ++*(_QWORD *)(v10 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v37)
  {
LABEL_35:
    result = swift_release_n(v8, 2);
    v2 = v35;
    goto LABEL_37;
  }
  v22 = *(_QWORD *)(v36 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v37)
      goto LABEL_35;
    v22 = *(_QWORD *)(v36 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_18355C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0)
      v5 = *v1;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = a1;
    v7 = __CocoaSet.contains(_:)();

    if ((v7 & 1) != 0)
    {
      v8 = sub_18396C(v5, (uint64_t)v6);
      swift_bridgeObjectRelease(v4);
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v9 = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  v10 = NSObject._rawHashValue(seed:)(v9);
  v11 = -1 << *(_BYTE *)(v4 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    goto LABEL_15;
  sub_16F6BC(0, &qword_30BD08, NSTimer_ptr);
  v13 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v12);
  v14 = static NSObject.== infix(_:_:)(v13, a1);

  if ((v14 & 1) == 0)
  {
    v15 = ~v11;
    do
    {
      v12 = (v12 + 1) & v15;
      if (((*(_QWORD *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_15;
      v16 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v12);
      v17 = static NSObject.== infix(_:_:)(v16, a1);

    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease(v4);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v19 = *v2;
  v22 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1827E8();
    v19 = v22;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * v12);
  sub_183B04(v12);
  v20 = *v2;
  *v2 = v22;
  swift_bridgeObjectRelease(v20);
  return v8;
}

uint64_t sub_183730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_16BDB8(&qword_30BD68, v12, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v10);
  v33 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v31 = v3;
    v32 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v34 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_16BDB8(&qword_30BD70, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v33, v6, v21);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v10);
        v23 = 1;
        a2 = v32;
        v7 = v34;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v23, 1, v6);
      }
    }
    swift_bridgeObjectRelease(v10);
    v24 = v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v31);
    v26 = *v24;
    v35 = *v24;
    *v24 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_182B20();
      v26 = v35;
    }
    v27 = *(_QWORD *)(v26 + 48) + v20;
    v7 = v34;
    a2 = v32;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v34 + 32))(v32, v27, v6);
    sub_183CA4(v16);
    v28 = *v24;
    *v24 = v35;
    swift_bridgeObjectRelease(v28);
    v23 = 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v23 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v23, 1, v6);
}

uint64_t sub_18396C(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  uint64_t v6;
  uint64_t v7;
  Swift::Int v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t result;
  Swift::Int v19;

  v3 = v2;
  swift_bridgeObjectRelease(*v3);
  v6 = __CocoaSet.count.getter(a1);
  v7 = swift_unknownObjectRetain(a1);
  v8 = sub_1817F0(v7, v6);
  v19 = v8;
  v9 = *(_QWORD *)(v8 + 40);
  swift_retain(v8);
  v10 = NSObject._rawHashValue(seed:)(v9);
  v11 = -1 << *(_BYTE *)(v8 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    sub_16F6BC(0, &qword_30BD08, NSTimer_ptr);
    v13 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v12);
    v14 = static NSObject.== infix(_:_:)(v13, a2);

    if ((v14 & 1) != 0)
    {
LABEL_6:
      swift_release(v8);
      v8 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v12);
      sub_183B04(v12);
      if ((static NSObject.== infix(_:_:)(a2, v8) & 1) != 0)
      {
        *v3 = v19;
        return v8;
      }
      __break(1u);
    }
    else
    {
      v15 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v15;
        if (((*(_QWORD *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        v16 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v12);
        v17 = static NSObject.== infix(_:_:)(v16, a2);

        if ((v17 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release(v8);
    __break(1u);
  }
  result = swift_release(v8);
  __break(1u);
  return result;
}

unint64_t sub_183B04(unint64_t result)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  Swift::Int v10;
  id v11;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain(*v1);
    v8 = _HashTable.previousHole(before:)(v2, v4, v7);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 40);
        v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v12 = NSObject._rawHashValue(seed:)(v10);

        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = (_QWORD *)(v16 + 8 * v2);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v17 >= v18 + 1))
            {
              *v17 = *v18;
              v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release(v3);
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_183CA4(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for UUID(0);
  v33 = *(_QWORD *)(v3 - 8);
  result = __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v30 = v1;
    v11 = ~v9;
    swift_retain(v7);
    v12 = _HashTable.previousHole(before:)(a1, v8, v11);
    v32 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v33 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      do
      {
        v15 = v14 * v10;
        v31(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        v16 = *(_QWORD *)(v7 + 40);
        v17 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v18 = dispatch thunk of Hashable._rawHashValue(seed:)(v16, v3, v17);
        (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v3);
        v19 = v18 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v19 < v13 || a1 < (uint64_t)v19)
            goto LABEL_6;
        }
        else if (v19 < v13 && a1 < (uint64_t)v19)
        {
          goto LABEL_6;
        }
        v22 = *(_QWORD *)(v7 + 48);
        v23 = v14 * a1;
        v24 = v22 + v14 * a1;
        v25 = v22 + v15;
        if (v14 * a1 < v15 || v24 >= v25 + v14)
        {
          swift_arrayInitWithTakeFrontToBack(v24, v25, 1, v3);
        }
        else
        {
          a1 = v10;
          if (v23 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v32 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v32 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release(v7);
    v1 = v30;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v26 = *v1;
  v27 = *(_QWORD *)(*v1 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_183F20(_QWORD *a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t), void (*a9)(uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  void (**v38)(uint64_t);
  void (*v39)(uint64_t);
  void (*v40)(uint64_t);
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  char *v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD v100[3];
  uint64_t v101;
  uint64_t v102;

  v86 = a7;
  v87 = a8;
  v85 = a6;
  v83 = a5;
  v82 = a4;
  v97 = a2;
  v98 = a3;
  v95 = a1;
  v84 = (void (*)(uint64_t))a9;
  v9 = type metadata accessor for ReadingGoals.State(0);
  v90 = *(_QWORD *)(v9 - 8);
  v91 = v9;
  __chkstk_darwin(v9);
  v88 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ReadingHistory.Day(0);
  v92 = *(_QWORD *)(v11 - 8);
  v93 = v11;
  __chkstk_darwin(v11);
  v96 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for Date(0);
  v99 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v94 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v14;
  __chkstk_darwin(v14);
  v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v22);
  v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  v100[0] = &_swiftEmptyArrayStorage;
  v25 = sub_16BDB8((unint64_t *)&qword_30B888, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v80 = v25;
  v26 = sub_16B968(&qword_30B890);
  v79 = v26;
  v78 = sub_1766E4((unint64_t *)&qword_30B898, &qword_30B890);
  dispatch thunk of SetAlgebra.init<A>(_:)(v100, v26, v78, v19, v25);
  v27 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v28 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v28(v18, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v16);
  v29 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000034, 0x8000000000215AF0, v24, v21, v18, 0);
  v30 = v81;
  *(_QWORD *)(v81 + 16) = v29;
  static DispatchQoS.userInitiated.getter();
  v100[0] = &_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(v100, v79, v78, v19, v80);
  v28(v18, v27, v16);
  *(_QWORD *)(v30 + 24) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000035, 0x8000000000215B30, v24, v21, v18, 0);
  *(_QWORD *)(v30 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_sessions) = &_swiftEmptySetSingleton;
  *(_QWORD *)(v30 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_timers) = &_swiftEmptySetSingleton;
  v31 = OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_isDataLoadedObservable;
  LOBYTE(v100[0]) = 0;
  v32 = sub_16B968(&qword_30BD80);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  *(_QWORD *)(v30 + v31) = MutableObservableContainer.init(value:)(v100);
  v33 = v95;
  sub_1859F0((uint64_t)v95, v30 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_dataSource);
  v34 = (_QWORD *)(v30 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_notifier);
  v35 = v83;
  *v34 = v82;
  v34[1] = v35;
  v36 = (_QWORD *)(v30 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_pendingReadingTimeProvider);
  v37 = v86;
  *v36 = v85;
  v36[1] = v37;
  v38 = (void (**)(uint64_t))(v30
                                      + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_currentTimeProvider);
  v39 = v87;
  v40 = v84;
  *v38 = v87;
  v38[1] = v40;
  swift_retain(v35);
  swift_retain(v37);
  v41 = swift_retain(v40);
  v42 = v94;
  v39(v41);
  v43 = v33;
  v44 = v33[3];
  v45 = v33[4];
  sub_185554(v43, v44);
  v46 = v96;
  dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryDay(for:)(v42, v44, *(_QWORD *)(v45 + 24));
  v47 = v97;
  v48 = v97[3];
  v49 = v97[4];
  sub_185554(v97, v48);
  v50 = v88;
  v51 = dispatch thunk of ReadingGoalsStateProvider.state.getter(v48, v49);
  v52 = ReadingGoals.State.booksFinishedGoal.getter(v51);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v50, v91);
  v53 = sub_192B48((uint64_t)&_swiftEmptyArrayStorage);
  v54 = v30 + OBJC_IVAR____TtC8BookCore29ReadingAchievementsController_state;
  v55 = (int *)type metadata accessor for ReadingAchievementsController.State(0);
  v56 = v42;
  v57 = v89;
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 16))(v54 + v55[6], v56, v89);
  v58 = v92;
  v59 = v93;
  (*(void (**)(uint64_t, char *, uint64_t))(v92 + 16))(v54, v46, v93);
  *(_QWORD *)(v54 + v55[5]) = v53;
  *(_QWORD *)(v54 + v55[7]) = v52;
  v60 = v54 + v55[8];
  *(_QWORD *)v60 = 0;
  *(_BYTE *)(v60 + 8) = 1;
  v61 = v98[3];
  v62 = v98[4];
  sub_185554(v98, v61);
  v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v61, v62);
  v64 = swift_allocObject(&unk_293DD0, 24, 7);
  swift_weakInit(v64 + 16, v30);
  v65 = swift_retain(v30);
  dispatch thunk of ObservableContainer.addObserver(_:callback:)(v65, sub_185A34, v64);
  swift_release(v63);
  swift_release(v30);
  swift_release(v64);
  v66 = v47[3];
  v67 = v47[4];
  sub_185554(v47, v66);
  dispatch thunk of ReadingGoalsStateProvider.observable.getter(v100, v66, v67);
  v68 = v101;
  v69 = v102;
  sub_185554(v100, v101);
  v70 = swift_allocObject(&unk_293DD0, 24, 7);
  swift_weakInit(v70 + 16, v30);
  swift_retain(v30);
  swift_retain(v70);
  dispatch thunk of ReadingGoalsStateObserving.addObserver(_:callback:)(v30, sub_185A6C, v70, v68, v69);
  swift_release(v30);
  swift_release_n(v70, 2);
  sub_184A38(v100);
  v71 = v95;
  v72 = v95[3];
  v73 = v95[4];
  sub_185554(v95, v72);
  v74 = swift_allocObject(&unk_293DD0, 24, 7);
  swift_weakInit(v74 + 16, v30);
  v75 = *(_QWORD *)(v73 + 16);
  swift_retain(v30);
  swift_retain(v74);
  dispatch thunk of ReadingHistoryDataSourceObservable.addObserver(_:modelChange:)(v30, sub_185AA4, v74, v72, v75);
  swift_release(v30);
  swift_release_n(v74, 2);
  v76 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v76, "addObserver:selector:name:object:", v30, "_handleSignificantDateChangeNotification:", UIApplicationSignificantTimeChangeNotification, 0);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v96, v59);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v94, v57);
  sub_184A38(v98);
  sub_184A38(v97);
  sub_184A38(v71);
  return v30;
}

uint64_t sub_184690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_18470C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_17EA14(v0 + v2, *(_QWORD *)(v0 + v3), *(double *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_184758()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_184768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_184778(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_184780()
{
  return sub_18590C((uint64_t (*)(_QWORD))&type metadata accessor for UUID);
}

uint64_t sub_18478C()
{
  return sub_185998((uint64_t (*)(_QWORD))&type metadata accessor for UUID, sub_17EDF8);
}

uint64_t sub_1847A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1847B0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  void (*v16)(char *, char *, uint64_t);
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v5 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v5);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  isEscapingClosureAtFileLocation = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(isEscapingClosureAtFileLocation - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(isEscapingClosureAtFileLocation);
  v12 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)aBlock - v13;
  sub_1765E0(a2, (uint64_t)v7, &qword_30B7E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, isEscapingClosureAtFileLocation) == 1)
    return sub_1766A8((uint64_t)v7, &qword_30B7E0);
  v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v16(v14, v7, isEscapingClosureAtFileLocation);
  if ((a1 & 1) != 0)
  {
    v17 = *(NSObject **)(v2 + 16);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, isEscapingClosureAtFileLocation);
    v18 = *(unsigned __int8 *)(v9 + 80);
    v19 = (v18 + 24) & ~v18;
    v20 = swift_allocObject(&unk_293FF8, v19 + v10, v18 | 7);
    *(_QWORD *)(v20 + 16) = v2;
    v16((char *)(v20 + v19), v12, isEscapingClosureAtFileLocation);
    v21 = swift_allocObject(&unk_294020, 32, 7);
    *(_QWORD *)(v21 + 16) = sub_185984;
    *(_QWORD *)(v21 + 24) = v20;
    aBlock[4] = sub_185BBC;
    v25 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_175BAC;
    aBlock[3] = &unk_294038;
    v22 = _Block_copy(aBlock);
    v23 = v25;
    swift_retain(v2);
    swift_retain(v21);
    swift_release(v23);
    dispatch_sync(v17, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, isEscapingClosureAtFileLocation);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v21, "", 122, 388, 20, 1);
    swift_release(v20);
    result = swift_release(v21);
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return result;
    __break(1u);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, isEscapingClosureAtFileLocation);
}

uint64_t type metadata accessor for ReadingAchievementsController.State(uint64_t a1)
{
  return sub_184AE0(a1, qword_30BCA0, (uint64_t)&nominal type descriptor for ReadingAchievementsController.State);
}

uint64_t sub_184A38(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_184A58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_181078(v1, a1);
}

uint64_t sub_184A70()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_184A94@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_181168(v1, a1);
}

uint64_t dispatch thunk of ReadingAchievementsEventProcessor.sessionStarted(sessionID:delay:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ReadingAchievementsEventProcessor.sessionEnded(sessionID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ReadingAchievementsEventProcessor.willMarkAsset(_:finished:finishedDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t sub_184AC4()
{
  return type metadata accessor for ReadingAchievementsController(0);
}

uint64_t type metadata accessor for ReadingAchievementsController(uint64_t a1)
{
  return sub_184AE0(a1, qword_30BAB8, (uint64_t)&nominal type descriptor for ReadingAchievementsController);
}

uint64_t sub_184AE0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

uint64_t sub_184B14(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[10];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for ReadingAchievementsController.State(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_26C040;
    v4[4] = (char *)&value witness table for () + 64;
    v4[5] = (char *)&value witness table for () + 64;
    v4[6] = (char *)&value witness table for () + 64;
    v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 10, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ReadingAchievementsController(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ReadingAchievementsController);
}

uint64_t dispatch thunk of ReadingAchievementsController.isDataLoaded.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ReadingAchievementsController.__allocating_init(dataSource:goalsStateProvider:booksStateProvider:notifier:pendingReadingTimeProvider:currentTimeProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of ReadingAchievementsController.sessionStarted(sessionID:delay:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ReadingAchievementsController.sessionEnded(sessionID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ReadingAchievementsController.willMarkAsset(_:finished:finishedDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t *sub_184C14(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    v7 = type metadata accessor for ReadingHistory.Day(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v10;
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    v13 = type metadata accessor for Date(0);
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain(v10);
    v14(v11, v12, v13);
    v15 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
  }
  return a1;
}

uint64_t sub_184D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for ReadingHistory.Day(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_184D6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for ReadingHistory.Day(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = type metadata accessor for Date(0);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain(v9);
  v13(v10, v11, v12);
  v14 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  return a1;
}

uint64_t sub_184E30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v6 = type metadata accessor for ReadingHistory.Day(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = v17;
  return a1;
}

uint64_t sub_184EF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for ReadingHistory.Day(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t sub_184FA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for ReadingHistory.Day(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease(v8);
  v9 = a3[6];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t sub_185064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_185070);
}

uint64_t sub_185070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for ReadingHistory.Day(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for Date(0);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_185118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_185124);
}

uint64_t sub_185124(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for ReadingHistory.Day(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for Date(0);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1851C8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[5];

  result = type metadata accessor for ReadingHistory.Day(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    v5[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[4] = "\t";
      swift_initStructMetadata(a1, 256, 5, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_185270(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1852AC()
{
  unint64_t result;

  result = qword_30BCF0;
  if (!qword_30BCF0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_30BCF0);
  }
  return result;
}

unint64_t sub_1852F0()
{
  unint64_t result;

  result = qword_30BD00;
  if (!qword_30BD00)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Achievement.Key, &type metadata for Achievement.Key);
    atomic_store(result, (unint64_t *)&qword_30BD00);
  }
  return result;
}

unint64_t sub_185334()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30BD10;
  if (!qword_30BD10)
  {
    v1 = sub_16F6BC(255, &qword_30BD08, NSTimer_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_30BD10);
  }
  return result;
}

uint64_t sub_18538C(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

uint64_t sub_185394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for Achievement(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  if (swift_getEnumCaseMultiPayload(v0 + v4, v1) == 2)
  {
    v6 = v0 + v4 + *(int *)(sub_16B968(&qword_30BCE8) + 48);
    v7 = type metadata accessor for ReadingHistoryModel.DayKey(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_185438(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Achievement(0) - 8) + 80);
  return sub_17D9F0(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_185478()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1854A4()
{
  uint64_t v0;

  return sub_17E0BC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1854B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1854C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_185504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingAchievementsController.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

_BYTE *sub_185548(_BYTE *result)
{
  uint64_t v1;

  *result = *(_BYTE *)(v1 + 16);
  return result;
}

_QWORD *sub_185554(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_185578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = v5;
  v19 = v1;
  v6 = type metadata accessor for ReadingAchievementsController.State(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8 + 8) & ~v8;
  v10 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = v10;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v21 = (v13 + v10 + 8) & ~v13;
  v22 = v21 + *(_QWORD *)(v12 + 64);
  v14 = v3 | v8 | v13 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v19);
  swift_release(*(_QWORD *)(v0 + v18));
  v15 = type metadata accessor for ReadingHistory.Day(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v0 + v9, v15);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v9 + *(int *)(v6 + 20)));
  v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v16(v0 + v9 + *(int *)(v6 + 24), v11);
  swift_release(*(_QWORD *)(v0 + v20));
  v16(v0 + v21, v11);
  return swift_deallocObject(v0, v22, v14);
}

uint64_t sub_1856D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_185718()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ReadingHistory.ModelSnapshot(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(type metadata accessor for ReadingAchievementsController.State(0) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Date(0) - 8) + 80);
  return sub_17CCD4(v0 + v2, *(_QWORD *)(v0 + v3), v0 + v5, *(_QWORD *)(v0 + v6), v0 + ((v7 + v6 + 8) & ~v7));
}

uint64_t sub_1857D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for ReadingAchievementsController.State(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v7 = v0 + v4;
  v8 = type metadata accessor for ReadingHistory.Day(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + *(int *)(v1 + 20)));
  v9 = v7 + *(int *)(v1 + 24);
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_185898()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ReadingAchievementsController.State(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_17F9F8(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1858E0()
{
  uint64_t v0;

  return sub_17A9DC(v0, (void (*)(void))sub_17AAD0);
}

uint64_t sub_185900()
{
  return sub_18590C((uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

uint64_t sub_18590C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_release(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_185984()
{
  return sub_185998((uint64_t (*)(_QWORD))&type metadata accessor for Date, (uint64_t (*)(_QWORD, uint64_t))sub_17F268);
}

uint64_t sub_185998(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

uint64_t sub_1859DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1859F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_185A34(uint64_t a1)
{
  uint64_t v1;

  return sub_179CEC(a1, v1, &qword_30BD58, (uint64_t)&unk_294138, (uint64_t)sub_185B68, (uint64_t)&unk_294150);
}

uint64_t sub_185A6C(uint64_t a1)
{
  uint64_t v1;

  return sub_179CEC(a1, v1, &qword_30BD48, (uint64_t)&unk_2940E8, (uint64_t)sub_185AD8, (uint64_t)&unk_294100);
}

uint64_t sub_185AA4()
{
  uint64_t v0;

  return sub_17A048(v0);
}

uint64_t sub_185AAC()
{
  uint64_t v0;

  return sub_17A9DC(v0, (void (*)(void))sub_17BCB0);
}

uint64_t sub_185ACC()
{
  return sub_185AF8(&qword_30BD48);
}

uint64_t sub_185AD8()
{
  return sub_185B7C(&qword_30BD48, (void (*)(uint64_t))sub_17B590);
}

uint64_t sub_185AEC()
{
  return sub_185AF8(&qword_30BD58);
}

uint64_t sub_185AF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = sub_16B968(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_release(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_185B68()
{
  return sub_185B7C(&qword_30BD58, (void (*)(uint64_t))sub_17B250);
}

uint64_t sub_185B7C(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_16B968(a1) - 8) + 80);
  return sub_179FDC(*(_QWORD *)(v2 + 16), v2 + ((v4 + 24) & ~v4), a2);
}

uint64_t sub_185C20(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  _OWORD v11[2];

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v6 = objc_msgSend(a2, "valueForKeyPath:", v5);

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)(v10);
    swift_unknownObjectRelease(v6);
    sub_17992C(v10, v11);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  v7 = sub_16B968(&qword_30ABB0);
  v8 = sub_16B968(&qword_30BDD0);
  if (swift_dynamicCast(v10, v11, v7, v8, 6))
    return *(_QWORD *)&v10[0];
  else
    return 0;
}

_QWORD *_AnyDefaultsValue<>.personalizationLocalSignalPurge.getter()
{
  return sub_185D20((id *)BRCBooksDefaultsKeyPersonalizationLocalSignalPurge, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_185F2C);
}

_QWORD *_AnyDefaultsValue<>.priceTrackingUpdateScheduleSteps.getter()
{
  return sub_185D20((id *)BRCBooksDefaultsKeyPriceTrackingUpdateScheduleSteps, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_185F58);
}

_QWORD *sub_185D20(id *a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t))
{
  void **v2;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  _QWORD *v10;
  uint64_t i;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;

  v4 = *v2;
  v5 = *a1;
  v6 = v4;
  v7 = sub_185C20((uint64_t)v5, v6);

  if (!v7)
    return 0;
  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8));
    if (v8)
      goto LABEL_4;
    goto LABEL_21;
  }
  if (v7 >= 0)
    v19 = v7 & 0xFFFFFFFFFFFFFF8;
  else
    v19 = v7;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v7);
  if (!v8)
  {
LABEL_21:
    swift_bridgeObjectRelease(v7);
    return _swiftEmptyArrayStorage;
  }
LABEL_4:
  result = (_QWORD *)a2(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v10 = _swiftEmptyArrayStorage;
    if ((v7 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v8; ++i)
      {
        v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
        v14 = _swiftEmptyArrayStorage[2];
        v13 = _swiftEmptyArrayStorage[3];
        if (v14 >= v13 >> 1)
          a2(v13 > 1, v14 + 1, 1);
        _swiftEmptyArrayStorage[2] = v14 + 1;
        _swiftEmptyArrayStorage[v14 + 4] = v12;
      }
    }
    else
    {
      v15 = (id *)(v7 + 32);
      do
      {
        v16 = _swiftEmptyArrayStorage[2];
        v17 = _swiftEmptyArrayStorage[3];
        v18 = *v15;
        if (v16 >= v17 >> 1)
          a2(v17 > 1, v16 + 1, 1);
        _swiftEmptyArrayStorage[2] = v16 + 1;
        _swiftEmptyArrayStorage[v16 + 4] = v18;
        ++v15;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease(v7);
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_185EF4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_185FD8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_185F10(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1861C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_185F2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1863A4(a1, a2, a3, (_QWORD *)*v3, &qword_30BDC0, &qword_30BDC8);
  *v3 = result;
  return result;
}

uint64_t sub_185F58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1863A4(a1, a2, a3, (_QWORD *)*v3, &qword_30BDB0, &qword_30BDB8);
  *v3 = result;
  return result;
}

uint64_t sub_185F84(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_186530(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_185FA0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_186698(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_185FBC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_186804(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_185FD8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_16B968(&qword_30BD88);
  v11 = *(_QWORD *)(sub_16B968(&qword_30B7F0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = sub_16B968(&qword_30B7F0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v15 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v8;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1861C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v10 = sub_16B968(&qword_30BD90);
  v11 = *(_QWORD *)(type metadata accessor for ReadingHistory.DayEntry(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = *(unsigned __int8 *)(v11 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (_QWORD *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  v16 = j__malloc_size(v15);
  if (!v12)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v16 - v14 == 0x8000000000000000 && v12 == -1)
    goto LABEL_34;
  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  v18 = type metadata accessor for ReadingHistory.DayEntry(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v15 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v15 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack(v21, v22, v8, v18);
    }
    else if (v15 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v8;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy(v21);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v15;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1863A4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_16B968(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
    v15 = j__malloc_size(v14);
    v16 = v15 - 32;
    if (v15 < 32)
      v16 = v15 - 25;
    v14[2] = v11;
    v14[3] = 2 * (v16 >> 3);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v17 = (unint64_t)(v14 + 4);
  v18 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v17 >= v18 + 8 * v11)
      memmove(v14 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v18 >= v17 + 8 * v11 || v17 >= v18 + 8 * v11)
  {
    sub_16B968(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_186530(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_16B968((uint64_t *)&unk_30C8E0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_186698(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_16B968(&qword_30BDA8);
    v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 1;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 5);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[32 * v8])
      memmove(v14, v15, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[32 * v8] || v14 >= &v15[32 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_186804(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_16B968(&qword_30BD98);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_16B968(&qword_30BDA0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_186990()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_16B968(&qword_30BDD8);
  v1 = swift_allocObject(v0, 256, 7);
  *(_OWORD *)(v1 + 16) = xmmword_26C080;
  *(_QWORD *)(v1 + 32) = type metadata accessor for UITraitAccessibilityContrast(0);
  *(_QWORD *)(v1 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  *(_QWORD *)(v1 + 48) = type metadata accessor for UITraitActiveAppearance(0);
  *(_QWORD *)(v1 + 56) = &protocol witness table for UITraitActiveAppearance;
  *(_QWORD *)(v1 + 64) = type metadata accessor for UITraitDisplayGamut(0);
  *(_QWORD *)(v1 + 72) = &protocol witness table for UITraitDisplayGamut;
  *(_QWORD *)(v1 + 80) = type metadata accessor for UITraitDisplayScale(0);
  *(_QWORD *)(v1 + 88) = &protocol witness table for UITraitDisplayScale;
  *(_QWORD *)(v1 + 96) = type metadata accessor for UITraitForceTouchCapability(0);
  *(_QWORD *)(v1 + 104) = &protocol witness table for UITraitForceTouchCapability;
  *(_QWORD *)(v1 + 112) = type metadata accessor for UITraitHorizontalSizeClass(0);
  *(_QWORD *)(v1 + 120) = &protocol witness table for UITraitHorizontalSizeClass;
  *(_QWORD *)(v1 + 128) = type metadata accessor for UITraitLayoutDirection(0);
  *(_QWORD *)(v1 + 136) = &protocol witness table for UITraitLayoutDirection;
  *(_QWORD *)(v1 + 144) = type metadata accessor for UITraitLegibilityWeight(0);
  *(_QWORD *)(v1 + 152) = &protocol witness table for UITraitLegibilityWeight;
  *(_QWORD *)(v1 + 160) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v1 + 168) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(_QWORD *)(v1 + 176) = type metadata accessor for UITraitToolbarItemPresentationSize(0);
  *(_QWORD *)(v1 + 184) = &protocol witness table for UITraitToolbarItemPresentationSize;
  *(_QWORD *)(v1 + 192) = type metadata accessor for UITraitUserInterfaceIdiom(0);
  *(_QWORD *)(v1 + 200) = &protocol witness table for UITraitUserInterfaceIdiom;
  *(_QWORD *)(v1 + 208) = type metadata accessor for UITraitUserInterfaceLevel(0);
  *(_QWORD *)(v1 + 216) = &protocol witness table for UITraitUserInterfaceLevel;
  *(_QWORD *)(v1 + 224) = type metadata accessor for UITraitUserInterfaceStyle(0);
  *(_QWORD *)(v1 + 232) = &protocol witness table for UITraitUserInterfaceStyle;
  *(_QWORD *)(v1 + 240) = type metadata accessor for UITraitVerticalSizeClass(0);
  *(_QWORD *)(v1 + 248) = &protocol witness table for UITraitVerticalSizeClass;
  return v1;
}

id static UISpringTimingParameters.swiftUIDefault.getter()
{
  return objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithDuration:bounce:", 0.5, 0.0);
}

uint64_t sub_186B48(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_16B968(&qword_30B558);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReadingHistoryDay(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1766A8(a1, &qword_30B558);
    sub_1B14CC(a2, (uint64_t)v8);
    v13 = type metadata accessor for Date(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1766A8((uint64_t)v8, &qword_30B558);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_188AC4((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v19;
    swift_bridgeObjectRelease(v16);
    v17 = type metadata accessor for Date(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_186CD4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  v6 = sub_16B968(&qword_30BD20);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Achievement(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1766A8(a1, &qword_30BD20);
    v13 = sub_1880C8(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v17 = *v3;
      v24 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_191D2C();
        v17 = v24;
      }
      sub_189D1C(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8);
      sub_188268(v15, v17);
      v18 = *v3;
      *v3 = v17;
      swift_bridgeObjectRelease(v18);
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_1766A8((uint64_t)v8, &qword_30BD20);
  }
  else
  {
    sub_189D1C(a1, (uint64_t)v12);
    v20 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v24 = *v3;
    *v3 = 0x8000000000000000;
    sub_188C5C((uint64_t)v12, a2, v20);
    v21 = *v3;
    *v3 = v24;
    return swift_bridgeObjectRelease(v21);
  }
}

unint64_t sub_186E9C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  unint64_t result;
  char v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v4 = a2 & 1;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v15 = *v2;
    *v2 = 0x8000000000000000;
    sub_188D78(a1, v4, isUniquelyReferenced_nonNull_native);
    v7 = *v2;
    *v2 = v15;
  }
  else
  {
    result = sub_188120(a2 & 1);
    if ((v9 & 1) == 0)
      return result;
    v10 = result;
    v11 = swift_isUniquelyReferenced_nonNull_native(*v2);
    v12 = *v2;
    v16 = *v3;
    *v3 = 0x8000000000000000;
    if (!v11)
    {
      sub_191F3C();
      v12 = v16;
    }
    v13 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v10);
    sub_188448(v10, v12);
    v14 = *v3;
    *v3 = v12;

    v7 = v14;
  }
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_186F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;
  _OWORD v11[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_17992C((_OWORD *)a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_188EAC(v11, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v10;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_1766A8(a1, &qword_30ABB0);
    sub_1B1608(a2, a3, v11);
    swift_bridgeObjectRelease(a3);
    return sub_1766A8((uint64_t)v11, &qword_30ABB0);
  }
}

uint64_t sub_18704C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_16B968(&qword_30B7E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Date(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1766A8(a1, &qword_30B7E0);
    sub_1B16F8(a2, (uint64_t)v8);
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1766A8((uint64_t)v8, &qword_30B7E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_188FDC((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v19;
    swift_bridgeObjectRelease(v16);
    v17 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

void sub_1871D8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

uint64_t static UIAccessibility.accessibilityNavigationServicesEnabled.getter()
{
  if (UIAccessibilityIsVoiceOverRunning()
    || UIAccessibilityIsSwitchControlRunning()
    || _AXSCommandAndControlEnabled())
  {
    return 1;
  }
  else
  {
    return IMAccessibilityIsFKAEnabledWithKeyboardAttached();
  }
}

uint64_t static UIAccessibility.accessibilityNavigationServicesEnabledPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_16B968(&qword_30BDF0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s46AccessibilityNavigationServicesEnabledObserverCMa();
  swift_allocObject(v4, 24, 7);
  v5 = sub_18743C();
  v10[1] = v5[2];
  v6 = sub_16B968(&qword_30BDF8);
  v7 = sub_189CDC(&qword_30BE00, &qword_30BDF8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher<>.removeDuplicates()(v6, v7, &protocol witness table for Bool);
  v8 = sub_189CDC(&qword_30BE08, &qword_30BDF0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  swift_retain(v5);
  Publisher.map<A>(_:)(sub_18773C, v5, v0, &type metadata for Bool, v8);
  swift_release(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return swift_release(v5);
}

uint64_t _s46AccessibilityNavigationServicesEnabledObserverCMa()
{
  return objc_opt_self(_TtCE8BookCoreVSo15UIAccessibilityP33_8FB5C9243120A862394574D429A2D1C246AccessibilityNavigationServicesEnabledObserver);
}

uint64_t *sub_18743C()
{
  uint64_t *v0;
  uint64_t v1;
  char IsFKAEnabledWithKeyboardAttached;
  uint64_t v3;
  _QWORD v5[4];

  v1 = *v0;
  if (UIAccessibilityIsVoiceOverRunning()
    || UIAccessibilityIsSwitchControlRunning()
    || _AXSCommandAndControlEnabled())
  {
    IsFKAEnabledWithKeyboardAttached = 1;
  }
  else
  {
    IsFKAEnabledWithKeyboardAttached = IMAccessibilityIsFKAEnabledWithKeyboardAttached();
  }
  LOBYTE(v5[0]) = IsFKAEnabledWithKeyboardAttached;
  v3 = sub_16B968(&qword_30BDF8);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v0[2] = CurrentValueSubject.init(_:)(v5);
  v5[3] = v1;
  v5[0] = v0;
  swift_retain(v0);
  _sSo15UIAccessibilityV8BookCoreE36addAccessibilityStatusChangeObserver_8selectoryyp_10ObjectiveC8SelectorVtFZ_0((uint64_t)v5, (uint64_t)"update");
  sub_184A38(v5);
  return v0;
}

uint64_t static UIAccessibility.removeAccessibilityStatusChangeObserver(_:)(uint64_t result)
{
  _QWORD *v1;
  int *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v1 = (_QWORD *)result;
  if (qword_30AAE0 != -1)
    result = swift_once(&qword_30AAE0, sub_187764);
  v2 = off_30BDE0[0];
  v3 = *(_QWORD *)((char *)off_30BDE0[0] + (unint64_t)&dword_10);
  if (v3)
  {
    v4 = (void *)objc_opt_self(NSNotificationCenter);
    swift_bridgeObjectRetain(v2);
    v5 = 0;
    do
    {
      v6 = *(void **)&v2[2 * v5++ + 8];
      v7 = v6;
      v8 = objc_msgSend(v4, "defaultCenter");
      v9 = v1[3];
      v10 = sub_185554(v1, v9);
      v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v9);
      objc_msgSend(v8, "removeObserver:name:object:", v11, v7, 0);

      swift_unknownObjectRelease(v11);
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease(v2);
  }
  return result;
}

uint64_t sub_187620()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  v1 = qword_30AAE0;
  swift_retain(v0);
  if (v1 != -1)
    swift_once(&qword_30AAE0, sub_187764);
  v2 = off_30BDE0[0];
  v3 = *(_QWORD *)((char *)off_30BDE0[0] + (unint64_t)&dword_10);
  if (v3)
  {
    v4 = (void *)objc_opt_self(NSNotificationCenter);
    swift_bridgeObjectRetain(v2);
    v5 = 0;
    do
    {
      v6 = *(void **)&v2[2 * v5++ + 8];
      v7 = v6;
      v8 = objc_msgSend(v4, "defaultCenter");
      objc_msgSend(v8, "removeObserver:name:object:", v0, v7, 0);

    }
    while (v3 != v5);
    swift_release(v0);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    swift_release(v0);
  }
  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

_BYTE *sub_18773C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static UIAccessibility.accessibilityVoiceCommandEnabled.getter()
{
  return _AXSCommandAndControlEnabled() != 0;
}

NSNotificationName sub_187764()
{
  uint64_t v0;
  uint64_t v1;
  NSString *v2;

  v0 = sub_16B968(&qword_30BED0);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_26BF80;
  *(_QWORD *)(v1 + 32) = UIAccessibilityVoiceOverStatusDidChangeNotification;
  *(_QWORD *)(v1 + 40) = UIAccessibilitySwitchControlStatusDidChangeNotification;
  off_30BDE0[0] = (int *)v1;
  v2 = UIAccessibilityVoiceOverStatusDidChangeNotification;
  return UIAccessibilitySwitchControlStatusDidChangeNotification;
}

BOOL static UIAccessibility.BooksAccessibilityAnnouncementIdentifier.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void UIAccessibility.BooksAccessibilityAnnouncementIdentifier.hash(into:)()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int UIAccessibility.BooksAccessibilityAnnouncementIdentifier.hashValue.getter()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_187854(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_187894()
{
  off_30BDE8 = (int *)&_swiftEmptyDictionarySingleton;
}

uint64_t static UIAccessibility.bkaxAccessibilityDebounceAnnounce(_:identifier:delay:)(uint64_t a1, uint64_t a2, char *a3, double a4)
{
  char v7;
  int *v8;
  unint64_t v9;
  char v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v18[5];
  uint64_t v19;

  v7 = *a3;
  if (qword_30AAE8 != -1)
    swift_once(&qword_30AAE8, sub_187894);
  swift_beginAccess(&off_30BDE8, v18, 32, 0);
  v8 = off_30BDE8;
  if (*(_QWORD *)((char *)&dword_10 + (_QWORD)off_30BDE8) && (v9 = sub_188120(v7), (v10 & 1) != 0))
  {
    v11 = *(void **)(*(_QWORD *)&stru_20.segname[(_QWORD)v8 + 16] + 8 * v9);
    swift_endAccess(v18);
    objc_msgSend(v11, "invalidate");
  }
  else
  {
    swift_endAccess(v18);
  }
  v12 = (void *)objc_opt_self(NSTimer);
  v13 = swift_allocObject(&unk_294188, 40, 7);
  *(_BYTE *)(v13 + 16) = v7;
  *(_QWORD *)(v13 + 24) = a1;
  *(_QWORD *)(v13 + 32) = a2;
  v18[4] = sub_189944;
  v19 = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1871D8;
  v18[3] = &unk_2941A0;
  v14 = _Block_copy(v18);
  v15 = v19;
  swift_bridgeObjectRetain(a2);
  swift_release(v15);
  v16 = objc_msgSend(v12, "scheduledTimerWithTimeInterval:repeats:block:", 0, v14, a4);
  _Block_release(v14);
  swift_beginAccess(&off_30BDE8, v18, 33, 0);
  sub_186E9C((uint64_t)v16, v7);
  return swift_endAccess(v18);
}

void sub_187A60(uint64_t a1, char a2)
{
  UIAccessibilityNotifications v2;
  id v3;
  char v4;

  v4 = a2 & 1;
  _sSo15UIAccessibilityV8BookCoreE28bkaxAccessibilityRemoveTimer3foryAbCE05BooksE22AnnouncementIdentifierO_tFZ_0(&v4);
  v2 = UIAccessibilityAnnouncementNotification;
  v3 = String._bridgeToObjectiveC()();
  UIAccessibilityPostNotification(v2, v3);

}

UIColor __swiftcall UIColor.bkaxAdjustedForIncreaseContrast()()
{
  void *v0;
  id v1;
  char *v2;
  char **v3;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = (char *)objc_msgSend(v1, "userInterfaceStyle");

  v3 = &selRef_bkaxAdjustedLighterForIncreaseContrast;
  if (v2 != (_BYTE *)&dword_0 + 2)
    v3 = &selRef_bkaxAdjustedDarkerForIncreaseContrast;
  return (UIColor)objc_msgSend(v0, *v3);
}

UIColor __swiftcall UIColor.bkaxAdjustedLighterForIncreaseContrast()()
{
  void *v0;

  return (UIColor)objc_msgSend(v0, "bkaxAdjustedForIncreaseContrastAdjustingDarker:", 0);
}

UIColor __swiftcall UIColor.bkaxAdjustedDarkerForIncreaseContrast()()
{
  void *v0;

  return (UIColor)objc_msgSend(v0, "bkaxAdjustedForIncreaseContrastAdjustingDarker:", 1);
}

UIColor __swiftcall UIColor.bkaxAdjustedForIncreaseContrast(darker:)(Swift::Bool darker)
{
  id v2;
  char *v3;
  unint64_t v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;

  v2 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v3 = (char *)objc_msgSend(v2, "accessibilityContrast");

  if (v3 != (_BYTE *)&dword_0 + 1)
    return (UIColor)v14;
  v4 = sub_189AA4();
  __chkstk_darwin(v4);
  v5 = (void *)UITraitCollection.init(mutations:)(sub_189AE0);
  v6 = objc_msgSend(v14, "resolvedColorWithTraitCollection:", v5);

  v21 = 0.0;
  v22 = 0.0;
  v19 = 0.0;
  v20 = 0.0;
  v17 = 0.0;
  v18 = 0.0;
  v15 = 0.0;
  v16 = 0.0;
  objc_msgSend(v14, "getHue:saturation:brightness:alpha:", &v22, &v21, &v20, &v19);
  objc_msgSend(v6, "getHue:saturation:brightness:alpha:", &v18, &v17, &v16, &v15);
  v7 = v20;
  if (v20 == v16)
  {
    v8 = v21;
    if (v21 == v17)
    {
      v9 = v22;
      if (v22 == v18)
      {
        v10 = v19;
        if (v19 == v15)
        {
          objc_msgSend(v14, "defaultBrightnessAdjustment");
          if (darker)
            v11 = -v11;
          v12 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithHue:saturation:brightness:alpha:", v9, v8, v7 * (v11 + 1.0), v10);

          return (UIColor)v12;
        }
      }
    }
  }
  return (UIColor)v6;
}

uint64_t sub_187ED0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  sub_189DA4(a1, v4);
  UIMutableTraits.accessibilityContrast.setter(1, v4, v5);
  if ((a2 & 1) != 0)
    v6 = 1;
  else
    v6 = 2;
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  sub_189DA4(a1, v7);
  return UIMutableTraits.userInterfaceStyle.setter(v6, v7, v8);
}

unint64_t sub_187F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_18931C(a1, a2, v5);
}

unint64_t sub_188000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for Date(0);
  v6 = sub_16BDB8(&qword_30BED8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1896B8(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for Date, &qword_30B808, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_188098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_1893FC(a1, v4);
}

unint64_t sub_1880C8(unsigned __int8 a1)
{
  uint64_t v1;
  Swift::Int v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, *(_QWORD *)(v1 + 40));
  Hasher._combine(_:)(a1);
  v3 = Hasher._finalize()();
  return sub_1894C0(a1, v3);
}

unint64_t sub_188120(char a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  v4 = a1 & 1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  Hasher._combine(_:)(a1 & 1);
  v5 = Hasher._finalize()();
  return sub_189560(v4, v5);
}

unint64_t sub_18817C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = static Hasher._hash(seed:_:)(*(_QWORD *)(v1 + 40), a1);
  return sub_18961C(a1, v3);
}

unint64_t sub_1881AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 40);
  v5 = type metadata accessor for UUID(0);
  v6 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v7 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, v6);
  return sub_1896B8(a1, v7, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_30BD70, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_188244(int64_t a1, uint64_t a2)
{
  return sub_1887F8(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for Date, &qword_30BED8, (uint64_t)&protocol conformance descriptor for Date, (uint64_t (*)(_QWORD))&type metadata accessor for ReadingHistoryDay);
}

unint64_t sub_188268(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v28, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_BYTE *)(v11 + v3);
        v13 = (_BYTE *)(v11 + v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = type metadata accessor for Achievement(0);
        v16 = *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72);
        v17 = v16 * v3;
        result = v14 + v16 * v3;
        v18 = v16 * v6;
        v19 = v14 + v16 * v6;
        v20 = v19 + v16;
        if (v17 < v18 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack(result, v19, 1, v15);
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_188448(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  Swift::UInt v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v6);
        Hasher.init(_seed:)(v23, *(_QWORD *)(a2 + 40));
        Hasher._combine(_:)(v9);
        result = Hasher._finalize()();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_BYTE *)(v11 + v3);
          v13 = (_BYTE *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_188600(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v6);
        v11 = *v10;
        v12 = v10[1];
        Hasher.init(_seed:)(v27, *(_QWORD *)(a2 + 40));
        swift_bridgeObjectRetain(v12);
        String.hash(into:)(v27, v11, v12);
        v13 = Hasher._finalize()();
        result = swift_bridgeObjectRelease(v12);
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v14 < v8)
            goto LABEL_5;
        }
        else if (v14 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v14)
        {
LABEL_11:
          v15 = *(_QWORD *)(a2 + 48);
          v16 = (_OWORD *)(v15 + 16 * v3);
          v17 = (_OWORD *)(v15 + 16 * v6);
          if (v3 != v6 || v16 >= v17 + 1)
            *v16 = *v17;
          v18 = *(_QWORD *)(a2 + 56);
          v19 = (_OWORD *)(v18 + 32 * v3);
          v20 = (_OWORD *)(v18 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v19 >= v20 + 2))
          {
            v9 = v20[1];
            *v19 = *v20;
            v19[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1887D4(int64_t a1, uint64_t a2)
{
  return sub_1887F8(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_30BD68, (uint64_t)&protocol conformance descriptor for UUID, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
}

unint64_t sub_1887F8(int64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(_QWORD);
  void (*v47)(char *, unint64_t, uint64_t);
  unint64_t v48;
  uint64_t (*v49)(uint64_t);
  unint64_t *v50;
  uint64_t v51;
  uint64_t v52;

  v46 = a6;
  v50 = a4;
  v51 = a5;
  v49 = a3;
  v8 = a3(0);
  v52 = *(_QWORD *)(v8 - 8);
  result = __chkstk_darwin(v8);
  v11 = (char *)&v45 - v10;
  v12 = a2 + 64;
  v13 = -1 << *(_BYTE *)(a2 + 32);
  v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(_QWORD *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    v15 = ~v13;
    result = _HashTable.previousHole(before:)(a1, a2 + 64, ~v13);
    if ((*(_QWORD *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      v48 = (result + 1) & v15;
      v16 = *(_QWORD *)(v52 + 72);
      v47 = *(void (**)(char *, unint64_t, uint64_t))(v52 + 16);
      v17 = v15;
      do
      {
        v18 = v12;
        v19 = v16;
        v20 = v16 * v14;
        v47(v11, *(_QWORD *)(a2 + 48) + v16 * v14, v8);
        v21 = v17;
        v22 = *(_QWORD *)(a2 + 40);
        v23 = sub_16BDB8(v50, v49, v51);
        v24 = dispatch thunk of Hashable._rawHashValue(seed:)(v22, v8, v23);
        result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v11, v8);
        v25 = v24 & v21;
        v17 = v21;
        if (a1 >= (uint64_t)v48)
        {
          if (v25 >= v48 && a1 >= (uint64_t)v25)
          {
LABEL_16:
            v28 = *(_QWORD *)(a2 + 48);
            v29 = v28 + v19 * a1;
            v30 = v28 + v20;
            if (v19 * a1 < v20 || v29 >= v30 + v19)
            {
              swift_arrayInitWithTakeFrontToBack(v29, v30, 1, v8);
            }
            else if (v19 * a1 != v20)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v31 = *(_QWORD *)(a2 + 56);
            v32 = v46(0);
            v33 = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72);
            v34 = v33 * a1;
            result = v31 + v33 * a1;
            v35 = v33 * v14;
            v36 = v31 + v33 * v14;
            v37 = v36 + v33;
            v38 = v34 < v35 || result >= v37;
            v12 = v18;
            if (v38)
            {
              result = swift_arrayInitWithTakeFrontToBack(result, v36, 1, v32);
              a1 = v14;
              v17 = v21;
            }
            else
            {
              a1 = v14;
              v17 = v21;
              if (v34 != v35)
              {
                result = swift_arrayInitWithTakeBackToFront();
                a1 = v14;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v25 >= v48 || a1 >= (uint64_t)v25)
        {
          goto LABEL_16;
        }
        v12 = v18;
LABEL_5:
        v14 = (v14 + 1) & v17;
        v16 = v19;
      }
      while (((*(_QWORD *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
    }
    v39 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v40 = *v39;
    v41 = (-1 << a1) - 1;
  }
  else
  {
    v39 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v41 = *v39;
    v40 = (-1 << a1) - 1;
  }
  *v39 = v41 & v40;
  v42 = *(_QWORD *)(a2 + 16);
  v43 = __OFSUB__(v42, 1);
  v44 = v42 - 1;
  if (v43)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v44;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_188AC4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_188000(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for ReadingHistoryDay(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_191D10();
      goto LABEL_7;
    }
    sub_190C30(v17, a3 & 1);
    v24 = sub_188000(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_189260(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))&type metadata accessor for Date, (uint64_t (*)(_QWORD))&type metadata accessor for ReadingHistoryDay);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

uint64_t sub_188C5C(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1880C8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = v17 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for Achievement(0) - 8) + 72) * v10;
        return sub_189D60(a1, v18);
      }
      return sub_189174(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_191D2C();
      goto LABEL_7;
    }
    sub_191028(v13, a3 & 1);
    v20 = sub_1880C8(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_189174(v10, a2, a1, v16);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Achievement.Key);
  __break(1u);
  return result;
}

void sub_188D78(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_188120(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_191F3C();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_191354(v13, a3 & 1);
  v18 = sub_188120(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for UIAccessibility.BooksAccessibilityAnnouncementIdentifier);
  __break(1u);
}

_OWORD *sub_188EAC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_187F9C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_QWORD *)(v18[7] + 32 * v12);
        sub_184A38(v19);
        return sub_17992C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1920DC();
      goto LABEL_7;
    }
    sub_19161C(v15, a4 & 1);
    v21 = sub_187F9C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1891F8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }
  result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_188FDC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1881AC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = type metadata accessor for Date(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1922C0();
      goto LABEL_7;
    }
    sub_191918(v17, a3 & 1);
    v24 = sub_1881AC(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_189260(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(_QWORD))&type metadata accessor for UUID, (uint64_t (*)(_QWORD))&type metadata accessor for Date);
    }
  }
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
  __break(1u);
  return result;
}

uint64_t sub_189174(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for Achievement(0);
  result = sub_189D1C(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_1891F8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_17992C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_189260(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v11 = a4[6];
  v12 = a5(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a2, v12);
  v13 = a4[7];
  v14 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a1, a3, v14);
  v16 = a4[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a4[2] = v18;
  return result;
}

unint64_t sub_18931C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1893FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_176320(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_176638((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1894C0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_189560(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_18961C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1896B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t *v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v6 = v5;
  v20 = a1;
  v21 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v20 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      v17 = sub_16BDB8(v22, v21, v23);
      v18 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v20, v8, v17);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v18 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t _sSo15UIAccessibilityV8BookCoreE36addAccessibilityStatusChangeObserver_8selectoryyp_10ObjectiveC8SelectorVtFZ_0(uint64_t result, uint64_t a2)
{
  _QWORD *v3;
  int *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v3 = (_QWORD *)result;
  if (qword_30AAE0 != -1)
    result = swift_once(&qword_30AAE0, sub_187764);
  v4 = off_30BDE0[0];
  v5 = *(_QWORD *)((char *)off_30BDE0[0] + (unint64_t)&dword_10);
  if (v5)
  {
    v6 = (void *)objc_opt_self(NSNotificationCenter);
    swift_bridgeObjectRetain(v4);
    v7 = 0;
    do
    {
      v8 = *(void **)&v4[2 * v7++ + 8];
      v9 = v8;
      v10 = objc_msgSend(v6, "defaultCenter");
      v11 = v3[3];
      v12 = sub_185554(v3, v11);
      v13 = _bridgeAnythingToObjectiveC<A>(_:)(v12, v11);
      objc_msgSend(v10, "addObserver:selector:name:object:", v13, a2, v9, 0);

      swift_unknownObjectRelease(v13);
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease(v4);
  }
  return result;
}

uint64_t sub_189920()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_189944(uint64_t a1)
{
  uint64_t v1;

  sub_187A60(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_189950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_189960(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t _sSo15UIAccessibilityV8BookCoreE28bkaxAccessibilityRemoveTimer3foryAbCE05BooksE22AnnouncementIdentifierO_tFZ_0(char *a1)
{
  char v1;
  int *v2;
  unint64_t v3;
  char v4;
  void *v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  int *v10;
  void *v11;
  int *v12;
  int *v14;
  _BYTE v15[24];

  v1 = *a1;
  if (qword_30AAE8 != -1)
    swift_once(&qword_30AAE8, sub_187894);
  swift_beginAccess(&off_30BDE8, v15, 32, 0);
  v2 = off_30BDE8;
  if (*(_QWORD *)((char *)&dword_10 + (_QWORD)off_30BDE8) && (v3 = sub_188120(v1), (v4 & 1) != 0))
  {
    v5 = *(void **)(*(_QWORD *)&stru_20.segname[(_QWORD)v2 + 16] + 8 * v3);
    swift_endAccess(v15);
    objc_msgSend(v5, "invalidate");
  }
  else
  {
    swift_endAccess(v15);
  }
  swift_beginAccess(&off_30BDE8, v15, 33, 0);
  v6 = sub_188120(v1);
  if ((v7 & 1) != 0)
  {
    v8 = v6;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(off_30BDE8);
    v10 = off_30BDE8;
    v14 = off_30BDE8;
    off_30BDE8 = (int *)0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_191F3C();
      v10 = v14;
    }
    v11 = *(void **)(*((_QWORD *)v10 + 7) + 8 * v8);
    sub_188448(v8, (uint64_t)v10);
    v12 = off_30BDE8;
    off_30BDE8 = v10;

    swift_bridgeObjectRelease(v12);
  }
  return swift_endAccess(v15);
}

unint64_t sub_189AA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_30BE10;
  if (!qword_30BE10)
  {
    v1 = objc_opt_self(UITraitCollection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_30BE10);
  }
  return result;
}

uint64_t sub_189AE0(uint64_t a1)
{
  uint64_t v1;

  return sub_187ED0(a1, *(_BYTE *)(v1 + 16));
}

unint64_t sub_189AEC()
{
  unint64_t result;

  result = qword_30BE18;
  if (!qword_30BE18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UIAccessibility.BooksAccessibilityAnnouncementIdentifier, &type metadata for UIAccessibility.BooksAccessibilityAnnouncementIdentifier);
    atomic_store(result, (unint64_t *)&qword_30BE18);
  }
  return result;
}

_BYTE *initializeBufferWithCopyOfBuffer for Achievement.Key(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t _s40BooksAccessibilityAnnouncementIdentifierOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s40BooksAccessibilityAnnouncementIdentifierOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_189C18 + 4 * byte_26C095[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_189C4C + 4 * byte_26C090[v4]))();
}

uint64_t sub_189C4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_189C54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x189C5CLL);
  return result;
}

uint64_t sub_189C68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x189C70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_189C74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189C7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_189C88(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_189C94(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UIAccessibility.BooksAccessibilityAnnouncementIdentifier()
{
  return &type metadata for UIAccessibility.BooksAccessibilityAnnouncementIdentifier;
}

uint64_t sub_189CB0()
{
  return sub_189CDC(&qword_30BEC0, &qword_30BEC8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
}

uint64_t sub_189CDC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_175E8C(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_189D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Achievement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_189D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Achievement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_189DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t MAssetWrapper.ActionTextType.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

Swift::Int sub_189DDC()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_189E20()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_189E48(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t *sub_189E88@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

id static MAssetWrapper.actionText(for:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;

  v4 = type metadata accessor for MAsset(0);
  if (!swift_dynamicCastClass(a2, v4))
    return 0;
  swift_unknownObjectRetain(a2);
  v5 = MAsset.actionText(for:)(a1);
  swift_unknownObjectRelease(a2);
  return v5;
}

id MAsset.actionText(for:)(uint64_t a1)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;

  if (objc_msgSend(v1, "isPreorder"))
  {
    if (a1 == 2 || a1 == 1 || !a1)
      return (id)sub_1A0938();
    goto LABEL_26;
  }
  v3 = objc_msgSend(v1, "priceFormatted");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

    swift_bridgeObjectRelease(v7);
    v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0)
      v8 = v5 & 0xFFFFFFFFFFFFLL;
    if (v8)
    {
      if (a1 == 2 || a1 == 1 || !a1)
        return (id)sub_1A0938();
      goto LABEL_26;
    }
  }
  result = objc_msgSend(v1, "offer");
  if (result)
  {

    if (a1 == 2 || a1 == 1 || !a1)
      return (id)sub_1A0938();
LABEL_26:
    v10 = a1;
    result = (id)_diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for MAssetWrapper.ActionTextType, &v10, &type metadata for MAssetWrapper.ActionTextType, &type metadata for Int);
    __break(1u);
  }
  return result;
}

uint64_t static MAssetWrapper.htmlStrippedStandardNotes(for:)(uint64_t a1)
{
  return sub_18A210(a1, (uint64_t (*)(uint64_t))MAsset.htmlStrippedStandardNotes.getter);
}

void MAsset.htmlStrippedStandardNotes.getter()
{
  sub_18A294((const char **)&selRef_standardNotes, &enum case for MAsset.CacheKey.htmlStrippedStandardNotes(_:));
}

uint64_t static MAssetWrapper.htmlStrippedStandardDescription(for:)(uint64_t a1)
{
  return sub_18A210(a1, (uint64_t (*)(uint64_t))MAsset.htmlStrippedStandardDescription.getter);
}

uint64_t sub_18A210(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for MAsset(0);
  v5 = swift_dynamicCastClass(a1, v4);
  if (v5)
  {
    v6 = swift_unknownObjectRetain(a1);
    v5 = a2(v6);
    swift_unknownObjectRelease(a1);
  }
  return v5;
}

void MAsset.htmlStrippedStandardDescription.getter()
{
  sub_18A294((const char **)&selRef_standardDescription, &enum case for MAsset.CacheKey.htmlStrippedStandardDescription(_:));
}

void sub_18A294(const char **a1, unsigned int *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  const char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;

  v5 = type metadata accessor for MAsset.CacheKey(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CharacterSet(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v30 = v2;
  v14 = objc_msgSend(v2, v13);
  if (v14)
  {
    v15 = v14;
    v29 = a2;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    v18 = v17;
    CharacterSet.init(charactersIn:)(2506300, 0xE300000000000000);
    v32 = v16;
    v33 = v18;
    v19 = sub_18A99C();
    StringProtocol.rangeOfCharacter(from:options:range:)(v12, 0, 0, 0, 1, &type metadata for String, v19);
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if ((v21 & 1) != 0)
      goto LABEL_5;
    swift_bridgeObjectRelease(v18);
    v22 = *v29;
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
    v23(v8, v22, v5);
    MAsset.cachedValue(for:)(&v32, v8);
    v24 = *(void (**)(char *, uint64_t))(v6 + 8);
    v24(v8, v5);
    if (v34)
    {
      if ((swift_dynamicCast(&v31, &v32, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
LABEL_5:

        return;
      }
    }
    else
    {
      sub_16D8AC((uint64_t)&v32);
    }
    v25 = objc_msgSend(v15, "im_stringByStrippingHTML");

    if (v25)
    {
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v34 = &type metadata for String;
      v32 = v26;
      v33 = v28;
      v23(v8, v22, v5);
      swift_bridgeObjectRetain(v28);
      MAsset.cache(object:for:)(&v32, v8);
      v24(v8, v5);
      sub_184A38(&v32);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_18A50C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;

  v6 = type metadata accessor for MAsset(0);
  if (swift_dynamicCastClass(a3, v6)
    && (v7 = swift_unknownObjectRetain(a3), a4(v7), v9 = v8, swift_unknownObjectRelease(a3), v9))
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = 0;
  }
  return v10;
}

uint64_t static MAssetWrapper.name(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = type metadata accessor for MResourceType(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MResourceType.init(_:)(a1);
  v7 = MResourceType.name.getter(v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

id MAssetWrapper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MAssetWrapper();
  return objc_msgSendSuper2(&v2, "init");
}

id MAssetWrapper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MAssetWrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s8BookCore13MAssetWrapperC5asset4withSo8BFMAsset_pSgSDys11AnyHashableVypG_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  __int128 v27;
  __int128 v28;

  v2 = type metadata accessor for MCatalogServiceConfig(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MResource.Keys(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for MResource.Keys.type(_:), v6);
  v11 = MResource.Keys.rawValue.getter(v10);
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v11;
  v25 = v13;
  AnyHashable.init<A>(_:)(v26, &v24, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_188098((uint64_t)v26), (v15 & 1) != 0))
  {
    sub_17666C(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v27);
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
  }
  sub_176638((uint64_t)v26);
  if (!*((_QWORD *)&v28 + 1))
  {
    sub_16D8AC((uint64_t)&v27);
    return 0;
  }
  if ((swift_dynamicCast(&v24, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    return 0;
  v16 = v25;
  v17 = static MResourceType.classType(for:)(v24, v25);
  swift_bridgeObjectRelease(v16);
  if (!v17)
    return 0;
  v18 = qword_30AB28;
  swift_bridgeObjectRetain(a1);
  if (v18 != -1)
    swift_once(&qword_30AB28, sub_19EFD0);
  v19 = sub_178770(v2, (uint64_t)qword_30C8F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v19, v2);
  result = dispatch thunk of MResource.__allocating_init(with:config:)(a1, v5);
  if (result)
  {
    v21 = (void *)result;
    v22 = type metadata accessor for MAsset(0);
    result = swift_dynamicCastClass(v21, v22);
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

unint64_t sub_18A99C()
{
  unint64_t result;

  result = qword_30BEE0;
  if (!qword_30BEE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_30BEE0);
  }
  return result;
}

uint64_t type metadata accessor for MAssetWrapper()
{
  return objc_opt_self(BCMAssetWrapper);
}

unint64_t sub_18AA04()
{
  unint64_t result;

  result = qword_30BEE8;
  if (!qword_30BEE8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for MAssetWrapper.ActionTextType, &type metadata for MAssetWrapper.ActionTextType);
    atomic_store(result, (unint64_t *)&qword_30BEE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MAssetWrapper.ActionTextType()
{
  return &type metadata for MAssetWrapper.ActionTextType;
}

unint64_t sub_18AA58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_16B968(&qword_30C340);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1765E0(v7, (uint64_t)&v16, &qword_30C348);
    v8 = v16;
    v9 = v17;
    result = sub_187F9C(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_17992C(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18AB8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_16B968(&qword_30C3D0);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1765E0(v7, (uint64_t)v16, &qword_30C3D8);
    result = sub_188098((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_17992C(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

NSString sub_18ACCC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_30BF20 = (uint64_t)result;
  return result;
}

id static NSNotificationName.rcDataContainerConfigDidChange.getter()
{
  if (qword_30AAF0 != -1)
    swift_once(&qword_30AAF0, sub_18ACCC);
  return (id)qword_30BF20;
}

uint64_t sub_18AD44(uint64_t a1)
{
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6;
  _BYTE v7[24];

  swift_beginAccess(v1 + 16, v7, 33, 0);
  swift_bridgeObjectRetain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + 16));
  v6 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = 0x8000000000000000;
  sub_1925FC(a1, (uint64_t)sub_1925BC, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v6);
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v1 + 16) = v6;
  swift_bridgeObjectRelease(v4);
  return swift_endAccess(v7);
}

uint64_t sub_18ADDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_18AE00()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

NSString sub_18AE34()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_313840 = (uint64_t)result;
  return result;
}

uint64_t RCDataContaining.booksDefaultsValue.getter@<X0>(uint64_t a1@<X1>, Class *a2@<X8>)
{
  uint64_t v3;
  Class isa;
  uint64_t result;

  v3 = (*(uint64_t (**)(void))(a1 + 8))();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  result = swift_bridgeObjectRelease(v3);
  *a2 = isa;
  return result;
}

uint64_t RCDataContaining.booksDefaultsValues()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_16B968(&qword_30BF30);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v7 = sub_16B968(&qword_30BF40);
  v8 = sub_189CDC(&qword_30BF48, &qword_30BF30, (uint64_t)&protocol conformance descriptor for AsyncCompactMapSequence<A, B>);
  return AsyncMapSequence.init(_:transform:)(v6, &unk_30BF38, 0, v4, v7, v8);
}

uint64_t sub_18AFA8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch(sub_18AFC4, 0, 0);
}

uint64_t sub_18AFC4()
{
  uint64_t v0;
  NSDictionary *v1;

  v1 = *(NSDictionary **)(v0 + 16);
  v1->super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_18B014()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RCDataContainer()), "init");
  qword_30BF28 = (uint64_t)result;
  return result;
}

id static RCDataContainer.default.getter()
{
  if (qword_30AB00 != -1)
    swift_once(&qword_30AB00, sub_18B014);
  return (id)qword_30BF28;
}

uint64_t RCDataContainer.bridge.getter()
{
  return sub_18B190(&OBJC_IVAR___BCRCDataContainer_bridge);
}

uint64_t RCDataContainer.bridge.setter(uint64_t a1)
{
  return sub_18B24C(a1, &OBJC_IVAR___BCRCDataContainer_bridge);
}

uint64_t (*RCDataContainer.bridge.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCRCDataContainer_bridge, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_18B140(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(a1 + *a3);
  swift_beginAccess(v3, v5, 0, 0);
  return (id)swift_unknownObjectRetain(*v3);
}

uint64_t RCDataContainer.sessionHosting.getter()
{
  return sub_18B190(&OBJC_IVAR___BCRCDataContainer_sessionHosting);
}

uint64_t sub_18B190(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _BYTE v4[24];

  v2 = (_QWORD *)(v1 + *a1);
  swift_beginAccess(v2, v4, 0, 0);
  return swift_unknownObjectRetain(*v2);
}

uint64_t sub_18B1E0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (uint64_t *)(a1 + *a4);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = *v5;
  *v5 = a3;
  swift_unknownObjectRetain(a3);
  return swift_unknownObjectRelease(v6);
}

uint64_t RCDataContainer.sessionHosting.setter(uint64_t a1)
{
  return sub_18B24C(a1, &OBJC_IVAR___BCRCDataContainer_sessionHosting);
}

uint64_t sub_18B24C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(v2 + *a2);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = a1;
  return swift_unknownObjectRelease(v5);
}

uint64_t (*RCDataContainer.sessionHosting.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCRCDataContainer_sessionHosting, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_18B364(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  char *v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  NSObject *v53;
  uint64_t result;
  id v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  NSString v75;
  void *v76;
  id v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void (*v101)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v102;
  objc_class *ObjectType;
  void **aBlock;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t (*v108)();
  uint64_t v109;
  objc_super v110;

  v2 = v1;
  v102 = a1;
  ObjectType = (objc_class *)swift_getObjectType(v1);
  v3 = sub_16B968(&qword_30C2D8);
  __chkstk_darwin(v3);
  v86 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v83 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_16B968(&qword_30C2E0);
  v84 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v88 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v100 = *(_QWORD *)(v7 - 8);
  v101 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v7;
  __chkstk_darwin(v7);
  v99 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v98 = *(_QWORD *)(v9 - 8);
  v93 = v9;
  __chkstk_darwin(v9);
  v97 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR___BCRCDataContainer_bridge] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BCRCDataContainer_sessionHosting] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BCRCDataContainer_cancellables] = &_swiftEmptySetSingleton;
  v17 = OBJC_IVAR___BCRCDataContainer_isTimerSuspended;
  v18 = sub_16B968(&qword_30C2E8);
  v19 = swift_allocObject(v18, 24, 7);
  *(_QWORD *)&v2[v17] = v19;
  *(_QWORD *)&v2[OBJC_IVAR___BCRCDataContainer_stateHandler] = 0;
  v2[OBJC_IVAR___BCRCDataContainer_overrideHasLoadedFromServer] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___BCRCDataContainer_timeout] = 0x4014000000000000;
  *(_DWORD *)(v19 + 20) = 0;
  *(_BYTE *)(v19 + 16) = 0;
  *(_QWORD *)&v2[OBJC_IVAR___BCRCDataContainer_refreshInterval] = 0x4082C00000000000;
  *(_QWORD *)&v2[OBJC_IVAR___BCRCDataContainer_dispatchTimer] = 0;
  v91 = OBJC_IVAR___BCRCDataContainer_accessQueue;
  v20 = sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
  v21 = v2;
  static DispatchQoS.utility.getter();
  aBlock = (void **)_swiftEmptyArrayStorage;
  v22 = sub_16BDB8((unint64_t *)&qword_30B888, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v95 = v22;
  v23 = sub_16B968(&qword_30B890);
  v94 = v23;
  v96 = (void (*)(char *, uint64_t))sub_189CDC((unint64_t *)&qword_30B898, &qword_30B890, (uint64_t)&protocol conformance descriptor for [A]);
  v90 = v13;
  v24 = v11;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v23, v96, v11, v22);
  v92 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  v25 = v97;
  v98 = *(_QWORD *)(v98 + 104);
  ((void (*)(char *))v98)(v97);
  v26 = v25;
  v27 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001BLL, 0x80000000002161C0, v16, v13, v25, 0);
  *(_QWORD *)&v2[v91] = v27;
  *(_QWORD *)&v21[OBJC_IVAR___BCRCDataContainer_aq_currentDataSource] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___BCRCDataContainer_aq_stagedDataSource] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___BCRCDataContainer_currentABData] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___BCRCDataContainer_stagedABData] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___BCRCDataContainer_treatmentData] = 0;
  v28 = OBJC_IVAR___BCRCDataContainer_configVersionCounter;
  v29 = sub_16B968(&qword_30C300);
  v30 = swift_allocObject(v29, 28, 7);
  *(_DWORD *)(v30 + 24) = 0;
  *(_QWORD *)(v30 + 16) = 0;
  *(_QWORD *)&v21[v28] = v30;
  v91 = OBJC_IVAR___BCRCDataContainer_watchedValuesQueue;
  v32 = v99;
  v31 = v100;
  v33 = v101;
  (*(void (**)(char *, _QWORD, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))(v100 + 104))(v99, enum case for DispatchQoS.QoSClass.default(_:), v101);
  v34 = static OS_dispatch_queue.global(qos:)(v32);
  v35 = (*(uint64_t (**)(char *, void (*)(_QWORD, _QWORD, _QWORD, _QWORD)))(v31 + 8))(v32, v33);
  static DispatchQoS.unspecified.getter(v35);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v36 = v90;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v94, v96, v24, v95);
  ((void (*)(char *, _QWORD, uint64_t))v98)(v26, v92, v93);
  v37 = v20;
  v38 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000002BLL, 0x80000000002161E0, v16, v36, v26, v34);
  *(_QWORD *)&v21[v91] = v38;
  v39 = OBJC_IVAR___BCRCDataContainer_configChangeHandler;
  v40 = sub_16B968(&qword_30C308);
  v41 = swift_allocObject(v40, 28, 7);
  *(_DWORD *)(v41 + 24) = 0;
  *(_QWORD *)(v41 + 16) = 0;
  *(_QWORD *)&v21[v39] = v41;
  *(_QWORD *)&v21[OBJC_IVAR___BCRCDataContainer____lazy_storage___overrides] = 0;
  v42 = v102;
  *(_QWORD *)&v21[OBJC_IVAR___BCRCDataContainer_configManager] = v102;
  v43 = v42;

  v110.receiver = v21;
  v110.super_class = ObjectType;
  v44 = (char *)objc_msgSendSuper2(&v110, "init");
  v45 = static os_log_type_t.default.getter(v44);
  if (qword_30AB08 != -1)
    swift_once(&qword_30AB08, sub_1967E0);
  v46 = (id)qword_30C710;
  os_log(_:dso:log:_:_:)(v45, &dword_0);

  objc_msgSend(v43, "addObserver:", v44);
  sub_18BF40();
  v47 = *(void **)&v44[OBJC_IVAR___BCRCDataContainer_accessQueue];
  v48 = swift_allocObject(&unk_2944F0, 49, 7);
  *(_QWORD *)(v48 + 16) = v44;
  *(_BYTE *)(v48 + 24) = 1;
  *(_QWORD *)(v48 + 32) = 0;
  *(_QWORD *)(v48 + 40) = 0;
  *(_BYTE *)(v48 + 48) = 0;
  v49 = swift_allocObject(&unk_294518, 32, 7);
  *(_QWORD *)(v49 + 16) = sub_18E6D4;
  *(_QWORD *)(v49 + 24) = v48;
  v108 = sub_185BBC;
  v109 = v49;
  aBlock = _NSConcreteStackBlock;
  v105 = 1107296256;
  v106 = sub_175BAC;
  v107 = &unk_294530;
  v50 = _Block_copy(&aBlock);
  v51 = v109;
  v52 = v44;
  v53 = v47;
  swift_retain(v49);
  swift_release(v51);
  dispatch_sync(v53, v50);

  _Block_release(v50);
  LOBYTE(v53) = swift_isEscapingClosureAtFileLocation(v49, "", 107, 385, 26, 1);
  swift_release(v48);
  result = swift_release(v49);
  if ((v53 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v102 = (id)objc_opt_self(NSNotificationCenter);
    v55 = objc_msgSend(v102, "defaultCenter");
    v56 = v52;
    v57 = v85;
    NSNotificationCenter.publisher(for:object:)(UIApplicationDidEnterBackgroundNotification, 0);

    ObjectType = (objc_class *)v43;
    v58 = v37;
    aBlock = (void **)((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
    v59 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v101 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v59 - 8) + 56);
    v60 = (uint64_t)v86;
    v101(v86, 1, 1, v59);
    v61 = sub_16BDB8(&qword_30C310, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
    v100 = v61;
    v99 = (char *)sub_193094();
    v62 = v88;
    v63 = v87;
    Publisher.receive<A>(on:options:)(&aBlock, v60, v87, v37, v61, v99);
    sub_1766A8(v60, &qword_30C2D8);

    v98 = *(_QWORD *)(v83 + 8);
    ((void (*)(char *, uint64_t))v98)(v57, v63);
    v64 = swift_allocObject(&unk_294568, 24, 7);
    swift_unknownObjectWeakInit(v64 + 16, v56);
    v97 = (char *)sub_189CDC((unint64_t *)&unk_30C320, &qword_30C2E0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v65 = v89;
    v66 = Publisher<>.sink(receiveValue:)(sub_193110, v64, v89, v97);
    swift_release(v64);
    v96 = *(void (**)(char *, uint64_t))(v84 + 8);
    v96(v62, v65);
    v67 = &v56[OBJC_IVAR___BCRCDataContainer_cancellables];
    swift_beginAccess(&v56[OBJC_IVAR___BCRCDataContainer_cancellables], &aBlock, 33, 0);
    AnyCancellable.store(in:)(v67);
    swift_endAccess(&aBlock);
    swift_release(v66);
    v68 = objc_msgSend(v102, "defaultCenter");
    NSNotificationCenter.publisher(for:object:)(UIApplicationWillEnterForegroundNotification, 0);

    aBlock = (void **)((uint64_t (*)(void))static OS_dispatch_queue.main.getter)();
    v101(v60, 1, 1, v59);
    Publisher.receive<A>(on:options:)(&aBlock, v60, v63, v58, v100, v99);
    sub_1766A8(v60, &qword_30C2D8);

    ((void (*)(char *, uint64_t))v98)(v57, v63);
    v69 = swift_allocObject(&unk_294568, 24, 7);
    swift_unknownObjectWeakInit(v69 + 16, v56);
    v70 = Publisher<>.sink(receiveValue:)(sub_193130, v69, v65, v97);
    swift_release(v69);
    v96(v62, v65);
    swift_beginAccess(v67, &aBlock, 33, 0);
    AnyCancellable.store(in:)(v67);
    swift_endAccess(&aBlock);
    v71 = swift_release(v70);
    v72 = (void *)static OS_dispatch_queue.main.getter(v71);
    v73 = swift_allocObject(&unk_294590, 24, 7);
    swift_unknownObjectUnownedInit(v73 + 16, v56);
    v74 = objc_allocWithZone((Class)BUOSStateHandler);
    swift_retain(v73);
    v75 = String._bridgeToObjectiveC()();
    v108 = sub_193174;
    v109 = v73;
    aBlock = _NSConcreteStackBlock;
    v105 = 1107296256;
    v106 = sub_190B48;
    v107 = &unk_2945A8;
    v76 = _Block_copy(&aBlock);
    v77 = objc_msgSend(v74, "initWithTitle:queue:block:", v75, v72, v76);

    _Block_release(v76);
    v78 = v109;
    swift_release(v73);
    swift_release(v78);
    v79 = *(void **)&v56[OBJC_IVAR___BCRCDataContainer_stateHandler];
    *(_QWORD *)&v56[OBJC_IVAR___BCRCDataContainer_stateHandler] = v77;

    v81 = static os_log_type_t.default.getter(v80);
    v82 = (id)qword_30C710;
    os_log(_:dso:log:_:_:)(v81, &dword_0);

    return (uint64_t)v56;
  }
  return result;
}

uint64_t sub_18BF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v24 - v12;
  v14 = *(void **)(v0 + OBJC_IVAR___BCRCDataContainer_accessQueue);
  v26 = v0;
  v25 = v14;
  static DispatchTime.now()(v25);
  + infix(_:_:)(v11, 5.0);
  v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  v27(v11, v7);
  v15 = swift_allocObject(&unk_294568, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16, v0);
  aBlock[4] = sub_19317C;
  v33 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_2945D0;
  v16 = _Block_copy(aBlock);
  v17 = swift_retain(v15);
  static DispatchQoS.unspecified.getter(v17);
  v31 = _swiftEmptyArrayStorage;
  v18 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_16B968((uint64_t *)&unk_30C330);
  v20 = sub_189CDC((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v19, v20, v1, v18);
  v21 = v25;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v13, v6, v3, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  v27(v13, v7);
  v22 = v33;
  swift_release(v15);
  swift_release(v22);
  return sub_18CCD0();
}

_BYTE *sub_18C1F4(_BYTE *result, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;

  if ((*result & 1) == 0)
  {
    v2 = result;
    v3 = *(_QWORD *)(a2 + OBJC_IVAR___BCRCDataContainer_dispatchTimer);
    if (v3)
    {
      swift_getObjectType(*(_QWORD *)(a2 + OBJC_IVAR___BCRCDataContainer_dispatchTimer));
      swift_unknownObjectRetain(v3);
      OS_dispatch_source.suspend()();
      result = (_BYTE *)swift_unknownObjectRelease(v3);
    }
    *v2 = 1;
  }
  return result;
}

void sub_18C264(uint64_t a1, uint64_t a2, void (*a3)(os_unfair_lock_s *, void *))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  os_unfair_lock_s *v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(os_unfair_lock_s **)(Strong + OBJC_IVAR___BCRCDataContainer_isTimerSuspended);
    swift_retain(v7);
    os_unfair_lock_lock(v7 + 5);
    a3(v7 + 4, v6);
    os_unfair_lock_unlock(v7 + 5);
    swift_release(v7);

  }
}

_BYTE *sub_18C310(_BYTE *result, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;

  if (*result == 1)
  {
    v2 = result;
    v3 = *(_QWORD *)(a2 + OBJC_IVAR___BCRCDataContainer_dispatchTimer);
    if (v3)
    {
      swift_getObjectType(*(_QWORD *)(a2 + OBJC_IVAR___BCRCDataContainer_dispatchTimer));
      swift_unknownObjectRetain(v3);
      OS_dispatch_source.resume()();
      result = (_BYTE *)swift_unknownObjectRelease(v3);
    }
    *v2 = 0;
  }
  return result;
}

uint64_t sub_18C380(uint64_t a1)
{
  uint64_t v2;
  id v3;
  void *Strong;
  uint64_t v5;
  uint64_t v6;

  v2 = static os_log_type_t.default.getter(a1);
  if (qword_30AB08 != -1)
    swift_once(&qword_30AB08, sub_1967E0);
  v3 = (id)qword_30C710;
  os_log(_:dso:log:_:_:)(v2, &dword_0);

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(a1 + 16);
  v5 = RCDataContainer.configs.getter();

  v6 = sub_19B930(v5);
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t RCDataContainer.configs.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  char *v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void **aBlock;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  void *v25;
  uint64_t (*v26)();
  uint64_t v27;

  v1 = OBJC_IVAR___BCRCDataContainer_accessQueue;
  v2 = *(void **)&v0[OBJC_IVAR___BCRCDataContainer_accessQueue];
  v3 = swift_allocObject(&unk_294320, 49, 7);
  *(_QWORD *)(v3 + 16) = v0;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 48) = 1;
  v4 = swift_allocObject(&unk_294348, 32, 7);
  *(_QWORD *)(v4 + 16) = sub_18E6D4;
  *(_QWORD *)(v4 + 24) = v3;
  v26 = sub_178DC4;
  v27 = v4;
  aBlock = _NSConcreteStackBlock;
  v23 = 1107296256;
  v24 = sub_175BAC;
  v25 = &unk_294360;
  v5 = _Block_copy(&aBlock);
  v6 = v27;
  v7 = v2;
  v8 = v0;
  swift_retain(v4);
  swift_release(v6);
  dispatch_sync(v7, v5);

  _Block_release(v5);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v4, "", 107, 385, 26, 1);
  swift_release(v3);
  result = swift_release(v4);
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v21 = &_swiftEmptyDictionarySingleton;
    v10 = *(void **)&v0[v1];
    v11 = swift_allocObject(&unk_294398, 32, 7);
    *(_QWORD *)(v11 + 16) = v8;
    *(_QWORD *)(v11 + 24) = &v21;
    v12 = swift_allocObject(&unk_2943C0, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_18F2BC;
    *(_QWORD *)(v12 + 24) = v11;
    v26 = sub_185BBC;
    v27 = v12;
    aBlock = _NSConcreteStackBlock;
    v23 = 1107296256;
    v24 = sub_175BAC;
    v25 = &unk_2943D8;
    v13 = _Block_copy(&aBlock);
    v14 = v27;
    v15 = v8;
    v16 = v10;
    swift_retain(v12);
    swift_release(v14);
    dispatch_sync(v16, v13);

    _Block_release(v13);
    LOBYTE(v16) = swift_isEscapingClosureAtFileLocation(v12, "", 107, 469, 26, 1);
    result = swift_release(v12);
    if ((v16 & 1) == 0)
    {
      v17 = (uint64_t)v21;
      swift_bridgeObjectRetain(v21);
      v18 = sub_18F2D4();
      v19 = sub_18F320(v17, (uint64_t)v18);
      swift_bridgeObjectRelease(v17);
      swift_bridgeObjectRelease(v18);
      v20 = v21;
      swift_release(v11);
      swift_bridgeObjectRelease(v20);
      return v19;
    }
  }
  __break(1u);
  return result;
}

id RCDataContainer.__deallocating_deinit()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_super v7;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v3 = OBJC_IVAR___BCRCDataContainer_dispatchTimer;
  v4 = *(_QWORD *)&v0[OBJC_IVAR___BCRCDataContainer_dispatchTimer];
  if (v4)
  {
    swift_getObjectType(v4);
    swift_unknownObjectRetain(v4);
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease(v4);
    v5 = *(_QWORD *)&v1[v3];
  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)&v1[v3] = 0;
  swift_unknownObjectRelease(v5);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "dealloc");
}

uint64_t static RCDataContainer.changeNotificationConfigValue.getter()
{
  return 0x6769666E6F63;
}

void sub_18C8E0(uint64_t a1)
{
  uint64_t v1;
  char *Strong;
  void *v3;
  id v4;
  void *v5;
  unint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    if (*(_QWORD *)&Strong[OBJC_IVAR___BCRCDataContainer_aq_currentDataSource])
    {

    }
    else
    {
      Strong[OBJC_IVAR___BCRCDataContainer_overrideHasLoadedFromServer] = 1;
      v4 = objc_msgSend(*(id *)&Strong[OBJC_IVAR___BCRCDataContainer_configManager], "allLogicalValuesFromNamespace:allowsOnlyDefaultSource:", CFSTR("BooksDefaults"), 1);
      if (v4)
      {
        v5 = v4;
        v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

      }
      else
      {
        v6 = sub_18AA58((uint64_t)_swiftEmptyArrayStorage);
      }
      sub_18C9EC(1, 0, v6, 0);

      swift_bridgeObjectRelease(v6);
    }
  }
}

void sub_18C9EC(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v35[24];

  v5 = v4;
  v10 = type metadata accessor for DispatchPredicate(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v14 = *(void **)(v5 + OBJC_IVAR___BCRCDataContainer_accessQueue);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    return;
  }
  v16 = *(void **)(v5 + OBJC_IVAR___BCRCDataContainer_configManager);
  v17 = objc_msgSend(v16, "allLogicalValuesFromNamespace:allowsOnlyDefaultSource:", CFSTR("BooksDefaults"), a4 & 1);
  if (v17)
  {
    v18 = v17;
    v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v17, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  }
  else
  {
    v19 = 0;
  }
  if ((objc_msgSend(v16, "configurationLoaded") & 1) != 0)
  {
    v20 = 1;
    if (a3)
    {
LABEL_7:
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRelease(v19);
      goto LABEL_11;
    }
  }
  else
  {
    v20 = *(unsigned __int8 *)(v5 + OBJC_IVAR___BCRCDataContainer_overrideHasLoadedFromServer);
    if (a3)
      goto LABEL_7;
  }
  if (!v19)
    return;
  a3 = v19;
LABEL_11:
  v21 = OBJC_IVAR___BCRCDataContainer_aq_currentDataSource;
  if (v20 && *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_aq_currentDataSource))
  {
    v22 = OBJC_IVAR___BCRCDataContainer_aq_stagedDataSource;
    v23 = *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_aq_stagedDataSource);
    if (v23)
    {
      swift_retain(*(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_aq_stagedDataSource));
      sub_18AD44(a3);
      swift_release(v23);
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      v28 = type metadata accessor for DataSource();
      v29 = swift_allocObject(v28, 24, 7);
      *(_QWORD *)(v29 + 16) = &_swiftEmptyDictionarySingleton;
      swift_beginAccess(v29 + 16, v35, 1, 0);
      v30 = *(_QWORD *)(v29 + 16);
      *(_QWORD *)(v29 + 16) = a3;
      swift_bridgeObjectRelease(v30);
      v31 = *(_QWORD *)(v5 + v22);
      *(_QWORD *)(v5 + v22) = v29;
      swift_release(v31);
    }
    v32 = *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_stagedABData);
    if (a2)
    {
      *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_stagedABData) = a2;
      swift_retain(a2);
      swift_release(v32);
    }
    else if (!v32)
    {
      v33 = *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_currentABData);
      *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_stagedABData) = v33;
      swift_retain(v33);
    }
  }
  else
  {
    v24 = type metadata accessor for FrozenDataSource();
    v25 = swift_allocObject(v24, 24, 7);
    *(_QWORD *)(v25 + 16) = a3;
    v26 = *(_QWORD *)(v5 + v21);
    *(_QWORD *)(v5 + v21) = v25;
    swift_release(v26);
    if (a2)
    {
      v27 = *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_currentABData);
      *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_currentABData) = a2;
      swift_retain_n(a2, 2);
      swift_release(v27);
      sub_18D8CC(0);
      swift_release(a2);
    }
    if ((a1 & 1) != 0)
      sub_18DE48();
  }
}

uint64_t sub_18CCD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BooksDefaults"));
  v10 = v9;
  v11 = *(void **)(v0 + OBJC_IVAR___BCRCDataContainer_configManager);
  objc_msgSend(v11, "refreshNamespace:", CFSTR("BooksDefaults"));
  sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = swift_allocObject(&unk_294568, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v1);
  v14 = (_QWORD *)swift_allocObject(&unk_2946A8, 48, 7);
  v14[2] = v13;
  v14[3] = v11;
  v14[4] = v8;
  v14[5] = v10;
  aBlock[4] = sub_1932E8;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_172474;
  aBlock[3] = &unk_2946C0;
  v15 = _Block_copy(aBlock);
  v16 = v26;
  v17 = v11;
  v18 = swift_release(v16);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_16B968((uint64_t *)&unk_30C330);
  v21 = sub_189CDC((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v2, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v23);
}

uint64_t sub_18CF44(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  double v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  _QWORD aBlock[5];
  _QWORD *v66;
  char v67[32];

  v60 = a2;
  v61 = a4;
  v57 = a3;
  v5 = type metadata accessor for DispatchTimeInterval(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v63 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v62 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v64 = (char *)&v49 - v12;
  v13 = type metadata accessor for DispatchWorkItemFlags(0);
  v58 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  __chkstk_darwin(v13);
  v56 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v67, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v22 = (char *)result;
    v50 = v9;
    v51 = v8;
    v52 = v6;
    v53 = v5;
    v49 = OBJC_IVAR___BCRCDataContainer_dispatchTimer;
    v23 = *(_QWORD *)(result + OBJC_IVAR___BCRCDataContainer_dispatchTimer);
    if (v23)
    {
      swift_getObjectType(*(_QWORD *)(result + OBJC_IVAR___BCRCDataContainer_dispatchTimer));
      swift_unknownObjectRetain(v23);
      OS_dispatch_source.cancel()();
      swift_unknownObjectRelease(v23);
    }
    sub_16F6BC(0, &qword_30C3A0, OS_dispatch_source_ptr);
    sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
    v24 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    v25 = sub_16BDB8(&qword_30C3A8, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
    v26 = sub_16B968(&qword_30C3B0);
    v27 = sub_189CDC(&qword_30C3B8, &qword_30C3B0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v17, v25);
    v28 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v20, v24);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    ObjectType = swift_getObjectType(v28);
    v30 = (_QWORD *)swift_allocObject(&unk_2946F8, 40, 7);
    v32 = v60;
    v31 = v61;
    v33 = v57;
    v30[2] = v60;
    v30[3] = v33;
    v30[4] = v31;
    aBlock[4] = sub_193320;
    v66 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_172474;
    aBlock[3] = &unk_294710;
    v34 = _Block_copy(aBlock);
    v35 = v32;
    v36 = swift_bridgeObjectRetain(v31);
    static DispatchQoS.unspecified.getter(v36);
    v37 = v56;
    sub_18D400();
    OS_dispatch_source.setEventHandler(qos:flags:handler:)(v16, v37, v34, ObjectType);
    _Block_release(v34);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v59);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v55);
    v38 = swift_release(v66);
    v39 = v62;
    static DispatchTime.now()(v38);
    v40 = OBJC_IVAR___BCRCDataContainer_refreshInterval;
    v41 = v64;
    + infix(_:_:)(v39, *(double *)&v22[OBJC_IVAR___BCRCDataContainer_refreshInterval]);
    v42 = *(void (**)(char *, uint64_t))(v63 + 8);
    v43 = v50;
    v42(v39, v50);
    v44 = *(double *)&v22[v40];
    v45 = v51;
    *v51 = 0;
    v46 = v52;
    v47 = v53;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v52 + 104))(v45, enum case for DispatchTimeInterval.nanoseconds(_:), v53);
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v41, v45, ObjectType, v44);
    (*(void (**)(_QWORD *, uint64_t))(v46 + 8))(v45, v47);
    v42(v41, v43);
    OS_dispatch_source.activate()();
    v48 = *(_QWORD *)&v22[v49];
    *(_QWORD *)&v22[v49] = v28;

    return swift_unknownObjectRelease(v48);
  }
  return result;
}

uint64_t sub_18D400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = sub_16B968((uint64_t *)&unk_30C330);
  v3 = sub_189CDC((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330, (uint64_t)&protocol conformance descriptor for [A]);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

id RCDataContainer.configurationLoaded.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(BRCConfigurationManager), "sharedInstance");
  v1 = objc_msgSend(v0, "configurationLoaded");

  return v1;
}

Swift::Bool __swiftcall RCDataContainer.waitForConfiguration(_:)(Swift::Double a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR___BCRCDataContainer_configManager), "waitForCachedConfigurationLoaded:", a1);
}

Swift::Void __swiftcall RCDataContainer.deployStagedDataIfNeeded()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  char *v7;
  char isEscapingClosureAtFileLocation;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  double v17;
  __int128 aBlock;
  __int128 v19;
  uint64_t (*v20)();
  uint64_t v21;
  char v22;

  v22 = 0;
  v1 = *(void **)&v0[OBJC_IVAR___BCRCDataContainer_accessQueue];
  v2 = swift_allocObject(&unk_294410, 32, 7);
  *(_QWORD *)(v2 + 16) = v0;
  *(_QWORD *)(v2 + 24) = &v22;
  v3 = swift_allocObject(&unk_294438, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_18FBCC;
  *(_QWORD *)(v3 + 24) = v2;
  v20 = sub_185BBC;
  v21 = v3;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v19 = sub_175BAC;
  *((_QWORD *)&v19 + 1) = &unk_294450;
  v4 = _Block_copy(&aBlock);
  v5 = v21;
  v6 = v1;
  v7 = v0;
  swift_retain(v3);
  swift_release(v5);
  dispatch_sync(v6, v4);

  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 107, 289, 26, 1);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    if (v22 == 1)
    {
      v9 = *(_QWORD **)&v7[OBJC_IVAR___BCRCDataContainer_currentABData];
      v10 = OBJC_IVAR___BCRCDataContainer_stagedABData;
      v11 = *(_QWORD *)&v7[OBJC_IVAR___BCRCDataContainer_stagedABData];
      *(_QWORD *)&v7[OBJC_IVAR___BCRCDataContainer_currentABData] = v11;
      v12 = *(_QWORD *)&v7[v10];
      *(_QWORD *)&v7[v10] = 0;
      swift_retain(v11);
      swift_release(v12);
      sub_18D8CC(v9);
      sub_18DE48();
      v13 = RCDataContainer.configs.getter();
      if (*(_QWORD *)(v13 + 16) && (v14 = sub_187F9C(0xD000000000000014, 0x8000000000215D20), (v15 & 1) != 0))
      {
        sub_17666C(*(_QWORD *)(v13 + 56) + 32 * v14, (uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v19 = 0u;
      }
      swift_bridgeObjectRelease(v13);
      if (*((_QWORD *)&v19 + 1))
      {
        if ((swift_dynamicCast(&v17, &aBlock, (char *)&type metadata for Any + 8, &type metadata for Double, 6) & 1) != 0
          && *(double *)&v7[OBJC_IVAR___BCRCDataContainer_refreshInterval] != v17)
        {
          *(double *)&v7[OBJC_IVAR___BCRCDataContainer_refreshInterval] = v17;
          sub_18CCD0();
        }
        swift_release(v2);
        v16 = v9;
        goto LABEL_14;
      }
      swift_release(v9);
      sub_1766A8((uint64_t)&aBlock, &qword_30ABB0);
    }
    v16 = (_QWORD *)v2;
LABEL_14:
    swift_release(v16);
    return;
  }
  __break(1u);
}

uint64_t sub_18D820(uint64_t result, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v2 = OBJC_IVAR___BCRCDataContainer_aq_stagedDataSource;
  v3 = *(_QWORD *)(result + OBJC_IVAR___BCRCDataContainer_aq_stagedDataSource);
  if (v3)
  {
    v5 = result;
    swift_beginAccess(v3 + 16, v11, 0, 0);
    v6 = *(_QWORD *)(v3 + 16);
    v7 = type metadata accessor for FrozenDataSource();
    v8 = swift_allocObject(v7, 24, 7);
    *(_QWORD *)(v8 + 16) = v6;
    v9 = *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_aq_currentDataSource);
    *(_QWORD *)(v5 + OBJC_IVAR___BCRCDataContainer_aq_currentDataSource) = v8;
    swift_bridgeObjectRetain(v6);
    swift_release(v9);
    v10 = *(_QWORD *)(v5 + v2);
    *(_QWORD *)(v5 + v2) = 0;
    result = swift_release(v10);
    *a2 = 1;
  }
  return result;
}

void sub_18D8CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  _QWORD *v25;
  char v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  void **v46;
  void *v47;
  id v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD aBlock[5];
  uint64_t v59;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v54 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  __chkstk_darwin(v3);
  v53 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  __chkstk_darwin(v5);
  v50 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("BooksDefaults"));
  v9 = v8;
  v10 = *(_QWORD **)(v1 + OBJC_IVAR___BCRCDataContainer_currentABData);
  v56 = v7;
  v57 = OBJC_IVAR___BCRCDataContainer_currentABData;
  if (v10)
  {
    v12 = v10[3];
    v11 = v10[4];
    v13 = v10[2];
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
    if (a1)
    {
LABEL_3:
      v14 = a1[3];
      v15 = a1[4];
      v16 = a1[2];
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v16);
      goto LABEL_6;
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
    v11 = 0;
    if (a1)
      goto LABEL_3;
  }
  v14 = 0;
  v16 = 0;
  v15 = 0;
LABEL_6:
  v17 = objc_allocWithZone((Class)type metadata accessor for BridgedRemoteConfigNamespaceData(0));
  v18 = (void *)BridgedRemoteConfigNamespaceData.init(name:treatmentIDs:segmentIDs:segmentSetIDs:previousTreatmentIDs:previousSegmentIDs:previousSegmentSetIDs:)(v56, v9, v11, v13, v12, v15, v16, v14);
  v19 = v1;
  v20 = v57;
  v21 = *(_QWORD **)(v1 + v57);
  if (v21)
  {
    v22 = (_QWORD *)v21[2];
    swift_bridgeObjectRetain(v22);
    if (!a1)
    {
      if (v22)
        goto LABEL_28;
      v22 = (_QWORD *)v21[3];
      swift_bridgeObjectRetain(v22);
      if (v22)
        goto LABEL_28;
      v22 = (_QWORD *)v21[4];
      swift_bridgeObjectRetain(v22);
      if (v22)
        goto LABEL_28;
      goto LABEL_30;
    }
    v23 = (_QWORD *)a1[2];
    swift_bridgeObjectRetain(v23);
    if (v22)
    {
      if (!v23)
        goto LABEL_28;
      v24 = sub_198040(v22, v23);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v23);
      if ((v24 & 1) == 0)
        goto LABEL_29;
      v21 = *(_QWORD **)(v19 + v20);
      goto LABEL_20;
    }
  }
  else
  {
    if (!a1)
      goto LABEL_30;
    v23 = (_QWORD *)a1[2];
    swift_bridgeObjectRetain(v23);
  }
  if (v23)
    goto LABEL_15;
LABEL_20:
  if (!v21)
  {
    v25 = (_QWORD *)a1[3];
    swift_bridgeObjectRetain(v25);
LABEL_26:
    if (v25)
    {
      v22 = v25;
      goto LABEL_28;
    }
    goto LABEL_33;
  }
  v22 = (_QWORD *)v21[3];
  v25 = (_QWORD *)a1[3];
  swift_bridgeObjectRetain(v22);
  swift_bridgeObjectRetain(v25);
  if (!v22)
    goto LABEL_26;
  if (!v25)
    goto LABEL_28;
  v26 = sub_198040(v22, v25);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v25);
  if ((v26 & 1) == 0)
    goto LABEL_29;
  v21 = *(_QWORD **)(v19 + v20);
LABEL_33:
  if (v21)
  {
    v22 = (_QWORD *)v21[4];
    v23 = (_QWORD *)a1[4];
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v23);
    if (v22)
    {
      if (v23)
      {
        v49 = sub_198040(v22, v23);
        swift_bridgeObjectRelease(v22);
        swift_bridgeObjectRelease(v23);
        if ((v49 & 1) != 0)
          goto LABEL_30;
LABEL_29:
        sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
        v27 = (void *)static OS_dispatch_queue.main.getter();
        v28 = swift_allocObject(&unk_294568, 24, 7);
        swift_unknownObjectWeakInit(v28 + 16, v19);
        v29 = swift_allocObject(&unk_2947E8, 32, 7);
        *(_QWORD *)(v29 + 16) = v28;
        *(_QWORD *)(v29 + 24) = v18;
        aBlock[4] = sub_193454;
        v59 = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_172474;
        aBlock[3] = &unk_294800;
        v30 = _Block_copy(aBlock);
        v31 = v59;
        v32 = v18;
        v33 = swift_release(v31);
        v34 = v50;
        static DispatchQoS.unspecified.getter(v33);
        aBlock[0] = _swiftEmptyArrayStorage;
        v35 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v36 = sub_16B968((uint64_t *)&unk_30C330);
        v37 = sub_189CDC((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330, (uint64_t)&protocol conformance descriptor for [A]);
        v38 = v53;
        v39 = v55;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v55, v35);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v34, v38, v30);
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v39);
        (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v52);
        goto LABEL_30;
      }
LABEL_28:
      swift_bridgeObjectRelease(v22);
      goto LABEL_29;
    }
  }
  else
  {
    v23 = (_QWORD *)a1[4];
    swift_bridgeObjectRetain(v23);
  }
  if (v23)
  {
LABEL_15:
    v22 = v23;
    goto LABEL_28;
  }
LABEL_30:
  v40 = sub_16B968(&qword_30C3E0);
  v41 = swift_allocObject(v40, 40, 7);
  *(_OWORD *)(v41 + 16) = xmmword_26C260;
  *(_QWORD *)(v41 + 32) = v18;
  aBlock[0] = v41;
  specialized Array._endMutation()();
  v42 = aBlock[0];
  v43 = objc_allocWithZone((Class)type metadata accessor for BridgedBooksTreatmentData(0));
  v44 = v18;
  v45 = BridgedBooksTreatmentData.init(remoteConfigNamespaceData:)(v42);
  v46 = (void **)(v19 + OBJC_IVAR___BCRCDataContainer_treatmentData);
  swift_beginAccess(v19 + OBJC_IVAR___BCRCDataContainer_treatmentData, aBlock, 1, 0);
  v47 = *v46;
  *v46 = (void *)v45;

  v48 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_30AAF8 != -1)
    swift_once(&qword_30AAF8, sub_18AE34);
  objc_msgSend(v48, "postNotificationName:object:", qword_313840, v19);

}

void sub_18DE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  uint8_t *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  NSString v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  void *v35;
  void **aBlock;
  _QWORD v37[4];
  _QWORD *v38;

  v1 = v0;
  ObjectType = swift_getObjectType(v0);
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR___BCRCDataContainer_configVersionCounter);
  v11 = v10 + 24;
  os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
  v12 = *(_QWORD *)(v10 + 16);
  v13 = (void **)(v12 + 1);
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v10 + 16) = v13;
    os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
    v11 = static os_log_type_t.default.getter(v14);
    if (qword_30AB08 == -1)
      goto LABEL_3;
  }
  swift_once(&qword_30AB08, sub_1967E0);
LABEL_3:
  v32 = v6;
  v33 = v3;
  v15 = (void *)qword_30C710;
  if (os_log_type_enabled((os_log_t)qword_30C710, v11))
  {
    v16 = v15;
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v17 = 134217984;
    aBlock = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v37, v17 + 4, v17 + 12);
    _os_log_impl(&dword_0, v16, v11, "[configs change] [v%ld] active", v17, 0xCu);
    swift_slowDealloc(v17, -1, -1);

  }
  sub_16F6BC(0, (unint64_t *)&qword_30C2F0, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter();
  v19 = swift_allocObject(&unk_294568, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16, v1);
  v20 = (_QWORD *)swift_allocObject(&unk_294748, 40, 7);
  v20[2] = v19;
  v20[3] = v13;
  v20[4] = ObjectType;
  v37[3] = sub_19338C;
  v38 = v20;
  aBlock = _NSConcreteStackBlock;
  v37[0] = 1107296256;
  v37[1] = sub_172474;
  v37[2] = &unk_294760;
  v21 = _Block_copy(&aBlock);
  v22 = swift_release(v38);
  static DispatchQoS.unspecified.getter(v22);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v23 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_16B968((uint64_t *)&unk_30C330);
  v25 = sub_189CDC((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v24, v25, v2, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
  v26 = (void **)(v1 + OBJC_IVAR___BCRCDataContainer_bridge);
  swift_beginAccess(v1 + OBJC_IVAR___BCRCDataContainer_bridge, &aBlock, 0, 0);
  v27 = *v26;
  if (v27)
  {
    v28 = *(_QWORD *)(v1 + OBJC_IVAR___BCRCDataContainer_configChangeHandler);
    swift_unknownObjectRetain(v27);
    v29 = sub_16B968(&qword_30BFC8);
    OSAllocatedUnfairLock.valueWithLock.getter(&v35, v28, v29);
    v30 = v35;
    if (v35)
    {
      v31 = String._bridgeToObjectiveC()();
      objc_msgSend(v27, "enqueueManagedValueCall:arguments:file:line:", v30, 0, v31, 418);
      swift_unknownObjectRelease(v27);

    }
    else
    {
      swift_unknownObjectRelease(v27);
    }
  }
}

void *RCDataContainer.treatmentData.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR___BCRCDataContainer_treatmentData);
  swift_beginAccess(v0 + OBJC_IVAR___BCRCDataContainer_treatmentData, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void RCDataContainer.treatmentData.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  _BYTE v5[24];

  v3 = (void **)(v1 + OBJC_IVAR___BCRCDataContainer_treatmentData);
  swift_beginAccess(v3, v5, 1, 0);
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*RCDataContainer.treatmentData.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BCRCDataContainer_treatmentData, a1, 33, 0);
  return j__swift_endAccess;
}

void sub_18E3F8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void **v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  _BYTE v14[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (void **)(Strong + OBJC_IVAR___BCRCDataContainer_sessionHosting);
    swift_beginAccess(Strong + OBJC_IVAR___BCRCDataContainer_sessionHosting, &v13, 0, 0);
    v7 = *v6;
    swift_unknownObjectRetain(v7);

    if (v7)
    {
      v8 = objc_msgSend(v7, "primaryAnalyticsController");
      v9 = (void *)dispatch thunk of AnalyticsController.applicationTracker.getter();

      if (v9)
      {
        v10 = swift_allocObject(&unk_294838, 24, 7);
        *(_QWORD *)(v10 + 16) = a2;
        v11 = v9;
        v12 = a2;
        BATracker.transaction(_:)(sub_193480, v10);
        swift_release(v10);
        swift_unknownObjectRelease(v7);

      }
      else
      {
        swift_unknownObjectRelease(v7);
      }
    }
  }
}

uint64_t sub_18E50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[2];

  v0 = type metadata accessor for RemoteConfigNamespaceData(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of BridgedRemoteConfigNamespaceData.swiftType.getter(v2);
  v5 = sub_16B968(&qword_30C3E8);
  v6 = type metadata accessor for DataEventTrait(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(v5, v9 + *(_QWORD *)(v7 + 72), v8 | 7);
  *(_OWORD *)(v10 + 16) = xmmword_26BDD0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10 + v9, enum case for DataEventTrait.onlyOnce(_:), v6);
  v11 = sub_16BDB8(&qword_30C3F0, (uint64_t (*)(uint64_t))&type metadata accessor for RemoteConfigNamespaceData, (uint64_t)&protocol conformance descriptor for RemoteConfigNamespaceData);
  AccessTracker.push<A>(data:traits:file:line:)(v4, v10, 0xD00000000000006BLL, 0x80000000002162F0, 338, v0, v11);
  swift_bridgeObjectRelease(v10);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v12 = type metadata accessor for RemoteConfigChangeEvent(0);
  v13 = sub_16BDB8(&qword_30C3F8, (uint64_t (*)(uint64_t))&type metadata accessor for RemoteConfigChangeEvent, (uint64_t)&protocol conformance descriptor for RemoteConfigChangeEvent);
  memset(v15, 0, sizeof(v15));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)(v12, 0, v15, 0, 0, v12, v13);
  return sub_1766A8((uint64_t)v15, &qword_30ABB0);
}

uint64_t sub_18E6D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_18E6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_18E6F8(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_18E700(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  id v11;
  unint64_t v12;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v17[104];
  _BYTE v18[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = RCDataContainer.configs.getter();
    v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    if (qword_30AAF0 != -1)
      swift_once(&qword_30AAF0, sub_18ACCC);
    v8 = qword_30BF20;
    v9 = sub_16B968(&qword_30C3C0);
    inited = swift_initStackObject(v9, v17);
    *(_OWORD *)(inited + 16) = xmmword_26BDD0;
    v15 = 0x6769666E6F63;
    v16 = 0xE600000000000000;
    v11 = v5;
    AnyHashable.init<A>(_:)((_QWORD *)(inited + 32), &v15, &type metadata for String, &protocol witness table for String);
    *(_QWORD *)(inited + 96) = sub_16B968((uint64_t *)&unk_30BFB0);
    *(_QWORD *)(inited + 72) = v6;
    swift_bridgeObjectRetain(v6);
    v12 = sub_18AB8C(inited);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v12);
    objc_msgSend(v7, "postNotificationName:object:userInfo:", v8, v11, isa, v15, v16);

    v14 = sub_19B930(v6);
    swift_bridgeObjectRelease(v6);
    sub_18E8D0(v14, a2);

    return swift_bridgeObjectRelease(v14);
  }
  return result;
}

id sub_18E8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id result;
  id v13;
  NSDictionary v14;
  Class isa;
  _QWORD *v16;
  void *v17;
  objc_class *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend((id)objc_opt_self(BCDevice), "isInternalInstall");
  if ((_DWORD)result)
  {
    v25 = *(_QWORD *)(v2 + OBJC_IVAR___BCRCDataContainer_watchedValuesQueue);
    v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v14.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v24 = v8;
    isa = v14.super.isa;
    v16 = (_QWORD *)swift_allocObject(&unk_294798, 40, 7);
    v16[2] = v13;
    v16[3] = isa;
    v16[4] = a2;
    aBlock[4] = sub_1933C4;
    v28 = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_172474;
    aBlock[3] = &unk_2947B0;
    v17 = _Block_copy(aBlock);
    v23 = v13;
    v18 = isa;
    static DispatchQoS.unspecified.getter(v18);
    v26 = _swiftEmptyArrayStorage;
    v19 = sub_16BDB8((unint64_t *)&unk_30B5C0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v20 = v5;
    v21 = sub_16B968((uint64_t *)&unk_30C330);
    v22 = sub_189CDC((unint64_t *)&qword_30B5D0, (uint64_t *)&unk_30C330, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v21, v22, v4, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
    return (id)swift_release(v28);
  }
  return result;
}

uint64_t sub_18EB4C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSString v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t *v13;
  __int128 v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  NSString v18;
  id v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  os_log_type_t v38;
  void *v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  char *v51;
  void *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[32];

  v53 = a3;
  v5 = type metadata accessor for String.Encoding(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a1, "arrayForKey:", v8);

  if (v9)
  {
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, (char *)&type metadata for Any + 8);

    v11 = sub_190830(v10);
    swift_bridgeObjectRelease(v10);
    if (v11)
    {
      v12 = v11[2];
      if (v12)
        goto LABEL_4;
      return swift_bridgeObjectRelease(v11);
    }
  }
  swift_bridgeObjectRelease(0);
  v11 = _swiftEmptyArrayStorage;
  v12 = _swiftEmptyArrayStorage[2];
  if (!v12)
    return swift_bridgeObjectRelease(v11);
LABEL_4:
  v54 = (id)objc_opt_self(NSJSONSerialization);
  v48 = 0;
  v47 = v11;
  v13 = v11 + 5;
  *(_QWORD *)&v14 = 134218498;
  v50 = v14;
  v49 = (char *)&type metadata for Any + 8;
  v51 = v7;
  v52 = a2;
  do
  {
    v16 = *(v13 - 1);
    v17 = *v13;
    swift_bridgeObjectRetain(*v13);
    v18 = String._bridgeToObjectiveC()();
    v19 = objc_msgSend(a2, "valueForKeyPath:", v18);

    if (v19)
    {
      _bridgeAnyObjectToAny(_:)(&v59);
      swift_unknownObjectRelease(v19);
    }
    else
    {
      v59 = 0u;
      v60 = 0u;
    }
    sub_176724((uint64_t)&v59, (uint64_t)v61, &qword_30ABB0);
    sub_1765E0((uint64_t)v61, (uint64_t)&v57, &qword_30ABB0);
    if (v58)
    {
      sub_17992C(&v57, &v59);
    }
    else
    {
      v20 = objc_msgSend(objc_allocWithZone((Class)NSNull), "init");
      *((_QWORD *)&v60 + 1) = sub_16F6BC(0, &qword_30C3C8, NSNull_ptr);
      *(_QWORD *)&v59 = v20;
      sub_1766A8((uint64_t)&v57, &qword_30ABB0);
    }
    v21 = *((_QWORD *)&v60 + 1);
    v22 = sub_185554(&v59, *((uint64_t *)&v60 + 1));
    v23 = _bridgeAnythingToObjectiveC<A>(_:)(v22, v21);
    sub_184A38(&v59);
    *(_QWORD *)&v59 = 0;
    v24 = objc_msgSend(v54, "dataWithJSONObject:options:error:", v23, 15, &v59);
    swift_unknownObjectRelease(v23);
    v25 = (id)v59;
    v55 = v16;
    if (v24)
    {
      v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v28 = v27;

      v29 = sub_1933E4(v26, v28);
      v56 = v28;
    }
    else
    {
      v30 = v25;
      v31 = _convertNSErrorToError(_:)();

      swift_willThrow();
      v29 = swift_errorRelease(v31);
      v26 = 0;
      v48 = 0;
      v56 = 0xF000000000000000;
      v28 = 0xC000000000000000;
    }
    static String.Encoding.utf8.getter(v29);
    v32 = String.init(data:encoding:)(v26, v28, v7);
    v34 = v33;
    v35 = sub_17933C(v26, v28);
    if (v34)
      v36 = v32;
    else
      v36 = 0x3E726F7272653CLL;
    if (v34)
      v37 = v34;
    else
      v37 = 0xE700000000000000;
    v38 = static os_log_type_t.default.getter(v35);
    if (qword_30AB08 != -1)
      swift_once(&qword_30AB08, sub_1967E0);
    v39 = (void *)qword_30C710;
    if (os_log_type_enabled((os_log_t)qword_30C710, v38))
    {
      swift_bridgeObjectRetain(v17);
      v40 = v39;
      swift_bridgeObjectRetain(v37);
      v41 = swift_slowAlloc(32, -1);
      v42 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v59 = v42;
      *(_DWORD *)v41 = v50;
      *(_QWORD *)(v41 + 4) = v53;
      *(_WORD *)(v41 + 12) = 2082;
      swift_bridgeObjectRetain(v17);
      *(_QWORD *)(v41 + 14) = sub_1995C0(v55, v17, (uint64_t *)&v59);
      swift_bridgeObjectRelease_n(v17, 3);
      *(_WORD *)(v41 + 22) = 2080;
      swift_bridgeObjectRetain(v37);
      *(_QWORD *)(v41 + 24) = sub_1995C0(v36, v37, (uint64_t *)&v59);
      swift_bridgeObjectRelease_n(v37, 3);
      _os_log_impl(&dword_0, v40, v38, "[configs change] [v%ld] %{public}s → %s", (uint8_t *)v41, 0x20u);
      swift_arrayDestroy(v42, 2, v49);
      v43 = v42;
      a2 = v52;
      swift_slowDealloc(v43, -1, -1);
      v44 = v41;
      v7 = v51;
      swift_slowDealloc(v44, -1, -1);

      sub_1933D0(v26, v56);
    }
    else
    {
      v15 = v39;
      swift_bridgeObjectRetain(v37);
      sub_1933D0(v26, v56);

      swift_bridgeObjectRelease_n(v37, 2);
      swift_bridgeObjectRelease(v17);
    }
    sub_1766A8((uint64_t)v61, &qword_30ABB0);
    v13 += 2;
    --v12;
  }
  while (v12);
  return swift_bridgeObjectRelease(v47);
}

_QWORD *NSUserDefaults.rcDataContainerWatchedKeyPaths.getter()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "arrayForKey:", v1);

  if (!v2
    || (v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, (char *)&type metadata for Any + 8),
        v2,
        v4 = sub_190830(v3),
        swift_bridgeObjectRelease(v3),
        !v4))
  {
    swift_bridgeObjectRelease(0);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

void sub_18F1F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR___BCRCDataContainer_aq_currentDataSource);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
    v4 = *a2;
    *a2 = v3;
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = static os_log_type_t.error.getter(a1);
    if (qword_30AB08 != -1)
      swift_once(&qword_30AB08, sub_1967E0);
    v6 = (id)qword_30C710;
    os_log(_:dso:log:_:_:)(v5, &dword_0);

  }
}

void sub_18F2BC()
{
  uint64_t v0;

  sub_18F1F8(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_18F2C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void *sub_18F2D4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BCRCDataContainer____lazy_storage___overrides);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR___BCRCDataContainer____lazy_storage___overrides);
  }
  else
  {
    v2 = &_swiftEmptyDictionarySingleton;
    *(_QWORD *)(v0 + OBJC_IVAR___BCRCDataContainer____lazy_storage___overrides) = &_swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease(0);
    v1 = 0;
  }
  swift_bridgeObjectRetain(v1);
  return v2;
}

uint64_t sub_18F320(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  _BOOL8 v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  char v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  int64_t v80;
  int64_t v81;
  _OWORD v83[2];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD v91[2];

  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v80 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v6 = 0;
  v7 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v6 << 6);
LABEL_8:
      v11 = *(_QWORD *)(a1 + 56);
      v12 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v10);
      v13 = v12[1];
      *(_QWORD *)&v86 = *v12;
      *((_QWORD *)&v86 + 1) = v13;
      sub_17666C(v11 + 32 * v10, (uint64_t)&v87);
      swift_bridgeObjectRetain(v13);
      goto LABEL_27;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_105;
    if (v14 < v80)
    {
      v15 = *(_QWORD *)(v78 + 8 * v14);
      if (v15)
        goto LABEL_12;
      v16 = v6 + 2;
      ++v6;
      if (v14 + 1 < v80)
      {
        v15 = *(_QWORD *)(v78 + 8 * v16);
        if (v15)
          goto LABEL_15;
        v6 = v14 + 1;
        if (v14 + 2 < v80)
        {
          v15 = *(_QWORD *)(v78 + 8 * (v14 + 2));
          if (v15)
          {
            v14 += 2;
            goto LABEL_12;
          }
          v16 = v14 + 3;
          v6 = v14 + 2;
          if (v14 + 3 < v80)
          {
            v15 = *(_QWORD *)(v78 + 8 * v16);
            if (v15)
            {
LABEL_15:
              v14 = v16;
LABEL_12:
              v5 = (v15 - 1) & v15;
              v10 = __clz(__rbit64(v15)) + (v14 << 6);
              v6 = v14;
              goto LABEL_8;
            }
            while (1)
            {
              v14 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_109;
              if (v14 >= v80)
                break;
              v15 = *(_QWORD *)(v78 + 8 * v14);
              ++v16;
              if (v15)
                goto LABEL_12;
            }
            v6 = v80 - 1;
          }
        }
      }
    }
    v5 = 0;
    v87 = 0u;
    v88 = 0u;
    v86 = 0u;
LABEL_27:
    sub_176724((uint64_t)&v86, (uint64_t)&v89, &qword_30C350);
    v17 = v90;
    if (!v90)
      break;
    v18 = v89;
    sub_17992C(v91, &v86);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v7);
    *(_QWORD *)&v84 = v7;
    v21 = sub_187F9C(v18, v17);
    v22 = v7[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
      goto LABEL_110;
    }
    v25 = v20;
    if (v7[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v7 = (_QWORD *)v84;
        if ((v20 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1920DC();
        v7 = (_QWORD *)v84;
        if ((v25 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_19161C(v24, isUniquelyReferenced_nonNull_native);
      v26 = sub_187F9C(v18, v17);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_111;
      v21 = v26;
      v7 = (_QWORD *)v84;
      if ((v25 & 1) != 0)
      {
LABEL_4:
        v8 = (_QWORD *)(v7[7] + 32 * v21);
        sub_184A38(v8);
        sub_17992C(&v86, v8);
        goto LABEL_5;
      }
    }
    v7[(v21 >> 6) + 8] |= 1 << v21;
    v28 = (uint64_t *)(v7[6] + 16 * v21);
    *v28 = v18;
    v28[1] = v17;
    sub_17992C(&v86, (_OWORD *)(v7[7] + 32 * v21));
    v29 = v7[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_103;
    v7[2] = v31;
    swift_bridgeObjectRetain(v17);
LABEL_5:
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(0x8000000000000000);
  }
  swift_release(a1);
  v79 = a2 + 64;
  v32 = 1 << *(_BYTE *)(a2 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & *(_QWORD *)(a2 + 64);
  v81 = (unint64_t)(v32 + 63) >> 6;
  swift_bridgeObjectRetain(a2);
  v35 = 0;
  while (2)
  {
    if (v34)
    {
      v38 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v39 = v38 | (v35 << 6);
      goto LABEL_47;
    }
    v43 = v35 + 1;
    if (__OFADD__(v35, 1))
      goto LABEL_106;
    if (v43 >= v81)
      goto LABEL_65;
    v44 = *(_QWORD *)(v79 + 8 * v43);
    if (v44)
    {
LABEL_51:
      v34 = (v44 - 1) & v44;
      v39 = __clz(__rbit64(v44)) + (v43 << 6);
      v35 = v43;
LABEL_47:
      v40 = *(_QWORD *)(a2 + 56);
      v41 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v39);
      v42 = v41[1];
      *(_QWORD *)&v86 = *v41;
      *((_QWORD *)&v86 + 1) = v42;
      sub_17666C(v40 + 32 * v39, (uint64_t)&v87);
      swift_bridgeObjectRetain(v42);
LABEL_66:
      sub_176724((uint64_t)&v86, (uint64_t)&v89, &qword_30C350);
      v46 = v90;
      if (!v90)
      {
        swift_release(a2);
        return (uint64_t)v7;
      }
      v47 = v89;
      sub_17992C(v91, &v86);
      if (v7[2])
      {
        swift_bridgeObjectRetain(v46);
        v48 = sub_187F9C(v47, v46);
        if ((v49 & 1) != 0)
        {
          sub_17666C(v7[7] + 32 * v48, (uint64_t)&v84);
        }
        else
        {
          v84 = 0u;
          v85 = 0u;
        }
        swift_bridgeObjectRelease(v46);
        if (*((_QWORD *)&v85 + 1))
        {
          v50 = sub_16B968((uint64_t *)&unk_30BFB0);
          if ((swift_dynamicCast(v83, &v84, (char *)&type metadata for Any + 8, v50, 6) & 1) != 0)
          {
            v51 = *(_QWORD *)&v83[0];
            sub_17666C((uint64_t)&v86, (uint64_t)&v84);
            if ((swift_dynamicCast(v83, &v84, (char *)&type metadata for Any + 8, v50, 6) & 1) != 0)
            {
              v52 = *(_QWORD *)&v83[0];
              v53 = sub_18F320(v51, *(_QWORD *)&v83[0]);
              swift_bridgeObjectRelease(v52);
              swift_bridgeObjectRelease(v51);
              *((_QWORD *)&v85 + 1) = v50;
              *(_QWORD *)&v84 = v53;
              sub_17992C(&v84, v83);
              v54 = swift_isUniquelyReferenced_nonNull_native(v7);
              v56 = sub_187F9C(v47, v46);
              v57 = v7[2];
              v58 = (v55 & 1) == 0;
              v59 = v57 + v58;
              if (__OFADD__(v57, v58))
                goto LABEL_107;
              v60 = v55;
              if (v7[3] < v59)
              {
                sub_19161C(v59, v54);
                v61 = sub_187F9C(v47, v46);
                if ((v60 & 1) != (v62 & 1))
                  goto LABEL_111;
                v56 = v61;
                if ((v60 & 1) == 0)
                  goto LABEL_79;
LABEL_95:
                v36 = (_QWORD *)(v7[7] + 32 * v56);
                sub_184A38(v36);
                v37 = v83;
LABEL_43:
                sub_17992C(v37, v36);
LABEL_44:
                swift_bridgeObjectRelease(v46);
                swift_bridgeObjectRelease(0x8000000000000000);
                sub_184A38(&v86);
                continue;
              }
              if ((v54 & 1) != 0)
              {
                if ((v55 & 1) != 0)
                  goto LABEL_95;
              }
              else
              {
                sub_1920DC();
                if ((v60 & 1) != 0)
                  goto LABEL_95;
              }
LABEL_79:
              v7[(v56 >> 6) + 8] |= 1 << v56;
              v63 = (uint64_t *)(v7[6] + 16 * v56);
              *v63 = v47;
              v63[1] = v46;
              sub_17992C(v83, (_OWORD *)(v7[7] + 32 * v56));
              v64 = v7[2];
              v30 = __OFADD__(v64, 1);
              v65 = v64 + 1;
              if (v30)
                goto LABEL_108;
LABEL_91:
              v7[2] = v65;
              swift_bridgeObjectRetain(v46);
              goto LABEL_44;
            }
            swift_bridgeObjectRelease(v51);
          }
LABEL_83:
          sub_17666C((uint64_t)&v86, (uint64_t)&v84);
          v66 = swift_isUniquelyReferenced_nonNull_native(v7);
          *(_QWORD *)&v83[0] = v7;
          v68 = sub_187F9C(v47, v46);
          v69 = v7[2];
          v70 = (v67 & 1) == 0;
          v71 = v69 + v70;
          if (__OFADD__(v69, v70))
            goto LABEL_102;
          v72 = v67;
          if (v7[3] >= v71)
          {
            if ((v66 & 1) != 0)
            {
              v7 = *(_QWORD **)&v83[0];
              if ((v67 & 1) == 0)
                goto LABEL_90;
            }
            else
            {
              sub_1920DC();
              v7 = *(_QWORD **)&v83[0];
              if ((v72 & 1) == 0)
                goto LABEL_90;
            }
          }
          else
          {
            sub_19161C(v71, v66);
            v73 = sub_187F9C(v47, v46);
            if ((v72 & 1) != (v74 & 1))
              goto LABEL_111;
            v68 = v73;
            v7 = *(_QWORD **)&v83[0];
            if ((v72 & 1) == 0)
            {
LABEL_90:
              v7[(v68 >> 6) + 8] |= 1 << v68;
              v75 = (uint64_t *)(v7[6] + 16 * v68);
              *v75 = v47;
              v75[1] = v46;
              sub_17992C(&v84, (_OWORD *)(v7[7] + 32 * v68));
              v76 = v7[2];
              v30 = __OFADD__(v76, 1);
              v65 = v76 + 1;
              if (v30)
                goto LABEL_104;
              goto LABEL_91;
            }
          }
          v36 = (_QWORD *)(v7[7] + 32 * v68);
          sub_184A38(v36);
          v37 = &v84;
          goto LABEL_43;
        }
      }
      else
      {
        v84 = 0u;
        v85 = 0u;
      }
      sub_1766A8((uint64_t)&v84, &qword_30ABB0);
      goto LABEL_83;
    }
    break;
  }
  v45 = v35 + 2;
  ++v35;
  if (v43 + 1 >= v81)
    goto LABEL_65;
  v44 = *(_QWORD *)(v79 + 8 * v45);
  if (v44)
  {
LABEL_54:
    v43 = v45;
    goto LABEL_51;
  }
  v35 = v43 + 1;
  if (v43 + 2 >= v81)
    goto LABEL_65;
  v44 = *(_QWORD *)(v79 + 8 * (v43 + 2));
  if (v44)
  {
    v43 += 2;
    goto LABEL_51;
  }
  v45 = v43 + 3;
  v35 = v43 + 2;
  if (v43 + 3 >= v81)
  {
LABEL_65:
    v34 = 0;
    v87 = 0u;
    v88 = 0u;
    v86 = 0u;
    goto LABEL_66;
  }
  v44 = *(_QWORD *)(v79 + 8 * v45);
  if (v44)
    goto LABEL_54;
  while (1)
  {
    v43 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v43 >= v81)
    {
      v35 = v81 - 1;
      goto LABEL_65;
    }
    v44 = *(_QWORD *)(v79 + 8 * v43);
    ++v45;
    if (v44)
      goto LABEL_51;
  }
LABEL_110:
  __break(1u);
LABEL_111:
  result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_18FBA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_18FBCC()
{
  uint64_t v0;

  return sub_18D820(*(_QWORD *)(v0 + 16), *(_BYTE **)(v0 + 24));
}

uint64_t sub_18FBD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t RCDataContainer.configsValues()()
{
  uint64_t v0;
  uint64_t ObjectType;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  ObjectType = swift_getObjectType(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_30AAF0 != -1)
    swift_once(&qword_30AAF0, sub_18ACCC);
  v3 = NSNotificationCenter.notifications(named:object:)(qword_30BF20, v0);

  v4 = swift_allocObject(&unk_294488, 24, 7);
  *(_QWORD *)(v4 + 16) = ObjectType;
  v9 = v3;
  v5 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v6 = sub_16B968((uint64_t *)&unk_30BFB0);
  v7 = sub_16BDB8((unint64_t *)&qword_30B2B8, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  return AsyncCompactMapSequence.init(_:transform:)(&v9, &unk_30BFA8, v4, v5, v6, v7);
}

uint64_t sub_18FD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch(sub_18FD24, 0, 0);
}

uint64_t sub_18FD24()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = (_OWORD *)(v0 + 56);
  v2 = Notification.userInfo.getter();
  if (!v2)
  {
    *v1 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
LABEL_10:
    v8 = *(_QWORD **)(v0 + 104);
    sub_1766A8(v0 + 56, &qword_30ABB0);
    *v8 = 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = v2;
  *(_QWORD *)(v0 + 88) = 0x6769666E6F63;
  *(_QWORD *)(v0 + 96) = 0xE600000000000000;
  AnyHashable.init<A>(_:)((_QWORD *)(v0 + 16), v0 + 88, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_188098(v0 + 16), (v5 & 1) != 0))
  {
    sub_17666C(*(_QWORD *)(v3 + 56) + 32 * v4, v0 + 56);
  }
  else
  {
    *v1 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease(v3);
  sub_176638(v0 + 16);
  if (!*(_QWORD *)(v0 + 80))
    goto LABEL_10;
  v6 = *(_QWORD *)(v0 + 104);
  v7 = sub_16B968((uint64_t *)&unk_30BFB0);
  if ((swift_dynamicCast(v6, v0 + 56, (char *)&type metadata for Any + 8, v7, 6) & 1) == 0)
    **(_QWORD **)(v0 + 104) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall RCDataContainer.registerOnConfigChange(_:)(JSValue a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = static os_log_type_t.default.getter(a1.super.isa);
  if (qword_30AB08 != -1)
    swift_once(&qword_30AB08, sub_1967E0);
  v4 = (id)qword_30C710;
  os_log(_:dso:log:_:_:)(v3, &dword_0);

  v5 = *(_QWORD *)(v1 + OBJC_IVAR___BCRCDataContainer_configChangeHandler);
  v7 = objc_msgSend(objc_allocWithZone((Class)JSManagedValue), "initWithValue:", a1.super.isa);
  v6 = sub_16B968(&qword_30BFC8);
  OSAllocatedUnfairLock.valueWithLock.setter(&v7, v5, v6);
}

Swift::Void __swiftcall RCDataContainer.unregisterOnConfigChange(_:)(JSValue a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___BCRCDataContainer_configChangeHandler);
  v4 = 0;
  v3 = sub_16B968(&qword_30BFC8);
  OSAllocatedUnfairLock.valueWithLock.setter(&v4, v2, v3);
}

Swift::Bool __swiftcall AppAnalyticsExtensionManager.analyticsSessionDataIsMainWindow()()
{
  return 1;
}

Swift::Bool __swiftcall AppAnalyticsExtensionManager.analyticsSessionDataIsParallel()()
{
  return 0;
}

void RCDataContainer.setOverride(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;

  v8 = sub_18F2D4();
  sub_19016C(a1, a2, a3, (uint64_t *)&v8);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR___BCRCDataContainer____lazy_storage___overrides);
  *(_QWORD *)(v3 + OBJC_IVAR___BCRCDataContainer____lazy_storage___overrides) = v8;
  swift_bridgeObjectRelease(v7);
  sub_18DE48();
}

uint64_t sub_19016C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  __int128 v31;
  __int128 v32;
  _QWORD v33[2];

  *(_QWORD *)&v31 = a2;
  *((_QWORD *)&v31 + 1) = a3;
  v33[0] = 46;
  v33[1] = 0xE100000000000000;
  v6 = sub_18A99C();
  v7 = StringProtocol.components<A>(separatedBy:)(v33, &type metadata for String, &type metadata for String, v6, v6);
  v33[0] = v7;
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 >= 2)
  {
    v10 = sub_190464(0);
    v11 = v9;
    v12 = *a4;
    if (*(_QWORD *)(*a4 + 16))
    {
      swift_bridgeObjectRetain(v9);
      v13 = sub_187F9C(v10, v11);
      if ((v14 & 1) != 0)
      {
        sub_17666C(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v31);
      }
      else
      {
        v31 = 0u;
        v32 = 0u;
      }
      swift_bridgeObjectRelease(v11);
      if (*((_QWORD *)&v32 + 1))
      {
        v21 = sub_16B968((uint64_t *)&unk_30BFB0);
        if (swift_dynamicCast(&v30, &v31, (char *)&type metadata for Any + 8, v21, 6))
        {
          v22 = v30;
LABEL_15:
          v23 = v33[0];
          v30 = v22;
          *(_QWORD *)&v31 = v33[0];
          v24 = sub_16B968(&qword_30C390);
          v25 = sub_189CDC(&qword_30C398, &qword_30C390, (uint64_t)&protocol conformance descriptor for [A]);
          v26 = BidirectionalCollection<>.joined(separator:)(46, 0xE100000000000000, v24, v25);
          v28 = v27;
          swift_bridgeObjectRelease(v23);
          sub_19016C(a1, v26, v28, &v30);
          swift_bridgeObjectRelease(v28);
          v29 = v30;
          *((_QWORD *)&v32 + 1) = sub_16B968((uint64_t *)&unk_30BFB0);
          *(_QWORD *)&v31 = v29;
          v18 = v10;
          v19 = v11;
          return sub_186F78((uint64_t)&v31, v18, v19);
        }
LABEL_14:
        v22 = &_swiftEmptyDictionarySingleton;
        goto LABEL_15;
      }
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
    }
    sub_1766A8((uint64_t)&v31, &qword_30ABB0);
    goto LABEL_14;
  }
  if (v8 != 1)
    return swift_bridgeObjectRelease(v7);
  v15 = sub_190464(0);
  v17 = v16;
  swift_bridgeObjectRelease(v33[0]);
  sub_17666C(a1, (uint64_t)&v31);
  v18 = v15;
  v19 = v17;
  return sub_186F78((uint64_t)&v31, v18, v19);
}

uint64_t sub_190464(unint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char v10;

  v3 = (_QWORD *)*v1;
  if ((swift_isUniquelyReferenced_nonNull_native(*v1) & 1) == 0)
    v3 = sub_192950(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  v10 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v10, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_190544()
{
  uint64_t v0;
  uint64_t ObjectType;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  ObjectType = swift_getObjectType(v0);
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_30AAF0 != -1)
    swift_once(&qword_30AAF0, sub_18ACCC);
  v3 = NSNotificationCenter.notifications(named:object:)(qword_30BF20, v0);

  v4 = swift_allocObject(&unk_294608, 24, 7);
  *(_QWORD *)(v4 + 16) = ObjectType;
  v9 = v3;
  v5 = type metadata accessor for NSNotificationCenter.Notifications(0);
  v6 = sub_16B968((uint64_t *)&unk_30BFB0);
  v7 = sub_16BDB8((unint64_t *)&qword_30B2B8, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications);
  return AsyncCompactMapSequence.init(_:transform:)(&v9, &unk_30C368, v4, v5, v6, v7);
}

Swift::Void __swiftcall RCDataContainer.namespaceDataDidUpdate(manager:from:to:)(BRCConfigurationManager *manager, BRCNamespaceData *from, BRCNamespaceData *to)
{
  sub_192D7C(to);
}

void sub_1906F0(_QWORD *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  NSArray v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain(*a1);
    v4.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v4.super.isa = 0;
  }
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setObject:forKey:", v4.super.isa, v5);
  swift_unknownObjectRelease(v4.super.isa);

}

void NSUserDefaults.rcDataContainerWatchedKeyPaths.setter(uint64_t a1)
{
  void *v1;
  NSArray v3;
  id v4;

  if (*(_QWORD *)(a1 + 16))
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
  else
    v3.super.isa = 0;
  swift_bridgeObjectRelease(a1);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setObject:forKey:", v3.super.isa, v4);
  swift_unknownObjectRelease(v3.super.isa);

}

_QWORD *sub_190830(uint64_t a1)
{
  int64_t v2;
  _QWORD *v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[32];
  _QWORD *v14;

  v2 = *(_QWORD *)(a1 + 16);
  v14 = _swiftEmptyArrayStorage;
  sub_185F84(0, v2, 0);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (i = a1 + 32; ; i += 32)
    {
      sub_17666C(i, (uint64_t)v13);
      if (!swift_dynamicCast(&v11, v13, (char *)&type metadata for Any + 8, &type metadata for String, 6))break;
      v5 = v11;
      v6 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      {
        sub_185F84(0, v3[2] + 1, 1);
        v3 = v14;
      }
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
      {
        sub_185F84(v7 > 1, v8 + 1, 1);
        v3 = v14;
      }
      v3[2] = v8 + 1;
      v9 = &v3[2 * v8];
      v9[4] = v5;
      v9[5] = v6;
      if (!--v2)
        return v3;
    }
    v11 = 0;
    v12 = 0;
    swift_release(v3);
    swift_bridgeObjectRelease(v12);
    return 0;
  }
  return v3;
}

uint64_t (*NSUserDefaults.rcDataContainerWatchedKeyPaths.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  void *v1;
  NSString v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;

  a1[1] = v1;
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v1, "arrayForKey:", v3);

  if (!v4
    || (v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, (char *)&type metadata for Any + 8),
        v4,
        v6 = sub_190830(v5),
        swift_bridgeObjectRelease(v5),
        !v6))
  {
    swift_bridgeObjectRelease(0);
    v6 = _swiftEmptyArrayStorage;
  }
  *a1 = v6;
  return sub_190A38;
}

uint64_t sub_190A38(_QWORD *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  NSArray v5;
  void *v6;
  NSString v7;
  void *v8;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  if ((a2 & 1) != 0)
  {
    if (v4)
    {
      swift_bridgeObjectRetain(*a1);
      v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v3);
    }
    else
    {
      v5.super.isa = 0;
    }
    v6 = (void *)a1[1];
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "setObject:forKey:", v5.super.isa, v7);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    if (v4)
      v5.super.isa = Array._bridgeToObjectiveC()().super.isa;
    else
      v5.super.isa = 0;
    v8 = (void *)a1[1];
    swift_bridgeObjectRelease(v3);
    v7 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "setObject:forKey:", v5.super.isa, v7);
  }

  return swift_unknownObjectRelease(v5.super.isa);
}

Class sub_190B48(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSDictionary v5;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v4 = v1(v3);
  swift_release(v2);
  if (v4)
  {
    v5.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5.super.isa = 0;
  }
  return v5.super.isa;
}

uint64_t sub_190BBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_190BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_30BFA4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_16D788;
  v5[13] = a1;
  v5[14] = a2;
  return swift_task_switch(sub_18FD24, 0, 0);
}

uint64_t sub_190C30(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v6 = type metadata accessor for ReadingHistoryDay(0);
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  __chkstk_darwin(v6);
  v55 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for Date(0);
  v54 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v12 = a1;
  else
    v12 = *(_QWORD *)(*v3 + 24);
  sub_16B968((uint64_t *)&unk_30C410);
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v11, v12, a2);
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
  {
    v44 = v11;
LABEL_45:
    result = swift_release(v44);
    *v3 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v49 = v3;
  v50 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v53 = v11;
  result = swift_retain(v11);
  v21 = 0;
  v48 = a2;
  v22 = 16;
  if ((a2 & 1) != 0)
    v22 = 32;
  v52 = v22;
  v23 = v22;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v26 = v25 | (v21 << 6);
      goto LABEL_27;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v27 >= v50)
    {
      v45 = v53;
      swift_release(v53);
      v3 = v49;
      v28 = v51;
      if ((v48 & 1) != 0)
      {
LABEL_40:
        v46 = 1 << *(_BYTE *)(v45 + 32);
        if (v46 >= 64)
          bzero(v28, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v28 = -1 << v46;
        *(_QWORD *)(v45 + 16) = 0;
      }
LABEL_44:
      v44 = v45;
      goto LABEL_45;
    }
    v28 = v51;
    v29 = v51[v27];
    ++v21;
    if (!v29)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v50)
        goto LABEL_37;
      v29 = v51[v21];
      if (!v29)
        break;
    }
LABEL_26:
    v18 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_27:
    v31 = v53;
    v32 = *(_QWORD *)(v54 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v54 + v23))(v10, *(_QWORD *)(v53 + 48) + v32 * v26, v8);
    v33 = *(_QWORD *)(v31 + 56);
    v34 = *(_QWORD *)(v56 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v56 + v23))(v55, v33 + v34 * v26, v57);
    v35 = *(_QWORD *)(v14 + 40);
    v36 = sub_16BDB8(&qword_30BED8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
    v37 = -1 << *(_BYTE *)(v14 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v19 + 8 * v39);
      }
      while (v43 == -1);
      v24 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v19 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v54 + 32))(*(_QWORD *)(v14 + 48) + v32 * v24, v10, v8);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v56 + 32))(*(_QWORD *)(v14 + 56) + v34 * v24, v55, v57);
    ++*(_QWORD *)(v14 + 16);
  }
  v30 = v27 + 2;
  if (v30 >= v50)
  {
LABEL_37:
    v45 = v53;
    swift_release(v53);
    v3 = v49;
    if ((v48 & 1) != 0)
      goto LABEL_40;
    goto LABEL_44;
  }
  v29 = v51[v30];
  if (v29)
  {
    v21 = v30;
    goto LABEL_26;
  }
  while (1)
  {
    v21 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v21 >= v50)
      goto LABEL_37;
    v29 = v51[v21];
    ++v30;
    if (v29)
      goto LABEL_26;
  }
LABEL_47:
  __break(1u);
  return result;
}

Swift::Int sub_191028(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  Swift::Int *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  Swift::Int v9;
  Swift::Int result;
  Swift::Int v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  Swift::UInt v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  uint64_t v40[9];

  v3 = v2;
  v6 = type metadata accessor for Achievement(0);
  v38 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_16B968(&qword_30C360);
  v39 = a2;
  result = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v35 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v37 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v36 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v20 = v19 | (v12 << 6);
      }
      else
      {
        v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        result = (Swift::Int)v37;
        if (v21 >= v36)
          goto LABEL_36;
        v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          v12 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_36;
          v22 = v37[v12];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_36:
              if ((v39 & 1) == 0)
              {
                result = swift_release(v9);
                v3 = v35;
                goto LABEL_43;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v34;
              v3 = v35;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v12 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_45;
                if (v12 >= v36)
                  goto LABEL_36;
                v22 = v37[v12];
                ++v23;
                if (v22)
                  goto LABEL_23;
              }
            }
            v12 = v23;
          }
        }
LABEL_23:
        v16 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      v24 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 48) + v20);
      v25 = *(_QWORD *)(v38 + 72);
      v26 = *(_QWORD *)(v9 + 56) + v25 * v20;
      if ((v39 & 1) != 0)
        sub_189D1C(v26, (uint64_t)v8);
      else
        sub_193184(v26, (uint64_t)v8);
      Hasher.init(_seed:)(v40, *(_QWORD *)(v11 + 40));
      Hasher._combine(_:)(v24);
      result = Hasher._finalize()();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_BYTE *)(*(_QWORD *)(v11 + 48) + v18) = v24;
      result = sub_189D1C((uint64_t)v8, *(_QWORD *)(v11 + 56) + v25 * v18);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release(v9);
LABEL_43:
  *v3 = v11;
  return result;
}

Swift::Int sub_191354(uint64_t a1, uint64_t a2)
{
  Swift::Int *v2;
  Swift::Int *v3;
  Swift::Int v5;
  uint64_t v6;
  Swift::Int result;
  Swift::Int v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  Swift::UInt v27;
  void *v28;
  id v29;
  uint64_t v30;
  Swift::Int *v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_16B968(&qword_30C400);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 0;
    v33 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v31 = v3;
    v32 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_36;
        v21 = v33[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_36;
          v21 = v33[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_36:
              if ((a2 & 1) == 0)
              {
                result = swift_release(v5);
                v3 = v31;
                goto LABEL_43;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v33 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_45;
                if (v9 >= v32)
                  goto LABEL_36;
                v21 = v33[v9];
                ++v22;
                if (v21)
                  goto LABEL_33;
              }
            }
            v9 = v22;
          }
        }
LABEL_33:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v27 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v19);
      v28 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        v29 = v28;
      Hasher.init(_seed:)(v34, *(_QWORD *)(v8 + 40));
      Hasher._combine(_:)(v27);
      result = Hasher._finalize()();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
LABEL_43:
  *v3 = v8;
  return result;
}

uint64_t sub_19161C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  _QWORD v37[9];
  _OWORD v38[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_16B968(&qword_30C340);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain(v5);
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v19 >= v35)
          goto LABEL_37;
        v20 = v36[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v35)
            goto LABEL_37;
          v20 = v36[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v35)
            {
LABEL_37:
              swift_release(v5);
              v3 = v34;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v36[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_44;
                if (v14 >= v35)
                  goto LABEL_37;
                v20 = v36[v14];
                ++v21;
                if (v20)
                  goto LABEL_24;
              }
            }
            v14 = v21;
          }
        }
LABEL_24:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((a2 & 1) != 0)
      {
        sub_17992C(v25, v38);
      }
      else
      {
        sub_17666C((uint64_t)v25, (uint64_t)v38);
        swift_bridgeObjectRetain(v23);
      }
      Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v37, v24, v23);
      result = Hasher._finalize()();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_17992C(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

uint64_t sub_191918(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;

  v3 = v2;
  v6 = type metadata accessor for Date(0);
  v56 = *(_QWORD *)(v6 - 8);
  v57 = v6;
  __chkstk_darwin(v6);
  v55 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for UUID(0);
  v54 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v12 = a1;
  else
    v12 = *(_QWORD *)(*v3 + 24);
  sub_16B968((uint64_t *)&unk_30C370);
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v11, v12, a2);
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
  {
    v44 = v11;
LABEL_45:
    result = swift_release(v44);
    *v3 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v49 = v3;
  v50 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v53 = v11;
  result = swift_retain(v11);
  v21 = 0;
  v48 = a2;
  v22 = 16;
  if ((a2 & 1) != 0)
    v22 = 32;
  v52 = v22;
  v23 = v22;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v26 = v25 | (v21 << 6);
      goto LABEL_27;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v27 >= v50)
    {
      v45 = v53;
      swift_release(v53);
      v3 = v49;
      v28 = v51;
      if ((v48 & 1) != 0)
      {
LABEL_40:
        v46 = 1 << *(_BYTE *)(v45 + 32);
        if (v46 >= 64)
          bzero(v28, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v28 = -1 << v46;
        *(_QWORD *)(v45 + 16) = 0;
      }
LABEL_44:
      v44 = v45;
      goto LABEL_45;
    }
    v28 = v51;
    v29 = v51[v27];
    ++v21;
    if (!v29)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v50)
        goto LABEL_37;
      v29 = v51[v21];
      if (!v29)
        break;
    }
LABEL_26:
    v18 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_27:
    v31 = v53;
    v32 = *(_QWORD *)(v54 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v54 + v23))(v10, *(_QWORD *)(v53 + 48) + v32 * v26, v8);
    v33 = *(_QWORD *)(v31 + 56);
    v34 = *(_QWORD *)(v56 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v56 + v23))(v55, v33 + v34 * v26, v57);
    v35 = *(_QWORD *)(v14 + 40);
    v36 = sub_16BDB8(&qword_30BD68, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
    v37 = -1 << *(_BYTE *)(v14 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v19 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v19 + 8 * v39);
      }
      while (v43 == -1);
      v24 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v19 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v54 + 32))(*(_QWORD *)(v14 + 48) + v32 * v24, v10, v8);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v56 + 32))(*(_QWORD *)(v14 + 56) + v34 * v24, v55, v57);
    ++*(_QWORD *)(v14 + 16);
  }
  v30 = v27 + 2;
  if (v30 >= v50)
  {
LABEL_37:
    v45 = v53;
    swift_release(v53);
    v3 = v49;
    if ((v48 & 1) != 0)
      goto LABEL_40;
    goto LABEL_44;
  }
  v29 = v51[v30];
  if (v29)
  {
    v21 = v30;
    goto LABEL_26;
  }
  while (1)
  {
    v21 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v21 >= v50)
      goto LABEL_37;
    v29 = v51[v21];
    ++v30;
    if (v29)
      goto LABEL_26;
  }
LABEL_47:
  __break(1u);
  return result;
}

char *sub_191D10()
{
  return sub_1922DC((uint64_t (*)(_QWORD))&type metadata accessor for ReadingHistoryDay, (uint64_t (*)(_QWORD))&type metadata accessor for Date, (uint64_t *)&unk_30C410);
}

void *sub_191D2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for Achievement(0);
  v25 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_16B968(&qword_30C360);
  v5 = *v0;
  v6 = static _DictionaryStorage.copy(original:)(*v0);
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release(v5);
LABEL_28:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v9 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v9 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
    v20 = *(_QWORD *)(v25 + 72) * v18;
    sub_193184(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_189D1C((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release(v5);
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v9 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v9 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_191F3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_16B968(&qword_30C400);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1920DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_16B968(&qword_30C340);
  v2 = *v0;
  v3 = static _DictionaryStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release(v2);
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_17666C(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_17992C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain(v18);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release(v2);
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

